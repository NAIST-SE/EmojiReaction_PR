NetSys/bess,https://github.com/NetSys/bess,22,2016-02-29T20:26:29Z,2016-03-01T06:57:26Z,2016-03-01T06:57:33Z,MERGED,True,19,9,2,https://github.com/apanda,Fix problems with native apps,6,[],https://github.com/NetSys/bess/pull/22,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/22,"Mempool naming has changed this tries to fix that problem, and fix the build.","Mempool naming has changed this tries to fix that problem, and fix the build.",True,{}
NetSys/bess,https://github.com/NetSys/bess,22,2016-02-29T20:26:29Z,2016-03-01T06:57:26Z,2016-03-01T06:57:33Z,MERGED,True,19,9,2,https://github.com/apanda,Fix problems with native apps,6,[],https://github.com/NetSys/bess/pull/22,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/22#issuecomment-190571465,"Mempool naming has changed this tries to fix that problem, and fix the build.","I think the code should try from 1k to 512k, not the other way around. DPDK has a bug that a mempool name lingers even if its allocation has failed. For example if 512k alloc failed but the next trial 256k worked, then there would be both pframe0_512k and pframe0_256k, but the latter one should be used.",True,{}
NetSys/bess,https://github.com/NetSys/bess,22,2016-02-29T20:26:29Z,2016-03-01T06:57:26Z,2016-03-01T06:57:33Z,MERGED,True,19,9,2,https://github.com/apanda,Fix problems with native apps,6,[],https://github.com/NetSys/bess/pull/22,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/22#issuecomment-190571916,"Mempool naming has changed this tries to fix that problem, and fix the build.","Ah, I see. Will fix.

On Feb 29, 2016, at 10:34 PM, Sangjin Han notifications@github.com wrote:
I think the code should try from 1k to 512k, not the other way around. DPDK has a bug that a mempool name lingers even if its allocation has failed. For example if 512k alloc failed but the next trial 256k worked, then there would be both pframe0_512k and pframe0_256k, but the latter one should be used.
—
Reply to this email directly or view it on GitHub.",True,{}
NetSys/bess,https://github.com/NetSys/bess,22,2016-02-29T20:26:29Z,2016-03-01T06:57:26Z,2016-03-01T06:57:33Z,MERGED,True,19,9,2,https://github.com/apanda,Fix problems with native apps,6,[],https://github.com/NetSys/bess/pull/22,https://github.com/apanda,4,https://github.com/NetSys/bess/pull/22#issuecomment-190574286,"Mempool naming has changed this tries to fix that problem, and fix the build.","Done, also it is from 16K to 512K (your code doesn't go below that).",True,{}
NetSys/bess,https://github.com/NetSys/bess,22,2016-02-29T20:26:29Z,2016-03-01T06:57:26Z,2016-03-01T06:57:33Z,MERGED,True,19,9,2,https://github.com/apanda,Fix problems with native apps,6,[],https://github.com/NetSys/bess/pull/22,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/22#issuecomment-190582636,"Mempool naming has changed this tries to fix that problem, and fix the build.",Applied. Thanks.,True,{}
NetSys/bess,https://github.com/NetSys/bess,24,2016-04-23T23:55:32Z,2016-04-26T04:13:31Z,2016-04-26T04:13:41Z,MERGED,True,95,26,11,https://github.com/MurphyMc,Multi-instance features and minor bessctl improvements,8,[],https://github.com/NetSys/bess/pull/24,https://github.com/MurphyMc,1,https://github.com/NetSys/bess/pull/24,"This primarily adds a few features to bessd to allow supporting multiple instances.  It also makes some tweaks to documentation/messages, fixes a bessctl bug, and adds a simple bessctl command.","This primarily adds a few features to bessd to allow supporting multiple instances.  It also makes some tweaks to documentation/messages, fixes a bessctl bug, and adds a simple bessctl command.",True,{}
NetSys/bess,https://github.com/NetSys/bess,24,2016-04-23T23:55:32Z,2016-04-26T04:13:31Z,2016-04-26T04:13:41Z,MERGED,True,95,26,11,https://github.com/MurphyMc,Multi-instance features and minor bessctl improvements,8,[],https://github.com/NetSys/bess/pull/24,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/24#issuecomment-214607773,"This primarily adds a few features to bessd to allow supporting multiple instances.  It also makes some tweaks to documentation/messages, fixes a bessctl bug, and adds a simple bessctl command.",Applied. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,25,2016-05-17T07:10:36Z,2016-05-18T03:19:05Z,2016-05-18T03:19:12Z,MERGED,True,92,68,8,https://github.com/bknuggetsfan,"Add support for 1. update (r+w) fields, and 2. field access for modules",2,[],https://github.com/NetSys/bess/pull/25,https://github.com/bknuggetsfan,1,https://github.com/NetSys/bess/pull/25,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,25,2016-05-17T07:10:36Z,2016-05-18T03:19:05Z,2016-05-18T03:19:12Z,MERGED,True,92,68,8,https://github.com/bknuggetsfan,"Add support for 1. update (r+w) fields, and 2. field access for modules",2,[],https://github.com/NetSys/bess/pull/25,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/25#issuecomment-219915099,,Applied. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,26,2016-05-18T20:06:31Z,2016-05-19T02:29:20Z,2016-05-19T02:29:27Z,MERGED,True,12,2,2,https://github.com/bknuggetsfan,get_metadata_offset returns -1 if field not read downstream,3,[],https://github.com/NetSys/bess/pull/26,https://github.com/bknuggetsfan,1,https://github.com/NetSys/bess/pull/26,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,26,2016-05-18T20:06:31Z,2016-05-19T02:29:20Z,2016-05-19T02:29:27Z,MERGED,True,12,2,2,https://github.com/bknuggetsfan,get_metadata_offset returns -1 if field not read downstream,3,[],https://github.com/NetSys/bess/pull/26,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/26#issuecomment-220212280,,Applied. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,29,2016-06-23T01:53:32Z,2016-11-08T00:48:51Z,2016-11-08T00:48:51Z,CLOSED,False,26,23,2,https://github.com/tootoonchian,Add python 3 support to libbess-python,1,['enhancement'],https://github.com/NetSys/bess/pull/29,https://github.com/tootoonchian,1,https://github.com/NetSys/bess/pull/29,Retains python 2 compatibility.,Retains python 2 compatibility.,True,{}
NetSys/bess,https://github.com/NetSys/bess,29,2016-06-23T01:53:32Z,2016-11-08T00:48:51Z,2016-11-08T00:48:51Z,CLOSED,False,26,23,2,https://github.com/tootoonchian,Add python 3 support to libbess-python,1,['enhancement'],https://github.com/NetSys/bess/pull/29,https://github.com/tootoonchian,2,https://github.com/NetSys/bess/pull/29#issuecomment-229862431,Retains python 2 compatibility.,Commit b2a4a03 breaks this patch (long doesn't exist in Python 3). Let me look into a way to resolve it first...,True,{}
NetSys/bess,https://github.com/NetSys/bess,29,2016-06-23T01:53:32Z,2016-11-08T00:48:51Z,2016-11-08T00:48:51Z,CLOSED,False,26,23,2,https://github.com/tootoonchian,Add python 3 support to libbess-python,1,['enhancement'],https://github.com/NetSys/bess/pull/29,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/29#issuecomment-259011575,Retains python 2 compatibility.,Will revisit this issue when Python 3 support is necessary,True,{}
NetSys/bess,https://github.com/NetSys/bess,30,2016-06-23T02:22:29Z,2016-06-28T23:06:23Z,2016-06-30T23:24:13Z,MERGED,True,35,25,1,https://github.com/tootoonchian,Add support for DPDK virtual PMDs,1,[],https://github.com/NetSys/bess/pull/30,https://github.com/tootoonchian,1,https://github.com/NetSys/bess/pull/30,"Example usage from bessctl:
add port PMD eth_bond0 
vdev='eth_bond0,mode=0,socket_id=0,slave=0000:03:00.0,slave=0000:03:00.1'
add port PMD eth_ring0 
vdev='eth_ring0,nodeaction=r0:0:CREATE'","Example usage from bessctl:
add port PMD eth_bond0 
vdev='eth_bond0,mode=0,socket_id=0,slave=0000:03:00.0,slave=0000:03:00.1'
add port PMD eth_ring0 
vdev='eth_ring0,nodeaction=r0:0:CREATE'",True,{}
NetSys/bess,https://github.com/NetSys/bess,30,2016-06-23T02:22:29Z,2016-06-28T23:06:23Z,2016-06-30T23:24:13Z,MERGED,True,35,25,1,https://github.com/tootoonchian,Add support for DPDK virtual PMDs,1,[],https://github.com/NetSys/bess/pull/30,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/30#issuecomment-229210738,"Example usage from bessctl:
add port PMD eth_bond0 
vdev='eth_bond0,mode=0,socket_id=0,slave=0000:03:00.0,slave=0000:03:00.1'
add port PMD eth_ring0 
vdev='eth_ring0,nodeaction=r0:0:CREATE'",Applied. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,32,2016-07-22T01:08:15Z,2016-07-25T00:31:43Z,2016-07-25T00:31:43Z,CLOSED,False,4115,1001,69,https://github.com/bknuggetsfan,Additional metadata features,94,[],https://github.com/NetSys/bess/pull/32,https://github.com/bknuggetsfan,1,https://github.com/NetSys/bess/pull/32,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,32,2016-07-22T01:08:15Z,2016-07-25T00:31:43Z,2016-07-25T00:31:43Z,CLOSED,False,4115,1001,69,https://github.com/bknuggetsfan,Additional metadata features,94,[],https://github.com/NetSys/bess/pull/32,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/32#issuecomment-234480003,,Oh it's too huge... could you rebase it to the develop branch?,True,{}
NetSys/bess,https://github.com/NetSys/bess,32,2016-07-22T01:08:15Z,2016-07-25T00:31:43Z,2016-07-25T00:31:43Z,CLOSED,False,4115,1001,69,https://github.com/bknuggetsfan,Additional metadata features,94,[],https://github.com/NetSys/bess/pull/32,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/32#issuecomment-234813363,,Done with #33,True,{}
NetSys/bess,https://github.com/NetSys/bess,33,2016-07-22T19:08:05Z,2016-07-25T00:31:23Z,2016-07-25T00:31:24Z,CLOSED,False,343,120,9,https://github.com/bknuggetsfan,Updated metadata features,6,[],https://github.com/NetSys/bess/pull/33,https://github.com/bknuggetsfan,1,https://github.com/NetSys/bess/pull/33,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,33,2016-07-22T19:08:05Z,2016-07-25T00:31:23Z,2016-07-25T00:31:24Z,CLOSED,False,343,120,9,https://github.com/bknuggetsfan,Updated metadata features,6,[],https://github.com/NetSys/bess/pull/33,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/33#issuecomment-234813343,,Merged. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,38,2016-10-12T20:58:40Z,2016-10-13T05:05:45Z,2016-10-13T05:05:54Z,MERGED,True,1,0,1,https://github.com/changlan,build script should not return 0 when it fails,1,[],https://github.com/NetSys/bess/pull/38,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/38,This minor fix is useful for continuous integration.,This minor fix is useful for continuous integration.,True,{}
NetSys/bess,https://github.com/NetSys/bess,38,2016-10-12T20:58:40Z,2016-10-13T05:05:45Z,2016-10-13T05:05:54Z,MERGED,True,1,0,1,https://github.com/changlan,build script should not return 0 when it fails,1,[],https://github.com/NetSys/bess/pull/38,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/38#issuecomment-253415452,This minor fix is useful for continuous integration.,"Great, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,39,2016-10-13T20:15:49Z,2016-10-13T21:16:01Z,2016-10-13T21:16:08Z,MERGED,True,12,1,2,https://github.com/changlan,add CI support,2,[],https://github.com/NetSys/bess/pull/39,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/39,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,39,2016-10-13T20:15:49Z,2016-10-13T21:16:01Z,2016-10-13T21:16:08Z,MERGED,True,12,1,2,https://github.com/changlan,add CI support,2,[],https://github.com/NetSys/bess/pull/39,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/39#issuecomment-253641217,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,42,2016-10-14T20:52:54Z,2016-10-15T19:12:22Z,2016-10-15T19:12:29Z,MERGED,True,9730,5370,70,https://github.com/melvinw,port non-metadata modules to c++,28,[],https://github.com/NetSys/bess/pull/42,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/42,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,42,2016-10-14T20:52:54Z,2016-10-15T19:12:22Z,2016-10-15T19:12:29Z,MERGED,True,9730,5370,70,https://github.com/melvinw,port non-metadata modules to c++,28,[],https://github.com/NetSys/bess/pull/42,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/42#issuecomment-254004719,,"Merged, Thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,43,2016-10-15T01:00:54Z,2016-10-17T04:10:33Z,2016-10-17T04:14:18Z,MERGED,True,22,9,2,https://github.com/changlan,update gcc version to 5 on travis,2,[],https://github.com/NetSys/bess/pull/43,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/43,Make sure Travis works for the C++ branch,Make sure Travis works for the C++ branch,True,{}
NetSys/bess,https://github.com/NetSys/bess,43,2016-10-15T01:00:54Z,2016-10-17T04:10:33Z,2016-10-17T04:14:18Z,MERGED,True,22,9,2,https://github.com/changlan,update gcc version to 5 on travis,2,[],https://github.com/NetSys/bess/pull/43,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/43#issuecomment-253967386,Make sure Travis works for the C++ branch,"Would it be possible for travis to test building BESS with both gcc 4 and 5? We want to make sure BESS builds on the newest gcc, but at the same time we want to keep compatibility with the gcc version (4.7?)  used by Ubuntu Trusty.",True,{}
NetSys/bess,https://github.com/NetSys/bess,43,2016-10-15T01:00:54Z,2016-10-17T04:10:33Z,2016-10-17T04:14:18Z,MERGED,True,22,9,2,https://github.com/changlan,update gcc version to 5 on travis,2,[],https://github.com/NetSys/bess/pull/43,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/43#issuecomment-253969762,Make sure Travis works for the C++ branch,"Yes. GCC 4 support is added. The reason I upgrade to GCC 5 is that the current build does not compile with GCC 4. But if you want to keep compatibility with default GCC on trusty, we can fix the code in a separate issue.
By the way, the current build issue of GCC 4 is related to this bug report: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=60872",True,{}
NetSys/bess,https://github.com/NetSys/bess,43,2016-10-15T01:00:54Z,2016-10-17T04:10:33Z,2016-10-17T04:14:18Z,MERGED,True,22,9,2,https://github.com/changlan,update gcc version to 5 on travis,2,[],https://github.com/NetSys/bess/pull/43,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/43#issuecomment-254109033,Make sure Travis works for the C++ branch,"Merged, thanks! 1002c1c and eee5825 should fix the build issues on gcc 4.",True,{}
NetSys/bess,https://github.com/NetSys/bess,44,2016-10-16T22:53:03Z,2016-10-17T02:50:41Z,2016-10-18T21:47:11Z,MERGED,True,1833,12,12,https://github.com/melvinw,port modules with metadata to c++,1,[],https://github.com/NetSys/bess/pull/44,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/44,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,44,2016-10-16T22:53:03Z,2016-10-17T02:50:41Z,2016-10-18T21:47:11Z,MERGED,True,1833,12,12,https://github.com/melvinw,port modules with metadata to c++,1,[],https://github.com/NetSys/bess/pull/44,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/44#issuecomment-254100963,,"Applied, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,45,2016-10-17T03:54:22Z,2016-10-17T04:36:59Z,2016-12-08T02:29:51Z,CLOSED,False,2,1,2,https://github.com/barath,Build fixes to address:,1,[],https://github.com/NetSys/bess/pull/45,https://github.com/barath,1,https://github.com/NetSys/bess/pull/45,"Missing log.h in module.h for log_err() symbol
Added -mavx compile flag to avoid build errors on AVX code.","Missing log.h in module.h for log_err() symbol
Added -mavx compile flag to avoid build errors on AVX code.",True,{}
NetSys/bess,https://github.com/NetSys/bess,45,2016-10-17T03:54:22Z,2016-10-17T04:36:59Z,2016-12-08T02:29:51Z,CLOSED,False,2,1,2,https://github.com/barath,Build fixes to address:,1,[],https://github.com/NetSys/bess/pull/45,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/45#issuecomment-254110958,"Missing log.h in module.h for log_err() symbol
Added -mavx compile flag to avoid build errors on AVX code.","Thanks! Non-AVX machines should not build BESS with AVX instructions. If a machine does support AVX, -mavx should have been implied by -march=native. I think the build error was caused due to missing header file utils/simd.h. 72bff87 should fix this issue.",True,{}
NetSys/bess,https://github.com/NetSys/bess,46,2016-10-17T04:12:16Z,2016-10-17T04:49:07Z,2016-10-18T21:47:05Z,MERGED,True,1361,13,5,https://github.com/melvinw,port drivers to c++,5,[],https://github.com/NetSys/bess/pull/46,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/46,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,46,2016-10-17T04:12:16Z,2016-10-17T04:49:07Z,2016-10-18T21:47:05Z,MERGED,True,1361,13,5,https://github.com/melvinw,port drivers to c++,5,[],https://github.com/NetSys/bess/pull/46,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/46#issuecomment-254111961,,"Thanks, applied!",True,{}
NetSys/bess,https://github.com/NetSys/bess,46,2016-10-17T04:12:16Z,2016-10-17T04:49:07Z,2016-10-18T21:47:05Z,MERGED,True,1361,13,5,https://github.com/melvinw,port drivers to c++,5,[],https://github.com/NetSys/bess/pull/46,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/46#issuecomment-254112036,,"You can use just ""{}"" as a member initializer instead of {0} or {{0}}, regardless of member types.",True,{}
NetSys/bess,https://github.com/NetSys/bess,46,2016-10-17T04:12:16Z,2016-10-17T04:49:07Z,2016-10-18T21:47:05Z,MERGED,True,1361,13,5,https://github.com/melvinw,port drivers to c++,5,[],https://github.com/NetSys/bess/pull/46,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/46#issuecomment-254112779,,Gotcha,True,{}
NetSys/bess,https://github.com/NetSys/bess,47,2016-10-17T18:29:32Z,2016-10-17T18:49:00Z,2016-10-17T18:50:38Z,MERGED,True,6,0,1,https://github.com/changlan,Unit test in Travis CI,3,[],https://github.com/NetSys/bess/pull/47,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/47,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,47,2016-10-17T18:29:32Z,2016-10-17T18:49:00Z,2016-10-17T18:50:38Z,MERGED,True,6,0,1,https://github.com/changlan,Unit test in Travis CI,3,[],https://github.com/NetSys/bess/pull/47,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/47#issuecomment-254297866,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,48,2016-10-17T22:13:35Z,2016-10-17T22:38:59Z,2016-10-21T22:10:00Z,MERGED,True,110,121,3,https://github.com/barath,Migrates to use gflags for command-line argument processing and minimal glog logging usage,5,[],https://github.com/NetSys/bess/pull/48,https://github.com/barath,1,https://github.com/NetSys/bess/pull/48,"Requires the installation of the following packages (now default in dev.yml):
- libgflags2v5
- libgflags-dev
- libgoogle-glog-dev
- libgoogle-glog0v5
Does not yet extensively use glog -- this will be added in future pull requests.","Requires the installation of the following packages (now default in dev.yml):
- libgflags2v5
- libgflags-dev
- libgoogle-glog-dev
- libgoogle-glog0v5
Does not yet extensively use glog -- this will be added in future pull requests.",True,{}
NetSys/bess,https://github.com/NetSys/bess,48,2016-10-17T22:13:35Z,2016-10-17T22:38:59Z,2016-10-21T22:10:00Z,MERGED,True,110,121,3,https://github.com/barath,Migrates to use gflags for command-line argument processing and minimal glog logging usage,5,[],https://github.com/NetSys/bess/pull/48,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/48#issuecomment-254351617,"Requires the installation of the following packages (now default in dev.yml):
- libgflags2v5
- libgflags-dev
- libgoogle-glog-dev
- libgoogle-glog0v5
Does not yet extensively use glog -- this will be added in future pull requests.",Minor nitpicking: indentations in this PR do not follow the style of existing code.,True,{}
NetSys/bess,https://github.com/NetSys/bess,48,2016-10-17T22:13:35Z,2016-10-17T22:38:59Z,2016-10-21T22:10:00Z,MERGED,True,110,121,3,https://github.com/barath,Migrates to use gflags for command-line argument processing and minimal glog logging usage,5,[],https://github.com/NetSys/bess/pull/48,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/48#issuecomment-254351773,"Requires the installation of the following packages (now default in dev.yml):
- libgflags2v5
- libgflags-dev
- libgoogle-glog-dev
- libgoogle-glog0v5
Does not yet extensively use glog -- this will be added in future pull requests.",Do we merge b078687? Perhaps we can check __AVX__ in tests/htable.c?,True,{}
NetSys/bess,https://github.com/NetSys/bess,48,2016-10-17T22:13:35Z,2016-10-17T22:38:59Z,2016-10-21T22:10:00Z,MERGED,True,110,121,3,https://github.com/barath,Migrates to use gflags for command-line argument processing and minimal glog logging usage,5,[],https://github.com/NetSys/bess/pull/48,https://github.com/barath,4,https://github.com/NetSys/bess/pull/48#issuecomment-254355466,"Requires the installation of the following packages (now default in dev.yml):
- libgflags2v5
- libgflags-dev
- libgoogle-glog-dev
- libgoogle-glog0v5
Does not yet extensively use glog -- this will be added in future pull requests.",Done.  I removed the Makefile change and added an AVX check to tests/htable.cc,True,{}
NetSys/bess,https://github.com/NetSys/bess,50,2016-10-17T23:37:32Z,2016-10-17T23:45:05Z,2016-10-17T23:49:06Z,MERGED,True,19,0,3,https://github.com/changlan,Install glog and gflags,3,[],https://github.com/NetSys/bess/pull/50,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/50,Fix the build issue on CI,Fix the build issue on CI,True,{}
NetSys/bess,https://github.com/NetSys/bess,50,2016-10-17T23:37:32Z,2016-10-17T23:45:05Z,2016-10-17T23:49:06Z,MERGED,True,19,0,3,https://github.com/changlan,Install glog and gflags,3,[],https://github.com/NetSys/bess/pull/50,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/50#issuecomment-254366765,Fix the build issue on CI,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,51,2016-10-17T23:42:52Z,2016-10-18T00:04:15Z,2016-10-21T22:09:31Z,MERGED,True,17,4,2,https://github.com/barath,Adds build checks for glog and gflags and documents their requirement.,2,[],https://github.com/NetSys/bess/pull/51,https://github.com/barath,1,https://github.com/NetSys/bess/pull/51,Fix #49,Fix #49,True,{}
NetSys/bess,https://github.com/NetSys/bess,51,2016-10-17T23:42:52Z,2016-10-18T00:04:15Z,2016-10-21T22:09:31Z,MERGED,True,17,4,2,https://github.com/barath,Adds build checks for glog and gflags and documents their requirement.,2,[],https://github.com/NetSys/bess/pull/51,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/51#issuecomment-254367249,Fix #49,Do we need both *-dev and the runtime library for glog and gflags? In most cases the *-dev package alone should suffice...,True,{}
NetSys/bess,https://github.com/NetSys/bess,51,2016-10-17T23:42:52Z,2016-10-18T00:04:15Z,2016-10-21T22:09:31Z,MERGED,True,17,4,2,https://github.com/barath,Adds build checks for glog and gflags and documents their requirement.,2,[],https://github.com/NetSys/bess/pull/51,https://github.com/barath,3,https://github.com/NetSys/bess/pull/51#issuecomment-254367548,Fix #49,"You're right -- not absolutely necessary.  I can remove it.
On Mon, Oct 17, 2016 at 4:48 PM, Sangjin Han notifications@github.com
wrote:

Do we need both *-dev and the runtime library for glog and gflags? In most
cases the *-dev package alone should suffice...
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#51 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAk7ekOvQUQcd92T2pbweBdPFuBTwzxKks5q1AlPgaJpZM4KZOjh
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,51,2016-10-17T23:42:52Z,2016-10-18T00:04:15Z,2016-10-21T22:09:31Z,MERGED,True,17,4,2,https://github.com/barath,Adds build checks for glog and gflags and documents their requirement.,2,[],https://github.com/NetSys/bess/pull/51,https://github.com/barath,4,https://github.com/NetSys/bess/pull/51#issuecomment-254367876,Fix #49,Updated to remove extra packages.,True,{}
NetSys/bess,https://github.com/NetSys/bess,51,2016-10-17T23:42:52Z,2016-10-18T00:04:15Z,2016-10-21T22:09:31Z,MERGED,True,17,4,2,https://github.com/barath,Adds build checks for glog and gflags and documents their requirement.,2,[],https://github.com/NetSys/bess/pull/51,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/51#issuecomment-254369753,Fix #49,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,52,2016-10-18T00:02:06Z,2016-10-18T00:09:06Z,2016-10-21T22:09:14Z,MERGED,True,144,155,14,https://github.com/barath,First pass converting logging to glog.,7,[],https://github.com/NetSys/bess/pull/52,https://github.com/barath,1,https://github.com/NetSys/bess/pull/52,This pass leaves some existing logging as is for future restructuring.,This pass leaves some existing logging as is for future restructuring.,True,{}
NetSys/bess,https://github.com/NetSys/bess,53,2016-10-18T07:33:15Z,2016-10-18T17:43:23Z,2016-10-21T22:09:07Z,MERGED,True,66,4,5,https://github.com/barath,Initial gtest integration,6,[],https://github.com/NetSys/bess/pull/53,https://github.com/barath,1,https://github.com/NetSys/bess/pull/53,This branch adds gtest-based unit test support and includes a simple test of the time routines as a demonstration.,This branch adds gtest-based unit test support and includes a simple test of the time routines as a demonstration.,True,{}
NetSys/bess,https://github.com/NetSys/bess,53,2016-10-18T07:33:15Z,2016-10-18T17:43:23Z,2016-10-21T22:09:07Z,MERGED,True,66,4,5,https://github.com/barath,Initial gtest integration,6,[],https://github.com/NetSys/bess/pull/53,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/53#issuecomment-254575389,This branch adds gtest-based unit test support and includes a simple test of the time routines as a demonstration.,Travis file needs to be updated too.,True,{}
NetSys/bess,https://github.com/NetSys/bess,53,2016-10-18T07:33:15Z,2016-10-18T17:43:23Z,2016-10-21T22:09:07Z,MERGED,True,66,4,5,https://github.com/barath,Initial gtest integration,6,[],https://github.com/NetSys/bess/pull/53,https://github.com/barath,3,https://github.com/NetSys/bess/pull/53#issuecomment-254578704,This branch adds gtest-based unit test support and includes a simple test of the time routines as a demonstration.,Updated pull request.,True,{}
NetSys/bess,https://github.com/NetSys/bess,53,2016-10-18T07:33:15Z,2016-10-18T17:43:23Z,2016-10-21T22:09:07Z,MERGED,True,66,4,5,https://github.com/barath,Initial gtest integration,6,[],https://github.com/NetSys/bess/pull/53,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/53#issuecomment-254583917,This branch adds gtest-based unit test support and includes a simple test of the time routines as a demonstration.,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,54,2016-10-18T21:03:39Z,2016-10-18T21:43:39Z,2016-10-18T21:45:25Z,MERGED,True,784,791,10,https://github.com/melvinw,port/ditch some home-grown data structures,4,[],https://github.com/NetSys/bess/pull/54,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/54,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,54,2016-10-18T21:03:39Z,2016-10-18T21:43:39Z,2016-10-18T21:45:25Z,MERGED,True,784,791,10,https://github.com/melvinw,port/ditch some home-grown data structures,4,[],https://github.com/NetSys/bess/pull/54,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/54#issuecomment-254648487,,One of the reasons why we switched to C++! 👍,True,{}
NetSys/bess,https://github.com/NetSys/bess,55,2016-10-19T00:30:53Z,2016-10-19T20:32:47Z,2016-10-19T20:32:53Z,MERGED,True,12,4,1,https://github.com/melvinw,misc. fixes to flowgen module,3,[],https://github.com/NetSys/bess/pull/55,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/55,This patch fixes some minor style nits and a segfault.,This patch fixes some minor style nits and a segfault.,True,{}
NetSys/bess,https://github.com/NetSys/bess,55,2016-10-19T00:30:53Z,2016-10-19T20:32:47Z,2016-10-19T20:32:53Z,MERGED,True,12,4,1,https://github.com/melvinw,misc. fixes to flowgen module,3,[],https://github.com/NetSys/bess/pull/55,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/55#issuecomment-254932026,This patch fixes some minor style nits and a segfault.,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,56,2016-10-19T19:02:10Z,2016-10-19T20:33:20Z,2016-10-22T07:54:51Z,MERGED,True,1,0,1,https://github.com/melvinw,join worker threads before exiting on kill,1,[],https://github.com/NetSys/bess/pull/56,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/56,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,57,2016-10-20T05:02:10Z,2016-10-20T12:57:00Z,2016-10-20T18:39:07Z,MERGED,True,81,128,4,https://github.com/melvinw,fix up metadata,4,[],https://github.com/NetSys/bess/pull/57,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/57,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,57,2016-10-20T05:02:10Z,2016-10-20T12:57:00Z,2016-10-20T18:39:07Z,MERGED,True,81,128,4,https://github.com/melvinw,fix up metadata,4,[],https://github.com/NetSys/bess/pull/57,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/57#issuecomment-255098033,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,58,2016-10-20T21:35:17Z,2016-10-20T23:24:40Z,2016-10-21T22:09:21Z,CLOSED,False,628,484,16,https://github.com/barath,Modularize driver port,8,[],https://github.com/NetSys/bess/pull/58,https://github.com/barath,1,https://github.com/NetSys/bess/pull/58,"Eliminates use of namespace for port / driver and restructures port and related classes / methods:

Adds PortBuilder to construct Port objects and to hold Ports and port classes (represented by PortBuilder ""drivers"")
Eliminates Driver, DriverRegister, etc.
Eliminates custom datastructure calls for getting ports, drivers, etc.

Includes nearly-complete unit test coverage for Port and PortBuilder.","Eliminates use of namespace for port / driver and restructures port and related classes / methods:

Adds PortBuilder to construct Port objects and to hold Ports and port classes (represented by PortBuilder ""drivers"")
Eliminates Driver, DriverRegister, etc.
Eliminates custom datastructure calls for getting ports, drivers, etc.

Includes nearly-complete unit test coverage for Port and PortBuilder.",True,{}
NetSys/bess,https://github.com/NetSys/bess,58,2016-10-20T21:35:17Z,2016-10-20T23:24:40Z,2016-10-21T22:09:21Z,CLOSED,False,628,484,16,https://github.com/barath,Modularize driver port,8,[],https://github.com/NetSys/bess/pull/58,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/58#issuecomment-255254920,"Eliminates use of namespace for port / driver and restructures port and related classes / methods:

Adds PortBuilder to construct Port objects and to hold Ports and port classes (represented by PortBuilder ""drivers"")
Eliminates Driver, DriverRegister, etc.
Eliminates custom datastructure calls for getting ports, drivers, etc.

Includes nearly-complete unit test coverage for Port and PortBuilder.","Thanks! Rebased, squashed some small commits, and merged from my local branch.",True,{}
NetSys/bess,https://github.com/NetSys/bess,59,2016-10-20T22:17:28Z,2016-10-21T21:30:33Z,2016-11-03T19:10:22Z,CLOSED,False,2592,66,12,https://github.com/justinemarie,Initial Doxygen support,12,[],https://github.com/NetSys/bess/pull/59,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/59,"Initial testing stuff, I want to merge so we're not stepping on anyones toes. I refactored global_opts out of main.cc so I can have tests link against a Google Tests' main.","Initial testing stuff, I want to merge so we're not stepping on anyones toes. I refactored global_opts out of main.cc so I can have tests link against a Google Tests' main.",True,{}
NetSys/bess,https://github.com/NetSys/bess,59,2016-10-20T22:17:28Z,2016-10-21T21:30:33Z,2016-11-03T19:10:22Z,CLOSED,False,2592,66,12,https://github.com/justinemarie,Initial Doxygen support,12,[],https://github.com/NetSys/bess/pull/59,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/59#issuecomment-255271632,"Initial testing stuff, I want to merge so we're not stepping on anyones toes. I refactored global_opts out of main.cc so I can have tests link against a Google Tests' main.","Could you rebase this PR to resolve the following issues?

ed75d86 was applied to the develop branch, but not yet to c++. The commit will be merged when the c++ branch is finally merged onto develop. So the commit should not be included in this PR.
To maintain clear commit history, It is a good idea to combine ""Oops"" commits with their originally intended one. For example, e3bf1ce can be squashed to d5ca4cf.
A commit message should describe what the commit does in the subject (preferably in imperative form). This guide may be helpful (but we don't need to follow it dogmatically)
Merge commits (whose message starts with ""Merge ..."") better not be included if possible.
Conflict in core/Makefile

Once you update your branch the changes will be automatically applied here.",True,{'THUMBS_UP': ['https://github.com/changlan']}
NetSys/bess,https://github.com/NetSys/bess,60,2016-10-20T23:42:53Z,2016-10-21T03:37:21Z,2016-10-25T18:31:32Z,CLOSED,False,38,54,3,https://github.com/barath,Eliminate namespace from tc,12,[],https://github.com/NetSys/bess/pull/60,https://github.com/barath,1,https://github.com/NetSys/bess/pull/60,Eliminates use of namespace.h structures for TC.,Eliminates use of namespace.h structures for TC.,True,{}
NetSys/bess,https://github.com/NetSys/bess,60,2016-10-20T23:42:53Z,2016-10-21T03:37:21Z,2016-10-25T18:31:32Z,CLOSED,False,38,54,3,https://github.com/barath,Eliminate namespace from tc,12,[],https://github.com/NetSys/bess/pull/60,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/60#issuecomment-255272644,Eliminates use of namespace.h structures for TC.,Could you rebase the branch to eliminate the merge commits?,True,{}
NetSys/bess,https://github.com/NetSys/bess,60,2016-10-20T23:42:53Z,2016-10-21T03:37:21Z,2016-10-25T18:31:32Z,CLOSED,False,38,54,3,https://github.com/barath,Eliminate namespace from tc,12,[],https://github.com/NetSys/bess/pull/60,https://github.com/barath,3,https://github.com/NetSys/bess/pull/60#issuecomment-255286184,Eliminates use of namespace.h structures for TC.,"Forgot to -- one second, will send a clean pull request.",True,{}
NetSys/bess,https://github.com/NetSys/bess,60,2016-10-20T23:42:53Z,2016-10-21T03:37:21Z,2016-10-25T18:31:32Z,CLOSED,False,38,54,3,https://github.com/barath,Eliminate namespace from tc,12,[],https://github.com/NetSys/bess/pull/60,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/60#issuecomment-255286266,Eliminates use of namespace.h structures for TC.,I think pull request will automatically 'refresh' once you do rebase..? (not 100% sure),True,{}
NetSys/bess,https://github.com/NetSys/bess,60,2016-10-20T23:42:53Z,2016-10-21T03:37:21Z,2016-10-25T18:31:32Z,CLOSED,False,38,54,3,https://github.com/barath,Eliminate namespace from tc,12,[],https://github.com/NetSys/bess/pull/60,https://github.com/barath,5,https://github.com/NetSys/bess/pull/60#issuecomment-256129261,Eliminates use of namespace.h structures for TC.,"It should have, but it was complaining about one commit in the middle for
some reason during the rebase, so I'll just send you a clean one.
On Thu, Oct 20, 2016 at 8:39 PM, Sangjin Han notifications@github.com
wrote:

I think pull request will automatically 'refresh' once you do rebase..?
(not 100% sure)
—
You are receiving this because you modified the open/close state.
Reply to this email directly, view it on GitHub
#60 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAk7ejtuyP7MldsZ9OyLHnL1A0gjlx6Dks5q2DPUgaJpZM4KcuCo
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,61,2016-10-21T03:49:06Z,2016-10-21T20:51:30Z,2016-10-21T22:08:55Z,MERGED,True,38,54,3,https://github.com/barath,Eliminates use of namespace.h in TC.,1,[],https://github.com/NetSys/bess/pull/61,https://github.com/barath,1,https://github.com/NetSys/bess/pull/61,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,61,2016-10-21T03:49:06Z,2016-10-21T20:51:30Z,2016-10-21T22:08:55Z,MERGED,True,38,54,3,https://github.com/barath,Eliminates use of namespace.h in TC.,1,[],https://github.com/NetSys/bess/pull/61,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/61#issuecomment-255462122,,"Merged, thanks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,62,2016-10-21T05:37:10Z,2016-10-21T20:58:40Z,2016-10-21T22:08:34Z,MERGED,True,65,98,8,https://github.com/barath,Removes global_opts by making direct use of gflags.,1,[],https://github.com/NetSys/bess/pull/62,https://github.com/barath,1,https://github.com/NetSys/bess/pull/62,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,63,2016-10-21T21:31:23Z,2016-10-21T21:32:20Z,2016-11-01T22:08:33Z,MERGED,True,2576,35,9,https://github.com/justinemarie,Adding doxygen support and initial module testing code.,5,[],https://github.com/NetSys/bess/pull/63,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/63,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,63,2016-10-21T21:31:23Z,2016-10-21T21:32:20Z,2016-11-01T22:08:33Z,MERGED,True,2576,35,9,https://github.com/justinemarie,Adding doxygen support and initial module testing code.,5,[],https://github.com/NetSys/bess/pull/63,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/63#issuecomment-255470422,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,64,2016-10-21T21:53:02Z,2016-10-21T22:07:17Z,2016-10-21T22:08:29Z,MERGED,True,42,2,2,https://github.com/barath,Changes the process of resetting all ports to ensure the iterator is …,1,[],https://github.com/NetSys/bess/pull/64,https://github.com/barath,1,https://github.com/NetSys/bess/pull/64,…valid. Adds a corresponding test case.,…valid. Adds a corresponding test case.,True,{}
NetSys/bess,https://github.com/NetSys/bess,64,2016-10-21T21:53:02Z,2016-10-21T22:07:17Z,2016-10-21T22:08:29Z,MERGED,True,42,2,2,https://github.com/barath,Changes the process of resetting all ports to ensure the iterator is …,1,[],https://github.com/NetSys/bess/pull/64,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/64#issuecomment-255477171,…valid. Adds a corresponding test case.,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,65,2016-10-21T22:54:39Z,2016-10-22T20:03:56Z,2016-10-22T23:13:45Z,MERGED,True,2410,434,22,https://github.com/changlan,Add Protobuf and gRPC,21,[],https://github.com/NetSys/bess/pull/65,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/65,"Would like to send PR early in case this branch diverges too much.
Done:

Add protobuf and gRPC
Add services and messages
Change port drivers

Remaining:

Change modules
Change master
Completely remove snobj","Would like to send PR early in case this branch diverges too much.
Done:

Add protobuf and gRPC
Add services and messages
Change port drivers

Remaining:

Change modules
Change master
Completely remove snobj",True,{}
NetSys/bess,https://github.com/NetSys/bess,65,2016-10-21T22:54:39Z,2016-10-22T20:03:56Z,2016-10-22T23:13:45Z,MERGED,True,2410,434,22,https://github.com/changlan,Add Protobuf and gRPC,21,[],https://github.com/NetSys/bess/pull/65,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/65#issuecomment-255550702,"Would like to send PR early in case this branch diverges too much.
Done:

Add protobuf and gRPC
Add services and messages
Change port drivers

Remaining:

Change modules
Change master
Completely remove snobj","Merged, thanks! It seems that on some packages relying on an older version of libprotobuf seem to conflict with the new version in Ubuntu 16.04. Hm...",True,{}
NetSys/bess,https://github.com/NetSys/bess,66,2016-10-21T23:01:55Z,2016-10-22T23:13:29Z,2016-10-22T23:13:29Z,CLOSED,False,35,68,1,https://github.com/barath,Canonicalizes C++ code for PCAP driver.,1,[],https://github.com/NetSys/bess/pull/66,https://github.com/barath,1,https://github.com/NetSys/bess/pull/66,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,67,2016-10-22T00:32:32Z,2016-10-22T07:52:14Z,2016-10-22T07:52:26Z,CLOSED,False,766,678,45,https://github.com/melvinw,break module dependency on namespace,1,[],https://github.com/NetSys/bess/pull/67,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/67,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,67,2016-10-22T00:32:32Z,2016-10-22T07:52:14Z,2016-10-22T07:52:26Z,CLOSED,False,766,678,45,https://github.com/melvinw,break module dependency on namespace,1,[],https://github.com/NetSys/bess/pull/67,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/67#issuecomment-255495122,,currently writing tests for this. just submitting to get feedback on the general changes before going much further,True,{}
NetSys/bess,https://github.com/NetSys/bess,67,2016-10-22T00:32:32Z,2016-10-22T07:52:14Z,2016-10-22T07:52:26Z,CLOSED,False,766,678,45,https://github.com/melvinw,break module dependency on namespace,1,[],https://github.com/NetSys/bess/pull/67,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/67#issuecomment-255513640,,Thanks for the comments. Resubmitting after cleaning things up and writing tests.,True,{}
NetSys/bess,https://github.com/NetSys/bess,68,2016-10-22T05:30:07Z,2016-10-22T23:17:13Z,2016-10-22T23:17:13Z,CLOSED,False,91,51,1,https://github.com/barath,Canonicalizes C++ code in Unix Socket driver.,1,[],https://github.com/NetSys/bess/pull/68,https://github.com/barath,1,https://github.com/NetSys/bess/pull/68,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,69,2016-10-22T08:26:11Z,2016-10-22T23:56:23Z,2016-10-22T23:56:23Z,CLOSED,False,1011,711,47,https://github.com/melvinw,ditch namespace.h in module.h,8,[],https://github.com/NetSys/bess/pull/69,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/69,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,69,2016-10-22T08:26:11Z,2016-10-22T23:56:23Z,2016-10-22T23:56:23Z,CLOSED,False,1011,711,47,https://github.com/melvinw,ditch namespace.h in module.h,8,[],https://github.com/NetSys/bess/pull/69,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/69#issuecomment-255561053,,closing to rebase with protobufs stuff,True,{}
NetSys/bess,https://github.com/NetSys/bess,70,2016-10-22T15:22:13Z,2016-10-24T00:16:38Z,2016-10-24T02:52:51Z,MERGED,True,1015,550,35,https://github.com/barath,First pass of cleaning up code in all modules.,1,[],https://github.com/NetSys/bess/pull/70,https://github.com/barath,1,https://github.com/NetSys/bess/pull/70,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,70,2016-10-22T15:22:13Z,2016-10-24T00:16:38Z,2016-10-24T02:52:51Z,MERGED,True,1015,550,35,https://github.com/barath,First pass of cleaning up code in all modules.,1,[],https://github.com/NetSys/bess/pull/70,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/70#issuecomment-255624915,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,71,2016-10-23T04:09:27Z,2016-10-24T00:17:22Z,2016-10-24T02:53:03Z,MERGED,True,111,83,3,https://github.com/barath,Initial pass at cleaning up / canonicalizing drivers code.,1,[],https://github.com/NetSys/bess/pull/71,https://github.com/barath,1,https://github.com/NetSys/bess/pull/71,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,71,2016-10-23T04:09:27Z,2016-10-24T00:17:22Z,2016-10-24T02:53:03Z,MERGED,True,111,83,3,https://github.com/barath,Initial pass at cleaning up / canonicalizing drivers code.,1,[],https://github.com/NetSys/bess/pull/71,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/71#issuecomment-255625037,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,72,2016-10-23T05:34:57Z,2016-10-24T00:58:06Z,2016-10-24T04:15:46Z,MERGED,True,756,38,9,https://github.com/changlan,Maintain backward compatibility with snctl,2,[],https://github.com/NetSys/bess/pull/72,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/72,Added back snctl handlers and init() functions that use snobj objects,Added back snctl handlers and init() functions that use snobj objects,True,{}
NetSys/bess,https://github.com/NetSys/bess,73,2016-10-24T23:03:02Z,2016-10-25T00:05:46Z,2016-10-25T00:24:10Z,MERGED,True,1,1,1,https://github.com/changlan,Fix a silly bug,1,[],https://github.com/NetSys/bess/pull/73,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/73,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,74,2016-10-24T23:05:22Z,2016-10-25T04:47:24Z,2016-10-25T16:59:01Z,MERGED,True,1344,1049,48,https://github.com/melvinw,break dependency between modules/metadata and namepsaces,10,[],https://github.com/NetSys/bess/pull/74,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/74,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,74,2016-10-24T23:05:22Z,2016-10-25T04:47:24Z,2016-10-25T16:59:01Z,MERGED,True,1344,1049,48,https://github.com/melvinw,break dependency between modules/metadata and namepsaces,10,[],https://github.com/NetSys/bess/pull/74,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/74#issuecomment-255935924,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,75,2016-10-25T00:28:11Z,2016-10-25T05:05:22Z,2016-10-25T05:35:35Z,MERGED,True,397,263,10,https://github.com/barath,Refactors routines in main.cc into bessd.cc and adds unit tests.,1,[],https://github.com/NetSys/bess/pull/75,https://github.com/barath,1,https://github.com/NetSys/bess/pull/75,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,75,2016-10-25T00:28:11Z,2016-10-25T05:05:22Z,2016-10-25T05:35:35Z,MERGED,True,397,263,10,https://github.com/barath,Refactors routines in main.cc into bessd.cc and adds unit tests.,1,[],https://github.com/NetSys/bess/pull/75,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/75#issuecomment-255937776,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,76,2016-10-25T00:30:54Z,2016-10-25T06:30:25Z,2016-10-25T06:34:35Z,MERGED,True,659,118,10,https://github.com/changlan,gRPC for modules,6,[],https://github.com/NetSys/bess/pull/76,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/76,"Reorganize proto files
Change BPF, Dump, ExactMatch, and FlowGen modules
More modules to come..","Reorganize proto files
Change BPF, Dump, ExactMatch, and FlowGen modules
More modules to come..",True,{}
NetSys/bess,https://github.com/NetSys/bess,77,2016-10-25T01:10:18Z,2016-10-25T05:06:02Z,2016-10-25T05:06:02Z,CLOSED,False,226,147,15,https://github.com/melvinw,restructure worker,1,[],https://github.com/NetSys/bess/pull/77,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/77,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,77,2016-10-25T01:10:18Z,2016-10-25T05:06:02Z,2016-10-25T05:06:02Z,CLOSED,False,226,147,15,https://github.com/melvinw,restructure worker,1,[],https://github.com/NetSys/bess/pull/77,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/77#issuecomment-255937708,,closing to rebase,True,{}
NetSys/bess,https://github.com/NetSys/bess,78,2016-10-25T05:49:58Z,2016-10-25T07:07:09Z,2016-10-25T16:59:08Z,MERGED,True,233,154,16,https://github.com/melvinw,restructure worker,1,[],https://github.com/NetSys/bess/pull/78,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/78,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,78,2016-10-25T05:49:58Z,2016-10-25T07:07:09Z,2016-10-25T16:59:08Z,MERGED,True,233,154,16,https://github.com/melvinw,restructure worker,1,[],https://github.com/NetSys/bess/pull/78,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/78#issuecomment-255954917,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,79,2016-10-25T06:18:07Z,2016-10-25T07:24:37Z,2016-10-25T14:39:29Z,MERGED,True,19,747,5,https://github.com/barath,Eliminates the namespace routines and any dependencies on them.,1,[],https://github.com/NetSys/bess/pull/79,https://github.com/barath,1,https://github.com/NetSys/bess/pull/79,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,79,2016-10-25T06:18:07Z,2016-10-25T07:24:37Z,2016-10-25T14:39:29Z,MERGED,True,19,747,5,https://github.com/barath,Eliminates the namespace routines and any dependencies on them.,1,[],https://github.com/NetSys/bess/pull/79,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/79#issuecomment-255957660,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,81,2016-10-25T17:23:08Z,2016-10-25T17:38:23Z,2016-10-25T17:45:04Z,MERGED,True,207,207,43,https://github.com/melvinw,NULL -> nullptr,1,[],https://github.com/NetSys/bess/pull/81,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/81,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,81,2016-10-25T17:23:08Z,2016-10-25T17:38:23Z,2016-10-25T17:45:04Z,MERGED,True,207,207,43,https://github.com/melvinw,NULL -> nullptr,1,[],https://github.com/NetSys/bess/pull/81,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/81#issuecomment-256106771,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,82,2016-10-25T20:13:30Z,2016-10-25T21:31:21Z,2016-10-25T21:50:21Z,MERGED,True,170,30,5,https://github.com/barath,Cleanly handles bessd restarts; adds extra related unit tests.,1,[],https://github.com/NetSys/bess/pull/82,https://github.com/barath,1,https://github.com/NetSys/bess/pull/82,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,82,2016-10-25T20:13:30Z,2016-10-25T21:31:21Z,2016-10-25T21:50:21Z,MERGED,True,170,30,5,https://github.com/barath,Cleanly handles bessd restarts; adds extra related unit tests.,1,[],https://github.com/NetSys/bess/pull/82,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/82#issuecomment-256182297,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,83,2016-10-25T20:34:40Z,2016-10-25T21:53:10Z,2016-10-25T21:53:10Z,CLOSED,False,342,134,7,https://github.com/justinemarie,Split some of the drivers into cc and .h files; added comments to them.,7,[],https://github.com/NetSys/bess/pull/83,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/83,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,83,2016-10-25T20:34:40Z,2016-10-25T21:53:10Z,2016-10-25T21:53:10Z,CLOSED,False,342,134,7,https://github.com/justinemarie,Split some of the drivers into cc and .h files; added comments to them.,7,[],https://github.com/NetSys/bess/pull/83,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/83#issuecomment-256187166,,"Please make this PR again; the author is set vagrant, not Justine Sherry :-)",True,{}
NetSys/bess,https://github.com/NetSys/bess,84,2016-10-25T22:33:39Z,2016-10-25T22:44:45Z,2016-11-01T22:08:38Z,MERGED,True,336,107,6,https://github.com/justinemarie,"Split PCAP, UNIX, PMD drivers into .cc and .h file and add comments.",2,[],https://github.com/NetSys/bess/pull/84,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/84,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,84,2016-10-25T22:33:39Z,2016-10-25T22:44:45Z,2016-11-01T22:08:38Z,MERGED,True,336,107,6,https://github.com/justinemarie,"Split PCAP, UNIX, PMD drivers into .cc and .h file and add comments.",2,[],https://github.com/NetSys/bess/pull/84,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/84#issuecomment-256200072,,"Merged, thanks! (and congrats! 👍 )",True,{}
NetSys/bess,https://github.com/NetSys/bess,85,2016-10-26T01:09:04Z,2016-10-26T06:24:52Z,2016-10-26T20:14:53Z,MERGED,True,1374,314,24,https://github.com/changlan,Change modules for gRPC (Cont.),12,[],https://github.com/NetSys/bess/pull/85,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/85,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,85,2016-10-26T01:09:04Z,2016-10-26T06:24:52Z,2016-10-26T20:14:53Z,MERGED,True,1374,314,24,https://github.com/changlan,Change modules for gRPC (Cont.),12,[],https://github.com/NetSys/bess/pull/85,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/85#issuecomment-256261871,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,86,2016-10-26T19:03:10Z,2016-10-26T19:54:42Z,2016-10-26T19:55:53Z,MERGED,True,181,137,12,https://github.com/barath,Adds benchmarking support and ports the oldtests/htable.cc benchmark …,5,[],https://github.com/NetSys/bess/pull/86,https://github.com/barath,1,https://github.com/NetSys/bess/pull/86,…to use the new google benchmark routines.,…to use the new google benchmark routines.,True,{}
NetSys/bess,https://github.com/NetSys/bess,86,2016-10-26T19:03:10Z,2016-10-26T19:54:42Z,2016-10-26T19:55:53Z,MERGED,True,181,137,12,https://github.com/barath,Adds benchmarking support and ports the oldtests/htable.cc benchmark …,5,[],https://github.com/NetSys/bess/pull/86,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/86#issuecomment-256458964,…to use the new google benchmark routines.,"Merged, thanks! There are some link errors on g++ 4.x, but I am reworking the build process in another branch so I'll fix the issue when I merge it.",True,{}
NetSys/bess,https://github.com/NetSys/bess,87,2016-10-26T19:18:08Z,2016-10-26T20:51:19Z,2016-11-02T06:06:21Z,CLOSED,False,175,108,31,https://github.com/melvinw,replace a bunch of C-style casts with STL casts,1,[],https://github.com/NetSys/bess/pull/87,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/87,some weird arithmetic type conversion casts have been left alone for now,some weird arithmetic type conversion casts have been left alone for now,True,{}
NetSys/bess,https://github.com/NetSys/bess,87,2016-10-26T19:18:08Z,2016-10-26T20:51:19Z,2016-11-02T06:06:21Z,CLOSED,False,175,108,31,https://github.com/melvinw,replace a bunch of C-style casts with STL casts,1,[],https://github.com/NetSys/bess/pull/87,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/87#issuecomment-256473076,some weird arithmetic type conversion casts have been left alone for now,closing. going to resubmit as part of a more general style patch,True,{}
NetSys/bess,https://github.com/NetSys/bess,88,2016-10-26T20:21:44Z,2016-10-26T20:51:29Z,2016-10-26T20:51:29Z,CLOSED,False,68,68,34,https://github.com/melvinw,rename header guards,2,[],https://github.com/NetSys/bess/pull/88,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/88,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,88,2016-10-26T20:21:44Z,2016-10-26T20:51:29Z,2016-10-26T20:51:29Z,CLOSED,False,68,68,34,https://github.com/melvinw,rename header guards,2,[],https://github.com/NetSys/bess/pull/88,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/88#issuecomment-256473127,,going to resubmit as part of a more general style patch,True,{}
NetSys/bess,https://github.com/NetSys/bess,89,2016-10-26T22:20:42Z,2016-10-27T19:59:33Z,2016-10-27T20:21:08Z,MERGED,True,315,247,18,https://github.com/barath,Reorganizes metadata routines; changes namespace.,1,[],https://github.com/NetSys/bess/pull/89,https://github.com/barath,1,https://github.com/NetSys/bess/pull/89,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,89,2016-10-26T22:20:42Z,2016-10-27T19:59:33Z,2016-10-27T20:21:08Z,MERGED,True,315,247,18,https://github.com/barath,Reorganizes metadata routines; changes namespace.,1,[],https://github.com/NetSys/bess/pull/89,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/89#issuecomment-256752746,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,89,2016-10-26T22:20:42Z,2016-10-27T19:59:33Z,2016-10-27T20:21:08Z,MERGED,True,315,247,18,https://github.com/barath,Reorganizes metadata routines; changes namespace.,1,[],https://github.com/NetSys/bess/pull/89,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/89#issuecomment-256752946,,"With the namespace now we can rename all the MT_* things to make the code less verbose, I think.",True,{}
NetSys/bess,https://github.com/NetSys/bess,90,2016-10-26T22:25:37Z,2016-10-27T20:00:05Z,2016-10-27T20:00:05Z,CLOSED,False,390,313,75,https://github.com/melvinw,misc. style fixes,5,[],https://github.com/NetSys/bess/pull/90,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/90,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,90,2016-10-26T22:25:37Z,2016-10-27T20:00:05Z,2016-10-27T20:00:05Z,CLOSED,False,390,313,75,https://github.com/melvinw,misc. style fixes,5,[],https://github.com/NetSys/bess/pull/90,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/90#issuecomment-256752600,,rebasing,True,{}
NetSys/bess,https://github.com/NetSys/bess,92,2016-10-27T01:11:15Z,2016-10-29T01:03:14Z,2016-10-29T01:48:36Z,MERGED,True,2489,1523,94,https://github.com/changlan,Last batch of modules,6,[],https://github.com/NetSys/bess/pull/92,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/92,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,92,2016-10-27T01:11:15Z,2016-10-29T01:03:14Z,2016-10-29T01:48:36Z,MERGED,True,2489,1523,94,https://github.com/changlan,Last batch of modules,6,[],https://github.com/NetSys/bess/pull/92,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/92#issuecomment-257061587,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,94,2016-10-27T17:41:27Z,2016-10-27T19:55:30Z,2016-10-31T17:23:39Z,CLOSED,False,7,1,1,https://github.com/barath,Adds flags for code coverage to Makefile.,1,[],https://github.com/NetSys/bess/pull/94,https://github.com/barath,1,https://github.com/NetSys/bess/pull/94,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,94,2016-10-27T17:41:27Z,2016-10-27T19:55:30Z,2016-10-31T17:23:39Z,CLOSED,False,7,1,1,https://github.com/barath,Adds flags for code coverage to Makefile.,1,[],https://github.com/NetSys/bess/pull/94,https://github.com/barath,2,https://github.com/NetSys/bess/pull/94#issuecomment-256751501,,Closing this pull request; merging with a new one.,True,{}
NetSys/bess,https://github.com/NetSys/bess,95,2016-10-27T19:55:44Z,2016-10-29T01:13:59Z,2016-10-29T06:20:38Z,MERGED,True,153,21,9,https://github.com/barath,Improves code coverage for bessd routines.,1,[],https://github.com/NetSys/bess/pull/95,https://github.com/barath,1,https://github.com/NetSys/bess/pull/95,"Adds script for generating code coverage HTML.
Moves driver initialization to PortBuilder.","Adds script for generating code coverage HTML.
Moves driver initialization to PortBuilder.",True,{}
NetSys/bess,https://github.com/NetSys/bess,95,2016-10-27T19:55:44Z,2016-10-29T01:13:59Z,2016-10-29T06:20:38Z,MERGED,True,153,21,9,https://github.com/barath,Improves code coverage for bessd routines.,1,[],https://github.com/NetSys/bess/pull/95,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/95#issuecomment-257062841,"Adds script for generating code coverage HTML.
Moves driver initialization to PortBuilder.","Merged, thanks! (.gitignore needs to be updated)",True,{}
NetSys/bess,https://github.com/NetSys/bess,96,2016-10-27T20:09:12Z,2016-10-28T22:43:10Z,2016-11-21T17:51:11Z,CLOSED,False,390,313,75,https://github.com/melvinw,misc. style fixes,5,[],https://github.com/NetSys/bess/pull/96,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/96,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,96,2016-10-27T20:09:12Z,2016-10-28T22:43:10Z,2016-11-21T17:51:11Z,CLOSED,False,390,313,75,https://github.com/melvinw,misc. style fixes,5,[],https://github.com/NetSys/bess/pull/96,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/96#issuecomment-257046054,,waiting for things to stop shifting,True,{}
NetSys/bess,https://github.com/NetSys/bess,98,2016-10-27T22:45:59Z,2016-10-29T01:43:27Z,2016-10-29T06:21:16Z,MERGED,True,95,28,3,https://github.com/barath,"Improves tests for port, fixes some bugs found in the process.  Incre…",2,[],https://github.com/NetSys/bess/pull/98,https://github.com/barath,1,https://github.com/NetSys/bess/pull/98,…ases code coverage > 85% for port.cc.,…ases code coverage > 85% for port.cc.,True,{}
NetSys/bess,https://github.com/NetSys/bess,98,2016-10-27T22:45:59Z,2016-10-29T01:43:27Z,2016-10-29T06:21:16Z,MERGED,True,95,28,3,https://github.com/barath,"Improves tests for port, fixes some bugs found in the process.  Incre…",2,[],https://github.com/NetSys/bess/pull/98,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/98#issuecomment-257063537,…ases code coverage > 85% for port.cc.,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,99,2016-10-28T23:48:24Z,2016-10-29T02:46:09Z,2016-10-29T02:46:09Z,CLOSED,False,275,84,3,https://github.com/justinemarie,Basic PCAP driver tests (does not yet include packets!).,1,[],https://github.com/NetSys/bess/pull/99,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/99,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,99,2016-10-28T23:48:24Z,2016-10-29T02:46:09Z,2016-10-29T02:46:09Z,CLOSED,False,275,84,3,https://github.com/justinemarie,Basic PCAP driver tests (does not yet include packets!).,1,[],https://github.com/NetSys/bess/pull/99,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/99#issuecomment-257055953,,OKAY I REMOVED THE PHANTOM COMMIT FROM DEVELOP,True,{}
NetSys/bess,https://github.com/NetSys/bess,100,2016-10-31T17:14:29Z,2016-10-31T17:31:43Z,2016-10-31T17:51:34Z,MERGED,True,8,0,1,https://github.com/barath,Adds coverage files to gitignore.,1,[],https://github.com/NetSys/bess/pull/100,https://github.com/barath,1,https://github.com/NetSys/bess/pull/100,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,100,2016-10-31T17:14:29Z,2016-10-31T17:31:43Z,2016-10-31T17:51:34Z,MERGED,True,8,0,1,https://github.com/barath,Adds coverage files to gitignore.,1,[],https://github.com/NetSys/bess/pull/100,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/100#issuecomment-257361819,,"Applied, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,101,2016-11-01T03:40:48Z,2016-11-01T23:37:35Z,2016-11-02T05:23:51Z,MERGED,True,219,90,6,https://github.com/barath,Adds benchmarking for the main TC scheduler loop.,1,[],https://github.com/NetSys/bess/pull/101,https://github.com/barath,1,https://github.com/NetSys/bess/pull/101,Makes a few other minor C -> C++ changes as needed.,Makes a few other minor C -> C++ changes as needed.,True,{}
NetSys/bess,https://github.com/NetSys/bess,101,2016-11-01T03:40:48Z,2016-11-01T23:37:35Z,2016-11-02T05:23:51Z,MERGED,True,219,90,6,https://github.com/barath,Adds benchmarking for the main TC scheduler loop.,1,[],https://github.com/NetSys/bess/pull/101,https://github.com/barath,2,https://github.com/NetSys/bess/pull/101#issuecomment-257720830,Makes a few other minor C -> C++ changes as needed.,Updated pull request.,True,{}
NetSys/bess,https://github.com/NetSys/bess,101,2016-11-01T03:40:48Z,2016-11-01T23:37:35Z,2016-11-02T05:23:51Z,MERGED,True,219,90,6,https://github.com/barath,Adds benchmarking for the main TC scheduler loop.,1,[],https://github.com/NetSys/bess/pull/101,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/101#issuecomment-257727424,Makes a few other minor C -> C++ changes as needed.,"Current coverage is 29.40% (diff: 0.00%)

Merging #101 into c++ will increase coverage by 11.18%

@@                c++       #101   diff @@
==========================================
  Files            33         38     +5   
  Lines          2152       2517   +365   
  Methods         231        294    +63   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            392        740   +348   
- Misses         1760       1777    +17   
  Partials          0          0          

Powered by Codecov. Last update 1d15253...05d6ff7",True,{}
NetSys/bess,https://github.com/NetSys/bess,101,2016-11-01T03:40:48Z,2016-11-01T23:37:35Z,2016-11-02T05:23:51Z,MERGED,True,219,90,6,https://github.com/barath,Adds benchmarking for the main TC scheduler loop.,1,[],https://github.com/NetSys/bess/pull/101,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/101#issuecomment-257732021,Makes a few other minor C -> C++ changes as needed.,"Merged, thanks! FYI, on an E5-2650 v2 machine:
Benchmark                                     Time           CPU Iterations
---------------------------------------------------------------------------
TCFixture/TCScheduleOnceCount/4/0            29 ns         29 ns   20583769
TCFixture/TCScheduleOnceCount/8/0            26 ns         26 ns   27421070
TCFixture/TCScheduleOnceCount/16/0           27 ns         27 ns   25730965
TCFixture/TCScheduleOnceCount/32/0           30 ns         30 ns   23649221
TCFixture/TCScheduleOnceCount/64/0           33 ns         33 ns   21494254
TCFixture/TCScheduleOnceCount/128/0          38 ns         38 ns   18230163
TCFixture/TCScheduleOnceCount/256/0          42 ns         42 ns   15996654
TCFixture/TCScheduleOnceCount/512/0          48 ns         48 ns   13881780
TCFixture/TCScheduleOnceCount/1024/0         55 ns         55 ns   12633890
TCFixture/TCScheduleOnceCount/2k/0           60 ns         60 ns   11641887
TCFixture/TCScheduleOnceCount/4k/0           65 ns         65 ns   10812202
TCFixture/TCScheduleOnceCount/8k/0           69 ns         69 ns   10202571
TCFixture/TCScheduleOnceCount/16k/0          73 ns         73 ns    9476663
TCFixture/TCScheduleOnceCount/32k/0          76 ns         76 ns    9211431
TCFixture/TCScheduleOnceCount/64k/0         120 ns        120 ns    5396659
TCFixture_BigO                             5.75 lgN       5.75 lgN
TCFixture_RMS                                19 %         19 %
TCFixture/TCScheduleOnceCycle/4/1            29 ns         29 ns   24428058
TCFixture/TCScheduleOnceCycle/8/1            31 ns         31 ns   22116566
TCFixture/TCScheduleOnceCycle/16/1           32 ns         32 ns   22157678
TCFixture/TCScheduleOnceCycle/32/1           33 ns         33 ns   21580786
TCFixture/TCScheduleOnceCycle/64/1           35 ns         35 ns   20312332
TCFixture/TCScheduleOnceCycle/128/1          39 ns         39 ns   18222178
TCFixture/TCScheduleOnceCycle/256/1          43 ns         43 ns   16460215
TCFixture/TCScheduleOnceCycle/512/1          49 ns         49 ns   14580025
TCFixture/TCScheduleOnceCycle/1024/1         56 ns         56 ns   12552172
TCFixture/TCScheduleOnceCycle/2k/1           65 ns         65 ns   10989773
TCFixture/TCScheduleOnceCycle/4k/1           74 ns         74 ns    9402567
TCFixture/TCScheduleOnceCycle/8k/1           90 ns         90 ns    7763780
TCFixture/TCScheduleOnceCycle/16k/1         109 ns        109 ns    6465431
TCFixture/TCScheduleOnceCycle/32k/1         126 ns        126 ns    5572042
TCFixture/TCScheduleOnceCycle/64k/1         164 ns        164 ns    4390009
TCFixture_BigO                             7.41 lgN       7.41 lgN
TCFixture_RMS                                26 %         26 %",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/102,Is this how we wanted it refactored? Then will work in gmock for tests.,Is this how we wanted it refactored? Then will work in gmock for tests.,True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/102#issuecomment-257712833,Is this how we wanted it refactored? Then will work in gmock for tests.,"Also I know nothing about C++ objects so uh, sorry if I b0rked that.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/102#issuecomment-257714664,Is this how we wanted it refactored? Then will work in gmock for tests.,"Current coverage is 18.21% (diff: 100%)

Merging #102 into c++ will not change coverage

@@                c++       #102   diff @@
==========================================
  Files            33         33          
  Lines          2152       2152          
  Methods         231        231          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            392        392          
  Misses         1760       1760          
  Partials          0          0          

Powered by Codecov. Last update 1d15253...7e24990",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/102#issuecomment-257724933,Is this how we wanted it refactored? Then will work in gmock for tests.,"I was under the impression that Sangjin had explicitly wanted us to avoid
virtual and new (don't want to follow the pointer; instead want it declared
inline in the object).
Sangjin?
Sent from my rotary phone.
On Nov 1, 2016 15:51, ""Barath Raghavan"" notifications@github.com wrote:

@barath commented on this pull request.
In core/utils/pcap_handle.h
#102 (review):

@@ -0,0 +1,39 @@
+#ifndef PCAP_HANDLE_H

You might change this to:
#ifndef BESS_CORE_UTILS_PCAP_HANDLE_H_
(and the subsequent #define)
In core/utils/pcap_handle.h
#102 (review):





int RecvPackets(snb_array_t pkts, int cnt);





bool IsInitialized();





private:
// For chained mbufs, this function converts back to pcap packets with
// contiguous data.
void GatherData(unsigned char* tx_pcap_data, struct rte_mbuf* mbuf);





bool is_initialized_;





pcap_t* handle_;
+};




+#endif

Just for good measure, you might change this line to say:
#endif // BESS_CORE_UTILS_PCAP_HANDLE_H_
In core/utils/pcap_handle.h
#102 (review):

@@ -0,0 +1,39 @@
+#ifndef PCAP_HANDLE_H
+#define PCAP_HANDLE_H
+
+#include <errno.h>
+#include <pcap/pcap.h>
+
+#include <glog/logging.h>
+
+#include ""../message.h""
+#include ""../port.h""
+#include ""../snobj.h""
+#include ""../utils/pcap.h""
+
+// Wraps all accesses to libpcap; opens a device, sets it nonblocking, and then
+// lets you send/recv packets.

I would move the comment text after the semicolon to the constructor /
other methods.
In core/utils/pcap_handle.h
#102 (review):




+#include <errno.h>
+#include <pcap/pcap.h>
+
+#include <glog/logging.h>
+
+#include ""../message.h""
+#include ""../port.h""
+#include ""../snobj.h""
+#include ""../utils/pcap.h""
+
+// Wraps all accesses to libpcap; opens a device, sets it nonblocking, and then
+// lets you send/recv packets.
+class PCAPHandle {

public:
PCAPHandle(std::string dev, pb_error_t* error);


Slight change:
PCAPHandle(const std::string &dev, pb_error_t *error);
In core/utils/pcap_handle.h
#102 (review):




+#include <glog/logging.h>
+
+#include ""../message.h""
+#include ""../port.h""
+#include ""../snobj.h""
+#include ""../utils/pcap.h""
+
+// Wraps all accesses to libpcap; opens a device, sets it nonblocking, and then
+// lets you send/recv packets.
+class PCAPHandle {

public:
PCAPHandle(std::string dev, pb_error_t* error);
PCAPHandle();





~PCAPHandle();


virtual
In core/utils/pcap_handle.h
#102 (review):




+#include ""../message.h""
+#include ""../port.h""
+#include ""../snobj.h""
+#include ""../utils/pcap.h""
+
+// Wraps all accesses to libpcap; opens a device, sets it nonblocking, and then
+// lets you send/recv packets.
+class PCAPHandle {

public:
PCAPHandle(std::string dev, pb_error_t* error);
PCAPHandle();





~PCAPHandle();





int SendPackets(snb_array_t pkts, int cnt);


Add short method comment.
In core/utils/pcap_handle.h
#102 (review):

+#include ""../utils/pcap.h""
+
+// Wraps all accesses to libpcap; opens a device, sets it nonblocking, and then
+// lets you send/recv packets.
+class PCAPHandle {

public:
PCAPHandle(std::string dev, pb_error_t* error);
PCAPHandle();





~PCAPHandle();





int SendPackets(snb_array_t pkts, int cnt);





int RecvPackets(snb_array_t pkts, int cnt);





bool IsInitialized();


If this is just a raw getter method, rename to:
bool is_initialized() const;
In core/utils/pcap_handle.cc
#102 (review):

@@ -0,0 +1,133 @@
+#include ""pcap_handle.h""
+
+PCAPHandle::PCAPHandle() {

is_initialized_ = 0;
handle_ = nullptr;
+}


No need for this here -- can just use an initializer list for the
constructor in the .h file.
In core/drivers/pcap.cc
#102 (review):

}

void PCAPPort::DeInit() {

if (pcap_handle_) {
pcap_close(pcap_handle_);
pcap_handle_ = nullptr;
if (pcap_handle_.IsInitialized()) {
pcap_handle_.~PCAPHandle();

You generally don't want to explicitly call a destructor like this.
Instead, you might make pcap_handle_ a pointer, call new above when
constructing it, and then call delete here to destruct it.
In core/drivers/pcap.cc
#102 (review):

}


LOG(INFO) << ""PCAP: open dev "" << dev;
const std::string dev = arg.dev();
pb_error_t err;
pcap_handle_ = PCAPHandle(dev, &err);

Use new instead of calling the constructor and copying.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#102 (review), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAE6FkzGFZ1kiaZTQJY2XjGN6t0MkSyHks5q58JngaJpZM4Kmots
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/barath,5,https://github.com/NetSys/bess/pull/102#issuecomment-257726638,Is this how we wanted it refactored? Then will work in gmock for tests.,"The destructor being virtual will not cause any problems.
Good point about not having a pointer to the pcap handle class.  A few options:

Construct the Handle in the PCAPPort constructor (which would change behavior slightly, by moving the initialization to the constructor from Init)
Just use a pointer and expose the underlying pcaphandle via a getter
Implement a move assignment operator for PCAPHandle so the ownership of the values is cleanly moved when you copy the value (i.e. it zeros out the handle for the original owner, etc.) which you then invoke with std::move() when setting the local member variable of PCAPHandle; also you can implement a Reset() method for PCAPHandle so that it can be reset without being destructed; you can then just call Reset() from the destructor.

I think 3 is probably the right approach here.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/102#issuecomment-257726734,Is this how we wanted it refactored? Then will work in gmock for tests.,"Yeah, in general we want to avoid virtual functions as much as possible for any performance-critical code. But the destructor here is not on the critical path, since the code will be called in the master thread, not on a worker. Also, keep in mind that in C++, any destructors must be virtual in virtually (pun intended) all cases.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/barath,7,https://github.com/NetSys/bess/pull/102#issuecomment-257726972,Is this how we wanted it refactored? Then will work in gmock for tests.,"I should have added, in addition to the move assignment operator, you'll want to include DISALLOW_COPY_AND_ASSIGN in pcap_handle.h",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/102#issuecomment-257730534,Is this how we wanted it refactored? Then will work in gmock for tests.,"I have no comments to add, except a minor nitpick: PCAPHandle should be renamed PcapHandle, as per Google's C++ style guide. PCAPPort was some sort of exception, because the name is visible to the external world (thus requiring backward compatibility). Please reflect Barath comments to the code.
Slightly off-the-topic: maybe we can do this for the next PR;  all files in /utils directory are supposed to be independent of the rest of BESS code (common.h is perhaps the only exception). As a rule of thumb, all library classes/functions in utils must be useful and readily available on its own, for any other projects than BESS. Currently PCAPHandle has dependency on the BESS core (snbuf, module, as well as external libraries (glog, gtest, protobuf, etc.) beyond libpcap.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/justinemarie,9,https://github.com/NetSys/bess/pull/102#issuecomment-257765423,Is this how we wanted it refactored? Then will work in gmock for tests.,"I don't understand this:


Implement a move assignment operator for PCAPHandle so the ownership of
the values is cleanly moved when you copy the value (i.e. it zeros out the
handle for the original owner, etc.) which you then invoke with std::move()
when setting the local member variable of PCAPHandle;


I can do this:


also you can implement a Reset() method for PCAPHandle so that it can be
reset without being destructed; you can then just call Reset() from the
destructor.


On Tue, Nov 1, 2016 at 4:11 PM, Barath Raghavan notifications@github.com
wrote:

The destructor being virtual will not cause any problems.
Good point about not having a pointer to the pcap handle class. A few
options:

Construct the Handle in the PCAPPort constructor (which would change
behavior slightly, by moving the initialization to the constructor from
Init)
Just use a pointer and expose the underlying pcaphandle via a getter
Implement a move assignment operator for PCAPHandle so the ownership of
the values is cleanly moved when you copy the value (i.e. it zeros out the
handle for the original owner, etc.) which you then invoke with std::move()
when setting the local member variable of PCAPHandle; also you can
implement a Reset() method for PCAPHandle so that it can be reset without
being destructed; you can then just call Reset() from the destructor.

I think 3 is probably the right approach here.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#102 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAE6Fs0U17AcC0cSOEIv8rNX0wZbx1Xaks5q58cpgaJpZM4Kmots
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/justinemarie,10,https://github.com/NetSys/bess/pull/102#issuecomment-257766670,Is this how we wanted it refactored? Then will work in gmock for tests.,"Slightly off-the-topic: maybe we can do this for the next PR; all files in
/utils directory are supposed to be independent of the rest of BESS code
(common.h is perhaps the only exception). As a rule of thumb, all library
classes/functions in utils must be useful and readily available on its own,
for any other projects than BESS. Currently PCAPHandle has dependency on
the BESS core (snbuf, module, as well as external libraries (glog, gtest,
protobuf, etc.) beyond libpcap.
-- Is common.h where I should put a function like,
""convert_mbuf_to_char_array()""?
(Without that function I can't pull out the dependency on snbuf).

-- Should I remove the logging and error code altogether?
Justine
—

You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#102 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAE6FjAY6AsZrPN3-rJ4a3vUS3VB03-Rks5q58wigaJpZM4Kmots
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/barath,11,https://github.com/NetSys/bess/pull/102#issuecomment-257774742,Is this how we wanted it refactored? Then will work in gmock for tests.,"TLDR: you want to maintain the invariant that only one instance of an object holds a handle and that's what specifying move assignment will let you do.
The basic idea with ""move"" in C++11 is to capture cases where you want to explicitly say that the contents of instance foo are not just to be copied to bar but bar should take over the internal state of foo.  A good example of this is std::unique_ptr, where you want to make sure that an underlying pointer is only held by one instance of unique_ptr, but you want to be able to transfer that underlying pointer safely from one unique_ptr instance to another.  The problem is that every class will have its own way of achieving this, so they introduced a special construction ""move"" to achieve this.  It's used in two cases -- copy construction and assignment.  Here you're doing an assignment:
pcap_handle_ = PCAPHandle(dev, &err);
What's effectively happening is the constructor for PCAPHandle is getting called, a handle is initialized (inside the constructor), a temporary PCAPHandle object is created and then the implicitly-defined copy constructor (of PCAPHandle for pcap_handle_) is getting invoked to copy the temporary to pcap_handle_.  The implicit copy constructor just does a field-by-field copy.
This can cause a few problems:

The temporary is temporary, so its destructor will immediately get called.  That means that if the destructor for PCAPHandle frees the underlying handle, then pcap_handle_ will be holding an invalid handle (that was just copied to it by the implicit copy constructor).
If the right hand side were another PCAPHandle variable instead of a temporary, you'd have two PCAPHandles that own the same underlying pcap handle, which isn't safe.
it's inefficient in general, though perhaps no worse in this context.

This is why the style guide suggests eliminating implicit copy and assignment via a macro like DISALLOW_COPY_AND_ASSIGN() (in the private section of a class) -- you get rid of weird implicit unsafe / slow behavior that can happen without warning.
However in this case we want to disallow implicit copy / assignment but want to explicitly allow a move operation that we control the behavior of.  There are two types of moves we can define -- a move constructor and move assignment (due to somewhat arcane rules they will not be automatically provided by the compiler in this context).
Here because pcap_handle_ has already been constructed, you want to define a move assignment operator.  You won't need to use std::move() to force it to use your defined move code because the right hand side is a temporary, but if it were a variable then the assignment would try to use the copy assignment operator (which wouldn't exist) and it wouldn't compile; std::move() tells it to explicitly try to move in such cases.
So, wrapping up, now with a move assignment operator implemented properly, the left hand side will have sole ownership of the internal handle by the time the assignment completes and the handle held by the temporary will have been cleared, so when the temporary's destructor is called it will no longer free anything.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/sangjinhan,12,https://github.com/NetSys/bess/pull/102#issuecomment-257776737,Is this how we wanted it refactored? Then will work in gmock for tests.,"Note that common.h does not have any dependency either, other than standard C/C++ libraries. It does not assume anything about BESS (or its dependencies, such as DPDK). Perhaps I will move common.h to /utils directory at some point...
Regarding the mbuf <-> pcap conversion, perhaps the cleanest way for PCAPPort is to give a char * pointer to PcapHandle.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/barath,13,https://github.com/NetSys/bess/pull/102#issuecomment-257911234,Is this how we wanted it refactored? Then will work in gmock for tests.,Just checked the style guide -- they suggest that if you implement a move assignment operator you should also implement a move constructor (which will behave quite similarly).,True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/justinemarie,14,https://github.com/NetSys/bess/pull/102#issuecomment-257940546,Is this how we wanted it refactored? Then will work in gmock for tests.,"It feels like that's a pretty common thing that one would want to do -- why
bake it in to PCAPPort rather than put it somewhere generally accessible?
On Tue, Nov 1, 2016 at 10:33 PM, Sangjin Han notifications@github.com
wrote:

Note that common.h does not have any dependency either, other than
standard C/C++ libraries. It does not assume anything about BESS (or its
dependencies, such as DPDK). Perhaps I will move common.h to /utils
directory at some point...
Regarding the mbuf <-> pcap conversion, perhaps the cleanest way for
PCAPPort is to give a char * pointer to PcapHandle.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#102 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAE6FsmJr-vaN1JcithiAGFHa008Lvlfks5q6CC4gaJpZM4Kmots
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/sangjinhan,15,https://github.com/NetSys/bess/pull/102#issuecomment-257945599,Is this how we wanted it refactored? Then will work in gmock for tests.,"Since rte_mbuf is DPDK-specific, so having it in common.h or utils/ will introduce a dependency to DPDK. Having it in the core code (e.g., snbuf) should be fine. Please check if snb_head_data() already does what you want.",True,{}
NetSys/bess,https://github.com/NetSys/bess,102,2016-11-01T22:02:54Z,2016-11-02T20:13:28Z,2016-11-03T19:10:09Z,CLOSED,False,209,249,4,https://github.com/justinemarie,Create pcap wrapper class.,1,['enhancement'],https://github.com/NetSys/bess/pull/102,https://github.com/justinemarie,16,https://github.com/NetSys/bess/pull/102#issuecomment-257946092,Is this how we wanted it refactored? Then will work in gmock for tests.,"snbuf seems great, I'll look there. Thanks.
On Wed, Nov 2, 2016 at 10:53 AM, Sangjin Han notifications@github.com
wrote:

Since rte_mbuf is DPDK-specific, so having it in common.h or utils/ will
introduce a dependency to DPDK. Having it in the core code (e.g., snbuf)
should be fine. Please check if snb_head_data() already does what you want.
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#102 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAE6FmHdbFatGZTYPmGifk_5bj1wIa6oks5q6M3_gaJpZM4Kmots
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,103,2016-11-01T23:21:55Z,2016-11-02T05:56:55Z,2016-11-02T06:01:15Z,MERGED,True,568,389,25,https://github.com/melvinw,rework metadata,3,[],https://github.com/NetSys/bess/pull/103,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/103,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,103,2016-11-01T23:21:55Z,2016-11-02T05:56:55Z,2016-11-02T06:01:15Z,MERGED,True,568,389,25,https://github.com/melvinw,rework metadata,3,[],https://github.com/NetSys/bess/pull/103,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/103#issuecomment-257730142,,"Current coverage is 17.90% (diff: 3.14%)

Merging #103 into c++ will decrease coverage by 0.34%

@@                c++       #103   diff @@
==========================================
  Files            33         33          
  Lines          2148       2200    +52   
  Methods         233        242     +9   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            392        394     +2   
- Misses         1756       1806    +50   
  Partials          0          0          

Powered by Codecov. Last update f4e121c...f9ddd45",True,{}
NetSys/bess,https://github.com/NetSys/bess,103,2016-11-01T23:21:55Z,2016-11-02T05:56:55Z,2016-11-02T06:01:15Z,MERGED,True,568,389,25,https://github.com/melvinw,rework metadata,3,[],https://github.com/NetSys/bess/pull/103,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/103#issuecomment-257762974,,comments addressed,True,{}
NetSys/bess,https://github.com/NetSys/bess,103,2016-11-01T23:21:55Z,2016-11-02T05:56:55Z,2016-11-02T06:01:15Z,MERGED,True,568,389,25,https://github.com/melvinw,rework metadata,3,[],https://github.com/NetSys/bess/pull/103,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/103#issuecomment-257780032,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,104,2016-11-02T08:07:26Z,2016-11-02T19:42:43Z,2016-11-02T19:57:45Z,MERGED,True,14,4,3,https://github.com/barath,Attempts to fix port_test on Travis.,1,['bug'],https://github.com/NetSys/bess/pull/104,https://github.com/barath,1,https://github.com/NetSys/bess/pull/104,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,104,2016-11-02T08:07:26Z,2016-11-02T19:42:43Z,2016-11-02T19:57:45Z,MERGED,True,14,4,3,https://github.com/barath,Attempts to fix port_test on Travis.,1,['bug'],https://github.com/NetSys/bess/pull/104,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/104#issuecomment-257799056,,"Current coverage is 19.03% (diff: 75.00%)

Merging #104 into c++ will increase coverage by 1.26%

@@                c++       #104   diff @@
==========================================
  Files            33         33          
  Lines          2200       2511   +311   
  Methods         242        308    +66   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            391        478    +87   
- Misses         1809       2033   +224   
  Partials          0          0          

Powered by Codecov. Last update aeff01f...182bda8",True,{}
NetSys/bess,https://github.com/NetSys/bess,104,2016-11-02T08:07:26Z,2016-11-02T19:42:43Z,2016-11-02T19:57:45Z,MERGED,True,14,4,3,https://github.com/barath,Attempts to fix port_test on Travis.,1,['bug'],https://github.com/NetSys/bess/pull/104,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/104#issuecomment-257978900,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,105,2016-11-02T09:06:49Z,2016-11-02T09:42:00Z,2016-11-03T19:33:37Z,CLOSED,False,1,0,1,https://github.com/melvinw,fix metadata offset calculation bug,1,['bug'],https://github.com/NetSys/bess/pull/105,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/105,slipped through the last patch.,slipped through the last patch.,True,{}
NetSys/bess,https://github.com/NetSys/bess,105,2016-11-02T09:06:49Z,2016-11-02T09:42:00Z,2016-11-03T19:33:37Z,CLOSED,False,1,0,1,https://github.com/melvinw,fix metadata offset calculation bug,1,['bug'],https://github.com/NetSys/bess/pull/105,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/105#issuecomment-257810606,slipped through the last patch.,"Current coverage is 17.89% (diff: 0.00%)

Merging #105 into c++ will increase coverage by 0.12%

@@                c++       #105   diff @@
==========================================
  Files            33         33          
  Lines          2200       2202     +2   
  Methods         242        242          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            391        394     +3   
+ Misses         1809       1808     -1   
  Partials          0          0          

Powered by Codecov. Last update aeff01f...606254d",True,{}
NetSys/bess,https://github.com/NetSys/bess,106,2016-11-02T10:53:23Z,2016-11-03T00:38:00Z,2016-11-03T00:45:21Z,MERGED,True,235,11,3,https://github.com/melvinw,add metadata unit tests,3,['enhancement'],https://github.com/NetSys/bess/pull/106,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/106,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,106,2016-11-02T10:53:23Z,2016-11-03T00:38:00Z,2016-11-03T00:45:21Z,MERGED,True,235,11,3,https://github.com/melvinw,add metadata unit tests,3,['enhancement'],https://github.com/NetSys/bess/pull/106,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/106#issuecomment-257833288,,Need to add some comments to the tests before merging. Submitting to see what the coverage robot says.,True,{}
NetSys/bess,https://github.com/NetSys/bess,106,2016-11-02T10:53:23Z,2016-11-03T00:38:00Z,2016-11-03T00:45:21Z,MERGED,True,235,11,3,https://github.com/melvinw,add metadata unit tests,3,['enhancement'],https://github.com/NetSys/bess/pull/106,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/106#issuecomment-257834924,,"Current coverage is 29.49% (diff: 90.00%)

Merging #106 into c++ will increase coverage by 11.73%

@@                c++       #106   diff @@
==========================================
  Files            33         33          
  Lines          2202       2204     +2   
  Methods         243        243          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            391        650   +259   
+ Misses         1811       1554   -257   
  Partials          0          0          

Powered by Codecov. Last update cb62dc2...373196b",True,{}
NetSys/bess,https://github.com/NetSys/bess,106,2016-11-02T10:53:23Z,2016-11-03T00:38:00Z,2016-11-03T00:45:21Z,MERGED,True,235,11,3,https://github.com/melvinw,add metadata unit tests,3,['enhancement'],https://github.com/NetSys/bess/pull/106,https://github.com/barath,4,https://github.com/NetSys/bess/pull/106#issuecomment-257965122,,"Yes, sort of the latter -- I guess I was trying to understand why you do
explicit checks only in the last test case.  But what you said makes sense.
On Wed, Nov 2, 2016 at 11:55 AM, Melvin Walls notifications@github.com
wrote:

@melvinw commented on this pull request.
In core/metadata_test.cc
#106 (review):



 }


}
}





ASSERT_NE(mods[0]->attr_offsets[0], mods[1]->attr_offsets[0]);
ASSERT_EQ(mods[0]->attr_offsets[0], mods[2]->attr_offsets[0]);
ASSERT_NE(mods[1]->attr_offsets[0], mods[4]->attr_offsets[0]);
ASSERT_EQ(mods[0]->attr_offsets[0], mods[4]->attr_offsets[0]);
ASSERT_EQ(mods[3]->attr_offsets[0], mods[4]->attr_offsets[0]);
ASSERT_EQ(mods[5]->attr_offsets[0], mods[6]->attr_offsets[0]);
ASSERT_NE(mods[5]->attr_offsets[0], mods[6]->attr_offsets[1]);
ASSERT_EQ(mods[7]->attr_offsets[0], mods[6]->attr_offsets[0]);
ASSERT_NE(mods[7]->attr_offsets[0], mods[6]->attr_offsets[1]);
ASSERT_NE(mods[7]->attr_offsets[0], mods[8]->attr_offsets[0]);
ASSERT_EQ(mods[7]->attr_offsets[0], mods[9]->attr_offsets[1]);
ASSERT_EQ(mods[8]->attr_offsets[0], mods[9]->attr_offsets[0]);


@barath https://github.com/barath re: https://github.com/NetSys/
bess/pull/106/files/4990a9c7e7a1bc1e6820b69ce88c76895564db86#r86116566
or did you mean that it would be sufficient to just do something like this?
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub
#106 (review), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAk7es73pSZtm_zUJsyMNac1LStvvLmMks5q6NyvgaJpZM4KnGWu
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,106,2016-11-02T10:53:23Z,2016-11-03T00:38:00Z,2016-11-03T00:45:21Z,MERGED,True,235,11,3,https://github.com/melvinw,add metadata unit tests,3,['enhancement'],https://github.com/NetSys/bess/pull/106,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/106#issuecomment-257965772,,Gotcha. The explicit checks definitely ought to be in the other test too. Will add,True,{}
NetSys/bess,https://github.com/NetSys/bess,106,2016-11-02T10:53:23Z,2016-11-03T00:38:00Z,2016-11-03T00:45:21Z,MERGED,True,235,11,3,https://github.com/melvinw,add metadata unit tests,3,['enhancement'],https://github.com/NetSys/bess/pull/106,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/106#issuecomment-258023209,,fixed up. ready for review,True,{}
NetSys/bess,https://github.com/NetSys/bess,106,2016-11-02T10:53:23Z,2016-11-03T00:38:00Z,2016-11-03T00:45:21Z,MERGED,True,235,11,3,https://github.com/melvinw,add metadata unit tests,3,['enhancement'],https://github.com/NetSys/bess/pull/106,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/106#issuecomment-258040891,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,107,2016-11-02T20:09:46Z,2016-11-02T23:55:49Z,2016-11-03T19:30:53Z,MERGED,True,188,199,4,https://github.com/justinemarie,PCAP Wrapper Class with changes discussed previously.,1,['enhancement'],https://github.com/NetSys/bess/pull/107,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/107,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,107,2016-11-02T20:09:46Z,2016-11-02T23:55:49Z,2016-11-03T19:30:53Z,MERGED,True,188,199,4,https://github.com/justinemarie,PCAP Wrapper Class with changes discussed previously.,1,['enhancement'],https://github.com/NetSys/bess/pull/107,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/107#issuecomment-257986953,,"Current coverage is 17.75% (diff: 100%)

Merging #107 into c++ will not change coverage

@@                c++       #107   diff @@
==========================================
  Files            33         33          
  Lines          2202       2202          
  Methods         243        243          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            391        391          
  Misses         1811       1811          
  Partials          0          0          

Powered by Codecov. Last update cb62dc2...e013805",True,{}
NetSys/bess,https://github.com/NetSys/bess,107,2016-11-02T20:09:46Z,2016-11-02T23:55:49Z,2016-11-03T19:30:53Z,MERGED,True,188,199,4,https://github.com/justinemarie,PCAP Wrapper Class with changes discussed previously.,1,['enhancement'],https://github.com/NetSys/bess/pull/107,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/107#issuecomment-257991820,,Try again?,True,{}
NetSys/bess,https://github.com/NetSys/bess,107,2016-11-02T20:09:46Z,2016-11-02T23:55:49Z,2016-11-03T19:30:53Z,MERGED,True,188,199,4,https://github.com/justinemarie,PCAP Wrapper Class with changes discussed previously.,1,['enhancement'],https://github.com/NetSys/bess/pull/107,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/107#issuecomment-258002610,,Third time's a charm! :-),True,{}
NetSys/bess,https://github.com/NetSys/bess,107,2016-11-02T20:09:46Z,2016-11-02T23:55:49Z,2016-11-03T19:30:53Z,MERGED,True,188,199,4,https://github.com/justinemarie,PCAP Wrapper Class with changes discussed previously.,1,['enhancement'],https://github.com/NetSys/bess/pull/107,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/107#issuecomment-258035254,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,108,2016-11-02T21:33:46Z,2016-11-03T19:28:20Z,2016-11-07T21:18:32Z,MERGED,True,93,69,1,https://github.com/barath,"Changes bessd_test to ensure that fork() behavior is self-contained, …",1,['enhancement'],https://github.com/NetSys/bess/pull/108,https://github.com/barath,1,https://github.com/NetSys/bess/pull/108,…helping to ensure that tests that fail propagate that error to the top level.,…helping to ensure that tests that fail propagate that error to the top level.,True,{}
NetSys/bess,https://github.com/NetSys/bess,108,2016-11-02T21:33:46Z,2016-11-03T19:28:20Z,2016-11-07T21:18:32Z,MERGED,True,93,69,1,https://github.com/barath,"Changes bessd_test to ensure that fork() behavior is self-contained, …",1,['enhancement'],https://github.com/NetSys/bess/pull/108,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/108#issuecomment-258013472,…helping to ensure that tests that fail propagate that error to the top level.,"Current coverage is 28.26% (diff: 100%)

Merging #108 into c++ will decrease coverage by 1.23%

@@                c++       #108   diff @@
==========================================
  Files            33         33          
  Lines          2204       2300    +96   
  Methods         243        255    +12   
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            650        650          
- Misses         1554       1650    +96   
  Partials          0          0          

Powered by Codecov. Last update 0420d83...fab34ea",True,{}
NetSys/bess,https://github.com/NetSys/bess,108,2016-11-02T21:33:46Z,2016-11-03T19:28:20Z,2016-11-07T21:18:32Z,MERGED,True,93,69,1,https://github.com/barath,"Changes bessd_test to ensure that fork() behavior is self-contained, …",1,['enhancement'],https://github.com/NetSys/bess/pull/108,https://github.com/barath,3,https://github.com/NetSys/bess/pull/108#issuecomment-258067770,…helping to ensure that tests that fail propagate that error to the top level.,"I changed the behavior of bessd_test so it now uses pipes instead of sleeps to coordinate between child and parent processes in tests.  (Unfortunately DEATH tests didn't appear to work properly when invoked inside of lambdas, so I ended up not being able to use a C++11-style solution.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,108,2016-11-02T21:33:46Z,2016-11-03T19:28:20Z,2016-11-07T21:18:32Z,MERGED,True,93,69,1,https://github.com/barath,"Changes bessd_test to ensure that fork() behavior is self-contained, …",1,['enhancement'],https://github.com/NetSys/bess/pull/108,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/108#issuecomment-258249485,…helping to ensure that tests that fail propagate that error to the top level.,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,109,2016-11-03T22:27:03Z,2016-11-04T23:06:28Z,2016-11-04T23:14:48Z,MERGED,True,71,1,8,https://github.com/chaitanyalala,pmd: Add ability to query link-status,1,['enhancement'],https://github.com/NetSys/bess/pull/109,https://github.com/chaitanyalala,1,https://github.com/NetSys/bess/pull/109,"RFC patch
Currently there is no way to query for link
status like speed/duplex/link up/down for a physical
NIC controlled via bess. This ability is crucial to
for control plane protocols who need to take action if
link state changes.
This patch adds a ability to to access this setting via
a DPDK api and then adds plumbing all the way upto python
layer.
// Sample output
Current Link State for Physical port is {'duplex': 1, 'status': 1,
'autoneg': 0, 'speed': 10000}
// End
Signed-off-by: Chaitanya Lala clala@arista.com","RFC patch
Currently there is no way to query for link
status like speed/duplex/link up/down for a physical
NIC controlled via bess. This ability is crucial to
for control plane protocols who need to take action if
link state changes.
This patch adds a ability to to access this setting via
a DPDK api and then adds plumbing all the way upto python
layer.
// Sample output
Current Link State for Physical port is {'duplex': 1, 'status': 1,
'autoneg': 0, 'speed': 10000}
// End
Signed-off-by: Chaitanya Lala clala@arista.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,109,2016-11-03T22:27:03Z,2016-11-04T23:06:28Z,2016-11-04T23:14:48Z,MERGED,True,71,1,8,https://github.com/chaitanyalala,pmd: Add ability to query link-status,1,['enhancement'],https://github.com/NetSys/bess/pull/109,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/109#issuecomment-258359892,"RFC patch
Currently there is no way to query for link
status like speed/duplex/link up/down for a physical
NIC controlled via bess. This ability is crucial to
for control plane protocols who need to take action if
link state changes.
This patch adds a ability to to access this setting via
a DPDK api and then adds plumbing all the way upto python
layer.
// Sample output
Current Link State for Physical port is {'duplex': 1, 'status': 1,
'autoneg': 0, 'speed': 10000}
// End
Signed-off-by: Chaitanya Lala clala@arista.com","One clarification question: what does autoneg exactly mean in the struct? At a first glance it looks like ""whether we enabled the auto negotiation feature"" (so, configuration). If so, the nature of this field is somewhat different from others -- link status, duplex, speed -- since they are more like status, not configuration.
If its value never changes unless we do so, shall we remove the autoneg field from the struct?",True,{}
NetSys/bess,https://github.com/NetSys/bess,109,2016-11-03T22:27:03Z,2016-11-04T23:06:28Z,2016-11-04T23:14:48Z,MERGED,True,71,1,8,https://github.com/chaitanyalala,pmd: Add ability to query link-status,1,['enhancement'],https://github.com/NetSys/bess/pull/109,https://github.com/chaitanyalala,3,https://github.com/NetSys/bess/pull/109#issuecomment-258448808,"RFC patch
Currently there is no way to query for link
status like speed/duplex/link up/down for a physical
NIC controlled via bess. This ability is crucial to
for control plane protocols who need to take action if
link state changes.
This patch adds a ability to to access this setting via
a DPDK api and then adds plumbing all the way upto python
layer.
// Sample output
Current Link State for Physical port is {'duplex': 1, 'status': 1,
'autoneg': 0, 'speed': 10000}
// End
Signed-off-by: Chaitanya Lala clala@arista.com","What it means is ""did the port achieve current speed/duplex/link by auto
negotiating or by fix setting"". It is always a part of these things. I
tried to keep the same structure as is used by dpdk. Even standard Linux
ethtool displays. IMHO it should not be removed.
On Nov 4, 2016 12:16 AM, ""Sangjin Han"" notifications@github.com wrote:

One clarification question: what does autoneg exactly mean in the struct?
At a first glance it looks like ""whether we enabled the auto negotiation
feature"" (so, configuration). If so, the nature of this field is
somewhat different from others -- link status, duplex, speed -- since they
are more like status, not configuration.
If its value never changes unless we do so, shall we remove the autoneg
field from the struct?
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#109 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AJJh9cEhUC7DKaE4g38aiWW45gciONgNks5q6tvJgaJpZM4Ko_an
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,109,2016-11-03T22:27:03Z,2016-11-04T23:06:28Z,2016-11-04T23:14:48Z,MERGED,True,71,1,8,https://github.com/chaitanyalala,pmd: Add ability to query link-status,1,['enhancement'],https://github.com/NetSys/bess/pull/109,https://github.com/chaitanyalala,4,https://github.com/NetSys/bess/pull/109#issuecomment-258479516,"RFC patch
Currently there is no way to query for link
status like speed/duplex/link up/down for a physical
NIC controlled via bess. This ability is crucial to
for control plane protocols who need to take action if
link state changes.
This patch adds a ability to to access this setting via
a DPDK api and then adds plumbing all the way upto python
layer.
// Sample output
Current Link State for Physical port is {'duplex': 1, 'status': 1,
'autoneg': 0, 'speed': 10000}
// End
Signed-off-by: Chaitanya Lala clala@arista.com","To illustrate my point, please look at what standard Linux ethtool outputs.
# ethtool eth0
Settings for eth0:
        Supported ports: [ TP ]
        Supported link modes:   10baseT/Half 10baseT/Full
                                100baseT/Half 100baseT/Full
                                1000baseT/Full
        Supports auto-negotiation: Yes
        Advertised link modes:  10baseT/Half 10baseT/Full
                                100baseT/Half 100baseT/Full
                                1000baseT/Full
        Advertised auto-negotiation: Yes <------- This is what the autoneg bit in struct means.
        Speed: 100Mb/s
        Duplex: Full
        Port: Twisted Pair
        PHYAD: 1
        Transceiver: internal
        Auto-negotiation: on
        Supports Wake-on: d
        Wake-on: d
        Link detected: yes",True,{}
NetSys/bess,https://github.com/NetSys/bess,109,2016-11-03T22:27:03Z,2016-11-04T23:06:28Z,2016-11-04T23:14:48Z,MERGED,True,71,1,8,https://github.com/chaitanyalala,pmd: Add ability to query link-status,1,['enhancement'],https://github.com/NetSys/bess/pull/109,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/109#issuecomment-258568946,"RFC patch
Currently there is no way to query for link
status like speed/duplex/link up/down for a physical
NIC controlled via bess. This ability is crucial to
for control plane protocols who need to take action if
link state changes.
This patch adds a ability to to access this setting via
a DPDK api and then adds plumbing all the way upto python
layer.
// Sample output
Current Link State for Physical port is {'duplex': 1, 'status': 1,
'autoneg': 0, 'speed': 10000}
// End
Signed-off-by: Chaitanya Lala clala@arista.com","Oh I see, thanks for the comment. I will make sure equivalent functionality exist in the upcoming c++ version of BESS as well.",True,{}
NetSys/bess,https://github.com/NetSys/bess,110,2016-11-03T22:27:51Z,2016-11-05T00:45:10Z,2016-12-12T23:47:25Z,MERGED,True,75,2,4,https://github.com/justinemarie,Add basic unit tests and add initialization checks for PcapHandle.,2,['enhancement'],https://github.com/NetSys/bess/pull/110,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/110,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,110,2016-11-03T22:27:51Z,2016-11-05T00:45:10Z,2016-12-12T23:47:25Z,MERGED,True,75,2,4,https://github.com/justinemarie,Add basic unit tests and add initialization checks for PcapHandle.,2,['enhancement'],https://github.com/NetSys/bess/pull/110,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/110#issuecomment-258294891,,"Current coverage is 30.01% (diff: 100%)

Merging #110 into c++ will increase coverage by 0.67%

@@                c++       #110   diff @@
==========================================
  Files            34         36     +2   
  Lines          2219       2259    +40   
  Methods         245        253     +8   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            651        678    +27   
- Misses         1568       1581    +13   
  Partials          0          0          

Powered by Codecov. Last update 4704d0e...aceb51f",True,{}
NetSys/bess,https://github.com/NetSys/bess,110,2016-11-03T22:27:51Z,2016-11-05T00:45:10Z,2016-12-12T23:47:25Z,MERGED,True,75,2,4,https://github.com/justinemarie,Add basic unit tests and add initialization checks for PcapHandle.,2,['enhancement'],https://github.com/NetSys/bess/pull/110,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/110#issuecomment-258579641,,"Merged, thanks! Added an additional commit (dacf62c) to address minor issues, including Barath's comment.",True,{}
NetSys/bess,https://github.com/NetSys/bess,111,2016-11-03T23:13:14Z,2016-11-04T01:48:30Z,2016-11-21T17:51:10Z,CLOSED,False,234,2,5,https://github.com/melvinw,add some module tests,2,[],https://github.com/NetSys/bess/pull/111,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/111,"add example test for modules going forward
add metadata getter/setter template tests","add example test for modules going forward
add metadata getter/setter template tests",True,{}
NetSys/bess,https://github.com/NetSys/bess,111,2016-11-03T23:13:14Z,2016-11-04T01:48:30Z,2016-11-21T17:51:10Z,CLOSED,False,234,2,5,https://github.com/melvinw,add some module tests,2,[],https://github.com/NetSys/bess/pull/111,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/111#issuecomment-258304102,"add example test for modules going forward
add metadata getter/setter template tests","Current coverage is 35.97% (diff: 100%)

Merging #111 into c++ will increase coverage by 6.63%

@@                c++       #111   diff @@
==========================================
  Files            34         36     +2   
  Lines          2219       2338   +119   
  Methods         245        258    +13   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            651        841   +190   
+ Misses         1568       1497    -71   
  Partials          0          0          

Powered by Codecov. Last update 4704d0e...6f999d3",True,{}
NetSys/bess,https://github.com/NetSys/bess,111,2016-11-03T23:13:14Z,2016-11-04T01:48:30Z,2016-11-21T17:51:10Z,CLOSED,False,234,2,5,https://github.com/melvinw,add some module tests,2,[],https://github.com/NetSys/bess/pull/111,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/111#issuecomment-258324926,"add example test for modules going forward
add metadata getter/setter template tests",waiting for bessctl to converge before merging this.,True,{}
NetSys/bess,https://github.com/NetSys/bess,112,2016-11-04T02:04:23Z,2016-11-05T01:02:19Z,2016-11-07T22:34:18Z,MERGED,True,1134,901,95,https://github.com/changlan,Protobuf polymorphism,4,['enhancement'],https://github.com/NetSys/bess/pull/112,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/112,"Minor naming changes in proto files
Use google.protobuf.Any types for arguments of module init function and commands
Remove BESS core dependency on module-specific proto files","Minor naming changes in proto files
Use google.protobuf.Any types for arguments of module init function and commands
Remove BESS core dependency on module-specific proto files",True,{}
NetSys/bess,https://github.com/NetSys/bess,112,2016-11-04T02:04:23Z,2016-11-05T01:02:19Z,2016-11-07T22:34:18Z,MERGED,True,1134,901,95,https://github.com/changlan,Protobuf polymorphism,4,['enhancement'],https://github.com/NetSys/bess/pull/112,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/112#issuecomment-258328050,"Minor naming changes in proto files
Use google.protobuf.Any types for arguments of module init function and commands
Remove BESS core dependency on module-specific proto files","Current coverage is 29.12% (diff: 11.11%)

Merging #112 into c++ will decrease coverage by 0.21%

@@                c++       #112   diff @@
==========================================
  Files            34         34          
  Lines          2219       2242    +23   
  Methods         245        245          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            651        653     +2   
- Misses         1568       1589    +21   
  Partials          0          0          

Powered by Codecov. Last update 4704d0e...b106ed3",True,{}
NetSys/bess,https://github.com/NetSys/bess,112,2016-11-04T02:04:23Z,2016-11-05T01:02:19Z,2016-11-07T22:34:18Z,MERGED,True,1134,901,95,https://github.com/changlan,Protobuf polymorphism,4,['enhancement'],https://github.com/NetSys/bess/pull/112,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/112#issuecomment-258329107,"Minor naming changes in proto files
Use google.protobuf.Any types for arguments of module init function and commands
Remove BESS core dependency on module-specific proto files","Whoaaaaa that's a lot of files!
Sent from my rotary phone.
On Nov 3, 2016 19:13, ""Codecov"" notifications@github.com wrote:

Current coverage https://codecov.io/gh/NetSys/bess/pull/112?src=pr is
29.29% (diff: 15.38%)
Merging #112 https://codecov.io/gh/NetSys/bess/pull/112?src=pr into c++
https://codecov.io/gh/NetSys/bess/branch/c%2B%2B?src=pr will decrease
coverage by 0.04%
@@                c++       #112   diff @@
Files            34         33     -1
Lines          2219       2229    +10
Methods         245        243     -2
Messages          0          0
Branches          0          0
==========================================+ Hits            651        653     +2   - Misses         1568       1576     +8
Partials          0          0
Powered by Codecov https://codecov.io?src=pr. Last update
4704d0e...e3ea751
https://codecov.io/gh/NetSys/bess/compare/4704d0e53c86a7f4f6e9e4d86f7aa27324aa6a80...e3ea751b499b8f7b63cabd512e4a7983d8e5dc51?src=pr
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub
#112 (comment), or mute
the thread
https://github.com/notifications/unsubscribe-auth/AAE6Flx7aYx1Q-oGxFYhs5ZfNrhM_gZUks5q6pTbgaJpZM4KpHq7
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,112,2016-11-04T02:04:23Z,2016-11-05T01:02:19Z,2016-11-07T22:34:18Z,MERGED,True,1134,901,95,https://github.com/changlan,Protobuf polymorphism,4,['enhancement'],https://github.com/NetSys/bess/pull/112,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/112#issuecomment-258580819,"Minor naming changes in proto files
Use google.protobuf.Any types for arguments of module init function and commands
Remove BESS core dependency on module-specific proto files","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,113,2016-11-06T04:14:57Z,2016-11-07T19:44:54Z,2016-11-07T22:02:50Z,MERGED,True,24,6,1,https://github.com/sangjinhan,Improve htable_bench output,1,['enhancement'],https://github.com/NetSys/bess/pull/113,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/113,"Print out items/s measurement
Reduce libbenchmark overhead
Show # of operations, not # of loop iterations

Before:
Benchmark                                 Time           CPU Iterations
-----------------------------------------------------------------------
BessFixture/BessGet/4                    55 ns         55 ns   12919383
BessFixture/BessGet/16                  221 ns        221 ns    3183977
BessFixture/BessGet/64                  869 ns        869 ns     787016
BessFixture/BessGet/256                4045 ns       4045 ns     172809
BessFixture/BessGet/1024              18599 ns      18598 ns      38020
BessFixture/BessGet/4k                88456 ns      88452 ns       7767
BessFixture/BessGet/16k              410316 ns     410294 ns       1717
BessFixture/BessGet/64k             1867132 ns    1867025 ns        372
BessFixture/BessGet/256k            8465542 ns    8464801 ns         83
BessFixture/BessGet/1024k          37614708 ns   37613021 ns         19
BessFixture/BessGet/4M            311848071 ns  311821987 ns          2
BessFixture/BessInlinedGet/4             12 ns         12 ns   57567445
BessFixture/BessInlinedGet/16            56 ns         56 ns   12534705
BessFixture/BessInlinedGet/64           188 ns        188 ns    3728018
BessFixture/BessInlinedGet/256          753 ns        753 ns     941174
BessFixture/BessInlinedGet/1024        3049 ns       3048 ns     229160
BessFixture/BessInlinedGet/4k         32724 ns      32722 ns      21437
BessFixture/BessInlinedGet/16k       210571 ns     210561 ns       3335
BessFixture/BessInlinedGet/64k       935430 ns     935375 ns        749
BessFixture/BessInlinedGet/256k     3931766 ns    3931489 ns        178
BessFixture/BessInlinedGet/1024k   19126517 ns   19125327 ns         36
BessFixture/BessInlinedGet/4M     120839269 ns  120830044 ns          6

After:
Benchmark                                 Time           CPU Iterations
-----------------------------------------------------------------------
BessFixture/BessGet/4                    14 ns         14 ns   48601637   70.2994M items/s
BessFixture/BessGet/16                   14 ns         14 ns   50540625   68.7609M items/s
BessFixture/BessGet/64                   14 ns         14 ns   51201762   70.3821M items/s
BessFixture/BessGet/256                  16 ns         16 ns   44421665   60.2655M items/s
BessFixture/BessGet/1024                 18 ns         18 ns   37760110   51.6556M items/s
BessFixture/BessGet/4k                   22 ns         22 ns   32130403    42.721M items/s
BessFixture/BessGet/16k                  26 ns         26 ns   27624308   37.2368M items/s
BessFixture/BessGet/64k                  29 ns         29 ns   24268172   33.0974M items/s
BessFixture/BessGet/256k                 32 ns         32 ns   21646936   29.5083M items/s
BessFixture/BessGet/1024k                37 ns         37 ns   18744430     25.92M items/s
BessFixture/BessGet/4M                   75 ns         75 ns    8758345   12.7431M items/s
BessFixture/BessInlinedGet/4              4 ns          4 ns  178474210   243.156M items/s
BessFixture/BessInlinedGet/16             5 ns          5 ns  148216962   202.099M items/s
BessFixture/BessInlinedGet/64             4 ns          4 ns  167609541   217.959M items/s
BessFixture/BessInlinedGet/256            4 ns          4 ns  164916620   230.309M items/s
BessFixture/BessInlinedGet/1024           4 ns          4 ns  164390748   224.532M items/s
BessFixture/BessInlinedGet/4k            10 ns         10 ns   68487332   93.1635M items/s
BessFixture/BessInlinedGet/16k           15 ns         15 ns   46478973   63.3617M items/s
BessFixture/BessInlinedGet/64k           17 ns         17 ns   41296390   55.8423M items/s
BessFixture/BessInlinedGet/256k          20 ns         20 ns   35640899   48.5433M items/s
BessFixture/BessInlinedGet/1024k         23 ns         23 ns   30354931   41.4373M items/s
BessFixture/BessInlinedGet/4M            35 ns         35 ns   19849144   26.9052M items/s","Print out items/s measurement
Reduce libbenchmark overhead
Show # of operations, not # of loop iterations

Before:
Benchmark                                 Time           CPU Iterations
-----------------------------------------------------------------------
BessFixture/BessGet/4                    55 ns         55 ns   12919383
BessFixture/BessGet/16                  221 ns        221 ns    3183977
BessFixture/BessGet/64                  869 ns        869 ns     787016
BessFixture/BessGet/256                4045 ns       4045 ns     172809
BessFixture/BessGet/1024              18599 ns      18598 ns      38020
BessFixture/BessGet/4k                88456 ns      88452 ns       7767
BessFixture/BessGet/16k              410316 ns     410294 ns       1717
BessFixture/BessGet/64k             1867132 ns    1867025 ns        372
BessFixture/BessGet/256k            8465542 ns    8464801 ns         83
BessFixture/BessGet/1024k          37614708 ns   37613021 ns         19
BessFixture/BessGet/4M            311848071 ns  311821987 ns          2
BessFixture/BessInlinedGet/4             12 ns         12 ns   57567445
BessFixture/BessInlinedGet/16            56 ns         56 ns   12534705
BessFixture/BessInlinedGet/64           188 ns        188 ns    3728018
BessFixture/BessInlinedGet/256          753 ns        753 ns     941174
BessFixture/BessInlinedGet/1024        3049 ns       3048 ns     229160
BessFixture/BessInlinedGet/4k         32724 ns      32722 ns      21437
BessFixture/BessInlinedGet/16k       210571 ns     210561 ns       3335
BessFixture/BessInlinedGet/64k       935430 ns     935375 ns        749
BessFixture/BessInlinedGet/256k     3931766 ns    3931489 ns        178
BessFixture/BessInlinedGet/1024k   19126517 ns   19125327 ns         36
BessFixture/BessInlinedGet/4M     120839269 ns  120830044 ns          6

After:
Benchmark                                 Time           CPU Iterations
-----------------------------------------------------------------------
BessFixture/BessGet/4                    14 ns         14 ns   48601637   70.2994M items/s
BessFixture/BessGet/16                   14 ns         14 ns   50540625   68.7609M items/s
BessFixture/BessGet/64                   14 ns         14 ns   51201762   70.3821M items/s
BessFixture/BessGet/256                  16 ns         16 ns   44421665   60.2655M items/s
BessFixture/BessGet/1024                 18 ns         18 ns   37760110   51.6556M items/s
BessFixture/BessGet/4k                   22 ns         22 ns   32130403    42.721M items/s
BessFixture/BessGet/16k                  26 ns         26 ns   27624308   37.2368M items/s
BessFixture/BessGet/64k                  29 ns         29 ns   24268172   33.0974M items/s
BessFixture/BessGet/256k                 32 ns         32 ns   21646936   29.5083M items/s
BessFixture/BessGet/1024k                37 ns         37 ns   18744430     25.92M items/s
BessFixture/BessGet/4M                   75 ns         75 ns    8758345   12.7431M items/s
BessFixture/BessInlinedGet/4              4 ns          4 ns  178474210   243.156M items/s
BessFixture/BessInlinedGet/16             5 ns          5 ns  148216962   202.099M items/s
BessFixture/BessInlinedGet/64             4 ns          4 ns  167609541   217.959M items/s
BessFixture/BessInlinedGet/256            4 ns          4 ns  164916620   230.309M items/s
BessFixture/BessInlinedGet/1024           4 ns          4 ns  164390748   224.532M items/s
BessFixture/BessInlinedGet/4k            10 ns         10 ns   68487332   93.1635M items/s
BessFixture/BessInlinedGet/16k           15 ns         15 ns   46478973   63.3617M items/s
BessFixture/BessInlinedGet/64k           17 ns         17 ns   41296390   55.8423M items/s
BessFixture/BessInlinedGet/256k          20 ns         20 ns   35640899   48.5433M items/s
BessFixture/BessInlinedGet/1024k         23 ns         23 ns   30354931   41.4373M items/s
BessFixture/BessInlinedGet/4M            35 ns         35 ns   19849144   26.9052M items/s",True,{}
NetSys/bess,https://github.com/NetSys/bess,113,2016-11-06T04:14:57Z,2016-11-07T19:44:54Z,2016-11-07T22:02:50Z,MERGED,True,24,6,1,https://github.com/sangjinhan,Improve htable_bench output,1,['enhancement'],https://github.com/NetSys/bess/pull/113,https://github.com/barath,2,https://github.com/NetSys/bess/pull/113#issuecomment-258659637,"Print out items/s measurement
Reduce libbenchmark overhead
Show # of operations, not # of loop iterations

Before:
Benchmark                                 Time           CPU Iterations
-----------------------------------------------------------------------
BessFixture/BessGet/4                    55 ns         55 ns   12919383
BessFixture/BessGet/16                  221 ns        221 ns    3183977
BessFixture/BessGet/64                  869 ns        869 ns     787016
BessFixture/BessGet/256                4045 ns       4045 ns     172809
BessFixture/BessGet/1024              18599 ns      18598 ns      38020
BessFixture/BessGet/4k                88456 ns      88452 ns       7767
BessFixture/BessGet/16k              410316 ns     410294 ns       1717
BessFixture/BessGet/64k             1867132 ns    1867025 ns        372
BessFixture/BessGet/256k            8465542 ns    8464801 ns         83
BessFixture/BessGet/1024k          37614708 ns   37613021 ns         19
BessFixture/BessGet/4M            311848071 ns  311821987 ns          2
BessFixture/BessInlinedGet/4             12 ns         12 ns   57567445
BessFixture/BessInlinedGet/16            56 ns         56 ns   12534705
BessFixture/BessInlinedGet/64           188 ns        188 ns    3728018
BessFixture/BessInlinedGet/256          753 ns        753 ns     941174
BessFixture/BessInlinedGet/1024        3049 ns       3048 ns     229160
BessFixture/BessInlinedGet/4k         32724 ns      32722 ns      21437
BessFixture/BessInlinedGet/16k       210571 ns     210561 ns       3335
BessFixture/BessInlinedGet/64k       935430 ns     935375 ns        749
BessFixture/BessInlinedGet/256k     3931766 ns    3931489 ns        178
BessFixture/BessInlinedGet/1024k   19126517 ns   19125327 ns         36
BessFixture/BessInlinedGet/4M     120839269 ns  120830044 ns          6

After:
Benchmark                                 Time           CPU Iterations
-----------------------------------------------------------------------
BessFixture/BessGet/4                    14 ns         14 ns   48601637   70.2994M items/s
BessFixture/BessGet/16                   14 ns         14 ns   50540625   68.7609M items/s
BessFixture/BessGet/64                   14 ns         14 ns   51201762   70.3821M items/s
BessFixture/BessGet/256                  16 ns         16 ns   44421665   60.2655M items/s
BessFixture/BessGet/1024                 18 ns         18 ns   37760110   51.6556M items/s
BessFixture/BessGet/4k                   22 ns         22 ns   32130403    42.721M items/s
BessFixture/BessGet/16k                  26 ns         26 ns   27624308   37.2368M items/s
BessFixture/BessGet/64k                  29 ns         29 ns   24268172   33.0974M items/s
BessFixture/BessGet/256k                 32 ns         32 ns   21646936   29.5083M items/s
BessFixture/BessGet/1024k                37 ns         37 ns   18744430     25.92M items/s
BessFixture/BessGet/4M                   75 ns         75 ns    8758345   12.7431M items/s
BessFixture/BessInlinedGet/4              4 ns          4 ns  178474210   243.156M items/s
BessFixture/BessInlinedGet/16             5 ns          5 ns  148216962   202.099M items/s
BessFixture/BessInlinedGet/64             4 ns          4 ns  167609541   217.959M items/s
BessFixture/BessInlinedGet/256            4 ns          4 ns  164916620   230.309M items/s
BessFixture/BessInlinedGet/1024           4 ns          4 ns  164390748   224.532M items/s
BessFixture/BessInlinedGet/4k            10 ns         10 ns   68487332   93.1635M items/s
BessFixture/BessInlinedGet/16k           15 ns         15 ns   46478973   63.3617M items/s
BessFixture/BessInlinedGet/64k           17 ns         17 ns   41296390   55.8423M items/s
BessFixture/BessInlinedGet/256k          20 ns         20 ns   35640899   48.5433M items/s
BessFixture/BessInlinedGet/1024k         23 ns         23 ns   30354931   41.4373M items/s
BessFixture/BessInlinedGet/4M            35 ns         35 ns   19849144   26.9052M items/s",Nice!,True,{}
NetSys/bess,https://github.com/NetSys/bess,113,2016-11-06T04:14:57Z,2016-11-07T19:44:54Z,2016-11-07T22:02:50Z,MERGED,True,24,6,1,https://github.com/sangjinhan,Improve htable_bench output,1,['enhancement'],https://github.com/NetSys/bess/pull/113,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/113#issuecomment-258659786,"Print out items/s measurement
Reduce libbenchmark overhead
Show # of operations, not # of loop iterations

Before:
Benchmark                                 Time           CPU Iterations
-----------------------------------------------------------------------
BessFixture/BessGet/4                    55 ns         55 ns   12919383
BessFixture/BessGet/16                  221 ns        221 ns    3183977
BessFixture/BessGet/64                  869 ns        869 ns     787016
BessFixture/BessGet/256                4045 ns       4045 ns     172809
BessFixture/BessGet/1024              18599 ns      18598 ns      38020
BessFixture/BessGet/4k                88456 ns      88452 ns       7767
BessFixture/BessGet/16k              410316 ns     410294 ns       1717
BessFixture/BessGet/64k             1867132 ns    1867025 ns        372
BessFixture/BessGet/256k            8465542 ns    8464801 ns         83
BessFixture/BessGet/1024k          37614708 ns   37613021 ns         19
BessFixture/BessGet/4M            311848071 ns  311821987 ns          2
BessFixture/BessInlinedGet/4             12 ns         12 ns   57567445
BessFixture/BessInlinedGet/16            56 ns         56 ns   12534705
BessFixture/BessInlinedGet/64           188 ns        188 ns    3728018
BessFixture/BessInlinedGet/256          753 ns        753 ns     941174
BessFixture/BessInlinedGet/1024        3049 ns       3048 ns     229160
BessFixture/BessInlinedGet/4k         32724 ns      32722 ns      21437
BessFixture/BessInlinedGet/16k       210571 ns     210561 ns       3335
BessFixture/BessInlinedGet/64k       935430 ns     935375 ns        749
BessFixture/BessInlinedGet/256k     3931766 ns    3931489 ns        178
BessFixture/BessInlinedGet/1024k   19126517 ns   19125327 ns         36
BessFixture/BessInlinedGet/4M     120839269 ns  120830044 ns          6

After:
Benchmark                                 Time           CPU Iterations
-----------------------------------------------------------------------
BessFixture/BessGet/4                    14 ns         14 ns   48601637   70.2994M items/s
BessFixture/BessGet/16                   14 ns         14 ns   50540625   68.7609M items/s
BessFixture/BessGet/64                   14 ns         14 ns   51201762   70.3821M items/s
BessFixture/BessGet/256                  16 ns         16 ns   44421665   60.2655M items/s
BessFixture/BessGet/1024                 18 ns         18 ns   37760110   51.6556M items/s
BessFixture/BessGet/4k                   22 ns         22 ns   32130403    42.721M items/s
BessFixture/BessGet/16k                  26 ns         26 ns   27624308   37.2368M items/s
BessFixture/BessGet/64k                  29 ns         29 ns   24268172   33.0974M items/s
BessFixture/BessGet/256k                 32 ns         32 ns   21646936   29.5083M items/s
BessFixture/BessGet/1024k                37 ns         37 ns   18744430     25.92M items/s
BessFixture/BessGet/4M                   75 ns         75 ns    8758345   12.7431M items/s
BessFixture/BessInlinedGet/4              4 ns          4 ns  178474210   243.156M items/s
BessFixture/BessInlinedGet/16             5 ns          5 ns  148216962   202.099M items/s
BessFixture/BessInlinedGet/64             4 ns          4 ns  167609541   217.959M items/s
BessFixture/BessInlinedGet/256            4 ns          4 ns  164916620   230.309M items/s
BessFixture/BessInlinedGet/1024           4 ns          4 ns  164390748   224.532M items/s
BessFixture/BessInlinedGet/4k            10 ns         10 ns   68487332   93.1635M items/s
BessFixture/BessInlinedGet/16k           15 ns         15 ns   46478973   63.3617M items/s
BessFixture/BessInlinedGet/64k           17 ns         17 ns   41296390   55.8423M items/s
BessFixture/BessInlinedGet/256k          20 ns         20 ns   35640899   48.5433M items/s
BessFixture/BessInlinedGet/1024k         23 ns         23 ns   30354931   41.4373M items/s
BessFixture/BessInlinedGet/4M            35 ns         35 ns   19849144   26.9052M items/s","Current coverage is 30.10% (diff: 100%)

Merging #113 into c++ will not change coverage

@@                c++       #113   diff @@
==========================================
  Files            36         36          
  Lines          2285       2285          
  Methods         255        255          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            688        688          
  Misses         1597       1597          
  Partials          0          0          

Powered by Codecov. Last update 8198b8b...aff5979",True,{}
NetSys/bess,https://github.com/NetSys/bess,114,2016-11-07T00:35:42Z,2016-11-07T19:46:00Z,2016-11-07T22:02:46Z,MERGED,True,392,670,53,https://github.com/sangjinhan,Replace old log_*() calls with Google glog,13,['enhancement'],https://github.com/NetSys/bess/pull/114,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/114,(along with other style fixes),(along with other style fixes),True,{}
NetSys/bess,https://github.com/NetSys/bess,114,2016-11-07T00:35:42Z,2016-11-07T19:46:00Z,2016-11-07T22:02:46Z,MERGED,True,392,670,53,https://github.com/sangjinhan,Replace old log_*() calls with Google glog,13,['enhancement'],https://github.com/NetSys/bess/pull/114,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/114#issuecomment-258724784,(along with other style fixes),"Current coverage is 31.85% (diff: 0.00%)

Merging #114 into c++ will increase coverage by 1.74%

@@                c++       #114   diff @@
==========================================
  Files            36         35     -1   
  Lines          2285       2160   -125   
  Methods         255        244    -11   
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            688        688          
+ Misses         1597       1472   -125   
  Partials          0          0          

Powered by Codecov. Last update 8198b8b...513465c",True,{}
NetSys/bess,https://github.com/NetSys/bess,114,2016-11-07T00:35:42Z,2016-11-07T19:46:00Z,2016-11-07T22:02:46Z,MERGED,True,392,670,53,https://github.com/sangjinhan,Replace old log_*() calls with Google glog,13,['enhancement'],https://github.com/NetSys/bess/pull/114,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/114#issuecomment-258939160,(along with other style fixes),Looks good. +1,True,{}
NetSys/bess,https://github.com/NetSys/bess,115,2016-11-07T06:04:22Z,2016-11-08T00:07:04Z,2016-11-08T00:10:16Z,CLOSED,False,22,0,2,https://github.com/melvinw,reintroduce code coverage script,2,['enhancement'],https://github.com/NetSys/bess/pull/115,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/115,"It's useful for checking the effects of new tests before submitting pull
requests.","It's useful for checking the effects of new tests before submitting pull
requests.",True,{}
NetSys/bess,https://github.com/NetSys/bess,115,2016-11-07T06:04:22Z,2016-11-08T00:07:04Z,2016-11-08T00:10:16Z,CLOSED,False,22,0,2,https://github.com/melvinw,reintroduce code coverage script,2,['enhancement'],https://github.com/NetSys/bess/pull/115,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/115#issuecomment-258755114,"It's useful for checking the effects of new tests before submitting pull
requests.","Current coverage is 30.10% (diff: 100%)

Merging #115 into c++ will not change coverage

@@                c++       #115   diff @@
==========================================
  Files            36         36          
  Lines          2285       2285          
  Methods         255        255          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            688        688          
  Misses         1597       1597          
  Partials          0          0          

Powered by Codecov. Last update 8198b8b...ef5deb9",True,{}
NetSys/bess,https://github.com/NetSys/bess,115,2016-11-07T06:04:22Z,2016-11-08T00:07:04Z,2016-11-08T00:10:16Z,CLOSED,False,22,0,2,https://github.com/melvinw,reintroduce code coverage script,2,['enhancement'],https://github.com/NetSys/bess/pull/115,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/115#issuecomment-258944803,"It's useful for checking the effects of new tests before submitting pull
requests.",".gitignore needs to include the generated file and directory.
Maybe you can run all_test, instead of iterating over all individual files?",True,{}
NetSys/bess,https://github.com/NetSys/bess,115,2016-11-07T06:04:22Z,2016-11-08T00:07:04Z,2016-11-08T00:10:16Z,CLOSED,False,22,0,2,https://github.com/melvinw,reintroduce code coverage script,2,['enhancement'],https://github.com/NetSys/bess/pull/115,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/115#issuecomment-259004560,"It's useful for checking the effects of new tests before submitting pull
requests.","Thanks, merged with some additional minor changes.",True,{}
NetSys/bess,https://github.com/NetSys/bess,115,2016-11-07T06:04:22Z,2016-11-08T00:07:04Z,2016-11-08T00:10:16Z,CLOSED,False,22,0,2,https://github.com/melvinw,reintroduce code coverage script,2,['enhancement'],https://github.com/NetSys/bess/pull/115,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/115#issuecomment-259005092,"It's useful for checking the effects of new tests before submitting pull
requests.",was 027f31c supposed to get chopped off? It adds some convenience stuff,True,{}
NetSys/bess,https://github.com/NetSys/bess,116,2016-11-07T21:29:37Z,2016-11-08T01:10:46Z,2016-11-08T01:13:01Z,MERGED,True,786,838,99,https://github.com/changlan,Explicit types for init and cmd args,7,['enhancement'],https://github.com/NetSys/bess/pull/116,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/116,"Previously we used google::protobuf::Any as the argument type for module Init functions and Command functions. Inside those functions we convert google::protobuf::Any into appropriate message types using clumsy code snippets in every function:
pb_error_t PMDPort::Init(const google::protobuf::Any &arg_) {
  bess::pb::PMDPortArg arg;		
  arg_.UnpackTo(&arg);
  ...

This PR enables those functions to use module specific argument type, while keeping modules message types separate from BESS core.","Previously we used google::protobuf::Any as the argument type for module Init functions and Command functions. Inside those functions we convert google::protobuf::Any into appropriate message types using clumsy code snippets in every function:
pb_error_t PMDPort::Init(const google::protobuf::Any &arg_) {
  bess::pb::PMDPortArg arg;		
  arg_.UnpackTo(&arg);
  ...

This PR enables those functions to use module specific argument type, while keeping modules message types separate from BESS core.",True,{}
NetSys/bess,https://github.com/NetSys/bess,116,2016-11-07T21:29:37Z,2016-11-08T01:10:46Z,2016-11-08T01:13:01Z,MERGED,True,786,838,99,https://github.com/changlan,Explicit types for init and cmd args,7,['enhancement'],https://github.com/NetSys/bess/pull/116,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/116#issuecomment-258997414,"Previously we used google::protobuf::Any as the argument type for module Init functions and Command functions. Inside those functions we convert google::protobuf::Any into appropriate message types using clumsy code snippets in every function:
pb_error_t PMDPort::Init(const google::protobuf::Any &arg_) {
  bess::pb::PMDPortArg arg;		
  arg_.UnpackTo(&arg);
  ...

This PR enables those functions to use module specific argument type, while keeping modules message types separate from BESS core.","Current coverage is 33.69% (diff: 78.37%)

Merging #116 into c++ will increase coverage by 1.84%

@@                c++       #116   diff @@
==========================================
  Files            35         35          
  Lines          2160       2187    +27   
  Methods         244        253     +9   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            688        737    +49   
+ Misses         1472       1450    -22   
  Partials          0          0          

Powered by Codecov. Last update 91cb696...d1e7f99",True,{}
NetSys/bess,https://github.com/NetSys/bess,116,2016-11-07T21:29:37Z,2016-11-08T01:10:46Z,2016-11-08T01:13:01Z,MERGED,True,786,838,99,https://github.com/changlan,Explicit types for init and cmd args,7,['enhancement'],https://github.com/NetSys/bess/pull/116,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/116#issuecomment-259005062,"Previously we used google::protobuf::Any as the argument type for module Init functions and Command functions. Inside those functions we convert google::protobuf::Any into appropriate message types using clumsy code snippets in every function:
pb_error_t PMDPort::Init(const google::protobuf::Any &arg_) {
  bess::pb::PMDPortArg arg;		
  arg_.UnpackTo(&arg);
  ...

This PR enables those functions to use module specific argument type, while keeping modules message types separate from BESS core.",Working on the same mechanism for ports.,True,{}
NetSys/bess,https://github.com/NetSys/bess,116,2016-11-07T21:29:37Z,2016-11-08T01:10:46Z,2016-11-08T01:13:01Z,MERGED,True,786,838,99,https://github.com/changlan,Explicit types for init and cmd args,7,['enhancement'],https://github.com/NetSys/bess/pull/116,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/116#issuecomment-259006194,"Previously we used google::protobuf::Any as the argument type for module Init functions and Command functions. Inside those functions we convert google::protobuf::Any into appropriate message types using clumsy code snippets in every function:
pb_error_t PMDPort::Init(const google::protobuf::Any &arg_) {
  bess::pb::PMDPortArg arg;		
  arg_.UnpackTo(&arg);
  ...

This PR enables those functions to use module specific argument type, while keeping modules message types separate from BESS core.",Let me know whenever it's ready,True,{}
NetSys/bess,https://github.com/NetSys/bess,116,2016-11-07T21:29:37Z,2016-11-08T01:10:46Z,2016-11-08T01:13:01Z,MERGED,True,786,838,99,https://github.com/changlan,Explicit types for init and cmd args,7,['enhancement'],https://github.com/NetSys/bess/pull/116,https://github.com/changlan,5,https://github.com/NetSys/bess/pull/116#issuecomment-259014241,"Previously we used google::protobuf::Any as the argument type for module Init functions and Command functions. Inside those functions we convert google::protobuf::Any into appropriate message types using clumsy code snippets in every function:
pb_error_t PMDPort::Init(const google::protobuf::Any &arg_) {
  bess::pb::PMDPortArg arg;		
  arg_.UnpackTo(&arg);
  ...

This PR enables those functions to use module specific argument type, while keeping modules message types separate from BESS core.","Yep, it is finished.",True,{}
NetSys/bess,https://github.com/NetSys/bess,116,2016-11-07T21:29:37Z,2016-11-08T01:10:46Z,2016-11-08T01:13:01Z,MERGED,True,786,838,99,https://github.com/changlan,Explicit types for init and cmd args,7,['enhancement'],https://github.com/NetSys/bess/pull/116,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/116#issuecomment-259015262,"Previously we used google::protobuf::Any as the argument type for module Init functions and Command functions. Inside those functions we convert google::protobuf::Any into appropriate message types using clumsy code snippets in every function:
pb_error_t PMDPort::Init(const google::protobuf::Any &arg_) {
  bess::pb::PMDPortArg arg;		
  arg_.UnpackTo(&arg);
  ...

This PR enables those functions to use module specific argument type, while keeping modules message types separate from BESS core.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,117,2016-11-07T22:02:09Z,2016-11-08T00:30:30Z,2016-11-08T18:46:54Z,CLOSED,False,43,43,3,https://github.com/sangjinhan,Do not create .make.dep file,10,['enhancement'],https://github.com/NetSys/bess/pull/117,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/117,".make.dep contains Makefile dependency information for all source code files. Whenever a single file is  modified, the entire .make.dep is updated. This patch introduces individual dependency files for each source code file in .deps/, without having the central .make.dep file.
Other changes:

Makefile does not automatically enforce parallel build any longer. You have to explicitly specify make -j if parallel build is desired.
A bug that does not show message with VERBOSE=1 make was fixed.",".make.dep contains Makefile dependency information for all source code files. Whenever a single file is  modified, the entire .make.dep is updated. This patch introduces individual dependency files for each source code file in .deps/, without having the central .make.dep file.
Other changes:

Makefile does not automatically enforce parallel build any longer. You have to explicitly specify make -j if parallel build is desired.
A bug that does not show message with VERBOSE=1 make was fixed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,117,2016-11-07T22:02:09Z,2016-11-08T00:30:30Z,2016-11-08T18:46:54Z,CLOSED,False,43,43,3,https://github.com/sangjinhan,Do not create .make.dep file,10,['enhancement'],https://github.com/NetSys/bess/pull/117,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/117#issuecomment-259008541,".make.dep contains Makefile dependency information for all source code files. Whenever a single file is  modified, the entire .make.dep is updated. This patch introduces individual dependency files for each source code file in .deps/, without having the central .make.dep file.
Other changes:

Makefile does not automatically enforce parallel build any longer. You have to explicitly specify make -j if parallel build is desired.
A bug that does not show message with VERBOSE=1 make was fixed.",Something went wrong. Making a new PR.,True,{}
NetSys/bess,https://github.com/NetSys/bess,118,2016-11-08T00:31:35Z,2016-11-08T07:51:16Z,2016-11-15T22:55:51Z,MERGED,True,29,42,1,https://github.com/sangjinhan,Do not create .make.dep file,2,['enhancement'],https://github.com/NetSys/bess/pull/118,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/118,".make.dep contains Makefile dependency information for all source code files. Whenever a single file is  modified, the entire .make.dep is updated. This patch introduces individual dependency files for each source code file in .deps/, without having the central .make.dep file.
Other changes:

Makefile does not automatically enforce parallel build any longer. You have to explicitly specify make -j if parallel build is desired.
A bug that does not show message with VERBOSE=1 make was fixed.",".make.dep contains Makefile dependency information for all source code files. Whenever a single file is  modified, the entire .make.dep is updated. This patch introduces individual dependency files for each source code file in .deps/, without having the central .make.dep file.
Other changes:

Makefile does not automatically enforce parallel build any longer. You have to explicitly specify make -j if parallel build is desired.
A bug that does not show message with VERBOSE=1 make was fixed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,118,2016-11-08T00:31:35Z,2016-11-08T07:51:16Z,2016-11-15T22:55:51Z,MERGED,True,29,42,1,https://github.com/sangjinhan,Do not create .make.dep file,2,['enhancement'],https://github.com/NetSys/bess/pull/118,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/118#issuecomment-259013260,".make.dep contains Makefile dependency information for all source code files. Whenever a single file is  modified, the entire .make.dep is updated. This patch introduces individual dependency files for each source code file in .deps/, without having the central .make.dep file.
Other changes:

Makefile does not automatically enforce parallel build any longer. You have to explicitly specify make -j if parallel build is desired.
A bug that does not show message with VERBOSE=1 make was fixed.","Current coverage is 31.85% (diff: 100%)

Merging #118 into c++ will not change coverage

@@                c++       #118   diff @@
==========================================
  Files            35         35          
  Lines          2160       2160          
  Methods         244        244          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            688        688          
  Misses         1472       1472          
  Partials          0          0          

Powered by Codecov. Last update 74794c6...7fd1167",True,{}
NetSys/bess,https://github.com/NetSys/bess,118,2016-11-08T00:31:35Z,2016-11-08T07:51:16Z,2016-11-15T22:55:51Z,MERGED,True,29,42,1,https://github.com/sangjinhan,Do not create .make.dep file,2,['enhancement'],https://github.com/NetSys/bess/pull/118,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/118#issuecomment-259068684,".make.dep contains Makefile dependency information for all source code files. Whenever a single file is  modified, the entire .make.dep is updated. This patch introduces individual dependency files for each source code file in .deps/, without having the central .make.dep file.
Other changes:

Makefile does not automatically enforce parallel build any longer. You have to explicitly specify make -j if parallel build is desired.
A bug that does not show message with VERBOSE=1 make was fixed.",Looks good!,True,{}
NetSys/bess,https://github.com/NetSys/bess,119,2016-11-08T01:27:28Z,2016-11-08T07:29:10Z,2016-11-15T22:54:47Z,MERGED,True,4,8,3,https://github.com/changlan,Add override to all BESSControlImpl member functions,2,['enhancement'],https://github.com/NetSys/bess/pull/119,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/119,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,119,2016-11-08T01:27:28Z,2016-11-08T07:29:10Z,2016-11-15T22:54:47Z,MERGED,True,4,8,3,https://github.com/changlan,Add override to all BESSControlImpl member functions,2,['enhancement'],https://github.com/NetSys/bess/pull/119,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/119#issuecomment-259020426,,"Current coverage is 33.69% (diff: 100%)

Merging #119 into c++ will not change coverage

@@                c++       #119   diff @@
==========================================
  Files            35         35          
  Lines          2187       2187          
  Methods         253        253          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            737        737          
  Misses         1450       1450          
  Partials          0          0          

Powered by Codecov. Last update 28da5eb...2cdd327",True,{}
NetSys/bess,https://github.com/NetSys/bess,119,2016-11-08T01:27:28Z,2016-11-08T07:29:10Z,2016-11-15T22:54:47Z,MERGED,True,4,8,3,https://github.com/changlan,Add override to all BESSControlImpl member functions,2,['enhancement'],https://github.com/NetSys/bess/pull/119,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/119#issuecomment-259065490,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,120,2016-11-08T04:51:44Z,2016-11-08T07:33:58Z,2016-11-21T17:51:09Z,MERGED,True,21,10,2,https://github.com/melvinw,add simplehttpserver to coverage script,1,['enhancement'],https://github.com/NetSys/bess/pull/120,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/120,"This commit got lost in the last PR. It's just a convenience, doesn't matter much if it's not merged.","This commit got lost in the last PR. It's just a convenience, doesn't matter much if it's not merged.",True,{}
NetSys/bess,https://github.com/NetSys/bess,120,2016-11-08T04:51:44Z,2016-11-08T07:33:58Z,2016-11-21T17:51:09Z,MERGED,True,21,10,2,https://github.com/melvinw,add simplehttpserver to coverage script,1,['enhancement'],https://github.com/NetSys/bess/pull/120,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/120#issuecomment-259046106,"This commit got lost in the last PR. It's just a convenience, doesn't matter much if it's not merged.","Current coverage is 33.69% (diff: 100%)

Merging #120 into c++ will not change coverage

@@                c++       #120   diff @@
==========================================
  Files            35         35          
  Lines          2187       2187          
  Methods         253        253          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            737        737          
  Misses         1450       1450          
  Partials          0          0          

Powered by Codecov. Last update 28da5eb...752c9ea",True,{}
NetSys/bess,https://github.com/NetSys/bess,120,2016-11-08T04:51:44Z,2016-11-08T07:33:58Z,2016-11-21T17:51:09Z,MERGED,True,21,10,2,https://github.com/melvinw,add simplehttpserver to coverage script,1,['enhancement'],https://github.com/NetSys/bess/pull/120,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/120#issuecomment-259066205,"This commit got lost in the last PR. It's just a convenience, doesn't matter much if it's not merged.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,122,2016-11-08T18:37:42Z,2016-11-08T21:01:56Z,2016-11-15T22:55:34Z,MERGED,True,2,0,1,https://github.com/barath,Adds iteration calculation to tc_bench.,1,['enhancement'],https://github.com/NetSys/bess/pull/122,https://github.com/barath,1,https://github.com/NetSys/bess/pull/122,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,122,2016-11-08T18:37:42Z,2016-11-08T21:01:56Z,2016-11-15T22:55:34Z,MERGED,True,2,0,1,https://github.com/barath,Adds iteration calculation to tc_bench.,1,['enhancement'],https://github.com/NetSys/bess/pull/122,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/122#issuecomment-259224600,,"Current coverage is 33.69% (diff: 100%)

Merging #122 into c++ will not change coverage

@@                c++       #122   diff @@
==========================================
  Files            35         35          
  Lines          2187       2187          
  Methods         253        253          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            737        737          
  Misses         1450       1450          
  Partials          0          0          

Powered by Codecov. Last update 04ea903...9a65dfe",True,{}
NetSys/bess,https://github.com/NetSys/bess,122,2016-11-08T18:37:42Z,2016-11-08T21:01:56Z,2016-11-15T22:55:34Z,MERGED,True,2,0,1,https://github.com/barath,Adds iteration calculation to tc_bench.,1,['enhancement'],https://github.com/NetSys/bess/pull/122,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/122#issuecomment-259258801,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,123,2016-11-08T18:45:04Z,2016-11-09T05:59:44Z,2016-11-09T21:49:18Z,MERGED,True,62,44,8,https://github.com/sangjinhan,Use -Og flag when built for coverage test,6,['enhancement'],https://github.com/NetSys/bess/pull/123,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/123,"-Ofast option (the default) may show surprising coverage results due to aggressive optimization. Instead, we use -Og when the program is built with COVERAGE=1.
As a side effect of -Og, there are warnings and test failures that do not appear with -Ofast. Some commits fix these issues as well.","-Ofast option (the default) may show surprising coverage results due to aggressive optimization. Instead, we use -Og when the program is built with COVERAGE=1.
As a side effect of -Og, there are warnings and test failures that do not appear with -Ofast. Some commits fix these issues as well.",True,{}
NetSys/bess,https://github.com/NetSys/bess,123,2016-11-08T18:45:04Z,2016-11-09T05:59:44Z,2016-11-09T21:49:18Z,MERGED,True,62,44,8,https://github.com/sangjinhan,Use -Og flag when built for coverage test,6,['enhancement'],https://github.com/NetSys/bess/pull/123,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/123#issuecomment-259236606,"-Ofast option (the default) may show surprising coverage results due to aggressive optimization. Instead, we use -Og when the program is built with COVERAGE=1.
As a side effect of -Og, there are warnings and test failures that do not appear with -Ofast. Some commits fix these issues as well.","Current coverage is 33.86% (diff: 100%)

Merging #123 into c++ will increase coverage by 0.16%

@@                c++       #123   diff @@
==========================================
  Files            35         37     +2   
  Lines          2187       2215    +28   
  Methods         253        257     +4   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            737        750    +13   
- Misses         1450       1465    +15   
  Partials          0          0          

Powered by Codecov. Last update 04ea903...d0a3626",True,{}
NetSys/bess,https://github.com/NetSys/bess,124,2016-11-08T18:59:00Z,2016-11-08T21:34:05Z,2016-11-15T22:54:10Z,MERGED,True,166,174,39,https://github.com/changlan,Add alias to several types for readability,2,['enhancement'],https://github.com/NetSys/bess/pull/124,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/124,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,124,2016-11-08T18:59:00Z,2016-11-08T21:34:05Z,2016-11-15T22:54:10Z,MERGED,True,166,174,39,https://github.com/changlan,Add alias to several types for readability,2,['enhancement'],https://github.com/NetSys/bess/pull/124,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/124#issuecomment-259230851,,"Current coverage is 33.88% (diff: 44.44%)

Merging #124 into c++ will increase coverage by 0.18%

@@                c++       #124   diff @@
==========================================
  Files            35         35          
  Lines          2187       2187          
  Methods         253        253          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            737        741     +4   
+ Misses         1450       1446     -4   
  Partials          0          0          

Powered by Codecov. Last update 04ea903...b90aaf0",True,{}
NetSys/bess,https://github.com/NetSys/bess,124,2016-11-08T18:59:00Z,2016-11-08T21:34:05Z,2016-11-15T22:54:10Z,MERGED,True,166,174,39,https://github.com/changlan,Add alias to several types for readability,2,['enhancement'],https://github.com/NetSys/bess/pull/124,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/124#issuecomment-259266549,,"Applied, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,126,2016-11-09T23:29:33Z,2016-11-10T00:15:15Z,2016-11-12T05:57:34Z,MERGED,True,291,43,12,https://github.com/sangjinhan,Introduce big endian types and EthHeader,8,['enhancement'],https://github.com/NetSys/bess/pull/126,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/126,"This PR adds C++-style declaration of beXX_t type and Ethernet header, which used to rely on DPDK's rte_ether.h and rte_byteorder.h.","This PR adds C++-style declaration of beXX_t type and Ethernet header, which used to rely on DPDK's rte_ether.h and rte_byteorder.h.",True,{}
NetSys/bess,https://github.com/NetSys/bess,126,2016-11-09T23:29:33Z,2016-11-10T00:15:15Z,2016-11-12T05:57:34Z,MERGED,True,291,43,12,https://github.com/sangjinhan,Introduce big endian types and EthHeader,8,['enhancement'],https://github.com/NetSys/bess/pull/126,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/126#issuecomment-259557249,"This PR adds C++-style declaration of beXX_t type and Ethernet header, which used to rely on DPDK's rte_ether.h and rte_byteorder.h.","Current coverage is 35.01% (diff: 91.17%)

Merging #126 into c++ will increase coverage by 0.97%

@@                c++       #126   diff @@
==========================================
  Files            37         39     +2   
  Lines          2215       2242    +27   
  Methods         257        263     +6   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            754        785    +31   
+ Misses         1461       1457     -4   
  Partials          0          0          

Powered by Codecov. Last update ad12db1...07a79bb",True,{}
NetSys/bess,https://github.com/NetSys/bess,126,2016-11-09T23:29:33Z,2016-11-10T00:15:15Z,2016-11-12T05:57:34Z,MERGED,True,291,43,12,https://github.com/sangjinhan,Introduce big endian types and EthHeader,8,['enhancement'],https://github.com/NetSys/bess/pull/126,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/126#issuecomment-259560512,"This PR adds C++-style declaration of beXX_t type and Ethernet header, which used to rely on DPDK's rte_ether.h and rte_byteorder.h.",Looks good! Just minor nits,True,{}
NetSys/bess,https://github.com/NetSys/bess,126,2016-11-09T23:29:33Z,2016-11-10T00:15:15Z,2016-11-12T05:57:34Z,MERGED,True,291,43,12,https://github.com/sangjinhan,Introduce big endian types and EthHeader,8,['enhancement'],https://github.com/NetSys/bess/pull/126,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/126#issuecomment-260104065,"This PR adds C++-style declaration of beXX_t type and Ethernet header, which used to rely on DPDK's rte_ether.h and rte_byteorder.h.",I'll reflect Barath's comments to a next PR.,True,{}
NetSys/bess,https://github.com/NetSys/bess,127,2016-11-10T20:00:18Z,2016-11-11T00:18:45Z,2016-12-06T04:01:30Z,MERGED,True,433,370,33,https://github.com/sangjinhan,Enable -Wmissing-field-initializers,11,['enhancement'],https://github.com/NetSys/bess/pull/127,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/127,"GCC's -Wextra includes -Wmissing-field-initializers, but there were spots that partially initialize structs (the 'missing' fields are implicitly filled with zero, since there is no really partial initialization in C/C++). I temporarily disabled this warning, since otherwise it would have needed some major work. This PR contains commits from my yak shaving to enable the warning option.


Now all modules must register metadata attributes explicitly, rather than overloading the attrs array. Two reasons:

The attribute struct has the scope_id field for internal purposes, but modules don't (and shouldn't) know what it is. Because of this requiring modules to specify the value of scope_id would be a bit awkward.
Some modules (with a fixed set of metadata attributes) use the attrs array while other modules dynamically register attributes. These two different modes make things conceptually a bit more complex.



Some minor code cleanup was done (e.g., int -> size_t) as necessary","GCC's -Wextra includes -Wmissing-field-initializers, but there were spots that partially initialize structs (the 'missing' fields are implicitly filled with zero, since there is no really partial initialization in C/C++). I temporarily disabled this warning, since otherwise it would have needed some major work. This PR contains commits from my yak shaving to enable the warning option.


Now all modules must register metadata attributes explicitly, rather than overloading the attrs array. Two reasons:

The attribute struct has the scope_id field for internal purposes, but modules don't (and shouldn't) know what it is. Because of this requiring modules to specify the value of scope_id would be a bit awkward.
Some modules (with a fixed set of metadata attributes) use the attrs array while other modules dynamically register attributes. These two different modes make things conceptually a bit more complex.



Some minor code cleanup was done (e.g., int -> size_t) as necessary",True,{}
NetSys/bess,https://github.com/NetSys/bess,127,2016-11-10T20:00:18Z,2016-11-11T00:18:45Z,2016-12-06T04:01:30Z,MERGED,True,433,370,33,https://github.com/sangjinhan,Enable -Wmissing-field-initializers,11,['enhancement'],https://github.com/NetSys/bess/pull/127,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/127#issuecomment-259836955,"GCC's -Wextra includes -Wmissing-field-initializers, but there were spots that partially initialize structs (the 'missing' fields are implicitly filled with zero, since there is no really partial initialization in C/C++). I temporarily disabled this warning, since otherwise it would have needed some major work. This PR contains commits from my yak shaving to enable the warning option.


Now all modules must register metadata attributes explicitly, rather than overloading the attrs array. Two reasons:

The attribute struct has the scope_id field for internal purposes, but modules don't (and shouldn't) know what it is. Because of this requiring modules to specify the value of scope_id would be a bit awkward.
Some modules (with a fixed set of metadata attributes) use the attrs array while other modules dynamically register attributes. These two different modes make things conceptually a bit more complex.



Some minor code cleanup was done (e.g., int -> size_t) as necessary","Current coverage is 34.20% (diff: 71.21%)

Merging #127 into c++ will decrease coverage by 0.80%

@@                c++       #127   diff @@
==========================================
  Files            39         39          
  Lines          2242       2245     +3   
  Methods         263        262     -1   
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits            785        768    -17   
- Misses         1457       1477    +20   
  Partials          0          0          

Powered by Codecov. Last update 606fecf...4e2e10e",True,{}
NetSys/bess,https://github.com/NetSys/bess,128,2016-11-11T21:47:26Z,2016-11-12T22:07:30Z,2016-11-12T22:07:30Z,CLOSED,False,1661,937,88,https://github.com/melvinw,Introduce gate hooks,44,"['enhancement', 'notready']",https://github.com/NetSys/bess/pull/128,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/128,"It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.","It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,128,2016-11-11T21:47:26Z,2016-11-12T22:07:30Z,2016-11-12T22:07:30Z,CLOSED,False,1661,937,88,https://github.com/melvinw,Introduce gate hooks,44,"['enhancement', 'notready']",https://github.com/NetSys/bess/pull/128,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/128#issuecomment-260064848,"It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.","Current coverage is 33.00% (diff: 45.94%)

Merging #128 into c++ will decrease coverage by 0.86%

@@                c++       #128   diff @@
==========================================
  Files            39         43     +4   
  Lines          2267       2254    -13   
  Methods         263        269     +6   
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits            768        744    -24   
- Misses         1499       1510    +11   
  Partials          0          0          

Powered by Codecov. Last update 75fbbce...e92327b",True,{}
NetSys/bess,https://github.com/NetSys/bess,128,2016-11-11T21:47:26Z,2016-11-12T22:07:30Z,2016-11-12T22:07:30Z,CLOSED,False,1661,937,88,https://github.com/melvinw,Introduce gate hooks,44,"['enhancement', 'notready']",https://github.com/NetSys/bess/pull/128,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/128#issuecomment-260093550,"It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.","Pushed a bunch of changes, but I'm not quite done. Still need to properly order hooks on igates/ogates.",True,{}
NetSys/bess,https://github.com/NetSys/bess,128,2016-11-11T21:47:26Z,2016-11-12T22:07:30Z,2016-11-12T22:07:30Z,CLOSED,False,1661,937,88,https://github.com/melvinw,Introduce gate hooks,44,"['enhancement', 'notready']",https://github.com/NetSys/bess/pull/128,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/128#issuecomment-260098241,"It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.","If you merge #130 before this, I can refactor gates as part of this patch",True,{}
NetSys/bess,https://github.com/NetSys/bess,128,2016-11-11T21:47:26Z,2016-11-12T22:07:30Z,2016-11-12T22:07:30Z,CLOSED,False,1661,937,88,https://github.com/melvinw,Introduce gate hooks,44,"['enhancement', 'notready']",https://github.com/NetSys/bess/pull/128,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/128#issuecomment-260104027,"It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.","Yup, merged #130 first. Please remove the label whenever it's ready",True,{}
NetSys/bess,https://github.com/NetSys/bess,128,2016-11-11T21:47:26Z,2016-11-12T22:07:30Z,2016-11-12T22:07:30Z,CLOSED,False,1661,937,88,https://github.com/melvinw,Introduce gate hooks,44,"['enhancement', 'notready']",https://github.com/NetSys/bess/pull/128,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/128#issuecomment-260151630,"It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.",something went terribly wrong. opening a new one,True,{}
NetSys/bess,https://github.com/NetSys/bess,129,2016-11-12T00:31:16Z,2016-11-12T01:08:27Z,2016-11-14T18:47:34Z,CLOSED,False,8,66,6,https://github.com/changlan,Remove unused protobuf message types,2,['notready'],https://github.com/NetSys/bess/pull/129,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/129,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,129,2016-11-12T00:31:16Z,2016-11-12T01:08:27Z,2016-11-14T18:47:34Z,CLOSED,False,8,66,6,https://github.com/changlan,Remove unused protobuf message types,2,['notready'],https://github.com/NetSys/bess/pull/129,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/129#issuecomment-260088611,,"Current coverage is 34.20% (diff: 100%)

Merging #129 into c++ will not change coverage

@@                c++       #129   diff @@
==========================================
  Files            39         39          
  Lines          2245       2245          
  Methods         262        262          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            768        768          
  Misses         1477       1477          
  Partials          0          0          

Powered by Codecov. Last update b796922...d461890",True,{}
NetSys/bess,https://github.com/NetSys/bess,129,2016-11-12T00:31:16Z,2016-11-12T01:08:27Z,2016-11-14T18:47:34Z,CLOSED,False,8,66,6,https://github.com/changlan,Remove unused protobuf message types,2,['notready'],https://github.com/NetSys/bess/pull/129,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/129#issuecomment-260090496,,Found other identical message types. Will resubmit.,True,{}
NetSys/bess,https://github.com/NetSys/bess,130,2016-11-12T02:09:26Z,2016-11-12T05:55:18Z,2016-12-12T23:47:01Z,MERGED,True,142,88,6,https://github.com/justinemarie,Run modules without recursion for better testability.,2,['enhancement'],https://github.com/NetSys/bess/pull/130,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/130,I also ran clang-format resulting in some lines-that-look-edited that really weren't.,I also ran clang-format resulting in some lines-that-look-edited that really weren't.,True,{}
NetSys/bess,https://github.com/NetSys/bess,130,2016-11-12T02:09:26Z,2016-11-12T05:55:18Z,2016-12-12T23:47:01Z,MERGED,True,142,88,6,https://github.com/justinemarie,Run modules without recursion for better testability.,2,['enhancement'],https://github.com/NetSys/bess/pull/130,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/130#issuecomment-260095350,I also ran clang-format resulting in some lines-that-look-edited that really weren't.,"Current coverage is 33.87% (diff: 0.00%)

Merging #130 into c++ will decrease coverage by 0.33%

@@                c++       #130   diff @@
==========================================
  Files            39         39          
  Lines          2245       2267    +22   
  Methods         262        263     +1   
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            768        768          
- Misses         1477       1499    +22   
  Partials          0          0          

Powered by Codecov. Last update b796922...4921f21",True,{}
NetSys/bess,https://github.com/NetSys/bess,130,2016-11-12T02:09:26Z,2016-11-12T05:55:18Z,2016-12-12T23:47:01Z,MERGED,True,142,88,6,https://github.com/justinemarie,Run modules without recursion for better testability.,2,['enhancement'],https://github.com/NetSys/bess/pull/130,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/130#issuecomment-260100741,I also ran clang-format resulting in some lines-that-look-edited that really weren't.,"Which is not really needed? TRACK GATWS?
Sent from my rotary phone.
On Nov 11, 2016 20:17, ""Melvin Walls"" notifications@github.com wrote:

@melvinw commented on this pull request.
In core/task.cc #130:

// Capture the default core command line flag.
DECLARE_int32(c);

struct cdlist_head all_tasks = CDLIST_HEAD_INIT(all_tasks);
struct task_result task_scheduled(struct task *t) {

return t->m->RunTask(t->arg);
struct task_result ret = t->m->RunTask(t->arg);





// Depth first goes through all pending modules and services
while (ctx.gates_pending()) {
struct gate_task task = ctx.pop_ogate_and_packets();
gate *ogate = task.gate;
struct pkt_batch *next_packets = &(task.batch);




+#if TRACK_GATES
No real need. This gets dropped by #128
#128, which adds documentation
somewhere else (unless we care about the commit history)
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub
#130, or mute the thread
https://github.com/notifications/unsubscribe-auth/AAE6Fhh0d7GV_gYDJH1KJXpnmXdcDHG0ks5q9T31gaJpZM4KwTA4
.",True,{}
NetSys/bess,https://github.com/NetSys/bess,130,2016-11-12T02:09:26Z,2016-11-12T05:55:18Z,2016-12-12T23:47:01Z,MERGED,True,142,88,6,https://github.com/justinemarie,Run modules without recursion for better testability.,2,['enhancement'],https://github.com/NetSys/bess/pull/130,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/130#issuecomment-260100785,I also ran clang-format resulting in some lines-that-look-edited that really weren't.,"Nope, TRACK_GATES is fine. I meant the comment Barath was asking for",True,{}
NetSys/bess,https://github.com/NetSys/bess,130,2016-11-12T02:09:26Z,2016-11-12T05:55:18Z,2016-12-12T23:47:01Z,MERGED,True,142,88,6,https://github.com/justinemarie,Run modules without recursion for better testability.,2,['enhancement'],https://github.com/NetSys/bess/pull/130,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/130#issuecomment-260103733,I also ran clang-format resulting in some lines-that-look-edited that really weren't.,"Okay, added requested changes.",True,{}
NetSys/bess,https://github.com/NetSys/bess,130,2016-11-12T02:09:26Z,2016-11-12T05:55:18Z,2016-12-12T23:47:01Z,MERGED,True,142,88,6,https://github.com/justinemarie,Run modules without recursion for better testability.,2,['enhancement'],https://github.com/NetSys/bess/pull/130,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/130#issuecomment-260103995,I also ran clang-format resulting in some lines-that-look-edited that really weren't.,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,131,2016-11-12T22:13:41Z,2016-11-14T23:31:25Z,2016-11-14T23:38:36Z,MERGED,True,798,326,19,https://github.com/melvinw,Refactor gates and introduce gate hooks,7,['enhancement'],https://github.com/NetSys/bess/pull/131,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/131,"It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.","It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,131,2016-11-12T22:13:41Z,2016-11-14T23:31:25Z,2016-11-14T23:38:36Z,MERGED,True,798,326,19,https://github.com/melvinw,Refactor gates and introduce gate hooks,7,['enhancement'],https://github.com/NetSys/bess/pull/131,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/131#issuecomment-260152580,"It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.","Current coverage is 33.43% (diff: 65.45%)

Merging #131 into c++ will decrease coverage by 0.44%

@@                c++       #131   diff @@
==========================================
  Files            39         45     +6   
  Lines          2267       2306    +39   
  Methods         263        278    +15   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            768        771     +3   
- Misses         1499       1535    +36   
  Partials          0          0          

Powered by Codecov. Last update 75fbbce...cfbe1c4",True,{}
NetSys/bess,https://github.com/NetSys/bess,131,2016-11-12T22:13:41Z,2016-11-14T23:31:25Z,2016-11-14T23:38:36Z,MERGED,True,798,326,19,https://github.com/melvinw,Refactor gates and introduce gate hooks,7,['enhancement'],https://github.com/NetSys/bess/pull/131,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/131#issuecomment-260498409,"It would be helpful to have a mechanism by which developers can debug pipelines of modules. Currently this is accomplished with #defines and by conditionally tacking extra fields on the end of struct gate. This patch replaces the existing process with a more general mechanism, gate hooks.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,132,2016-11-15T05:36:04Z,2016-11-15T19:22:38Z,2016-11-16T00:12:59Z,MERGED,True,374,176,19,https://github.com/sangjinhan,Minor changes in logging behavior,18,['enhancement'],https://github.com/NetSys/bess/pull/132,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/132,"This PR includes the following minor changes:

Use LOG(FATAL) only for totally unexpected errors.

e.g., If another BESS process is running, the error log message should be ERROR, not FATAL.


Disable glog's default failure handler (stack backtrace), since it interferes with BESS's own fault handler, which prints out more detailed information
Redirect all outputs to stdout/stderr/cout/cerr to Google glog.

If running in foreground mode, glog will print out log messages (depending on the -stderrthreshold option of glog)


When log messages are printed to stderr (in foreground mode), colored output is enabled by default.
Restore the ""crash log"" feature: bessctl shows the stack backtrace if it detects abnormal termination of the process.
SIGUSR1 signal can be used to print out the current call stack of master/worker threads, without terminating the process.","This PR includes the following minor changes:

Use LOG(FATAL) only for totally unexpected errors.

e.g., If another BESS process is running, the error log message should be ERROR, not FATAL.


Disable glog's default failure handler (stack backtrace), since it interferes with BESS's own fault handler, which prints out more detailed information
Redirect all outputs to stdout/stderr/cout/cerr to Google glog.

If running in foreground mode, glog will print out log messages (depending on the -stderrthreshold option of glog)


When log messages are printed to stderr (in foreground mode), colored output is enabled by default.
Restore the ""crash log"" feature: bessctl shows the stack backtrace if it detects abnormal termination of the process.
SIGUSR1 signal can be used to print out the current call stack of master/worker threads, without terminating the process.",True,{}
NetSys/bess,https://github.com/NetSys/bess,132,2016-11-15T05:36:04Z,2016-11-15T19:22:38Z,2016-11-16T00:12:59Z,MERGED,True,374,176,19,https://github.com/sangjinhan,Minor changes in logging behavior,18,['enhancement'],https://github.com/NetSys/bess/pull/132,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/132#issuecomment-260553785,"This PR includes the following minor changes:

Use LOG(FATAL) only for totally unexpected errors.

e.g., If another BESS process is running, the error log message should be ERROR, not FATAL.


Disable glog's default failure handler (stack backtrace), since it interferes with BESS's own fault handler, which prints out more detailed information
Redirect all outputs to stdout/stderr/cout/cerr to Google glog.

If running in foreground mode, glog will print out log messages (depending on the -stderrthreshold option of glog)


When log messages are printed to stderr (in foreground mode), colored output is enabled by default.
Restore the ""crash log"" feature: bessctl shows the stack backtrace if it detects abnormal termination of the process.
SIGUSR1 signal can be used to print out the current call stack of master/worker threads, without terminating the process.","Current coverage is 33.19% (diff: 33.33%)

Merging #132 into c++ will decrease coverage by 0.24%

@@                c++       #132   diff @@
==========================================
  Files            45         45          
  Lines          2306       2380    +74   
  Methods         278        290    +12   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            771        790    +19   
- Misses         1535       1590    +55   
  Partials          0          0          

Powered by Codecov. Last update 430992d...8273a84",True,{}
NetSys/bess,https://github.com/NetSys/bess,133,2016-11-15T10:36:13Z,2016-11-15T21:25:21Z,2016-11-16T00:12:54Z,MERGED,True,141,96,21,https://github.com/sangjinhan,Eliminate warnings generated from -Weffc++,2,['enhancement'],https://github.com/NetSys/bess/pull/133,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/133,"... since we all love Scott Meyers and his book.
But I did not end up adding -Weffc++ to Makefile, since it generates too pedantic warnings for modules/drivers (e.g., ""define copy/assignment constructors whenever there are pointer members""). Also the semantics of -Weffc++ seems to be subtly different on various g++ versions.","... since we all love Scott Meyers and his book.
But I did not end up adding -Weffc++ to Makefile, since it generates too pedantic warnings for modules/drivers (e.g., ""define copy/assignment constructors whenever there are pointer members""). Also the semantics of -Weffc++ seems to be subtly different on various g++ versions.",True,{}
NetSys/bess,https://github.com/NetSys/bess,133,2016-11-15T10:36:13Z,2016-11-15T21:25:21Z,2016-11-16T00:12:54Z,MERGED,True,141,96,21,https://github.com/sangjinhan,Eliminate warnings generated from -Weffc++,2,['enhancement'],https://github.com/NetSys/bess/pull/133,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/133#issuecomment-260608655,"... since we all love Scott Meyers and his book.
But I did not end up adding -Weffc++ to Makefile, since it generates too pedantic warnings for modules/drivers (e.g., ""define copy/assignment constructors whenever there are pointer members""). Also the semantics of -Weffc++ seems to be subtly different on various g++ versions.","Current coverage is 33.34% (diff: 63.33%)

Merging #133 into c++ will decrease coverage by 0.08%

@@                c++       #133   diff @@
==========================================
  Files            45         46     +1   
  Lines          2306       2306          
  Methods         278        279     +1   
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits            771        769     -2   
- Misses         1535       1537     +2   
  Partials          0          0          

Powered by Codecov. Last update 430992d...22ff1f1",True,{}
NetSys/bess,https://github.com/NetSys/bess,134,2016-11-15T22:50:59Z,2016-11-16T03:36:53Z,2016-12-06T04:01:30Z,MERGED,True,95,34,5,https://github.com/sangjinhan,Fix dangling pointer bug of Pipeline::attrs_,2,"['bug', 'enhancement']",https://github.com/NetSys/bess/pull/134,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/134,"attrs_ used to maintain a map of string->Attribute*, where the
attribute pointer is provided by the caller of RegisterAttribute().

However the caller may call the function with a stack-allocated
Attribute instance, then the pointer would be immediately invalid.
This issue caused process crash with sample/exactmatch.bess,
due to memory corruption
This issue caused AddMetadataAttr failure with
samples/wildcardmatch.bess, due to a garbase value of the size of
already registered attribute with the same name.


Now Pipeline keeps track or how many modules are actually using
each attribute.

If no modules are using an attribute any longer, we allow modules
to register the attribute with the same name, possibly with
a different size.
To implement this, deregister logic was implemented, which is
triggered when a module is destroyed.","attrs_ used to maintain a map of string->Attribute*, where the
attribute pointer is provided by the caller of RegisterAttribute().

However the caller may call the function with a stack-allocated
Attribute instance, then the pointer would be immediately invalid.
This issue caused process crash with sample/exactmatch.bess,
due to memory corruption
This issue caused AddMetadataAttr failure with
samples/wildcardmatch.bess, due to a garbase value of the size of
already registered attribute with the same name.


Now Pipeline keeps track or how many modules are actually using
each attribute.

If no modules are using an attribute any longer, we allow modules
to register the attribute with the same name, possibly with
a different size.
To implement this, deregister logic was implemented, which is
triggered when a module is destroyed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,134,2016-11-15T22:50:59Z,2016-11-16T03:36:53Z,2016-12-06T04:01:30Z,MERGED,True,95,34,5,https://github.com/sangjinhan,Fix dangling pointer bug of Pipeline::attrs_,2,"['bug', 'enhancement']",https://github.com/NetSys/bess/pull/134,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/134#issuecomment-260799619,"attrs_ used to maintain a map of string->Attribute*, where the
attribute pointer is provided by the caller of RegisterAttribute().

However the caller may call the function with a stack-allocated
Attribute instance, then the pointer would be immediately invalid.
This issue caused process crash with sample/exactmatch.bess,
due to memory corruption
This issue caused AddMetadataAttr failure with
samples/wildcardmatch.bess, due to a garbase value of the size of
already registered attribute with the same name.


Now Pipeline keeps track or how many modules are actually using
each attribute.

If no modules are using an attribute any longer, we allow modules
to register the attribute with the same name, possibly with
a different size.
To implement this, deregister logic was implemented, which is
triggered when a module is destroyed.","Current coverage is 33.67% (diff: 90.90%)

Merging #134 into c++ will increase coverage by 0.57%

@@                c++       #134   diff @@
==========================================
  Files            46         46          
  Lines          2380       2405    +25   
  Methods         291        293     +2   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            788        810    +22   
- Misses         1592       1595     +3   
  Partials          0          0          

Powered by Codecov. Last update 43f827f...cb0c365",True,{}
NetSys/bess,https://github.com/NetSys/bess,135,2016-11-16T00:05:16Z,2016-11-16T00:09:49Z,2016-11-16T21:28:34Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Fix bug when gates are appended out of order,1,['bug'],https://github.com/NetSys/bess/pull/135,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/135,"In the current code, for example, if output gates are added with indices 0, 1, 2, and 5, then the size of ogates will be 4 (not 6), and ogates[5] (which is not a valid memory area of ogates) will be written.
You can test the issue with samples/exactmatch.bess and samples/wildcardmatch.bess","In the current code, for example, if output gates are added with indices 0, 1, 2, and 5, then the size of ogates will be 4 (not 6), and ogates[5] (which is not a valid memory area of ogates) will be written.
You can test the issue with samples/exactmatch.bess and samples/wildcardmatch.bess",True,{}
NetSys/bess,https://github.com/NetSys/bess,135,2016-11-16T00:05:16Z,2016-11-16T00:09:49Z,2016-11-16T21:28:34Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Fix bug when gates are appended out of order,1,['bug'],https://github.com/NetSys/bess/pull/135,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/135#issuecomment-260811810,"In the current code, for example, if output gates are added with indices 0, 1, 2, and 5, then the size of ogates will be 4 (not 6), and ogates[5] (which is not a valid memory area of ogates) will be written.
You can test the issue with samples/exactmatch.bess and samples/wildcardmatch.bess",Thanks for catching/fixing this!,True,{}
NetSys/bess,https://github.com/NetSys/bess,136,2016-11-16T21:33:39Z,2016-11-17T03:18:19Z,2016-12-06T04:01:28Z,MERGED,True,145,60,6,https://github.com/sangjinhan,Add module benchmark,5,"['enhancement', 'notready']",https://github.com/NetSys/bess/pull/136,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/136,"#130 introduced significant performance degradation: e.g., the throughput of samples/s2s.bess dropped about 35%. Before working on optimization, this PR adds benchmark tests regarding invocation of module code.","#130 introduced significant performance degradation: e.g., the throughput of samples/s2s.bess dropped about 35%. Before working on optimization, this PR adds benchmark tests regarding invocation of module code.",True,{}
NetSys/bess,https://github.com/NetSys/bess,136,2016-11-16T21:33:39Z,2016-11-17T03:18:19Z,2016-12-06T04:01:28Z,MERGED,True,145,60,6,https://github.com/sangjinhan,Add module benchmark,5,"['enhancement', 'notready']",https://github.com/NetSys/bess/pull/136,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/136#issuecomment-261083288,"#130 introduced significant performance degradation: e.g., the throughput of samples/s2s.bess dropped about 35%. Before working on optimization, this PR adds benchmark tests regarding invocation of module code.",Build fails since it lacks a change I was about to push. Will hold for now.,True,{}
NetSys/bess,https://github.com/NetSys/bess,137,2016-11-16T22:57:01Z,2016-11-20T10:35:06Z,2016-11-21T17:50:35Z,MERGED,True,1363,588,100,https://github.com/melvinw,struct snbuf -> class Packet,7,['enhancement'],https://github.com/NetSys/bess/pull/137,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/137,This is the first of several patches that aim to break the dependency on rte_mbuf.,This is the first of several patches that aim to break the dependency on rte_mbuf.,True,{}
NetSys/bess,https://github.com/NetSys/bess,137,2016-11-16T22:57:01Z,2016-11-20T10:35:06Z,2016-11-21T17:50:35Z,MERGED,True,1363,588,100,https://github.com/melvinw,struct snbuf -> class Packet,7,['enhancement'],https://github.com/NetSys/bess/pull/137,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/137#issuecomment-261116275,This is the first of several patches that aim to break the dependency on rte_mbuf.,"Current coverage is 33.76% (diff: 2.45%)

Merging #137 into c++ will decrease coverage by 0.09%

@@                c++       #137   diff @@
==========================================
  Files            46         46          
  Lines          2401       2414    +13   
  Methods         291        290     -1   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            813        815     +2   
- Misses         1588       1599    +11   
  Partials          0          0          

Powered by Codecov. Last update d9070a8...6fd1008",True,{}
NetSys/bess,https://github.com/NetSys/bess,137,2016-11-16T22:57:01Z,2016-11-20T10:35:06Z,2016-11-21T17:50:35Z,MERGED,True,1363,588,100,https://github.com/melvinw,struct snbuf -> class Packet,7,['enhancement'],https://github.com/NetSys/bess/pull/137,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/137#issuecomment-261770656,This is the first of several patches that aim to break the dependency on rte_mbuf.,"Merged, thanks! A kitten photo will be rewarded for every merged PR, as our new tradition.",True,{}
NetSys/bess,https://github.com/NetSys/bess,138,2016-11-16T23:30:26Z,2016-11-16T23:59:20Z,2016-12-06T04:01:29Z,MERGED,True,108,295,61,https://github.com/sangjinhan,Specify module params only if they are not default,3,['enhancement'],https://github.com/NetSys/bess/pull/138,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/138,"Added default parameters to Module: no command, one input gate, and one output gate. This configuration works for most common modules. If derived modules use the default parameters they do not need to overload them, allowing the code short and tidy.
Will merge #136 once this one is merged.","Added default parameters to Module: no command, one input gate, and one output gate. This configuration works for most common modules. If derived modules use the default parameters they do not need to overload them, allowing the code short and tidy.
Will merge #136 once this one is merged.",True,{}
NetSys/bess,https://github.com/NetSys/bess,138,2016-11-16T23:30:26Z,2016-11-16T23:59:20Z,2016-12-06T04:01:29Z,MERGED,True,108,295,61,https://github.com/sangjinhan,Specify module params only if they are not default,3,['enhancement'],https://github.com/NetSys/bess/pull/138,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/138#issuecomment-261112173,"Added default parameters to Module: no command, one input gate, and one output gate. This configuration works for most common modules. If derived modules use the default parameters they do not need to overload them, allowing the code short and tidy.
Will merge #136 once this one is merged.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,139,2016-11-18T00:54:58Z,2016-11-23T01:51:09Z,2016-11-28T21:23:46Z,MERGED,True,1206,2818,66,https://github.com/changlan,Use gRPC and protobuf in bessctl,29,['enhancement'],https://github.com/NetSys/bess/pull/139,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/139,"Use gRPC and protobuf in libbess-python and bessctl
Obsolete master.cc and use bessctl.cc instead","Use gRPC and protobuf in libbess-python and bessctl
Obsolete master.cc and use bessctl.cc instead",True,{}
NetSys/bess,https://github.com/NetSys/bess,139,2016-11-18T00:54:58Z,2016-11-23T01:51:09Z,2016-11-28T21:23:46Z,MERGED,True,1206,2818,66,https://github.com/changlan,Use gRPC and protobuf in bessctl,29,['enhancement'],https://github.com/NetSys/bess/pull/139,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/139#issuecomment-261420302,"Use gRPC and protobuf in libbess-python and bessctl
Obsolete master.cc and use bessctl.cc instead","Current coverage is 34.10% (diff: 35.48%)

Merging #139 into c++ will decrease coverage by 0.05%

@@                c++       #139   diff @@
==========================================
  Files            46         46          
  Lines          2415       2419     +4   
  Methods         290        290          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            825        825          
- Misses         1590       1594     +4   
  Partials          0          0          

Powered by Codecov. Last update e791f26...a5ac6f1",True,{}
NetSys/bess,https://github.com/NetSys/bess,139,2016-11-18T00:54:58Z,2016-11-23T01:51:09Z,2016-11-28T21:23:46Z,MERGED,True,1206,2818,66,https://github.com/changlan,Use gRPC and protobuf in bessctl,29,['enhancement'],https://github.com/NetSys/bess/pull/139,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/139#issuecomment-261437017,"Use gRPC and protobuf in libbess-python and bessctl
Obsolete master.cc and use bessctl.cc instead","Yay, super excited!!",True,{}
NetSys/bess,https://github.com/NetSys/bess,139,2016-11-18T00:54:58Z,2016-11-23T01:51:09Z,2016-11-28T21:23:46Z,MERGED,True,1206,2818,66,https://github.com/changlan,Use gRPC and protobuf in bessctl,29,['enhancement'],https://github.com/NetSys/bess/pull/139,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/139#issuecomment-261466773,"Use gRPC and protobuf in libbess-python and bessctl
Obsolete master.cc and use bessctl.cc instead","Some issues with bessctl:

Ctrl + D does nothing (supposed to terminate the interactive shell)
quit command incurs the following error message:

E1117 23:27:45.520209496  177461 subchannel_index.c:70]      assertion failed: c != NULL
Aborted (core dumped)",True,{}
NetSys/bess,https://github.com/NetSys/bess,139,2016-11-18T00:54:58Z,2016-11-23T01:51:09Z,2016-11-28T21:23:46Z,MERGED,True,1206,2818,66,https://github.com/changlan,Use gRPC and protobuf in bessctl,29,['enhancement'],https://github.com/NetSys/bess/pull/139,https://github.com/changlan,5,https://github.com/NetSys/bess/pull/139#issuecomment-261675376,"Use gRPC and protobuf in libbess-python and bessctl
Obsolete master.cc and use bessctl.cc instead",All addressed except the ctx.SetNonWorker() one.,True,{}
NetSys/bess,https://github.com/NetSys/bess,139,2016-11-18T00:54:58Z,2016-11-23T01:51:09Z,2016-11-28T21:23:46Z,MERGED,True,1206,2818,66,https://github.com/changlan,Use gRPC and protobuf in bessctl,29,['enhancement'],https://github.com/NetSys/bess/pull/139,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/139#issuecomment-261748524,"Use gRPC and protobuf in libbess-python and bessctl
Obsolete master.cc and use bessctl.cc instead","Thanks! Could you take a look at the following issues? Sorry for this late response.

daemon start does not immediately refresh the connection status

<disconnected> $ daemon start
<disconnected> $
localhost:10514 $


daemon stop has the same issue, in the other way around
The following commands do not work (due to the same problem?)

show pipeline
monitor pipeline
show module
show module [MODULE]
show status


The following commands do not work (due to another problem?)

show tc


Auto completion for driver names in show driver DRIVER... does not work
track command seems not ported
monitor port breaks due to the lack of operator overloading

I will merge #137 first in the meantime. It may introduce minor merge conflicts with this PR, then could you please rebase with the latest c++ upstream?",True,{}
NetSys/bess,https://github.com/NetSys/bess,139,2016-11-18T00:54:58Z,2016-11-23T01:51:09Z,2016-11-28T21:23:46Z,MERGED,True,1206,2818,66,https://github.com/changlan,Use gRPC and protobuf in bessctl,29,['enhancement'],https://github.com/NetSys/bess/pull/139,https://github.com/changlan,7,https://github.com/NetSys/bess/pull/139#issuecomment-262326958,"Use gRPC and protobuf in libbess-python and bessctl
Obsolete master.cc and use bessctl.cc instead",Gotcha. Patches that fix those issues have been committed.,True,{}
NetSys/bess,https://github.com/NetSys/bess,139,2016-11-18T00:54:58Z,2016-11-23T01:51:09Z,2016-11-28T21:23:46Z,MERGED,True,1206,2818,66,https://github.com/changlan,Use gRPC and protobuf in bessctl,29,['enhancement'],https://github.com/NetSys/bess/pull/139,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/139#issuecomment-262420104,"Use gRPC and protobuf in libbess-python and bessctl
Obsolete master.cc and use bessctl.cc instead","Merged, thanks!",True,{'HEART': ['https://github.com/melvinw']}
NetSys/bess,https://github.com/NetSys/bess,141,2016-11-20T01:29:08Z,2016-11-20T10:59:03Z,2016-11-21T17:50:30Z,CLOSED,False,81,12,2,https://github.com/melvinw,fix metadata attribute offset calculation bug,1,['bug'],https://github.com/NetSys/bess/pull/141,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/141,"Scope components weren't being sorted correctly, causing AssignOffsets()
to make whacky decisions. This patch fixes DegreeComp() to prevent this
behavior and adds a test to catch it, should it be broken in the future.
This patch fixes issue #140","Scope components weren't being sorted correctly, causing AssignOffsets()
to make whacky decisions. This patch fixes DegreeComp() to prevent this
behavior and adds a test to catch it, should it be broken in the future.
This patch fixes issue #140",True,{}
NetSys/bess,https://github.com/NetSys/bess,141,2016-11-20T01:29:08Z,2016-11-20T10:59:03Z,2016-11-21T17:50:30Z,CLOSED,False,81,12,2,https://github.com/melvinw,fix metadata attribute offset calculation bug,1,['bug'],https://github.com/NetSys/bess/pull/141,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/141#issuecomment-261752187,"Scope components weren't being sorted correctly, causing AssignOffsets()
to make whacky decisions. This patch fixes DegreeComp() to prevent this
behavior and adds a test to catch it, should it be broken in the future.
This patch fixes issue #140","Current coverage is 34.26% (diff: 62.50%)

Merging #141 into c++ will increase coverage by 0.40%

@@                c++       #141   diff @@
==========================================
  Files            46         46          
  Lines          2401       2402     +1   
  Methods         291        291          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            813        823    +10   
+ Misses         1588       1579     -9   
  Partials          0          0          

Powered by Codecov. Last update d9070a8...aa2349d",True,{}
NetSys/bess,https://github.com/NetSys/bess,141,2016-11-20T01:29:08Z,2016-11-20T10:59:03Z,2016-11-21T17:50:30Z,CLOSED,False,81,12,2,https://github.com/melvinw,fix metadata attribute offset calculation bug,1,['bug'],https://github.com/NetSys/bess/pull/141,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/141#issuecomment-261771402,"Scope components weren't being sorted correctly, causing AssignOffsets()
to make whacky decisions. This patch fixes DegreeComp() to prevent this
behavior and adds a test to catch it, should it be broken in the future.
This patch fixes issue #140","Merged (manually), thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,142,2016-11-23T00:01:48Z,2016-11-23T06:04:43Z,2016-11-25T18:06:16Z,MERGED,True,38,38,38,https://github.com/melvinw,declare all modules as final,1,['enhancement'],https://github.com/NetSys/bess/pull/142,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/142,"As pointed out by @barath , this might enable optimizations that could lead to a performance gain.","As pointed out by @barath , this might enable optimizations that could lead to a performance gain.",True,{}
NetSys/bess,https://github.com/NetSys/bess,142,2016-11-23T00:01:48Z,2016-11-23T06:04:43Z,2016-11-25T18:06:16Z,MERGED,True,38,38,38,https://github.com/melvinw,declare all modules as final,1,['enhancement'],https://github.com/NetSys/bess/pull/142,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/142#issuecomment-262403960,"As pointed out by @barath , this might enable optimizations that could lead to a performance gain.","Current coverage is 34.16% (diff: 100%)

Merging #142 into c++ will not change coverage

@@                c++       #142   diff @@
==========================================
  Files            46         46          
  Lines          2415       2415          
  Methods         290        290          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            825        825          
  Misses         1590       1590          
  Partials          0          0          

Powered by Codecov. Last update e791f26...ea7ff3a",True,{}
NetSys/bess,https://github.com/NetSys/bess,142,2016-11-23T00:01:48Z,2016-11-23T06:04:43Z,2016-11-25T18:06:16Z,MERGED,True,38,38,38,https://github.com/melvinw,declare all modules as final,1,['enhancement'],https://github.com/NetSys/bess/pull/142,https://github.com/barath,3,https://github.com/NetSys/bess/pull/142#issuecomment-262410293,"As pointed out by @barath , this might enable optimizations that could lead to a performance gain.",Thanks for this.,True,{}
NetSys/bess,https://github.com/NetSys/bess,142,2016-11-23T00:01:48Z,2016-11-23T06:04:43Z,2016-11-25T18:06:16Z,MERGED,True,38,38,38,https://github.com/melvinw,declare all modules as final,1,['enhancement'],https://github.com/NetSys/bess/pull/142,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/142#issuecomment-262420205,"As pointed out by @barath , this might enable optimizations that could lead to a performance gain.",Perhaps we can do the same thing with drivers?,True,{}
NetSys/bess,https://github.com/NetSys/bess,142,2016-11-23T00:01:48Z,2016-11-23T06:04:43Z,2016-11-25T18:06:16Z,MERGED,True,38,38,38,https://github.com/melvinw,declare all modules as final,1,['enhancement'],https://github.com/NetSys/bess/pull/142,https://github.com/barath,5,https://github.com/NetSys/bess/pull/142#issuecomment-262423824,"As pointed out by @barath , this might enable optimizations that could lead to a performance gain.","Melvin and I chatted about doing the same with drivers.  I think it probably won't help (given how the virtual functions for Port are called), but we might as well because it won't hurt.",True,{}
NetSys/bess,https://github.com/NetSys/bess,142,2016-11-23T00:01:48Z,2016-11-23T06:04:43Z,2016-11-25T18:06:16Z,MERGED,True,38,38,38,https://github.com/melvinw,declare all modules as final,1,['enhancement'],https://github.com/NetSys/bess/pull/142,https://github.com/barath,6,https://github.com/NetSys/bess/pull/142#issuecomment-262426700,"As pointed out by @barath , this might enable optimizations that could lead to a performance gain.","Looking at it a bit more, it may help for pmd, so might be worth doing overall.",True,{}
NetSys/bess,https://github.com/NetSys/bess,142,2016-11-23T00:01:48Z,2016-11-23T06:04:43Z,2016-11-25T18:06:16Z,MERGED,True,38,38,38,https://github.com/melvinw,declare all modules as final,1,['enhancement'],https://github.com/NetSys/bess/pull/142,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/142#issuecomment-263006200,"As pointed out by @barath , this might enable optimizations that could lead to a performance gain.",,True,{'HEART': ['https://github.com/melvinw']}
NetSys/bess,https://github.com/NetSys/bess,143,2016-11-23T06:17:07Z,2016-11-25T18:06:36Z,2016-11-28T19:50:54Z,MERGED,True,7,7,7,https://github.com/melvinw,declare hooks and drivers as final,2,['enhancement'],https://github.com/NetSys/bess/pull/143,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/143,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,143,2016-11-23T06:17:07Z,2016-11-25T18:06:36Z,2016-11-28T19:50:54Z,MERGED,True,7,7,7,https://github.com/melvinw,declare hooks and drivers as final,2,['enhancement'],https://github.com/NetSys/bess/pull/143,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/143#issuecomment-262442036,,"Current coverage is 34.10% (diff: 50.00%)

Merging #143 into c++ will not change coverage

@@                c++       #143   diff @@
==========================================
  Files            46         46          
  Lines          2419       2419          
  Methods         290        290          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            825        825          
  Misses         1594       1594          
  Partials          0          0          

Powered by Codecov. Last update 9fa80ca...c9117ea",True,{}
NetSys/bess,https://github.com/NetSys/bess,143,2016-11-23T06:17:07Z,2016-11-25T18:06:36Z,2016-11-28T19:50:54Z,MERGED,True,7,7,7,https://github.com/melvinw,declare hooks and drivers as final,2,['enhancement'],https://github.com/NetSys/bess/pull/143,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/143#issuecomment-263007012,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,144,2016-11-23T20:56:12Z,2016-11-25T18:32:40Z,2016-11-28T19:50:45Z,MERGED,True,67,13,1,https://github.com/melvinw,fix linker warnings from packet::Dump(),1,[],https://github.com/NetSys/bess/pull/144,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/144,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,144,2016-11-23T20:56:12Z,2016-11-25T18:32:40Z,2016-11-28T19:50:45Z,MERGED,True,67,13,1,https://github.com/melvinw,fix linker warnings from packet::Dump(),1,[],https://github.com/NetSys/bess/pull/144,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/144#issuecomment-262629593,,"Current coverage is 33.68% (diff: 0.00%)

Merging #144 into c++ will decrease coverage by 0.41%

@@                c++       #144   diff @@
==========================================
  Files            46         46          
  Lines          2419       2449    +30   
  Methods         290        291     +1   
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            825        825          
- Misses         1594       1624    +30   
  Partials          0          0          

Powered by Codecov. Last update 9fa80ca...aa8bc79",True,{}
NetSys/bess,https://github.com/NetSys/bess,144,2016-11-23T20:56:12Z,2016-11-25T18:32:40Z,2016-11-28T19:50:45Z,MERGED,True,67,13,1,https://github.com/melvinw,fix linker warnings from packet::Dump(),1,[],https://github.com/NetSys/bess/pull/144,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/144#issuecomment-263009051,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,145,2016-11-28T22:21:22Z,2016-11-28T23:10:51Z,2016-11-28T23:16:53Z,MERGED,True,2,1,1,https://github.com/melvinw,fix UnixSocketPort SendPackets bug,1,['bug'],https://github.com/NetSys/bess/pull/145,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/145,"The msghdr supplied to sendmsg was not getting initialized properly,
casuing sends to fail. Segemented packets were also handled incorrectly.
This patch fixes these issues.","The msghdr supplied to sendmsg was not getting initialized properly,
casuing sends to fail. Segemented packets were also handled incorrectly.
This patch fixes these issues.",True,{}
NetSys/bess,https://github.com/NetSys/bess,145,2016-11-28T22:21:22Z,2016-11-28T23:10:51Z,2016-11-28T23:16:53Z,MERGED,True,2,1,1,https://github.com/melvinw,fix UnixSocketPort SendPackets bug,1,['bug'],https://github.com/NetSys/bess/pull/145,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/145#issuecomment-263415537,"The msghdr supplied to sendmsg was not getting initialized properly,
casuing sends to fail. Segemented packets were also handled incorrectly.
This patch fixes these issues.","Current coverage is 33.68% (diff: 100%)

Merging #145 into c++ will not change coverage

@@                c++       #145   diff @@
==========================================
  Files            46         46          
  Lines          2449       2449          
  Methods         291        291          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            825        825          
  Misses         1624       1624          
  Partials          0          0          

Powered by Codecov. Last update 79c2a3f...bfcaf5c",True,{}
NetSys/bess,https://github.com/NetSys/bess,145,2016-11-28T22:21:22Z,2016-11-28T23:10:51Z,2016-11-28T23:16:53Z,MERGED,True,2,1,1,https://github.com/melvinw,fix UnixSocketPort SendPackets bug,1,['bug'],https://github.com/NetSys/bess/pull/145,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/145#issuecomment-263424715,"The msghdr supplied to sendmsg was not getting initialized properly,
casuing sends to fail. Segemented packets were also handled incorrectly.
This patch fixes these issues.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,146,2016-11-28T22:55:31Z,2016-11-29T07:13:44Z,2016-11-29T07:29:38Z,MERGED,True,354,5042,85,https://github.com/changlan,Clean up snobj,9,['enhancement'],https://github.com/NetSys/bess/pull/146,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/146,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,146,2016-11-28T22:55:31Z,2016-11-29T07:13:44Z,2016-11-29T07:29:38Z,MERGED,True,354,5042,85,https://github.com/changlan,Clean up snobj,9,['enhancement'],https://github.com/NetSys/bess/pull/146,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/146#issuecomment-263423390,,"Current coverage is 40.38% (diff: 68.00%)

Merging #146 into c++ will increase coverage by 6.69%

@@                c++       #146   diff @@
==========================================
  Files            46         44     -2   
  Lines          2449       2028   -421   
  Methods         291        251    -40   
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits            825        819     -6   
+ Misses         1624       1209   -415   
  Partials          0          0          

Powered by Codecov. Last update 79c2a3f...c834a6e",True,{}
NetSys/bess,https://github.com/NetSys/bess,146,2016-11-28T22:55:31Z,2016-11-29T07:13:44Z,2016-11-29T07:29:38Z,MERGED,True,354,5042,85,https://github.com/changlan,Clean up snobj,9,['enhancement'],https://github.com/NetSys/bess/pull/146,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/146#issuecomment-263437527,,There are some documents mentioning snobj.md. They also need to be updated.,True,{}
NetSys/bess,https://github.com/NetSys/bess,146,2016-11-28T22:55:31Z,2016-11-29T07:13:44Z,2016-11-29T07:29:38Z,MERGED,True,354,5042,85,https://github.com/changlan,Clean up snobj,9,['enhancement'],https://github.com/NetSys/bess/pull/146,https://github.com/barath,4,https://github.com/NetSys/bess/pull/146#issuecomment-263494425,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,146,2016-11-28T22:55:31Z,2016-11-29T07:13:44Z,2016-11-29T07:29:38Z,MERGED,True,354,5042,85,https://github.com/changlan,Clean up snobj,9,['enhancement'],https://github.com/NetSys/bess/pull/146,https://github.com/barath,5,https://github.com/NetSys/bess/pull/146#issuecomment-263496795,,,True,{'THUMBS_UP': ['https://github.com/changlan']}
NetSys/bess,https://github.com/NetSys/bess,147,2016-11-28T23:27:09Z,2016-11-29T18:30:57Z,2016-12-20T19:46:47Z,MERGED,True,213,89,10,https://github.com/melvinw,add zero copy vport test,2,['enhancement'],https://github.com/NetSys/bess/pull/147,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/147,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,147,2016-11-28T23:27:09Z,2016-11-29T18:30:57Z,2016-12-20T19:46:47Z,MERGED,True,213,89,10,https://github.com/melvinw,add zero copy vport test,2,['enhancement'],https://github.com/NetSys/bess/pull/147,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/147#issuecomment-263429792,,"Current coverage is 45.47% (diff: 81.81%)

Merging #147 into c++ will increase coverage by 5.09%

@@                c++       #147   diff @@
==========================================
  Files            44         48     +4   
  Lines          2028       2243   +215   
  Methods         251        267    +16   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            819       1020   +201   
- Misses         1209       1223    +14   
  Partials          0          0          

Powered by Codecov. Last update 3954e69...c55462c",True,{}
NetSys/bess,https://github.com/NetSys/bess,148,2016-11-29T21:33:36Z,2016-11-30T11:55:36Z,2016-11-30T18:29:11Z,MERGED,True,403,246,24,https://github.com/melvinw,cleanup asserts and enable NDEBUG,6,['enhancement'],https://github.com/NetSys/bess/pull/148,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/148,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,148,2016-11-29T21:33:36Z,2016-11-30T11:55:36Z,2016-11-30T18:29:11Z,MERGED,True,403,246,24,https://github.com/melvinw,cleanup asserts and enable NDEBUG,6,['enhancement'],https://github.com/NetSys/bess/pull/148,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/148#issuecomment-263728097,,"Current coverage is 45.29% (diff: 0.00%)

Merging #148 into c++ will decrease coverage by 0.17%

@@                c++       #148   diff @@
==========================================
  Files            48         47     -1   
  Lines          2243       2179    -64   
  Methods         267        263     -4   
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           1020        987    -33   
+ Misses         1223       1192    -31   
  Partials          0          0          

Powered by Codecov. Last update 9b293f0...8fb8625",True,{}
NetSys/bess,https://github.com/NetSys/bess,148,2016-11-29T21:33:36Z,2016-11-30T11:55:36Z,2016-11-30T18:29:11Z,MERGED,True,403,246,24,https://github.com/melvinw,cleanup asserts and enable NDEBUG,6,['enhancement'],https://github.com/NetSys/bess/pull/148,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/148#issuecomment-263793866,,"Yup, looks like it. Just waiting for the last g++6 build",True,{}
NetSys/bess,https://github.com/NetSys/bess,148,2016-11-29T21:33:36Z,2016-11-30T11:55:36Z,2016-11-30T18:29:11Z,MERGED,True,403,246,24,https://github.com/melvinw,cleanup asserts and enable NDEBUG,6,['enhancement'],https://github.com/NetSys/bess/pull/148,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/148#issuecomment-263804373,,had to push one last tweak. should be ready now,True,{}
NetSys/bess,https://github.com/NetSys/bess,148,2016-11-29T21:33:36Z,2016-11-30T11:55:36Z,2016-11-30T18:29:11Z,MERGED,True,403,246,24,https://github.com/melvinw,cleanup asserts and enable NDEBUG,6,['enhancement'],https://github.com/NetSys/bess/pull/148,https://github.com/barath,5,https://github.com/NetSys/bess/pull/148#issuecomment-263857332,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,149,2016-11-30T07:42:17Z,2016-12-06T03:36:31Z,2016-12-06T03:37:06Z,MERGED,True,55,31,3,https://github.com/apanda,Change build.py to accept lib locations,6,['enhancement'],https://github.com/NetSys/bess/pull/149,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/149,"This changes build.py so that one can specify where Google Benchmark library is stored.
This change only adds a flag for one library, but it can easily be extended to others. I mostly did this because I am personally a bit weirded out by cloning the repository and running make install. I think it might be good to have similar stuff for gRPC (which needs to be built manually at the moment), protoc, and a few others. I can do that later, mostly wanted to test the waters to see if this was something others were OK with.
By the way, during development I noticed that build.py does not check protoc version, so it will get pretty far with old protobuf installations, but then fail in the Python bit.","This changes build.py so that one can specify where Google Benchmark library is stored.
This change only adds a flag for one library, but it can easily be extended to others. I mostly did this because I am personally a bit weirded out by cloning the repository and running make install. I think it might be good to have similar stuff for gRPC (which needs to be built manually at the moment), protoc, and a few others. I can do that later, mostly wanted to test the waters to see if this was something others were OK with.
By the way, during development I noticed that build.py does not check protoc version, so it will get pretty far with old protobuf installations, but then fail in the Python bit.",True,{}
NetSys/bess,https://github.com/NetSys/bess,149,2016-11-30T07:42:17Z,2016-12-06T03:36:31Z,2016-12-06T03:37:06Z,MERGED,True,55,31,3,https://github.com/apanda,Change build.py to accept lib locations,6,['enhancement'],https://github.com/NetSys/bess/pull/149,https://github.com/apanda,2,https://github.com/NetSys/bess/pull/149#issuecomment-263807809,"This changes build.py so that one can specify where Google Benchmark library is stored.
This change only adds a flag for one library, but it can easily be extended to others. I mostly did this because I am personally a bit weirded out by cloning the repository and running make install. I think it might be good to have similar stuff for gRPC (which needs to be built manually at the moment), protoc, and a few others. I can do that later, mostly wanted to test the waters to see if this was something others were OK with.
By the way, during development I noticed that build.py does not check protoc version, so it will get pretty far with old protobuf installations, but then fail in the Python bit.","By the way, the Travis job is almost surely going to fail. This is because https://github.com/NetSys/bess/blob/c%2B%2B/.travis.yml#L37 seems to refer to a file core/all_tests, which does not seem to exist.",True,{}
NetSys/bess,https://github.com/NetSys/bess,149,2016-11-30T07:42:17Z,2016-12-06T03:36:31Z,2016-12-06T03:37:06Z,MERGED,True,55,31,3,https://github.com/apanda,Change build.py to accept lib locations,6,['enhancement'],https://github.com/NetSys/bess/pull/149,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/149#issuecomment-264027439,"This changes build.py so that one can specify where Google Benchmark library is stored.
This change only adds a flag for one library, but it can easily be extended to others. I mostly did this because I am personally a bit weirded out by cloning the repository and running make install. I think it might be good to have similar stuff for gRPC (which needs to be built manually at the moment), protoc, and a few others. I can do that later, mostly wanted to test the waters to see if this was something others were OK with.
By the way, during development I noticed that build.py does not check protoc version, so it will get pretty far with old protobuf installations, but then fail in the Python bit.","@sangjinhan Fixed those comments, the flag vs env var thing is up to you. Whichever is fine.",True,{}
NetSys/bess,https://github.com/NetSys/bess,149,2016-11-30T07:42:17Z,2016-12-06T03:36:31Z,2016-12-06T03:37:06Z,MERGED,True,55,31,3,https://github.com/apanda,Change build.py to accept lib locations,6,['enhancement'],https://github.com/NetSys/bess/pull/149,https://github.com/codecov-io,4,https://github.com/NetSys/bess/pull/149#issuecomment-264039815,"This changes build.py so that one can specify where Google Benchmark library is stored.
This change only adds a flag for one library, but it can easily be extended to others. I mostly did this because I am personally a bit weirded out by cloning the repository and running make install. I think it might be good to have similar stuff for gRPC (which needs to be built manually at the moment), protoc, and a few others. I can do that later, mostly wanted to test the waters to see if this was something others were OK with.
By the way, during development I noticed that build.py does not check protoc version, so it will get pretty far with old protobuf installations, but then fail in the Python bit.","Current coverage is 45.29% (diff: 100%)

Merging #149 into c++ will decrease coverage by 0.17%

@@                c++       #149   diff @@
==========================================
  Files            48         47     -1   
  Lines          2243       2179    -64   
  Methods         267        263     -4   
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           1020        987    -33   
+ Misses         1223       1192    -31   
  Partials          0          0          

Powered by Codecov. Last update 9b293f0...e4af057",True,{}
NetSys/bess,https://github.com/NetSys/bess,149,2016-11-30T07:42:17Z,2016-12-06T03:36:31Z,2016-12-06T03:37:06Z,MERGED,True,55,31,3,https://github.com/apanda,Change build.py to accept lib locations,6,['enhancement'],https://github.com/NetSys/bess/pull/149,https://github.com/apanda,5,https://github.com/NetSys/bess/pull/149#issuecomment-264043315,"This changes build.py so that one can specify where Google Benchmark library is stored.
This change only adds a flag for one library, but it can easily be extended to others. I mostly did this because I am personally a bit weirded out by cloning the repository and running make install. I think it might be good to have similar stuff for gRPC (which needs to be built manually at the moment), protoc, and a few others. I can do that later, mostly wanted to test the waters to see if this was something others were OK with.
By the way, during development I noticed that build.py does not check protoc version, so it will get pretty far with old protobuf installations, but then fail in the Python bit.",@sangjinhan Addressed those. Sorry about the number of back and forths.,True,{}
NetSys/bess,https://github.com/NetSys/bess,149,2016-11-30T07:42:17Z,2016-12-06T03:36:31Z,2016-12-06T03:37:06Z,MERGED,True,55,31,3,https://github.com/apanda,Change build.py to accept lib locations,6,['enhancement'],https://github.com/NetSys/bess/pull/149,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/149#issuecomment-264096797,"This changes build.py so that one can specify where Google Benchmark library is stored.
This change only adds a flag for one library, but it can easily be extended to others. I mostly did this because I am personally a bit weirded out by cloning the repository and running make install. I think it might be good to have similar stuff for gRPC (which needs to be built manually at the moment), protoc, and a few others. I can do that later, mostly wanted to test the waters to see if this was something others were OK with.
By the way, during development I noticed that build.py does not check protoc version, so it will get pretty far with old protobuf installations, but then fail in the Python bit.","Merged, thanks!
core/all_test is a byproduct made during the build process.",True,{}
NetSys/bess,https://github.com/NetSys/bess,149,2016-11-30T07:42:17Z,2016-12-06T03:36:31Z,2016-12-06T03:37:06Z,MERGED,True,55,31,3,https://github.com/apanda,Change build.py to accept lib locations,6,['enhancement'],https://github.com/NetSys/bess/pull/149,https://github.com/barath,7,https://github.com/NetSys/bess/pull/149#issuecomment-264967629,"This changes build.py so that one can specify where Google Benchmark library is stored.
This change only adds a flag for one library, but it can easily be extended to others. I mostly did this because I am personally a bit weirded out by cloning the repository and running make install. I think it might be good to have similar stuff for gRPC (which needs to be built manually at the moment), protoc, and a few others. I can do that later, mostly wanted to test the waters to see if this was something others were OK with.
By the way, during development I noticed that build.py does not check protoc version, so it will get pretty far with old protobuf installations, but then fail in the Python bit.",Just talking to Panda -- was it intentional that this was closed and not merged?  (Was it getting merged in via some other branch?),True,{}
NetSys/bess,https://github.com/NetSys/bess,149,2016-11-30T07:42:17Z,2016-12-06T03:36:31Z,2016-12-06T03:37:06Z,MERGED,True,55,31,3,https://github.com/apanda,Change build.py to accept lib locations,6,['enhancement'],https://github.com/NetSys/bess/pull/149,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/149#issuecomment-265051906,"This changes build.py so that one can specify where Google Benchmark library is stored.
This change only adds a flag for one library, but it can easily be extended to others. I mostly did this because I am personally a bit weirded out by cloning the repository and running make install. I think it might be good to have similar stuff for gRPC (which needs to be built manually at the moment), protoc, and a few others. I can do that later, mostly wanted to test the waters to see if this was something others were OK with.
By the way, during development I noticed that build.py does not check protoc version, so it will get pretty far with old protobuf installations, but then fail in the Python bit.",Sorry forgot to push. Merged via the Web UI.,True,{}
NetSys/bess,https://github.com/NetSys/bess,150,2016-11-30T19:03:25Z,2016-12-06T05:55:11Z,2016-12-08T19:15:33Z,MERGED,True,73,84,5,https://github.com/melvinw,replace weird memsets,5,['enhancement'],https://github.com/NetSys/bess/pull/150,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/150,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,150,2016-11-30T19:03:25Z,2016-12-06T05:55:11Z,2016-12-08T19:15:33Z,MERGED,True,73,84,5,https://github.com/melvinw,replace weird memsets,5,['enhancement'],https://github.com/NetSys/bess/pull/150,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/150#issuecomment-263970281,,"Current coverage is 45.36% (diff: 0.00%)

Merging #150 into c++ will decrease coverage by 0.02%

@@                c++       #150   diff @@
==========================================
  Files            47         47          
  Lines          2179       2180     +1   
  Methods         262        262          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            989        989          
- Misses         1190       1191     +1   
  Partials          0          0          

Powered by Codecov. Last update 2ff84e3...236b3a6",True,{}
NetSys/bess,https://github.com/NetSys/bess,150,2016-11-30T19:03:25Z,2016-12-06T05:55:11Z,2016-12-08T19:15:33Z,MERGED,True,73,84,5,https://github.com/melvinw,replace weird memsets,5,['enhancement'],https://github.com/NetSys/bess/pull/150,https://github.com/barath,3,https://github.com/NetSys/bess/pull/150#issuecomment-263973639,,@changlan Would it be possible to run your clang checks against this?,True,{}
NetSys/bess,https://github.com/NetSys/bess,150,2016-11-30T19:03:25Z,2016-12-06T05:55:11Z,2016-12-08T19:15:33Z,MERGED,True,73,84,5,https://github.com/melvinw,replace weird memsets,5,['enhancement'],https://github.com/NetSys/bess/pull/150,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/150#issuecomment-263974913,,"clang also warns about memmove (like this: https://github.com/NetSys/bess/blob/c%2B%2B/core/modules/wildcard_match.cc#L338), which also overwrites vtable.",True,{}
NetSys/bess,https://github.com/NetSys/bess,150,2016-11-30T19:03:25Z,2016-12-06T05:55:11Z,2016-12-08T19:15:33Z,MERGED,True,73,84,5,https://github.com/melvinw,replace weird memsets,5,['enhancement'],https://github.com/NetSys/bess/pull/150,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/150#issuecomment-263975634,,kk. Is that all? Could you post the output here?,True,{}
NetSys/bess,https://github.com/NetSys/bess,150,2016-11-30T19:03:25Z,2016-12-06T05:55:11Z,2016-12-08T19:15:33Z,MERGED,True,73,84,5,https://github.com/melvinw,replace weird memsets,5,['enhancement'],https://github.com/NetSys/bess/pull/150,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/150#issuecomment-263977553,,"Yes, I think so. The message is
modules/wildcard_match.cc:340:13: error: destination for this 'memmove' call is a pointer to class containing a dynamic
      class 'HTable<wm_hkey_t, WmData, &WildcardMatch::wm_keycmp, &WildcardMatch::wm_hash>'; vtable pointer will be
      overwritten [-Werror,-Wdynamic-class-memaccess]
    memmove(&tuples_[idx], &tuples_[idx + 1],
    ~~~~~~~ ^
modules/wildcard_match.cc:340:13: note: explicitly cast the pointer to silence this warning
    memmove(&tuples_[idx], &tuples_[idx + 1],
            ^
            (void*)",True,{}
NetSys/bess,https://github.com/NetSys/bess,150,2016-11-30T19:03:25Z,2016-12-06T05:55:11Z,2016-12-08T19:15:33Z,MERGED,True,73,84,5,https://github.com/melvinw,replace weird memsets,5,['enhancement'],https://github.com/NetSys/bess/pull/150,https://github.com/melvinw,7,https://github.com/NetSys/bess/pull/150#issuecomment-263977860,,Thanks. Will push a fix,True,{}
NetSys/bess,https://github.com/NetSys/bess,150,2016-11-30T19:03:25Z,2016-12-06T05:55:11Z,2016-12-08T19:15:33Z,MERGED,True,73,84,5,https://github.com/melvinw,replace weird memsets,5,['enhancement'],https://github.com/NetSys/bess/pull/150,https://github.com/barath,8,https://github.com/NetSys/bess/pull/150#issuecomment-265067771,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,151,2016-12-01T00:55:39Z,2016-12-06T00:21:46Z,2016-12-06T00:27:48Z,MERGED,True,196,125,31,https://github.com/changlan,Build with make CXX=clang++,15,"['bug', 'enhancement']",https://github.com/NetSys/bess/pull/151,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/151,"Fix build issues with CXX=clang++
Fix a few memory leaks detected by LLVM sanitizer","Fix build issues with CXX=clang++
Fix a few memory leaks detected by LLVM sanitizer",True,{}
NetSys/bess,https://github.com/NetSys/bess,151,2016-12-01T00:55:39Z,2016-12-06T00:21:46Z,2016-12-06T00:27:48Z,MERGED,True,196,125,31,https://github.com/changlan,Build with make CXX=clang++,15,"['bug', 'enhancement']",https://github.com/NetSys/bess/pull/151,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/151#issuecomment-264054917,"Fix build issues with CXX=clang++
Fix a few memory leaks detected by LLVM sanitizer","Current coverage is 45.36% (diff: 100%)

Merging #151 into c++ will increase coverage by 0.06%

@@                c++       #151   diff @@
==========================================
  Files            47         47          
  Lines          2179       2178     -1   
  Methods         263        262     -1   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            987        988     +1   
+ Misses         1192       1190     -2   
  Partials          0          0          

Powered by Codecov. Last update 892c3be...319944b",True,{}
NetSys/bess,https://github.com/NetSys/bess,151,2016-12-01T00:55:39Z,2016-12-06T00:21:46Z,2016-12-06T00:27:48Z,MERGED,True,196,125,31,https://github.com/changlan,Build with make CXX=clang++,15,"['bug', 'enhancement']",https://github.com/NetSys/bess/pull/151,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/151#issuecomment-264136748,"Fix build issues with CXX=clang++
Fix a few memory leaks detected by LLVM sanitizer",Comments addressed.,True,{}
NetSys/bess,https://github.com/NetSys/bess,151,2016-12-01T00:55:39Z,2016-12-06T00:21:46Z,2016-12-06T00:27:48Z,MERGED,True,196,125,31,https://github.com/changlan,Build with make CXX=clang++,15,"['bug', 'enhancement']",https://github.com/NetSys/bess/pull/151,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/151#issuecomment-265022129,"Fix build issues with CXX=clang++
Fix a few memory leaks detected by LLVM sanitizer",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,153,2016-12-02T21:59:12Z,2016-12-06T00:17:17Z,2016-12-06T00:27:47Z,MERGED,True,313,196,10,https://github.com/changlan,PEP-8 formatting of Python code,1,['enhancement'],https://github.com/NetSys/bess/pull/153,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/153,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,153,2016-12-02T21:59:12Z,2016-12-06T00:17:17Z,2016-12-06T00:27:47Z,MERGED,True,313,196,10,https://github.com/changlan,PEP-8 formatting of Python code,1,['enhancement'],https://github.com/NetSys/bess/pull/153,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/153#issuecomment-264579768,,"Current coverage is 45.29% (diff: 100%)

Merging #153 into c++ will not change coverage

@@                c++       #153   diff @@
==========================================
  Files            47         47          
  Lines          2179       2179          
  Methods         263        263          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            987        987          
  Misses         1192       1192          
  Partials          0          0          

Powered by Codecov. Last update 892c3be...cda2785",True,{}
NetSys/bess,https://github.com/NetSys/bess,153,2016-12-02T21:59:12Z,2016-12-06T00:17:17Z,2016-12-06T00:27:47Z,MERGED,True,313,196,10,https://github.com/changlan,PEP-8 formatting of Python code,1,['enhancement'],https://github.com/NetSys/bess/pull/153,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/153#issuecomment-265021292,,Looks good!,True,{}
NetSys/bess,https://github.com/NetSys/bess,153,2016-12-02T21:59:12Z,2016-12-06T00:17:17Z,2016-12-06T00:27:47Z,MERGED,True,313,196,10,https://github.com/changlan,PEP-8 formatting of Python code,1,['enhancement'],https://github.com/NetSys/bess/pull/153,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/153#issuecomment-265021774,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,154,2016-12-05T22:27:00Z,2016-12-06T01:08:10Z,2016-12-06T03:43:57Z,MERGED,True,27,20,2,https://github.com/changlan,Align memory address to 64 bytes,2,['bug'],https://github.com/NetSys/bess/pull/154,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/154,This patch should fix #152,This patch should fix #152,True,{}
NetSys/bess,https://github.com/NetSys/bess,154,2016-12-05T22:27:00Z,2016-12-06T01:08:10Z,2016-12-06T03:43:57Z,MERGED,True,27,20,2,https://github.com/changlan,Align memory address to 64 bytes,2,['bug'],https://github.com/NetSys/bess/pull/154,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/154#issuecomment-265006363,This patch should fix #152,"Current coverage is 45.38% (diff: 100%)

Merging #154 into c++ will increase coverage by 0.02%

@@                c++       #154   diff @@
==========================================
  Files            47         47          
  Lines          2178       2179     +1   
  Methods         262        262          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            988        989     +1   
  Misses         1190       1190          
  Partials          0          0          

Powered by Codecov. Last update 7b50d71...5fb0510",True,{}
NetSys/bess,https://github.com/NetSys/bess,154,2016-12-05T22:27:00Z,2016-12-06T01:08:10Z,2016-12-06T03:43:57Z,MERGED,True,27,20,2,https://github.com/changlan,Align memory address to 64 bytes,2,['bug'],https://github.com/NetSys/bess/pull/154,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/154#issuecomment-265030125,This patch should fix #152,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,155,2016-12-06T20:55:56Z,2016-12-08T06:01:35Z,2016-12-08T06:14:22Z,MERGED,True,2291,1405,28,https://github.com/barath,Tc scheduler rewrite,125,['enhancement'],https://github.com/NetSys/bess/pull/155,https://github.com/barath,1,https://github.com/NetSys/bess/pull/155,"This is a large pull request rewriting the traffic class and scheduler code, and related functionality.","This is a large pull request rewriting the traffic class and scheduler code, and related functionality.",True,{}
NetSys/bess,https://github.com/NetSys/bess,155,2016-12-06T20:55:56Z,2016-12-08T06:01:35Z,2016-12-08T06:14:22Z,MERGED,True,2291,1405,28,https://github.com/barath,Tc scheduler rewrite,125,['enhancement'],https://github.com/NetSys/bess/pull/155,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/155#issuecomment-265269581,"This is a large pull request rewriting the traffic class and scheduler code, and related functionality.",pls squash-and-merge :),True,{}
NetSys/bess,https://github.com/NetSys/bess,155,2016-12-06T20:55:56Z,2016-12-08T06:01:35Z,2016-12-08T06:14:22Z,MERGED,True,2291,1405,28,https://github.com/barath,Tc scheduler rewrite,125,['enhancement'],https://github.com/NetSys/bess/pull/155,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/155#issuecomment-265279989,"This is a large pull request rewriting the traffic class and scheduler code, and related functionality.","Current coverage is 61.06% (diff: 71.08%)

Merging #155 into c++ will increase coverage by 14.47%

@@                c++       #155   diff @@
==========================================
  Files            46         46          
  Lines          2230       2137    -93   
  Methods         253        279    +26   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1039       1305   +266   
+ Misses         1191        832   -359   
  Partials          0          0          

Powered by Codecov. Last update 56e0128...ae1cf96",True,{}
NetSys/bess,https://github.com/NetSys/bess,155,2016-12-06T20:55:56Z,2016-12-08T06:01:35Z,2016-12-08T06:14:22Z,MERGED,True,2291,1405,28,https://github.com/barath,Tc scheduler rewrite,125,['enhancement'],https://github.com/NetSys/bess/pull/155,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/155#issuecomment-265581178,"This is a large pull request rewriting the traffic class and scheduler code, and related functionality.",Any idea why the gcc 4.8 build fails?,True,{}
NetSys/bess,https://github.com/NetSys/bess,155,2016-12-06T20:55:56Z,2016-12-08T06:01:35Z,2016-12-08T06:14:22Z,MERGED,True,2291,1405,28,https://github.com/barath,Tc scheduler rewrite,125,['enhancement'],https://github.com/NetSys/bess/pull/155,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/155#issuecomment-265603818,"This is a large pull request rewriting the traffic class and scheduler code, and related functionality.","Melvin wonderfully walked through the updates with me because he's great. I have two questions --


Can we have a policy that, when we use auto and it's not completely obvious what the return value/type is, we put a quick comment explaining what it is? Auto makes the code 80% more concise and 90% less understandable.


Is it really the case that modules have more than one task associated with them? Melvin and I were trying to think of examples when that is true but we couldn't think of any that weren't silly. It seems like each module should have 0 or 1 tasks associated with them -- they're either directly invoked by the scheduler, or indirectly invoked as packets are pushed down the pipeline to them. But why would they need 2+ tasks?",True,{}
NetSys/bess,https://github.com/NetSys/bess,155,2016-12-06T20:55:56Z,2016-12-08T06:01:35Z,2016-12-08T06:14:22Z,MERGED,True,2291,1405,28,https://github.com/barath,Tc scheduler rewrite,125,['enhancement'],https://github.com/NetSys/bess/pull/155,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/155#issuecomment-265622470,"This is a large pull request rewriting the traffic class and scheduler code, and related functionality.",This g++-4.8 error is really strange. The log is reporting a segfault in traffic_class_test. I can't reproduce locally.,True,{}
NetSys/bess,https://github.com/NetSys/bess,155,2016-12-06T20:55:56Z,2016-12-08T06:01:35Z,2016-12-08T06:14:22Z,MERGED,True,2291,1405,28,https://github.com/barath,Tc scheduler rewrite,125,['enhancement'],https://github.com/NetSys/bess/pull/155,https://github.com/melvinw,7,https://github.com/NetSys/bess/pull/155#issuecomment-265622586,"This is a large pull request rewriting the traffic class and scheduler code, and related functionality.","That is, after installing g++-4.8, rebuilding protobuf, etc...",True,{}
NetSys/bess,https://github.com/NetSys/bess,155,2016-12-06T20:55:56Z,2016-12-08T06:01:35Z,2016-12-08T06:14:22Z,MERGED,True,2291,1405,28,https://github.com/barath,Tc scheduler rewrite,125,['enhancement'],https://github.com/NetSys/bess/pull/155,https://github.com/melvinw,8,https://github.com/NetSys/bess/pull/155#issuecomment-265657558,"This is a large pull request rewriting the traffic class and scheduler code, and related functionality.",just a reminder to squash on merge. this pr is super messy.,True,{}
NetSys/bess,https://github.com/NetSys/bess,155,2016-12-06T20:55:56Z,2016-12-08T06:01:35Z,2016-12-08T06:14:22Z,MERGED,True,2291,1405,28,https://github.com/barath,Tc scheduler rewrite,125,['enhancement'],https://github.com/NetSys/bess/pull/155,https://github.com/changlan,9,https://github.com/NetSys/bess/pull/155#issuecomment-265660579,"This is a large pull request rewriting the traffic class and scheduler code, and related functionality.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,156,2016-12-07T06:12:54Z,2016-12-07T07:40:49Z,2016-12-08T02:29:19Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Build bessd in parallel,1,['enhancement'],https://github.com/NetSys/bess/pull/156,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/156,"Since the core/Makefile now does not do parallel build by default, we
add -j option to the build.py script","Since the core/Makefile now does not do parallel build by default, we
add -j option to the build.py script",True,{}
NetSys/bess,https://github.com/NetSys/bess,156,2016-12-07T06:12:54Z,2016-12-07T07:40:49Z,2016-12-08T02:29:19Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Build bessd in parallel,1,['enhancement'],https://github.com/NetSys/bess/pull/156,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/156#issuecomment-265378436,"Since the core/Makefile now does not do parallel build by default, we
add -j option to the build.py script",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,157,2016-12-07T19:38:44Z,2016-12-08T02:31:25Z,2016-12-08T06:05:10Z,MERGED,True,79,38,6,https://github.com/changlan,Add Clang builds to Travis CI,10,['enhancement'],https://github.com/NetSys/bess/pull/157,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/157,"Add Clang builds to Travis CI
PEP-8 formatting","Add Clang builds to Travis CI
PEP-8 formatting",True,{}
NetSys/bess,https://github.com/NetSys/bess,157,2016-12-07T19:38:44Z,2016-12-08T02:31:25Z,2016-12-08T06:05:10Z,MERGED,True,79,38,6,https://github.com/changlan,Add Clang builds to Travis CI,10,['enhancement'],https://github.com/NetSys/bess/pull/157,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/157#issuecomment-265561859,"Add Clang builds to Travis CI
PEP-8 formatting","Current coverage is 46.19% (diff: 100%)

Merging #157 into c++ will increase coverage by 0.83%

@@                c++       #157   diff @@
==========================================
  Files            47         46     -1   
  Lines          2180       2249    +69   
  Methods         262        254     -8   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits            989       1039    +50   
- Misses         1191       1210    +19   
  Partials          0          0          

Powered by Codecov. Last update 1654f9e...3ce88ec",True,{}
NetSys/bess,https://github.com/NetSys/bess,157,2016-12-07T19:38:44Z,2016-12-08T02:31:25Z,2016-12-08T06:05:10Z,MERGED,True,79,38,6,https://github.com/changlan,Add Clang builds to Travis CI,10,['enhancement'],https://github.com/NetSys/bess/pull/157,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/157#issuecomment-265609798,"Add Clang builds to Travis CI
PEP-8 formatting",Most of these changes are due to formatting script...,True,{}
NetSys/bess,https://github.com/NetSys/bess,157,2016-12-07T19:38:44Z,2016-12-08T02:31:25Z,2016-12-08T06:05:10Z,MERGED,True,79,38,6,https://github.com/changlan,Add Clang builds to Travis CI,10,['enhancement'],https://github.com/NetSys/bess/pull/157,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/157#issuecomment-265618310,"Add Clang builds to Travis CI
PEP-8 formatting","Yup, those PEP-8 formatting changes are intentional. :)",True,{}
NetSys/bess,https://github.com/NetSys/bess,157,2016-12-07T19:38:44Z,2016-12-08T02:31:25Z,2016-12-08T06:05:10Z,MERGED,True,79,38,6,https://github.com/changlan,Add Clang builds to Travis CI,10,['enhancement'],https://github.com/NetSys/bess/pull/157,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/157#issuecomment-265634242,"Add Clang builds to Travis CI
PEP-8 formatting",LGTM,True,{}
NetSys/bess,https://github.com/NetSys/bess,157,2016-12-07T19:38:44Z,2016-12-08T02:31:25Z,2016-12-08T06:05:10Z,MERGED,True,79,38,6,https://github.com/changlan,Add Clang builds to Travis CI,10,['enhancement'],https://github.com/NetSys/bess/pull/157,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/157#issuecomment-265636307,"Add Clang builds to Travis CI
PEP-8 formatting",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,158,2016-12-07T21:36:27Z,2016-12-08T02:34:50Z,2016-12-12T23:46:57Z,MERGED,True,9,58,3,https://github.com/justinemarie,call modules recursively,2,[],https://github.com/NetSys/bess/pull/158,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/158,This switches back to calling modules recursively to improve throughput.,This switches back to calling modules recursively to improve throughput.,True,{}
NetSys/bess,https://github.com/NetSys/bess,158,2016-12-07T21:36:27Z,2016-12-08T02:34:50Z,2016-12-12T23:46:57Z,MERGED,True,9,58,3,https://github.com/justinemarie,call modules recursively,2,[],https://github.com/NetSys/bess/pull/158,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/158#issuecomment-265584470,This switches back to calling modules recursively to improve throughput.,"Current coverage is 45.72% (diff: 0.00%)

Merging #158 into c++ will increase coverage by 0.35%

@@                c++       #158   diff @@
==========================================
  Files            47         47          
  Lines          2180       2163    -17   
  Methods         262        261     -1   
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits            989        989          
+ Misses         1191       1174    -17   
  Partials          0          0          

Powered by Codecov. Last update 1654f9e...d7ca26a",True,{}
NetSys/bess,https://github.com/NetSys/bess,158,2016-12-07T21:36:27Z,2016-12-08T02:34:50Z,2016-12-12T23:46:57Z,MERGED,True,9,58,3,https://github.com/justinemarie,call modules recursively,2,[],https://github.com/NetSys/bess/pull/158,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/158#issuecomment-265587393,This switches back to calling modules recursively to improve throughput.,Looks like that quirk is gone now that I actually clang-formatted,True,{}
NetSys/bess,https://github.com/NetSys/bess,158,2016-12-07T21:36:27Z,2016-12-08T02:34:50Z,2016-12-12T23:46:57Z,MERGED,True,9,58,3,https://github.com/justinemarie,call modules recursively,2,[],https://github.com/NetSys/bess/pull/158,https://github.com/barath,4,https://github.com/NetSys/bess/pull/158#issuecomment-265587973,This switches back to calling modules recursively to improve throughput.,Dumb question -- where are the stack-allocated packet batches in this PR?,True,{}
NetSys/bess,https://github.com/NetSys/bess,158,2016-12-07T21:36:27Z,2016-12-08T02:34:50Z,2016-12-12T23:46:57Z,MERGED,True,9,58,3,https://github.com/justinemarie,call modules recursively,2,[],https://github.com/NetSys/bess/pull/158,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/158#issuecomment-265588253,This switches back to calling modules recursively to improve throughput.,They are allocated in RunTask or in ProcessBatch (in the modules themselves).,True,{}
NetSys/bess,https://github.com/NetSys/bess,158,2016-12-07T21:36:27Z,2016-12-08T02:34:50Z,2016-12-12T23:46:57Z,MERGED,True,9,58,3,https://github.com/justinemarie,call modules recursively,2,[],https://github.com/NetSys/bess/pull/158,https://github.com/barath,6,https://github.com/NetSys/bess/pull/158#issuecomment-265588512,This switches back to calling modules recursively to improve throughput.,Are no changes needed in RunTask or ProcessBatch then to revert to that behavior?,True,{}
NetSys/bess,https://github.com/NetSys/bess,158,2016-12-07T21:36:27Z,2016-12-08T02:34:50Z,2016-12-12T23:46:57Z,MERGED,True,9,58,3,https://github.com/justinemarie,call modules recursively,2,[],https://github.com/NetSys/bess/pull/158,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/158#issuecomment-265589098,This switches back to calling modules recursively to improve throughput.,"That's correct.

The current code in the C++ branch allows them to pass along a pointer to their stack-allocated PacketBatch to RunChooseModule, and then RunChooseModule copies it in to the heap and returns. So they were always stack-allocating and then we just copied them.
The new-new version that was never committed to the C++ allocated everything from the mempool in the heap, and that required changes to all the modules. But I never made a pull request for that version since it still wasn't as fast as the recursive version.",True,{}
NetSys/bess,https://github.com/NetSys/bess,158,2016-12-07T21:36:27Z,2016-12-08T02:34:50Z,2016-12-12T23:46:57Z,MERGED,True,9,58,3,https://github.com/justinemarie,call modules recursively,2,[],https://github.com/NetSys/bess/pull/158,https://github.com/justinemarie,8,https://github.com/NetSys/bess/pull/158#issuecomment-265603165,This switches back to calling modules recursively to improve throughput.,What is this failure?,True,{}
NetSys/bess,https://github.com/NetSys/bess,158,2016-12-07T21:36:27Z,2016-12-08T02:34:50Z,2016-12-12T23:46:57Z,MERGED,True,9,58,3,https://github.com/justinemarie,call modules recursively,2,[],https://github.com/NetSys/bess/pull/158,https://github.com/melvinw,9,https://github.com/NetSys/bess/pull/158#issuecomment-265636737,This switches back to calling modules recursively to improve throughput.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,159,2016-12-08T19:38:02Z,2016-12-08T20:36:55Z,2016-12-10T00:19:39Z,MERGED,True,1,1,1,https://github.com/melvinw,fix build.py dpdk build,1,[],https://github.com/NetSys/bess/pull/159,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/159,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,159,2016-12-08T19:38:02Z,2016-12-08T20:36:55Z,2016-12-10T00:19:39Z,MERGED,True,1,1,1,https://github.com/melvinw,fix build.py dpdk build,1,[],https://github.com/NetSys/bess/pull/159,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/159#issuecomment-265848470,,thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,160,2016-12-08T19:44:00Z,2016-12-08T20:31:03Z,2016-12-09T02:27:44Z,MERGED,True,12,2,3,https://github.com/barath,Removes __ymm_aligned from stats array to fix clang segfault in traffic_class_test.,2,[],https://github.com/NetSys/bess/pull/160,https://github.com/barath,1,https://github.com/NetSys/bess/pull/160,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,160,2016-12-08T19:44:00Z,2016-12-08T20:31:03Z,2016-12-09T02:27:44Z,MERGED,True,12,2,3,https://github.com/barath,Removes __ymm_aligned from stats array to fix clang segfault in traffic_class_test.,2,[],https://github.com/NetSys/bess/pull/160,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/160#issuecomment-265840700,,"Current coverage is 61.06% (diff: 100%)

Merging #160 into c++ will not change coverage

@@                c++       #160   diff @@
==========================================
  Files            46         46          
  Lines          2137       2137          
  Methods         279        279          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1305       1305          
  Misses          832        832          
  Partials          0          0          

Powered by Codecov. Last update 5951edf...f792e98",True,{}
NetSys/bess,https://github.com/NetSys/bess,160,2016-12-08T19:44:00Z,2016-12-08T20:31:03Z,2016-12-09T02:27:44Z,MERGED,True,12,2,3,https://github.com/barath,Removes __ymm_aligned from stats array to fix clang segfault in traffic_class_test.,2,[],https://github.com/NetSys/bess/pull/160,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/160#issuecomment-265846968,,thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,161,2016-12-08T19:59:33Z,2016-12-08T22:38:42Z,2016-12-08T22:38:53Z,MERGED,True,150,142,11,https://github.com/apanda,A set of fixes in porting from C to C++,7,[],https://github.com/NetSys/bess/pull/161,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/161,"I can break this into smaller pull requests if that helps, but the code changes should be quite minimal. The main changes of interest are:


PMD ports were unusable with PCI specs, this change reallows that. I don't think the solution is particularly elegant, but I had limited options because of choices made by protobuf.


The rewrite module reliably segfaulted for me, fixed that by changing memcpy used.


Measure did not forward most packets, so a minor fix for that module.


The histogram bits in utils were unusable.","I can break this into smaller pull requests if that helps, but the code changes should be quite minimal. The main changes of interest are:


PMD ports were unusable with PCI specs, this change reallows that. I don't think the solution is particularly elegant, but I had limited options because of choices made by protobuf.


The rewrite module reliably segfaulted for me, fixed that by changing memcpy used.


Measure did not forward most packets, so a minor fix for that module.


The histogram bits in utils were unusable.",True,{}
NetSys/bess,https://github.com/NetSys/bess,161,2016-12-08T19:59:33Z,2016-12-08T22:38:42Z,2016-12-08T22:38:53Z,MERGED,True,150,142,11,https://github.com/apanda,A set of fixes in porting from C to C++,7,[],https://github.com/NetSys/bess/pull/161,https://github.com/apanda,2,https://github.com/NetSys/bess/pull/161#issuecomment-265860425,"I can break this into smaller pull requests if that helps, but the code changes should be quite minimal. The main changes of interest are:


PMD ports were unusable with PCI specs, this change reallows that. I don't think the solution is particularly elegant, but I had limited options because of choices made by protobuf.


The rewrite module reliably segfaulted for me, fixed that by changing memcpy used.


Measure did not forward most packets, so a minor fix for that module.


The histogram bits in utils were unusable.","Fixed those comments, sorry.",True,{}
NetSys/bess,https://github.com/NetSys/bess,161,2016-12-08T19:59:33Z,2016-12-08T22:38:42Z,2016-12-08T22:38:53Z,MERGED,True,150,142,11,https://github.com/apanda,A set of fixes in porting from C to C++,7,[],https://github.com/NetSys/bess/pull/161,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/161#issuecomment-265861003,"I can break this into smaller pull requests if that helps, but the code changes should be quite minimal. The main changes of interest are:


PMD ports were unusable with PCI specs, this change reallows that. I don't think the solution is particularly elegant, but I had limited options because of choices made by protobuf.


The rewrite module reliably segfaulted for me, fixed that by changing memcpy used.


Measure did not forward most packets, so a minor fix for that module.


The histogram bits in utils were unusable.",Thanks! Looks good to me otherwise. Will approve after CI passes,True,{}
NetSys/bess,https://github.com/NetSys/bess,161,2016-12-08T19:59:33Z,2016-12-08T22:38:42Z,2016-12-08T22:38:53Z,MERGED,True,150,142,11,https://github.com/apanda,A set of fixes in porting from C to C++,7,[],https://github.com/NetSys/bess/pull/161,https://github.com/codecov-io,4,https://github.com/NetSys/bess/pull/161#issuecomment-265865473,"I can break this into smaller pull requests if that helps, but the code changes should be quite minimal. The main changes of interest are:


PMD ports were unusable with PCI specs, this change reallows that. I don't think the solution is particularly elegant, but I had limited options because of choices made by protobuf.


The rewrite module reliably segfaulted for me, fixed that by changing memcpy used.


Measure did not forward most packets, so a minor fix for that module.


The histogram bits in utils were unusable.","Current coverage is 61.06% (diff: 100%)

Merging #161 into c++ will not change coverage

@@                c++       #161   diff @@
==========================================
  Files            46         46          
  Lines          2137       2137          
  Methods         279        279          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1305       1305          
  Misses          832        832          
  Partials          0          0          

Powered by Codecov. Last update a745557...2a86d56",True,{}
NetSys/bess,https://github.com/NetSys/bess,161,2016-12-08T19:59:33Z,2016-12-08T22:38:42Z,2016-12-08T22:38:53Z,MERGED,True,150,142,11,https://github.com/apanda,A set of fixes in porting from C to C++,7,[],https://github.com/NetSys/bess/pull/161,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/161#issuecomment-265877184,"I can break this into smaller pull requests if that helps, but the code changes should be quite minimal. The main changes of interest are:


PMD ports were unusable with PCI specs, this change reallows that. I don't think the solution is particularly elegant, but I had limited options because of choices made by protobuf.


The rewrite module reliably segfaulted for me, fixed that by changing memcpy used.


Measure did not forward most packets, so a minor fix for that module.


The histogram bits in utils were unusable.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,163,2016-12-08T23:18:40Z,2016-12-08T23:50:36Z,2016-12-09T02:27:43Z,MERGED,True,82,20,3,https://github.com/barath,Optimizes round robin traffic class and adds a round robin benchmark.,1,[],https://github.com/NetSys/bess/pull/163,https://github.com/barath,1,https://github.com/NetSys/bess/pull/163,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,163,2016-12-08T23:18:40Z,2016-12-08T23:50:36Z,2016-12-09T02:27:43Z,MERGED,True,82,20,3,https://github.com/barath,Optimizes round robin traffic class and adds a round robin benchmark.,1,[],https://github.com/NetSys/bess/pull/163,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/163#issuecomment-265886757,,looks good! just one small comment,True,{}
NetSys/bess,https://github.com/NetSys/bess,163,2016-12-08T23:18:40Z,2016-12-08T23:50:36Z,2016-12-09T02:27:43Z,MERGED,True,82,20,3,https://github.com/barath,Optimizes round robin traffic class and adds a round robin benchmark.,1,[],https://github.com/NetSys/bess/pull/163,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/163#issuecomment-265891073,,"Current coverage is 61.09% (diff: 71.42%)

Merging #163 into c++ will increase coverage by 0.02%

@@                c++       #163   diff @@
==========================================
  Files            46         46          
  Lines          2137       2136     -1   
  Methods         279        279          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1305       1305          
+ Misses          832        831     -1   
  Partials          0          0          

Powered by Codecov. Last update 573cb58...8d7a7aa",True,{}
NetSys/bess,https://github.com/NetSys/bess,163,2016-12-08T23:18:40Z,2016-12-08T23:50:36Z,2016-12-09T02:27:43Z,MERGED,True,82,20,3,https://github.com/barath,Optimizes round robin traffic class and adds a round robin benchmark.,1,[],https://github.com/NetSys/bess/pull/163,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/163#issuecomment-265891327,,thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,164,2016-12-08T23:41:20Z,2016-12-09T00:17:08Z,2016-12-09T00:27:10Z,MERGED,True,15,367,5,https://github.com/barath,Removes cdlist and changes flowgen to use std::deque instead.,1,[],https://github.com/NetSys/bess/pull/164,https://github.com/barath,1,https://github.com/NetSys/bess/pull/164,Also removes minheap which was already unused.,Also removes minheap which was already unused.,True,{}
NetSys/bess,https://github.com/NetSys/bess,164,2016-12-08T23:41:20Z,2016-12-09T00:17:08Z,2016-12-09T00:27:10Z,MERGED,True,15,367,5,https://github.com/barath,Removes cdlist and changes flowgen to use std::deque instead.,1,[],https://github.com/NetSys/bess/pull/164,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/164#issuecomment-265894662,Also removes minheap which was already unused.,looks good! just waiting on CI,True,{}
NetSys/bess,https://github.com/NetSys/bess,164,2016-12-08T23:41:20Z,2016-12-09T00:17:08Z,2016-12-09T00:27:10Z,MERGED,True,15,367,5,https://github.com/barath,Removes cdlist and changes flowgen to use std::deque instead.,1,[],https://github.com/NetSys/bess/pull/164,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/164#issuecomment-265895799,Also removes minheap which was already unused.,"Current coverage is 61.94% (diff: 100%)

Merging #164 into c++ will increase coverage by 0.88%

@@                c++       #164   diff @@
==========================================
  Files            46         46          
  Lines          2137       2197    +60   
  Methods         279        296    +17   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1305       1361    +56   
- Misses          832        836     +4   
  Partials          0          0          

Powered by Codecov. Last update 573cb58...4c23eb7",True,{}
NetSys/bess,https://github.com/NetSys/bess,164,2016-12-08T23:41:20Z,2016-12-09T00:17:08Z,2016-12-09T00:27:10Z,MERGED,True,15,367,5,https://github.com/barath,Removes cdlist and changes flowgen to use std::deque instead.,1,[],https://github.com/NetSys/bess/pull/164,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/164#issuecomment-265895865,Also removes minheap which was already unused.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,165,2016-12-08T23:56:42Z,2016-12-09T01:40:27Z,2016-12-09T02:27:39Z,MERGED,True,99,93,54,https://github.com/changlan,Rename all Deinit to DeInit,4,['bug'],https://github.com/NetSys/bess/pull/165,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/165,"Some modules and port drivers uses DeInit, while others use Deinit. As a result, sometimes the DeInit function of the base class (Module and Port) gets called when it is not supposed to. This patch should fix #162.","Some modules and port drivers uses DeInit, while others use Deinit. As a result, sometimes the DeInit function of the base class (Module and Port) gets called when it is not supposed to. This patch should fix #162.",True,{}
NetSys/bess,https://github.com/NetSys/bess,165,2016-12-08T23:56:42Z,2016-12-09T01:40:27Z,2016-12-09T02:27:39Z,MERGED,True,99,93,54,https://github.com/changlan,Rename all Deinit to DeInit,4,['bug'],https://github.com/NetSys/bess/pull/165,https://github.com/barath,2,https://github.com/NetSys/bess/pull/165#issuecomment-265892606,"Some modules and port drivers uses DeInit, while others use Deinit. As a result, sometimes the DeInit function of the base class (Module and Port) gets called when it is not supposed to. This patch should fix #162.","Nice catch!
One idea (if you'd like to add it): you can add the override specifier to the DeInit() declarations in the child classes.  That way if for some reason the naming is wrong, the compiler will catch it.",True,{}
NetSys/bess,https://github.com/NetSys/bess,165,2016-12-08T23:56:42Z,2016-12-09T01:40:27Z,2016-12-09T02:27:39Z,MERGED,True,99,93,54,https://github.com/changlan,Rename all Deinit to DeInit,4,['bug'],https://github.com/NetSys/bess/pull/165,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/165#issuecomment-265902330,"Some modules and port drivers uses DeInit, while others use Deinit. As a result, sometimes the DeInit function of the base class (Module and Port) gets called when it is not supposed to. This patch should fix #162.","Current coverage is 61.94% (diff: 80.00%)

Merging #165 into c++ will increase coverage by 0.85%

@@                c++       #165   diff @@
==========================================
  Files            46         46          
  Lines          2136       2197    +61   
  Methods         279        296    +17   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1305       1361    +56   
- Misses          831        836     +5   
  Partials          0          0          

Powered by Codecov. Last update 291adcf...323ceca",True,{}
NetSys/bess,https://github.com/NetSys/bess,165,2016-12-08T23:56:42Z,2016-12-09T01:40:27Z,2016-12-09T02:27:39Z,MERGED,True,99,93,54,https://github.com/changlan,Rename all Deinit to DeInit,4,['bug'],https://github.com/NetSys/bess/pull/165,https://github.com/barath,4,https://github.com/NetSys/bess/pull/165#issuecomment-265909635,"Some modules and port drivers uses DeInit, while others use Deinit. As a result, sometimes the DeInit function of the base class (Module and Port) gets called when it is not supposed to. This patch should fix #162.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,166,2016-12-09T00:51:34Z,2016-12-09T01:18:09Z,2016-12-09T02:27:38Z,MERGED,True,6,0,1,https://github.com/changlan,Update software dependency list,1,['bug'],https://github.com/NetSys/bess/pull/166,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/166,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,166,2016-12-09T00:51:34Z,2016-12-09T01:18:09Z,2016-12-09T02:27:38Z,MERGED,True,6,0,1,https://github.com/changlan,Update software dependency list,1,['bug'],https://github.com/NetSys/bess/pull/166,https://github.com/barath,2,https://github.com/NetSys/bess/pull/166#issuecomment-265905952,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,167,2016-12-09T23:34:42Z,2016-12-10T03:44:14Z,2016-12-12T04:13:35Z,MERGED,True,140,160,10,https://github.com/melvinw,Finish refactoring Module,3,['enhancement'],https://github.com/NetSys/bess/pull/167,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/167,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,167,2016-12-09T23:34:42Z,2016-12-10T03:44:14Z,2016-12-12T04:13:35Z,MERGED,True,140,160,10,https://github.com/melvinw,Finish refactoring Module,3,['enhancement'],https://github.com/NetSys/bess/pull/167,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/167#issuecomment-266155678,,"Current coverage is 61.56% (diff: 65.38%)

Merging #167 into c++ will increase coverage by 0.66%

@@                c++       #167   diff @@
==========================================
  Files            46         46          
  Lines          2138       2118    -20   
  Methods         279        276     -3   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1302       1304     +2   
+ Misses          836        814    -22   
  Partials          0          0          

Powered by Codecov. Last update 3368074...4b9f152",True,{}
NetSys/bess,https://github.com/NetSys/bess,167,2016-12-09T23:34:42Z,2016-12-10T03:44:14Z,2016-12-12T04:13:35Z,MERGED,True,140,160,10,https://github.com/melvinw,Finish refactoring Module,3,['enhancement'],https://github.com/NetSys/bess/pull/167,https://github.com/barath,3,https://github.com/NetSys/bess/pull/167#issuecomment-266169761,,Would you be able to rebase?,True,{}
NetSys/bess,https://github.com/NetSys/bess,167,2016-12-09T23:34:42Z,2016-12-10T03:44:14Z,2016-12-12T04:13:35Z,MERGED,True,140,160,10,https://github.com/melvinw,Finish refactoring Module,3,['enhancement'],https://github.com/NetSys/bess/pull/167,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/167#issuecomment-266170430,,Done,True,{}
NetSys/bess,https://github.com/NetSys/bess,167,2016-12-09T23:34:42Z,2016-12-10T03:44:14Z,2016-12-12T04:13:35Z,MERGED,True,140,160,10,https://github.com/melvinw,Finish refactoring Module,3,['enhancement'],https://github.com/NetSys/bess/pull/167,https://github.com/barath,5,https://github.com/NetSys/bess/pull/167#issuecomment-266174534,,"You're right -- my mistake.  I forgot this was a .h file.
…
On Fri, Dec 9, 2016 at 5:51 PM, Sangjin Han ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In core/module.h <#167>:

 > @@ -233,6 +232,26 @@ class Module {
      return attrs_;
    }

 +  const std::vector<Task *> tasks() const {

 If I'm not mistaken embedded definitions of member functions are
 automatically inlined (thus inline keyword is redundant). inline keyword
 is required only when a member function is defined in a header file but not
 in an class definition.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#167>, or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7esdPM2yPXx8wGM7pij94f5Xg-OYNks5rGgW4gaJpZM4LJd0i>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,167,2016-12-09T23:34:42Z,2016-12-10T03:44:14Z,2016-12-12T04:13:35Z,MERGED,True,140,160,10,https://github.com/melvinw,Finish refactoring Module,3,['enhancement'],https://github.com/NetSys/bess/pull/167,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/167#issuecomment-266174707,,rolled that change back,True,{}
NetSys/bess,https://github.com/NetSys/bess,167,2016-12-09T23:34:42Z,2016-12-10T03:44:14Z,2016-12-12T04:13:35Z,MERGED,True,140,160,10,https://github.com/melvinw,Finish refactoring Module,3,['enhancement'],https://github.com/NetSys/bess/pull/167,https://github.com/barath,7,https://github.com/NetSys/bess/pull/167#issuecomment-266176650,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,168,2016-12-09T23:50:32Z,2016-12-10T01:44:37Z,2016-12-10T23:52:36Z,MERGED,True,655,565,74,https://github.com/changlan,Canonicalize C++ code as per style guide,2,[],https://github.com/NetSys/bess/pull/168,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/168,"Fix warnings from cpplint that are not false positives.
Run clang-format","Fix warnings from cpplint that are not false positives.
Run clang-format",True,{}
NetSys/bess,https://github.com/NetSys/bess,168,2016-12-09T23:50:32Z,2016-12-10T01:44:37Z,2016-12-10T23:52:36Z,MERGED,True,655,565,74,https://github.com/changlan,Canonicalize C++ code as per style guide,2,[],https://github.com/NetSys/bess/pull/168,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/168#issuecomment-266159678,"Fix warnings from cpplint that are not false positives.
Run clang-format","Current coverage is 60.89% (diff: 62.50%)

Merging #168 into c++ will decrease coverage by 0.19%

@@                c++       #168   diff @@
==========================================
  Files            46         46          
  Lines          2136       2138     +2   
  Methods         279        279          
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           1305       1302     -3   
- Misses          831        836     +5   
  Partials          0          0          

Powered by Codecov. Last update 392c893...8429f11",True,{}
NetSys/bess,https://github.com/NetSys/bess,168,2016-12-09T23:50:32Z,2016-12-10T01:44:37Z,2016-12-10T23:52:36Z,MERGED,True,655,565,74,https://github.com/changlan,Canonicalize C++ code as per style guide,2,[],https://github.com/NetSys/bess/pull/168,https://github.com/barath,3,https://github.com/NetSys/bess/pull/168#issuecomment-266169711,"Fix warnings from cpplint that are not false positives.
Run clang-format",,True,{}
NetSys/bess,https://github.com/NetSys/bess,169,2016-12-10T01:07:17Z,2016-12-10T01:25:55Z,2016-12-10T01:30:11Z,MERGED,True,0,16,1,https://github.com/melvinw,bessctl: remove total from monitor tc,1,['enhancement'],https://github.com/NetSys/bess/pull/169,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/169,It doesn't make sense and is already reported by the root node,It doesn't make sense and is already reported by the root node,True,{}
NetSys/bess,https://github.com/NetSys/bess,169,2016-12-10T01:07:17Z,2016-12-10T01:25:55Z,2016-12-10T01:30:11Z,MERGED,True,0,16,1,https://github.com/melvinw,bessctl: remove total from monitor tc,1,['enhancement'],https://github.com/NetSys/bess/pull/169,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/169#issuecomment-266167470,It doesn't make sense and is already reported by the root node,"Current coverage is 61.09% (diff: 100%)

Merging #169 into c++ will not change coverage

@@                c++       #169   diff @@
==========================================
  Files            46         46          
  Lines          2136       2136          
  Methods         279        279          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1305       1305          
  Misses          831        831          
  Partials          0          0          

Powered by Codecov. Last update 392c893...2f7fe17",True,{}
NetSys/bess,https://github.com/NetSys/bess,169,2016-12-10T01:07:17Z,2016-12-10T01:25:55Z,2016-12-10T01:30:11Z,MERGED,True,0,16,1,https://github.com/melvinw,bessctl: remove total from monitor tc,1,['enhancement'],https://github.com/NetSys/bess/pull/169,https://github.com/barath,3,https://github.com/NetSys/bess/pull/169#issuecomment-266167747,It doesn't make sense and is already reported by the root node,"|\---/|
| o_o |
 \_^_/",True,"{'LAUGH': ['https://github.com/melvinw'], 'HOORAY': ['https://github.com/sangjinhan']}"
NetSys/bess,https://github.com/NetSys/bess,170,2016-12-10T05:23:28Z,2016-12-12T17:45:59Z,2016-12-12T18:19:18Z,MERGED,True,5,4,1,https://github.com/barath,Modifies license copyright.,6,[],https://github.com/NetSys/bess/pull/170,https://github.com/barath,1,https://github.com/NetSys/bess/pull/170,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,170,2016-12-10T05:23:28Z,2016-12-12T17:45:59Z,2016-12-12T18:19:18Z,MERGED,True,5,4,1,https://github.com/barath,Modifies license copyright.,6,[],https://github.com/NetSys/bess/pull/170,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/170#issuecomment-266181740,,"Current coverage is 60.97% (diff: 100%)

Merging #170 into c++ will decrease coverage by 0.58%

@@                c++       #170   diff @@
==========================================
  Files            46         46          
  Lines          2118       2145    +27   
  Methods         276        284     +8   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1304       1308     +4   
- Misses          814        837    +23   
  Partials          0          0          

Powered by Codecov. Last update 4199381...e9c91b2",True,{}
NetSys/bess,https://github.com/NetSys/bess,170,2016-12-10T05:23:28Z,2016-12-12T17:45:59Z,2016-12-12T18:19:18Z,MERGED,True,5,4,1,https://github.com/barath,Modifies license copyright.,6,[],https://github.com/NetSys/bess/pull/170,https://github.com/barath,3,https://github.com/NetSys/bess/pull/170#issuecomment-266477777,,"Got feedback from Kevin, made an additional edit.",True,{}
NetSys/bess,https://github.com/NetSys/bess,170,2016-12-10T05:23:28Z,2016-12-12T17:45:59Z,2016-12-12T18:19:18Z,MERGED,True,5,4,1,https://github.com/barath,Modifies license copyright.,6,[],https://github.com/NetSys/bess/pull/170,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/170#issuecomment-266499572,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,171,2016-12-12T04:32:38Z,2016-12-12T05:41:02Z,2016-12-12T18:08:06Z,MERGED,True,41,37,8,https://github.com/melvinw,module: add indexed attr_offsets_ accessor,2,['enhancement'],https://github.com/NetSys/bess/pull/171,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/171,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,171,2016-12-12T04:32:38Z,2016-12-12T05:41:02Z,2016-12-12T18:08:06Z,MERGED,True,41,37,8,https://github.com/melvinw,module: add indexed attr_offsets_ accessor,2,['enhancement'],https://github.com/NetSys/bess/pull/171,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/171#issuecomment-266342908,,"Current coverage is 61.56% (diff: 40.00%)

Merging #171 into c++ will not change coverage

@@                c++       #171   diff @@
==========================================
  Files            46         46          
  Lines          2118       2118          
  Methods         276        276          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1304       1304          
  Misses          814        814          
  Partials          0          0          

Powered by Codecov. Last update 4199381...80ce2f6",True,{}
NetSys/bess,https://github.com/NetSys/bess,171,2016-12-12T04:32:38Z,2016-12-12T05:41:02Z,2016-12-12T18:08:06Z,MERGED,True,41,37,8,https://github.com/melvinw,module: add indexed attr_offsets_ accessor,2,['enhancement'],https://github.com/NetSys/bess/pull/171,https://github.com/barath,3,https://github.com/NetSys/bess/pull/171#issuecomment-266347653,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,172,2016-12-12T19:36:17Z,2016-12-12T19:39:06Z,2016-12-12T19:39:06Z,MERGED,True,6,11,2,https://github.com/melvinw,bessctl: fix tc bugs,1,['bug'],https://github.com/NetSys/bess/pull/172,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/172,This patch removes an unecessary error from AttachTask and fixes show tc,This patch removes an unecessary error from AttachTask and fixes show tc,True,{}
NetSys/bess,https://github.com/NetSys/bess,173,2016-12-12T22:07:12Z,2016-12-13T00:29:41Z,2016-12-13T00:30:21Z,MERGED,True,2,2,1,https://github.com/changlan,No warning when daemon starts,1,[],https://github.com/NetSys/bess/pull/173,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/173,bessctl daemon start shows “[Errno 111] Connection refused”,bessctl daemon start shows “[Errno 111] Connection refused”,True,{}
NetSys/bess,https://github.com/NetSys/bess,173,2016-12-12T22:07:12Z,2016-12-13T00:29:41Z,2016-12-13T00:30:21Z,MERGED,True,2,2,1,https://github.com/changlan,No warning when daemon starts,1,[],https://github.com/NetSys/bess/pull/173,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/173#issuecomment-266578214,bessctl daemon start shows “[Errno 111] Connection refused”,"Current coverage is 61.56% (diff: 100%)

Merging #173 into develop will not change coverage

@@            develop       #173   diff @@
==========================================
  Files            46         46          
  Lines          2118       2118          
  Methods         276        276          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1304       1304          
  Misses          814        814          
  Partials          0          0          

Powered by Codecov. Last update df98924...94a0b04",True,{}
NetSys/bess,https://github.com/NetSys/bess,173,2016-12-12T22:07:12Z,2016-12-13T00:29:41Z,2016-12-13T00:30:21Z,MERGED,True,2,2,1,https://github.com/changlan,No warning when daemon starts,1,[],https://github.com/NetSys/bess/pull/173,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/173#issuecomment-266598086,bessctl daemon start shows “[Errno 111] Connection refused”,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,174,2016-12-12T22:57:23Z,2016-12-13T01:02:32Z,2016-12-13T16:26:44Z,MERGED,True,9,4,1,https://github.com/melvinw,bessctl/scripts: fix queue,1,['bug'],https://github.com/NetSys/bess/pull/174,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/174,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,174,2016-12-12T22:57:23Z,2016-12-13T01:02:32Z,2016-12-13T16:26:44Z,MERGED,True,9,4,1,https://github.com/melvinw,bessctl/scripts: fix queue,1,['bug'],https://github.com/NetSys/bess/pull/174,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/174#issuecomment-266589554,,"Current coverage is 61.56% (diff: 100%)

Merging #174 into develop will not change coverage

@@            develop       #174   diff @@
==========================================
  Files            46         46          
  Lines          2118       2118          
  Methods         276        276          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1304       1304          
  Misses          814        814          
  Partials          0          0          

Powered by Codecov. Last update df98924...80d955a",True,{}
NetSys/bess,https://github.com/NetSys/bess,174,2016-12-12T22:57:23Z,2016-12-13T01:02:32Z,2016-12-13T16:26:44Z,MERGED,True,9,4,1,https://github.com/melvinw,bessctl/scripts: fix queue,1,['bug'],https://github.com/NetSys/bess/pull/174,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/174#issuecomment-266603742,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,174,2016-12-12T22:57:23Z,2016-12-13T01:02:32Z,2016-12-13T16:26:44Z,MERGED,True,9,4,1,https://github.com/melvinw,bessctl/scripts: fix queue,1,['bug'],https://github.com/NetSys/bess/pull/174,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/174#issuecomment-266610160,,"We need to discuss whether to expose leaf TCs to end users. The old script was short and simple, but now it has become somewhat verbose...",True,{}
NetSys/bess,https://github.com/NetSys/bess,174,2016-12-12T22:57:23Z,2016-12-13T01:02:32Z,2016-12-13T16:26:44Z,MERGED,True,9,4,1,https://github.com/melvinw,bessctl/scripts: fix queue,1,['bug'],https://github.com/NetSys/bess/pull/174,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/174#issuecomment-266614143,,@barath and I were talking about this earlier. The verbosity should go away once we combine LeafTC and Task,True,{}
NetSys/bess,https://github.com/NetSys/bess,175,2016-12-13T00:43:25Z,2016-12-13T01:22:42Z,2016-12-13T01:22:44Z,MERGED,True,4,0,1,https://github.com/justinemarie,fix divide by zero bug causing bpf.bess to crash,2,[],https://github.com/NetSys/bess/pull/175,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/175,Summary says it all -- quick fix to the bpf.bess crash bug.,Summary says it all -- quick fix to the bpf.bess crash bug.,True,{}
NetSys/bess,https://github.com/NetSys/bess,175,2016-12-13T00:43:25Z,2016-12-13T01:22:42Z,2016-12-13T01:22:44Z,MERGED,True,4,0,1,https://github.com/justinemarie,fix divide by zero bug causing bpf.bess to crash,2,[],https://github.com/NetSys/bess/pull/175,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/175#issuecomment-266604107,Summary says it all -- quick fix to the bpf.bess crash bug.,"Current coverage is 61.56% (diff: 100%)

No coverage report found for develop at 04f601a.


Powered by Codecov. Last update 04f601a...af40305",True,{}
NetSys/bess,https://github.com/NetSys/bess,175,2016-12-13T00:43:25Z,2016-12-13T01:22:42Z,2016-12-13T01:22:44Z,MERGED,True,4,0,1,https://github.com/justinemarie,fix divide by zero bug causing bpf.bess to crash,2,[],https://github.com/NetSys/bess/pull/175,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/175#issuecomment-266607168,Summary says it all -- quick fix to the bpf.bess crash bug.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,176,2016-12-13T00:45:06Z,2016-12-13T16:28:11Z,2016-12-16T00:25:04Z,MERGED,True,19,9,3,https://github.com/sangjinhan,Print request/response msgs only in debug mode,1,[],https://github.com/NetSys/bess/pull/176,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/176,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,176,2016-12-13T00:45:06Z,2016-12-13T16:28:11Z,2016-12-16T00:25:04Z,MERGED,True,19,9,3,https://github.com/sangjinhan,Print request/response msgs only in debug mode,1,[],https://github.com/NetSys/bess/pull/176,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/176#issuecomment-266605892,,"Current coverage is 61.56% (diff: 100%)

Merging #176 into develop will not change coverage

@@            develop       #176   diff @@
==========================================
  Files            46         46          
  Lines          2118       2118          
  Methods         276        276          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1304       1304          
  Misses          814        814          
  Partials          0          0          

Powered by Codecov. Last update 096f3cf...edbf938",True,{}
NetSys/bess,https://github.com/NetSys/bess,176,2016-12-13T00:45:06Z,2016-12-13T16:28:11Z,2016-12-16T00:25:04Z,MERGED,True,19,9,3,https://github.com/sangjinhan,Print request/response msgs only in debug mode,1,[],https://github.com/NetSys/bess/pull/176,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/176#issuecomment-266786588,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,177,2016-12-13T00:48:36Z,2016-12-13T03:00:09Z,2016-12-16T00:24:50Z,MERGED,True,16,15,4,https://github.com/barath,Rate limiter update,2,[],https://github.com/NetSys/bess/pull/177,https://github.com/barath,1,https://github.com/NetSys/bess/pull/177,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,177,2016-12-13T00:48:36Z,2016-12-13T03:00:09Z,2016-12-16T00:24:50Z,MERGED,True,16,15,4,https://github.com/barath,Rate limiter update,2,[],https://github.com/NetSys/bess/pull/177,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/177#issuecomment-266611234,,"Seems samples/tc/ratelimiter is now 99.8x% accurate.
17:44:31.599950          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 unlimited            2305.922     6466305     206.922  139051.425      32.000      11.000
W0 cycle_limit            99.825      245367       7.852    5276.387      32.000      12.000
W0 packet_limit          125.850      311846       9.979    6705.939      32.000      12.000
W0 schedule_limit         42.179       99824       3.194    2146.636      32.000      13.000
W0 bit_limit              19.791       46435       1.486     998.545      32.000      13.000
...
--------------------------------------------------------------------------------------------

In the C-version, the accuracy used to have one more 9
17:46:13.543071          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 schedule_limit         48.065       99979       3.199    2149.954      32.000      15.023
W0 cycle_limit            99.977      208992       6.688    4494.166      32.000      14.949
W0 packet_limit          147.590      312421       9.997    6718.314      32.000      14.763
W0 bit_limit              22.402       46499       1.488     999.916      32.000      15.055
W0 unlimited            2275.654     5404201     172.934  116211.940      32.000      13.159",True,{}
NetSys/bess,https://github.com/NetSys/bess,177,2016-12-13T00:48:36Z,2016-12-13T03:00:09Z,2016-12-16T00:24:50Z,MERGED,True,16,15,4,https://github.com/barath,Rate limiter update,2,[],https://github.com/NetSys/bess/pull/177,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/177#issuecomment-266622782,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,178,2016-12-13T00:54:55Z,2016-12-13T01:59:38Z,2016-12-13T16:26:40Z,MERGED,True,76,22,6,https://github.com/melvinw,"modules/measure: add median, 99% latency to output",1,['enhancement'],https://github.com/NetSys/bess/pull/178,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/178,This is just quick patch for the current milestone. Ideally this would incorporate a rewrite of utils/histogram.,This is just quick patch for the current milestone. Ideally this would incorporate a rewrite of utils/histogram.,True,{}
NetSys/bess,https://github.com/NetSys/bess,178,2016-12-13T00:54:55Z,2016-12-13T01:59:38Z,2016-12-13T16:26:40Z,MERGED,True,76,22,6,https://github.com/melvinw,"modules/measure: add median, 99% latency to output",1,['enhancement'],https://github.com/NetSys/bess/pull/178,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/178#issuecomment-266612778,This is just quick patch for the current milestone. Ideally this would incorporate a rewrite of utils/histogram.,"Current coverage is 61.56% (diff: 100%)

Merging #178 into develop will not change coverage

@@            develop       #178   diff @@
==========================================
  Files            46         46          
  Lines          2118       2118          
  Methods         276        276          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1304       1304          
  Misses          814        814          
  Partials          0          0          

Powered by Codecov. Last update 096f3cf...c50b197",True,{}
NetSys/bess,https://github.com/NetSys/bess,178,2016-12-13T00:54:55Z,2016-12-13T01:59:38Z,2016-12-13T16:26:40Z,MERGED,True,76,22,6,https://github.com/melvinw,"modules/measure: add median, 99% latency to output",1,['enhancement'],https://github.com/NetSys/bess/pull/178,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/178#issuecomment-266613125,This is just quick patch for the current milestone. Ideally this would incorporate a rewrite of utils/histogram.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,179,2016-12-13T00:58:28Z,2016-12-14T04:51:32Z,2016-12-14T07:15:56Z,MERGED,True,196,21,9,https://github.com/changlan,scripts: fix vxlan.bess,7,[],https://github.com/NetSys/bess/pull/179,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/179,"bessctl: Implicitly convert to name when use Port/Module as parameter
module/set_metadata: Accept both value_hex and value_int
bessctl: Refuse to run most commands when daemon is not connected","bessctl: Implicitly convert to name when use Port/Module as parameter
module/set_metadata: Accept both value_hex and value_int
bessctl: Refuse to run most commands when daemon is not connected",True,{}
NetSys/bess,https://github.com/NetSys/bess,179,2016-12-13T00:58:28Z,2016-12-14T04:51:32Z,2016-12-14T07:15:56Z,MERGED,True,196,21,9,https://github.com/changlan,scripts: fix vxlan.bess,7,[],https://github.com/NetSys/bess/pull/179,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/179#issuecomment-266617410,"bessctl: Implicitly convert to name when use Port/Module as parameter
module/set_metadata: Accept both value_hex and value_int
bessctl: Refuse to run most commands when daemon is not connected","Current coverage is 62.35% (diff: 100%)

Merging #179 into develop will increase coverage by 0.78%

@@            develop       #179   diff @@
==========================================
  Files            46         46          
  Lines          2118       2173    +55   
  Methods         276        286    +10   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1304       1355    +51   
- Misses          814        818     +4   
  Partials          0          0          

Powered by Codecov. Last update 096f3cf...a442e79",True,{}
NetSys/bess,https://github.com/NetSys/bess,179,2016-12-13T00:58:28Z,2016-12-14T04:51:32Z,2016-12-14T07:15:56Z,MERGED,True,196,21,9,https://github.com/changlan,scripts: fix vxlan.bess,7,[],https://github.com/NetSys/bess/pull/179,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/179#issuecomment-266942305,"bessctl: Implicitly convert to name when use Port/Module as parameter
module/set_metadata: Accept both value_hex and value_int
bessctl: Refuse to run most commands when daemon is not connected","When making a next PR, could you rename value_hex to value_bin? ;)
🐈 🐈 🐈 🐈 🐈 🐈 🐈 🐈",True,{}
NetSys/bess,https://github.com/NetSys/bess,180,2016-12-13T17:31:01Z,2016-12-13T17:41:00Z,2016-12-16T00:24:49Z,MERGED,True,1,1,1,https://github.com/barath,Changes task attachment is bessctl.,1,[],https://github.com/NetSys/bess/pull/180,https://github.com/barath,1,https://github.com/NetSys/bess/pull/180,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,180,2016-12-13T17:31:01Z,2016-12-13T17:41:00Z,2016-12-16T00:24:49Z,MERGED,True,1,1,1,https://github.com/barath,Changes task attachment is bessctl.,1,[],https://github.com/NetSys/bess/pull/180,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/180#issuecomment-266807772,,<cat />,True,{}
NetSys/bess,https://github.com/NetSys/bess,181,2016-12-13T22:43:03Z,2016-12-14T12:13:37Z,2016-12-14T20:47:40Z,MERGED,True,5,5,1,https://github.com/changlan,bessctl: No protobuf debug message when v=1 is not given,1,[],https://github.com/NetSys/bess/pull/181,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/181,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,181,2016-12-13T22:43:03Z,2016-12-14T12:13:37Z,2016-12-14T20:47:40Z,MERGED,True,5,5,1,https://github.com/changlan,bessctl: No protobuf debug message when v=1 is not given,1,[],https://github.com/NetSys/bess/pull/181,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/181#issuecomment-266893443,,"Current coverage is 60.88% (diff: 100%)

Merging #181 into develop will decrease coverage by 0.67%

@@            develop       #181   diff @@
==========================================
  Files            46         46          
  Lines          2120       2986   +866   
  Methods         276        463   +187   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1305       1818   +513   
- Misses          815       1168   +353   
  Partials          0          0          

Powered by Codecov. Last update 0ecdc70...522a64c",True,{}
NetSys/bess,https://github.com/NetSys/bess,181,2016-12-13T22:43:03Z,2016-12-14T12:13:37Z,2016-12-14T20:47:40Z,MERGED,True,5,5,1,https://github.com/changlan,bessctl: No protobuf debug message when v=1 is not given,1,[],https://github.com/NetSys/bess/pull/181,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/181#issuecomment-267019285,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,182,2016-12-14T21:45:31Z,2016-12-15T22:54:12Z,2016-12-16T07:01:48Z,MERGED,True,115,67,5,https://github.com/melvinw,bessctl: fix show tc,4,[],https://github.com/NetSys/bess/pull/182,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/182,This patch fixes show tc to correctly report which tcs belong to which workers. It also changes show tc to report tcs for all workers when no worker is specified.,This patch fixes show tc to correctly report which tcs belong to which workers. It also changes show tc to report tcs for all workers when no worker is specified.,True,{}
NetSys/bess,https://github.com/NetSys/bess,182,2016-12-14T21:45:31Z,2016-12-15T22:54:12Z,2016-12-16T07:01:48Z,MERGED,True,115,67,5,https://github.com/melvinw,bessctl: fix show tc,4,[],https://github.com/NetSys/bess/pull/182,https://github.com/barath,2,https://github.com/NetSys/bess/pull/182#issuecomment-267171367,This patch fixes show tc to correctly report which tcs belong to which workers. It also changes show tc to report tcs for all workers when no worker is specified.,Could you add a small unit test in traffic_class_test for Size()?  (And optionally Traverse()?),True,{}
NetSys/bess,https://github.com/NetSys/bess,182,2016-12-14T21:45:31Z,2016-12-15T22:54:12Z,2016-12-16T07:01:48Z,MERGED,True,115,67,5,https://github.com/melvinw,bessctl: fix show tc,4,[],https://github.com/NetSys/bess/pull/182,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/182#issuecomment-267171440,This patch fixes show tc to correctly report which tcs belong to which workers. It also changes show tc to report tcs for all workers when no worker is specified.,Sure thing,True,{}
NetSys/bess,https://github.com/NetSys/bess,182,2016-12-14T21:45:31Z,2016-12-15T22:54:12Z,2016-12-16T07:01:48Z,MERGED,True,115,67,5,https://github.com/melvinw,bessctl: fix show tc,4,[],https://github.com/NetSys/bess/pull/182,https://github.com/codecov-io,4,https://github.com/NetSys/bess/pull/182#issuecomment-267186423,This patch fixes show tc to correctly report which tcs belong to which workers. It also changes show tc to report tcs for all workers when no worker is specified.,"Current coverage is 62.67% (diff: 89.47%)

Merging #182 into develop will increase coverage by 1.11%

@@            develop       #182   diff @@
==========================================
  Files            46         46          
  Lines          2120       2127     +7   
  Methods         276        278     +2   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1305       1333    +28   
+ Misses          815        794    -21   
  Partials          0          0          

Powered by Codecov. Last update 7bdcfad...74a6b89",True,{}
NetSys/bess,https://github.com/NetSys/bess,182,2016-12-14T21:45:31Z,2016-12-15T22:54:12Z,2016-12-16T07:01:48Z,MERGED,True,115,67,5,https://github.com/melvinw,bessctl: fix show tc,4,[],https://github.com/NetSys/bess/pull/182,https://github.com/barath,5,https://github.com/NetSys/bess/pull/182#issuecomment-267468699,This patch fixes show tc to correctly report which tcs belong to which workers. It also changes show tc to report tcs for all workers when no worker is specified.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,183,2016-12-14T21:47:11Z,2016-12-15T22:57:04Z,2016-12-16T07:01:43Z,MERGED,True,3,2,1,https://github.com/melvinw,traffic_class: free leaf tc tasks when resetting,1,['bug'],https://github.com/NetSys/bess/pull/183,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/183,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,183,2016-12-14T21:47:11Z,2016-12-15T22:57:04Z,2016-12-16T07:01:43Z,MERGED,True,3,2,1,https://github.com/melvinw,traffic_class: free leaf tc tasks when resetting,1,['bug'],https://github.com/NetSys/bess/pull/183,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/183#issuecomment-267174789,,"Current coverage is 61.54% (diff: 66.66%)

Merging #183 into develop will decrease coverage by 0.01%

@@            develop       #183   diff @@
==========================================
  Files            46         46          
  Lines          2120       2122     +2   
  Methods         276        276          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1305       1306     +1   
- Misses          815        816     +1   
  Partials          0          0          

Powered by Codecov. Last update 7bdcfad...abf24e7",True,{}
NetSys/bess,https://github.com/NetSys/bess,183,2016-12-14T21:47:11Z,2016-12-15T22:57:04Z,2016-12-16T07:01:43Z,MERGED,True,3,2,1,https://github.com/melvinw,traffic_class: free leaf tc tasks when resetting,1,['bug'],https://github.com/NetSys/bess/pull/183,https://github.com/barath,3,https://github.com/NetSys/bess/pull/183#issuecomment-267458529,,Just a minor note -- I agree about the use of const auto in the loop (that the explicit type is better in general) but didn't comment on it because we are likely to change the type soon...,True,{}
NetSys/bess,https://github.com/NetSys/bess,183,2016-12-14T21:47:11Z,2016-12-15T22:57:04Z,2016-12-16T07:01:43Z,MERGED,True,3,2,1,https://github.com/melvinw,traffic_class: free leaf tc tasks when resetting,1,['bug'],https://github.com/NetSys/bess/pull/183,https://github.com/barath,4,https://github.com/NetSys/bess/pull/183#issuecomment-267469436,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,185,2016-12-15T04:12:14Z,2016-12-15T21:57:46Z,2017-01-05T21:34:50Z,CLOSED,False,147,39,13,https://github.com/justinemarie,Sanity check script,6,[],https://github.com/NetSys/bess/pull/185,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/185,The idea would be to run something like this in Travis so we don't have any more edits that completely bork modules and configurations end to end.,The idea would be to run something like this in Travis so we don't have any more edits that completely bork modules and configurations end to end.,True,{}
NetSys/bess,https://github.com/NetSys/bess,185,2016-12-15T04:12:14Z,2016-12-15T21:57:46Z,2017-01-05T21:34:50Z,CLOSED,False,147,39,13,https://github.com/justinemarie,Sanity check script,6,[],https://github.com/NetSys/bess/pull/185,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/185#issuecomment-267234369,The idea would be to run something like this in Travis so we don't have any more edits that completely bork modules and configurations end to end.,"Wait, where are these other commits from y'all coming from? I thought I hadn't pulled from anywhere other than develop...",True,{}
NetSys/bess,https://github.com/NetSys/bess,185,2016-12-15T04:12:14Z,2016-12-15T21:57:46Z,2017-01-05T21:34:50Z,CLOSED,False,147,39,13,https://github.com/justinemarie,Sanity check script,6,[],https://github.com/NetSys/bess/pull/185,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/185#issuecomment-267235603,The idea would be to run something like this in Travis so we don't have any more edits that completely bork modules and configurations end to end.,"If the script is for Travis only, would it be better to put it inside .travis directory?",True,{}
NetSys/bess,https://github.com/NetSys/bess,185,2016-12-15T04:12:14Z,2016-12-15T21:57:46Z,2017-01-05T21:34:50Z,CLOSED,False,147,39,13,https://github.com/justinemarie,Sanity check script,6,[],https://github.com/NetSys/bess/pull/185,https://github.com/codecov-io,4,https://github.com/NetSys/bess/pull/185#issuecomment-267236215,The idea would be to run something like this in Travis so we don't have any more edits that completely bork modules and configurations end to end.,"Current coverage is 61.55% (diff: 83.33%)

Merging #185 into develop will not change coverage

@@            develop       #185   diff @@
==========================================
  Files            46         46          
  Lines          2120       2120          
  Methods         276        276          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1305       1305          
  Misses          815        815          
  Partials          0          0          

Powered by Codecov. Last update 7bdcfad...cf42767",True,{}
NetSys/bess,https://github.com/NetSys/bess,185,2016-12-15T04:12:14Z,2016-12-15T21:57:46Z,2017-01-05T21:34:50Z,CLOSED,False,147,39,13,https://github.com/justinemarie,Sanity check script,6,[],https://github.com/NetSys/bess/pull/185,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/185#issuecomment-267456339,The idea would be to run something like this in Travis so we don't have any more edits that completely bork modules and configurations end to end.,Merged manually. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,185,2016-12-15T04:12:14Z,2016-12-15T21:57:46Z,2017-01-05T21:34:50Z,CLOSED,False,147,39,13,https://github.com/justinemarie,Sanity check script,6,[],https://github.com/NetSys/bess/pull/185,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/185#issuecomment-267458066,The idea would be to run something like this in Travis so we don't have any more edits that completely bork modules and configurations end to end.,No dawgs!,True,{}
NetSys/bess,https://github.com/NetSys/bess,185,2016-12-15T04:12:14Z,2016-12-15T21:57:46Z,2017-01-05T21:34:50Z,CLOSED,False,147,39,13,https://github.com/justinemarie,Sanity check script,6,[],https://github.com/NetSys/bess/pull/185,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/185#issuecomment-267464556,The idea would be to run something like this in Travis so we don't have any more edits that completely bork modules and configurations end to end.,"How do we go about integrating this into Travis?
…
On Thu, Dec 15, 2016 at 2:05 PM, Sangjin Han ***@***.***> wrote:
 No dawgs!
 [image: giphy]
 <https://cloud.githubusercontent.com/assets/1916976/21243811/67a56b12-c2cf-11e6-8e55-b32a705f5c71.gif>

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#185 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FupFLPjqlRaZ-DyZox8n1r__dRNFks5rIbmbgaJpZM4LNsy7>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,186,2016-12-15T21:48:10Z,2016-12-16T00:13:35Z,2016-12-16T07:02:22Z,MERGED,True,155,82,3,https://github.com/melvinw,misc bessctl/protobuf fixes,4,[],https://github.com/NetSys/bess/pull/186,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/186,"Addressing

Change PMDPortArg proto to only take oneof {port_id, pci, vdev}
“monitor tc” numbers pkts/sched and cycles/p always end with “.000”
Tab completion for certain command breaks bessctl when bessd isn’t running","Addressing

Change PMDPortArg proto to only take oneof {port_id, pci, vdev}
“monitor tc” numbers pkts/sched and cycles/p always end with “.000”
Tab completion for certain command breaks bessctl when bessd isn’t running",True,{}
NetSys/bess,https://github.com/NetSys/bess,186,2016-12-15T21:48:10Z,2016-12-16T00:13:35Z,2016-12-16T07:02:22Z,MERGED,True,155,82,3,https://github.com/melvinw,misc bessctl/protobuf fixes,4,[],https://github.com/NetSys/bess/pull/186,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/186#issuecomment-267459138,"Addressing

Change PMDPortArg proto to only take oneof {port_id, pci, vdev}
“monitor tc” numbers pkts/sched and cycles/p always end with “.000”
Tab completion for certain command breaks bessctl when bessd isn’t running",small request: don't squash these on merge. the change sets are somewhat disjoint,True,{}
NetSys/bess,https://github.com/NetSys/bess,186,2016-12-15T21:48:10Z,2016-12-16T00:13:35Z,2016-12-16T07:02:22Z,MERGED,True,155,82,3,https://github.com/melvinw,misc bessctl/protobuf fixes,4,[],https://github.com/NetSys/bess/pull/186,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/186#issuecomment-267460491,"Addressing

Change PMDPortArg proto to only take oneof {port_id, pci, vdev}
“monitor tc” numbers pkts/sched and cycles/p always end with “.000”
Tab completion for certain command breaks bessctl when bessd isn’t running","Current coverage is 62.65% (diff: 100%)

Merging #186 into develop will increase coverage by 1.10%

@@            develop       #186   diff @@
==========================================
  Files            46         46          
  Lines          2120       2129     +9   
  Methods         276        278     +2   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1305       1334    +29   
+ Misses          815        795    -20   
  Partials          0          0          

Powered by Codecov. Last update 7bdcfad...8be2814",True,{}
NetSys/bess,https://github.com/NetSys/bess,187,2016-12-16T00:04:26Z,2016-12-16T00:15:05Z,2016-12-16T00:15:05Z,MERGED,True,1,0,1,https://github.com/justinemarie,Add sanity check to travis.,1,[],https://github.com/NetSys/bess/pull/187,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/187,Let's see if this works?,Let's see if this works?,True,{}
NetSys/bess,https://github.com/NetSys/bess,188,2016-12-16T00:28:10Z,2016-12-16T00:28:21Z,2016-12-16T00:28:24Z,MERGED,True,0,1,1,https://github.com/barath,"Revert ""Add sanity check to travis.""",1,[],https://github.com/NetSys/bess/pull/188,https://github.com/barath,1,https://github.com/NetSys/bess/pull/188,Reverts #187,Reverts #187,True,{}
NetSys/bess,https://github.com/NetSys/bess,189,2016-12-16T01:14:54Z,2016-12-16T21:12:03Z,2016-12-16T21:12:03Z,CLOSED,False,15,2,3,https://github.com/justinemarie,Don't accept this,8,[],https://github.com/NetSys/bess/pull/189,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/189,Just want travis to give me more data...,Just want travis to give me more data...,True,{}
NetSys/bess,https://github.com/NetSys/bess,190,2016-12-16T19:32:02Z,2016-12-17T00:27:06Z,2016-12-18T20:48:01Z,MERGED,True,1,1,1,https://github.com/changlan,module: Fix a bug in IPLookup,1,['bug'],https://github.com/NetSys/bess/pull/190,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/190,Fixes an incorrect reference to IPLookup::CommandClear,Fixes an incorrect reference to IPLookup::CommandClear,True,{}
NetSys/bess,https://github.com/NetSys/bess,190,2016-12-16T19:32:02Z,2016-12-17T00:27:06Z,2016-12-18T20:48:01Z,MERGED,True,1,1,1,https://github.com/changlan,module: Fix a bug in IPLookup,1,['bug'],https://github.com/NetSys/bess/pull/190,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/190#issuecomment-267683875,Fixes an incorrect reference to IPLookup::CommandClear,"Current coverage is 62.65% (diff: 100%)

Merging #190 into develop will not change coverage

@@            develop       #190   diff @@
==========================================
  Files            46         46          
  Lines          2129       2129          
  Methods         278        278          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1334       1334          
  Misses          795        795          
  Partials          0          0          


Powered by Codecov. Last update 2304548...c44aa9b",True,{}
NetSys/bess,https://github.com/NetSys/bess,191,2016-12-16T19:33:33Z,2016-12-19T21:48:02Z,2016-12-20T19:46:41Z,MERGED,True,23,0,1,https://github.com/melvinw,add l2fwd benchmark,1,['enhancement'],https://github.com/NetSys/bess/pull/191,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/191,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,191,2016-12-16T19:33:33Z,2016-12-19T21:48:02Z,2016-12-20T19:46:41Z,MERGED,True,23,0,1,https://github.com/melvinw,add l2fwd benchmark,1,['enhancement'],https://github.com/NetSys/bess/pull/191,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/191#issuecomment-267685931,,"Current coverage is 62.65% (diff: 100%)

Merging #191 into develop will not change coverage

@@            develop       #191   diff @@
==========================================
  Files            46         46          
  Lines          2129       2129          
  Methods         278        278          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1334       1334          
  Misses          795        795          
  Partials          0          0          

Powered by Codecov. Last update 2304548...f3d1183",True,{}
NetSys/bess,https://github.com/NetSys/bess,191,2016-12-16T19:33:33Z,2016-12-19T21:48:02Z,2016-12-20T19:46:41Z,MERGED,True,23,0,1,https://github.com/melvinw,add l2fwd benchmark,1,['enhancement'],https://github.com/NetSys/bess/pull/191,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/191#issuecomment-268088426,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,192,2016-12-16T19:37:46Z,2016-12-19T21:48:28Z,2016-12-19T21:53:58Z,MERGED,True,11,11,3,https://github.com/changlan,module: Change 'value_hex' to 'value_bin',2,['enhancement'],https://github.com/NetSys/bess/pull/192,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/192,As per Sangjin's request,As per Sangjin's request,True,{}
NetSys/bess,https://github.com/NetSys/bess,192,2016-12-16T19:37:46Z,2016-12-19T21:48:28Z,2016-12-19T21:53:58Z,MERGED,True,11,11,3,https://github.com/changlan,module: Change 'value_hex' to 'value_bin',2,['enhancement'],https://github.com/NetSys/bess/pull/192,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/192#issuecomment-267696038,As per Sangjin's request,"Current coverage is 62.65% (diff: 100%)

Merging #192 into develop will not change coverage

@@            develop       #192   diff @@
==========================================
  Files            46         46          
  Lines          2129       2129          
  Methods         278        278          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1334       1334          
  Misses          795        795          
  Partials          0          0          

Powered by Codecov. Last update 2304548...21f6e27",True,{}
NetSys/bess,https://github.com/NetSys/bess,192,2016-12-16T19:37:46Z,2016-12-19T21:48:28Z,2016-12-19T21:53:58Z,MERGED,True,11,11,3,https://github.com/changlan,module: Change 'value_hex' to 'value_bin',2,['enhancement'],https://github.com/NetSys/bess/pull/192,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/192#issuecomment-268088580,As per Sangjin's request,,True,{}
NetSys/bess,https://github.com/NetSys/bess,194,2016-12-16T21:05:23Z,2016-12-19T23:25:30Z,2017-01-03T22:20:45Z,MERGED,True,52,181,2,https://github.com/changlan,bessctl: Throw exception when daemon is not connected,2,['enhancement'],https://github.com/NetSys/bess/pull/194,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/194,Previously command.py checks whether daemon is connected before running every command. I move this logic to bess.py and throw an exception when daemon is not connected. This approach aligns with other error handling in bessctl and reduces code verbosity.,Previously command.py checks whether daemon is connected before running every command. I move this logic to bess.py and throw an exception when daemon is not connected. This approach aligns with other error handling in bessctl and reduces code verbosity.,True,{}
NetSys/bess,https://github.com/NetSys/bess,194,2016-12-16T21:05:23Z,2016-12-19T23:25:30Z,2017-01-03T22:20:45Z,MERGED,True,52,181,2,https://github.com/changlan,bessctl: Throw exception when daemon is not connected,2,['enhancement'],https://github.com/NetSys/bess/pull/194,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/194#issuecomment-267700601,Previously command.py checks whether daemon is connected before running every command. I move this logic to bess.py and throw an exception when daemon is not connected. This approach aligns with other error handling in bessctl and reduces code verbosity.,"Current coverage is 62.65% (diff: 100%)

Merging #194 into develop will not change coverage

@@            develop       #194   diff @@
==========================================
  Files            46         46          
  Lines          2129       2129          
  Methods         278        278          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1334       1334          
  Misses          795        795          
  Partials          0          0          

Powered by Codecov. Last update 2304548...bd01376",True,{}
NetSys/bess,https://github.com/NetSys/bess,194,2016-12-16T21:05:23Z,2016-12-19T23:25:30Z,2017-01-03T22:20:45Z,MERGED,True,52,181,2,https://github.com/changlan,bessctl: Throw exception when daemon is not connected,2,['enhancement'],https://github.com/NetSys/bess/pull/194,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/194#issuecomment-268108414,Previously command.py checks whether daemon is connected before running every command. I move this logic to bess.py and throw an exception when daemon is not connected. This approach aligns with other error handling in bessctl and reduces code verbosity.,Excellent. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,195,2016-12-16T21:05:45Z,2016-12-20T01:07:42Z,2016-12-20T01:07:42Z,CLOSED,False,14,3,4,https://github.com/melvinw,warn when spawning workers on the master core,1,['enhancement'],https://github.com/NetSys/bess/pull/195,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/195,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,195,2016-12-16T21:05:45Z,2016-12-20T01:07:42Z,2016-12-20T01:07:42Z,CLOSED,False,14,3,4,https://github.com/melvinw,warn when spawning workers on the master core,1,['enhancement'],https://github.com/NetSys/bess/pull/195,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/195#issuecomment-267708161,,"Current coverage is 62.52% (diff: 28.57%)

Merging #195 into develop will decrease coverage by 0.12%

@@            develop       #195   diff @@
==========================================
  Files            46         46          
  Lines          2129       2135     +6   
  Methods         278        278          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1334       1335     +1   
- Misses          795        800     +5   
  Partials          0          0          

Powered by Codecov. Last update 2304548...349fa44",True,{}
NetSys/bess,https://github.com/NetSys/bess,195,2016-12-16T21:05:45Z,2016-12-20T01:07:42Z,2016-12-20T01:07:42Z,CLOSED,False,14,3,4,https://github.com/melvinw,warn when spawning workers on the master core,1,['enhancement'],https://github.com/NetSys/bess/pull/195,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/195#issuecomment-268124765,,"The issue is a little bit complicated with grpc. In the old C code, there was one ""control"" (master) thread and N worker threads, and the only thing we needed to make sure that the master thread does run on one of the cores worker are running.
With grpc, there can be many control threads [1] that are pooled and currently we don't have any control (how many threads, what thread to use for a command, etc.) over them.
[1] By the way, it is a bug to have more than one control thread. BESS code is not thread safe between control threads.
An ideal solution would be:

When started, the bessd process unpins itself from all ""isolated cpus"" (/proc/cmdline) if any, so that all non-control and non-worker threads be spawned on remaining cores, and
We limit the number of grpc control threads to 1, and
Whenever a worker thread is created/updated, we unpin the control thread from the worker core. (e.g., see reset_core_affinity in bessctl.cc)",True,{}
NetSys/bess,https://github.com/NetSys/bess,196,2016-12-18T02:37:43Z,2016-12-19T21:32:58Z,2016-12-19T21:32:58Z,CLOSED,False,23,9,5,https://github.com/justinemarie,Sanity check working!!,2,[],https://github.com/NetSys/bess/pull/196,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/196,"We finally have a set of sanity check, end-to-end scripts that work in Travis :-)","We finally have a set of sanity check, end-to-end scripts that work in Travis :-)",True,{}
NetSys/bess,https://github.com/NetSys/bess,196,2016-12-18T02:37:43Z,2016-12-19T21:32:58Z,2016-12-19T21:32:58Z,CLOSED,False,23,9,5,https://github.com/justinemarie,Sanity check working!!,2,[],https://github.com/NetSys/bess/pull/196,https://github.com/barath,2,https://github.com/NetSys/bess/pull/196#issuecomment-267801134,"We finally have a set of sanity check, end-to-end scripts that work in Travis :-)",Great.  I'm seeing failures with gcc 6 -- were those there before?,True,{}
NetSys/bess,https://github.com/NetSys/bess,196,2016-12-18T02:37:43Z,2016-12-19T21:32:58Z,2016-12-19T21:32:58Z,CLOSED,False,23,9,5,https://github.com/justinemarie,Sanity check working!!,2,[],https://github.com/NetSys/bess/pull/196,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/196#issuecomment-267844263,"We finally have a set of sanity check, end-to-end scripts that work in Travis :-)",fml. debugging again :(,True,{}
NetSys/bess,https://github.com/NetSys/bess,197,2016-12-18T20:43:16Z,2016-12-18T20:43:31Z,2016-12-18T20:43:31Z,MERGED,True,663,239,31,https://github.com/barath,Checkpoint of C++ development branch.,39,[],https://github.com/NetSys/bess/pull/197,https://github.com/barath,1,https://github.com/NetSys/bess/pull/197,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,198,2016-12-20T21:07:57Z,2016-12-21T02:10:05Z,2016-12-22T21:39:42Z,MERGED,True,0,36,1,https://github.com/sangjinhan,Fix merge conflicts,1,[],https://github.com/NetSys/bess/pull/198,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/198,Missed one file while resolving merge conflicts.,Missed one file while resolving merge conflicts.,True,{}
NetSys/bess,https://github.com/NetSys/bess,198,2016-12-20T21:07:57Z,2016-12-21T02:10:05Z,2016-12-22T21:39:42Z,MERGED,True,0,36,1,https://github.com/sangjinhan,Fix merge conflicts,1,[],https://github.com/NetSys/bess/pull/198,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/198#issuecomment-268367151,Missed one file while resolving merge conflicts.,"Current coverage is 62.65% (diff: 100%)

Merging #198 into master will not change coverage

@@             master       #198   diff @@
==========================================
  Files            46         46          
  Lines          2129       2129          
  Methods         278        278          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           1334       1334          
  Misses          795        795          
  Partials          0          0          

Powered by Codecov. Last update 405120d...c181c38",True,{}
NetSys/bess,https://github.com/NetSys/bess,198,2016-12-20T21:07:57Z,2016-12-21T02:10:05Z,2016-12-22T21:39:42Z,MERGED,True,0,36,1,https://github.com/sangjinhan,Fix merge conflicts,1,[],https://github.com/NetSys/bess/pull/198,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/198#issuecomment-268414994,Missed one file while resolving merge conflicts.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,199,2016-12-22T07:08:06Z,2016-12-22T21:03:45Z,2016-12-22T21:39:40Z,MERGED,True,89,70,3,https://github.com/barath,Fixes memory leak in traffic_class_test and improves traffic class deletion behavior.,2,[],https://github.com/NetSys/bess/pull/199,https://github.com/barath,1,https://github.com/NetSys/bess/pull/199,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,199,2016-12-22T07:08:06Z,2016-12-22T21:03:45Z,2016-12-22T21:39:40Z,MERGED,True,89,70,3,https://github.com/barath,Fixes memory leak in traffic_class_test and improves traffic class deletion behavior.,2,[],https://github.com/NetSys/bess/pull/199,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/199#issuecomment-268738493,,"Current coverage is 62.83% (diff: 100%)

Merging #199 into master will increase coverage by 0.17%

@@             master       #199   diff @@
==========================================
  Files            46         46          
  Lines          2129       2139    +10   
  Methods         278        278          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1334       1344    +10   
  Misses          795        795          
  Partials          0          0          

Powered by Codecov. Last update afaaba5...8e4e3e7",True,{}
NetSys/bess,https://github.com/NetSys/bess,199,2016-12-22T07:08:06Z,2016-12-22T21:03:45Z,2016-12-22T21:39:40Z,MERGED,True,89,70,3,https://github.com/barath,Fixes memory leak in traffic_class_test and improves traffic class deletion behavior.,2,[],https://github.com/NetSys/bess/pull/199,https://github.com/barath,3,https://github.com/NetSys/bess/pull/199#issuecomment-268854102,,@changlan This should fix the issue you opened.,True,{}
NetSys/bess,https://github.com/NetSys/bess,199,2016-12-22T07:08:06Z,2016-12-22T21:03:45Z,2016-12-22T21:39:40Z,MERGED,True,89,70,3,https://github.com/barath,Fixes memory leak in traffic_class_test and improves traffic class deletion behavior.,2,[],https://github.com/NetSys/bess/pull/199,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/199#issuecomment-268884359,,Looks good! Will merge once CI finishes,True,{}
NetSys/bess,https://github.com/NetSys/bess,199,2016-12-22T07:08:06Z,2016-12-22T21:03:45Z,2016-12-22T21:39:40Z,MERGED,True,89,70,3,https://github.com/barath,Fixes memory leak in traffic_class_test and improves traffic class deletion behavior.,2,[],https://github.com/NetSys/bess/pull/199,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/199#issuecomment-268890245,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,202,2016-12-23T00:13:02Z,2016-12-23T03:24:09Z,2017-01-03T22:20:42Z,MERGED,True,228,4,7,https://github.com/changlan,modules: Add ACL module,7,[],https://github.com/NetSys/bess/pull/202,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/202,"Almost identical to the one in NetBricks
established keyword is not yet implemented","Almost identical to the one in NetBricks
established keyword is not yet implemented",True,{}
NetSys/bess,https://github.com/NetSys/bess,202,2016-12-23T00:13:02Z,2016-12-23T03:24:09Z,2017-01-03T22:20:42Z,MERGED,True,228,4,7,https://github.com/changlan,modules: Add ACL module,7,[],https://github.com/NetSys/bess/pull/202,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/202#issuecomment-268920903,"Almost identical to the one in NetBricks
established keyword is not yet implemented","Current coverage is 64.28% (diff: 80.00%)

Merging #202 into master will increase coverage by 1.44%

@@             master       #202   diff @@
==========================================
  Files            46         48     +2   
  Lines          2139       2293   +154   
  Methods         278        320    +42   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1344       1474   +130   
- Misses          795        819    +24   
  Partials          0          0          

Powered by Codecov. Last update e214582...e81804e",True,{}
NetSys/bess,https://github.com/NetSys/bess,202,2016-12-23T00:13:02Z,2016-12-23T03:24:09Z,2017-01-03T22:20:42Z,MERGED,True,228,4,7,https://github.com/changlan,modules: Add ACL module,7,[],https://github.com/NetSys/bess/pull/202,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/202#issuecomment-268925045,"Almost identical to the one in NetBricks
established keyword is not yet implemented",Fixed. There weren't changes to ether.h in this PR except formatting.,True,{}
NetSys/bess,https://github.com/NetSys/bess,202,2016-12-23T00:13:02Z,2016-12-23T03:24:09Z,2017-01-03T22:20:42Z,MERGED,True,228,4,7,https://github.com/changlan,modules: Add ACL module,7,[],https://github.com/NetSys/bess/pull/202,https://github.com/barath,4,https://github.com/NetSys/bess/pull/202#issuecomment-268936039,"Almost identical to the one in NetBricks
established keyword is not yet implemented",Just made this...,True,{'THUMBS_UP': ['https://github.com/changlan']}
NetSys/bess,https://github.com/NetSys/bess,203,2016-12-23T04:34:12Z,2016-12-28T00:13:46Z,2016-12-28T20:21:31Z,MERGED,True,232,197,8,https://github.com/melvinw,templatize histogram,6,['enhancement'],https://github.com/NetSys/bess/pull/203,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/203,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,203,2016-12-23T04:34:12Z,2016-12-28T00:13:46Z,2016-12-28T20:21:31Z,MERGED,True,232,197,8,https://github.com/melvinw,templatize histogram,6,['enhancement'],https://github.com/NetSys/bess/pull/203,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/203#issuecomment-268940533,,"Current coverage is 63.73% (diff: 90.47%)

Merging #203 into master will increase coverage by 0.78%

@@             master       #203   diff @@
==========================================
  Files            48         49     +1   
  Lines          2154       2217    +63   
  Methods         279        284     +5   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           1356       1413    +57   
- Misses          798        804     +6   
  Partials          0          0          

Powered by Codecov. Last update 8d35c7f...7848ad1",True,{}
NetSys/bess,https://github.com/NetSys/bess,203,2016-12-23T04:34:12Z,2016-12-28T00:13:46Z,2016-12-28T20:21:31Z,MERGED,True,232,197,8,https://github.com/melvinw,templatize histogram,6,['enhancement'],https://github.com/NetSys/bess/pull/203,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/203#issuecomment-269397950,,"For some reason, the 99%-ile (the third number) is higher than the average (the first number). It seems that the tail latency number is too low to be true...?
localhost:10514 $ run samples/latency
Tue Dec 27 15:25:46 2016: 6.829 Mpps, 3824.277 Mbps, 34.581 us, 30.000 us, 30.200 us
Tue Dec 27 15:25:47 2016: 6.724 Mpps, 3765.504 Mbps, 35.556 us, 29.900 us, 30.600 us
Tue Dec 27 15:25:48 2016: 6.561 Mpps, 3674.177 Mbps, 36.487 us, 30.100 us, 31.000 us
Tue Dec 27 15:25:49 2016: 6.642 Mpps, 3719.627 Mbps, 35.953 us, 30.700 us, 31.000 us
Tue Dec 27 15:25:50 2016: 6.611 Mpps, 3702.147 Mbps, 36.160 us, 30.600 us, 31.000 us
Tue Dec 27 15:25:51 2016: 6.669 Mpps, 3734.838 Mbps, 35.782 us, 29.700 us, 30.700 us

Also, it would be nice to see what each number represents for, like this:
Tue Dec 27 15:25:51 2016: 6.669 Mpps, 3734.838 Mbps, avg: 35.782 us, 50th: 29.700 us, 99th: 30.700 us",True,{}
NetSys/bess,https://github.com/NetSys/bess,203,2016-12-23T04:34:12Z,2016-12-28T00:13:46Z,2016-12-28T20:21:31Z,MERGED,True,232,197,8,https://github.com/melvinw,templatize histogram,6,['enhancement'],https://github.com/NetSys/bess/pull/203,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/203#issuecomment-269398089,,"(this issue happens with the non-template version too, so it is not a regression bug)",True,{}
NetSys/bess,https://github.com/NetSys/bess,203,2016-12-23T04:34:12Z,2016-12-28T00:13:46Z,2016-12-28T20:21:31Z,MERGED,True,232,197,8,https://github.com/melvinw,templatize histogram,6,['enhancement'],https://github.com/NetSys/bess/pull/203,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/203#issuecomment-269399978,,"pushed a fix. modules/measure was broken by 816dd07
localhost:10514 $ run samples/latency
Tue Dec 27 15:51:18 2016: 4.957 Mpps, 2776.049 Mbps, avg: 48.363 us, med: 43.500 us, 99th:106.100 us
Tue Dec 27 15:51:19 2016: 5.228 Mpps, 2927.744 Mbps, avg: 47.897 us, med: 43.500 us, 99th:96.100 us
Tue Dec 27 15:51:20 2016: 5.201 Mpps, 2912.670 Mbps, avg: 48.056 us, med: 44.100 us, 99th:98.600 us
Tue Dec 27 15:51:21 2016: 4.923 Mpps, 2756.869 Mbps, avg: 50.676 us, med: 47.100 us, 99th:100.400 us
Tue Dec 27 15:51:22 2016: 3.208 Mpps, 1796.592 Mbps, avg: 75.945 us, med: 47.600 us, 99th:182.200 us
Tue Dec 27 15:51:23 2016: 3.341 Mpps, 1870.720 Mbps, avg: 73.965 us, med: 48.800 us, 99th:186.200 us
Tue Dec 27 15:51:24 2016: 4.562 Mpps, 2554.533 Mbps, avg: 54.741 us, med: 47.900 us, 99th:130.000 us",True,{}
NetSys/bess,https://github.com/NetSys/bess,203,2016-12-23T04:34:12Z,2016-12-28T00:13:46Z,2016-12-28T20:21:31Z,MERGED,True,232,197,8,https://github.com/melvinw,templatize histogram,6,['enhancement'],https://github.com/NetSys/bess/pull/203,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/203#issuecomment-269401584,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,204,2016-12-29T01:28:58Z,2016-12-29T01:45:39Z,2016-12-31T06:02:04Z,MERGED,True,28,53,4,https://github.com/sangjinhan,Minor updates in the build process,9,[],https://github.com/NetSys/bess/pull/204,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/204,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,204,2016-12-29T01:28:58Z,2016-12-29T01:45:39Z,2016-12-31T06:02:04Z,MERGED,True,28,53,4,https://github.com/sangjinhan,Minor updates in the build process,9,[],https://github.com/NetSys/bess/pull/204,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/204#issuecomment-269569466,,"Regarding the 1hr build time limit of Travis: I can't find this limit on https://docs.travis-ci.com/user/customizing-the-build/#Build-Timeouts, so I am not sure what exactly was going on when Travis fails..
Sometimes a job produces no log output for 10 minutes, in which case Travis will fail. Perhaps we can let build.py output something as the compilation of BESS daemon proceeds?",True,{}
NetSys/bess,https://github.com/NetSys/bess,204,2016-12-29T01:28:58Z,2016-12-29T01:45:39Z,2016-12-31T06:02:04Z,MERGED,True,28,53,4,https://github.com/sangjinhan,Minor updates in the build process,9,[],https://github.com/NetSys/bess/pull/204,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/204#issuecomment-269569650,,"_                        
                  \`*-.                    
                   )  _`-.                 
                  .  : `. .                
                  : _   '  \               
                  ; *` _.   `*-._          
                  `-.-'          `-.       
                    ;       `       `.     
                    :.       .        \    
                    . \  .   :   .-'   .   
                    '  `+.;  ;  '      :   
                    :  '  |    ;       ;-. 
                    ; '   : :`-:     _.`* ;
           [bug] .*' /  .*' ; .*`- +'  `*' 
                 `*-*   `*-*  `*-*'",True,{}
NetSys/bess,https://github.com/NetSys/bess,205,2016-12-29T04:53:28Z,2016-12-29T05:03:52Z,2016-12-29T05:06:40Z,MERGED,True,2,20,3,https://github.com/apanda,Remove memcpy_sloppy,1,[],https://github.com/NetSys/bess/pull/205,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/205,"As seen in 623771a memcpy_sloppy can cause some issues, and it is only used in two modules with uncertain benefits when
compared to rte_memcpy or other memcpy. This commit eliminates the function and all callers.","As seen in 623771a memcpy_sloppy can cause some issues, and it is only used in two modules with uncertain benefits when
compared to rte_memcpy or other memcpy. This commit eliminates the function and all callers.",True,{}
NetSys/bess,https://github.com/NetSys/bess,205,2016-12-29T04:53:28Z,2016-12-29T05:03:52Z,2016-12-29T05:06:40Z,MERGED,True,2,20,3,https://github.com/apanda,Remove memcpy_sloppy,1,[],https://github.com/NetSys/bess/pull/205,https://github.com/barath,2,https://github.com/NetSys/bess/pull/205#issuecomment-269582516,"As seen in 623771a memcpy_sloppy can cause some issues, and it is only used in two modules with uncertain benefits when
compared to rte_memcpy or other memcpy. This commit eliminates the function and all callers.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,206,2016-12-30T06:33:56Z,2016-12-30T06:36:27Z,2017-01-05T21:34:40Z,CLOSED,False,5,1,2,https://github.com/justinemarie,"Okay, I think this is the fix... (fingers crossed)",1,[],https://github.com/NetSys/bess/pull/206,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/206,"So, turns out g++6 + O3/Ofast makes weird and untraceable things happen that I can't figure out. Things crash in BESS when they're enabled (particularly queue.bess) so I changed the Makefile to use -O2 if CXX is set to g++-6. Now that this works, Travis can run sanity_check.sh and all tests pass.","So, turns out g++6 + O3/Ofast makes weird and untraceable things happen that I can't figure out. Things crash in BESS when they're enabled (particularly queue.bess) so I changed the Makefile to use -O2 if CXX is set to g++-6. Now that this works, Travis can run sanity_check.sh and all tests pass.",True,{}
NetSys/bess,https://github.com/NetSys/bess,207,2016-12-30T06:37:12Z,2016-12-30T06:51:09Z,2017-01-05T21:34:40Z,CLOSED,False,5,1,2,https://github.com/justinemarie,Disable -Ofast for g++-6 and enable sanity_check for travis.,1,[],https://github.com/NetSys/bess/pull/207,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/207,"So, turns out g++6 + O3/Ofast makes weird and untraceable things happen that I can't figure out. Things crash in BESS when they're enabled (particularly queue.bess) so I changed the Makefile to use -O2 if CXX is set to g++-6. Now that this works, Travis can run sanity_check.sh and all tests pass.","So, turns out g++6 + O3/Ofast makes weird and untraceable things happen that I can't figure out. Things crash in BESS when they're enabled (particularly queue.bess) so I changed the Makefile to use -O2 if CXX is set to g++-6. Now that this works, Travis can run sanity_check.sh and all tests pass.",True,{}
NetSys/bess,https://github.com/NetSys/bess,207,2016-12-30T06:37:12Z,2016-12-30T06:51:09Z,2017-01-05T21:34:40Z,CLOSED,False,5,1,2,https://github.com/justinemarie,Disable -Ofast for g++-6 and enable sanity_check for travis.,1,[],https://github.com/NetSys/bess/pull/207,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/207#issuecomment-269738430,"So, turns out g++6 + O3/Ofast makes weird and untraceable things happen that I can't figure out. Things crash in BESS when they're enabled (particularly queue.bess) so I changed the Makefile to use -O2 if CXX is set to g++-6. Now that this works, Travis can run sanity_check.sh and all tests pass.","We should fix issues when they are discovered, not hide them. Heisenbugs that appear with different compiler optimization levels are a great indicator that there are some obvious problems in our code. Working around with lower optimization levels would be acceptable only when we confirm that there are -O3 bugs in g++ 6, but it is very unlikely.
Please submit an issue with the crash log messages when the test fails.",True,{}
NetSys/bess,https://github.com/NetSys/bess,209,2016-12-30T08:38:11Z,2016-12-30T09:16:13Z,2016-12-31T06:02:02Z,MERGED,True,25,6,4,https://github.com/sangjinhan,Fix memory alignment in Queue module,5,[],https://github.com/NetSys/bess/pull/209,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/209,This PR addresses #208.,This PR addresses #208.,True,{}
NetSys/bess,https://github.com/NetSys/bess,209,2016-12-30T08:38:11Z,2016-12-30T09:16:13Z,2016-12-31T06:02:02Z,MERGED,True,25,6,4,https://github.com/sangjinhan,Fix memory alignment in Queue module,5,[],https://github.com/NetSys/bess/pull/209,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/209#issuecomment-269746957,This PR addresses #208.,Can you add sanity_check.sh to the .travis.yml file so Travis will show that this actually fixes the bug?,True,{}
NetSys/bess,https://github.com/NetSys/bess,209,2016-12-30T08:38:11Z,2016-12-30T09:16:13Z,2016-12-31T06:02:02Z,MERGED,True,25,6,4,https://github.com/sangjinhan,Fix memory alignment in Queue module,5,[],https://github.com/NetSys/bess/pull/209,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/209#issuecomment-269746991,This PR addresses #208.,(You will also need to add 'pip install grpcio scapy' to the travis file),True,{}
NetSys/bess,https://github.com/NetSys/bess,209,2016-12-30T08:38:11Z,2016-12-30T09:16:13Z,2016-12-31T06:02:02Z,MERGED,True,25,6,4,https://github.com/sangjinhan,Fix memory alignment in Queue module,5,[],https://github.com/NetSys/bess/pull/209,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/209#issuecomment-269747056,This PR addresses #208.,"Also, woohoo! Thanks @sangjinhan and @apanda!",True,{}
NetSys/bess,https://github.com/NetSys/bess,209,2016-12-30T08:38:11Z,2016-12-30T09:16:13Z,2016-12-31T06:02:02Z,MERGED,True,25,6,4,https://github.com/sangjinhan,Fix memory alignment in Queue module,5,[],https://github.com/NetSys/bess/pull/209,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/209#issuecomment-269748566,This PR addresses #208.,"@justinemarie I think you can download the PR branch to your local repository, like git fetch origin fix_alignment (not sure about the exact command)",True,{}
NetSys/bess,https://github.com/NetSys/bess,209,2016-12-30T08:38:11Z,2016-12-30T09:16:13Z,2016-12-31T06:02:02Z,MERGED,True,25,6,4,https://github.com/sangjinhan,Fix memory alignment in Queue module,5,[],https://github.com/NetSys/bess/pull/209,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/209#issuecomment-269748719,This PR addresses #208.,I did (and it passed! yay!). I can make another PR to make sure that script gets called in Travis if you think that's better?,True,{}
NetSys/bess,https://github.com/NetSys/bess,209,2016-12-30T08:38:11Z,2016-12-30T09:16:13Z,2016-12-31T06:02:02Z,MERGED,True,25,6,4,https://github.com/sangjinhan,Fix memory alignment in Queue module,5,[],https://github.com/NetSys/bess/pull/209,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/209#issuecomment-269749342,This PR addresses #208.,Obligatory cats...,True,{}
NetSys/bess,https://github.com/NetSys/bess,210,2016-12-30T09:11:57Z,2016-12-31T05:55:56Z,2016-12-31T05:55:56Z,CLOSED,False,27,6,5,https://github.com/justinemarie,Add sanity check to Travis.,6,[],https://github.com/NetSys/bess/pull/210,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/210,It should pass now :-),It should pass now :-),True,{}
NetSys/bess,https://github.com/NetSys/bess,210,2016-12-30T09:11:57Z,2016-12-31T05:55:56Z,2016-12-31T05:55:56Z,CLOSED,False,27,6,5,https://github.com/justinemarie,Add sanity check to Travis.,6,[],https://github.com/NetSys/bess/pull/210,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/210#issuecomment-269815254,It should pass now :-),"The PR includes non-related commits. Please rebase.
Perhaps sanity_check.out needs to be added to .gitignore..?",True,{}
NetSys/bess,https://github.com/NetSys/bess,211,2016-12-30T21:15:33Z,2016-12-30T21:16:45Z,2016-12-30T21:18:22Z,MERGED,True,1,0,1,https://github.com/changlan,doc: Add grpcio to the list of dependencies,1,[],https://github.com/NetSys/bess/pull/211,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/211,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,211,2016-12-30T21:15:33Z,2016-12-30T21:16:45Z,2016-12-30T21:18:22Z,MERGED,True,1,0,1,https://github.com/changlan,doc: Add grpcio to the list of dependencies,1,[],https://github.com/NetSys/bess/pull/211,https://github.com/barath,2,https://github.com/NetSys/bess/pull/211#issuecomment-269823048,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,212,2016-12-31T05:57:21Z,2017-01-02T05:18:48Z,2017-01-05T21:34:40Z,MERGED,True,3,0,2,https://github.com/justinemarie,Add sanity check to travis,2,[],https://github.com/NetSys/bess/pull/212,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/212,What it says above.,What it says above.,True,{}
NetSys/bess,https://github.com/NetSys/bess,212,2016-12-31T05:57:21Z,2017-01-02T05:18:48Z,2017-01-05T21:34:40Z,MERGED,True,3,0,2,https://github.com/justinemarie,Add sanity check to travis,2,[],https://github.com/NetSys/bess/pull/212,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/212#issuecomment-269935229,What it says above.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,213,2016-12-31T06:19:45Z,2017-01-02T11:25:11Z,2017-01-02T11:27:53Z,MERGED,True,5,5,3,https://github.com/sangjinhan,Minor updates to container build,3,[],https://github.com/NetSys/bess/pull/213,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/213,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,213,2016-12-31T06:19:45Z,2017-01-02T11:25:11Z,2017-01-02T11:27:53Z,MERGED,True,5,5,3,https://github.com/sangjinhan,Minor updates to container build,3,[],https://github.com/NetSys/bess/pull/213,https://github.com/barath,2,https://github.com/NetSys/bess/pull/213#issuecomment-269960815,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,214,2016-12-31T06:44:39Z,2016-12-31T23:34:26Z,2016-12-31T23:37:34Z,MERGED,True,21,0,1,https://github.com/sangjinhan,Add code contributors,1,[],https://github.com/NetSys/bess/pull/214,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/214,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,214,2016-12-31T06:44:39Z,2016-12-31T23:34:26Z,2016-12-31T23:37:34Z,MERGED,True,21,0,1,https://github.com/sangjinhan,Add code contributors,1,[],https://github.com/NetSys/bess/pull/214,https://github.com/barath,2,https://github.com/NetSys/bess/pull/214#issuecomment-269886118,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,215,2017-01-03T22:20:07Z,2017-01-03T22:58:21Z,2017-01-05T22:48:41Z,MERGED,True,1,136,1,https://github.com/changlan,bessctl: Recover PR #194,1,[],https://github.com/NetSys/bess/pull/215,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/215,Part of #194 got missing in #197. Reapply the changes.,Part of #194 got missing in #197. Reapply the changes.,True,{}
NetSys/bess,https://github.com/NetSys/bess,215,2017-01-03T22:20:07Z,2017-01-03T22:58:21Z,2017-01-05T22:48:41Z,MERGED,True,1,136,1,https://github.com/changlan,bessctl: Recover PR #194,1,[],https://github.com/NetSys/bess/pull/215,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/215#issuecomment-270250037,Part of #194 got missing in #197. Reapply the changes.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,216,2017-01-03T23:13:39Z,2017-01-04T00:29:48Z,2017-01-11T21:35:05Z,MERGED,True,65,45,5,https://github.com/sangjinhan,Minor updates to gRPC client and server,4,[],https://github.com/NetSys/bess/pull/216,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/216,"It addresses the following issues in the current code:

145f434: if ""daemon start"" fails for whatever reason, bessctl gets stuck in an infinite loop
050e2ed: SetupControl returns before the listening socket is ready. As a result, bessctl's ""daemon start"" and bessd may race.
95c0343: when bessctl makes an initial connection to bessd, a low-level socket is used to probe its availability, not with grpc
1e09387: even if grpcio python module is not available, no explicit error message is shown","It addresses the following issues in the current code:

145f434: if ""daemon start"" fails for whatever reason, bessctl gets stuck in an infinite loop
050e2ed: SetupControl returns before the listening socket is ready. As a result, bessctl's ""daemon start"" and bessd may race.
95c0343: when bessctl makes an initial connection to bessd, a low-level socket is used to probe its availability, not with grpc
1e09387: even if grpcio python module is not available, no explicit error message is shown",True,{}
NetSys/bess,https://github.com/NetSys/bess,216,2017-01-03T23:13:39Z,2017-01-04T00:29:48Z,2017-01-11T21:35:05Z,MERGED,True,65,45,5,https://github.com/sangjinhan,Minor updates to gRPC client and server,4,[],https://github.com/NetSys/bess/pull/216,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/216#issuecomment-270265058,"It addresses the following issues in the current code:

145f434: if ""daemon start"" fails for whatever reason, bessctl gets stuck in an infinite loop
050e2ed: SetupControl returns before the listening socket is ready. As a result, bessctl's ""daemon start"" and bessd may race.
95c0343: when bessctl makes an initial connection to bessd, a low-level socket is used to probe its availability, not with grpc
1e09387: even if grpcio python module is not available, no explicit error message is shown",Excellent!,True,{}
NetSys/bess,https://github.com/NetSys/bess,217,2017-01-05T22:50:18Z,2017-01-06T08:10:09Z,2017-01-11T21:28:37Z,MERGED,True,35,5,4,https://github.com/changlan,acl: Add a sample script and bug fixes,4,[],https://github.com/NetSys/bess/pull/217,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/217,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,217,2017-01-05T22:50:18Z,2017-01-06T08:10:09Z,2017-01-11T21:28:37Z,MERGED,True,35,5,4,https://github.com/changlan,acl: Add a sample script and bug fixes,4,[],https://github.com/NetSys/bess/pull/217,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/217#issuecomment-270781146,,Thanks for adding the sample script! This is super helpful.,True,{}
NetSys/bess,https://github.com/NetSys/bess,217,2017-01-05T22:50:18Z,2017-01-06T08:10:09Z,2017-01-11T21:28:37Z,MERGED,True,35,5,4,https://github.com/changlan,acl: Add a sample script and bug fixes,4,[],https://github.com/NetSys/bess/pull/217,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/217#issuecomment-270853091,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,218,2017-01-06T03:38:10Z,2017-01-06T08:12:14Z,2017-01-06T08:13:02Z,MERGED,True,1,1,1,https://github.com/apanda,Add -fPIC to DPDK cflags,1,[],https://github.com/NetSys/bess/pull/218,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/218,"The Google testing infrastructure (and NetBricks when that becomes useful) link to some of the static libraries in
.so. Without passing in -fPIC to DPDK this causes build problems on some machines (I had it on a machine with gcc
version 5.4.0 20160609 (Debian 5.4.0-4) LD 2.26 and Linux 4.6.0), which is fixed by passing in -fPIC. Additionally this
should have no impact on the binaries.","The Google testing infrastructure (and NetBricks when that becomes useful) link to some of the static libraries in
.so. Without passing in -fPIC to DPDK this causes build problems on some machines (I had it on a machine with gcc
version 5.4.0 20160609 (Debian 5.4.0-4) LD 2.26 and Linux 4.6.0), which is fixed by passing in -fPIC. Additionally this
should have no impact on the binaries.",True,{}
NetSys/bess,https://github.com/NetSys/bess,218,2017-01-06T03:38:10Z,2017-01-06T08:12:14Z,2017-01-06T08:13:02Z,MERGED,True,1,1,1,https://github.com/apanda,Add -fPIC to DPDK cflags,1,[],https://github.com/NetSys/bess/pull/218,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/218#issuecomment-270853382,"The Google testing infrastructure (and NetBricks when that becomes useful) link to some of the static libraries in
.so. Without passing in -fPIC to DPDK this causes build problems on some machines (I had it on a machine with gcc
version 5.4.0 20160609 (Debian 5.4.0-4) LD 2.26 and Linux 4.6.0), which is fixed by passing in -fPIC. Additionally this
should have no impact on the binaries.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,219,2017-01-06T07:47:56Z,2017-01-06T20:57:41Z,2017-01-07T02:45:01Z,CLOSED,False,0,0,0,https://github.com/barath,Adds a utility class for reconstructing a TCP flow.,0,[],https://github.com/NetSys/bess/pull/219,https://github.com/barath,1,https://github.com/NetSys/bess/pull/219,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,219,2017-01-06T07:47:56Z,2017-01-06T20:57:41Z,2017-01-07T02:45:01Z,CLOSED,False,0,0,0,https://github.com/barath,Adds a utility class for reconstructing a TCP flow.,0,[],https://github.com/NetSys/bess/pull/219,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/219#issuecomment-271052862,,This PR disappeared?,True,{}
NetSys/bess,https://github.com/NetSys/bess,219,2017-01-06T07:47:56Z,2017-01-06T20:57:41Z,2017-01-07T02:45:01Z,CLOSED,False,0,0,0,https://github.com/barath,Adds a utility class for reconstructing a TCP flow.,0,[],https://github.com/NetSys/bess/pull/219,https://github.com/barath,3,https://github.com/NetSys/bess/pull/219#issuecomment-271057481,,"Not sure what happened.  I will open a new one shortly with a workaround
for the gtest / gcc bug so that travis stops complaining.
…
On Fri, Jan 6, 2017 at 5:36 PM, Chang Lan ***@***.***> wrote:
 This PR disappeared?

 —
 You are receiving this because you modified the open/close state.
 Reply to this email directly, view it on GitHub
 <#219 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7epnPxoHnuvR1A8F1JL2qTGbjvaGqks5rPuwEgaJpZM4Lce9L>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,220,2017-01-07T01:34:40Z,2017-01-07T22:09:09Z,2017-01-07T22:11:57Z,MERGED,True,534,16,12,https://github.com/changlan,Add NAT and IPSwap,14,[],https://github.com/NetSys/bess/pull/220,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/220,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,220,2017-01-07T01:34:40Z,2017-01-07T22:09:09Z,2017-01-07T22:11:57Z,MERGED,True,534,16,12,https://github.com/changlan,Add NAT and IPSwap,14,[],https://github.com/NetSys/bess/pull/220,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/220#issuecomment-271097840,,"Convince me why it is needed?
…
On Jan 7, 2017 04:52, ""Barath Raghavan"" ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In core/modules/nat.cc <#220>:

 > +    if (incoming_gate == 1) {
 +      // Flow from external network, drop.
 +      out_gates[i] = DROP_GATE;
 +      continue;
 +    }
 +
 +    const auto rule_it = std::find_if(
 +        rules_.begin(), rules_.end(),
 +        [&ip](const NATRule &rule) { return rule.first.Match(ip->src_addr); });
 +    if (rule_it == rules_.end()) {
 +      // No rules found for this source IP address, drop.
 +      out_gates[i] = DROP_GATE;
 +      continue;
 +    }
 +
 +    uint16_t new_port = available_ports_.back();

 It is randomized at the start, I agree, but if I'm reading it right, do
 the ports get randomized upon re-use?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#220>, or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAk0ndB1o_rqZevCsKp08x9Z73cHRzfyks5rP4qGgaJpZM4LdSSL>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,220,2017-01-07T01:34:40Z,2017-01-07T22:09:09Z,2017-01-07T22:11:57Z,MERGED,True,534,16,12,https://github.com/changlan,Add NAT and IPSwap,14,[],https://github.com/NetSys/bess/pull/220,https://github.com/barath,3,https://github.com/NetSys/bess/pull/220#issuecomment-271098801,,"See REQ-15 of the RFC:

https://tools.ietf.org/html/rfc6888

But if you think it's not needed, then that's fine, but we will need to
change the description in the description doc.
…
On Sat, Jan 7, 2017 at 9:38 AM, Chang Lan ***@***.***> wrote:
 Convince me why it is needed?

 On Jan 7, 2017 04:52, ""Barath Raghavan"" ***@***.***> wrote:

 > ***@***.**** commented on this pull request.
 > ------------------------------
 >
 > In core/modules/nat.cc <#220>:
 >
 > > + if (incoming_gate == 1) {
 > + // Flow from external network, drop.
 > + out_gates[i] = DROP_GATE;
 > + continue;
 > + }
 > +
 > + const auto rule_it = std::find_if(
 > + rules_.begin(), rules_.end(),
 > + [&ip](const NATRule &rule) { return rule.first.Match(ip->src_addr);
 });
 > + if (rule_it == rules_.end()) {
 > + // No rules found for this source IP address, drop.
 > + out_gates[i] = DROP_GATE;
 > + continue;
 > + }
 > +
 > + uint16_t new_port = available_ports_.back();
 >
 > It is randomized at the start, I agree, but if I'm reading it right, do
 > the ports get randomized upon re-use?
 >
 > —
 > You are receiving this because you authored the thread.
 > Reply to this email directly, view it on GitHub
 > <#220>, or mute the thread
 > <https://github.com/notifications/unsubscribe-auth/AAk0ndB1o_
 rqZevCsKp08x9Z73cHRzfyks5rP4qGgaJpZM4LdSSL>
 > .
 >

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#220 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7ekieDY7CiYR-Jm6gacK7SznXyc1cks5rP82FgaJpZM4LdSSL>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,220,2017-01-07T01:34:40Z,2017-01-07T22:09:09Z,2017-01-07T22:11:57Z,MERGED,True,534,16,12,https://github.com/changlan,Add NAT and IPSwap,14,[],https://github.com/NetSys/bess/pull/220,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/220#issuecomment-271104211,,"I agree that ""A CGN's port allocation scheme SHOULD make it hard for attackers to guess port numbers"", but my real point is, if the initial allocation is random, and the sequence of reused ports is (almost) random, the resulting allocation should be (almost) random. So it is not clear to me that why we need to do extra randomization upon reuse.",True,{}
NetSys/bess,https://github.com/NetSys/bess,220,2017-01-07T01:34:40Z,2017-01-07T22:09:09Z,2017-01-07T22:11:57Z,MERGED,True,534,16,12,https://github.com/changlan,Add NAT and IPSwap,14,[],https://github.com/NetSys/bess/pull/220,https://github.com/barath,5,https://github.com/NetSys/bess/pull/220#issuecomment-271104336,,"Ok, that's fine.  Let me know about the other changes and I can approve after.",True,{}
NetSys/bess,https://github.com/NetSys/bess,220,2017-01-07T01:34:40Z,2017-01-07T22:09:09Z,2017-01-07T22:11:57Z,MERGED,True,534,16,12,https://github.com/changlan,Add NAT and IPSwap,14,[],https://github.com/NetSys/bess/pull/220,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/220#issuecomment-271109965,,Done.,True,{}
NetSys/bess,https://github.com/NetSys/bess,220,2017-01-07T01:34:40Z,2017-01-07T22:09:09Z,2017-01-07T22:11:57Z,MERGED,True,534,16,12,https://github.com/changlan,Add NAT and IPSwap,14,[],https://github.com/NetSys/bess/pull/220,https://github.com/barath,7,https://github.com/NetSys/bess/pull/220#issuecomment-271113713,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,221,2017-01-07T03:25:02Z,2017-01-07T09:06:20Z,2017-01-11T21:28:40Z,MERGED,True,290,2,8,https://github.com/barath,Adds a utility class for reconstructing a TCP flow.,1,[],https://github.com/NetSys/bess/pull/221,https://github.com/barath,1,https://github.com/NetSys/bess/pull/221,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,221,2017-01-07T03:25:02Z,2017-01-07T09:06:20Z,2017-01-11T21:28:40Z,MERGED,True,290,2,8,https://github.com/barath,Adds a utility class for reconstructing a TCP flow.,1,[],https://github.com/NetSys/bess/pull/221,https://github.com/barath,2,https://github.com/NetSys/bess/pull/221#issuecomment-271061233,,"These aren't just BSD-style -- they are BSD.  The headers are intentionally
unmodified BSD headers, and I only pulled them out so that we can mark them
as packed, to avoid some gcc alignment complaints.  I marked at the top of
the headers their origin.

The DPDK headers have other issues (they don't properly mark the subfields
within single-byte fields).
…
On Fri, Jan 6, 2017 at 7:59 PM, Chang Lan ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In core/utils/ip.h
 <#221 (review)>:

 > + * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 + * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 + * SUCH DAMAGE.
 + *
 + *	@(#)ip.h	8.1 (Berkeley) 6/10/93
 + */
 +
 +/*
 + * Definitions for internet protocol version 4.
 + * Per RFC 791, September 1981.
 + */
 +
 +/*
 + * Structure of an internet header, naked of options.
 + */
 +struct [[gnu::packed]] ip

 Ipv4Header? (to be consistent with EthHeader)
 ------------------------------

 In core/utils/ip.h
 <#221 (review)>:

 > +
 +/*
 + * Structure of an internet header, naked of options.
 + */
 +struct [[gnu::packed]] ip
 +  {
 +#if __BYTE_ORDER == __LITTLE_ENDIAN
 +    unsigned int ip_hl:4;		/* header length */
 +    unsigned int ip_v:4;		/* version */
 +#endif
 +#if __BYTE_ORDER == __BIG_ENDIAN
 +    unsigned int ip_v:4;		/* version */
 +    unsigned int ip_hl:4;		/* header length */
 +#endif
 +    u_int8_t ip_tos;			/* type of service */
 +    u_short ip_len;			/* total length */

 This might be my personal preference -- I don't like the BSD-style
 definition very much, for the following reasons:

    - It is 21st century :)
    - We should use int type names with explicit length (e.g. uint8_t,
    uint16_t), not u_short, unsigned int, etc.
    - struct in_addr is unnecessary.
    - The prefix ip_* in field names are redundant.

 The style in rte_ip.h (http://dpdk.org/doc/api/rte__ip_8h_source.html)
 looks much better.
 ------------------------------

 In core/utils/tcp.h
 <#221 (review)>:

 > + * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 + * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 + * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 + * SUCH DAMAGE.
 + *
 + *	@(#)tcp.h	8.1 (Berkeley) 6/10/93
 + */
 +
 +#ifndef BESS_UTILS_TCP_H_
 +
 +typedef	u_int32_t tcp_seq;
 +/*
 + * TCP header.
 + * Per RFC 793, September, 1981.
 + */
 +struct [[gnu::packed]] tcphdr

 TcpHeader
 ------------------------------

 In core/utils/tcp.h
 <#221 (review)>:

 > + * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 + * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 + * SUCH DAMAGE.
 + *
 + *	@(#)tcp.h	8.1 (Berkeley) 6/10/93
 + */
 +
 +#ifndef BESS_UTILS_TCP_H_
 +
 +typedef	u_int32_t tcp_seq;
 +/*
 + * TCP header.
 + * Per RFC 793, September, 1981.
 + */
 +struct [[gnu::packed]] tcphdr
 +  {

 Same comment about the style.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#221 (review)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7eqWiCE9on0I7jdh0yhwVSFPXpL9qks5rPw2RgaJpZM4LdUMz>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,221,2017-01-07T03:25:02Z,2017-01-07T09:06:20Z,2017-01-11T21:28:40Z,MERGED,True,290,2,8,https://github.com/barath,Adds a utility class for reconstructing a TCP flow.,1,[],https://github.com/NetSys/bess/pull/221,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/221#issuecomment-271061909,,"Yes, I knew it was pulled from BSD, so my comments weren't directed to your style. But the fact that the code is from BSD doesn't mean the code is not questionable nor modifiable. I don't see why they should be kept intentionally unmodified. My point was that, now that they are part of BESS codebase, and given the issues I listed, we should make it conform to our code style.",True,{}
NetSys/bess,https://github.com/NetSys/bess,221,2017-01-07T03:25:02Z,2017-01-07T09:06:20Z,2017-01-11T21:28:40Z,MERGED,True,290,2,8,https://github.com/barath,Adds a utility class for reconstructing a TCP flow.,1,[],https://github.com/NetSys/bess/pull/221,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/221#issuecomment-271065522,,"A 3rd-party module may want to use other sources, rte_*.h, /usr/include/netinet/*.h, etc., for protocol header definitions. To minimize possibility of namespace collision between the well-known types (in C with all lowercase names) and ours, I think using CamelCase is a good idea here.",True,{}
NetSys/bess,https://github.com/NetSys/bess,221,2017-01-07T03:25:02Z,2017-01-07T09:06:20Z,2017-01-11T21:28:40Z,MERGED,True,290,2,8,https://github.com/barath,Adds a utility class for reconstructing a TCP flow.,1,[],https://github.com/NetSys/bess/pull/221,https://github.com/barath,5,https://github.com/NetSys/bess/pull/221#issuecomment-271065568,,Already changed...hit reload :),True,{}
NetSys/bess,https://github.com/NetSys/bess,221,2017-01-07T03:25:02Z,2017-01-07T09:06:20Z,2017-01-11T21:28:40Z,MERGED,True,290,2,8,https://github.com/barath,Adds a utility class for reconstructing a TCP flow.,1,[],https://github.com/NetSys/bess/pull/221,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/221#issuecomment-271072258,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,222,2017-01-07T05:53:04Z,2017-01-11T21:34:21Z,2017-01-12T04:59:33Z,MERGED,True,7,4,1,https://github.com/sangjinhan,"Fix ""AssertionError: Output gate is already bound""",2,[],https://github.com/NetSys/bess/pull/222,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/222,"If a sugared bessctl script contains a module with multiple
gate numbers, e.g., foo -> bar:2 -> 1:bar:3 -> baz
(bar is bound with an output gate twice, 2 and 3),
""Output/Input gate is already bound"" assertion failure happens.
This patch addresses the issue by treating bar:2 and 2:bar:3
as different Python object.","If a sugared bessctl script contains a module with multiple
gate numbers, e.g., foo -> bar:2 -> 1:bar:3 -> baz
(bar is bound with an output gate twice, 2 and 3),
""Output/Input gate is already bound"" assertion failure happens.
This patch addresses the issue by treating bar:2 and 2:bar:3
as different Python object.",True,{}
NetSys/bess,https://github.com/NetSys/bess,222,2017-01-07T05:53:04Z,2017-01-11T21:34:21Z,2017-01-12T04:59:33Z,MERGED,True,7,4,1,https://github.com/sangjinhan,"Fix ""AssertionError: Output gate is already bound""",2,[],https://github.com/NetSys/bess/pull/222,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/222#issuecomment-272002743,"If a sugared bessctl script contains a module with multiple
gate numbers, e.g., foo -> bar:2 -> 1:bar:3 -> baz
(bar is bound with an output gate twice, 2 and 3),
""Output/Input gate is already bound"" assertion failure happens.
This patch addresses the issue by treating bar:2 and 2:bar:3
as different Python object.",I fixed the issue since it's been pending for a while :D,True,{}
NetSys/bess,https://github.com/NetSys/bess,223,2017-01-10T21:59:54Z,2017-01-10T23:52:59Z,2017-01-10T23:53:03Z,MERGED,True,27,7,1,https://github.com/changlan,nat: Reclaim expired ports when there is no available port,1,[],https://github.com/NetSys/bess/pull/223,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/223,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,224,2017-01-10T23:34:09Z,2017-01-16T04:05:23Z,2017-01-16T04:09:03Z,MERGED,True,209,20,3,https://github.com/justinemarie,Add HTTP packet generator and fix bugs in old pkgen.,13,[],https://github.com/NetSys/bess/pull/224,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/224,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,224,2017-01-10T23:34:09Z,2017-01-16T04:05:23Z,2017-01-16T04:09:03Z,MERGED,True,209,20,3,https://github.com/justinemarie,Add HTTP packet generator and fix bugs in old pkgen.,13,[],https://github.com/NetSys/bess/pull/224,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/224#issuecomment-271789467,,Just a few comments about configurability. Looks good otherwise,True,{}
NetSys/bess,https://github.com/NetSys/bess,224,2017-01-10T23:34:09Z,2017-01-16T04:05:23Z,2017-01-16T04:09:03Z,MERGED,True,209,20,3,https://github.com/justinemarie,Add HTTP packet generator and fix bugs in old pkgen.,13,[],https://github.com/NetSys/bess/pull/224,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/224#issuecomment-271999831,,"Current coverage is 41.00% (diff: 100%)

Merging #224 into master will decrease coverage by 2.25%

@@             master       #224   diff @@
==========================================
  Files           143        150     +7   
  Lines          6766       7219   +453   
  Methods         720        752    +32   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2927       2960    +33   
- Misses         3839       4259   +420   
  Partials          0          0          

Powered by Codecov. Last update e6ac5fa...d7932b9",True,{}
NetSys/bess,https://github.com/NetSys/bess,224,2017-01-10T23:34:09Z,2017-01-16T04:05:23Z,2017-01-16T04:09:03Z,MERGED,True,209,20,3,https://github.com/justinemarie,Add HTTP packet generator and fix bugs in old pkgen.,13,[],https://github.com/NetSys/bess/pull/224,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/224#issuecomment-272039953,,"Just realize that this HTTP generator won't work with @barath's TCP reconstruction code, because it does not do a valid three-way handshake. Not sure whether scapy can generate those packets?",True,{}
NetSys/bess,https://github.com/NetSys/bess,224,2017-01-10T23:34:09Z,2017-01-16T04:05:23Z,2017-01-16T04:09:03Z,MERGED,True,209,20,3,https://github.com/justinemarie,Add HTTP packet generator and fix bugs in old pkgen.,13,[],https://github.com/NetSys/bess/pull/224,https://github.com/barath,5,https://github.com/NetSys/bess/pull/224#issuecomment-272043497,,"?  My TCP reconstruction code doesn't need a full handshake -- if you can
even send a fake SYN, that's all that's needed.  (You need a SYN because
the code needs to know the initial sequence number.)
…
On Wed, Jan 11, 2017 at 4:30 PM, Chang Lan ***@***.***> wrote:
 Just realize that this HTTP generator won't work with @barath
 <https://github.com/barath>'s TCP reconstruction code, because it does
 not do a valid three-way handshake (i.e. no SYN packet). Not sure whether
 scapy can generate do that.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#224 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7eneDyWOKI3M_qrVAcwV9FksShu9-ks5rRXQPgaJpZM4LgBe5>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,224,2017-01-10T23:34:09Z,2017-01-16T04:05:23Z,2017-01-16T04:09:03Z,MERGED,True,209,20,3,https://github.com/justinemarie,Add HTTP packet generator and fix bugs in old pkgen.,13,[],https://github.com/NetSys/bess/pull/224,https://github.com/barath,6,https://github.com/NetSys/bess/pull/224#issuecomment-272043526,,"Stray ""?""

On Wed, Jan 11, 2017 at 4:50 PM, Barath Raghavan (Nefeli) <barath@nefeli.io>
wrote:
…
 ?  My TCP reconstruction code doesn't need a full handshake -- if you can
 even send a fake SYN, that's all that's needed.  (You need a SYN because
 the code needs to know the initial sequence number.)

 On Wed, Jan 11, 2017 at 4:30 PM, Chang Lan ***@***.***>
 wrote:

> Just realize that this HTTP generator won't work with @barath
> <https://github.com/barath>'s TCP reconstruction code, because it does
> not do a valid three-way handshake (i.e. no SYN packet). Not sure whether
> scapy can generate do that.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <#224 (comment)>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AAk7eneDyWOKI3M_qrVAcwV9FksShu9-ks5rRXQPgaJpZM4LgBe5>
> .
>",True,{}
NetSys/bess,https://github.com/NetSys/bess,224,2017-01-10T23:34:09Z,2017-01-16T04:05:23Z,2017-01-16T04:09:03Z,MERGED,True,209,20,3,https://github.com/justinemarie,Add HTTP packet generator and fix bugs in old pkgen.,13,[],https://github.com/NetSys/bess/pull/224,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/224#issuecomment-272053026,,"No, Chang is right -- the packet generator isn't generating multi-packet
flows, every packet is a new ""flow"". I will make a patch...

On Wed, Jan 11, 2017 at 4:51 PM, Barath Raghavan <notifications@github.com>
wrote:
…
 Stray ""?""

 On Wed, Jan 11, 2017 at 4:50 PM, Barath Raghavan (Nefeli) <
 ***@***.***>
 wrote:


 > ? My TCP reconstruction code doesn't need a full handshake -- if you can
 > even send a fake SYN, that's all that's needed. (You need a SYN because
 > the code needs to know the initial sequence number.)
 >
 > On Wed, Jan 11, 2017 at 4:30 PM, Chang Lan ***@***.***>
 > wrote:
 >
 >> Just realize that this HTTP generator won't work with @barath
 >> <https://github.com/barath>'s TCP reconstruction code, because it does
 >> not do a valid three-way handshake (i.e. no SYN packet). Not sure
 whether
 >> scapy can generate do that.
 >>
 >> —
 >> You are receiving this because you were mentioned.
 >> Reply to this email directly, view it on GitHub
 >> <#224 (comment)>, or
 mute
 >> the thread
 >> <https://github.com/notifications/unsubscribe-auth/AAk7eneDyWOKI3M_
 qrVAcwV9FksShu9-ks5rRXQPgaJpZM4LgBe5>
 >> .
 >>
 >
 >

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#224 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FglZ7KfmT5dHWGAxLHmW6kARVe6uks5rRXkDgaJpZM4LgBe5>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,224,2017-01-10T23:34:09Z,2017-01-16T04:05:23Z,2017-01-16T04:09:03Z,MERGED,True,209,20,3,https://github.com/justinemarie,Add HTTP packet generator and fix bugs in old pkgen.,13,[],https://github.com/NetSys/bess/pull/224,https://github.com/barath,8,https://github.com/NetSys/bess/pull/224#issuecomment-272053832,,"I agree.  All you'll need is to send a SYN before each if you have 1-packet
flows.

On Wed, Jan 11, 2017 at 5:50 PM, Justine Sherry <notifications@github.com>
wrote:
…
 No, Chang is right -- the packet generator isn't generating multi-packet
 flows, every packet is a new ""flow"". I will make a patch...

 On Wed, Jan 11, 2017 at 4:51 PM, Barath Raghavan ***@***.***
 >
 wrote:

 > Stray ""?""
 >
 > On Wed, Jan 11, 2017 at 4:50 PM, Barath Raghavan (Nefeli) <
 > ***@***.***>
 > wrote:
 >
 >
 > > ? My TCP reconstruction code doesn't need a full handshake -- if you
 can
 > > even send a fake SYN, that's all that's needed. (You need a SYN because
 > > the code needs to know the initial sequence number.)
 > >
 > > On Wed, Jan 11, 2017 at 4:30 PM, Chang Lan ***@***.***>
 > > wrote:
 > >
 > >> Just realize that this HTTP generator won't work with @barath
 > >> <https://github.com/barath>'s TCP reconstruction code, because it
 does
 > >> not do a valid three-way handshake (i.e. no SYN packet). Not sure
 > whether
 > >> scapy can generate do that.
 > >>
 > >> —
 > >> You are receiving this because you were mentioned.
 > >> Reply to this email directly, view it on GitHub
 > >> <#224 (comment)>, or
 > mute
 > >> the thread
 > >> <https://github.com/notifications/unsubscribe-auth/AAk7eneDyWOKI3M_
 > qrVAcwV9FksShu9-ks5rRXQPgaJpZM4LgBe5>
 > >> .
 > >>
 > >
 > >
 >
 > —
 > You are receiving this because you authored the thread.
 > Reply to this email directly, view it on GitHub
 > <#224 (comment)>, or
 mute
 > the thread
 > <https://github.com/notifications/unsubscribe-auth/
 AAE6FglZ7KfmT5dHWGAxLHmW6kARVe6uks5rRXkDgaJpZM4LgBe5>
 > .
 >

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#224 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7eu4AGhPDNx-pYL3jFQx8_otacibhks5rRYbTgaJpZM4LgBe5>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,224,2017-01-10T23:34:09Z,2017-01-16T04:05:23Z,2017-01-16T04:09:03Z,MERGED,True,209,20,3,https://github.com/justinemarie,Add HTTP packet generator and fix bugs in old pkgen.,13,[],https://github.com/NetSys/bess/pull/224,https://github.com/justinemarie,9,https://github.com/NetSys/bess/pull/224#issuecomment-272769867,,what do,True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/225,"Upload codecov report when DEBUG=1
Run unit test","Upload codecov report when DEBUG=1
Run unit test",True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/225#issuecomment-271735931,"Upload codecov report when DEBUG=1
Run unit test",I'm a bit confused:  How did the repo end up in this state? Did we merge a commit that didn't pass Travis?,True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/225#issuecomment-271735980,"Upload codecov report when DEBUG=1
Run unit test","Also, shouldn't these commits be squashed into one?",True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/225#issuecomment-271738009,"Upload codecov report when DEBUG=1
Run unit test",Just a side note: You can squash and merge on GitHub if you really care.,True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/225#issuecomment-271740954,"Upload codecov report when DEBUG=1
Run unit test","Ah, cool -- I forgot that they'd added that feature. Still, what's the backstory on the bug?",True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/225#issuecomment-271741687,"Upload codecov report when DEBUG=1
Run unit test","I figured it out -- Barath's patch failed in all_test, but passed travis because there are multiple commands on one line. See:
justine@Justines-MacBook-Pro:/$ cd ..; exit 2; cd .
justine@Justines-MacBook-Pro:/$ echo $?
0
So the fix is both to add ./all_test and make it
cd .. && ./all_test && cd .
That way if the test fails travis will notice.",True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/225#issuecomment-271741799,"Upload codecov report when DEBUG=1
Run unit test",@barath -- why do we need the cd rather than doing core/all_test?,True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/codecov-io,8,https://github.com/NetSys/bess/pull/225#issuecomment-271744414,"Upload codecov report when DEBUG=1
Run unit test","Current coverage is 43.17% (diff: 100%)

No coverage report found for master at 6bf0fc8.


Powered by Codecov. Last update 6bf0fc8...3e9f2d5",True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/barath,9,https://github.com/NetSys/bess/pull/225#issuecomment-271747789,"Upload codecov report when DEBUG=1
Run unit test","Good catch!

As for why we need cd -- it's because we need to access tracefiles for the
tcp reconstruct unit test and those are specified with a relative path, and
the relative path that we run things from is different in different
environments.  I didn't see an easy way to specify an absolute path that
would work well both locally and in travis, so changing the PWD via cd
seemed easiest.
…
On Tue, Jan 10, 2017 at 4:29 PM, Justine Sherry ***@***.***> wrote:
 @barath <https://github.com/barath> -- why do we need the cd rather than
 doing core/all_test?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#225 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7elREcZIV_bU1LOA9m6qGPyYctxowks5rRCJfgaJpZM4LgCNi>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/justinemarie,10,https://github.com/NetSys/bess/pull/225#issuecomment-271747981,"Upload codecov report when DEBUG=1
Run unit test","Ah okay, so then we can't revert to ./all_tests, but we should do the && solution?",True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/barath,11,https://github.com/NetSys/bess/pull/225#issuecomment-271748276,"Upload codecov report when DEBUG=1
Run unit test","Sounds good.
…
On Tue, Jan 10, 2017 at 5:06 PM, Justine Sherry ***@***.***> wrote:
 Ah okay, so then we can't revert to ./all_tests, but we should do the &&
 solution?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#225 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7eiuzI5v-0pW8V-qfaBbYT0AHLTFSks5rRCstgaJpZM4LgCNi>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/justinemarie,12,https://github.com/NetSys/bess/pull/225#issuecomment-271777801,"Upload codecov report when DEBUG=1
Run unit test",I restarted the travis job? Looks like a passing error during apt-get update.,True,{}
NetSys/bess,https://github.com/NetSys/bess,225,2017-01-10T23:51:07Z,2017-01-11T06:20:56Z,2017-01-11T21:28:29Z,MERGED,True,2,2,1,https://github.com/changlan,Fix bugs in .travis.yml,4,[],https://github.com/NetSys/bess/pull/225,https://github.com/barath,13,https://github.com/NetSys/bess/pull/225#issuecomment-271788484,"Upload codecov report when DEBUG=1
Run unit test",,True,{}
NetSys/bess,https://github.com/NetSys/bess,226,2017-01-11T05:45:01Z,2017-01-12T04:55:10Z,2017-08-09T01:23:02Z,MERGED,True,7,1,2,https://github.com/melvinw,nat: avoid unecessary gc attempts,1,[],https://github.com/NetSys/bess/pull/226,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/226,"I think we'll see a non-negligible performance hit as the number of flows entering the NAT increases beyond MAX_PORT - MIN_PORT by GCing the current way. We can avoid doing unnecessary work by calculating the earliest we can expect there to be a free port the first time we enter the GC section of the code. Then future attempts to GC will only happen that point or later, when we know we'll find something.","I think we'll see a non-negligible performance hit as the number of flows entering the NAT increases beyond MAX_PORT - MIN_PORT by GCing the current way. We can avoid doing unnecessary work by calculating the earliest we can expect there to be a free port the first time we enter the GC section of the code. Then future attempts to GC will only happen that point or later, when we know we'll find something.",True,{'THUMBS_UP': ['https://github.com/changlan']}
NetSys/bess,https://github.com/NetSys/bess,226,2017-01-11T05:45:01Z,2017-01-12T04:55:10Z,2017-08-09T01:23:02Z,MERGED,True,7,1,2,https://github.com/melvinw,nat: avoid unecessary gc attempts,1,[],https://github.com/NetSys/bess/pull/226,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/226#issuecomment-272076032,"I think we'll see a non-negligible performance hit as the number of flows entering the NAT increases beyond MAX_PORT - MIN_PORT by GCing the current way. We can avoid doing unnecessary work by calculating the earliest we can expect there to be a free port the first time we enter the GC section of the code. Then future attempts to GC will only happen that point or later, when we know we'll find something.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,227,2017-01-13T01:27:40Z,2017-01-13T19:31:21Z,2017-01-16T19:28:33Z,MERGED,True,1229,0,8,https://github.com/changlan,Add UrlFilter module,6,[],https://github.com/NetSys/bess/pull/227,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/227,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,227,2017-01-13T01:27:40Z,2017-01-13T19:31:21Z,2017-01-16T19:28:33Z,MERGED,True,1229,0,8,https://github.com/changlan,Add UrlFilter module,6,[],https://github.com/NetSys/bess/pull/227,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/227#issuecomment-272341522,,"Current coverage is 40.93% (diff: 7.00%)

Merging #227 into master will decrease coverage by 2.29%

@@             master       #227   diff @@
==========================================
  Files           143        150     +7   
  Lines          6770       7231   +461   
  Methods         720        752    +32   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2927       2960    +33   
- Misses         3843       4271   +428   
  Partials          0          0          

Powered by Codecov. Last update bdbc732...9b43fb9",True,{}
NetSys/bess,https://github.com/NetSys/bess,227,2017-01-13T01:27:40Z,2017-01-13T19:31:21Z,2017-01-16T19:28:33Z,MERGED,True,1229,0,8,https://github.com/changlan,Add UrlFilter module,6,[],https://github.com/NetSys/bess/pull/227,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/227#issuecomment-272483969,,"When porting to C++ I had to add all missing fields to all structs, including pmd.cc",True,{}
NetSys/bess,https://github.com/NetSys/bess,227,2017-01-13T01:27:40Z,2017-01-13T19:31:21Z,2017-01-16T19:28:33Z,MERGED,True,1229,0,8,https://github.com/changlan,Add UrlFilter module,6,[],https://github.com/NetSys/bess/pull/227,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/227#issuecomment-272513977,,Sounds good. Will change.,True,{}
NetSys/bess,https://github.com/NetSys/bess,227,2017-01-13T01:27:40Z,2017-01-13T19:31:21Z,2017-01-16T19:28:33Z,MERGED,True,1229,0,8,https://github.com/changlan,Add UrlFilter module,6,[],https://github.com/NetSys/bess/pull/227,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/227#issuecomment-272526582,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,228,2017-01-13T18:44:27Z,2017-01-13T19:08:41Z,2017-01-18T00:51:07Z,MERGED,True,1,1,1,https://github.com/sangjinhan,CLI.err() should not terminate process immediately,1,[],https://github.com/NetSys/bess/pull/228,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/228,"Instead, the current command need be gracefully terminated with further
actions properly performed (additional error messages, exception handling, etc.)","Instead, the current command need be gracefully terminated with further
actions properly performed (additional error messages, exception handling, etc.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,228,2017-01-13T18:44:27Z,2017-01-13T19:08:41Z,2017-01-18T00:51:07Z,MERGED,True,1,1,1,https://github.com/sangjinhan,CLI.err() should not terminate process immediately,1,[],https://github.com/NetSys/bess/pull/228,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/228#issuecomment-272519072,"Instead, the current command need be gracefully terminated with further
actions properly performed (additional error messages, exception handling, etc.)","Current coverage is 43.23% (diff: 100%)

Merging #228 into master will not change coverage

@@             master       #228   diff @@
==========================================
  Files           143        143          
  Lines          6770       6770          
  Methods         720        720          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2927       2927          
  Misses         3843       3843          
  Partials          0          0          

Powered by Codecov. Last update bdbc732...f31074f",True,{}
NetSys/bess,https://github.com/NetSys/bess,228,2017-01-13T18:44:27Z,2017-01-13T19:08:41Z,2017-01-18T00:51:07Z,MERGED,True,1,1,1,https://github.com/sangjinhan,CLI.err() should not terminate process immediately,1,[],https://github.com/NetSys/bess/pull/228,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/228#issuecomment-272520981,"Instead, the current command need be gracefully terminated with further
actions properly performed (additional error messages, exception handling, etc.)",Good catch!,True,{'HEART': ['https://github.com/melvinw']}
NetSys/bess,https://github.com/NetSys/bess,228,2017-01-13T18:44:27Z,2017-01-13T19:08:41Z,2017-01-18T00:51:07Z,MERGED,True,1,1,1,https://github.com/sangjinhan,CLI.err() should not terminate process immediately,1,[],https://github.com/NetSys/bess/pull/228,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/228#issuecomment-272535355,"Instead, the current command need be gracefully terminated with further
actions properly performed (additional error messages, exception handling, etc.)","Wait wait wait -- this needs to return an error code! If we exit due to error we need to return an error code, otherwise our testing scripts break.",True,{}
NetSys/bess,https://github.com/NetSys/bess,229,2017-01-13T19:15:07Z,2017-01-14T00:24:48Z,2017-01-16T19:28:36Z,MERGED,True,6,19,1,https://github.com/sangjinhan,Do not recalculate checksum in IPSwap module,1,[],https://github.com/NetSys/bess/pull/229,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/229,"Swapping IP src/dst addresses and L4 port numbers affects neither IP
nor L4 checksums, since all changes does not cross 2-byte alignment
boundary and checksum calculation is commutative.
With the samples/nat.bess example, it reduced the cost of IPSwap from 7.8% to 3.8% on my machine.","Swapping IP src/dst addresses and L4 port numbers affects neither IP
nor L4 checksums, since all changes does not cross 2-byte alignment
boundary and checksum calculation is commutative.
With the samples/nat.bess example, it reduced the cost of IPSwap from 7.8% to 3.8% on my machine.",True,{}
NetSys/bess,https://github.com/NetSys/bess,229,2017-01-13T19:15:07Z,2017-01-14T00:24:48Z,2017-01-16T19:28:36Z,MERGED,True,6,19,1,https://github.com/sangjinhan,Do not recalculate checksum in IPSwap module,1,[],https://github.com/NetSys/bess/pull/229,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/229#issuecomment-272543148,"Swapping IP src/dst addresses and L4 port numbers affects neither IP
nor L4 checksums, since all changes does not cross 2-byte alignment
boundary and checksum calculation is commutative.
With the samples/nat.bess example, it reduced the cost of IPSwap from 7.8% to 3.8% on my machine.","Current coverage is 41.01% (diff: 0.00%)

Merging #229 into master will decrease coverage by 2.21%

@@             master       #229   diff @@
==========================================
  Files           143        150     +7   
  Lines          6770       7216   +446   
  Methods         720        752    +32   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2927       2960    +33   
- Misses         3843       4256   +413   
  Partials          0          0          

Powered by Codecov. Last update 5b2e0ce...2bfd314",True,{}
NetSys/bess,https://github.com/NetSys/bess,229,2017-01-13T19:15:07Z,2017-01-14T00:24:48Z,2017-01-16T19:28:36Z,MERGED,True,6,19,1,https://github.com/sangjinhan,Do not recalculate checksum in IPSwap module,1,[],https://github.com/NetSys/bess/pull/229,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/229#issuecomment-272583566,"Swapping IP src/dst addresses and L4 port numbers affects neither IP
nor L4 checksums, since all changes does not cross 2-byte alignment
boundary and checksum calculation is commutative.
With the samples/nat.bess example, it reduced the cost of IPSwap from 7.8% to 3.8% on my machine.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,231,2017-01-13T23:56:20Z,2017-01-15T06:04:31Z,2017-01-16T19:28:31Z,MERGED,True,14,8,1,https://github.com/changlan,Minor changes to NAT,3,[],https://github.com/NetSys/bess/pull/231,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/231,"Replace rdtsc() with ctx.current_ns()
Use emplace() instead of insert()
Drop packets if there is no available port after GC","Replace rdtsc() with ctx.current_ns()
Use emplace() instead of insert()
Drop packets if there is no available port after GC",True,{}
NetSys/bess,https://github.com/NetSys/bess,231,2017-01-13T23:56:20Z,2017-01-15T06:04:31Z,2017-01-16T19:28:31Z,MERGED,True,14,8,1,https://github.com/changlan,Minor changes to NAT,3,[],https://github.com/NetSys/bess/pull/231,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/231#issuecomment-272583843,"Replace rdtsc() with ctx.current_ns()
Use emplace() instead of insert()
Drop packets if there is no available port after GC","Current coverage is 40.93% (diff: 0.00%)

Merging #231 into master will decrease coverage by 0.01%

@@             master       #231   diff @@
==========================================
  Files           150        150          
  Lines          7231       7234     +3   
  Methods         752        752          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2961       2961          
- Misses         4270       4273     +3   
  Partials          0          0          

Powered by Codecov. Last update c0689db...8299c96",True,{}
NetSys/bess,https://github.com/NetSys/bess,231,2017-01-13T23:56:20Z,2017-01-15T06:04:31Z,2017-01-16T19:28:31Z,MERGED,True,14,8,1,https://github.com/changlan,Minor changes to NAT,3,[],https://github.com/NetSys/bess/pull/231,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/231#issuecomment-272676095,"Replace rdtsc() with ctx.current_ns()
Use emplace() instead of insert()
Drop packets if there is no available port after GC",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,232,2017-01-15T07:02:01Z,2017-01-17T02:00:27Z,2017-01-18T00:51:06Z,MERGED,True,17,7,3,https://github.com/sangjinhan,"If bessctl loop ended with an error, sys.exit(1)",1,[],https://github.com/NetSys/bess/pull/232,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/232,"This patch addresses Issue #230.
Also, added ferr output stream, which was separated from fout","This patch addresses Issue #230.
Also, added ferr output stream, which was separated from fout",True,{'HEART': ['https://github.com/justinemarie']}
NetSys/bess,https://github.com/NetSys/bess,232,2017-01-15T07:02:01Z,2017-01-17T02:00:27Z,2017-01-18T00:51:06Z,MERGED,True,17,7,3,https://github.com/sangjinhan,"If bessctl loop ended with an error, sys.exit(1)",1,[],https://github.com/NetSys/bess/pull/232,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/232#issuecomment-272679265,"This patch addresses Issue #230.
Also, added ferr output stream, which was separated from fout","Current coverage is 40.99% (diff: 100%)

Merging #232 into master will increase coverage by <.01%

@@             master       #232   diff @@
==========================================
  Files           150        150          
  Lines          7219       7220     +1   
  Methods         752        752          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2959       2960     +1   
  Misses         4260       4260          
  Partials          0          0          

Powered by Codecov. Last update 9953c0a...72b2006",True,{}
NetSys/bess,https://github.com/NetSys/bess,232,2017-01-15T07:02:01Z,2017-01-17T02:00:27Z,2017-01-18T00:51:06Z,MERGED,True,17,7,3,https://github.com/sangjinhan,"If bessctl loop ended with an error, sys.exit(1)",1,[],https://github.com/NetSys/bess/pull/232,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/232#issuecomment-272725922,"This patch addresses Issue #230.
Also, added ferr output stream, which was separated from fout",This is great! Thank you!,True,{}
NetSys/bess,https://github.com/NetSys/bess,232,2017-01-15T07:02:01Z,2017-01-17T02:00:27Z,2017-01-18T00:51:06Z,MERGED,True,17,7,3,https://github.com/sangjinhan,"If bessctl loop ended with an error, sys.exit(1)",1,[],https://github.com/NetSys/bess/pull/232,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/232#issuecomment-273002896,"This patch addresses Issue #230.
Also, added ferr output stream, which was separated from fout","This is a photo of my sister, with our family cat, dressed as the cat for Halloween.",True,{}
NetSys/bess,https://github.com/NetSys/bess,233,2017-01-17T00:48:14Z,2017-01-17T01:41:33Z,2017-01-17T01:41:33Z,MERGED,True,2,1,1,https://github.com/justinemarie,Fix flowgen heap bug so that flows are generated accurately.,2,[],https://github.com/NetSys/bess/pull/233,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/233,"Oh frabjous day! Calooh, callay!","Oh frabjous day! Calooh, callay!",True,{}
NetSys/bess,https://github.com/NetSys/bess,233,2017-01-17T00:48:14Z,2017-01-17T01:41:33Z,2017-01-17T01:41:33Z,MERGED,True,2,1,1,https://github.com/justinemarie,Fix flowgen heap bug so that flows are generated accurately.,2,[],https://github.com/NetSys/bess/pull/233,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/233#issuecomment-272996602,"Oh frabjous day! Calooh, callay!","Current coverage is 41.13% (diff: 100%)

Merging #233 into master will increase coverage by 0.13%

@@             master       #233   diff @@
==========================================
  Files           150        150          
  Lines          7220       7220          
  Methods         752        752          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2960       2970    +10   
+ Misses         4260       4250    -10   
  Partials          0          0          

Powered by Codecov. Last update 0c0d70a...011279a",True,{}
NetSys/bess,https://github.com/NetSys/bess,234,2017-01-17T19:47:25Z,2017-01-17T20:30:10Z,2017-01-18T00:51:00Z,MERGED,True,77,41,3,https://github.com/barath,Adds graceful handling of flow reconstruction / URL filtering when SY…,1,[],https://github.com/NetSys/bess/pull/234,https://github.com/barath,1,https://github.com/NetSys/bess/pull/234,…Ns are missing.,…Ns are missing.,True,{}
NetSys/bess,https://github.com/NetSys/bess,234,2017-01-17T19:47:25Z,2017-01-17T20:30:10Z,2017-01-18T00:51:00Z,MERGED,True,77,41,3,https://github.com/barath,Adds graceful handling of flow reconstruction / URL filtering when SY…,1,[],https://github.com/NetSys/bess/pull/234,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/234#issuecomment-273287328,…Ns are missing.,"Current coverage is 41.13% (diff: 0.00%)

Merging #234 into master will increase coverage by <.01%

@@             master       #234   diff @@
==========================================
  Files           150        150          
  Lines          7220       7222     +2   
  Methods         752        752          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2970       2971     +1   
- Misses         4250       4251     +1   
  Partials          0          0          

Powered by Codecov. Last update 4c022c1...89a1815",True,{}
NetSys/bess,https://github.com/NetSys/bess,234,2017-01-17T19:47:25Z,2017-01-17T20:30:10Z,2017-01-18T00:51:00Z,MERGED,True,77,41,3,https://github.com/barath,Adds graceful handling of flow reconstruction / URL filtering when SY…,1,[],https://github.com/NetSys/bess/pull/234,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/234#issuecomment-273290505,…Ns are missing.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,235,2017-01-17T21:26:25Z,2017-01-17T21:26:39Z,2017-01-17T21:32:59Z,CLOSED,False,125,59,8,https://github.com/changlan,Fix overflow pktbatch and dangling packets,7,[],https://github.com/NetSys/bess/pull/235,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/235,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,236,2017-01-17T21:41:06Z,2017-01-18T00:31:05Z,2017-01-18T00:50:59Z,MERGED,True,29,11,2,https://github.com/changlan,Fix overflow PacketBatch and dangling packets,3,[],https://github.com/NetSys/bess/pull/236,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/236,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,236,2017-01-17T21:41:06Z,2017-01-18T00:31:05Z,2017-01-18T00:50:59Z,MERGED,True,29,11,2,https://github.com/changlan,Fix overflow PacketBatch and dangling packets,3,[],https://github.com/NetSys/bess/pull/236,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/236#issuecomment-273310345,,I've read Chang's patch and Chang's read mine -- but can we get a third set of eyes?,True,{}
NetSys/bess,https://github.com/NetSys/bess,236,2017-01-17T21:41:06Z,2017-01-18T00:31:05Z,2017-01-18T00:50:59Z,MERGED,True,29,11,2,https://github.com/changlan,Fix overflow PacketBatch and dangling packets,3,[],https://github.com/NetSys/bess/pull/236,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/236#issuecomment-273315636,,"Why send RST first, then 403? 403 should arrive earlier to the source.",True,{}
NetSys/bess,https://github.com/NetSys/bess,236,2017-01-17T21:41:06Z,2017-01-18T00:31:05Z,2017-01-18T00:50:59Z,MERGED,True,29,11,2,https://github.com/changlan,Fix overflow PacketBatch and dangling packets,3,[],https://github.com/NetSys/bess/pull/236,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/236#issuecomment-273315885,,Good catch!,True,{}
NetSys/bess,https://github.com/NetSys/bess,236,2017-01-17T21:41:06Z,2017-01-18T00:31:05Z,2017-01-18T00:50:59Z,MERGED,True,29,11,2,https://github.com/changlan,Fix overflow PacketBatch and dangling packets,3,[],https://github.com/NetSys/bess/pull/236,https://github.com/codecov-io,5,https://github.com/NetSys/bess/pull/236#issuecomment-273316507,,"Current coverage is 41.10% (diff: 0.00%)

Merging #236 into master will decrease coverage by 0.03%

@@             master       #236   diff @@
==========================================
  Files           150        150          
  Lines          7222       7228     +6   
  Methods         752        752          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2971       2971          
- Misses         4251       4257     +6   
  Partials          0          0          

Powered by Codecov. Last update c941d01...f1c8e28",True,{}
NetSys/bess,https://github.com/NetSys/bess,236,2017-01-17T21:41:06Z,2017-01-18T00:31:05Z,2017-01-18T00:50:59Z,MERGED,True,29,11,2,https://github.com/changlan,Fix overflow PacketBatch and dangling packets,3,[],https://github.com/NetSys/bess/pull/236,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/236#issuecomment-273316610,,"What I usually do is:
loop {
  ...
  batch.add(pkt);
  if (batch.full()) {
    RunNextModule(batch);
    batch.clear();
  }
  ...
}

But this is just a style issue as performance doesn't really matter, especially given that URL filtering action would occur not very frequently.",True,{}
NetSys/bess,https://github.com/NetSys/bess,236,2017-01-17T21:41:06Z,2017-01-18T00:31:05Z,2017-01-18T00:50:59Z,MERGED,True,29,11,2,https://github.com/changlan,Fix overflow PacketBatch and dangling packets,3,[],https://github.com/NetSys/bess/pull/236,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/236#issuecomment-273318988,,@sangjinhan Wouldn't that cause higher latency variability?,True,{}
NetSys/bess,https://github.com/NetSys/bess,236,2017-01-17T21:41:06Z,2017-01-18T00:31:05Z,2017-01-18T00:50:59Z,MERGED,True,29,11,2,https://github.com/changlan,Fix overflow PacketBatch and dangling packets,3,[],https://github.com/NetSys/bess/pull/236,https://github.com/changlan,8,https://github.com/NetSys/bess/pull/236#issuecomment-273318992,,"Good point. I'd also prefer this style when I only need to add one packet in each iteration. When we need to inject multiple packets (as in this example), the code would become more verbose (and possibly cause worse performance?):
loop {
  ...
  batch.add(pkt);
  if (batch.full()) {
    RunNextModule(batch);
    batch.clear();
  }
  batch.add(pkt2);
  if (batch.full()) {
    RunNextModule(batch);
    batch.clear();
  }
  batch.add(pkt3);
  if (batch.full()) {
    RunNextModule(batch);
    batch.clear();
  }
  ...
}

But thanks for pointing out the idiomatic usage though!",True,{}
NetSys/bess,https://github.com/NetSys/bess,236,2017-01-17T21:41:06Z,2017-01-18T00:31:05Z,2017-01-18T00:50:59Z,MERGED,True,29,11,2,https://github.com/changlan,Fix overflow PacketBatch and dangling packets,3,[],https://github.com/NetSys/bess/pull/236,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/236#issuecomment-273346203,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,239,2017-01-17T22:46:59Z,2017-01-18T00:46:35Z,2017-01-18T00:50:58Z,MERGED,True,29,20,2,https://github.com/barath,Changes hash function for NAT flows.,1,[],https://github.com/NetSys/bess/pull/239,https://github.com/barath,1,https://github.com/NetSys/bess/pull/239,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,239,2017-01-17T22:46:59Z,2017-01-18T00:46:35Z,2017-01-18T00:50:58Z,MERGED,True,29,20,2,https://github.com/barath,Changes hash function for NAT flows.,1,[],https://github.com/NetSys/bess/pull/239,https://github.com/barath,2,https://github.com/NetSys/bess/pull/239#issuecomment-273333580,,"Changed.  It appears to have caused no difference in performance.
…
On Tue, Jan 17, 2017 at 3:13 PM, Sangjin Han ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In core/modules/nat.h
 <#239 (review)>:

 >  // 5 tuple for TCP/UDP packets with an additional icmp_ident for ICMP query pkts
 -class Flow {
 +class [[gnu::packed]] Flow {

 This class doesn't need to be packed (It affects performance, since the
 compiler cannot make any assumption of the starting address of the object).
 If you just want to limit the size, just reorder fields in an aligned
 manner:

 IPAddress src_ip;		    IPAddress src_ip;
 IPAddress dst_ip;		    IPAddress dst_ip;
 uint16_t src_port;		    uint16_t src_port;
 uint16_t dst_port;		    uint16_t dst_port;
 uint16_t icmp_ident;  // identifier of ICMP query
 uint8_t proto;

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#239 (review)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7ejP5M2oQzsUuDFQ_MgSDzxOUbCFvks5rTUsQgaJpZM4LmQq7>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,239,2017-01-17T22:46:59Z,2017-01-18T00:46:35Z,2017-01-18T00:50:58Z,MERGED,True,29,20,2,https://github.com/barath,Changes hash function for NAT flows.,1,[],https://github.com/NetSys/bess/pull/239,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/239#issuecomment-273348316,,"Current coverage is 41.17% (diff: 0.00%)

Merging #239 into master will increase coverage by 0.03%

@@             master       #239   diff @@
==========================================
  Files           150        150          
  Lines          7222       7215     -7   
  Methods         752        751     -1   
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2971       2971          
+ Misses         4251       4244     -7   
  Partials          0          0          

Powered by Codecov. Last update c941d01...8fd20c5",True,{}
NetSys/bess,https://github.com/NetSys/bess,239,2017-01-17T22:46:59Z,2017-01-18T00:46:35Z,2017-01-18T00:50:58Z,MERGED,True,29,20,2,https://github.com/barath,Changes hash function for NAT flows.,1,[],https://github.com/NetSys/bess/pull/239,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/239#issuecomment-273348552,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,240,2017-01-17T23:11:23Z,2017-01-18T00:48:30Z,2017-01-18T00:50:57Z,MERGED,True,7,15,2,https://github.com/barath,Fixes flow port bug; preallocates reconstruction buffer; changes flow hash.,1,[],https://github.com/NetSys/bess/pull/240,https://github.com/barath,1,https://github.com/NetSys/bess/pull/240,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,240,2017-01-17T23:11:23Z,2017-01-18T00:48:30Z,2017-01-18T00:50:57Z,MERGED,True,7,15,2,https://github.com/barath,Fixes flow port bug; preallocates reconstruction buffer; changes flow hash.,1,[],https://github.com/NetSys/bess/pull/240,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/240#issuecomment-273349032,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,241,2017-01-18T01:38:01Z,2017-01-19T00:31:47Z,2017-01-19T00:31:53Z,MERGED,True,53,10,5,https://github.com/changlan,Use CRC for flow hashing,4,[],https://github.com/NetSys/bess/pull/241,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/241,This leads to very minor performance improvement as shown by the microbenchmark.,This leads to very minor performance improvement as shown by the microbenchmark.,True,{}
NetSys/bess,https://github.com/NetSys/bess,241,2017-01-18T01:38:01Z,2017-01-19T00:31:47Z,2017-01-19T00:31:53Z,MERGED,True,53,10,5,https://github.com/changlan,Use CRC for flow hashing,4,[],https://github.com/NetSys/bess/pull/241,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/241#issuecomment-273364403,This leads to very minor performance improvement as shown by the microbenchmark.,"Current coverage is 41.17% (diff: 0.00%)

Merging #241 into master will increase coverage by 0.01%

@@             master       #241   diff @@
==========================================
  Files           150        150          
  Lines          7216       7213     -3   
  Methods         750        748     -2   
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2970       2970          
+ Misses         4246       4243     -3   
  Partials          0          0          

Powered by Codecov. Last update 495d856...0304de3",True,{}
NetSys/bess,https://github.com/NetSys/bess,242,2017-01-18T06:55:39Z,2017-01-19T01:06:33Z,2017-08-09T01:23:02Z,MERGED,True,42,1,6,https://github.com/melvinw,modules: add ip checksum calculator,2,[],https://github.com/NetSys/bess/pull/242,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/242,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,242,2017-01-18T06:55:39Z,2017-01-19T01:06:33Z,2017-08-09T01:23:02Z,MERGED,True,42,1,6,https://github.com/melvinw,modules: add ip checksum calculator,2,[],https://github.com/NetSys/bess/pull/242,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/242#issuecomment-273652075,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,243,2017-01-18T22:27:27Z,2017-01-19T01:08:01Z,2017-01-19T01:08:50Z,CLOSED,False,0,0,0,https://github.com/justinemarie,Apparently these fixes never got merged...,3,[],https://github.com/NetSys/bess/pull/243,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/243,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,243,2017-01-18T22:27:27Z,2017-01-19T01:08:01Z,2017-01-19T01:08:50Z,CLOSED,False,0,0,0,https://github.com/justinemarie,Apparently these fixes never got merged...,3,[],https://github.com/NetSys/bess/pull/243,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/243#issuecomment-273626607,,"Current coverage is 41.15%

Merging #243 into master will not change coverage

@@             master       #243   diff @@
==========================================
  Files           150        150          
  Lines          7216       7216          
  Methods         750        750          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2970       2970          
  Misses         4246       4246          
  Partials          0          0          

Powered by Codecov. Last update 495d856...4f33463",True,{}
NetSys/bess,https://github.com/NetSys/bess,243,2017-01-18T22:27:27Z,2017-01-19T01:08:01Z,2017-01-19T01:08:50Z,CLOSED,False,0,0,0,https://github.com/justinemarie,Apparently these fixes never got merged...,3,[],https://github.com/NetSys/bess/pull/243,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/243#issuecomment-273629010,,It seems that these changes have been merged...?,True,{}
NetSys/bess,https://github.com/NetSys/bess,243,2017-01-18T22:27:27Z,2017-01-19T01:08:01Z,2017-01-19T01:08:50Z,CLOSED,False,0,0,0,https://github.com/justinemarie,Apparently these fixes never got merged...,3,[],https://github.com/NetSys/bess/pull/243,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/243#issuecomment-273652342,,"Yes, they are already in the master branch. Still giving you a kitty though...",True,{}
NetSys/bess,https://github.com/NetSys/bess,244,2017-01-19T01:00:20Z,2017-01-19T01:09:51Z,2017-01-19T22:11:05Z,MERGED,True,41,9,2,https://github.com/barath,Adds STL's unordered map to the hash table benchmark comparison.,1,[],https://github.com/NetSys/bess/pull/244,https://github.com/barath,1,https://github.com/NetSys/bess/pull/244,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,244,2017-01-19T01:00:20Z,2017-01-19T01:09:51Z,2017-01-19T22:11:05Z,MERGED,True,41,9,2,https://github.com/barath,Adds STL's unordered map to the hash table benchmark comparison.,1,[],https://github.com/NetSys/bess/pull/244,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/244#issuecomment-273651091,,I'm curious what's the result?,True,{}
NetSys/bess,https://github.com/NetSys/bess,244,2017-01-19T01:00:20Z,2017-01-19T01:09:51Z,2017-01-19T22:11:05Z,MERGED,True,41,9,2,https://github.com/barath,Adds STL's unordered map to the hash table benchmark comparison.,1,[],https://github.com/NetSys/bess/pull/244,https://github.com/barath,3,https://github.com/NetSys/bess/pull/244#issuecomment-273651542,,Non-inlined HTable is about the same speed as unordered_map and about 4-5x as fast when inlined.  So I am looking at switching NAT to use HTable.,True,{}
NetSys/bess,https://github.com/NetSys/bess,244,2017-01-19T01:00:20Z,2017-01-19T01:09:51Z,2017-01-19T22:11:05Z,MERGED,True,41,9,2,https://github.com/barath,Adds STL's unordered map to the hash table benchmark comparison.,1,[],https://github.com/NetSys/bess/pull/244,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/244#issuecomment-273652620,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,245,2017-01-19T01:22:07Z,2017-01-19T02:57:37Z,2017-01-19T22:11:01Z,MERGED,True,3,3,1,https://github.com/barath,Marks the inline get as do-not-optimize to ensure the compiler doesn'…,1,[],https://github.com/NetSys/bess/pull/245,https://github.com/barath,1,https://github.com/NetSys/bess/pull/245,"…t optimize
it away.","…t optimize
it away.",True,{}
NetSys/bess,https://github.com/NetSys/bess,245,2017-01-19T01:22:07Z,2017-01-19T02:57:37Z,2017-01-19T22:11:01Z,MERGED,True,3,3,1,https://github.com/barath,Marks the inline get as do-not-optimize to ensure the compiler doesn'…,1,[],https://github.com/NetSys/bess/pull/245,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/245#issuecomment-273661641,"…t optimize
it away.","Current coverage is 40.92% (diff: 100%)

Merging #245 into master will increase coverage by <.01%

@@             master       #245   diff @@
==========================================
  Files           152        152          
  Lines          7290       7289     -1   
  Methods         752        752          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2983       2983          
+ Misses         4307       4306     -1   
  Partials          0          0          

Powered by Codecov. Last update ab7a8b4...9e954dd",True,{}
NetSys/bess,https://github.com/NetSys/bess,245,2017-01-19T01:22:07Z,2017-01-19T02:57:37Z,2017-01-19T22:11:01Z,MERGED,True,3,3,1,https://github.com/barath,Marks the inline get as do-not-optimize to ensure the compiler doesn'…,1,[],https://github.com/NetSys/bess/pull/245,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/245#issuecomment-273669358,"…t optimize
it away.","Merged, thanks!
For future reference:
Benchmark                                       Time           CPU Iterations
-----------------------------------------------------------------------------
HTableFixture/BessGet/4                        18 ns         18 ns   39431368   53.7311M items/s
HTableFixture/BessGet/16                       19 ns         19 ns   37020116   50.4107M items/s
HTableFixture/BessGet/64                       18 ns         18 ns   38068705    52.192M items/s
HTableFixture/BessGet/256                      23 ns         23 ns   30193174   41.1592M items/s
HTableFixture/BessGet/1024                     27 ns         27 ns   26072215   35.5108M items/s
HTableFixture/BessGet/4k                       32 ns         32 ns   22111245    30.214M items/s
HTableFixture/BessGet/16k                      37 ns         37 ns   19083210   26.1149M items/s
HTableFixture/BessGet/64k                      41 ns         41 ns   17282645   23.5283M items/s
HTableFixture/BessGet/256k                     40 ns         40 ns   17391836   23.8228M items/s
HTableFixture/BessGet/1024k                    45 ns         45 ns   15673785   21.3648M items/s
HTableFixture/BessGet/4M                       69 ns         69 ns   10333003   13.8829M items/s
HTableFixture/BessInlinedGet/4                  4 ns          4 ns  155991511   212.639M items/s
HTableFixture/BessInlinedGet/16                 6 ns          6 ns  121221861   165.154M items/s
HTableFixture/BessInlinedGet/64                 5 ns          5 ns  133633336   182.105M items/s
HTableFixture/BessInlinedGet/256                5 ns          5 ns  134441211   183.166M items/s
HTableFixture/BessInlinedGet/1024               5 ns          5 ns  129940114   177.377M items/s
HTableFixture/BessInlinedGet/4k                12 ns         12 ns   56448858   78.0477M items/s
HTableFixture/BessInlinedGet/16k               21 ns         21 ns   33444767   45.5786M items/s
HTableFixture/BessInlinedGet/64k               23 ns         23 ns   30392026   41.3949M items/s
HTableFixture/BessInlinedGet/256k              23 ns         23 ns   30815039   42.0184M items/s
HTableFixture/BessInlinedGet/1024k             25 ns         25 ns   28165603   38.4994M items/s
HTableFixture/BessInlinedGet/4M                35 ns         35 ns   20017139   27.1788M items/s
HTableFixture/STLUnorderedMapGet/4             21 ns         21 ns   33097374   45.0797M items/s
HTableFixture/STLUnorderedMapGet/16            22 ns         22 ns   31797230   43.3283M items/s
HTableFixture/STLUnorderedMapGet/64            22 ns         22 ns   31263509   42.8029M items/s
HTableFixture/STLUnorderedMapGet/256           23 ns         23 ns   30920577   42.0482M items/s
HTableFixture/STLUnorderedMapGet/1024          24 ns         24 ns   29300364   39.8837M items/s
HTableFixture/STLUnorderedMapGet/4k            31 ns         31 ns   22724595   30.9089M items/s
HTableFixture/STLUnorderedMapGet/16k           36 ns         36 ns   19300902   26.3038M items/s
HTableFixture/STLUnorderedMapGet/64k           38 ns         38 ns   18547734   25.2716M items/s
HTableFixture/STLUnorderedMapGet/256k          42 ns         42 ns   16478598   22.4681M items/s
HTableFixture/STLUnorderedMapGet/1024k         87 ns         87 ns    7917658   11.0189M items/s
HTableFixture/STLUnorderedMapGet/4M           113 ns        113 ns    5433420   8.43774M items/s",True,{}
NetSys/bess,https://github.com/NetSys/bess,246,2017-01-19T03:19:15Z,2017-01-19T04:18:08Z,2017-01-19T16:10:31Z,MERGED,True,30,13,3,https://github.com/sangjinhan,Fix incorrect port statistics for i40e interfaces,2,[],https://github.com/NetSys/bess/pull/246,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/246,"show port / monitor port did not show statistics counters for i40e PMD devices. There were two issues:

i40e doesn't support per-queue stats, but only port-wide stats. The PMD driver only used per-queue stats.
While we do not need to accumulate counters with PMD drivers (since they have their own), it was doing that (thus wasting CPU cycles). This is regression of C++ porting.","show port / monitor port did not show statistics counters for i40e PMD devices. There were two issues:

i40e doesn't support per-queue stats, but only port-wide stats. The PMD driver only used per-queue stats.
While we do not need to accumulate counters with PMD drivers (since they have their own), it was doing that (thus wasting CPU cycles). This is regression of C++ porting.",True,{}
NetSys/bess,https://github.com/NetSys/bess,246,2017-01-19T03:19:15Z,2017-01-19T04:18:08Z,2017-01-19T16:10:31Z,MERGED,True,30,13,3,https://github.com/sangjinhan,Fix incorrect port statistics for i40e interfaces,2,[],https://github.com/NetSys/bess/pull/246,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/246#issuecomment-273674781,"show port / monitor port did not show statistics counters for i40e PMD devices. There were two issues:

i40e doesn't support per-queue stats, but only port-wide stats. The PMD driver only used per-queue stats.
While we do not need to accumulate counters with PMD drivers (since they have their own), it was doing that (thus wasting CPU cycles). This is regression of C++ porting.","Current coverage is 40.87% (diff: 6.25%)

Merging #246 into master will decrease coverage by 0.05%

@@             master       #246   diff @@
==========================================
  Files           152        152          
  Lines          7290       7297     +7   
  Methods         752        753     +1   
  Messages          0          0          
  Branches          0          0          
==========================================
- Hits           2984       2983     -1   
- Misses         4306       4314     +8   
  Partials          0          0          

Powered by Codecov. Last update a76b8e8...6edb0cf",True,{}
NetSys/bess,https://github.com/NetSys/bess,246,2017-01-19T03:19:15Z,2017-01-19T04:18:08Z,2017-01-19T16:10:31Z,MERGED,True,30,13,3,https://github.com/sangjinhan,Fix incorrect port statistics for i40e interfaces,2,[],https://github.com/NetSys/bess/pull/246,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/246#issuecomment-273678853,"show port / monitor port did not show statistics counters for i40e PMD devices. There were two issues:

i40e doesn't support per-queue stats, but only port-wide stats. The PMD driver only used per-queue stats.
While we do not need to accumulate counters with PMD drivers (since they have their own), it was doing that (thus wasting CPU cycles). This is regression of C++ porting.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,247,2017-01-19T03:31:00Z,2017-01-19T04:19:35Z,2017-01-19T16:10:30Z,MERGED,True,26,28,1,https://github.com/sangjinhan,Show fraction part for pkts/sched and cycles/pkt,2,[],https://github.com/NetSys/bess/pull/247,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/247,Regression of C++ porting. They are useful for performance monitoring...,Regression of C++ porting. They are useful for performance monitoring...,True,{}
NetSys/bess,https://github.com/NetSys/bess,247,2017-01-19T03:31:00Z,2017-01-19T04:19:35Z,2017-01-19T16:10:30Z,MERGED,True,26,28,1,https://github.com/sangjinhan,Show fraction part for pkts/sched and cycles/pkt,2,[],https://github.com/NetSys/bess/pull/247,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/247#issuecomment-273678764,Regression of C++ porting. They are useful for performance monitoring...,,True,{}
NetSys/bess,https://github.com/NetSys/bess,248,2017-01-19T04:15:45Z,2017-01-19T04:20:04Z,2017-01-19T05:43:10Z,CLOSED,False,50,0,1,https://github.com/justinemarie,Add pktgen script that generates flows.,1,[],https://github.com/NetSys/bess/pull/248,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/248,Melvin and I have been using this script to test the NAT -- could use some cleaning up if someone wants to take a look...,Melvin and I have been using this script to test the NAT -- could use some cleaning up if someone wants to take a look...,True,{}
NetSys/bess,https://github.com/NetSys/bess,248,2017-01-19T04:15:45Z,2017-01-19T04:20:04Z,2017-01-19T05:43:10Z,CLOSED,False,50,0,1,https://github.com/justinemarie,Add pktgen script that generates flows.,1,[],https://github.com/NetSys/bess/pull/248,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/248#issuecomment-273678479,Melvin and I have been using this script to test the NAT -- could use some cleaning up if someone wants to take a look...,"I take this back, I should do the fixup, nvm!!!",True,{}
NetSys/bess,https://github.com/NetSys/bess,249,2017-01-19T04:33:17Z,2017-01-19T22:54:06Z,2017-01-20T03:30:58Z,MERGED,True,21,4,2,https://github.com/changlan,Add a sample script for UrlFilter and fix up pktgen_http,1,[],https://github.com/NetSys/bess/pull/249,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/249,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,249,2017-01-19T04:33:17Z,2017-01-19T22:54:06Z,2017-01-20T03:30:58Z,MERGED,True,21,4,2,https://github.com/changlan,Add a sample script for UrlFilter and fix up pktgen_http,1,[],https://github.com/NetSys/bess/pull/249,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/249#issuecomment-273687346,,"Current coverage is 40.88% (diff: 100%)

Merging #249 into master will increase coverage by 0.01%

@@             master       #249   diff @@
==========================================
  Files           152        152          
  Lines          7299       7299          
  Methods         753        753          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2983       2984     +1   
+ Misses         4316       4315     -1   
  Partials          0          0          

Powered by Codecov. Last update 9d1001d...ba85ea6",True,{}
NetSys/bess,https://github.com/NetSys/bess,249,2017-01-19T04:33:17Z,2017-01-19T22:54:06Z,2017-01-20T03:30:58Z,MERGED,True,21,4,2,https://github.com/changlan,Add a sample script for UrlFilter and fix up pktgen_http,1,[],https://github.com/NetSys/bess/pull/249,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/249#issuecomment-273691686,,@changlan Can the urlfilter keep up with that rate specified in the sample script? the number of flows looks too high.,True,{}
NetSys/bess,https://github.com/NetSys/bess,249,2017-01-19T04:33:17Z,2017-01-19T22:54:06Z,2017-01-20T03:30:58Z,MERGED,True,21,4,2,https://github.com/changlan,Add a sample script for UrlFilter and fix up pktgen_http,1,[],https://github.com/NetSys/bess/pull/249,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/249#issuecomment-273822743,,Will test with current bug fixes. What rate did you use for benchmarking?,True,{}
NetSys/bess,https://github.com/NetSys/bess,249,2017-01-19T04:33:17Z,2017-01-19T22:54:06Z,2017-01-20T03:30:58Z,MERGED,True,21,4,2,https://github.com/changlan,Add a sample script for UrlFilter and fix up pktgen_http,1,[],https://github.com/NetSys/bess/pull/249,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/249#issuecomment-273924861,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,251,2017-01-19T05:47:55Z,2017-01-19T06:41:09Z,2017-01-19T06:41:27Z,MERGED,True,2,2,1,https://github.com/justinemarie,Increase min packet size in latency script so that timestamps do not get,2,[],https://github.com/NetSys/bess/pull/251,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/251,truncated.,truncated.,True,{}
NetSys/bess,https://github.com/NetSys/bess,251,2017-01-19T05:47:55Z,2017-01-19T06:41:09Z,2017-01-19T06:41:27Z,MERGED,True,2,2,1,https://github.com/justinemarie,Increase min packet size in latency script so that timestamps do not get,2,[],https://github.com/NetSys/bess/pull/251,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/251#issuecomment-273690545,truncated.,"Current coverage is 40.89% (diff: 100%)

Merging #251 into master will not change coverage

@@             master       #251   diff @@
==========================================
  Files           152        152          
  Lines          7297       7297          
  Methods         753        753          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2984       2984          
  Misses         4313       4313          
  Partials          0          0          

Powered by Codecov. Last update abd6b57...532f4a9",True,{}
NetSys/bess,https://github.com/NetSys/bess,251,2017-01-19T05:47:55Z,2017-01-19T06:41:09Z,2017-01-19T06:41:27Z,MERGED,True,2,2,1,https://github.com/justinemarie,Increase min packet size in latency script so that timestamps do not get,2,[],https://github.com/NetSys/bess/pull/251,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/251#issuecomment-273694388,truncated.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,252,2017-01-19T07:49:52Z,2017-01-19T07:52:45Z,2017-01-19T16:10:32Z,MERGED,True,1,1,1,https://github.com/barath,Adds a bounds check for task ID when handling an AttachTask request.,1,[],https://github.com/NetSys/bess/pull/252,https://github.com/barath,1,https://github.com/NetSys/bess/pull/252,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,252,2017-01-19T07:49:52Z,2017-01-19T07:52:45Z,2017-01-19T16:10:32Z,MERGED,True,1,1,1,https://github.com/barath,Adds a bounds check for task ID when handling an AttachTask request.,1,[],https://github.com/NetSys/bess/pull/252,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/252#issuecomment-273704873,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,253,2017-01-19T08:27:22Z,2017-01-19T08:31:09Z,2017-01-19T08:31:17Z,CLOSED,False,1,1,1,https://github.com/GalSagie,Fix comment in IP checksum module,1,[],https://github.com/NetSys/bess/pull/253,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/253,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,254,2017-01-19T08:39:19Z,2017-01-19T22:55:17Z,2017-01-19T22:55:17Z,CLOSED,False,16,12,1,https://github.com/justinemarie,Update packetgen to balance load when in multicore and to rewrite both,1,[],https://github.com/NetSys/bess/pull/254,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/254,src and dst IPs.,src and dst IPs.,True,{}
NetSys/bess,https://github.com/NetSys/bess,254,2017-01-19T08:39:19Z,2017-01-19T22:55:17Z,2017-01-19T22:55:17Z,CLOSED,False,16,12,1,https://github.com/justinemarie,Update packetgen to balance load when in multicore and to rewrite both,1,[],https://github.com/NetSys/bess/pull/254,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/254#issuecomment-273925017,src and dst IPs.,"The new script generates NUM_FLOWS^2 flows, not just NUM_FLOWS...",True,{}
NetSys/bess,https://github.com/NetSys/bess,255,2017-01-19T13:04:27Z,2017-01-19T13:39:53Z,2017-01-19T16:10:34Z,MERGED,True,4,0,1,https://github.com/barath,Cleans up a flow cache entry upon receipt of a FIN.,1,[],https://github.com/NetSys/bess/pull/255,https://github.com/barath,1,https://github.com/NetSys/bess/pull/255,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,255,2017-01-19T13:04:27Z,2017-01-19T13:39:53Z,2017-01-19T16:10:34Z,MERGED,True,4,0,1,https://github.com/barath,Cleans up a flow cache entry upon receipt of a FIN.,1,[],https://github.com/NetSys/bess/pull/255,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/255#issuecomment-273777719,,"Current coverage is 40.87% (diff: 0.00%)

Merging #255 into master will increase coverage by <.01%

@@             master       #255   diff @@
==========================================
  Files           152        152          
  Lines          7296       7298     +2   
  Methods         753        753          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2982       2983     +1   
- Misses         4314       4315     +1   
  Partials          0          0          

Powered by Codecov. Last update ac26d95...df6da71",True,{}
NetSys/bess,https://github.com/NetSys/bess,255,2017-01-19T13:04:27Z,2017-01-19T13:39:53Z,2017-01-19T16:10:34Z,MERGED,True,4,0,1,https://github.com/barath,Cleans up a flow cache entry upon receipt of a FIN.,1,[],https://github.com/NetSys/bess/pull/255,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/255#issuecomment-273778557,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,256,2017-01-19T16:11:05Z,2017-01-19T21:16:31Z,2017-01-19T22:10:52Z,MERGED,True,12,6,1,https://github.com/changlan,Free packets after accessing fields,1,[],https://github.com/NetSys/bess/pull/256,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/256,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,256,2017-01-19T16:11:05Z,2017-01-19T21:16:31Z,2017-01-19T22:10:52Z,MERGED,True,12,6,1,https://github.com/changlan,Free packets after accessing fields,1,[],https://github.com/NetSys/bess/pull/256,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/256#issuecomment-273829011,,"Current coverage is 40.86% (diff: 0.00%)

Merging #256 into master will not change coverage

@@             master       #256   diff @@
==========================================
  Files           152        152          
  Lines          7299       7299          
  Methods         753        753          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2983       2983          
  Misses         4316       4316          
  Partials          0          0          

Powered by Codecov. Last update 9d1001d...f06a029",True,{}
NetSys/bess,https://github.com/NetSys/bess,256,2017-01-19T16:11:05Z,2017-01-19T21:16:31Z,2017-01-19T22:10:52Z,MERGED,True,12,6,1,https://github.com/changlan,Free packets after accessing fields,1,[],https://github.com/NetSys/bess/pull/256,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/256#issuecomment-273901181,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,257,2017-01-19T18:50:07Z,2017-01-19T22:38:03Z,2017-01-20T03:30:57Z,MERGED,True,33,20,1,https://github.com/changlan,Disallow negative buf_offset,1,[],https://github.com/NetSys/bess/pull/257,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/257,"Disallow negative buf_offset
Misc clang-format changes

This PR should fix the crashing behavior, but ultimately FlowGen should generate TCP flows with correct sequence numbers.","Disallow negative buf_offset
Misc clang-format changes

This PR should fix the crashing behavior, but ultimately FlowGen should generate TCP flows with correct sequence numbers.",True,{}
NetSys/bess,https://github.com/NetSys/bess,257,2017-01-19T18:50:07Z,2017-01-19T22:38:03Z,2017-01-20T03:30:57Z,MERGED,True,33,20,1,https://github.com/changlan,Disallow negative buf_offset,1,[],https://github.com/NetSys/bess/pull/257,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/257#issuecomment-273908978,"Disallow negative buf_offset
Misc clang-format changes

This PR should fix the crashing behavior, but ultimately FlowGen should generate TCP flows with correct sequence numbers.","Current coverage is 40.62% (diff: 0.00%)

Merging #257 into master will decrease coverage by 0.24%

@@             master       #257   diff @@
==========================================
  Files           152        152          
  Lines          7299       7343    +44   
  Methods         753        754     +1   
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2983       2983          
- Misses         4316       4360    +44   
  Partials          0          0          

Powered by Codecov. Last update 9d1001d...4bdf088",True,{}
NetSys/bess,https://github.com/NetSys/bess,257,2017-01-19T18:50:07Z,2017-01-19T22:38:03Z,2017-01-20T03:30:57Z,MERGED,True,33,20,1,https://github.com/changlan,Disallow negative buf_offset,1,[],https://github.com/NetSys/bess/pull/257,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/257#issuecomment-273921269,"Disallow negative buf_offset
Misc clang-format changes

This PR should fix the crashing behavior, but ultimately FlowGen should generate TCP flows with correct sequence numbers.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,258,2017-01-19T19:23:26Z,2017-01-19T21:18:56Z,2017-01-19T22:10:55Z,MERGED,True,9,9,1,https://github.com/changlan,Use RunChooseModule in NAT,1,[],https://github.com/NetSys/bess/pull/258,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/258,RunChooseModule should be faster than RunSplit.,RunChooseModule should be faster than RunSplit.,True,{}
NetSys/bess,https://github.com/NetSys/bess,258,2017-01-19T19:23:26Z,2017-01-19T21:18:56Z,2017-01-19T22:10:55Z,MERGED,True,9,9,1,https://github.com/changlan,Use RunChooseModule in NAT,1,[],https://github.com/NetSys/bess/pull/258,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/258#issuecomment-273889675,RunChooseModule should be faster than RunSplit.,"Current coverage is 40.91% (diff: 0.00%)

Merging #258 into master will increase coverage by 0.04%

@@             master       #258   diff @@
==========================================
  Files           152        152          
  Lines          7299       7293     -6   
  Methods         753        753          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2983       2984     +1   
+ Misses         4316       4309     -7   
  Partials          0          0          

Powered by Codecov. Last update 9d1001d...651043e",True,{}
NetSys/bess,https://github.com/NetSys/bess,258,2017-01-19T19:23:26Z,2017-01-19T21:18:56Z,2017-01-19T22:10:55Z,MERGED,True,9,9,1,https://github.com/changlan,Use RunChooseModule in NAT,1,[],https://github.com/NetSys/bess/pull/258,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/258#issuecomment-273901811,RunChooseModule should be faster than RunSplit.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,259,2017-01-20T00:00:26Z,2017-01-20T03:30:21Z,2017-01-20T03:30:56Z,MERGED,True,22,8,1,https://github.com/barath,Adds explicit construction and destruction to Trie Nodes to avoid uni…,1,[],https://github.com/NetSys/bess/pull/259,https://github.com/barath,1,https://github.com/NetSys/bess/pull/259,"…nitialized
infinitely-recursing destruction in some cases.","…nitialized
infinitely-recursing destruction in some cases.",True,{}
NetSys/bess,https://github.com/NetSys/bess,259,2017-01-20T00:00:26Z,2017-01-20T03:30:21Z,2017-01-20T03:30:56Z,MERGED,True,22,8,1,https://github.com/barath,Adds explicit construction and destruction to Trie Nodes to avoid uni…,1,[],https://github.com/NetSys/bess/pull/259,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/259#issuecomment-273943273,"…nitialized
infinitely-recursing destruction in some cases.","Current coverage is 40.87% (diff: 0.00%)

Merging #259 into master will decrease coverage by 0.01%

@@             master       #259   diff @@
==========================================
  Files           152        152          
  Lines          7295       7301     +6   
  Methods         753        753          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2983       2984     +1   
- Misses         4312       4317     +5   
  Partials          0          0          

Powered by Codecov. Last update 62c96e1...fe59726",True,{}
NetSys/bess,https://github.com/NetSys/bess,259,2017-01-20T00:00:26Z,2017-01-20T03:30:21Z,2017-01-20T03:30:56Z,MERGED,True,22,8,1,https://github.com/barath,Adds explicit construction and destruction to Trie Nodes to avoid uni…,1,[],https://github.com/NetSys/bess/pull/259,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/259#issuecomment-273968808,"…nitialized
infinitely-recursing destruction in some cases.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,260,2017-01-20T01:07:29Z,2017-01-25T20:41:48Z,2017-01-31T20:52:00Z,CLOSED,False,70,18,3,https://github.com/justinemarie,Self rating flowgen.,5,[],https://github.com/NetSys/bess/pull/260,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/260,For benchmarking -- this change allows your script to re-route return traffic back in to the flowgen so that it can find out the throughput of the device under test. It then self-scales the sending rate to find how much the device can handle.,For benchmarking -- this change allows your script to re-route return traffic back in to the flowgen so that it can find out the throughput of the device under test. It then self-scales the sending rate to find how much the device can handle.,True,{}
NetSys/bess,https://github.com/NetSys/bess,260,2017-01-20T01:07:29Z,2017-01-25T20:41:48Z,2017-01-31T20:52:00Z,CLOSED,False,70,18,3,https://github.com/justinemarie,Self rating flowgen.,5,[],https://github.com/NetSys/bess/pull/260,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/260#issuecomment-273956370,For benchmarking -- this change allows your script to re-route return traffic back in to the flowgen so that it can find out the throughput of the device under test. It then self-scales the sending rate to find how much the device can handle.,"Current coverage is 40.76% (diff: 35.71%)

Merging #260 into master will decrease coverage by 0.12%

@@             master       #260   diff @@
==========================================
  Files           152        152          
  Lines          7295       7654   +359   
  Methods         753        813    +60   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2983       3120   +137   
- Misses         4312       4534   +222   
  Partials          0          0          

Powered by Codecov. Last update 62c96e1...5b7ff22",True,{}
NetSys/bess,https://github.com/NetSys/bess,260,2017-01-20T01:07:29Z,2017-01-25T20:41:48Z,2017-01-31T20:52:00Z,CLOSED,False,70,18,3,https://github.com/justinemarie,Self rating flowgen.,5,[],https://github.com/NetSys/bess/pull/260,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/260#issuecomment-273956532,For benchmarking -- this change allows your script to re-route return traffic back in to the flowgen so that it can find out the throughput of the device under test. It then self-scales the sending rate to find how much the device can handle.,Fixed the bug making Travis crash -- failed to mark an overwritten function w/ override.,True,{}
NetSys/bess,https://github.com/NetSys/bess,260,2017-01-20T01:07:29Z,2017-01-25T20:41:48Z,2017-01-31T20:52:00Z,CLOSED,False,70,18,3,https://github.com/justinemarie,Self rating flowgen.,5,[],https://github.com/NetSys/bess/pull/260,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/260#issuecomment-273980328,For benchmarking -- this change allows your script to re-route return traffic back in to the flowgen so that it can find out the throughput of the device under test. It then self-scales the sending rate to find how much the device can handle.,Beep beep?,True,{}
NetSys/bess,https://github.com/NetSys/bess,261,2017-01-20T03:32:05Z,2017-01-20T06:02:53Z,2017-01-26T01:00:24Z,MERGED,True,2,3,1,https://github.com/sangjinhan,Fix Update module updating at an incorrect offset,1,[],https://github.com/NetSys/bess/pull/261,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/261,"it should update packets at offset, not offset * sizeof(uint64_t)","it should update packets at offset, not offset * sizeof(uint64_t)",True,{}
NetSys/bess,https://github.com/NetSys/bess,261,2017-01-20T03:32:05Z,2017-01-20T06:02:53Z,2017-01-26T01:00:24Z,MERGED,True,2,3,1,https://github.com/sangjinhan,Fix Update module updating at an incorrect offset,1,[],https://github.com/NetSys/bess/pull/261,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/261#issuecomment-273971915,"it should update packets at offset, not offset * sizeof(uint64_t)","offset may be a negative number, while Packet::head_data() only takes an offset in uint16_t.",True,{}
NetSys/bess,https://github.com/NetSys/bess,261,2017-01-20T03:32:05Z,2017-01-20T06:02:53Z,2017-01-26T01:00:24Z,MERGED,True,2,3,1,https://github.com/sangjinhan,Fix Update module updating at an incorrect offset,1,[],https://github.com/NetSys/bess/pull/261,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/261#issuecomment-273973982,"it should update packets at offset, not offset * sizeof(uint64_t)","Current coverage is 40.86% (diff: 100%)

Merging #261 into master will decrease coverage by <.01%

@@             master       #261   diff @@
==========================================
  Files           152        152          
  Lines          7301       7338    +37   
  Methods         753        760     +7   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2984       2999    +15   
- Misses         4317       4339    +22   
  Partials          0          0          

Powered by Codecov. Last update eb08df6...794c3e9",True,{}
NetSys/bess,https://github.com/NetSys/bess,261,2017-01-20T03:32:05Z,2017-01-20T06:02:53Z,2017-01-26T01:00:24Z,MERGED,True,2,3,1,https://github.com/sangjinhan,Fix Update module updating at an incorrect offset,1,[],https://github.com/NetSys/bess/pull/261,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/261#issuecomment-273985012,"it should update packets at offset, not offset * sizeof(uint64_t)",🐱,True,{}
NetSys/bess,https://github.com/NetSys/bess,262,2017-01-20T03:39:46Z,2017-01-20T06:05:06Z,2017-01-20T06:05:56Z,MERGED,True,115,63,8,https://github.com/changlan,Use HTable in NAT,1,[],https://github.com/NetSys/bess/pull/262,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/262,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,262,2017-01-20T03:39:46Z,2017-01-20T06:05:06Z,2017-01-20T06:05:56Z,MERGED,True,115,63,8,https://github.com/changlan,Use HTable in NAT,1,[],https://github.com/NetSys/bess/pull/262,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/262#issuecomment-273969955,,On my laptop the overhead of NAT dropped from 86% to 82%.,True,{}
NetSys/bess,https://github.com/NetSys/bess,262,2017-01-20T03:39:46Z,2017-01-20T06:05:06Z,2017-01-20T06:05:56Z,MERGED,True,115,63,8,https://github.com/changlan,Use HTable in NAT,1,[],https://github.com/NetSys/bess/pull/262,https://github.com/barath,3,https://github.com/NetSys/bess/pull/262#issuecomment-273985324,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,263,2017-01-20T07:39:26Z,2017-01-20T19:32:30Z,2017-01-20T19:32:35Z,MERGED,True,9,1,2,https://github.com/justinemarie,Make flowgen support sequence numbers in TCP.,1,[],https://github.com/NetSys/bess/pull/263,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/263,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,264,2017-01-20T18:18:53Z,2017-01-20T19:51:48Z,2017-01-26T01:00:18Z,MERGED,True,141,83,2,https://github.com/barath,Handles port exhaustion due to sharing of ports across external IPs.,1,[],https://github.com/NetSys/bess/pull/264,https://github.com/barath,1,https://github.com/NetSys/bess/pull/264,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,264,2017-01-20T18:18:53Z,2017-01-20T19:51:48Z,2017-01-26T01:00:18Z,MERGED,True,141,83,2,https://github.com/barath,Handles port exhaustion due to sharing of ports across external IPs.,1,[],https://github.com/NetSys/bess/pull/264,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/264#issuecomment-274149570,,"Current coverage is 40.75% (diff: 0.00%)

Merging #264 into master will decrease coverage by 0.08%

@@             master       #264   diff @@
==========================================
  Files           152        152          
  Lines          7305       7320    +15   
  Methods         754        757     +3   
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2983       2983          
- Misses         4322       4337    +15   
  Partials          0          0          

Powered by Codecov. Last update ffcd36a...1f88c28",True,{}
NetSys/bess,https://github.com/NetSys/bess,264,2017-01-20T18:18:53Z,2017-01-20T19:51:48Z,2017-01-26T01:00:18Z,MERGED,True,141,83,2,https://github.com/barath,Handles port exhaustion due to sharing of ports across external IPs.,1,[],https://github.com/NetSys/bess/pull/264,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/264#issuecomment-274163949,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,265,2017-01-20T21:11:48Z,2017-01-21T00:22:07Z,2017-01-21T00:22:10Z,MERGED,True,93,67,4,https://github.com/changlan,Various fixes to UrlFilter,5,[],https://github.com/NetSys/bess/pull/265,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/265,"Add logging
Disable quick ramp up in the sample script
Pass the packet if reconstruction is failed
A few optimizations","Add logging
Disable quick ramp up in the sample script
Pass the packet if reconstruction is failed
A few optimizations",True,{}
NetSys/bess,https://github.com/NetSys/bess,265,2017-01-20T21:11:48Z,2017-01-21T00:22:07Z,2017-01-21T00:22:10Z,MERGED,True,93,67,4,https://github.com/changlan,Various fixes to UrlFilter,5,[],https://github.com/NetSys/bess/pull/265,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/265#issuecomment-274188982,"Add logging
Disable quick ramp up in the sample script
Pass the packet if reconstruction is failed
A few optimizations","Current coverage is 40.75% (diff: 0.00%)

Merging #265 into master will decrease coverage by 0.03%

@@             master       #265   diff @@
==========================================
  Files           152        152          
  Lines          7324       7330     +6   
  Methods         757        757          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2987       2987          
- Misses         4337       4343     +6   
  Partials          0          0          

Powered by Codecov. Last update d1e14c4...57b65bc",True,{}
NetSys/bess,https://github.com/NetSys/bess,266,2017-01-20T21:21:09Z,2017-01-27T21:34:58Z,2017-01-27T21:35:58Z,MERGED,True,94,77,2,https://github.com/sangjinhan,Align struct Flow with 16-byte boundary,4,[],https://github.com/NetSys/bess/pull/266,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/266,30% performance boost was observed with samples/nat.bess,30% performance boost was observed with samples/nat.bess,True,{}
NetSys/bess,https://github.com/NetSys/bess,266,2017-01-20T21:21:09Z,2017-01-27T21:34:58Z,2017-01-27T21:35:58Z,MERGED,True,94,77,2,https://github.com/sangjinhan,Align struct Flow with 16-byte boundary,4,[],https://github.com/NetSys/bess/pull/266,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/266#issuecomment-274184608,30% performance boost was observed with samples/nat.bess,Another 30% boost with simplified Flow comparator....,True,{}
NetSys/bess,https://github.com/NetSys/bess,266,2017-01-20T21:21:09Z,2017-01-27T21:34:58Z,2017-01-27T21:35:58Z,MERGED,True,94,77,2,https://github.com/sangjinhan,Align struct Flow with 16-byte boundary,4,[],https://github.com/NetSys/bess/pull/266,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/266#issuecomment-274195960,30% performance boost was observed with samples/nat.bess,"Current coverage is 40.43% (diff: 0.00%)

Merging #266 into master will decrease coverage by 0.35%

@@             master       #266   diff @@
==========================================
  Files           152        152          
  Lines          7324       7393    +69   
  Methods         757        761     +4   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2987       2989     +2   
- Misses         4337       4404    +67   
  Partials          0          0          

Powered by Codecov. Last update d1e14c4...5ab7ead",True,{}
NetSys/bess,https://github.com/NetSys/bess,266,2017-01-20T21:21:09Z,2017-01-27T21:34:58Z,2017-01-27T21:35:58Z,MERGED,True,94,77,2,https://github.com/sangjinhan,Align struct Flow with 16-byte boundary,4,[],https://github.com/NetSys/bess/pull/266,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/266#issuecomment-275780956,30% performance boost was observed with samples/nat.bess,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,267,2017-01-22T03:10:13Z,2017-01-22T03:19:16Z,2017-01-24T18:16:08Z,MERGED,True,121,0,1,https://github.com/justinemarie,Add ansible playbook file to make setting up and compiling BESS easier.,1,[],https://github.com/NetSys/bess/pull/267,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/267,"Now that more folks are joining the BESS research team, this file has been emailed around a bunch -- would be easiest to just put it in the repo!","Now that more folks are joining the BESS research team, this file has been emailed around a bunch -- would be easiest to just put it in the repo!",True,{}
NetSys/bess,https://github.com/NetSys/bess,267,2017-01-22T03:10:13Z,2017-01-22T03:19:16Z,2017-01-24T18:16:08Z,MERGED,True,121,0,1,https://github.com/justinemarie,Add ansible playbook file to make setting up and compiling BESS easier.,1,[],https://github.com/NetSys/bess/pull/267,https://github.com/barath,2,https://github.com/NetSys/bess/pull/267#issuecomment-274305131,"Now that more folks are joining the BESS research team, this file has been emailed around a bunch -- would be easiest to just put it in the repo!",,True,{}
NetSys/bess,https://github.com/NetSys/bess,267,2017-01-22T03:10:13Z,2017-01-22T03:19:16Z,2017-01-24T18:16:08Z,MERGED,True,121,0,1,https://github.com/justinemarie,Add ansible playbook file to make setting up and compiling BESS easier.,1,[],https://github.com/NetSys/bess/pull/267,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/267#issuecomment-274704167,"Now that more folks are joining the BESS research team, this file has been emailed around a bunch -- would be easiest to just put it in the repo!","On a clean Ubuntu 16.04 machine it fails with the following error:
(ran with ansible-playbook --ask-become-pass ansible-playbook.yml)",True,{}
NetSys/bess,https://github.com/NetSys/bess,267,2017-01-22T03:10:13Z,2017-01-22T03:19:16Z,2017-01-24T18:16:08Z,MERGED,True,121,0,1,https://github.com/justinemarie,Add ansible playbook file to make setting up and compiling BESS easier.,1,[],https://github.com/NetSys/bess/pull/267,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/267#issuecomment-274787169,"Now that more folks are joining the BESS research team, this file has been emailed around a bunch -- would be easiest to just put it in the repo!","Output makes it look like a permissions issue, but then the previous
commands work just fine and they all require sudo as well... what machine
is this on?
…
On Mon, Jan 23, 2017 at 10:03 PM, Sangjin Han ***@***.***> wrote:
 On a clean Ubuntu 16.04 machine it fails with the following error:
 (ran with ansible-playbook --ask-become-pass ansible-playbook.yml)

 [image: screen shot 2017-01-23 at 8 01 42 pm]
 <https://cloud.githubusercontent.com/assets/1916976/22233681/c5c58dc6-e1a6-11e6-9b4d-d12fef0feea4.png>

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#267 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6Fm8YsVhXtAPxZEnHWsnSubqbkfm1ks5rVXf3gaJpZM4LqQlp>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,267,2017-01-22T03:10:13Z,2017-01-22T03:19:16Z,2017-01-24T18:16:08Z,MERGED,True,121,0,1,https://github.com/justinemarie,Add ansible playbook file to make setting up and compiling BESS easier.,1,[],https://github.com/NetSys/bess/pull/267,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/267#issuecomment-274888543,"Now that more folks are joining the BESS research team, this file has been emailed around a bunch -- would be easiest to just put it in the repo!",It is a fresh Ubuntu Server 64 installation running on VirtualBox. No additional packages have been installed except Ansible.,True,{}
NetSys/bess,https://github.com/NetSys/bess,268,2017-01-24T21:58:09Z,2017-01-25T20:40:32Z,2017-01-26T01:00:28Z,MERGED,True,5,1,1,https://github.com/justinemarie,Add comment about ansible usage,4,[],https://github.com/NetSys/bess/pull/268,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/268,Add a quick comment about how to use ansible -- become-pass is needed to address the glitch Sangjin saw.,Add a quick comment about how to use ansible -- become-pass is needed to address the glitch Sangjin saw.,True,{}
NetSys/bess,https://github.com/NetSys/bess,268,2017-01-24T21:58:09Z,2017-01-25T20:40:32Z,2017-01-26T01:00:28Z,MERGED,True,5,1,1,https://github.com/justinemarie,Add comment about ansible usage,4,[],https://github.com/NetSys/bess/pull/268,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/268#issuecomment-274960851,Add a quick comment about how to use ansible -- become-pass is needed to address the glitch Sangjin saw.,"Current coverage is 40.72% (diff: 100%)

Merging #268 into master will not change coverage

@@             master       #268   diff @@
==========================================
  Files           152        152          
  Lines          7333       7333          
  Methods         757        757          
  Messages          0          0          
  Branches          0          0          
==========================================
  Hits           2986       2986          
  Misses         4347       4347          
  Partials          0          0          

Powered by Codecov. Last update 675a25c...e47ff4e",True,{}
NetSys/bess,https://github.com/NetSys/bess,268,2017-01-24T21:58:09Z,2017-01-25T20:40:32Z,2017-01-26T01:00:28Z,MERGED,True,5,1,1,https://github.com/justinemarie,Add comment about ansible usage,4,[],https://github.com/NetSys/bess/pull/268,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/268#issuecomment-274975325,Add a quick comment about how to use ansible -- become-pass is needed to address the glitch Sangjin saw.,@sangjinhan This last commit fixes the bug you found -- pip does not require sudo and so should not use become:true; if you try to give it a password it hangs because it's never prompting for sudo...,True,{}
NetSys/bess,https://github.com/NetSys/bess,268,2017-01-24T21:58:09Z,2017-01-25T20:40:32Z,2017-01-26T01:00:28Z,MERGED,True,5,1,1,https://github.com/justinemarie,Add comment about ansible usage,4,[],https://github.com/NetSys/bess/pull/268,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/268#issuecomment-274981656,Add a quick comment about how to use ansible -- become-pass is needed to address the glitch Sangjin saw.,Let's add sudo -H to force pip to install packages to the global repository for all users.,True,{}
NetSys/bess,https://github.com/NetSys/bess,268,2017-01-24T21:58:09Z,2017-01-25T20:40:32Z,2017-01-26T01:00:28Z,MERGED,True,5,1,1,https://github.com/justinemarie,Add comment about ansible usage,4,[],https://github.com/NetSys/bess/pull/268,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/268#issuecomment-275023598,Add a quick comment about how to use ansible -- become-pass is needed to address the glitch Sangjin saw.,"Oh what I meant was sudo -H pip install ..., not the entire script. (=_=)",True,{}
NetSys/bess,https://github.com/NetSys/bess,268,2017-01-24T21:58:09Z,2017-01-25T20:40:32Z,2017-01-26T01:00:28Z,MERGED,True,5,1,1,https://github.com/justinemarie,Add comment about ansible usage,4,[],https://github.com/NetSys/bess/pull/268,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/268#issuecomment-275192965,Add a quick comment about how to use ansible -- become-pass is needed to address the glitch Sangjin saw.,@sangjinhan,True,{}
NetSys/bess,https://github.com/NetSys/bess,268,2017-01-24T21:58:09Z,2017-01-25T20:40:32Z,2017-01-26T01:00:28Z,MERGED,True,5,1,1,https://github.com/justinemarie,Add comment about ansible usage,4,[],https://github.com/NetSys/bess/pull/268,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/268#issuecomment-275223959,Add a quick comment about how to use ansible -- become-pass is needed to address the glitch Sangjin saw.,Can someone please merge this? The undergrads will want to check this out :-),True,{}
NetSys/bess,https://github.com/NetSys/bess,268,2017-01-24T21:58:09Z,2017-01-25T20:40:32Z,2017-01-26T01:00:28Z,MERGED,True,5,1,1,https://github.com/justinemarie,Add comment about ansible usage,4,[],https://github.com/NetSys/bess/pull/268,https://github.com/melvinw,8,https://github.com/NetSys/bess/pull/268#issuecomment-275226866,Add a quick comment about how to use ansible -- become-pass is needed to address the glitch Sangjin saw.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,269,2017-01-26T21:23:00Z,2017-01-30T20:21:36Z,2017-01-31T20:51:58Z,MERGED,True,255,0,3,https://github.com/justinemarie,Setup module testing,3,[],https://github.com/NetSys/bess/pull/269,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/269,This PR has a module testing framework -- all you have to do is create some test cases and save them in bessctl/conf/testing/module_tests. There is an example set of tests for acl. I expect this to be a lengthier code review -- please give detailed feedback!!,This PR has a module testing framework -- all you have to do is create some test cases and save them in bessctl/conf/testing/module_tests. There is an example set of tests for acl. I expect this to be a lengthier code review -- please give detailed feedback!!,True,{}
NetSys/bess,https://github.com/NetSys/bess,269,2017-01-26T21:23:00Z,2017-01-30T20:21:36Z,2017-01-31T20:51:58Z,MERGED,True,255,0,3,https://github.com/justinemarie,Setup module testing,3,[],https://github.com/NetSys/bess/pull/269,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/269#issuecomment-275572461,This PR has a module testing framework -- all you have to do is create some test cases and save them in bessctl/conf/testing/module_tests. There is an example set of tests for acl. I expect this to be a lengthier code review -- please give detailed feedback!!,"Codecov Report

Merging #269 into master will increase coverage by -0.37%.

@@            Coverage Diff             @@
##           master     #269      +/-   ##
==========================================
- Coverage    40.7%   40.33%   -0.37%     
==========================================
  Files         152      152              
  Lines        7339     7415      +76     
==========================================
+ Hits         2987     2991       +4     
- Misses       4352     4424      +72



Impacted Files
Coverage Δ





core/modules/nat.h
0% <ø> (ø)
✅


core/traffic_class.cc
56.41% <ø> (+0.51%)
✅


core/modules/nat.cc
3.12% <ø> (+0.99%)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a66aed4...ebc6816. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,269,2017-01-26T21:23:00Z,2017-01-30T20:21:36Z,2017-01-31T20:51:58Z,MERGED,True,255,0,3,https://github.com/justinemarie,Setup module testing,3,[],https://github.com/NetSys/bess/pull/269,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/269#issuecomment-275971794,This PR has a module testing framework -- all you have to do is create some test cases and save them in bessctl/conf/testing/module_tests. There is an example set of tests for acl. I expect this to be a lengthier code review -- please give detailed feedback!!,"Okay, assuming this passes Travis, it's ready for someone to take another look and make comments and/or merge.",True,{}
NetSys/bess,https://github.com/NetSys/bess,269,2017-01-26T21:23:00Z,2017-01-30T20:21:36Z,2017-01-31T20:51:58Z,MERGED,True,255,0,3,https://github.com/justinemarie,Setup module testing,3,[],https://github.com/NetSys/bess/pull/269,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/269#issuecomment-275986532,This PR has a module testing framework -- all you have to do is create some test cases and save them in bessctl/conf/testing/module_tests. There is an example set of tests for acl. I expect this to be a lengthier code review -- please give detailed feedback!!,"@sangjinhan, @melvinw?",True,{}
NetSys/bess,https://github.com/NetSys/bess,269,2017-01-26T21:23:00Z,2017-01-30T20:21:36Z,2017-01-31T20:51:58Z,MERGED,True,255,0,3,https://github.com/justinemarie,Setup module testing,3,[],https://github.com/NetSys/bess/pull/269,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/269#issuecomment-276027497,This PR has a module testing framework -- all you have to do is create some test cases and save them in bessctl/conf/testing/module_tests. There is an example set of tests for acl. I expect this to be a lengthier code review -- please give detailed feedback!!,"👍 👍
I have no more comments to make and I think the code is ready for merge. But we'd better make a ver2 of this PR...
Please make commit messages self-contained. ""apply XYZ's comments"" doesn't convey much information since the GitHub comments are out-of-band and not stored anywhere in the git history.
The unit of transaction should be each commit, not the whole PR. It is not always easy in practice, but ideally, at any commit point the entire repository must be in a consistent state: it builds successfully, complies with the coding style, does what the commit message promises (and nothing more), and does not have known bugs (that will be fixed shortly in the same PR).
How about restructuring this PR something like the following series of commits? (just an example)

Implement a module test framework
Add ACL to the new test framework as an example
Include module testing in the Travis script

Assuming you are on this setup_module_testing branch, you can do the following
git checkout -b setup_module_testing_v2
git rebase master --interactive

in order to squash and reorder commits as necessary. Then setup_module_testing_v2 will be ready for a new PR.
Alternatively, in general, if commits seem too entangled, you can start a new v2 branch from master and cherrypick changes from the v1 branch.",True,{}
NetSys/bess,https://github.com/NetSys/bess,269,2017-01-26T21:23:00Z,2017-01-30T20:21:36Z,2017-01-31T20:51:58Z,MERGED,True,255,0,3,https://github.com/justinemarie,Setup module testing,3,[],https://github.com/NetSys/bess/pull/269,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/269#issuecomment-276112477,This PR has a module testing framework -- all you have to do is create some test cases and save them in bessctl/conf/testing/module_tests. There is an example set of tests for acl. I expect this to be a lengthier code review -- please give detailed feedback!!,"I thought this was why github has the squash and merge button, so you can
collapse it all into one commit? I don't agree that this should really be
three pieces -- I think one PR -> one commit is a good setup. All of these
pieces go together.",True,{}
NetSys/bess,https://github.com/NetSys/bess,269,2017-01-26T21:23:00Z,2017-01-30T20:21:36Z,2017-01-31T20:51:58Z,MERGED,True,255,0,3,https://github.com/justinemarie,Setup module testing,3,[],https://github.com/NetSys/bess/pull/269,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/269#issuecomment-276178834,This PR has a module testing framework -- all you have to do is create some test cases and save them in bessctl/conf/testing/module_tests. There is an example set of tests for acl. I expect this to be a lengthier code review -- please give detailed feedback!!,"Individual commits should be atomic, in a way that it cannot be broken into smaller yet complete pieces (a reading for more details). In this sense, the changes you made in this PR shouldn't be a single giant commit, since:

The ACL test case is not really necessary part of ""framework""
The Travis script change is optional and the rest of the changes would still work without Travis. We could have used another CI, or we can run the test script manually during development.

Unfortunately, the current GitHub UI does not support flexible history update other than 'squash into one'. But it doesn't take more than a few minutes to do it manually on command-line. I updated this PR with modified history.",True,{'THUMBS_UP': ['https://github.com/changlan']}
NetSys/bess,https://github.com/NetSys/bess,270,2017-01-27T00:51:14Z,2017-01-31T21:20:32Z,2017-01-31T21:20:44Z,MERGED,True,173,16,3,https://github.com/justinemarie,New self ratelimiting flowgen,1,[],https://github.com/NetSys/bess/pull/270,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/270,"Sangjin, I have some questions for you about this PR. Does bessctl have the notion of background threads? I'd like that ""update"" loop to be in a background thread, BUT, I don't want that thread to go off and live in its own world and crash and break things when someone calls bess.reset_all(). How do I achieve that?
Otherwise, this is a bessctl script version of self-ratelimiting flowgen.","Sangjin, I have some questions for you about this PR. Does bessctl have the notion of background threads? I'd like that ""update"" loop to be in a background thread, BUT, I don't want that thread to go off and live in its own world and crash and break things when someone calls bess.reset_all(). How do I achieve that?
Otherwise, this is a bessctl script version of self-ratelimiting flowgen.",True,{}
NetSys/bess,https://github.com/NetSys/bess,270,2017-01-27T00:51:14Z,2017-01-31T21:20:32Z,2017-01-31T21:20:44Z,MERGED,True,173,16,3,https://github.com/justinemarie,New self ratelimiting flowgen,1,[],https://github.com/NetSys/bess/pull/270,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/270#issuecomment-276218007,"Sangjin, I have some questions for you about this PR. Does bessctl have the notion of background threads? I'd like that ""update"" loop to be in a background thread, BUT, I don't want that thread to go off and live in its own world and crash and break things when someone calls bess.reset_all(). How do I achieve that?
Otherwise, this is a bessctl script version of self-ratelimiting flowgen.","Codecov Report

Merging #270 into master will increase coverage by -0.14%.

@@            Coverage Diff             @@
##           master     #270      +/-   ##
==========================================
- Coverage   40.91%   40.78%   -0.14%     
==========================================
  Files         152      152              
  Lines        7371     7410      +39     
==========================================
+ Hits         3016     3022       +6     
- Misses       4355     4388      +33



Impacted Files
Coverage Δ





core/modules/flowgen.h
66.66% <ø> (ø)
✅


core/modules/dump.h
0% <ø> (ø)
✅


core/modules/source.cc
52.08% <ø> (ø)
✅


core/modules/nat.h
0% <ø> (ø)
✅


core/modules/buffer.cc
4.54% <ø> (ø)
✅


core/modules/nat.cc
2.09% <ø> (-0.03%)
❌


core/modules/update.cc
70.17% <100%> (ø)
✅


core/modules/rewrite.cc
81.15% <33.33%> (ø)
✅


core/modules/flowgen.cc
76.83% <36.17%> (-9.78%)
❌


core/traffic_class.cc
56.41% <ø> (+0.51%)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9b06611...c9def59. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,270,2017-01-27T00:51:14Z,2017-01-31T21:20:32Z,2017-01-31T21:20:44Z,MERGED,True,173,16,3,https://github.com/justinemarie,New self ratelimiting flowgen,1,[],https://github.com/NetSys/bess/pull/270,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/270#issuecomment-276225708,"Sangjin, I have some questions for you about this PR. Does bessctl have the notion of background threads? I'd like that ""update"" loop to be in a background thread, BUT, I don't want that thread to go off and live in its own world and crash and break things when someone calls bess.reset_all(). How do I achieve that?
Otherwise, this is a bessctl script version of self-ratelimiting flowgen.",Post-Travis this is ready for more comments or a merge.,True,{}
NetSys/bess,https://github.com/NetSys/bess,270,2017-01-27T00:51:14Z,2017-01-31T21:20:32Z,2017-01-31T21:20:44Z,MERGED,True,173,16,3,https://github.com/justinemarie,New self ratelimiting flowgen,1,[],https://github.com/NetSys/bess/pull/270,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/270#issuecomment-276270295,"Sangjin, I have some questions for you about this PR. Does bessctl have the notion of background threads? I'd like that ""update"" loop to be in a background thread, BUT, I don't want that thread to go off and live in its own world and crash and break things when someone calls bess.reset_all(). How do I achieve that?
Otherwise, this is a bessctl script version of self-ratelimiting flowgen.",Beep beep?,True,{}
NetSys/bess,https://github.com/NetSys/bess,270,2017-01-27T00:51:14Z,2017-01-31T21:20:32Z,2017-01-31T21:20:44Z,MERGED,True,173,16,3,https://github.com/justinemarie,New self ratelimiting flowgen,1,[],https://github.com/NetSys/bess/pull/270,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/270#issuecomment-276486642,"Sangjin, I have some questions for you about this PR. Does bessctl have the notion of background threads? I'd like that ""update"" loop to be in a background thread, BUT, I don't want that thread to go off and live in its own world and crash and break things when someone calls bess.reset_all(). How do I achieve that?
Otherwise, this is a bessctl script version of self-ratelimiting flowgen.",Awaiting comments/approval.,True,{}
NetSys/bess,https://github.com/NetSys/bess,270,2017-01-27T00:51:14Z,2017-01-31T21:20:32Z,2017-01-31T21:20:44Z,MERGED,True,173,16,3,https://github.com/justinemarie,New self ratelimiting flowgen,1,[],https://github.com/NetSys/bess/pull/270,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/270#issuecomment-276495425,"Sangjin, I have some questions for you about this PR. Does bessctl have the notion of background threads? I'd like that ""update"" loop to be in a background thread, BUT, I don't want that thread to go off and live in its own world and crash and break things when someone calls bess.reset_all(). How do I achieve that?
Otherwise, this is a bessctl script version of self-ratelimiting flowgen.","Awwww yisss

Sent from my rotary phone.
…
On Jan 31, 2017 13:17, ""Sangjin Han"" ***@***.***> wrote:
 ***@***.**** approved this pull request.

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#270 (review)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FjfThLzTRC2GFmkwA3RqsXx9TJvVks5rX6TigaJpZM4LvU5l>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,270,2017-01-27T00:51:14Z,2017-01-31T21:20:32Z,2017-01-31T21:20:44Z,MERGED,True,173,16,3,https://github.com/justinemarie,New self ratelimiting flowgen,1,[],https://github.com/NetSys/bess/pull/270,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/270#issuecomment-276496171,"Sangjin, I have some questions for you about this PR. Does bessctl have the notion of background threads? I'd like that ""update"" loop to be in a background thread, BUT, I don't want that thread to go off and live in its own world and crash and break things when someone calls bess.reset_all(). How do I achieve that?
Otherwise, this is a bessctl script version of self-ratelimiting flowgen.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/271,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.","THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.",True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/271#issuecomment-275591108,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.","Also also, as soon as this and the other Flowgen PR are merged, it's two seconds to get Barath that code I promised him for the tests he needs to run (so please look over this soon :-)",True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/271#issuecomment-275591197,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.","Oh, and I'll also add -- I'm not too concerned about the performance impact of the updated ports/ips because creating packets is already expensive and this is small change on top of that (and for big packetgen tests we run the flowgen multicore anyway).",True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/codecov-io,4,https://github.com/NetSys/bess/pull/271#issuecomment-275736864,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.","Codecov Report

Merging #271 into master will increase coverage by -0.17%.

@@            Coverage Diff             @@
##           master     #271      +/-   ##
==========================================
- Coverage    40.7%   40.53%   -0.17%     
==========================================
  Files         152      152              
  Lines        7338     7447     +109     
==========================================
+ Hits         2987     3019      +32     
- Misses       4351     4428      +77



Impacted Files
Coverage Δ





core/modules/flowgen.h
66.66% <ø> (ø)
✅


core/modules/flowgen.cc
86.6% <92.85%> (+0.81%)
✅


core/traffic_class.cc
55.89% <ø> (-0.52%)
❌


core/modules/nat.h
0% <ø> (ø)
✅


core/utils/random.h
100% <ø> (ø)
✅


core/modules/nat.cc
3.12% <ø> (+0.99%)
✅


core/scheduler.cc
90% <ø> (+1.11%)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e1e95e8...fb00449. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/271#issuecomment-276196792,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.","Assuming this passes Travis, can someone take a look and make more comments / go ahead and merge? That push updates the last of Sangjin's comments.",True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/271#issuecomment-276196864,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.",(Please do wait for Travis to finish before pushing).,True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/271#issuecomment-276197687,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.",LGTM (other than there should be a separator line between the system header <arpa/inet.h> and the following standard C++ headers... 😄),True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/271#issuecomment-276198429,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.",Does GetRange() work fine with 0 range...?,True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/justinemarie,9,https://github.com/NetSys/bess/pull/271#issuecomment-276204074,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.","Yes, I ran it with the test script which defaults it to zero.
…
On Mon, Jan 30, 2017 at 1:35 PM, Sangjin Han ***@***.***> wrote:
 Does GetRange() work fine with 0 range...?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#271 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FlFsErDQrdHSEQJc4uliCpid7sQxks5rXlePgaJpZM4LvcTm>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,271,2017-01-27T05:17:43Z,2017-01-30T22:18:48Z,2017-01-31T20:51:56Z,MERGED,True,104,16,3,https://github.com/justinemarie,Resizing and specifying IP/portranges now works.,1,[],https://github.com/NetSys/bess/pull/271,https://github.com/melvinw,10,https://github.com/NetSys/bess/pull/271#issuecomment-276210085,"THREE PRS IN ONE DAY HOLLA
So here are two more changes to Flowgen:
(1) SYN and FIN packets are now payload-less, so as not to trigger much angst in our NFs.
(2) (And this will need some explaining) -> it now chooses a new <IP Src, IP Dst, Src Port, Dst Port> for each flow. The user can specify a ""range"" for these values that are an increment off the base packet_template. So for example, if the template says SRC IP = 10.0.0.1, and my Src Port Range is 4, It will generate flows with SRC IP \in {10.0.0.1, 10.0.0.2, 10.0.0.3, 10.0.0.4}.
Here's why this needs to be in Flowgen: with the other packetgen, we just do random updates to e.g, update the source IP or change the ports. But that doesn't retain the flow semantics -- doing it randomly breaks it -- everything from a flow has the same header, sequence numbers line up, etc. The rewriting needs to be consistent.
Doing this with a ""range"" value is what the WindRiver packetgen does (one of the sample DPDK apps), so I literally just copied their idea.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,272,2017-01-27T20:54:14Z,2017-01-27T21:01:49Z,2017-01-27T21:02:20Z,MERGED,True,4,0,1,https://github.com/vivi,Add linux-headers installation to playbook,1,[],https://github.com/NetSys/bess/pull/272,https://github.com/vivi,1,https://github.com/NetSys/bess/pull/272,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,272,2017-01-27T20:54:14Z,2017-01-27T21:01:49Z,2017-01-27T21:02:20Z,MERGED,True,4,0,1,https://github.com/vivi,Add linux-headers installation to playbook,1,[],https://github.com/NetSys/bess/pull/272,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/272#issuecomment-275773661,,"Merged, thanks!",True,{'HEART': ['https://github.com/vivi']}
NetSys/bess,https://github.com/NetSys/bess,273,2017-01-27T21:30:59Z,2017-01-27T23:06:33Z,2017-01-27T23:06:37Z,CLOSED,False,28,15,2,https://github.com/barath,Splits the constructor and destructor for TCP flow reconstruction.,1,['notready'],https://github.com/NetSys/bess/pull/273,https://github.com/barath,1,https://github.com/NetSys/bess/pull/273,Splits the constructor and destructor for TCP flow reconstruction to get codecov to report on it.,Splits the constructor and destructor for TCP flow reconstruction to get codecov to report on it.,True,{}
NetSys/bess,https://github.com/NetSys/bess,273,2017-01-27T21:30:59Z,2017-01-27T23:06:33Z,2017-01-27T23:06:37Z,CLOSED,False,28,15,2,https://github.com/barath,Splits the constructor and destructor for TCP flow reconstruction.,1,['notready'],https://github.com/NetSys/bess/pull/273,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/273#issuecomment-275787154,Splits the constructor and destructor for TCP flow reconstruction to get codecov to report on it.,"Current coverage is 40.31% (diff: 8.33%)

Merging #273 into master will decrease coverage by 0.42%

@@             master       #273   diff @@
==========================================
  Files           152        153     +1   
  Lines          7334       7419    +85   
  Methods         757        768    +11   
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2988       2991     +3   
- Misses         4346       4428    +82   
  Partials          0          0          

Powered by Codecov. Last update be4eb8e...7b5b060",True,{}
NetSys/bess,https://github.com/NetSys/bess,273,2017-01-27T21:30:59Z,2017-01-27T23:06:33Z,2017-01-27T23:06:37Z,CLOSED,False,28,15,2,https://github.com/barath,Splits the constructor and destructor for TCP flow reconstruction.,1,['notready'],https://github.com/NetSys/bess/pull/273,https://github.com/barath,3,https://github.com/NetSys/bess/pull/273#issuecomment-275798966,Splits the constructor and destructor for TCP flow reconstruction to get codecov to report on it.,"Codecov appears to be having difficulty picking up coverage changes, and this didn't do the trick.  Will look into this...",True,{}
NetSys/bess,https://github.com/NetSys/bess,274,2017-01-31T18:10:02Z,2017-01-31T18:45:47Z,2017-01-31T20:51:55Z,MERGED,True,23,26,9,https://github.com/justinemarie,Run clang format,2,[],https://github.com/NetSys/bess/pull/274,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/274,"This just runs clang-format over all of the modules, to make sure there are no weird merge conflicts due to formatting down the road... :-)","This just runs clang-format over all of the modules, to make sure there are no weird merge conflicts due to formatting down the road... :-)",True,{}
NetSys/bess,https://github.com/NetSys/bess,274,2017-01-31T18:10:02Z,2017-01-31T18:45:47Z,2017-01-31T20:51:55Z,MERGED,True,23,26,9,https://github.com/justinemarie,Run clang format,2,[],https://github.com/NetSys/bess/pull/274,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/274#issuecomment-276443771,"This just runs clang-format over all of the modules, to make sure there are no weird merge conflicts due to formatting down the road... :-)","Codecov Report

Merging #274 into master will increase coverage by -0.03%.

@@            Coverage Diff             @@
##           master     #274      +/-   ##
==========================================
- Coverage   40.91%   40.89%   -0.03%     
==========================================
  Files         152      152              
  Lines        7371     7375       +4     
==========================================
  Hits         3016     3016              
- Misses       4355     4359       +4



Impacted Files
Coverage Δ





core/modules/source.cc
52.08% <ø> (ø)
✅


core/modules/dump.h
0% <ø> (ø)
✅


core/modules/flowgen.h
66.66% <ø> (ø)
✅


core/modules/buffer.cc
4.54% <ø> (ø)
✅


core/modules/nat.cc
2.09% <ø> (-0.03%)
❌


core/modules/nat.h
0% <ø> (ø)
✅


core/modules/flowgen.cc
86.6% <100%> (ø)
✅


core/modules/update.cc
70.17% <100%> (ø)
✅


core/modules/rewrite.cc
81.15% <33.33%> (ø)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9b06611...887d159. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,274,2017-01-31T18:10:02Z,2017-01-31T18:45:47Z,2017-01-31T20:51:55Z,MERGED,True,23,26,9,https://github.com/justinemarie,Run clang format,2,[],https://github.com/NetSys/bess/pull/274,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/274#issuecomment-276453633,"This just runs clang-format over all of the modules, to make sure there are no weird merge conflicts due to formatting down the road... :-)",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/275,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s","CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s",True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/barath,2,https://github.com/NetSys/bess/pull/275#issuecomment-276556053,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s",Thanks for porting this!,True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/barath,3,https://github.com/NetSys/bess/pull/275#issuecomment-276579435,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s","I don't know of a c++ equivalent to realloc.  Sangjin?
…
On Tue, Jan 31, 2017 at 6:58 PM, Chang Lan ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In core/utils/cuckoo_map.h <#275>:

 > +
 +// Cuckoo HashMap implementation
 +template <typename K, typename V, HashFunc<K, V> H, CmpFunc<K, V> C>
 +class CuckooMap {
 + public:
 +  typedef std::pair<K, V> Entry;
 +
 +  CuckooMap()
 +      : bucket_mask_(kInitNumBucket - 1),
 +        cnt_(0),
 +        buckets_(nullptr),
 +        entries_(nullptr),
 +        num_entries_(kInitNumEntries),
 +        free_entry_indices_() {
 +    buckets_ = reinterpret_cast<Bucket*>(
 +        mem_alloc((bucket_mask_ + 1) * sizeof(Bucket)));

 mem_alloc does zero initialization so functionality-wise it is fine, but
 I see your point. Is there a C++ equivalent of realloc? Using new and
 mem_realloc at the same time seems awkward to me.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#275>, or mute the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7eo_-3TnYTBdbmdPqtAMMvH47GGymks5rX_TagaJpZM4LzXb->
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/275#issuecomment-276586093,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s","Exciting!
We can use just standard STL vectors, instead of doing memory management ourselves. At least for Get operations there should  be no performance difference. Use of realloc is just a legacy of the original C-version htable.
I agree that we should retire HTable, especially if the new one is functionality-wise identical. Performance tuning is something that we can do anytime, so let's not worry much about subtle performance difference.
There is one issue we need to resolve though; ExactMatch and WildcardMatch modules uses a variable key type with variable size. HTable can be used with variable-sized keys (although the comment says differently), while CuckooMap is not.
I think the right way to address this issue is to modify ExactMatch/WildcardMatch modules, rather than extending CuckooMap.",True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/changlan,5,https://github.com/NetSys/bess/pull/275#issuecomment-276806042,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s",Fixed. Will submit another PR to retire HTable.,True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/275#issuecomment-277052854,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/275#issuecomment-277054860,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s","Test
Throughput




HTableFixture/BessInlinedGet/16k
59.3508M items/s


HTableFixture/BessInlinedGet/64k
60.5671M items/s


HTableFixture/CuckooMapInlinedGet/16k
112.459M items/s


HTableFixture/CuckooMapInlinedGet/64k
23.3109M items/s



Perhaps these cases are of particular interest (due to some cache effect?). This tool might be helpful.",True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/changlan,8,https://github.com/NetSys/bess/pull/275#issuecomment-277110289,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s","Ran the benchmark on a real server again (instead of a VM). The performance dips almost disappeared:
HTableFixture/BessInlinedGet/4                     4 ns          4 ns  193323816   263.261M items/s
HTableFixture/BessInlinedGet/16                    5 ns          5 ns  149898628   204.469M items/s
HTableFixture/BessInlinedGet/64                    4 ns          4 ns  165493449   225.411M items/s
HTableFixture/BessInlinedGet/256                   4 ns          4 ns  166376239   226.648M items/s
HTableFixture/BessInlinedGet/1024                  4 ns          4 ns  163369565   221.675M items/s
HTableFixture/BessInlinedGet/4096                 10 ns         10 ns   70835273   97.2204M items/s
HTableFixture/BessInlinedGet/16384                18 ns         18 ns   39045679   53.1425M items/s
HTableFixture/BessInlinedGet/65536                18 ns         18 ns   37917408   51.6592M items/s
HTableFixture/BessInlinedGet/262144               18 ns         18 ns   37895598    51.626M items/s
HTableFixture/BessInlinedGet/1048576              19 ns         19 ns   36848965   50.6127M items/s
HTableFixture/BessInlinedGet/4194304              32 ns         32 ns   22189629   30.1088M items/s
HTableFixture/CuckooMapInlinedGet/4                4 ns          4 ns  181899445   247.838M items/s
HTableFixture/CuckooMapInlinedGet/16               5 ns          5 ns  154198934   210.076M items/s
HTableFixture/CuckooMapInlinedGet/64               4 ns          4 ns  157598207   214.703M items/s
HTableFixture/CuckooMapInlinedGet/256              4 ns          4 ns  156361179       213M items/s
HTableFixture/CuckooMapInlinedGet/1024             6 ns          6 ns  121876720   165.542M items/s
HTableFixture/CuckooMapInlinedGet/4096             8 ns          8 ns   88332436    120.99M items/s
HTableFixture/CuckooMapInlinedGet/16384           10 ns         10 ns   69383663   94.6998M items/s
HTableFixture/CuckooMapInlinedGet/65536            9 ns          9 ns   74769855   102.064M items/s
HTableFixture/CuckooMapInlinedGet/262144          17 ns         17 ns   38033526   54.5866M items/s
HTableFixture/CuckooMapInlinedGet/1048576         29 ns         29 ns   24468291    33.398M items/s
HTableFixture/CuckooMapInlinedGet/4194304         31 ns         31 ns   22751040   30.9477M items/s",True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/275#issuecomment-277111072,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s","Now the new one outperforms by 2x for 16k and 64k..?
If the result looks different run by run, perhaps the oddity comes from some alignment issue..?",True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/changlan,10,https://github.com/NetSys/bess/pull/275#issuecomment-277111907,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s","Yep, it consistently outperforms by 2x on the bare-metal server.",True,{}
NetSys/bess,https://github.com/NetSys/bess,275,2017-02-01T00:51:50Z,2017-02-02T19:11:43Z,2017-02-03T01:06:05Z,MERGED,True,450,0,3,https://github.com/changlan,Add CuckooMap,1,[],https://github.com/NetSys/bess/pull/275,https://github.com/sangjinhan,11,https://github.com/NetSys/bess/pull/275#issuecomment-277135666,"CuckooMap is a re-implementation of HTableBase/HTable in C++, which should be easier to use. We should also make a call about whether to obsolete the old HTableBase/HTable class, since there are still some performance differences between the two. (@sangjinhan Do you know why?)
Performance test on my laptop:
Run on (2 X 3100 MHz CPU s)
2017-02-01 00:41:50
***WARNING*** Library was built as DEBUG. Timings may be affected.
Benchmark                                        Time           CPU Iterations
------------------------------------------------------------------------------
HTableFixture/BessGet/4                         12 ns         12 ns   59760123    81.908M items/s
HTableFixture/BessGet/16                        13 ns         13 ns   51220177   75.7545M items/s
HTableFixture/BessGet/64                        12 ns         12 ns   55772978   77.6166M items/s
HTableFixture/BessGet/256                       19 ns         19 ns   45307156   51.4939M items/s
HTableFixture/BessGet/1024                      19 ns         19 ns   34998986   51.2979M items/s
HTableFixture/BessGet/4k                        24 ns         24 ns   30117613   39.0721M items/s
HTableFixture/BessGet/16k                       31 ns         31 ns   26598897   30.9128M items/s
HTableFixture/BessGet/64k                       35 ns         35 ns   16286704   27.4377M items/s
HTableFixture/BessGet/256k                      67 ns         67 ns   10090639   14.2278M items/s
HTableFixture/BessGet/1024k                     96 ns         95 ns    7213336   9.99544M items/s
HTableFixture/BessInlinedGet/4                   3 ns          3 ns  231264211    304.49M items/s
HTableFixture/BessInlinedGet/16                  4 ns          4 ns  176768681   239.973M items/s
HTableFixture/BessInlinedGet/64                  4 ns          4 ns  196084934   266.154M items/s
HTableFixture/BessInlinedGet/256                 4 ns          4 ns  196217411   270.817M items/s
HTableFixture/BessInlinedGet/1024                4 ns          4 ns  190971570   241.514M items/s
HTableFixture/BessInlinedGet/4k                  9 ns          9 ns   73837645   110.465M items/s
HTableFixture/BessInlinedGet/16k                16 ns         16 ns   48800422   59.3508M items/s
HTableFixture/BessInlinedGet/64k                16 ns         16 ns   43832130   60.5671M items/s
HTableFixture/BessInlinedGet/256k               35 ns         35 ns   18817139   27.1261M items/s
HTableFixture/BessInlinedGet/1024k              50 ns         50 ns   10000000   18.9119M items/s
HTableFixture/CuckooMapInlinedGet/4              3 ns          3 ns  245701128   343.512M items/s
HTableFixture/CuckooMapInlinedGet/16             4 ns          4 ns  184277310   227.769M items/s
HTableFixture/CuckooMapInlinedGet/64             4 ns          4 ns  164592249   229.898M items/s
HTableFixture/CuckooMapInlinedGet/256            4 ns          4 ns  174026201   230.333M items/s
HTableFixture/CuckooMapInlinedGet/1024           5 ns          5 ns  130955084   195.433M items/s
HTableFixture/CuckooMapInlinedGet/4k             5 ns          5 ns  120370723   182.016M items/s
HTableFixture/CuckooMapInlinedGet/16k            8 ns          8 ns   85845310   112.459M items/s
HTableFixture/CuckooMapInlinedGet/64k           41 ns         41 ns   17347395   23.3109M items/s
HTableFixture/CuckooMapInlinedGet/256k          55 ns         55 ns   12863429   17.2977M items/s
HTableFixture/CuckooMapInlinedGet/1024k         54 ns         54 ns   17099507   17.5932M items/s
HTableFixture/STLUnorderedMapGet/4              14 ns         14 ns   50579583   67.4564M items/s
HTableFixture/STLUnorderedMapGet/16             15 ns         15 ns   46794735   64.6603M items/s
HTableFixture/STLUnorderedMapGet/64             15 ns         15 ns   46970834   63.1689M items/s
HTableFixture/STLUnorderedMapGet/256            15 ns         15 ns   46294849   62.9837M items/s
HTableFixture/STLUnorderedMapGet/1024           17 ns         17 ns   42070981   57.5958M items/s
HTableFixture/STLUnorderedMapGet/4k             21 ns         21 ns   34000828   46.3679M items/s
HTableFixture/STLUnorderedMapGet/16k            25 ns         25 ns   27502445   37.7127M items/s
HTableFixture/STLUnorderedMapGet/64k            43 ns         43 ns   12836915   22.0371M items/s
HTableFixture/STLUnorderedMapGet/256k           88 ns         88 ns    7365466   10.7965M items/s
HTableFixture/STLUnorderedMapGet/1024k         173 ns        173 ns    3572826   5.50022M items/s",Nice!,True,{}
NetSys/bess,https://github.com/NetSys/bess,276,2017-02-01T09:32:07Z,2017-02-03T19:15:03Z,2017-02-04T23:05:42Z,MERGED,True,221,111,6,https://github.com/sangjinhan,"Improve CLI usability, including crashlog support",12,[],https://github.com/NetSys/bess/pull/276,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/276,"This PR has a series of usability patches (mainly for the CLI and crashlog), addressing some issues including the following:

When bessd process crashes due to a failure from gRPC thread, a deadlock may occur. From user's viewpoint, bessctl gets stuck without knowing what's happening.
If bessctl commands/scripts trigger a failure of bessd process for whatever reason, it now prints out the crashlog (the stack backtrace of the troubling bessd thread). bessctl can catch synchronous and asynchronous (failures happening in background, mostly due to a worker thread crash)
Error output is now colored, if the stderr is a termnial.","This PR has a series of usability patches (mainly for the CLI and crashlog), addressing some issues including the following:

When bessd process crashes due to a failure from gRPC thread, a deadlock may occur. From user's viewpoint, bessctl gets stuck without knowing what's happening.
If bessctl commands/scripts trigger a failure of bessd process for whatever reason, it now prints out the crashlog (the stack backtrace of the troubling bessd thread). bessctl can catch synchronous and asynchronous (failures happening in background, mostly due to a worker thread crash)
Error output is now colored, if the stderr is a termnial.",True,{}
NetSys/bess,https://github.com/NetSys/bess,276,2017-02-01T09:32:07Z,2017-02-03T19:15:03Z,2017-02-04T23:05:42Z,MERGED,True,221,111,6,https://github.com/sangjinhan,"Improve CLI usability, including crashlog support",12,[],https://github.com/NetSys/bess/pull/276,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/276#issuecomment-276815137,"This PR has a series of usability patches (mainly for the CLI and crashlog), addressing some issues including the following:

When bessd process crashes due to a failure from gRPC thread, a deadlock may occur. From user's viewpoint, bessctl gets stuck without knowing what's happening.
If bessctl commands/scripts trigger a failure of bessd process for whatever reason, it now prints out the crashlog (the stack backtrace of the troubling bessd thread). bessctl can catch synchronous and asynchronous (failures happening in background, mostly due to a worker thread crash)
Error output is now colored, if the stderr is a termnial.","Yup, updated with pep8 fixes.",True,{}
NetSys/bess,https://github.com/NetSys/bess,276,2017-02-01T09:32:07Z,2017-02-03T19:15:03Z,2017-02-04T23:05:42Z,MERGED,True,221,111,6,https://github.com/sangjinhan,"Improve CLI usability, including crashlog support",12,[],https://github.com/NetSys/bess/pull/276,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/276#issuecomment-277336070,"This PR has a series of usability patches (mainly for the CLI and crashlog), addressing some issues including the following:

When bessd process crashes due to a failure from gRPC thread, a deadlock may occur. From user's viewpoint, bessctl gets stuck without knowing what's happening.
If bessctl commands/scripts trigger a failure of bessd process for whatever reason, it now prints out the crashlog (the stack backtrace of the troubling bessd thread). bessctl can catch synchronous and asynchronous (failures happening in background, mostly due to a worker thread crash)
Error output is now colored, if the stderr is a termnial.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,277,2017-02-03T01:07:14Z,2017-02-04T06:04:31Z,2017-02-04T06:07:00Z,MERGED,True,67,90,2,https://github.com/sangjinhan,Fix memory hogging bug in flowgen,3,[],https://github.com/NetSys/bess/pull/277,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/277,"When the event queue (priority_queue) is empty, top() returns a garbage value. It results in an infinite loop, pushing a (garbage) flow to the pool for each iteration.
Another issue addressed: the pool of free flow structs is sized 120% of the number of average concurrent connections. Since now Update() command can change the load level at runtime, the pool size should not be hard-limited. Now the pool grows dynamically as needed.","When the event queue (priority_queue) is empty, top() returns a garbage value. It results in an infinite loop, pushing a (garbage) flow to the pool for each iteration.
Another issue addressed: the pool of free flow structs is sized 120% of the number of average concurrent connections. Since now Update() command can change the load level at runtime, the pool size should not be hard-limited. Now the pool grows dynamically as needed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,277,2017-02-03T01:07:14Z,2017-02-04T06:04:31Z,2017-02-04T06:07:00Z,MERGED,True,67,90,2,https://github.com/sangjinhan,Fix memory hogging bug in flowgen,3,[],https://github.com/NetSys/bess/pull/277,https://github.com/barath,2,https://github.com/NetSys/bess/pull/277#issuecomment-277422077,"When the event queue (priority_queue) is empty, top() returns a garbage value. It results in an infinite loop, pushing a (garbage) flow to the pool for each iteration.
Another issue addressed: the pool of free flow structs is sized 120% of the number of average concurrent connections. Since now Update() command can change the load level at runtime, the pool size should not be hard-limited. Now the pool grows dynamically as needed.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,278,2017-02-04T01:29:48Z,2017-02-13T20:19:37Z,2017-02-15T22:20:48Z,MERGED,True,711,1542,16,https://github.com/changlan,Replace HTable with CuckooMap,9,[],https://github.com/NetSys/bess/pull/278,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/278,"Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile","Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile",True,{}
NetSys/bess,https://github.com/NetSys/bess,278,2017-02-04T01:29:48Z,2017-02-13T20:19:37Z,2017-02-15T22:20:48Z,MERGED,True,711,1542,16,https://github.com/changlan,Replace HTable with CuckooMap,9,[],https://github.com/NetSys/bess/pull/278,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/278#issuecomment-277409528,"Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile",Make cannot build target 'utils/cuckoo_map_bench'. Odd..,True,{}
NetSys/bess,https://github.com/NetSys/bess,278,2017-02-04T01:29:48Z,2017-02-13T20:19:37Z,2017-02-15T22:20:48Z,MERGED,True,711,1542,16,https://github.com/changlan,Replace HTable with CuckooMap,9,[],https://github.com/NetSys/bess/pull/278,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/278#issuecomment-277410439,"Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile","The current Makefile requires you have utils/cuckoo_map.cc, I suppose?",True,{}
NetSys/bess,https://github.com/NetSys/bess,278,2017-02-04T01:29:48Z,2017-02-13T20:19:37Z,2017-02-15T22:20:48Z,MERGED,True,711,1542,16,https://github.com/changlan,Replace HTable with CuckooMap,9,[],https://github.com/NetSys/bess/pull/278,https://github.com/barath,4,https://github.com/NetSys/bess/pull/278#issuecomment-277480012,"Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile","Could you add a usage comment to the .h file (before the class declaration), briefly giving an example of how to use it (any maybe noting any differences from similar STL containers in its behavior / API / guarantees)?",True,{}
NetSys/bess,https://github.com/NetSys/bess,278,2017-02-04T01:29:48Z,2017-02-13T20:19:37Z,2017-02-15T22:20:48Z,MERGED,True,711,1542,16,https://github.com/changlan,Replace HTable with CuckooMap,9,[],https://github.com/NetSys/bess/pull/278,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/278#issuecomment-277609505,"Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile","How does it compare with HTable, when it comes to samples/exactmatch and samples/wildcardmatch examples?",True,{}
NetSys/bess,https://github.com/NetSys/bess,278,2017-02-04T01:29:48Z,2017-02-13T20:19:37Z,2017-02-15T22:20:48Z,MERGED,True,711,1542,16,https://github.com/changlan,Replace HTable with CuckooMap,9,[],https://github.com/NetSys/bess/pull/278,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/278#issuecomment-277789069,"Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile","Overheads shown by perf top:
ExactMatch::ProcessBatch: 42% -> 44%
WildcardMatch::LookupEntry: 53% -> 49%
WildcardMatch::ProcessBatch: 9% -> 14%",True,{}
NetSys/bess,https://github.com/NetSys/bess,278,2017-02-04T01:29:48Z,2017-02-13T20:19:37Z,2017-02-15T22:20:48Z,MERGED,True,711,1542,16,https://github.com/changlan,Replace HTable with CuckooMap,9,[],https://github.com/NetSys/bess/pull/278,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/278#issuecomment-277826927,"Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile","What perf shows is relative percent overhead, which is not directly proportional to per-packet cost. With samples/wildcardmatch, the throughput is 13.16 Mpps (new) vs 16.75 Mpps (old). Let's think about what we can do to narrow the gap...",True,{}
NetSys/bess,https://github.com/NetSys/bess,278,2017-02-04T01:29:48Z,2017-02-13T20:19:37Z,2017-02-15T22:20:48Z,MERGED,True,711,1542,16,https://github.com/changlan,Replace HTable with CuckooMap,9,[],https://github.com/NetSys/bess/pull/278,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/278#issuecomment-279207727,"Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile","@changlan I fixed the following correctness issues (and did a bit of microoptimization to compensate the overhead introduced by the patches). Please review (and merge if no other issues are found).

When the bucket table expands, already hashed items must be relocated
Find() can fail if multiple keys share the same hash value.
WildcardMatch may use keys with garbage padding bytes, if total_key_size_ is not a multiple of 8",True,{}
NetSys/bess,https://github.com/NetSys/bess,278,2017-02-04T01:29:48Z,2017-02-13T20:19:37Z,2017-02-15T22:20:48Z,MERGED,True,711,1542,16,https://github.com/changlan,Replace HTable with CuckooMap,9,[],https://github.com/NetSys/bess/pull/278,https://github.com/changlan,9,https://github.com/NetSys/bess/pull/278#issuecomment-279510312,"Replace HTable with CuckooMap
Remove HTable
Add iterators, begin, end.
Remove *_bench's dependency on *.o in Makefile",Wonderful. Thanks Sangjin!,True,{}
NetSys/bess,https://github.com/NetSys/bess,279,2017-02-04T23:04:43Z,2017-02-06T06:30:27Z,2017-02-10T00:14:02Z,MERGED,True,0,1,1,https://github.com/changlan,Do not run google benchmarks on CI,1,[],https://github.com/NetSys/bess/pull/279,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/279,... in order to reduce the feedback time. Running benchmarks on CI is not useful as the performance numbers are not very precise.,... in order to reduce the feedback time. Running benchmarks on CI is not useful as the performance numbers are not very precise.,True,{}
NetSys/bess,https://github.com/NetSys/bess,279,2017-02-04T23:04:43Z,2017-02-06T06:30:27Z,2017-02-10T00:14:02Z,MERGED,True,0,1,1,https://github.com/changlan,Do not run google benchmarks on CI,1,[],https://github.com/NetSys/bess/pull/279,https://github.com/barath,2,https://github.com/NetSys/bess/pull/279#issuecomment-277484922,... in order to reduce the feedback time. Running benchmarks on CI is not useful as the performance numbers are not very precise.,"Just as a general (future) thing to be aware of: we should ensure that any code paths that are executed in benchmarks are also covered in unit tests, so that the elimination of benchmarks in Travis won't leave us unaware of any bugs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,279,2017-02-04T23:04:43Z,2017-02-06T06:30:27Z,2017-02-10T00:14:02Z,MERGED,True,0,1,1,https://github.com/changlan,Do not run google benchmarks on CI,1,[],https://github.com/NetSys/bess/pull/279,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/279#issuecomment-277596867,... in order to reduce the feedback time. Running benchmarks on CI is not useful as the performance numbers are not very precise.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,280,2017-02-06T06:36:55Z,2017-02-06T14:33:25Z,2017-02-06T14:34:35Z,MERGED,True,64,69,2,https://github.com/sangjinhan,Fix Makefile issues,2,[],https://github.com/NetSys/bess/pull/280,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/280,"Use canonical filename for protobuf targets

protoc does not handle bar/../foo.proto correctly. This often causes build failures with parallel build (make -j)


Allow *_bench.o for header-only code (#278)
Clean up Makefile style issues

Indentation should be hard tabs, which are 8-chars wide
Remove trailing whitespace
Prefer simply expanded variables := to =
Use non-nested conditional statements
Use $$ only when it is necessary


Rename CORE_OBJS -> LIB_OBJS","Use canonical filename for protobuf targets

protoc does not handle bar/../foo.proto correctly. This often causes build failures with parallel build (make -j)


Allow *_bench.o for header-only code (#278)
Clean up Makefile style issues

Indentation should be hard tabs, which are 8-chars wide
Remove trailing whitespace
Prefer simply expanded variables := to =
Use non-nested conditional statements
Use $$ only when it is necessary


Rename CORE_OBJS -> LIB_OBJS",True,{}
NetSys/bess,https://github.com/NetSys/bess,280,2017-02-06T06:36:55Z,2017-02-06T14:33:25Z,2017-02-06T14:34:35Z,MERGED,True,64,69,2,https://github.com/sangjinhan,Fix Makefile issues,2,[],https://github.com/NetSys/bess/pull/280,https://github.com/barath,2,https://github.com/NetSys/bess/pull/280#issuecomment-277699514,"Use canonical filename for protobuf targets

protoc does not handle bar/../foo.proto correctly. This often causes build failures with parallel build (make -j)


Allow *_bench.o for header-only code (#278)
Clean up Makefile style issues

Indentation should be hard tabs, which are 8-chars wide
Remove trailing whitespace
Prefer simply expanded variables := to =
Use non-nested conditional statements
Use $$ only when it is necessary


Rename CORE_OBJS -> LIB_OBJS",,True,{}
NetSys/bess,https://github.com/NetSys/bess,281,2017-02-07T04:06:41Z,2017-02-07T05:48:15Z,2017-02-07T05:50:17Z,MERGED,True,2,2,1,https://github.com/justinemarie,Fix printing error in testing script.,1,[],https://github.com/NetSys/bess/pull/281,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/281,Josh found a bug in the testing script only triggered when there are errors :-),Josh found a bug in the testing script only triggered when there are errors :-),True,{}
NetSys/bess,https://github.com/NetSys/bess,281,2017-02-07T04:06:41Z,2017-02-07T05:48:15Z,2017-02-07T05:50:17Z,MERGED,True,2,2,1,https://github.com/justinemarie,Fix printing error in testing script.,1,[],https://github.com/NetSys/bess/pull/281,https://github.com/barath,2,https://github.com/NetSys/bess/pull/281#issuecomment-277908085,Josh found a bug in the testing script only triggered when there are errors :-),,True,{}
NetSys/bess,https://github.com/NetSys/bess,282,2017-02-07T23:06:36Z,2017-02-08T19:05:51Z,2017-02-08T19:06:18Z,MERGED,True,133,17,7,https://github.com/melvinw,allow argument updates for certain traffic classes,1,[],https://github.com/NetSys/bess/pull/282,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/282,This may be useful for certain applications. Right now it only supports the rate limit TC.,This may be useful for certain applications. Right now it only supports the rate limit TC.,True,{}
NetSys/bess,https://github.com/NetSys/bess,282,2017-02-07T23:06:36Z,2017-02-08T19:05:51Z,2017-02-08T19:06:18Z,MERGED,True,133,17,7,https://github.com/melvinw,allow argument updates for certain traffic classes,1,[],https://github.com/NetSys/bess/pull/282,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/282#issuecomment-278244259,This may be useful for certain applications. Right now it only supports the rate limit TC.,All fixed up,True,{}
NetSys/bess,https://github.com/NetSys/bess,282,2017-02-07T23:06:36Z,2017-02-08T19:05:51Z,2017-02-08T19:06:18Z,MERGED,True,133,17,7,https://github.com/melvinw,allow argument updates for certain traffic classes,1,[],https://github.com/NetSys/bess/pull/282,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/282#issuecomment-278428860,This may be useful for certain applications. Right now it only supports the rate limit TC.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,283,2017-02-08T08:13:26Z,2017-02-13T23:59:52Z,2017-02-14T00:00:10Z,MERGED,True,128,2,6,https://github.com/c2tonyc2,Module UpdateTTL initial commit,4,[],https://github.com/NetSys/bess/pull/283,https://github.com/c2tonyc2,1,https://github.com/NetSys/bess/pull/283,"Quick checksum modification code is commented out and marked as TODO.
NOTE as a result of no checksum updating done by the module, my test has been written to reflect this by manually creating a packet with modified TTL but unmodified checksum (lines 15 -17 in update_ttl.py)


Proposed a slight modification to testing framework to allow more flexibility in packet creation, made the additional parameter (ip_ttl) default to 64 which is the scapy default ttl value to not interrupt past tests.


Formatted the .cpp and .h with clang-format -style=Google","Quick checksum modification code is commented out and marked as TODO.
NOTE as a result of no checksum updating done by the module, my test has been written to reflect this by manually creating a packet with modified TTL but unmodified checksum (lines 15 -17 in update_ttl.py)


Proposed a slight modification to testing framework to allow more flexibility in packet creation, made the additional parameter (ip_ttl) default to 64 which is the scapy default ttl value to not interrupt past tests.


Formatted the .cpp and .h with clang-format -style=Google",True,{}
NetSys/bess,https://github.com/NetSys/bess,283,2017-02-08T08:13:26Z,2017-02-13T23:59:52Z,2017-02-14T00:00:10Z,MERGED,True,128,2,6,https://github.com/c2tonyc2,Module UpdateTTL initial commit,4,[],https://github.com/NetSys/bess/pull/283,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/283#issuecomment-278261529,"Quick checksum modification code is commented out and marked as TODO.
NOTE as a result of no checksum updating done by the module, my test has been written to reflect this by manually creating a packet with modified TTL but unmodified checksum (lines 15 -17 in update_ttl.py)


Proposed a slight modification to testing framework to allow more flexibility in packet creation, made the additional parameter (ip_ttl) default to 64 which is the scapy default ttl value to not interrupt past tests.


Formatted the .cpp and .h with clang-format -style=Google","Can you run git config user.name and/or git config user.email in your dev env and resubmit? The commit log thinks ""vagrant"" wrote your code",True,{}
NetSys/bess,https://github.com/NetSys/bess,283,2017-02-08T08:13:26Z,2017-02-13T23:59:52Z,2017-02-14T00:00:10Z,MERGED,True,128,2,6,https://github.com/c2tonyc2,Module UpdateTTL initial commit,4,[],https://github.com/NetSys/bess/pull/283,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/283#issuecomment-278410579,"Quick checksum modification code is commented out and marked as TODO.
NOTE as a result of no checksum updating done by the module, my test has been written to reflect this by manually creating a packet with modified TTL but unmodified checksum (lines 15 -17 in update_ttl.py)


Proposed a slight modification to testing framework to allow more flexibility in packet creation, made the additional parameter (ip_ttl) default to 64 which is the scapy default ttl value to not interrupt past tests.


Formatted the .cpp and .h with clang-format -style=Google","Note that Travis failed, but here it looks like an error in the module-testing script (which is my fault) -- I'll take a look.",True,{}
NetSys/bess,https://github.com/NetSys/bess,283,2017-02-08T08:13:26Z,2017-02-13T23:59:52Z,2017-02-14T00:00:10Z,MERGED,True,128,2,6,https://github.com/c2tonyc2,Module UpdateTTL initial commit,4,[],https://github.com/NetSys/bess/pull/283,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/283#issuecomment-278423142,"Quick checksum modification code is commented out and marked as TODO.
NOTE as a result of no checksum updating done by the module, my test has been written to reflect this by manually creating a packet with modified TTL but unmodified checksum (lines 15 -17 in update_ttl.py)


Proposed a slight modification to testing framework to allow more flexibility in packet creation, made the additional parameter (ip_ttl) default to 64 which is the scapy default ttl value to not interrupt past tests.


Formatted the .cpp and .h with clang-format -style=Google",Travis bug is fixed with: #285,True,{}
NetSys/bess,https://github.com/NetSys/bess,283,2017-02-08T08:13:26Z,2017-02-13T23:59:52Z,2017-02-14T00:00:10Z,MERGED,True,128,2,6,https://github.com/c2tonyc2,Module UpdateTTL initial commit,4,[],https://github.com/NetSys/bess/pull/283,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/283#issuecomment-279054297,"Quick checksum modification code is commented out and marked as TODO.
NOTE as a result of no checksum updating done by the module, my test has been written to reflect this by manually creating a packet with modified TTL but unmodified checksum (lines 15 -17 in update_ttl.py)


Proposed a slight modification to testing framework to allow more flexibility in packet creation, made the additional parameter (ip_ttl) default to 64 which is the scapy default ttl value to not interrupt past tests.


Formatted the .cpp and .h with clang-format -style=Google","Hi Tony,
Let's aim to have this merged on Monday?
Justine",True,{}
NetSys/bess,https://github.com/NetSys/bess,283,2017-02-08T08:13:26Z,2017-02-13T23:59:52Z,2017-02-14T00:00:10Z,MERGED,True,128,2,6,https://github.com/c2tonyc2,Module UpdateTTL initial commit,4,[],https://github.com/NetSys/bess/pull/283,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/283#issuecomment-279307800,"Quick checksum modification code is commented out and marked as TODO.
NOTE as a result of no checksum updating done by the module, my test has been written to reflect this by manually creating a packet with modified TTL but unmodified checksum (lines 15 -17 in update_ttl.py)


Proposed a slight modification to testing framework to allow more flexibility in packet creation, made the additional parameter (ip_ttl) default to 64 which is the scapy default ttl value to not interrupt past tests.


Formatted the .cpp and .h with clang-format -style=Google","Assuming you have pulled the latest master branch, git rebase master should do the trick.",True,{}
NetSys/bess,https://github.com/NetSys/bess,283,2017-02-08T08:13:26Z,2017-02-13T23:59:52Z,2017-02-14T00:00:10Z,MERGED,True,128,2,6,https://github.com/c2tonyc2,Module UpdateTTL initial commit,4,[],https://github.com/NetSys/bess/pull/283,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/283#issuecomment-279563675,"Quick checksum modification code is commented out and marked as TODO.
NOTE as a result of no checksum updating done by the module, my test has been written to reflect this by manually creating a packet with modified TTL but unmodified checksum (lines 15 -17 in update_ttl.py)


Proposed a slight modification to testing framework to allow more flexibility in packet creation, made the additional parameter (ip_ttl) default to 64 which is the scapy default ttl value to not interrupt past tests.


Formatted the .cpp and .h with clang-format -style=Google",Thank you!,True,{'LAUGH': ['https://github.com/c2tonyc2']}
NetSys/bess,https://github.com/NetSys/bess,284,2017-02-08T08:40:46Z,2017-02-15T21:50:46Z,2017-02-15T21:50:46Z,CLOSED,False,717,5,6,https://github.com/TheJStone,Multi-Level Feedback Queue Module,24,[],https://github.com/NetSys/bess/pull/284,https://github.com/TheJStone,1,https://github.com/NetSys/bess/pull/284,"/*
The Multi-Level Feedback Queue module queues from one input gate to one output gate without any packet modification. Queue is set up as having specified number of priority levels where each Flow will be assigned based on its priority. The priority for each flow is calculated as a function of Flow throughput and average load of the Module. After receiving a batch to process, in which each packet is assigned to a flow based on their 5 tuple, The module will find the highest priority level and split the current return batch size between the all of this levels flows evenly. The module will then query those flows for packets based on this evenly split batch size. The module will then return this new packet batch.
based on this idea:
  https://en.wikipedia.org/wiki/Multilevel_feedback_queue



EXPECTS: Input packets in any format


MODIFICATIONS: None


INPUT GATES: 1


OUTPUT GATES: 1


PARAMETERS:

Batch size: the size of the output batches
Number of levels: Number of levels in the Multi-Level Flow Queue
Initial Load: the predicted average load of the module as a initial base to calculate priorities
Max Flow Queue Size: the maximum size that any Flows queue can get before the module will start dropping the flows packets



COMMANDS

update Batch Size: can be done live
update Number of levels: cannot not be done live
update Max Flow Queue Size: can be fone live","/*
The Multi-Level Feedback Queue module queues from one input gate to one output gate without any packet modification. Queue is set up as having specified number of priority levels where each Flow will be assigned based on its priority. The priority for each flow is calculated as a function of Flow throughput and average load of the Module. After receiving a batch to process, in which each packet is assigned to a flow based on their 5 tuple, The module will find the highest priority level and split the current return batch size between the all of this levels flows evenly. The module will then query those flows for packets based on this evenly split batch size. The module will then return this new packet batch.
based on this idea:
  https://en.wikipedia.org/wiki/Multilevel_feedback_queue



EXPECTS: Input packets in any format


MODIFICATIONS: None


INPUT GATES: 1


OUTPUT GATES: 1


PARAMETERS:

Batch size: the size of the output batches
Number of levels: Number of levels in the Multi-Level Flow Queue
Initial Load: the predicted average load of the module as a initial base to calculate priorities
Max Flow Queue Size: the maximum size that any Flows queue can get before the module will start dropping the flows packets



COMMANDS

update Batch Size: can be done live
update Number of levels: cannot not be done live
update Max Flow Queue Size: can be fone live",True,{}
NetSys/bess,https://github.com/NetSys/bess,284,2017-02-08T08:40:46Z,2017-02-15T21:50:46Z,2017-02-15T21:50:46Z,CLOSED,False,717,5,6,https://github.com/TheJStone,Multi-Level Feedback Queue Module,24,[],https://github.com/NetSys/bess/pull/284,https://github.com/barath,2,https://github.com/NetSys/bess/pull/284#issuecomment-278350154,"/*
The Multi-Level Feedback Queue module queues from one input gate to one output gate without any packet modification. Queue is set up as having specified number of priority levels where each Flow will be assigned based on its priority. The priority for each flow is calculated as a function of Flow throughput and average load of the Module. After receiving a batch to process, in which each packet is assigned to a flow based on their 5 tuple, The module will find the highest priority level and split the current return batch size between the all of this levels flows evenly. The module will then query those flows for packets based on this evenly split batch size. The module will then return this new packet batch.
based on this idea:
  https://en.wikipedia.org/wiki/Multilevel_feedback_queue



EXPECTS: Input packets in any format


MODIFICATIONS: None


INPUT GATES: 1


OUTPUT GATES: 1


PARAMETERS:

Batch size: the size of the output batches
Number of levels: Number of levels in the Multi-Level Flow Queue
Initial Load: the predicted average load of the module as a initial base to calculate priorities
Max Flow Queue Size: the maximum size that any Flows queue can get before the module will start dropping the flows packets



COMMANDS

update Batch Size: can be done live
update Number of levels: cannot not be done live
update Max Flow Queue Size: can be fone live","My first pass of comments are largely stylistic and structural -- I'll dig into the functionality in the next pass, after you've gone through these and had a chance make edits.
Also, please go ahead and update the PR description (can be the same as the updated module class comment) with details on the structure / behavior of this multilevel queue.",True,{}
NetSys/bess,https://github.com/NetSys/bess,284,2017-02-08T08:40:46Z,2017-02-15T21:50:46Z,2017-02-15T21:50:46Z,CLOSED,False,717,5,6,https://github.com/TheJStone,Multi-Level Feedback Queue Module,24,[],https://github.com/NetSys/bess/pull/284,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/284#issuecomment-278408659,"/*
The Multi-Level Feedback Queue module queues from one input gate to one output gate without any packet modification. Queue is set up as having specified number of priority levels where each Flow will be assigned based on its priority. The priority for each flow is calculated as a function of Flow throughput and average load of the Module. After receiving a batch to process, in which each packet is assigned to a flow based on their 5 tuple, The module will find the highest priority level and split the current return batch size between the all of this levels flows evenly. The module will then query those flows for packets based on this evenly split batch size. The module will then return this new packet batch.
based on this idea:
  https://en.wikipedia.org/wiki/Multilevel_feedback_queue



EXPECTS: Input packets in any format


MODIFICATIONS: None


INPUT GATES: 1


OUTPUT GATES: 1


PARAMETERS:

Batch size: the size of the output batches
Number of levels: Number of levels in the Multi-Level Flow Queue
Initial Load: the predicted average load of the module as a initial base to calculate priorities
Max Flow Queue Size: the maximum size that any Flows queue can get before the module will start dropping the flows packets



COMMANDS

update Batch Size: can be done live
update Number of levels: cannot not be done live
update Max Flow Queue Size: can be fone live","Note that Travis failed. Josh, if you click through the continuous integration link it will show you the compilation errors --- in particular we compile with some strict checks so it could be that things passed in your environment but not with some other configuration. (I once had Travis find a bug that only turned up with g++6!)",True,{}
NetSys/bess,https://github.com/NetSys/bess,285,2017-02-08T18:45:12Z,2017-02-08T19:01:07Z,2017-02-08T19:18:05Z,MERGED,True,1,1,1,https://github.com/justinemarie,add module name to sockname to avoid socket-reuse between tests,2,[],https://github.com/NetSys/bess/pull/285,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/285,"When we create the UnixSockets for testing we need to create a new one for each test. Tony's code revealed a bug where socket names were being reused between tests for different modules, so I added the module name to make sure the socket doesn't get reused.
Would be great if this got merged quickly before our 1pm meeting with the undergrads.","When we create the UnixSockets for testing we need to create a new one for each test. Tony's code revealed a bug where socket names were being reused between tests for different modules, so I added the module name to make sure the socket doesn't get reused.
Would be great if this got merged quickly before our 1pm meeting with the undergrads.",True,{}
NetSys/bess,https://github.com/NetSys/bess,285,2017-02-08T18:45:12Z,2017-02-08T19:01:07Z,2017-02-08T19:18:05Z,MERGED,True,1,1,1,https://github.com/justinemarie,add module name to sockname to avoid socket-reuse between tests,2,[],https://github.com/NetSys/bess/pull/285,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/285#issuecomment-278425845,"When we create the UnixSockets for testing we need to create a new one for each test. Tony's code revealed a bug where socket names were being reused between tests for different modules, so I added the module name to make sure the socket doesn't get reused.
Would be great if this got merged quickly before our 1pm meeting with the undergrads.","Module names (in fact, all names) should be [_a-zA-Z][_a-zA-Z0-9]*. I guess the code verifying this condition was gone during the c++ porting. Could you replace - with _?",True,{}
NetSys/bess,https://github.com/NetSys/bess,285,2017-02-08T18:45:12Z,2017-02-08T19:01:07Z,2017-02-08T19:18:05Z,MERGED,True,1,1,1,https://github.com/justinemarie,add module name to sockname to avoid socket-reuse between tests,2,[],https://github.com/NetSys/bess/pull/285,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/285#issuecomment-278427640,"When we create the UnixSockets for testing we need to create a new one for each test. Tony's code revealed a bug where socket names were being reused between tests for different modules, so I added the module name to make sure the socket doesn't get reused.
Would be great if this got merged quickly before our 1pm meeting with the undergrads.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,286,2017-02-08T23:00:36Z,2017-02-09T00:11:41Z,2017-02-09T00:23:09Z,MERGED,True,1,1,1,https://github.com/c2tonyc2,Added -y flag to prevent playbook execution from hanging on confirmation,1,[],https://github.com/NetSys/bess/pull/286,https://github.com/c2tonyc2,1,https://github.com/NetSys/bess/pull/286,Fixed the minor error in the ansible playbook hanging on confirmation for the installation of linux headers,Fixed the minor error in the ansible playbook hanging on confirmation for the installation of linux headers,True,{}
NetSys/bess,https://github.com/NetSys/bess,286,2017-02-08T23:00:36Z,2017-02-09T00:11:41Z,2017-02-09T00:23:09Z,MERGED,True,1,1,1,https://github.com/c2tonyc2,Added -y flag to prevent playbook execution from hanging on confirmation,1,[],https://github.com/NetSys/bess/pull/286,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/286#issuecomment-278505397,Fixed the minor error in the ansible playbook hanging on confirmation for the installation of linux headers,"Thanks for the fix, Tony!",True,{}
NetSys/bess,https://github.com/NetSys/bess,287,2017-02-09T01:30:12Z,2017-03-01T00:26:11Z,2017-03-14T05:27:46Z,CLOSED,False,1,0,1,https://github.com/justinemarie,Stop crash if you free an empty packet batch,1,['notready'],https://github.com/NetSys/bess/pull/287,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/287,"So, there is an argument to be had whether or not we should have this -- I'm adding a check literally every time we free a packetbatch here. One could argue that it's the module's job to check that it's not handing in an empty packet batch -- in which case, I'll replace this pull request with one that just adds a comment saying ""DO NOT CALL WITH CNT == 0"".
That said, chasing down why things were crashing here was pretty obnoxious and I think it would be good to save future folks from shooting themselves in the foot. So, please discuss and let me know whether we prefer the comment or check route. This PR adds a check.","So, there is an argument to be had whether or not we should have this -- I'm adding a check literally every time we free a packetbatch here. One could argue that it's the module's job to check that it's not handing in an empty packet batch -- in which case, I'll replace this pull request with one that just adds a comment saying ""DO NOT CALL WITH CNT == 0"".
That said, chasing down why things were crashing here was pretty obnoxious and I think it would be good to save future folks from shooting themselves in the foot. So, please discuss and let me know whether we prefer the comment or check route. This PR adds a check.",True,{}
NetSys/bess,https://github.com/NetSys/bess,287,2017-02-09T01:30:12Z,2017-03-01T00:26:11Z,2017-03-14T05:27:46Z,CLOSED,False,1,0,1,https://github.com/justinemarie,Stop crash if you free an empty packet batch,1,['notready'],https://github.com/NetSys/bess/pull/287,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/287#issuecomment-278520435,"So, there is an argument to be had whether or not we should have this -- I'm adding a check literally every time we free a packetbatch here. One could argue that it's the module's job to check that it's not handing in an empty packet batch -- in which case, I'll replace this pull request with one that just adds a comment saying ""DO NOT CALL WITH CNT == 0"".
That said, chasing down why things were crashing here was pretty obnoxious and I think it would be good to save future folks from shooting themselves in the foot. So, please discuss and let me know whether we prefer the comment or check route. This PR adds a check.","I think adding the check is reasonable.
Please reformat the code..?
There are places where the check is done individually, e.g. modules/buffer.cc,
void Buffer::DeInit() {
  bess::PacketBatch *buf = &buf_;

  if (buf->cnt()) {   # <- now unnecessary
    bess::Packet::Free(buf);
  }
}

Could you find those spots and update them?",True,{}
NetSys/bess,https://github.com/NetSys/bess,287,2017-02-09T01:30:12Z,2017-03-01T00:26:11Z,2017-03-14T05:27:46Z,CLOSED,False,1,0,1,https://github.com/justinemarie,Stop crash if you free an empty packet batch,1,['notready'],https://github.com/NetSys/bess/pull/287,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/287#issuecomment-278521012,"So, there is an argument to be had whether or not we should have this -- I'm adding a check literally every time we free a packetbatch here. One could argue that it's the module's job to check that it's not handing in an empty packet batch -- in which case, I'll replace this pull request with one that just adds a comment saying ""DO NOT CALL WITH CNT == 0"".
That said, chasing down why things were crashing here was pretty obnoxious and I think it would be good to save future folks from shooting themselves in the foot. So, please discuss and let me know whether we prefer the comment or check route. This PR adds a check.",Another thing of the same theme is RunNextModule()/RunChooseModule() should not do anything if called with an empty batch. It would be great if someone can deal with this in a separate PR...,True,{}
NetSys/bess,https://github.com/NetSys/bess,287,2017-02-09T01:30:12Z,2017-03-01T00:26:11Z,2017-03-14T05:27:46Z,CLOSED,False,1,0,1,https://github.com/justinemarie,Stop crash if you free an empty packet batch,1,['notready'],https://github.com/NetSys/bess/pull/287,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/287#issuecomment-278521227,"So, there is an argument to be had whether or not we should have this -- I'm adding a check literally every time we free a packetbatch here. One could argue that it's the module's job to check that it's not handing in an empty packet batch -- in which case, I'll replace this pull request with one that just adds a comment saying ""DO NOT CALL WITH CNT == 0"".
That said, chasing down why things were crashing here was pretty obnoxious and I think it would be good to save future folks from shooting themselves in the foot. So, please discuss and let me know whether we prefer the comment or check route. This PR adds a check.","@sangjinhan That sounds like a great plan. Let's keep this PR open and I'll make those changes, and then we can merge altogether.",True,{}
NetSys/bess,https://github.com/NetSys/bess,287,2017-02-09T01:30:12Z,2017-03-01T00:26:11Z,2017-03-14T05:27:46Z,CLOSED,False,1,0,1,https://github.com/justinemarie,Stop crash if you free an empty packet batch,1,['notready'],https://github.com/NetSys/bess/pull/287,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/287#issuecomment-278521968,"So, there is an argument to be had whether or not we should have this -- I'm adding a check literally every time we free a packetbatch here. One could argue that it's the module's job to check that it's not handing in an empty packet batch -- in which case, I'll replace this pull request with one that just adds a comment saying ""DO NOT CALL WITH CNT == 0"".
That said, chasing down why things were crashing here was pretty obnoxious and I think it would be good to save future folks from shooting themselves in the foot. So, please discuss and let me know whether we prefer the comment or check route. This PR adds a check.","Great, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,287,2017-02-09T01:30:12Z,2017-03-01T00:26:11Z,2017-03-14T05:27:46Z,CLOSED,False,1,0,1,https://github.com/justinemarie,Stop crash if you free an empty packet batch,1,['notready'],https://github.com/NetSys/bess/pull/287,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/287#issuecomment-283205291,"So, there is an argument to be had whether or not we should have this -- I'm adding a check literally every time we free a packetbatch here. One could argue that it's the module's job to check that it's not handing in an empty packet batch -- in which case, I'll replace this pull request with one that just adds a comment saying ""DO NOT CALL WITH CNT == 0"".
That said, chasing down why things were crashing here was pretty obnoxious and I think it would be good to save future folks from shooting themselves in the foot. So, please discuss and let me know whether we prefer the comment or check route. This PR adds a check.",Let me take over this issue.,True,{}
NetSys/bess,https://github.com/NetSys/bess,288,2017-02-09T08:04:18Z,2017-02-09T19:18:07Z,2017-02-09T19:18:41Z,MERGED,True,2,0,1,https://github.com/melvinw,traffic_class: fix out-of-bounds access in RunTaks,1,[],https://github.com/NetSys/bess/pull/288,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/288,"Successive calls to RemoveTask() on a leaf traffic class with more than
one task attached to it may cause RunTasks() to reach beyond the limits
of its vector of tasks. This patch changes RemoveTask() to reset the
leaf's pointer into its task list to avoid overrunning it.
To recreate the buggy behavior, create any two modules that register tasks, then delete them one at a time.
$ ~/bess/bin/bessctl
Type ""help"" for more information.
<disconnected> $ daemon start
Done.
localhost:10514 $ add module Source
  The new module ""source0"" has been created
localhost:10514 $ add module Queue
  The new module ""queue0"" has been created
localhost:10514 $ delete module source0
localhost:10514 $ delete module queue0
localhost:10514 $ show module
<disconnected> $

Produces the following stack trace (ymmv, since it's reaching into garbage):
F0208 23:24:00.666764  3783 debug.cc:367] Backtrace (recent calls first) ---
(0): /home/melvin/bess/core/bessd(_ZN6Module7RunTaskEPv+0x47) [0x617927]
    Module::RunTask(void*) at /home/melvin/bess/core/module.cc:191
         188: void Module::DeInit() {}
         189:
         190: struct task_result Module::RunTask(void *) {
      -> 191:   CHECK(0);  // You must override this function
         192:   return task_result();
         193: }
         194:
(1): /home/melvin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x640664]
    Task::Scheduled() at /home/melvin/bess/core/task.cc:36
      -> 36:
(2): /home/melvin/bess/core/bessd(_ZN4bess9Scheduler12ScheduleLoopEv+0x3dd) [0x61747d]
    bess::LeafTrafficClass::RunTasks() at /home/melvin/bess/core/traffic_class.h:473
      -> 473:       struct task_result ret = tasks_[task_index_++]->Scheduled();
     (inlined by) bess::Scheduler::ScheduleOnce() at /home/melvin/bess/core/scheduler.h:69
      -> 69:       struct task_result ret = leaf->RunTasks();
     (inlined by) bess::Scheduler::ScheduleLoop() at /home/melvin/bess/core/scheduler.cc:30
      -> 30:     ScheduleOnce();
(3): /home/melvin/bess/core/bessd(_ZN6Worker3RunEPv+0x640) [0x615f70]
    Worker::Run(void*) at /home/melvin/bess/core/worker.cc:241
      -> 241:   scheduler_->ScheduleLoop();
(4): /home/melvin/bess/core/bessd(_Z10run_workerPv+0x72) [0x6165c2]
    run_worker(void*) at /home/melvin/bess/core/worker.cc:254
      -> 254:   return ctx.Run(_arg);
(5): /home/melvin/bess/core/bessd() [0xbeba4f]
    execute_native_thread_routine at thread.o:?
        (file/line not available)
(6): /lib/x86_64-linux-gnu/libpthread.so.0(+0x76b9) [0x7f277e3576b9]
    ?? ??:0
(7): /lib/x86_64-linux-gnu/libc.so.6(clone+0x6c) [0x7f277e08d82c]
    ?? ??:0","Successive calls to RemoveTask() on a leaf traffic class with more than
one task attached to it may cause RunTasks() to reach beyond the limits
of its vector of tasks. This patch changes RemoveTask() to reset the
leaf's pointer into its task list to avoid overrunning it.
To recreate the buggy behavior, create any two modules that register tasks, then delete them one at a time.
$ ~/bess/bin/bessctl
Type ""help"" for more information.
<disconnected> $ daemon start
Done.
localhost:10514 $ add module Source
  The new module ""source0"" has been created
localhost:10514 $ add module Queue
  The new module ""queue0"" has been created
localhost:10514 $ delete module source0
localhost:10514 $ delete module queue0
localhost:10514 $ show module
<disconnected> $

Produces the following stack trace (ymmv, since it's reaching into garbage):
F0208 23:24:00.666764  3783 debug.cc:367] Backtrace (recent calls first) ---
(0): /home/melvin/bess/core/bessd(_ZN6Module7RunTaskEPv+0x47) [0x617927]
    Module::RunTask(void*) at /home/melvin/bess/core/module.cc:191
         188: void Module::DeInit() {}
         189:
         190: struct task_result Module::RunTask(void *) {
      -> 191:   CHECK(0);  // You must override this function
         192:   return task_result();
         193: }
         194:
(1): /home/melvin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x640664]
    Task::Scheduled() at /home/melvin/bess/core/task.cc:36
      -> 36:
(2): /home/melvin/bess/core/bessd(_ZN4bess9Scheduler12ScheduleLoopEv+0x3dd) [0x61747d]
    bess::LeafTrafficClass::RunTasks() at /home/melvin/bess/core/traffic_class.h:473
      -> 473:       struct task_result ret = tasks_[task_index_++]->Scheduled();
     (inlined by) bess::Scheduler::ScheduleOnce() at /home/melvin/bess/core/scheduler.h:69
      -> 69:       struct task_result ret = leaf->RunTasks();
     (inlined by) bess::Scheduler::ScheduleLoop() at /home/melvin/bess/core/scheduler.cc:30
      -> 30:     ScheduleOnce();
(3): /home/melvin/bess/core/bessd(_ZN6Worker3RunEPv+0x640) [0x615f70]
    Worker::Run(void*) at /home/melvin/bess/core/worker.cc:241
      -> 241:   scheduler_->ScheduleLoop();
(4): /home/melvin/bess/core/bessd(_Z10run_workerPv+0x72) [0x6165c2]
    run_worker(void*) at /home/melvin/bess/core/worker.cc:254
      -> 254:   return ctx.Run(_arg);
(5): /home/melvin/bess/core/bessd() [0xbeba4f]
    execute_native_thread_routine at thread.o:?
        (file/line not available)
(6): /lib/x86_64-linux-gnu/libpthread.so.0(+0x76b9) [0x7f277e3576b9]
    ?? ??:0
(7): /lib/x86_64-linux-gnu/libc.so.6(clone+0x6c) [0x7f277e08d82c]
    ?? ??:0",True,{}
NetSys/bess,https://github.com/NetSys/bess,288,2017-02-09T08:04:18Z,2017-02-09T19:18:07Z,2017-02-09T19:18:41Z,MERGED,True,2,0,1,https://github.com/melvinw,traffic_class: fix out-of-bounds access in RunTaks,1,[],https://github.com/NetSys/bess/pull/288,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/288#issuecomment-278743589,"Successive calls to RemoveTask() on a leaf traffic class with more than
one task attached to it may cause RunTasks() to reach beyond the limits
of its vector of tasks. This patch changes RemoveTask() to reset the
leaf's pointer into its task list to avoid overrunning it.
To recreate the buggy behavior, create any two modules that register tasks, then delete them one at a time.
$ ~/bess/bin/bessctl
Type ""help"" for more information.
<disconnected> $ daemon start
Done.
localhost:10514 $ add module Source
  The new module ""source0"" has been created
localhost:10514 $ add module Queue
  The new module ""queue0"" has been created
localhost:10514 $ delete module source0
localhost:10514 $ delete module queue0
localhost:10514 $ show module
<disconnected> $

Produces the following stack trace (ymmv, since it's reaching into garbage):
F0208 23:24:00.666764  3783 debug.cc:367] Backtrace (recent calls first) ---
(0): /home/melvin/bess/core/bessd(_ZN6Module7RunTaskEPv+0x47) [0x617927]
    Module::RunTask(void*) at /home/melvin/bess/core/module.cc:191
         188: void Module::DeInit() {}
         189:
         190: struct task_result Module::RunTask(void *) {
      -> 191:   CHECK(0);  // You must override this function
         192:   return task_result();
         193: }
         194:
(1): /home/melvin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x640664]
    Task::Scheduled() at /home/melvin/bess/core/task.cc:36
      -> 36:
(2): /home/melvin/bess/core/bessd(_ZN4bess9Scheduler12ScheduleLoopEv+0x3dd) [0x61747d]
    bess::LeafTrafficClass::RunTasks() at /home/melvin/bess/core/traffic_class.h:473
      -> 473:       struct task_result ret = tasks_[task_index_++]->Scheduled();
     (inlined by) bess::Scheduler::ScheduleOnce() at /home/melvin/bess/core/scheduler.h:69
      -> 69:       struct task_result ret = leaf->RunTasks();
     (inlined by) bess::Scheduler::ScheduleLoop() at /home/melvin/bess/core/scheduler.cc:30
      -> 30:     ScheduleOnce();
(3): /home/melvin/bess/core/bessd(_ZN6Worker3RunEPv+0x640) [0x615f70]
    Worker::Run(void*) at /home/melvin/bess/core/worker.cc:241
      -> 241:   scheduler_->ScheduleLoop();
(4): /home/melvin/bess/core/bessd(_Z10run_workerPv+0x72) [0x6165c2]
    run_worker(void*) at /home/melvin/bess/core/worker.cc:254
      -> 254:   return ctx.Run(_arg);
(5): /home/melvin/bess/core/bessd() [0xbeba4f]
    execute_native_thread_routine at thread.o:?
        (file/line not available)
(6): /lib/x86_64-linux-gnu/libpthread.so.0(+0x76b9) [0x7f277e3576b9]
    ?? ??:0
(7): /lib/x86_64-linux-gnu/libc.so.6(clone+0x6c) [0x7f277e08d82c]
    ?? ??:0",,True,{}
NetSys/bess,https://github.com/NetSys/bess,289,2017-02-09T21:43:25Z,2017-02-09T23:42:07Z,2017-02-09T23:43:01Z,MERGED,True,25,5,5,https://github.com/melvinw,bessctl: return mac addrs with port cmd responses,1,[],https://github.com/NetSys/bess/pull/289,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/289,Scripts like perftest/pktgen might care about this sort of information.,Scripts like perftest/pktgen might care about this sort of information.,True,{}
NetSys/bess,https://github.com/NetSys/bess,289,2017-02-09T21:43:25Z,2017-02-09T23:42:07Z,2017-02-09T23:43:01Z,MERGED,True,25,5,5,https://github.com/melvinw,bessctl: return mac addrs with port cmd responses,1,[],https://github.com/NetSys/bess/pull/289,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/289#issuecomment-278786380,Scripts like perftest/pktgen might care about this sort of information.,"PortName/Driver is the canonical name of ports (ModuleName::Class is for modules). show port should show MAC addresses, but I think __str__ shouldn't include the MAC address by default...
Also, could you check if non-PMD drivers have the mac addr field appropriately (w/ generated one or zero-initialized one)?",True,{}
NetSys/bess,https://github.com/NetSys/bess,289,2017-02-09T21:43:25Z,2017-02-09T23:42:07Z,2017-02-09T23:43:01Z,MERGED,True,25,5,5,https://github.com/melvinw,bessctl: return mac addrs with port cmd responses,1,[],https://github.com/NetSys/bess/pull/289,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/289#issuecomment-278789061,Scripts like perftest/pktgen might care about this sort of information.,"Fixed __str__.  Yup, non-PMD drivers will get a randomized MAC if one isn't specified in CreatePort (https://github.com/NetSys/bess/blob/master/core/bessctl.cc#L245)",True,{}
NetSys/bess,https://github.com/NetSys/bess,289,2017-02-09T21:43:25Z,2017-02-09T23:42:07Z,2017-02-09T23:43:01Z,MERGED,True,25,5,5,https://github.com/melvinw,bessctl: return mac addrs with port cmd responses,1,[],https://github.com/NetSys/bess/pull/289,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/289#issuecomment-278812391,Scripts like perftest/pktgen might care about this sort of information.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,290,2017-02-09T22:36:29Z,2017-02-10T05:28:00Z,2017-08-09T01:23:03Z,MERGED,True,71,3,7,https://github.com/melvinw,worker: allow destruction of individual workers,3,[],https://github.com/NetSys/bess/pull/290,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/290,This may also be useful.,This may also be useful.,True,{}
NetSys/bess,https://github.com/NetSys/bess,290,2017-02-09T22:36:29Z,2017-02-10T05:28:00Z,2017-08-09T01:23:03Z,MERGED,True,71,3,7,https://github.com/melvinw,worker: allow destruction of individual workers,3,[],https://github.com/NetSys/bess/pull/290,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/290#issuecomment-278821125,This may also be useful.,"$ run samples/multicore
$ delete worker 3              # No error message
$ delete worker 128          # Incorrect error message
*** Error: Missing 'wid' field
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
$ delete worker 1              # Should not success since something is running on the worker. Module src1 becomes lost",True,{}
NetSys/bess,https://github.com/NetSys/bess,290,2017-02-09T22:36:29Z,2017-02-10T05:28:00Z,2017-08-09T01:23:03Z,MERGED,True,71,3,7,https://github.com/melvinw,worker: allow destruction of individual workers,3,[],https://github.com/NetSys/bess/pull/290,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/290#issuecomment-278821466,This may also be useful.,"add worker command would be useful too :)
(I promise two cats)",True,{}
NetSys/bess,https://github.com/NetSys/bess,290,2017-02-09T22:36:29Z,2017-02-10T05:28:00Z,2017-08-09T01:23:03Z,MERGED,True,71,3,7,https://github.com/melvinw,worker: allow destruction of individual workers,3,[],https://github.com/NetSys/bess/pull/290,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/290#issuecomment-278834581,This may also be useful.,All fixed up,True,{}
NetSys/bess,https://github.com/NetSys/bess,290,2017-02-09T22:36:29Z,2017-02-10T05:28:00Z,2017-08-09T01:23:03Z,MERGED,True,71,3,7,https://github.com/melvinw,worker: allow destruction of individual workers,3,[],https://github.com/NetSys/bess/pull/290,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/290#issuecomment-278861296,This may also be useful.,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,291,2017-02-09T23:38:57Z,2017-02-10T07:38:38Z,2017-02-10T08:05:34Z,MERGED,True,60,38,4,https://github.com/sangjinhan,Isolate background threads within a core,1,[],https://github.com/NetSys/bess/pull/291,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/291,"Background threads (spawned by either DPDK or gRPC) may interfere with worker threads, potentially introducing high jitter and transient packet loss. This commit provides a temporary fix to the issue, by isolating all non-worker threads in a separate core, which can be configurable with taskset.","Background threads (spawned by either DPDK or gRPC) may interfere with worker threads, potentially introducing high jitter and transient packet loss. This commit provides a temporary fix to the issue, by isolating all non-worker threads in a separate core, which can be configurable with taskset.",True,{}
NetSys/bess,https://github.com/NetSys/bess,291,2017-02-09T23:38:57Z,2017-02-10T07:38:38Z,2017-02-10T08:05:34Z,MERGED,True,60,38,4,https://github.com/sangjinhan,Isolate background threads within a core,1,[],https://github.com/NetSys/bess/pull/291,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/291#issuecomment-278877850,"Background threads (spawned by either DPDK or gRPC) may interfere with worker threads, potentially introducing high jitter and transient packet loss. This commit provides a temporary fix to the issue, by isolating all non-worker threads in a separate core, which can be configurable with taskset.",🐈,True,{}
NetSys/bess,https://github.com/NetSys/bess,291,2017-02-09T23:38:57Z,2017-02-10T07:38:38Z,2017-02-10T08:05:34Z,MERGED,True,60,38,4,https://github.com/sangjinhan,Isolate background threads within a core,1,[],https://github.com/NetSys/bess/pull/291,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/291#issuecomment-278881974,"Background threads (spawned by either DPDK or gRPC) may interfere with worker threads, potentially introducing high jitter and transient packet loss. This commit provides a temporary fix to the issue, by isolating all non-worker threads in a separate core, which can be configurable with taskset.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,292,2017-02-10T00:40:52Z,2017-02-10T01:38:00Z,2017-02-15T22:20:59Z,MERGED,True,3,12,1,https://github.com/barath,Uses curl to fetch DPDK to avoid download flakiness due to urllib.,1,[],https://github.com/NetSys/bess/pull/292,https://github.com/barath,1,https://github.com/NetSys/bess/pull/292,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,292,2017-02-10T00:40:52Z,2017-02-10T01:38:00Z,2017-02-15T22:20:59Z,MERGED,True,3,12,1,https://github.com/barath,Uses curl to fetch DPDK to avoid download flakiness due to urllib.,1,[],https://github.com/NetSys/bess/pull/292,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/292#issuecomment-278833163,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,294,2017-02-11T08:46:21Z,2017-02-16T14:28:36Z,2017-07-14T22:30:10Z,MERGED,True,971,0,3,https://github.com/shinae-woo,Checksum,7,[],https://github.com/NetSys/bess/pull/294,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/294,"Efficient IP/TCP checksum calculation code.
Benchmark                                           Time           CPU Iterations
---------------------------------------------------------------------------------
ChecksumFixture/BmGenericChecksumDpdk/16            6 ns          6 ns  123607000   2.63547GB/s    168.67M items/s
ChecksumFixture/BmGenericChecksumDpdk/64           13 ns         13 ns   55511677   4.72666GB/s   75.6265M items/s
ChecksumFixture/BmGenericChecksumDpdk/256          33 ns         33 ns   20931654   7.12895GB/s   28.5158M items/s
ChecksumFixture/BmGenericChecksumDpdk/1024        121 ns        121 ns    5769022   7.85933GB/s   7.85933M items/s
ChecksumFixture/BmGenericChecksumDpdk/2048        239 ns        239 ns    2934598   7.99537GB/s   3.99769M items/s
ChecksumFixture/BmGenericChecksumBess/16            5 ns          5 ns  146359258   3.11553GB/s   199.394M items/s
ChecksumFixture/BmGenericChecksumBess/64            8 ns          8 ns   84727279   7.21482GB/s   115.437M items/s
ChecksumFixture/BmGenericChecksumBess/256          20 ns         20 ns   35775345   12.1846GB/s   48.7382M items/s
ChecksumFixture/BmGenericChecksumBess/1024         61 ns         61 ns   11415385   15.5537GB/s   15.5537M items/s
ChecksumFixture/BmGenericChecksumBess/2048        126 ns        126 ns    5547654   15.1316GB/s   7.56579M items/s
ChecksumFixture/BmIpv4NoOptChecksumDpdk             6 ns          6 ns  107919345   147.039M items/s
ChecksumFixture/BmIpv4NoOptChecksumBess             6 ns          6 ns  116843143   159.188M items/s
ChecksumFixture/BmTcpChecksumDpdk/60               23 ns         23 ns   29983989   2.39298GB/s   40.8401M items/s
ChecksumFixture/BmTcpChecksumDpdk/787             123 ns        123 ns    5711600   5.98097GB/s    7.7821M items/s
ChecksumFixture/BmTcpChecksumDpdk/1514            205 ns        205 ns    3415286   6.87973GB/s   4.65313M items/s
ChecksumFixture/BmTcpChecksumBess/60               11 ns         11 ns   61157105   4.87974GB/s   83.2809M items/s
ChecksumFixture/BmTcpChecksumBess/787              49 ns         49 ns   14266095   14.9293GB/s   19.4251M items/s
ChecksumFixture/BmTcpChecksumBess/1514             82 ns         82 ns    8532697   17.1579GB/s   11.6048M items/s
ChecksumFixture/BmIncrementalUpdate16               4 ns          4 ns  163157716   222.276M items/s
ChecksumFixture/BmIncrementalUpdate32               5 ns          5 ns  148103659   201.789M items/s
ChecksumFixture/BmSrcIpPortUpdateDpdk              30 ns         30 ns   23692101   32.2776M items/s
ChecksumFixture/BmSrcIpPortUpdateBess              12 ns         12 ns   57865651   78.8351M items/s","Efficient IP/TCP checksum calculation code.
Benchmark                                           Time           CPU Iterations
---------------------------------------------------------------------------------
ChecksumFixture/BmGenericChecksumDpdk/16            6 ns          6 ns  123607000   2.63547GB/s    168.67M items/s
ChecksumFixture/BmGenericChecksumDpdk/64           13 ns         13 ns   55511677   4.72666GB/s   75.6265M items/s
ChecksumFixture/BmGenericChecksumDpdk/256          33 ns         33 ns   20931654   7.12895GB/s   28.5158M items/s
ChecksumFixture/BmGenericChecksumDpdk/1024        121 ns        121 ns    5769022   7.85933GB/s   7.85933M items/s
ChecksumFixture/BmGenericChecksumDpdk/2048        239 ns        239 ns    2934598   7.99537GB/s   3.99769M items/s
ChecksumFixture/BmGenericChecksumBess/16            5 ns          5 ns  146359258   3.11553GB/s   199.394M items/s
ChecksumFixture/BmGenericChecksumBess/64            8 ns          8 ns   84727279   7.21482GB/s   115.437M items/s
ChecksumFixture/BmGenericChecksumBess/256          20 ns         20 ns   35775345   12.1846GB/s   48.7382M items/s
ChecksumFixture/BmGenericChecksumBess/1024         61 ns         61 ns   11415385   15.5537GB/s   15.5537M items/s
ChecksumFixture/BmGenericChecksumBess/2048        126 ns        126 ns    5547654   15.1316GB/s   7.56579M items/s
ChecksumFixture/BmIpv4NoOptChecksumDpdk             6 ns          6 ns  107919345   147.039M items/s
ChecksumFixture/BmIpv4NoOptChecksumBess             6 ns          6 ns  116843143   159.188M items/s
ChecksumFixture/BmTcpChecksumDpdk/60               23 ns         23 ns   29983989   2.39298GB/s   40.8401M items/s
ChecksumFixture/BmTcpChecksumDpdk/787             123 ns        123 ns    5711600   5.98097GB/s    7.7821M items/s
ChecksumFixture/BmTcpChecksumDpdk/1514            205 ns        205 ns    3415286   6.87973GB/s   4.65313M items/s
ChecksumFixture/BmTcpChecksumBess/60               11 ns         11 ns   61157105   4.87974GB/s   83.2809M items/s
ChecksumFixture/BmTcpChecksumBess/787              49 ns         49 ns   14266095   14.9293GB/s   19.4251M items/s
ChecksumFixture/BmTcpChecksumBess/1514             82 ns         82 ns    8532697   17.1579GB/s   11.6048M items/s
ChecksumFixture/BmIncrementalUpdate16               4 ns          4 ns  163157716   222.276M items/s
ChecksumFixture/BmIncrementalUpdate32               5 ns          5 ns  148103659   201.789M items/s
ChecksumFixture/BmSrcIpPortUpdateDpdk              30 ns         30 ns   23692101   32.2776M items/s
ChecksumFixture/BmSrcIpPortUpdateBess              12 ns         12 ns   57865651   78.8351M items/s",True,{}
NetSys/bess,https://github.com/NetSys/bess,294,2017-02-11T08:46:21Z,2017-02-16T14:28:36Z,2017-07-14T22:30:10Z,MERGED,True,971,0,3,https://github.com/shinae-woo,Checksum,7,[],https://github.com/NetSys/bess/pull/294,https://github.com/barath,2,https://github.com/NetSys/bess/pull/294#issuecomment-279877423,"Efficient IP/TCP checksum calculation code.
Benchmark                                           Time           CPU Iterations
---------------------------------------------------------------------------------
ChecksumFixture/BmGenericChecksumDpdk/16            6 ns          6 ns  123607000   2.63547GB/s    168.67M items/s
ChecksumFixture/BmGenericChecksumDpdk/64           13 ns         13 ns   55511677   4.72666GB/s   75.6265M items/s
ChecksumFixture/BmGenericChecksumDpdk/256          33 ns         33 ns   20931654   7.12895GB/s   28.5158M items/s
ChecksumFixture/BmGenericChecksumDpdk/1024        121 ns        121 ns    5769022   7.85933GB/s   7.85933M items/s
ChecksumFixture/BmGenericChecksumDpdk/2048        239 ns        239 ns    2934598   7.99537GB/s   3.99769M items/s
ChecksumFixture/BmGenericChecksumBess/16            5 ns          5 ns  146359258   3.11553GB/s   199.394M items/s
ChecksumFixture/BmGenericChecksumBess/64            8 ns          8 ns   84727279   7.21482GB/s   115.437M items/s
ChecksumFixture/BmGenericChecksumBess/256          20 ns         20 ns   35775345   12.1846GB/s   48.7382M items/s
ChecksumFixture/BmGenericChecksumBess/1024         61 ns         61 ns   11415385   15.5537GB/s   15.5537M items/s
ChecksumFixture/BmGenericChecksumBess/2048        126 ns        126 ns    5547654   15.1316GB/s   7.56579M items/s
ChecksumFixture/BmIpv4NoOptChecksumDpdk             6 ns          6 ns  107919345   147.039M items/s
ChecksumFixture/BmIpv4NoOptChecksumBess             6 ns          6 ns  116843143   159.188M items/s
ChecksumFixture/BmTcpChecksumDpdk/60               23 ns         23 ns   29983989   2.39298GB/s   40.8401M items/s
ChecksumFixture/BmTcpChecksumDpdk/787             123 ns        123 ns    5711600   5.98097GB/s    7.7821M items/s
ChecksumFixture/BmTcpChecksumDpdk/1514            205 ns        205 ns    3415286   6.87973GB/s   4.65313M items/s
ChecksumFixture/BmTcpChecksumBess/60               11 ns         11 ns   61157105   4.87974GB/s   83.2809M items/s
ChecksumFixture/BmTcpChecksumBess/787              49 ns         49 ns   14266095   14.9293GB/s   19.4251M items/s
ChecksumFixture/BmTcpChecksumBess/1514             82 ns         82 ns    8532697   17.1579GB/s   11.6048M items/s
ChecksumFixture/BmIncrementalUpdate16               4 ns          4 ns  163157716   222.276M items/s
ChecksumFixture/BmIncrementalUpdate32               5 ns          5 ns  148103659   201.789M items/s
ChecksumFixture/BmSrcIpPortUpdateDpdk              30 ns         30 ns   23692101   32.2776M items/s
ChecksumFixture/BmSrcIpPortUpdateBess              12 ns         12 ns   57865651   78.8351M items/s","This was great -- thanks for contributing this, and for systematically testing and benchmarking it.  I'd be happy to expand upon any comments I made, so please let me know.",True,{}
NetSys/bess,https://github.com/NetSys/bess,294,2017-02-11T08:46:21Z,2017-02-16T14:28:36Z,2017-07-14T22:30:10Z,MERGED,True,971,0,3,https://github.com/shinae-woo,Checksum,7,[],https://github.com/NetSys/bess/pull/294,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/294#issuecomment-280326623,"Efficient IP/TCP checksum calculation code.
Benchmark                                           Time           CPU Iterations
---------------------------------------------------------------------------------
ChecksumFixture/BmGenericChecksumDpdk/16            6 ns          6 ns  123607000   2.63547GB/s    168.67M items/s
ChecksumFixture/BmGenericChecksumDpdk/64           13 ns         13 ns   55511677   4.72666GB/s   75.6265M items/s
ChecksumFixture/BmGenericChecksumDpdk/256          33 ns         33 ns   20931654   7.12895GB/s   28.5158M items/s
ChecksumFixture/BmGenericChecksumDpdk/1024        121 ns        121 ns    5769022   7.85933GB/s   7.85933M items/s
ChecksumFixture/BmGenericChecksumDpdk/2048        239 ns        239 ns    2934598   7.99537GB/s   3.99769M items/s
ChecksumFixture/BmGenericChecksumBess/16            5 ns          5 ns  146359258   3.11553GB/s   199.394M items/s
ChecksumFixture/BmGenericChecksumBess/64            8 ns          8 ns   84727279   7.21482GB/s   115.437M items/s
ChecksumFixture/BmGenericChecksumBess/256          20 ns         20 ns   35775345   12.1846GB/s   48.7382M items/s
ChecksumFixture/BmGenericChecksumBess/1024         61 ns         61 ns   11415385   15.5537GB/s   15.5537M items/s
ChecksumFixture/BmGenericChecksumBess/2048        126 ns        126 ns    5547654   15.1316GB/s   7.56579M items/s
ChecksumFixture/BmIpv4NoOptChecksumDpdk             6 ns          6 ns  107919345   147.039M items/s
ChecksumFixture/BmIpv4NoOptChecksumBess             6 ns          6 ns  116843143   159.188M items/s
ChecksumFixture/BmTcpChecksumDpdk/60               23 ns         23 ns   29983989   2.39298GB/s   40.8401M items/s
ChecksumFixture/BmTcpChecksumDpdk/787             123 ns        123 ns    5711600   5.98097GB/s    7.7821M items/s
ChecksumFixture/BmTcpChecksumDpdk/1514            205 ns        205 ns    3415286   6.87973GB/s   4.65313M items/s
ChecksumFixture/BmTcpChecksumBess/60               11 ns         11 ns   61157105   4.87974GB/s   83.2809M items/s
ChecksumFixture/BmTcpChecksumBess/787              49 ns         49 ns   14266095   14.9293GB/s   19.4251M items/s
ChecksumFixture/BmTcpChecksumBess/1514             82 ns         82 ns    8532697   17.1579GB/s   11.6048M items/s
ChecksumFixture/BmIncrementalUpdate16               4 ns          4 ns  163157716   222.276M items/s
ChecksumFixture/BmIncrementalUpdate32               5 ns          5 ns  148103659   201.789M items/s
ChecksumFixture/BmSrcIpPortUpdateDpdk              30 ns         30 ns   23692101   32.2776M items/s
ChecksumFixture/BmSrcIpPortUpdateBess              12 ns         12 ns   57865651   78.8351M items/s","Hi Barath, I can not map your comments and the source code. Let me know which lines of code each comment for. Thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,294,2017-02-11T08:46:21Z,2017-02-16T14:28:36Z,2017-07-14T22:30:10Z,MERGED,True,971,0,3,https://github.com/shinae-woo,Checksum,7,[],https://github.com/NetSys/bess/pull/294,https://github.com/barath,4,https://github.com/NetSys/bess/pull/294#issuecomment-280335105,"Efficient IP/TCP checksum calculation code.
Benchmark                                           Time           CPU Iterations
---------------------------------------------------------------------------------
ChecksumFixture/BmGenericChecksumDpdk/16            6 ns          6 ns  123607000   2.63547GB/s    168.67M items/s
ChecksumFixture/BmGenericChecksumDpdk/64           13 ns         13 ns   55511677   4.72666GB/s   75.6265M items/s
ChecksumFixture/BmGenericChecksumDpdk/256          33 ns         33 ns   20931654   7.12895GB/s   28.5158M items/s
ChecksumFixture/BmGenericChecksumDpdk/1024        121 ns        121 ns    5769022   7.85933GB/s   7.85933M items/s
ChecksumFixture/BmGenericChecksumDpdk/2048        239 ns        239 ns    2934598   7.99537GB/s   3.99769M items/s
ChecksumFixture/BmGenericChecksumBess/16            5 ns          5 ns  146359258   3.11553GB/s   199.394M items/s
ChecksumFixture/BmGenericChecksumBess/64            8 ns          8 ns   84727279   7.21482GB/s   115.437M items/s
ChecksumFixture/BmGenericChecksumBess/256          20 ns         20 ns   35775345   12.1846GB/s   48.7382M items/s
ChecksumFixture/BmGenericChecksumBess/1024         61 ns         61 ns   11415385   15.5537GB/s   15.5537M items/s
ChecksumFixture/BmGenericChecksumBess/2048        126 ns        126 ns    5547654   15.1316GB/s   7.56579M items/s
ChecksumFixture/BmIpv4NoOptChecksumDpdk             6 ns          6 ns  107919345   147.039M items/s
ChecksumFixture/BmIpv4NoOptChecksumBess             6 ns          6 ns  116843143   159.188M items/s
ChecksumFixture/BmTcpChecksumDpdk/60               23 ns         23 ns   29983989   2.39298GB/s   40.8401M items/s
ChecksumFixture/BmTcpChecksumDpdk/787             123 ns        123 ns    5711600   5.98097GB/s    7.7821M items/s
ChecksumFixture/BmTcpChecksumDpdk/1514            205 ns        205 ns    3415286   6.87973GB/s   4.65313M items/s
ChecksumFixture/BmTcpChecksumBess/60               11 ns         11 ns   61157105   4.87974GB/s   83.2809M items/s
ChecksumFixture/BmTcpChecksumBess/787              49 ns         49 ns   14266095   14.9293GB/s   19.4251M items/s
ChecksumFixture/BmTcpChecksumBess/1514             82 ns         82 ns    8532697   17.1579GB/s   11.6048M items/s
ChecksumFixture/BmIncrementalUpdate16               4 ns          4 ns  163157716   222.276M items/s
ChecksumFixture/BmIncrementalUpdate32               5 ns          5 ns  148103659   201.789M items/s
ChecksumFixture/BmSrcIpPortUpdateDpdk              30 ns         30 ns   23692101   32.2776M items/s
ChecksumFixture/BmSrcIpPortUpdateBess              12 ns         12 ns   57865651   78.8351M items/s","Oh -- weird.  I wonder what github did there.  Anyway, the first of the two recent comments was at line 188 and and the second at line 269.",True,{}
NetSys/bess,https://github.com/NetSys/bess,294,2017-02-11T08:46:21Z,2017-02-16T14:28:36Z,2017-07-14T22:30:10Z,MERGED,True,971,0,3,https://github.com/shinae-woo,Checksum,7,[],https://github.com/NetSys/bess/pull/294,https://github.com/barath,5,https://github.com/NetSys/bess/pull/294#issuecomment-280347082,"Efficient IP/TCP checksum calculation code.
Benchmark                                           Time           CPU Iterations
---------------------------------------------------------------------------------
ChecksumFixture/BmGenericChecksumDpdk/16            6 ns          6 ns  123607000   2.63547GB/s    168.67M items/s
ChecksumFixture/BmGenericChecksumDpdk/64           13 ns         13 ns   55511677   4.72666GB/s   75.6265M items/s
ChecksumFixture/BmGenericChecksumDpdk/256          33 ns         33 ns   20931654   7.12895GB/s   28.5158M items/s
ChecksumFixture/BmGenericChecksumDpdk/1024        121 ns        121 ns    5769022   7.85933GB/s   7.85933M items/s
ChecksumFixture/BmGenericChecksumDpdk/2048        239 ns        239 ns    2934598   7.99537GB/s   3.99769M items/s
ChecksumFixture/BmGenericChecksumBess/16            5 ns          5 ns  146359258   3.11553GB/s   199.394M items/s
ChecksumFixture/BmGenericChecksumBess/64            8 ns          8 ns   84727279   7.21482GB/s   115.437M items/s
ChecksumFixture/BmGenericChecksumBess/256          20 ns         20 ns   35775345   12.1846GB/s   48.7382M items/s
ChecksumFixture/BmGenericChecksumBess/1024         61 ns         61 ns   11415385   15.5537GB/s   15.5537M items/s
ChecksumFixture/BmGenericChecksumBess/2048        126 ns        126 ns    5547654   15.1316GB/s   7.56579M items/s
ChecksumFixture/BmIpv4NoOptChecksumDpdk             6 ns          6 ns  107919345   147.039M items/s
ChecksumFixture/BmIpv4NoOptChecksumBess             6 ns          6 ns  116843143   159.188M items/s
ChecksumFixture/BmTcpChecksumDpdk/60               23 ns         23 ns   29983989   2.39298GB/s   40.8401M items/s
ChecksumFixture/BmTcpChecksumDpdk/787             123 ns        123 ns    5711600   5.98097GB/s    7.7821M items/s
ChecksumFixture/BmTcpChecksumDpdk/1514            205 ns        205 ns    3415286   6.87973GB/s   4.65313M items/s
ChecksumFixture/BmTcpChecksumBess/60               11 ns         11 ns   61157105   4.87974GB/s   83.2809M items/s
ChecksumFixture/BmTcpChecksumBess/787              49 ns         49 ns   14266095   14.9293GB/s   19.4251M items/s
ChecksumFixture/BmTcpChecksumBess/1514             82 ns         82 ns    8532697   17.1579GB/s   11.6048M items/s
ChecksumFixture/BmIncrementalUpdate16               4 ns          4 ns  163157716   222.276M items/s
ChecksumFixture/BmIncrementalUpdate32               5 ns          5 ns  148103659   201.789M items/s
ChecksumFixture/BmSrcIpPortUpdateDpdk              30 ns         30 ns   23692101   32.2776M items/s
ChecksumFixture/BmSrcIpPortUpdateBess              12 ns         12 ns   57865651   78.8351M items/s",,True,"{'HOORAY': ['https://github.com/shinae-woo'], 'HEART': ['https://github.com/shinae-woo']}"
NetSys/bess,https://github.com/NetSys/bess,294,2017-02-11T08:46:21Z,2017-02-16T14:28:36Z,2017-07-14T22:30:10Z,MERGED,True,971,0,3,https://github.com/shinae-woo,Checksum,7,[],https://github.com/NetSys/bess/pull/294,https://github.com/barath,6,https://github.com/NetSys/bess/pull/294#issuecomment-280539616,"Efficient IP/TCP checksum calculation code.
Benchmark                                           Time           CPU Iterations
---------------------------------------------------------------------------------
ChecksumFixture/BmGenericChecksumDpdk/16            6 ns          6 ns  123607000   2.63547GB/s    168.67M items/s
ChecksumFixture/BmGenericChecksumDpdk/64           13 ns         13 ns   55511677   4.72666GB/s   75.6265M items/s
ChecksumFixture/BmGenericChecksumDpdk/256          33 ns         33 ns   20931654   7.12895GB/s   28.5158M items/s
ChecksumFixture/BmGenericChecksumDpdk/1024        121 ns        121 ns    5769022   7.85933GB/s   7.85933M items/s
ChecksumFixture/BmGenericChecksumDpdk/2048        239 ns        239 ns    2934598   7.99537GB/s   3.99769M items/s
ChecksumFixture/BmGenericChecksumBess/16            5 ns          5 ns  146359258   3.11553GB/s   199.394M items/s
ChecksumFixture/BmGenericChecksumBess/64            8 ns          8 ns   84727279   7.21482GB/s   115.437M items/s
ChecksumFixture/BmGenericChecksumBess/256          20 ns         20 ns   35775345   12.1846GB/s   48.7382M items/s
ChecksumFixture/BmGenericChecksumBess/1024         61 ns         61 ns   11415385   15.5537GB/s   15.5537M items/s
ChecksumFixture/BmGenericChecksumBess/2048        126 ns        126 ns    5547654   15.1316GB/s   7.56579M items/s
ChecksumFixture/BmIpv4NoOptChecksumDpdk             6 ns          6 ns  107919345   147.039M items/s
ChecksumFixture/BmIpv4NoOptChecksumBess             6 ns          6 ns  116843143   159.188M items/s
ChecksumFixture/BmTcpChecksumDpdk/60               23 ns         23 ns   29983989   2.39298GB/s   40.8401M items/s
ChecksumFixture/BmTcpChecksumDpdk/787             123 ns        123 ns    5711600   5.98097GB/s    7.7821M items/s
ChecksumFixture/BmTcpChecksumDpdk/1514            205 ns        205 ns    3415286   6.87973GB/s   4.65313M items/s
ChecksumFixture/BmTcpChecksumBess/60               11 ns         11 ns   61157105   4.87974GB/s   83.2809M items/s
ChecksumFixture/BmTcpChecksumBess/787              49 ns         49 ns   14266095   14.9293GB/s   19.4251M items/s
ChecksumFixture/BmTcpChecksumBess/1514             82 ns         82 ns    8532697   17.1579GB/s   11.6048M items/s
ChecksumFixture/BmIncrementalUpdate16               4 ns          4 ns  163157716   222.276M items/s
ChecksumFixture/BmIncrementalUpdate32               5 ns          5 ns  148103659   201.789M items/s
ChecksumFixture/BmSrcIpPortUpdateDpdk              30 ns         30 ns   23692101   32.2776M items/s
ChecksumFixture/BmSrcIpPortUpdateBess              12 ns         12 ns   57865651   78.8351M items/s",,True,{'HEART': ['https://github.com/shinae-woo']}
NetSys/bess,https://github.com/NetSys/bess,295,2017-02-11T21:08:51Z,2017-02-15T19:38:54Z,2017-02-15T19:39:20Z,MERGED,True,100,46,6,https://github.com/melvinw,make timestamp/measure offset configurable,4,[],https://github.com/NetSys/bess/pull/295,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/295,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,295,2017-02-11T21:08:51Z,2017-02-15T19:38:54Z,2017-02-15T19:39:20Z,MERGED,True,100,46,6,https://github.com/melvinw,make timestamp/measure offset configurable,4,[],https://github.com/NetSys/bess/pull/295,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/295#issuecomment-279561646,,"Looks good. Some suggestions:

How about having a 4-8 byte magic number to identify timestamped packets? Currently 0x01 is used, which is not reliable at all.
If the packet length is not long enough for timestamp, the packet length needs to be adjusted (or just dropped). For example, the current code with 60B packets will have truncated timestamp, which silently disrupt the measurement results.
Default offset could be based on UDP, not TCP?
In the long-term: sequence number might be useful if we want to detect reordering or packet drop",True,{}
NetSys/bess,https://github.com/NetSys/bess,295,2017-02-11T21:08:51Z,2017-02-15T19:38:54Z,2017-02-15T19:39:20Z,MERGED,True,100,46,6,https://github.com/melvinw,make timestamp/measure offset configurable,4,[],https://github.com/NetSys/bess/pull/295,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/295#issuecomment-279849443,,Addressed all but the last bullet. Ended up using a 2 byte magic number instead of 4 or 8 because the latter resulted in a 26% performance hit.,True,{}
NetSys/bess,https://github.com/NetSys/bess,295,2017-02-11T21:08:51Z,2017-02-15T19:38:54Z,2017-02-15T19:39:20Z,MERGED,True,100,46,6,https://github.com/melvinw,make timestamp/measure offset configurable,4,[],https://github.com/NetSys/bess/pull/295,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/295#issuecomment-280115908,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,296,2017-02-14T00:30:22Z,2017-02-14T00:32:30Z,2017-02-15T22:20:53Z,MERGED,True,3,0,1,https://github.com/justinemarie,Adds students to contributor list.,1,[],https://github.com/NetSys/bess/pull/296,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/296,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,297,2017-02-14T06:54:40Z,2017-02-14T20:38:41Z,2017-02-15T22:20:56Z,MERGED,True,14,18,2,https://github.com/barath,Fixes bug in traffic class traversal code.,1,[],https://github.com/NetSys/bess/pull/297,https://github.com/barath,1,https://github.com/NetSys/bess/pull/297,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,297,2017-02-14T06:54:40Z,2017-02-14T20:38:41Z,2017-02-15T22:20:56Z,MERGED,True,14,18,2,https://github.com/barath,Fixes bug in traffic class traversal code.,1,[],https://github.com/NetSys/bess/pull/297,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/297#issuecomment-279828646,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,298,2017-02-15T00:47:14Z,2017-02-23T05:35:28Z,2017-05-25T22:23:09Z,MERGED,True,123,1,7,https://github.com/vivi,Random drop module,2,[],https://github.com/NetSys/bess/pull/298,https://github.com/vivi,1,https://github.com/NetSys/bess/pull/298,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,298,2017-02-15T00:47:14Z,2017-02-23T05:35:28Z,2017-05-25T22:23:09Z,MERGED,True,123,1,7,https://github.com/vivi,Random drop module,2,[],https://github.com/NetSys/bess/pull/298,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/298#issuecomment-279895541,,"Looks great. One high-level comment: perhaps this module can be more general (with almost the same code), so that it can be utilized in many different scenarios? Suppose this module is RandomSplit, then:
# emulating RandomDrop(drop_date=0.2)
a -> b::RandomSplit([{""prob"": 0.8, ""gate"": 0}]) -> c

or
# weighted random distribution (50% for gate 0, 40% for gate 2, and 10% drop)
a -> b::RandomSplit([{""prob"": 0.5, ""gate"": 0}, {""prob"": 0.4, ""gate"": 2}])
b:0 -> c
b:2 -> d

As compared to your original module, this new syntax seems a bit uglier. One solution would be you implement the generic RandomSplit, and RandomDrop inherits it as a special case to maximize code reuse (within the same source file or in a separate .cc file)",True,{}
NetSys/bess,https://github.com/NetSys/bess,298,2017-02-15T00:47:14Z,2017-02-23T05:35:28Z,2017-05-25T22:23:09Z,MERGED,True,123,1,7,https://github.com/vivi,Random drop module,2,[],https://github.com/NetSys/bess/pull/298,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/298#issuecomment-279901083,,"Hi Vivian,
The crash in Travis seems to be due to a bug that has already been patched in the Master branch (#297). Can you do a git pull --rebase and re-commit so we can see that it should indeed pass Travis?",True,{'THUMBS_UP': ['https://github.com/vivi']}
NetSys/bess,https://github.com/NetSys/bess,298,2017-02-15T00:47:14Z,2017-02-23T05:35:28Z,2017-05-25T22:23:09Z,MERGED,True,123,1,7,https://github.com/vivi,Random drop module,2,[],https://github.com/NetSys/bess/pull/298,https://github.com/codecov-io,4,https://github.com/NetSys/bess/pull/298#issuecomment-280945295,,"Codecov Report

Merging #298 into master will increase coverage by 17.37%.
The diff coverage is 5.55%.

@@            Coverage Diff             @@
##           master    #298       +/-   ##
==========================================
+ Coverage   22.82%   40.2%   +17.37%     
==========================================
  Files         151     155        +4     
  Lines        7307    7350       +43     
==========================================
+ Hits         1668    2955     +1287     
+ Misses       5639    4395     -1244



Impacted Files
Coverage Δ





core/modules/random_drop.h
0% <ø> (ø)



core/modules/random_drop.cc
5.88% <5.88%> (ø)



core/bessd.cc
46.35% <ø> (-15.9%)
❌


core/drivers/vport.cc
5.15% <ø> (-6.27%)
❌


core/gtest_main.cc




core/main.cc
93.75% <ø> (ø)



core/port.cc
39.44% <ø> (ø)



core/port.h
91.66% <ø> (ø)



... and 49 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 755f148...3392ecd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,298,2017-02-15T00:47:14Z,2017-02-23T05:35:28Z,2017-05-25T22:23:09Z,MERGED,True,123,1,7,https://github.com/vivi,Random drop module,2,[],https://github.com/NetSys/bess/pull/298,https://github.com/codecov-io,5,https://github.com/NetSys/bess/pull/298#issuecomment-280945296,,"Codecov Report

Merging #298 into master will decrease coverage by -5.08%.
The diff coverage is 5.55%.

@@            Coverage Diff             @@
##           master     #298      +/-   ##
==========================================
- Coverage   22.82%   17.74%   -5.08%     
==========================================
  Files         151      153       +2     
  Lines        7307     7325      +18     
==========================================
- Hits         1668     1300     -368     
- Misses       5639     6025     +386



Impacted Files
Coverage Δ





core/modules/random_drop.h
0% <ø> (ø)



core/modules/random_drop.cc
5.88% <5.88%> (ø)



core/modules/wildcard_match.h
0% <ø> (-93.34%)
❌


core/modules/wildcard_match.cc
1.86% <ø> (-80.75%)
❌


core/message.h
21.42% <ø> (-78.58%)
❌


core/metadata.h
8.69% <ø> (-73.92%)
❌


core/modules/set_metadata.h
0% <ø> (-66.67%)
❌


core/modules/rewrite.h
0% <ø> (-66.67%)
❌


core/modules/set_metadata.cc
1.4% <ø> (-61.98%)
❌


core/modules/rewrite.cc
4.34% <ø> (-59.43%)
❌


... and 20 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 44bcc06...7c039ae. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,298,2017-02-15T00:47:14Z,2017-02-23T05:35:28Z,2017-05-25T22:23:09Z,MERGED,True,123,1,7,https://github.com/vivi,Random drop module,2,[],https://github.com/NetSys/bess/pull/298,https://github.com/vivi,6,https://github.com/NetSys/bess/pull/298#issuecomment-280945397,,"Hey @sangjinhan, per what @barath and I discussed, we'll try check this in, and implement your suggestion in a future PR :)",True,{}
NetSys/bess,https://github.com/NetSys/bess,298,2017-02-15T00:47:14Z,2017-02-23T05:35:28Z,2017-05-25T22:23:09Z,MERGED,True,123,1,7,https://github.com/vivi,Random drop module,2,[],https://github.com/NetSys/bess/pull/298,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/298#issuecomment-281176456,,"Also @barath: how does codecov work? In this case, Vivian did write a test for her module, I thought codecov should see an improvement?",True,{}
NetSys/bess,https://github.com/NetSys/bess,298,2017-02-15T00:47:14Z,2017-02-23T05:35:28Z,2017-05-25T22:23:09Z,MERGED,True,123,1,7,https://github.com/vivi,Random drop module,2,[],https://github.com/NetSys/bess/pull/298,https://github.com/barath,8,https://github.com/NetSys/bess/pull/298#issuecomment-281177232,,"Codecov will only do coverage with explicit test routines as we've set it
up (all_test I think).  We could change it though.
…
On Mon, Feb 20, 2017 at 12:39 PM, Justine Sherry ***@***.***> wrote:
 Also @barath <https://github.com/barath>: how does codecov work? In this
 case, Vivian did write a test for her module, I thought codecov should see
 an improvement?

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#298 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7ei8JA6oP4WJJJeWxK2c3w7nwHsPxks5refn0gaJpZM4MBLbF>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,298,2017-02-15T00:47:14Z,2017-02-23T05:35:28Z,2017-05-25T22:23:09Z,MERGED,True,123,1,7,https://github.com/vivi,Random drop module,2,[],https://github.com/NetSys/bess/pull/298,https://github.com/barath,9,https://github.com/NetSys/bess/pull/298#issuecomment-281899771,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,299,2017-02-15T07:45:21Z,2017-02-15T16:32:04Z,2017-02-15T16:33:25Z,MERGED,True,0,18,1,https://github.com/sangjinhan,Remove unused C-style error handling code,1,[],https://github.com/NetSys/bess/pull/299,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/299,"They used to be used to support Linux kernel style error handling, but not used any longer.","They used to be used to support Linux kernel style error handling, but not used any longer.",True,{}
NetSys/bess,https://github.com/NetSys/bess,299,2017-02-15T07:45:21Z,2017-02-15T16:32:04Z,2017-02-15T16:33:25Z,MERGED,True,0,18,1,https://github.com/sangjinhan,Remove unused C-style error handling code,1,[],https://github.com/NetSys/bess/pull/299,https://github.com/barath,2,https://github.com/NetSys/bess/pull/299#issuecomment-280061772,"They used to be used to support Linux kernel style error handling, but not used any longer.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,300,2017-02-15T21:51:05Z,2017-02-15T21:57:36Z,2017-02-15T21:58:06Z,CLOSED,False,742,9,7,https://github.com/TheJStone,Fair Queuing Module,22,[],https://github.com/NetSys/bess/pull/300,https://github.com/TheJStone,1,https://github.com/NetSys/bess/pull/300,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,301,2017-02-15T21:58:32Z,2017-03-20T22:26:38Z,2017-03-20T22:26:55Z,MERGED,True,818,0,6,https://github.com/TheJStone,Fair queuing module,1,[],https://github.com/NetSys/bess/pull/301,https://github.com/TheJStone,1,https://github.com/NetSys/bess/pull/301,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,301,2017-02-15T21:58:32Z,2017-03-20T22:26:38Z,2017-03-20T22:26:55Z,MERGED,True,818,0,6,https://github.com/TheJStone,Fair queuing module,1,[],https://github.com/NetSys/bess/pull/301,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/301#issuecomment-283555463,,"Codecov Report

Merging #301 into master will decrease coverage by 13%.
The diff coverage is 1%.

@@           Coverage Diff           @@
##           master   #301     +/-   ##
=======================================
- Coverage      18%     4%    -13%     
=======================================
  Files         156    158      +2     
  Lines        7424   7648    +224     
=======================================
- Hits         1314    332    -982     
- Misses       6110   7316   +1206



Impacted Files
Coverage Δ





core/modules/drr.h
0% <0%> (ø)



core/modules/drr.cc
2% <2%> (ø)



core/drivers/vport_zc.h
0% <0%> (-100%)
❌


core/drivers/pcap.h
0% <0%> (-100%)
❌


core/drivers/unix_socket.h
0% <0%> (-100%)
❌


core/modules/sink.h
0% <0%> (-100%)
❌


core/drivers/vport.h
0% <0%> (-100%)
❌


core/utils/pcap_handle.h
0% <0%> (-100%)
❌


core/utils/random.h
0% <0%> (-100%)
❌


core/utils/simd.h
0% <0%> (-100%)
❌


... and 40 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9cf6714...c85af6e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,301,2017-02-15T21:58:32Z,2017-03-20T22:26:38Z,2017-03-20T22:26:55Z,MERGED,True,818,0,6,https://github.com/TheJStone,Fair queuing module,1,[],https://github.com/NetSys/bess/pull/301,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/301#issuecomment-287917612,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,301,2017-02-15T21:58:32Z,2017-03-20T22:26:38Z,2017-03-20T22:26:55Z,MERGED,True,818,0,6,https://github.com/TheJStone,Fair queuing module,1,[],https://github.com/NetSys/bess/pull/301,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/301#issuecomment-287917646,,"Great job, Josh!",True,{}
NetSys/bess,https://github.com/NetSys/bess,302,2017-02-15T22:46:36Z,2017-02-15T22:48:47Z,2017-08-09T01:23:03Z,CLOSED,False,2,0,1,https://github.com/melvinw,testing jenkins,1,[],https://github.com/NetSys/bess/pull/302,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/302,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,303,2017-02-15T22:51:42Z,2017-02-15T23:38:28Z,2017-08-09T01:23:03Z,CLOSED,False,2,0,1,https://github.com/melvinw,testing jenkins,1,[],https://github.com/NetSys/bess/pull/303,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/303,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,304,2017-02-16T00:11:37Z,2017-03-13T21:27:20Z,2017-03-14T05:27:36Z,MERGED,True,651,160,1,https://github.com/justinemarie,Add comments to modules,2,[],https://github.com/NetSys/bess/pull/304,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/304,Yikes! That's a lotta words.,Yikes! That's a lotta words.,True,{}
NetSys/bess,https://github.com/NetSys/bess,304,2017-02-16T00:11:37Z,2017-03-13T21:27:20Z,2017-03-14T05:27:36Z,MERGED,True,651,160,1,https://github.com/justinemarie,Add comments to modules,2,[],https://github.com/NetSys/bess/pull/304,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/304#issuecomment-280197743,Yikes! That's a lotta words.,Just a reminder that this PR should be squashed.,True,{}
NetSys/bess,https://github.com/NetSys/bess,304,2017-02-16T00:11:37Z,2017-03-13T21:27:20Z,2017-03-14T05:27:36Z,MERGED,True,651,160,1,https://github.com/justinemarie,Add comments to modules,2,[],https://github.com/NetSys/bess/pull/304,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/304#issuecomment-284804378,Yikes! That's a lotta words.,"Codecov Report

Merging #304 into master will decrease coverage by 3%.
The diff coverage is n/a.

@@          Coverage Diff           @@
##           master   #304    +/-   ##
======================================
- Coverage      29%    27%    -3%     
======================================
  Files         156    156            
  Lines        7422   7422            
======================================
- Hits         2182   1980   -202     
- Misses       5240   5442   +202



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
1% <0%> (-82%)
❌


core/modules/port_out.cc
3% <0%> (-71%)
❌


core/modules/port_inc.cc
4% <0%> (-61%)
❌


core/modules/random_update.cc
4% <0%> (-59%)
❌


core/port.h
33% <0%> (-54%)
❌


core/utils/ether.cc
0% <0%> (-53%)
❌


core/modules/port_inc.h
0% <0%> (-50%)
❌


core/modules/random_update.h
0% <0%> (-50%)
❌


core/modules/port_out.h
0% <0%> (-50%)
❌


core/packet.h
41% <0%> (-22%)
❌


... and 4 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 20e048c...2cbb4a0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,304,2017-02-16T00:11:37Z,2017-03-13T21:27:20Z,2017-03-14T05:27:36Z,MERGED,True,651,160,1,https://github.com/justinemarie,Add comments to modules,2,[],https://github.com/NetSys/bess/pull/304,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/304#issuecomment-286233311,Yikes! That's a lotta words.,I think this can be merged?,True,{}
NetSys/bess,https://github.com/NetSys/bess,304,2017-02-16T00:11:37Z,2017-03-13T21:27:20Z,2017-03-14T05:27:36Z,MERGED,True,651,160,1,https://github.com/justinemarie,Add comments to modules,2,[],https://github.com/NetSys/bess/pull/304,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/304#issuecomment-286233367,Yikes! That's a lotta words.,oh wait no conflicts,True,{}
NetSys/bess,https://github.com/NetSys/bess,304,2017-02-16T00:11:37Z,2017-03-13T21:27:20Z,2017-03-14T05:27:36Z,MERGED,True,651,160,1,https://github.com/justinemarie,Add comments to modules,2,[],https://github.com/NetSys/bess/pull/304,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/304#issuecomment-286234497,Yikes! That's a lotta words.,All better.,True,{}
NetSys/bess,https://github.com/NetSys/bess,304,2017-02-16T00:11:37Z,2017-03-13T21:27:20Z,2017-03-14T05:27:36Z,MERGED,True,651,160,1,https://github.com/justinemarie,Add comments to modules,2,[],https://github.com/NetSys/bess/pull/304,https://github.com/melvinw,7,https://github.com/NetSys/bess/pull/304#issuecomment-286234736,Yikes! That's a lotta words.,Sweet. Will merge once travis finishes,True,{}
NetSys/bess,https://github.com/NetSys/bess,304,2017-02-16T00:11:37Z,2017-03-13T21:27:20Z,2017-03-14T05:27:36Z,MERGED,True,651,160,1,https://github.com/justinemarie,Add comments to modules,2,[],https://github.com/NetSys/bess/pull/304,https://github.com/changlan,8,https://github.com/NetSys/bess/pull/304#issuecomment-286235267,Yikes! That's a lotta words.,This PR mistakenly adds ansible-playbook.yml. It should be removed?,True,{}
NetSys/bess,https://github.com/NetSys/bess,304,2017-02-16T00:11:37Z,2017-03-13T21:27:20Z,2017-03-14T05:27:36Z,MERGED,True,651,160,1,https://github.com/justinemarie,Add comments to modules,2,[],https://github.com/NetSys/bess/pull/304,https://github.com/melvinw,9,https://github.com/NetSys/bess/pull/304#issuecomment-286249353,Yikes! That's a lotta words.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/305,Now uses the same Ansible script for vagrant and Docker image,Now uses the same Ansible script for vagrant and Docker image,True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/305#issuecomment-280533269,Now uses the same Ansible script for vagrant and Docker image,"Would it be possible to reboot the VM (for Vagrant), before building BESS? While the latest version of Linux image/header is installed, building BESS fails since it is still running an older version until the system reboots.",True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/305#issuecomment-280533794,Now uses the same Ansible script for vagrant and Docker image,"There seems some redundancy between init.yml and bess.yml: mount and hugepage sysctl
(and perhaps using native Ansible modules is more natural than copying files I suppose)",True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/305#issuecomment-280535714,Now uses the same Ansible script for vagrant and Docker image,"One clarification question: bess.yml is for Docker & bare-metal cases, and init.yml is only used for Vagrant, right? If so, maybe we can rename init.yml to vm.yml or vagrant.yml, unless init.yml is a specially predefined filename?",True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/305#issuecomment-280536528,Now uses the same Ansible script for vagrant and Docker image,"https://github.com/NetSys/bess/wiki/Build-and-Install-BESS will also needs to be updated, once it is merged.",True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/305#issuecomment-280551801,Now uses the same Ansible script for vagrant and Docker image,"AFAIK there is no clean way to reboot the VM when provisioning. Is it possible to refresh the version without rebooting?


Copying those files ensures those configs to be active after system reboots. If it is not required, I can simply remove those files. (Dev VM seems to be working fine without them)",True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/305#issuecomment-280554564,Now uses the same Ansible script for vagrant and Docker image,"One workaround for the kernel version issue is to install both linux-headers-generic (for the latest one) and linux-headers-uname -r (for the running kernel)? The old ansible-playbook.yml file did this.
It seems that the Ansible modules for sysctl and mount make permanent changes, so should survive reboots.",True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/305#issuecomment-280781430,Now uses the same Ansible script for vagrant and Docker image,"A few comments/questions regarding the latest version (mostly about Vagrant and bare-metal usage scenarios):

BESS is not built automatically. Is it intended? (I am fine with this, just checking)
Perhaps at the end of the Vagrant script we can reboot the system with config.vm.provision :reload?

This plugin is already installed at the beginning of Vagrantfile: https://github.com/aidanns/vagrant-reload


A user wouldn't know where BESS (mounted at the /opt/bess) is. Maybe we can do one of the followings...

Create a symbolic link or do bind-mount in /home/vagrant to /opt/bess
Change home directory to /opt/bess
Make BESS available at /home/vagrant/bess, not /opt/bess
Show some message at the end of vagrant provisioning.

e.g., `Run 'vagrant ssh' to log into the VM. BESS can be found at /opt/bess.""





Minor nit: adding /opt/bess/bin to $PATH make user's life a bit easier",True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/305#issuecomment-280783498,Now uses the same Ansible script for vagrant and Docker image,"Oh, one last thing: it would be safe to use 2 vCPUs by default. Some people said launching the VM on  a dual-core system made the system almost unusable.",True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/changlan,10,https://github.com/NetSys/bess/pull/305#issuecomment-280789043,Now uses the same Ansible script for vagrant and Docker image,"Yup, It is intended, because it could take so long (without any output messages) that the user might think the VM hangs. Done with other stuff.",True,{}
NetSys/bess,https://github.com/NetSys/bess,305,2017-02-16T22:24:42Z,2017-02-18T02:46:10Z,2017-02-19T05:58:21Z,MERGED,True,158,251,12,https://github.com/changlan,Consolidate build scripts,1,[],https://github.com/NetSys/bess/pull/305,https://github.com/sangjinhan,11,https://github.com/NetSys/bess/pull/305#issuecomment-280815980,Now uses the same Ansible script for vagrant and Docker image,Works perfect. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,306,2017-02-17T07:19:13Z,2017-02-24T00:49:35Z,2017-02-24T22:50:08Z,MERGED,True,169,114,13,https://github.com/sangjinhan,Add queries to link status,5,[],https://github.com/NetSys/bess/pull/306,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/306,"This is a C++ port of #109, although it has been million years late...","This is a C++ port of #109, although it has been million years late...",True,{}
NetSys/bess,https://github.com/NetSys/bess,306,2017-02-17T07:19:13Z,2017-02-24T00:49:35Z,2017-02-24T22:50:08Z,MERGED,True,169,114,13,https://github.com/sangjinhan,Add queries to link status,5,[],https://github.com/NetSys/bess/pull/306,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/306#issuecomment-281002578,"This is a C++ port of #109, although it has been million years late...","Codecov Report

Merging #306 into master will decrease coverage by -14.83%.
The diff coverage is 0%.

@@             Coverage Diff             @@
##           master     #306       +/-   ##
===========================================
- Coverage   40.29%   25.46%   -14.83%     
===========================================
  Files         153      153               
  Lines        7331     7350       +19     
===========================================
- Hits         2954     1872     -1082     
- Misses       4377     5478     +1101



Impacted Files
Coverage Δ





core/drivers/pmd.h
50% <ø> (ø)
✅


core/drivers/pmd.cc
4.6% <ø> (-0.13%)
❌


core/port.h
36% <ø> (-55.67%)
❌


core/bessctl.cc
18.05% <ø> (-19.26%)
❌


core/modules/vlan_pop.h
0% <ø> (-100%)
❌


core/modules/bypass.h
0% <ø> (-100%)
❌


core/modules/vlan_pop.cc
7.14% <ø> (-92.86%)
❌


core/modules/exact_match.h
0% <ø> (-92.86%)
❌


core/modules/vlan_push.cc
10% <ø> (-90%)
❌


core/modules/generic_encap.cc
2.08% <ø> (-87.5%)
❌


... and 42 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 89c74ee...e8220d1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,306,2017-02-17T07:19:13Z,2017-02-24T00:49:35Z,2017-02-24T22:50:08Z,MERGED,True,169,114,13,https://github.com/sangjinhan,Add queries to link status,5,[],https://github.com/NetSys/bess/pull/306,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/306#issuecomment-281002579,"This is a C++ port of #109, although it has been million years late...","Codecov Report

Merging #306 into master will decrease coverage by -13.25%.
The diff coverage is 0%.

@@             Coverage Diff             @@
##           master     #306       +/-   ##
===========================================
- Coverage   40.29%   27.05%   -13.25%     
===========================================
  Files         153      151        -2     
  Lines        7331     7441      +110     
===========================================
- Hits         2954     2013      -941     
- Misses       4377     5428     +1051



Impacted Files
Coverage Δ





core/drivers/vport_zc.h
100% <ø> (ø)
✅


core/drivers/pmd.h
50% <ø> (ø)
✅


core/bessctl.cc
18.23% <ø> (-19.09%)
❌


core/drivers/pmd.cc
4.6% <ø> (-0.13%)
❌


core/modules/bypass.h
0% <ø> (-100%)
❌


core/modules/vlan_pop.h
0% <ø> (-100%)
❌


core/modules/vlan_pop.cc
7.14% <ø> (-92.86%)
❌


core/modules/vlan_push.cc
10% <ø> (-90%)
❌


core/modules/generic_encap.cc
2.08% <ø> (-87.5%)
❌


core/drivers/unix_socket.cc
1.01% <ø> (-81.82%)
❌


... and 42 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 89c74ee...e8220d1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,306,2017-02-17T07:19:13Z,2017-02-24T00:49:35Z,2017-02-24T22:50:08Z,MERGED,True,169,114,13,https://github.com/sangjinhan,Add queries to link status,5,[],https://github.com/NetSys/bess/pull/306,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/306#issuecomment-281004524,"This is a C++ port of #109, although it has been million years late...",Applied Barath's comments. Did a little bit of code polishing as well.,True,{}
NetSys/bess,https://github.com/NetSys/bess,306,2017-02-17T07:19:13Z,2017-02-24T00:49:35Z,2017-02-24T22:50:08Z,MERGED,True,169,114,13,https://github.com/sangjinhan,Add queries to link status,5,[],https://github.com/NetSys/bess/pull/306,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/306#issuecomment-282169970,"This is a C++ port of #109, although it has been million years late...",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,307,2017-02-17T19:14:55Z,2017-02-18T02:54:45Z,2017-02-18T02:56:22Z,MERGED,True,2,0,1,https://github.com/sangjinhan,Add ability to change MAC for vport,1,[],https://github.com/NetSys/bess/pull/307,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/307,"VPort driver now allows changing MAC address via SIOC* ioctls.
(e.g., ip link set <ifname> address xx:xx:xx:xx:xx:xx, once the port is down state)","VPort driver now allows changing MAC address via SIOC* ioctls.
(e.g., ip link set <ifname> address xx:xx:xx:xx:xx:xx, once the port is down state)",True,{}
NetSys/bess,https://github.com/NetSys/bess,307,2017-02-17T19:14:55Z,2017-02-18T02:54:45Z,2017-02-18T02:56:22Z,MERGED,True,2,0,1,https://github.com/sangjinhan,Add ability to change MAC for vport,1,[],https://github.com/NetSys/bess/pull/307,https://github.com/barath,2,https://github.com/NetSys/bess/pull/307#issuecomment-280816567,"VPort driver now allows changing MAC address via SIOC* ioctls.
(e.g., ip link set <ifname> address xx:xx:xx:xx:xx:xx, once the port is down state)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,308,2017-02-17T20:24:10Z,2017-02-20T21:19:08Z,2017-02-24T22:50:03Z,MERGED,True,15,618,25,https://github.com/justinemarie,Update docs to point to wiki,3,[],https://github.com/NetSys/bess/pull/308,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/308,:-),:-),True,{}
NetSys/bess,https://github.com/NetSys/bess,308,2017-02-17T20:24:10Z,2017-02-20T21:19:08Z,2017-02-24T22:50:03Z,MERGED,True,15,618,25,https://github.com/justinemarie,Update docs to point to wiki,3,[],https://github.com/NetSys/bess/pull/308,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/308#issuecomment-281173836,:-),"Codecov Report

Merging #308 into master will increase coverage by 4.14%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #308      +/-   ##
==========================================
+ Coverage   22.82%   26.97%   +4.14%     
==========================================
  Files         151      151              
  Lines        7307     7307              
==========================================
+ Hits         1668     1971     +303     
+ Misses       5639     5336     -303



Impacted Files
Coverage Δ





core/traffic_class.h
60.86% <ø> (+1.44%)
✅


core/packet.h
42.1% <ø> (+5.26%)
✅


core/worker.h
83.33% <ø> (+5.55%)
✅


core/pktbatch.h
85.71% <ø> (+14.28%)
✅


core/modules/flowgen.h
66.66% <ø> (+66.66%)
✅


core/modules/flowgen.cc
69.45% <ø> (+68.36%)
✅


core/modules/exact_match.cc
75.43% <ø> (+72.8%)
✅


core/modules/exact_match.h
92.85% <ø> (+92.85%)
✅


core/utils/random.h
100% <ø> (+100%)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 755f148...1d751f4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,308,2017-02-17T20:24:10Z,2017-02-20T21:19:08Z,2017-02-24T22:50:03Z,MERGED,True,15,618,25,https://github.com/justinemarie,Update docs to point to wiki,3,[],https://github.com/NetSys/bess/pull/308,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/308#issuecomment-281173837,:-),"Codecov Report

Merging #308 into master will decrease coverage by -14.77%.
The diff coverage is n/a.

@@             Coverage Diff             @@
##           master     #308       +/-   ##
===========================================
- Coverage   40.29%   25.53%   -14.77%     
===========================================
  Files         153      153               
  Lines        7331     7332        +1     
===========================================
- Hits         2954     1872     -1082     
- Misses       4377     5460     +1083



Impacted Files
Coverage Δ





core/modules/bypass.h
0% <ø> (-100%)
❌


core/modules/vlan_pop.h
0% <ø> (-100%)
❌


core/modules/exact_match.h
0% <ø> (-92.86%)
❌


core/modules/vlan_pop.cc
7.14% <ø> (-92.86%)
❌


core/modules/vlan_push.cc
10% <ø> (-90%)
❌


core/modules/generic_encap.cc
2.08% <ø> (-87.5%)
❌


core/drivers/unix_socket.cc
1.01% <ø> (-81.82%)
❌


core/modules/bypass.cc
25% <ø> (-75%)
❌


core/modules/exact_match.cc
2.63% <ø> (-72.81%)
❌


core/modules/port_out.cc
2.85% <ø> (-71.43%)
❌


... and 38 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 89c74ee...c542aa6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,308,2017-02-17T20:24:10Z,2017-02-20T21:19:08Z,2017-02-24T22:50:03Z,MERGED,True,15,618,25,https://github.com/justinemarie,Update docs to point to wiki,3,[],https://github.com/NetSys/bess/pull/308,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/308#issuecomment-281173911,:-),"Fixed! Thanks, Chang!",True,{}
NetSys/bess,https://github.com/NetSys/bess,308,2017-02-17T20:24:10Z,2017-02-20T21:19:08Z,2017-02-24T22:50:03Z,MERGED,True,15,618,25,https://github.com/justinemarie,Update docs to point to wiki,3,[],https://github.com/NetSys/bess/pull/308,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/308#issuecomment-281175154,:-),"Chang, could you merge?",True,{}
NetSys/bess,https://github.com/NetSys/bess,308,2017-02-17T20:24:10Z,2017-02-20T21:19:08Z,2017-02-24T22:50:03Z,MERGED,True,15,618,25,https://github.com/justinemarie,Update docs to point to wiki,3,[],https://github.com/NetSys/bess/pull/308,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/308#issuecomment-281175260,:-),Waiting for the CI builds. Will merge once it is finished :),True,{}
NetSys/bess,https://github.com/NetSys/bess,308,2017-02-17T20:24:10Z,2017-02-20T21:19:08Z,2017-02-24T22:50:03Z,MERGED,True,15,618,25,https://github.com/justinemarie,Update docs to point to wiki,3,[],https://github.com/NetSys/bess/pull/308,https://github.com/changlan,7,https://github.com/NetSys/bess/pull/308#issuecomment-281183652,:-),,True,{}
NetSys/bess,https://github.com/NetSys/bess,309,2017-02-17T22:50:28Z,2017-02-18T21:11:54Z,2017-02-19T05:58:23Z,MERGED,True,53,13,4,https://github.com/barath,Fixes the behavior of TC tree size counting so as to avoid triggering…,2,[],https://github.com/NetSys/bess/pull/309,https://github.com/barath,1,https://github.com/NetSys/bess/pull/309,… a race.,… a race.,True,{}
NetSys/bess,https://github.com/NetSys/bess,309,2017-02-17T22:50:28Z,2017-02-18T21:11:54Z,2017-02-19T05:58:23Z,MERGED,True,53,13,4,https://github.com/barath,Fixes the behavior of TC tree size counting so as to avoid triggering…,2,[],https://github.com/NetSys/bess/pull/309,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/309#issuecomment-280811619,… a race.,Looks good. Just one question. Why store sizes in TrafficClassBuilder::tc_count instead of as a member of TrafficClass?,True,{}
NetSys/bess,https://github.com/NetSys/bess,309,2017-02-17T22:50:28Z,2017-02-18T21:11:54Z,2017-02-19T05:58:23Z,MERGED,True,53,13,4,https://github.com/barath,Fixes the behavior of TC tree size counting so as to avoid triggering…,2,[],https://github.com/NetSys/bess/pull/309,https://github.com/barath,3,https://github.com/NetSys/bess/pull/309#issuecomment-280814297,… a race.,"I didn't store it in TrafficClass to minimize unnecessary things being held
in TrafficClass objects which are on the fast path.
…
On Fri, Feb 17, 2017 at 5:46 PM, Melvin Walls ***@***.***> wrote:
 Looks good. Just one question. Why store sizes in
 TrafficClassBuilder::tc_count instead of as a member of TrafficClass?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#309 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7eqaU-horocXhCteszU_WjOAnNhihks5rdk17gaJpZM4ME2M2>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,309,2017-02-17T22:50:28Z,2017-02-18T21:11:54Z,2017-02-19T05:58:23Z,MERGED,True,53,13,4,https://github.com/barath,Fixes the behavior of TC tree size counting so as to avoid triggering…,2,[],https://github.com/NetSys/bess/pull/309,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/309#issuecomment-280814573,… a race.,Gotcha. Fine by me.,True,{}
NetSys/bess,https://github.com/NetSys/bess,309,2017-02-17T22:50:28Z,2017-02-18T21:11:54Z,2017-02-19T05:58:23Z,MERGED,True,53,13,4,https://github.com/barath,Fixes the behavior of TC tree size counting so as to avoid triggering…,2,[],https://github.com/NetSys/bess/pull/309,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/309#issuecomment-280815441,… a race.,"Codecov Report

Merging #309 into master will decrease coverage by -14.06%.
The diff coverage is 61.9%.

@@             Coverage Diff             @@
##           master     #309       +/-   ##
===========================================
- Coverage   40.29%   26.24%   -14.06%     
===========================================
  Files         153      153               
  Lines        7331     7347       +16     
===========================================
- Hits         2954     1928     -1026     
- Misses       4377     5419     +1042



Impacted Files
Coverage Δ





core/traffic_class.h
60.86% <100%> (-19.69%)
❌


core/scheduler.h
64.28% <100%> (-21.43%)
❌


core/traffic_class.cc
17.45% <57.89%> (-39.25%)
❌


core/modules/bypass.h
0% <ø> (-100%)
❌


core/modules/vlan_pop.h
0% <ø> (-100%)
❌


core/modules/exact_match.h
0% <ø> (-92.86%)
❌


core/modules/vlan_pop.cc
7.14% <ø> (-92.86%)
❌


core/modules/vlan_push.cc
10% <ø> (-90%)
❌


core/modules/generic_encap.cc
2.08% <ø> (-87.5%)
❌


core/drivers/unix_socket.cc
1.01% <ø> (-81.82%)
❌


... and 39 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 89c74ee...6e24d1b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,309,2017-02-17T22:50:28Z,2017-02-18T21:11:54Z,2017-02-19T05:58:23Z,MERGED,True,53,13,4,https://github.com/barath,Fixes the behavior of TC tree size counting so as to avoid triggering…,2,[],https://github.com/NetSys/bess/pull/309,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/309#issuecomment-280875391,… a race.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,310,2017-02-18T00:55:09Z,2017-02-18T02:51:47Z,2017-02-18T02:54:14Z,MERGED,True,5,5,1,https://github.com/sangjinhan,Do not use exit() in a child process,1,[],https://github.com/NetSys/bess/pull/310,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/310,"gRPC crashes when a child process from frok() terminates with exit(). Some of its global (static) objects incorrectly free up resources (more specifically, threads) that are still being used by the parent process.
When VPort is created for a network namespace, the driver internally uses fork() so that its child process can attach to the namespace and set up IP addresses as specified. This patch replace exit() done in the child process with _exit(), so that the offending object destructors can be skipped.","gRPC crashes when a child process from frok() terminates with exit(). Some of its global (static) objects incorrectly free up resources (more specifically, threads) that are still being used by the parent process.
When VPort is created for a network namespace, the driver internally uses fork() so that its child process can attach to the namespace and set up IP addresses as specified. This patch replace exit() done in the child process with _exit(), so that the offending object destructors can be skipped.",True,{}
NetSys/bess,https://github.com/NetSys/bess,310,2017-02-18T00:55:09Z,2017-02-18T02:51:47Z,2017-02-18T02:54:14Z,MERGED,True,5,5,1,https://github.com/sangjinhan,Do not use exit() in a child process,1,[],https://github.com/NetSys/bess/pull/310,https://github.com/barath,2,https://github.com/NetSys/bess/pull/310#issuecomment-280816430,"gRPC crashes when a child process from frok() terminates with exit(). Some of its global (static) objects incorrectly free up resources (more specifically, threads) that are still being used by the parent process.
When VPort is created for a network namespace, the driver internally uses fork() so that its child process can attach to the namespace and set up IP addresses as specified. This patch replace exit() done in the child process with _exit(), so that the offending object destructors can be skipped.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,311,2017-02-18T01:31:25Z,2017-02-18T02:50:12Z,2017-02-18T02:51:27Z,MERGED,True,5,5,3,https://github.com/sangjinhan,Fix errors with module command arguments in sample scripts,2,[],https://github.com/NetSys/bess/pull/311,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/311,"We do not support module_foo.command_bar(xxx, yyy) syntax any longer since we switched to protobuf. Only keyword arguments are supported, as in module_foo.command_bar(a=xxx, b=yyy). This PR updates outdated sample scripts in that regard.","We do not support module_foo.command_bar(xxx, yyy) syntax any longer since we switched to protobuf. Only keyword arguments are supported, as in module_foo.command_bar(a=xxx, b=yyy). This PR updates outdated sample scripts in that regard.",True,{}
NetSys/bess,https://github.com/NetSys/bess,311,2017-02-18T01:31:25Z,2017-02-18T02:50:12Z,2017-02-18T02:51:27Z,MERGED,True,5,5,3,https://github.com/sangjinhan,Fix errors with module command arguments in sample scripts,2,[],https://github.com/NetSys/bess/pull/311,https://github.com/barath,2,https://github.com/NetSys/bess/pull/311#issuecomment-280816250,"We do not support module_foo.command_bar(xxx, yyy) syntax any longer since we switched to protobuf. Only keyword arguments are supported, as in module_foo.command_bar(a=xxx, b=yyy). This PR updates outdated sample scripts in that regard.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,312,2017-02-20T07:49:22Z,2017-02-20T20:30:17Z,2017-02-24T22:50:05Z,MERGED,True,3,2,2,https://github.com/sangjinhan,Revise minor formatting issues in bessctl,1,[],https://github.com/NetSys/bess/pull/312,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/312,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,312,2017-02-20T07:49:22Z,2017-02-20T20:30:17Z,2017-02-24T22:50:05Z,MERGED,True,3,2,2,https://github.com/sangjinhan,Revise minor formatting issues in bessctl,1,[],https://github.com/NetSys/bess/pull/312,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/312#issuecomment-281015302,,"Codecov Report

Merging #312 into master will increase coverage by 2.83%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #312      +/-   ##
==========================================
+ Coverage   22.82%   25.66%   +2.83%     
==========================================
  Files         151      151              
  Lines        7307     7307              
==========================================
+ Hits         1668     1875     +207     
+ Misses       5639     5432     -207



Impacted Files
Coverage Δ





core/traffic_class.h
60.86% <ø> (+1.44%)
✅


core/packet.h
42.1% <ø> (+5.26%)
✅


core/worker.h
83.33% <ø> (+5.55%)
✅


core/pktbatch.h
85.71% <ø> (+14.28%)
✅


core/modules/flowgen.h
66.66% <ø> (+66.66%)
✅


core/modules/flowgen.cc
69.45% <ø> (+68.36%)
✅


core/utils/random.h
100% <ø> (+100%)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 755f148...eb62bf9. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,312,2017-02-20T07:49:22Z,2017-02-20T20:30:17Z,2017-02-24T22:50:05Z,MERGED,True,3,2,2,https://github.com/sangjinhan,Revise minor formatting issues in bessctl,1,[],https://github.com/NetSys/bess/pull/312,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/312#issuecomment-281175058,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,313,2017-02-20T21:12:57Z,2017-02-27T20:31:13Z,2017-02-27T20:31:47Z,MERGED,True,13,65,2,https://github.com/changlan,Use reflection to resolve protobuf message types,1,[],https://github.com/NetSys/bess/pull/313,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/313,This PR avoids manually enumerating message types as we current do.,This PR avoids manually enumerating message types as we current do.,True,{}
NetSys/bess,https://github.com/NetSys/bess,313,2017-02-20T21:12:57Z,2017-02-27T20:31:13Z,2017-02-27T20:31:47Z,MERGED,True,13,65,2,https://github.com/changlan,Use reflection to resolve protobuf message types,1,[],https://github.com/NetSys/bess/pull/313,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/313#issuecomment-281190745,This PR avoids manually enumerating message types as we current do.,"Codecov Report

Merging #313 into master will increase coverage by 4.13%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #313      +/-   ##
==========================================
+ Coverage   22.79%   26.92%   +4.13%     
==========================================
  Files         155      153       -2     
  Lines        7411     7325      -86     
==========================================
+ Hits         1689     1972     +283     
+ Misses       5722     5353     -369



Impacted Files
Coverage Δ





core/drivers/vport.h
44.44% <0%> (-55.56%)
❌


core/bessd.cc
62.25% <0%> (-2.73%)
❌


core/module.cc
48.55% <0%> (-0.48%)
❌


core/drivers/pmd.h
50% <0%> (ø)
✅


core/modules/port_inc.cc
4.22% <0%> (ø)
✅


core/utils/tcp_flow_reconstruct.h
0% <0%> (ø)
✅


core/drivers/vport_zc.h
100% <0%> (ø)
✅


core/modules/port_out.cc
2.85% <0%> (ø)
✅


core/module.h
66.66% <0%> (ø)
✅


core/port.cc




... and 18 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 852bab1...e1273c4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,313,2017-02-20T21:12:57Z,2017-02-27T20:31:13Z,2017-02-27T20:31:47Z,MERGED,True,13,65,2,https://github.com/changlan,Use reflection to resolve protobuf message types,1,[],https://github.com/NetSys/bess/pull/313,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/313#issuecomment-282843845,This PR avoids manually enumerating message types as we current do.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,315,2017-02-23T22:03:52Z,2017-02-24T22:48:26Z,2017-02-25T00:39:06Z,MERGED,True,101,3,5,https://github.com/changlan,Dynamically load modules,1,[],https://github.com/NetSys/bess/pull/315,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/315,"Compile modules into standalone dynamic libraries
Load those modules in the modules directory at runtime.","Compile modules into standalone dynamic libraries
Load those modules in the modules directory at runtime.",True,{}
NetSys/bess,https://github.com/NetSys/bess,315,2017-02-23T22:03:52Z,2017-02-24T22:48:26Z,2017-02-25T00:39:06Z,MERGED,True,101,3,5,https://github.com/changlan,Dynamically load modules,1,[],https://github.com/NetSys/bess/pull/315,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/315#issuecomment-282160799,"Compile modules into standalone dynamic libraries
Load those modules in the modules directory at runtime.","Codecov Report

Merging #315 into master will increase coverage by 3.94%.
The diff coverage is 80.76%.

@@            Coverage Diff             @@
##           master     #315      +/-   ##
==========================================
+ Coverage   21.79%   25.74%   +3.94%     
==========================================
  Files         153      153              
  Lines        7332     7770     +438     
==========================================
+ Hits         1598     2000     +402     
- Misses       5734     5770      +36



Impacted Files
Coverage Δ





core/bessd.cc
64.97% <80.76%> (+2.72%)
✅


core/drivers/unix_socket.cc
1.01% <ø> (-81.82%)
❌


core/modules/port_out.cc
2.85% <ø> (-71.43%)
❌


core/modules/port_inc.cc
4.22% <ø> (-60.57%)
❌


core/modules/random_update.cc
4.05% <ø> (-59.46%)
❌


core/utils/ether.cc
0% <ø> (-52.95%)
❌


core/modules/random_update.h
0% <ø> (-50%)
❌


core/modules/port_inc.h
0% <ø> (-50%)
❌


core/modules/port_out.h
0% <ø> (-50%)
❌


core/drivers/vport.h
41.66% <ø> (-43.52%)
❌


... and 26 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 008caae...93a71f6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,315,2017-02-23T22:03:52Z,2017-02-24T22:48:26Z,2017-02-25T00:39:06Z,MERGED,True,101,3,5,https://github.com/changlan,Dynamically load modules,1,[],https://github.com/NetSys/bess/pull/315,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/315#issuecomment-282432337,"Compile modules into standalone dynamic libraries
Load those modules in the modules directory at runtime.",kat plz? :],True,{}
NetSys/bess,https://github.com/NetSys/bess,315,2017-02-23T22:03:52Z,2017-02-24T22:48:26Z,2017-02-25T00:39:06Z,MERGED,True,101,3,5,https://github.com/changlan,Dynamically load modules,1,[],https://github.com/NetSys/bess/pull/315,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/315#issuecomment-282443100,"Compile modules into standalone dynamic libraries
Load those modules in the modules directory at runtime.",^ↀᴥↀ^ meow,True,{}
NetSys/bess,https://github.com/NetSys/bess,316,2017-02-26T09:43:51Z,2017-02-27T01:18:16Z,2017-02-27T01:19:56Z,MERGED,True,172,220,3,https://github.com/sangjinhan,Further optimizations to AVX2 checksumming,3,[],https://github.com/NetSys/bess/pull/316,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/316,"Recent Intel processors have two vector load units that can be simultaneously utilized for every cycle. This patch parallelizes checksum accumulation with two input streams. 30-40% improvement is observed with 500B or larger packets.
It also includes some style fixups.","Recent Intel processors have two vector load units that can be simultaneously utilized for every cycle. This patch parallelizes checksum accumulation with two input streams. 30-40% improvement is observed with 500B or larger packets.
It also includes some style fixups.",True,{}
NetSys/bess,https://github.com/NetSys/bess,316,2017-02-26T09:43:51Z,2017-02-27T01:18:16Z,2017-02-27T01:19:56Z,MERGED,True,172,220,3,https://github.com/sangjinhan,Further optimizations to AVX2 checksumming,3,[],https://github.com/NetSys/bess/pull/316,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/316#issuecomment-282544462,"Recent Intel processors have two vector load units that can be simultaneously utilized for every cycle. This patch parallelizes checksum accumulation with two input streams. 30-40% improvement is observed with 500B or larger packets.
It also includes some style fixups.","Codecov Report

Merging #316 into master will decrease coverage by -0.89%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #316      +/-   ##
==========================================
- Coverage   23.84%   22.96%   -0.89%     
==========================================
  Files         153      153              
  Lines        7360     7360              
==========================================
- Hits         1755     1690      -65     
- Misses       5605     5670      +65



Impacted Files
Coverage Δ





core/modules/generic_encap.cc
2.08% <ø> (-87.5%)
❌


core/modules/generic_encap.h
0% <ø> (-50%)
❌


core/packet.h
36.84% <ø> (-18.43%)
❌


core/modules/rewrite.cc
63.76% <ø> (-17.4%)
❌


core/module.h
66.66% <ø> (-3.85%)
❌




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9a51bb8...25a1a76. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,316,2017-02-26T09:43:51Z,2017-02-27T01:18:16Z,2017-02-27T01:19:56Z,MERGED,True,172,220,3,https://github.com/sangjinhan,Further optimizations to AVX2 checksumming,3,[],https://github.com/NetSys/bess/pull/316,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/316#issuecomment-282544463,"Recent Intel processors have two vector load units that can be simultaneously utilized for every cycle. This patch parallelizes checksum accumulation with two input streams. 30-40% improvement is observed with 500B or larger packets.
It also includes some style fixups.","Codecov Report

Merging #316 into master will increase coverage by 2.86%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #316      +/-   ##
==========================================
+ Coverage   23.84%   26.71%   +2.86%     
==========================================
  Files         153      155       +2     
  Lines        7360     7671     +311     
==========================================
+ Hits         1755     2049     +294     
- Misses       5605     5622      +17



Impacted Files
Coverage Δ





core/modules/generic_encap.cc
2.08% <0%> (-87.5%)
❌


core/modules/generic_encap.h
0% <0%> (-50%)
❌


core/module.h
58.97% <0%> (-11.54%)
❌


core/packet.h
47.36% <0%> (-7.9%)
❌


core/drivers/vport.cc
5.15% <0%> (-6.37%)
❌


core/module.cc
42.5% <0%> (-6.06%)
❌


core/modules/ip_lookup.cc
3.3% <0%> (-0.31%)
❌


core/modules/queue_inc.cc
4.39% <0%> (-0.02%)
❌


core/gtest_main.cc




core/port.h
33.33% <0%> (ø)



... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9a51bb8...25ad0f6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,316,2017-02-26T09:43:51Z,2017-02-27T01:18:16Z,2017-02-27T01:19:56Z,MERGED,True,172,220,3,https://github.com/sangjinhan,Further optimizations to AVX2 checksumming,3,[],https://github.com/NetSys/bess/pull/316,https://github.com/barath,4,https://github.com/NetSys/bess/pull/316#issuecomment-282606154,"Recent Intel processors have two vector load units that can be simultaneously utilized for every cycle. This patch parallelizes checksum accumulation with two input streams. 30-40% improvement is observed with 500B or larger packets.
It also includes some style fixups.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,317,2017-02-26T10:17:34Z,2017-02-27T01:20:11Z,2017-02-27T01:25:52Z,MERGED,True,86,76,2,https://github.com/sangjinhan,Faster unit test for TcpFlowReconstruct,4,[],https://github.com/NetSys/bess/pull/317,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/317,"Unit test TcpFlowReconstructTest.ReorderedReconstruction takes around 15 seconds. This PR reduces the delay down to 1ms.

Optimize TcpFlowReconstruct by using a sorted list of TCP segments ([start_offset, end_offset]), rather than maintaining a bitmap.
Do not consider pure ACK packets when generating N! permutations for reordering test.","Unit test TcpFlowReconstructTest.ReorderedReconstruction takes around 15 seconds. This PR reduces the delay down to 1ms.

Optimize TcpFlowReconstruct by using a sorted list of TCP segments ([start_offset, end_offset]), rather than maintaining a bitmap.
Do not consider pure ACK packets when generating N! permutations for reordering test.",True,{}
NetSys/bess,https://github.com/NetSys/bess,317,2017-02-26T10:17:34Z,2017-02-27T01:20:11Z,2017-02-27T01:25:52Z,MERGED,True,86,76,2,https://github.com/sangjinhan,Faster unit test for TcpFlowReconstruct,4,[],https://github.com/NetSys/bess/pull/317,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/317#issuecomment-282547770,"Unit test TcpFlowReconstructTest.ReorderedReconstruction takes around 15 seconds. This PR reduces the delay down to 1ms.

Optimize TcpFlowReconstruct by using a sorted list of TCP segments ([start_offset, end_offset]), rather than maintaining a bitmap.
Do not consider pure ACK packets when generating N! permutations for reordering test.","Codecov Report

Merging #317 into master will increase coverage by 3.1%.
The diff coverage is 0%.

@@            Coverage Diff            @@
##           master     #317     +/-   ##
=========================================
+ Coverage   23.84%   26.94%   +3.1%     
=========================================
  Files         153      155      +2     
  Lines        7360     7674    +314     
=========================================
+ Hits         1755     2068    +313     
- Misses       5605     5606      +1



Impacted Files
Coverage Δ





core/utils/tcp_flow_reconstruct.h
0% <0%> (ø)
✅


core/modules/generic_encap.cc
2.08% <0%> (-87.5%)
❌


core/modules/generic_encap.h
0% <0%> (-50%)
❌


core/modules/rewrite.cc
63.76% <0%> (-17.4%)
❌


core/packet.h
42.1% <0%> (-13.16%)
❌


core/module.h
58.11% <0%> (-12.4%)
❌


core/drivers/vport.cc
5.15% <0%> (-6.37%)
❌


core/module.cc
47.7% <0%> (-0.86%)
❌


core/modules/ip_lookup.cc
3.3% <0%> (-0.31%)
❌


core/modules/queue_inc.cc
4.39% <0%> (-0.02%)
❌


... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9a51bb8...3d6a2e3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,317,2017-02-26T10:17:34Z,2017-02-27T01:20:11Z,2017-02-27T01:25:52Z,MERGED,True,86,76,2,https://github.com/sangjinhan,Faster unit test for TcpFlowReconstruct,4,[],https://github.com/NetSys/bess/pull/317,https://github.com/barath,3,https://github.com/NetSys/bess/pull/317#issuecomment-282606748,"Unit test TcpFlowReconstructTest.ReorderedReconstruction takes around 15 seconds. This PR reduces the delay down to 1ms.

Optimize TcpFlowReconstruct by using a sorted list of TCP segments ([start_offset, end_offset]), rather than maintaining a bitmap.
Do not consider pure ACK packets when generating N! permutations for reordering test.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,318,2017-02-26T10:28:18Z,2017-02-26T17:27:32Z,2017-02-26T17:29:47Z,MERGED,True,22,12,8,https://github.com/sangjinhan,Fix deinit crash,3,[],https://github.com/NetSys/bess/pull/318,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/318,"When module Init() fails, the module's DeInit() function will be called immediately. This behavior is different from the legacy C version, where DeInit() was skipped for half-initialized modules. Some modules' DeInit() functions crash in this case.
How to reproduce:
bessctl add module PortInc
(module Init() fails since port is not specified, then DeIniit() crashes with a null pointer access)","When module Init() fails, the module's DeInit() function will be called immediately. This behavior is different from the legacy C version, where DeInit() was skipped for half-initialized modules. Some modules' DeInit() functions crash in this case.
How to reproduce:
bessctl add module PortInc
(module Init() fails since port is not specified, then DeIniit() crashes with a null pointer access)",True,{}
NetSys/bess,https://github.com/NetSys/bess,318,2017-02-26T10:28:18Z,2017-02-26T17:27:32Z,2017-02-26T17:29:47Z,MERGED,True,22,12,8,https://github.com/sangjinhan,Fix deinit crash,3,[],https://github.com/NetSys/bess/pull/318,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/318#issuecomment-282546531,"When module Init() fails, the module's DeInit() function will be called immediately. This behavior is different from the legacy C version, where DeInit() was skipped for half-initialized modules. Some modules' DeInit() functions crash in this case.
How to reproduce:
bessctl add module PortInc
(module Init() fails since port is not specified, then DeIniit() crashes with a null pointer access)","Codecov Report

Merging #318 into master will decrease coverage by -0.89%.
The diff coverage is 0%.

@@            Coverage Diff             @@
##           master     #318      +/-   ##
==========================================
- Coverage   23.84%   22.95%   -0.89%     
==========================================
  Files         153      153              
  Lines        7360     7361       +1     
==========================================
- Hits         1755     1690      -65     
- Misses       5605     5671      +66



Impacted Files
Coverage Δ





core/module.cc
49.02% <ø> (+0.47%)
✅


core/module.h
66.66% <ø> (-3.85%)
❌


core/modules/queue_out.cc
2.77% <ø> (-0.08%)
❌


core/modules/port_inc.cc
4.22% <ø> (ø)
✅


core/modules/ip_lookup.cc
3.57% <ø> (-0.05%)
❌


core/modules/queue_inc.cc
4.34% <ø> (-0.07%)
❌


core/bessctl.cc
18.23% <ø> (ø)
✅


core/modules/port_out.cc
2.85% <ø> (ø)
✅


core/modules/generic_encap.cc
2.08% <ø> (-87.5%)
❌


core/modules/generic_encap.h
0% <ø> (-50%)
❌


... and 3 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9a51bb8...f4b23c3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,318,2017-02-26T10:28:18Z,2017-02-26T17:27:32Z,2017-02-26T17:29:47Z,MERGED,True,22,12,8,https://github.com/sangjinhan,Fix deinit crash,3,[],https://github.com/NetSys/bess/pull/318,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/318#issuecomment-282546532,"When module Init() fails, the module's DeInit() function will be called immediately. This behavior is different from the legacy C version, where DeInit() was skipped for half-initialized modules. Some modules' DeInit() functions crash in this case.
How to reproduce:
bessctl add module PortInc
(module Init() fails since port is not specified, then DeIniit() crashes with a null pointer access)","Codecov Report

Merging #318 into master will increase coverage by 1.92%.
The diff coverage is 0%.

@@            Coverage Diff             @@
##           master     #318      +/-   ##
==========================================
+ Coverage   23.84%   25.77%   +1.92%     
==========================================
  Files         153      153              
  Lines        7360     7361       +1     
==========================================
+ Hits         1755     1897     +142     
+ Misses       5605     5464     -141



Impacted Files
Coverage Δ





core/module.cc
49.02% <ø> (+0.47%)
✅


core/module.h
66.66% <ø> (-3.85%)
❌


core/modules/queue_out.cc
2.77% <ø> (-0.08%)
❌


core/modules/port_inc.cc
4.22% <ø> (ø)
✅


core/modules/ip_lookup.cc
3.57% <ø> (-0.05%)
❌


core/modules/queue_inc.cc
4.34% <ø> (-0.07%)
❌


core/bessctl.cc
18.23% <ø> (ø)
✅


core/modules/port_out.cc
2.85% <ø> (ø)
✅


core/modules/generic_encap.cc
2.08% <ø> (-87.5%)
❌


core/modules/generic_encap.h
0% <ø> (-50%)
❌


... and 9 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9a51bb8...f4b23c3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,318,2017-02-26T10:28:18Z,2017-02-26T17:27:32Z,2017-02-26T17:29:47Z,MERGED,True,22,12,8,https://github.com/sangjinhan,Fix deinit crash,3,[],https://github.com/NetSys/bess/pull/318,https://github.com/barath,4,https://github.com/NetSys/bess/pull/318#issuecomment-282571921,"When module Init() fails, the module's DeInit() function will be called immediately. This behavior is different from the legacy C version, where DeInit() was skipped for half-initialized modules. Some modules' DeInit() functions crash in this case.
How to reproduce:
bessctl add module PortInc
(module Init() fails since port is not specified, then DeIniit() crashes with a null pointer access)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,319,2017-02-26T23:11:51Z,2017-02-27T00:35:30Z,2017-02-27T08:41:07Z,MERGED,True,0,17,1,https://github.com/sangjinhan,Remove RoundRobin module test,1,[],https://github.com/NetSys/bess/pull/319,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/319,"round_robin_test.cc is the only per-module unit test at the moment, although it doesn't perform any useful testing. This PR removes the file to avoid a false sense of confidence. Justine's module test framework would be a more effective for module test, at least for macroscopic ones.","round_robin_test.cc is the only per-module unit test at the moment, although it doesn't perform any useful testing. This PR removes the file to avoid a false sense of confidence. Justine's module test framework would be a more effective for module test, at least for macroscopic ones.",True,{}
NetSys/bess,https://github.com/NetSys/bess,319,2017-02-26T23:11:51Z,2017-02-27T00:35:30Z,2017-02-27T08:41:07Z,MERGED,True,0,17,1,https://github.com/sangjinhan,Remove RoundRobin module test,1,[],https://github.com/NetSys/bess/pull/319,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/319#issuecomment-282602357,"round_robin_test.cc is the only per-module unit test at the moment, although it doesn't perform any useful testing. This PR removes the file to avoid a false sense of confidence. Justine's module test framework would be a more effective for module test, at least for macroscopic ones.","Codecov Report

Merging #319 into master will increase coverage by 4.09%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #319      +/-   ##
==========================================
+ Coverage   22.79%   26.88%   +4.09%     
==========================================
  Files         155      155              
  Lines        7408     7408              
==========================================
+ Hits         1689     1992     +303     
+ Misses       5719     5416     -303



Impacted Files
Coverage Δ





core/traffic_class.h
60.86% <0%> (+1.44%)
✅


core/packet.h
42.1% <0%> (+5.26%)
✅


core/worker.h
83.33% <0%> (+5.55%)
✅


core/pktbatch.h
85.71% <0%> (+14.28%)
✅


core/modules/flowgen.h
66.66% <0%> (+66.66%)
✅


core/modules/flowgen.cc
69.45% <0%> (+68.36%)
✅


core/modules/exact_match.cc
75.43% <0%> (+72.8%)
✅


core/modules/exact_match.h
92.85% <0%> (+92.85%)
✅


core/utils/random.h
100% <0%> (+100%)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 001dd7d...f68e73b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,319,2017-02-26T23:11:51Z,2017-02-27T00:35:30Z,2017-02-27T08:41:07Z,MERGED,True,0,17,1,https://github.com/sangjinhan,Remove RoundRobin module test,1,[],https://github.com/NetSys/bess/pull/319,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/319#issuecomment-282602524,"round_robin_test.cc is the only per-module unit test at the moment, although it doesn't perform any useful testing. This PR removes the file to avoid a false sense of confidence. Justine's module test framework would be a more effective for module test, at least for macroscopic ones.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,320,2017-02-27T00:24:22Z,2017-02-27T07:48:46Z,2017-02-27T08:41:05Z,MERGED,True,7,1,1,https://github.com/sangjinhan,Suppress scapy IPv6 warning,1,[],https://github.com/NetSys/bess/pull/320,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/320,"Scapy can generate this warning when it is imported:
WARNING: No route found for IPv6 destination :: (no default route?)

This warning message is suprious in that it only matters using Scapy send() function for IPv6 packets, whereas bessctl sample scripts use Scapy for packet crafting, not packet injection.","Scapy can generate this warning when it is imported:
WARNING: No route found for IPv6 destination :: (no default route?)

This warning message is suprious in that it only matters using Scapy send() function for IPv6 packets, whereas bessctl sample scripts use Scapy for packet crafting, not packet injection.",True,{}
NetSys/bess,https://github.com/NetSys/bess,320,2017-02-27T00:24:22Z,2017-02-27T07:48:46Z,2017-02-27T08:41:05Z,MERGED,True,7,1,1,https://github.com/sangjinhan,Suppress scapy IPv6 warning,1,[],https://github.com/NetSys/bess/pull/320,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/320#issuecomment-282605119,"Scapy can generate this warning when it is imported:
WARNING: No route found for IPv6 destination :: (no default route?)

This warning message is suprious in that it only matters using Scapy send() function for IPv6 packets, whereas bessctl sample scripts use Scapy for packet crafting, not packet injection.","Codecov Report

Merging #320 into master will increase coverage by 4.09%.
The diff coverage is n/a.

@@            Coverage Diff             @@
##           master     #320      +/-   ##
==========================================
+ Coverage   22.79%   26.88%   +4.09%     
==========================================
  Files         155      155              
  Lines        7408     7408              
==========================================
+ Hits         1689     1992     +303     
+ Misses       5719     5416     -303



Impacted Files
Coverage Δ





core/traffic_class.h
60.86% <0%> (+1.44%)
✅


core/packet.h
42.1% <0%> (+5.26%)
✅


core/worker.h
83.33% <0%> (+5.55%)
✅


core/pktbatch.h
85.71% <0%> (+14.28%)
✅


core/modules/flowgen.h
66.66% <0%> (+66.66%)
✅


core/modules/flowgen.cc
69.45% <0%> (+68.36%)
✅


core/modules/exact_match.cc
75.43% <0%> (+72.8%)
✅


core/modules/exact_match.h
92.85% <0%> (+92.85%)
✅


core/utils/random.h
100% <0%> (+100%)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 001dd7d...6d31186. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,320,2017-02-27T00:24:22Z,2017-02-27T07:48:46Z,2017-02-27T08:41:05Z,MERGED,True,7,1,1,https://github.com/sangjinhan,Suppress scapy IPv6 warning,1,[],https://github.com/NetSys/bess/pull/320,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/320#issuecomment-282649992,"Scapy can generate this warning when it is imported:
WARNING: No route found for IPv6 destination :: (no default route?)

This warning message is suprious in that it only matters using Scapy send() function for IPv6 packets, whereas bessctl sample scripts use Scapy for packet crafting, not packet injection.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,321,2017-02-27T08:40:37Z,2017-03-05T19:32:47Z,2017-03-05T19:33:29Z,MERGED,True,44,23,5,https://github.com/sangjinhan,Do not swap endianness for value_bin,4,[],https://github.com/NetSys/bess/pull/321,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/321,"SetMetadata takes two different types of values: value_int and value_bin. When value_bin is given to the module, the data should be used verbatim. At the moment, value_bin is only used by the samples/vxlan example, which does not work correctly due to incorrect metadata values. This PR fixes this issue by not converting endianness for value_bin data.
This PR also fixes an IPEncap bug found during the process. The module occasionally generates incorrect IP checksum values, depending on the garbage values in the IP checksum field. DPDK checksum routines require the field to be set to zero before calculating checksum. Switched to utils/checksum.h which does not impose this limitation.","SetMetadata takes two different types of values: value_int and value_bin. When value_bin is given to the module, the data should be used verbatim. At the moment, value_bin is only used by the samples/vxlan example, which does not work correctly due to incorrect metadata values. This PR fixes this issue by not converting endianness for value_bin data.
This PR also fixes an IPEncap bug found during the process. The module occasionally generates incorrect IP checksum values, depending on the garbage values in the IP checksum field. DPDK checksum routines require the field to be set to zero before calculating checksum. Switched to utils/checksum.h which does not impose this limitation.",True,{}
NetSys/bess,https://github.com/NetSys/bess,321,2017-02-27T08:40:37Z,2017-03-05T19:32:47Z,2017-03-05T19:33:29Z,MERGED,True,44,23,5,https://github.com/sangjinhan,Do not swap endianness for value_bin,4,[],https://github.com/NetSys/bess/pull/321,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/321#issuecomment-282669770,"SetMetadata takes two different types of values: value_int and value_bin. When value_bin is given to the module, the data should be used verbatim. At the moment, value_bin is only used by the samples/vxlan example, which does not work correctly due to incorrect metadata values. This PR fixes this issue by not converting endianness for value_bin data.
This PR also fixes an IPEncap bug found during the process. The module occasionally generates incorrect IP checksum values, depending on the garbage values in the IP checksum field. DPDK checksum routines require the field to be set to zero before calculating checksum. Switched to utils/checksum.h which does not impose this limitation.","Codecov Report

Merging #321 into master will increase coverage by 13.05%.
The diff coverage is 0%.

@@             Coverage Diff             @@
##           master     #321       +/-   ##
===========================================
+ Coverage   22.79%   35.84%   +13.05%     
===========================================
  Files         155      156        +1     
  Lines        7411     7420        +9     
===========================================
+ Hits         1689     2660      +971     
+ Misses       5722     4760      -962



Impacted Files
Coverage Δ





core/utils/ip.h
0% <ø> (ø)
✅


core/utils/ether.h
100% <ø> (ø)
✅


core/modules/ip_encap.cc
3.12% <0%> (-0.21%)
❌


core/modules/set_metadata.cc
65.21% <0%> (+1.83%)
✅


core/utils/checksum.h
0% <0%> (ø)



core/module.h
67.94% <0%> (+1.28%)
✅


core/worker.h
83.33% <0%> (+5.55%)
✅


core/pktbatch.h
85.71% <0%> (+14.28%)
✅


core/port.cc
38.05% <0%> (+15.04%)
✅


core/bessctl.cc
34.96% <0%> (+16.73%)
✅


... and 31 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 852bab1...dfed76c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,321,2017-02-27T08:40:37Z,2017-03-05T19:32:47Z,2017-03-05T19:33:29Z,MERGED,True,44,23,5,https://github.com/sangjinhan,Do not swap endianness for value_bin,4,[],https://github.com/NetSys/bess/pull/321,https://github.com/barath,3,https://github.com/NetSys/bess/pull/321#issuecomment-284254193,"SetMetadata takes two different types of values: value_int and value_bin. When value_bin is given to the module, the data should be used verbatim. At the moment, value_bin is only used by the samples/vxlan example, which does not work correctly due to incorrect metadata values. This PR fixes this issue by not converting endianness for value_bin data.
This PR also fixes an IPEncap bug found during the process. The module occasionally generates incorrect IP checksum values, depending on the garbage values in the IP checksum field. DPDK checksum routines require the field to be set to zero before calculating checksum. Switched to utils/checksum.h which does not impose this limitation.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,322,2017-02-28T02:34:56Z,2017-02-28T18:20:09Z,2017-02-28T18:20:41Z,MERGED,True,127,51,8,https://github.com/sangjinhan,Update DPDK to 17.02,6,[],https://github.com/NetSys/bess/pull/322,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/322,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,322,2017-02-28T02:34:56Z,2017-02-28T18:20:09Z,2017-02-28T18:20:41Z,MERGED,True,127,51,8,https://github.com/sangjinhan,Update DPDK to 17.02,6,[],https://github.com/NetSys/bess/pull/322,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/322#issuecomment-282929587,,"Codecov Report

Merging #322 into master will decrease coverage by -2.27%.
The diff coverage is 0%.

@@            Coverage Diff             @@
##           master     #322      +/-   ##
==========================================
- Coverage   27.83%   25.57%   -2.27%     
==========================================
  Files         155      155              
  Lines        7411     7414       +3     
==========================================
- Hits         2063     1896     -167     
- Misses       5348     5518     +170



Impacted Files
Coverage Δ





core/utils/common.h
76.47% <ø> (ø)
✅


core/drivers/pmd.cc
4.54% <0%> (-0.06%)
❌


core/modules/round_robin.h
0% <0%> (-66.67%)
❌


core/modules/update.cc
5.26% <0%> (-64.92%)
❌


core/modules/random_update.cc
4.05% <0%> (-60.82%)
❌


core/modules/ip_lookup.cc
3.57% <0%> (-60.72%)
❌


core/modules/random_update.h
0% <0%> (-50%)
❌


core/modules/ip_lookup.h
0% <0%> (-50%)
❌


core/modules/update.h
0% <0%> (-50%)
❌


core/modules/round_robin.cc
5.66% <0%> (-28.31%)
❌


... and 3 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b065cd6...0eec279. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,322,2017-02-28T02:34:56Z,2017-02-28T18:20:09Z,2017-02-28T18:20:41Z,MERGED,True,127,51,8,https://github.com/sangjinhan,Update DPDK to 17.02,6,[],https://github.com/NetSys/bess/pull/322,https://github.com/barath,3,https://github.com/NetSys/bess/pull/322#issuecomment-283120959,,(cat),True,{}
NetSys/bess,https://github.com/NetSys/bess,323,2017-02-28T03:42:28Z,2017-03-16T03:54:46Z,2017-03-16T03:58:43Z,MERGED,True,58,30,5,https://github.com/sangjinhan,"Show link status for ""show port"" command",6,[],https://github.com/NetSys/bess/pull/323,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/323,"Like this:
localhost:10514 $ show port
  pmd_port0    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:08
               Speed UNKNOWN     Link DOWN  Duplex HALF  Autoneg OFF
       Inc/RX  packets: 0                   bytes: 0
               dropped: 0
       Out/TX  packets: 683,113,507         bytes: 0
               dropped: 941,216,961

  pmd_port1    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:09
               Speed 40,000Mbps  Link UP    Duplex FULL  Autoneg ON
       Inc/RX  packets: 26                  bytes: 4,317
               dropped: 0
       Out/TX  packets: 683,320,289         bytes: 40,872,574,720
               dropped: 941,690,241

Also a couple of minor bugs have been fixed.","Like this:
localhost:10514 $ show port
  pmd_port0    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:08
               Speed UNKNOWN     Link DOWN  Duplex HALF  Autoneg OFF
       Inc/RX  packets: 0                   bytes: 0
               dropped: 0
       Out/TX  packets: 683,113,507         bytes: 0
               dropped: 941,216,961

  pmd_port1    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:09
               Speed 40,000Mbps  Link UP    Duplex FULL  Autoneg ON
       Inc/RX  packets: 26                  bytes: 4,317
               dropped: 0
       Out/TX  packets: 683,320,289         bytes: 40,872,574,720
               dropped: 941,690,241

Also a couple of minor bugs have been fixed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,323,2017-02-28T03:42:28Z,2017-03-16T03:54:46Z,2017-03-16T03:58:43Z,MERGED,True,58,30,5,https://github.com/sangjinhan,"Show link status for ""show port"" command",6,[],https://github.com/NetSys/bess/pull/323,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/323#issuecomment-282937366,"Like this:
localhost:10514 $ show port
  pmd_port0    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:08
               Speed UNKNOWN     Link DOWN  Duplex HALF  Autoneg OFF
       Inc/RX  packets: 0                   bytes: 0
               dropped: 0
       Out/TX  packets: 683,113,507         bytes: 0
               dropped: 941,216,961

  pmd_port1    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:09
               Speed 40,000Mbps  Link UP    Duplex FULL  Autoneg ON
       Inc/RX  packets: 26                  bytes: 4,317
               dropped: 0
       Out/TX  packets: 683,320,289         bytes: 40,872,574,720
               dropped: 941,690,241

Also a couple of minor bugs have been fixed.","Codecov Report

Merging #323 into master will decrease coverage by 4%.
The diff coverage is 0%.

@@          Coverage Diff           @@
##           master   #323    +/-   ##
======================================
- Coverage      29%    25%    -4%     
======================================
  Files         156    156            
  Lines        7422   7423     +1     
======================================
- Hits         2182   1884   -298     
- Misses       5240   5539   +299



Impacted Files
Coverage Δ





core/port.h
33% <ø> (-54%)
❌


core/drivers/pmd.cc
5% <0%> (ø)
❌


core/drivers/unix_socket.cc
1% <0%> (-82%)
❌


core/modules/port_out.cc
3% <0%> (-71%)
❌


core/modules/port_inc.cc
4% <0%> (-61%)
❌


core/modules/random_update.cc
4% <0%> (-59%)
❌


core/utils/ether.cc
0% <0%> (-53%)
❌


core/modules/port_inc.h
0% <0%> (-50%)
❌


core/modules/port_out.h
0% <0%> (-50%)
❌


... and 4 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 20e048c...e3f85f6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,323,2017-02-28T03:42:28Z,2017-03-16T03:54:46Z,2017-03-16T03:58:43Z,MERGED,True,58,30,5,https://github.com/sangjinhan,"Show link status for ""show port"" command",6,[],https://github.com/NetSys/bess/pull/323,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/323#issuecomment-285190801,"Like this:
localhost:10514 $ show port
  pmd_port0    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:08
               Speed UNKNOWN     Link DOWN  Duplex HALF  Autoneg OFF
       Inc/RX  packets: 0                   bytes: 0
               dropped: 0
       Out/TX  packets: 683,113,507         bytes: 0
               dropped: 941,216,961

  pmd_port1    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:09
               Speed 40,000Mbps  Link UP    Duplex FULL  Autoneg ON
       Inc/RX  packets: 26                  bytes: 4,317
               dropped: 0
       Out/TX  packets: 683,320,289         bytes: 40,872,574,720
               dropped: 941,690,241

Also a couple of minor bugs have been fixed.",This looks like something wrong with the container build? Or DPDK?,True,{}
NetSys/bess,https://github.com/NetSys/bess,323,2017-02-28T03:42:28Z,2017-03-16T03:54:46Z,2017-03-16T03:58:43Z,MERGED,True,58,30,5,https://github.com/sangjinhan,"Show link status for ""show port"" command",6,[],https://github.com/NetSys/bess/pull/323,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/323#issuecomment-286951040,"Like this:
localhost:10514 $ show port
  pmd_port0    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:08
               Speed UNKNOWN     Link DOWN  Duplex HALF  Autoneg OFF
       Inc/RX  packets: 0                   bytes: 0
               dropped: 0
       Out/TX  packets: 683,113,507         bytes: 0
               dropped: 941,216,961

  pmd_port1    Driver PMDPort    HWaddr 3c:fd:fe:a2:ac:09
               Speed 40,000Mbps  Link UP    Duplex FULL  Autoneg ON
       Inc/RX  packets: 26                  bytes: 4,317
               dropped: 0
       Out/TX  packets: 683,320,289         bytes: 40,872,574,720
               dropped: 941,690,241

Also a couple of minor bugs have been fixed.",LGTM. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,324,2017-02-28T06:30:15Z,2017-02-28T20:42:27Z,2017-02-28T23:21:19Z,MERGED,True,9,3,1,https://github.com/sangjinhan,Fix broken Codecov integration,1,[],https://github.com/NetSys/bess/pull/324,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/324,"For some reason Codecov is considering develop as our default branch, although we switched to master a while ago.","For some reason Codecov is considering develop as our default branch, although we switched to master a while ago.",True,{}
NetSys/bess,https://github.com/NetSys/bess,324,2017-02-28T06:30:15Z,2017-02-28T20:42:27Z,2017-02-28T23:21:19Z,MERGED,True,9,3,1,https://github.com/sangjinhan,Fix broken Codecov integration,1,[],https://github.com/NetSys/bess/pull/324,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/324#issuecomment-283108906,"For some reason Codecov is considering develop as our default branch, although we switched to master a while ago.",The build failure at the CI server will be resolved once #322 is merged.,True,{}
NetSys/bess,https://github.com/NetSys/bess,324,2017-02-28T06:30:15Z,2017-02-28T20:42:27Z,2017-02-28T23:21:19Z,MERGED,True,9,3,1,https://github.com/sangjinhan,Fix broken Codecov integration,1,[],https://github.com/NetSys/bess/pull/324,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/324#issuecomment-283155633,"For some reason Codecov is considering develop as our default branch, although we switched to master a while ago.",🐱,True,{}
NetSys/bess,https://github.com/NetSys/bess,325,2017-02-28T20:40:29Z,2017-02-28T23:19:27Z,2017-02-28T23:21:17Z,MERGED,True,34,4,5,https://github.com/changlan,Import module library from CLI,2,[],https://github.com/NetSys/bess/pull/325,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/325,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,325,2017-02-28T20:40:29Z,2017-02-28T23:19:27Z,2017-02-28T23:21:17Z,MERGED,True,34,4,5,https://github.com/changlan,Import module library from CLI,2,[],https://github.com/NetSys/bess/pull/325,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/325#issuecomment-283193386,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,326,2017-03-01T00:21:24Z,2017-03-02T01:27:30Z,2017-03-07T12:46:10Z,MERGED,True,83,95,1,https://github.com/sangjinhan,Add support for function callstack in *.so files,1,[],https://github.com/NetSys/bess/pull/326,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/326,"While modules now can be loaded at runtime with shared objects, the current function backtrace (crash log) does not correctly locate source code from instruction pointers. This is because .so files can be loaded at an arbitrary memory location; the base address of .so file must be considered when corresponding memory addresses to position in the original ELF file.
Before:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x55) [0x7f09e912c7b5]
    ?? ??:0
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x6031a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...

After:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x185) [0x7f7da301f8a5]
    Source::RunTask(void*) at /home/sangjin/bess/core/modules/source.cc:81
         78:
         79:   int cnt = bess::Packet::Alloc(batch.pkts(), burst, pkt_size);
         80:
      -> 81:   *(int *)0 = 0;  // DIE
         82:
         83:   if (cnt > 0) {
         84:     batch.set_cnt(cnt);
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x60d3a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...","While modules now can be loaded at runtime with shared objects, the current function backtrace (crash log) does not correctly locate source code from instruction pointers. This is because .so files can be loaded at an arbitrary memory location; the base address of .so file must be considered when corresponding memory addresses to position in the original ELF file.
Before:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x55) [0x7f09e912c7b5]
    ?? ??:0
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x6031a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...

After:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x185) [0x7f7da301f8a5]
    Source::RunTask(void*) at /home/sangjin/bess/core/modules/source.cc:81
         78:
         79:   int cnt = bess::Packet::Alloc(batch.pkts(), burst, pkt_size);
         80:
      -> 81:   *(int *)0 = 0;  // DIE
         82:
         83:   if (cnt > 0) {
         84:     batch.set_cnt(cnt);
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x60d3a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...",True,{}
NetSys/bess,https://github.com/NetSys/bess,326,2017-03-01T00:21:24Z,2017-03-02T01:27:30Z,2017-03-07T12:46:10Z,MERGED,True,83,95,1,https://github.com/sangjinhan,Add support for function callstack in *.so files,1,[],https://github.com/NetSys/bess/pull/326,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/326#issuecomment-283520349,"While modules now can be loaded at runtime with shared objects, the current function backtrace (crash log) does not correctly locate source code from instruction pointers. This is because .so files can be loaded at an arbitrary memory location; the base address of .so file must be considered when corresponding memory addresses to position in the original ELF file.
Before:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x55) [0x7f09e912c7b5]
    ?? ??:0
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x6031a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...

After:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x185) [0x7f7da301f8a5]
    Source::RunTask(void*) at /home/sangjin/bess/core/modules/source.cc:81
         78:
         79:   int cnt = bess::Packet::Alloc(batch.pkts(), burst, pkt_size);
         80:
      -> 81:   *(int *)0 = 0;  // DIE
         82:
         83:   if (cnt > 0) {
         84:     batch.set_cnt(cnt);
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x60d3a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...","Codecov Report

❗ No coverage uploaded for pull request base (master@e49ec7c). Click here to learn what that means.
The diff coverage is 0%.

@@           Coverage Diff           @@
##             master   #326   +/-   ##
=======================================
  Coverage          ?    18%           
=======================================
  Files             ?    155           
  Lines             ?   7420           
  Branches          ?      0           
=======================================
  Hits              ?   1320           
  Misses            ?   6100           
  Partials          ?      0



Impacted Files
Coverage Δ





core/debug.cc
8% <0%> (ø)





Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e49ec7c...aee06b7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,326,2017-03-01T00:21:24Z,2017-03-02T01:27:30Z,2017-03-07T12:46:10Z,MERGED,True,83,95,1,https://github.com/sangjinhan,Add support for function callstack in *.so files,1,[],https://github.com/NetSys/bess/pull/326,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/326#issuecomment-283520350,"While modules now can be loaded at runtime with shared objects, the current function backtrace (crash log) does not correctly locate source code from instruction pointers. This is because .so files can be loaded at an arbitrary memory location; the base address of .so file must be considered when corresponding memory addresses to position in the original ELF file.
Before:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x55) [0x7f09e912c7b5]
    ?? ??:0
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x6031a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...

After:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x185) [0x7f7da301f8a5]
    Source::RunTask(void*) at /home/sangjin/bess/core/modules/source.cc:81
         78:
         79:   int cnt = bess::Packet::Alloc(batch.pkts(), burst, pkt_size);
         80:
      -> 81:   *(int *)0 = 0;  // DIE
         82:
         83:   if (cnt > 0) {
         84:     batch.set_cnt(cnt);
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x60d3a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...","Codecov Report

❗ No coverage uploaded for pull request base (master@e49ec7c). Click here to learn what that means.
The diff coverage is 0%.

@@           Coverage Diff           @@
##             master   #326   +/-   ##
=======================================
  Coverage          ?    18%           
=======================================
  Files             ?    155           
  Lines             ?   7420           
  Branches          ?      0           
=======================================
  Hits              ?   1320           
  Misses            ?   6100           
  Partials          ?      0



Impacted Files
Coverage Δ





core/debug.cc
8% <0%> (ø)





Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e49ec7c...aee06b7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,326,2017-03-01T00:21:24Z,2017-03-02T01:27:30Z,2017-03-07T12:46:10Z,MERGED,True,83,95,1,https://github.com/sangjinhan,Add support for function callstack in *.so files,1,[],https://github.com/NetSys/bess/pull/326,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/326#issuecomment-283527339,"While modules now can be loaded at runtime with shared objects, the current function backtrace (crash log) does not correctly locate source code from instruction pointers. This is because .so files can be loaded at an arbitrary memory location; the base address of .so file must be considered when corresponding memory addresses to position in the original ELF file.
Before:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x55) [0x7f09e912c7b5]
    ?? ??:0
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x6031a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...

After:
...
(0): /home/sangjin/bess/core/modules/source.so(_ZN6Source7RunTaskEPv+0x185) [0x7f7da301f8a5]
    Source::RunTask(void*) at /home/sangjin/bess/core/modules/source.cc:81
         78:
         79:   int cnt = bess::Packet::Alloc(batch.pkts(), burst, pkt_size);
         80:
      -> 81:   *(int *)0 = 0;  // DIE
         82:
         83:   if (cnt > 0) {
         84:     batch.set_cnt(cnt);
(1): /home/sangjin/bess/core/bessd(_ZN4Task9ScheduledEv+0x14) [0x60d3a4]
    Task::Scheduled() at /home/sangjin/bess/core/task.cc:36
      -> 36:   struct task_result ret = m_->RunTask(arg_);
...",,True,{}
NetSys/bess,https://github.com/NetSys/bess,327,2017-03-02T05:33:17Z,2017-03-07T18:58:09Z,2017-08-09T01:23:04Z,CLOSED,False,200,0,2,https://github.com/melvinw,utils: add c++ llring wrapper,3,['notready'],https://github.com/NetSys/bess/pull/327,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/327,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,327,2017-03-02T05:33:17Z,2017-03-07T18:58:09Z,2017-08-09T01:23:04Z,CLOSED,False,200,0,2,https://github.com/melvinw,utils: add c++ llring wrapper,3,['notready'],https://github.com/NetSys/bess/pull/327,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/327#issuecomment-283563205,,"Codecov Report

Merging #327 into master will decrease coverage by -3%.
The diff coverage is n/a.

@@          Coverage Diff           @@
##           master   #327    +/-   ##
======================================
- Coverage      26%    23%    -3%     
======================================
  Files         155    155            
  Lines        7420   7420            
======================================
- Hits         1896   1689   -207     
- Misses       5524   5731   +207



Impacted Files
Coverage Δ





core/utils/random.h
0% <0%> (-100%)
❌


core/modules/flowgen.cc
1% <0%> (-68%)
❌


core/modules/flowgen.h
0% <0%> (-67%)
❌


core/pktbatch.h
71% <0%> (-14%)
❌


core/worker.h
78% <0%> (-6%)
❌


core/packet.h
37% <0%> (-5%)
❌


core/traffic_class.h
59% <0%> (-1%)
❌




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ecc9545...2be3fa2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,328,2017-03-03T19:10:32Z,2017-03-07T16:13:53Z,2017-03-14T05:27:37Z,MERGED,True,186,237,12,https://github.com/sangjinhan,Allow empty packet batches,8,[],https://github.com/NetSys/bess/pull/328,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/328,"This PR eliminates two implicit limitations mentioned in #287

Empty packet batches should not be passed to Packet::Free()
Empty packet batches should not be passed to RunChooseModule/RunNextModule","This PR eliminates two implicit limitations mentioned in #287

Empty packet batches should not be passed to Packet::Free()
Empty packet batches should not be passed to RunChooseModule/RunNextModule",True,{}
NetSys/bess,https://github.com/NetSys/bess,328,2017-03-03T19:10:32Z,2017-03-07T16:13:53Z,2017-03-14T05:27:37Z,MERGED,True,186,237,12,https://github.com/sangjinhan,Allow empty packet batches,8,[],https://github.com/NetSys/bess/pull/328,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/328#issuecomment-284043121,"This PR eliminates two implicit limitations mentioned in #287

Empty packet batches should not be passed to Packet::Free()
Empty packet batches should not be passed to RunChooseModule/RunNextModule","Codecov Report

Merging #328 into master will decrease coverage by -<1%.
The diff coverage is 67%.

@@          Coverage Diff           @@
##           master   #328    +/-   ##
======================================
- Coverage      26%    25%   -<1%     
======================================
  Files         155    155            
  Lines        7420   7399    -21     
======================================
- Hits         1896   1884    -12     
+ Misses       5524   5515     -9



Impacted Files
Coverage Δ





core/modules/flowgen.h
67% <ø> (ø)
✅


core/packet.h
41% <ø> (-2%)
❌


core/modules/buffer.cc
5% <0%> (ø)
✅


core/modules/random_drop.cc
6% <0%> (ø)
✅


core/modules/nat.cc
2% <0%> (ø)
✅


core/modules/update_ttl.h
0% <0%> (ø)
✅


core/modules/url_filter.cc
19% <0%> (ø)
✅


core/module.h
67% <100%> (ø)
✅


core/modules/source.cc
44% <100%> (-3%)
❌


core/modules/update_ttl.cc
8% <8%> (+1%)
✅


... and 5 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ecc9545...bf587d1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,328,2017-03-03T19:10:32Z,2017-03-07T16:13:53Z,2017-03-14T05:27:37Z,MERGED,True,186,237,12,https://github.com/sangjinhan,Allow empty packet batches,8,[],https://github.com/NetSys/bess/pull/328,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/328#issuecomment-284043122,"This PR eliminates two implicit limitations mentioned in #287

Empty packet batches should not be passed to Packet::Free()
Empty packet batches should not be passed to RunChooseModule/RunNextModule","Codecov Report

Merging #328 into master will increase coverage by 1%.
The diff coverage is 67%.

@@          Coverage Diff          @@
##           master   #328   +/-   ##
=====================================
+ Coverage      26%    26%   +1%     
=====================================
  Files         156    156           
  Lines        7429   7408   -21     
=====================================
+ Hits         1896   1950   +54     
+ Misses       5533   5458   -75



Impacted Files
Coverage Δ





core/packet.h
73% <ø> (+31%)
✅


core/modules/flowgen.h
67% <ø> (ø)
✅


core/modules/buffer.cc
5% <0%> (ø)
✅


core/modules/update_ttl.h
0% <0%> (ø)
✅


core/modules/nat.cc
2% <0%> (ø)
✅


core/modules/url_filter.cc
19% <0%> (ø)
✅


core/modules/random_drop.cc
6% <0%> (ø)
✅


core/module.h
67% <100%> (ø)
✅


core/modules/source.cc
44% <100%> (-3%)
❌


core/modules/update_ttl.cc
8% <8%> (+1%)
✅


... and 11 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ababd55...230e499. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,328,2017-03-03T19:10:32Z,2017-03-07T16:13:53Z,2017-03-14T05:27:37Z,MERGED,True,186,237,12,https://github.com/sangjinhan,Allow empty packet batches,8,[],https://github.com/NetSys/bess/pull/328,https://github.com/barath,4,https://github.com/NetSys/bess/pull/328#issuecomment-284769663,"This PR eliminates two implicit limitations mentioned in #287

Empty packet batches should not be passed to Packet::Free()
Empty packet batches should not be passed to RunChooseModule/RunNextModule",,True,{}
NetSys/bess,https://github.com/NetSys/bess,329,2017-03-07T12:50:02Z,2017-03-07T17:33:40Z,2017-03-14T05:27:39Z,MERGED,True,511,205,4,https://github.com/sangjinhan,Add comments to BESS APIs and message types,2,[],https://github.com/NetSys/bess/pull/329,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/329,"This PR adds comments to protobuf&grpc for BESS system-wide RPCs (comments for module-specific commands is addressed in #304).
Declaration of messages and RPCs was reordered to group them by functionality.","This PR adds comments to protobuf&grpc for BESS system-wide RPCs (comments for module-specific commands is addressed in #304).
Declaration of messages and RPCs was reordered to group them by functionality.",True,{}
NetSys/bess,https://github.com/NetSys/bess,329,2017-03-07T12:50:02Z,2017-03-07T17:33:40Z,2017-03-14T05:27:39Z,MERGED,True,511,205,4,https://github.com/sangjinhan,Add comments to BESS APIs and message types,2,[],https://github.com/NetSys/bess/pull/329,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/329#issuecomment-284712704,"This PR adds comments to protobuf&grpc for BESS system-wide RPCs (comments for module-specific commands is addressed in #304).
Declaration of messages and RPCs was reordered to group them by functionality.","Codecov Report

Merging #329 into master will increase coverage by <1%.
The diff coverage is 0%.

@@          Coverage Diff           @@
##           master   #329    +/-   ##
======================================
+ Coverage      26%    26%   +<1%     
======================================
  Files         156    156            
  Lines        7429   7428     -1     
======================================
  Hits         1896   1896            
+ Misses       5533   5532     -1



Impacted Files
Coverage Δ





core/traffic_class.cc
18% <ø> (ø)
✅


core/bessctl.cc
18% <0%> (ø)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ababd55...0848e12. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,329,2017-03-07T12:50:02Z,2017-03-07T17:33:40Z,2017-03-14T05:27:39Z,MERGED,True,511,205,4,https://github.com/sangjinhan,Add comments to BESS APIs and message types,2,[],https://github.com/NetSys/bess/pull/329,https://github.com/barath,3,https://github.com/NetSys/bess/pull/329#issuecomment-284797201,"This PR adds comments to protobuf&grpc for BESS system-wide RPCs (comments for module-specific commands is addressed in #304).
Declaration of messages and RPCs was reordered to group them by functionality.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,331,2017-03-09T02:17:08Z,2017-03-10T06:55:36Z,2017-08-09T01:23:04Z,MERGED,True,53,10,4,https://github.com/melvinw,modules/measure: add jitter measurements,1,[],https://github.com/NetSys/bess/pull/331,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/331,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,331,2017-03-09T02:17:08Z,2017-03-10T06:55:36Z,2017-08-09T01:23:04Z,MERGED,True,53,10,4,https://github.com/melvinw,modules/measure: add jitter measurements,1,[],https://github.com/NetSys/bess/pull/331,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/331#issuecomment-285242328,,"Codecov Report

Merging #331 into master will increase coverage by 3%.
The diff coverage is 0%.

@@          Coverage Diff           @@
##           master   #331    +/-   ##
======================================
+ Coverage      23%    25%    +3%     
======================================
  Files         156    156            
  Lines        7407   7422    +15     
======================================
+ Hits         1686   1884   +198     
+ Misses       5721   5538   -183



Impacted Files
Coverage Δ





core/modules/measure.h
0% <ø> (ø)
✅


core/modules/measure.cc
5% <0%> (-1%)
❌


core/traffic_class.h
61% <0%> (+1%)
✅


core/packet.h
41% <0%> (+3%)
✅


core/worker.h
83% <0%> (+6%)
✅


core/pktbatch.h
85% <0%> (+8%)
✅


core/modules/flowgen.h
67% <0%> (+67%)
✅


core/modules/flowgen.cc
69% <0%> (+68%)
✅


core/utils/random.h
100% <0%> (+100%)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d2b0cb1...e71fd49. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,331,2017-03-09T02:17:08Z,2017-03-10T06:55:36Z,2017-08-09T01:23:04Z,MERGED,True,53,10,4,https://github.com/melvinw,modules/measure: add jitter measurements,1,[],https://github.com/NetSys/bess/pull/331,https://github.com/barath,3,https://github.com/NetSys/bess/pull/331#issuecomment-285595648,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,333,2017-03-14T00:49:55Z,2017-03-14T02:43:56Z,2017-03-14T02:43:59Z,MERGED,True,4,0,1,https://github.com/changlan,Add equality checks to BigEndian types,1,[],https://github.com/NetSys/bess/pull/333,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/333,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,333,2017-03-14T00:49:55Z,2017-03-14T02:43:56Z,2017-03-14T02:43:59Z,MERGED,True,4,0,1,https://github.com/changlan,Add equality checks to BigEndian types,1,[],https://github.com/NetSys/bess/pull/333,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/333#issuecomment-286293800,,"Codecov Report

Merging #333 into master will not change coverage.
The diff coverage is n/a.

@@          Coverage Diff          @@
##           master   #333   +/-   ##
=====================================
  Coverage      23%    23%           
=====================================
  Files         156    156           
  Lines        7422   7422           
=====================================
  Hits         1686   1686           
  Misses       5736   5736



Impacted Files
Coverage Δ





core/utils/endian.h
100% <ø> (ø)
✅




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 72b823b...5651761. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,334,2017-03-16T00:45:10Z,2017-03-16T03:42:56Z,2017-03-16T03:55:02Z,MERGED,True,4,2,1,https://github.com/ddiproietto,drivers/pmd: Fix crash when driver_name is NULL.,1,[],https://github.com/NetSys/bess/pull/334,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/334,"It currently happens with DPDK ena pmd.  It should probably be fixed in
DPDK as well.","It currently happens with DPDK ena pmd.  It should probably be fixed in
DPDK as well.",True,{}
NetSys/bess,https://github.com/NetSys/bess,334,2017-03-16T00:45:10Z,2017-03-16T03:42:56Z,2017-03-16T03:55:02Z,MERGED,True,4,2,1,https://github.com/ddiproietto,drivers/pmd: Fix crash when driver_name is NULL.,1,[],https://github.com/NetSys/bess/pull/334,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/334#issuecomment-286927218,"It currently happens with DPDK ena pmd.  It should probably be fixed in
DPDK as well.","Codecov Report

Merging #334 into master will increase coverage by 1%.
The diff coverage is 0%.

@@          Coverage Diff          @@
##           master   #334   +/-   ##
=====================================
+ Coverage      26%    28%   +1%     
=====================================
  Files         156    156           
  Lines        7422   7423    +1     
=====================================
+ Hits         1950   2045   +95     
+ Misses       5472   5378   -94



Impacted Files
Coverage Δ





core/drivers/pmd.cc
5% <0%> (ø)
❌


core/modules/vlan_pop.h
0% <0%> (-100%)
❌


core/modules/vlan_pop.cc
7% <0%> (-93%)
❌


core/modules/vlan_push.cc
10% <0%> (-90%)
❌


core/modules/vlan_push.h
0% <0%> (-50%)
❌


core/packet.h
59% <0%> (-14%)
❌


core/module.h
71% <0%> (+4%)
✅


core/modules/generic_encap.h
50% <0%> (+50%)
✅


core/modules/exact_match.cc
75% <0%> (+73%)
✅


core/modules/generic_encap.cc
90% <0%> (+88%)
✅


... and 1 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3481a83...dd801ed. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,334,2017-03-16T00:45:10Z,2017-03-16T03:42:56Z,2017-03-16T03:55:02Z,MERGED,True,4,2,1,https://github.com/ddiproietto,drivers/pmd: Fix crash when driver_name is NULL.,1,[],https://github.com/NetSys/bess/pull/334,https://github.com/barath,3,https://github.com/NetSys/bess/pull/334#issuecomment-286949765,"It currently happens with DPDK ena pmd.  It should probably be fixed in
DPDK as well.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,334,2017-03-16T00:45:10Z,2017-03-16T03:42:56Z,2017-03-16T03:55:02Z,MERGED,True,4,2,1,https://github.com/ddiproietto,drivers/pmd: Fix crash when driver_name is NULL.,1,[],https://github.com/NetSys/bess/pull/334,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/334#issuecomment-286951062,"It currently happens with DPDK ena pmd.  It should probably be fixed in
DPDK as well.","Is this Daniele's first cat? HAPPY CAT-DAT DANIELE!!!
…
On Wed, Mar 15, 2017 at 8:44 PM, Barath Raghavan ***@***.***> wrote:
 [image: img_1686]
 <https://cloud.githubusercontent.com/assets/605050/23980905/1648925c-09c0-11e7-877f-a4ee543294a6.JPG>

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#334 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FmAS2tWeUs9I4FlKaF-jN0ND_QGwks5rmLAWgaJpZM4MetYY>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,336,2017-03-16T22:16:42Z,2017-03-17T00:19:56Z,2017-03-17T00:20:43Z,MERGED,True,2,2,1,https://github.com/changlan,Minor tweak to Makefile,1,[],https://github.com/NetSys/bess/pull/336,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/336,"Add root directory as default directory for headers
Add protobuf as modules' dependency","Add root directory as default directory for headers
Add protobuf as modules' dependency",True,{}
NetSys/bess,https://github.com/NetSys/bess,336,2017-03-16T22:16:42Z,2017-03-17T00:19:56Z,2017-03-17T00:20:43Z,MERGED,True,2,2,1,https://github.com/changlan,Minor tweak to Makefile,1,[],https://github.com/NetSys/bess/pull/336,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/336#issuecomment-287215075,"Add root directory as default directory for headers
Add protobuf as modules' dependency","Codecov Report

Merging #336 into master will increase coverage by 8%.
The diff coverage is n/a.

@@          Coverage Diff           @@
##           master   #336    +/-   ##
======================================
+ Coverage      18%    25%    +8%     
======================================
  Files         156    156            
  Lines        7424   7465    +41     
======================================
+ Hits         1314   1885   +571     
+ Misses       6110   5580   -530



Impacted Files
Coverage Δ





core/drivers/pmd.cc
4% <0%> (ø)
❌


core/bessctl.cc
18% <0%> (+1%)
✅


core/worker.cc
78% <0%> (+3%)
✅


core/gate.h
52% <0%> (+5%)
✅


core/packet.h
41% <0%> (+8%)
✅


core/module.cc
49% <0%> (+18%)
✅


core/module.h
67% <0%> (+19%)
✅


core/packet_avx.h
88% <0%> (+33%)
✅


core/modules/source.cc
44% <0%> (+38%)
✅


core/metadata.cc
67% <0%> (+45%)
✅


... and 12 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9cf6714...a6a6a03. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,336,2017-03-16T22:16:42Z,2017-03-17T00:19:56Z,2017-03-17T00:20:43Z,MERGED,True,2,2,1,https://github.com/changlan,Minor tweak to Makefile,1,[],https://github.com/NetSys/bess/pull/336,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/336#issuecomment-287231578,"Add root directory as default directory for headers
Add protobuf as modules' dependency",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,337,2017-03-17T21:39:46Z,2017-03-21T01:24:44Z,2017-03-21T01:24:58Z,MERGED,True,89,83,4,https://github.com/justinemarie,Restore interactive command line option.,7,[],https://github.com/NetSys/bess/pull/337,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/337,See #335 (comment),See #335 (comment),True,{}
NetSys/bess,https://github.com/NetSys/bess,337,2017-03-17T21:39:46Z,2017-03-21T01:24:44Z,2017-03-21T01:24:58Z,MERGED,True,89,83,4,https://github.com/justinemarie,Restore interactive command line option.,7,[],https://github.com/NetSys/bess/pull/337,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/337#issuecomment-287480232,See #335 (comment),Recall that I literally don't know python so keep a watchful eye ;-),True,{}
NetSys/bess,https://github.com/NetSys/bess,337,2017-03-17T21:39:46Z,2017-03-21T01:24:44Z,2017-03-21T01:24:58Z,MERGED,True,89,83,4,https://github.com/justinemarie,Restore interactive command line option.,7,[],https://github.com/NetSys/bess/pull/337,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/337#issuecomment-287484213,See #335 (comment),"Codecov Report

Merging #337 into master will increase coverage by 9%.
The diff coverage is n/a.

@@          Coverage Diff           @@
##           master   #337    +/-   ##
======================================
+ Coverage      18%    26%    +9%     
======================================
  Files         156    156            
  Lines        7424   7424            
======================================
+ Hits         1314   1950   +636     
+ Misses       6110   5474   -636



Impacted Files
Coverage Δ





core/bessctl.cc
18% <0%> (+1%)
⬆️


core/worker.cc
78% <0%> (+3%)
⬆️


core/gate.h
52% <0%> (+5%)
⬆️


core/module.cc
49% <0%> (+18%)
⬆️


core/module.h
67% <0%> (+19%)
⬆️


core/packet_avx.h
88% <0%> (+33%)
⬆️


core/modules/source.cc
44% <0%> (+38%)
⬆️


core/packet.h
73% <0%> (+41%)
⬆️


core/metadata.cc
67% <0%> (+45%)
⬆️


core/pktbatch.h
85% <0%> (+46%)
⬆️


... and 15 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5f68439...274c649. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,337,2017-03-17T21:39:46Z,2017-03-21T01:24:44Z,2017-03-21T01:24:58Z,MERGED,True,89,83,4,https://github.com/justinemarie,Restore interactive command line option.,7,[],https://github.com/NetSys/bess/pull/337,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/337#issuecomment-287834748,See #335 (comment),Thanks for the comments all! Any more?,True,{}
NetSys/bess,https://github.com/NetSys/bess,337,2017-03-17T21:39:46Z,2017-03-21T01:24:44Z,2017-03-21T01:24:58Z,MERGED,True,89,83,4,https://github.com/justinemarie,Restore interactive command line option.,7,[],https://github.com/NetSys/bess/pull/337,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/337#issuecomment-287902513,See #335 (comment),@ddiproietto give me a cat!,True,{}
NetSys/bess,https://github.com/NetSys/bess,337,2017-03-17T21:39:46Z,2017-03-21T01:24:44Z,2017-03-21T01:24:58Z,MERGED,True,89,83,4,https://github.com/justinemarie,Restore interactive command line option.,7,[],https://github.com/NetSys/bess/pull/337,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/337#issuecomment-287912247,See #335 (comment),"Made a few changes:

Colorize output to stderr even in non-interactive mode, as long as stderr is a TTY and not explicitly forced not to do so.
When bessctl is piped (e.g., bessctl < commands.txt), it should not run in interactive mode.
bessctl some command -- interactive -- another command will run another command after the interactive mode is done.",True,{}
NetSys/bess,https://github.com/NetSys/bess,337,2017-03-17T21:39:46Z,2017-03-21T01:24:44Z,2017-03-21T01:24:58Z,MERGED,True,89,83,4,https://github.com/justinemarie,Restore interactive command line option.,7,[],https://github.com/NetSys/bess/pull/337,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/337#issuecomment-287912536,See #335 (comment),"@ddiproietto, please take a quick look and merge (and give her cats)",True,{}
NetSys/bess,https://github.com/NetSys/bess,337,2017-03-17T21:39:46Z,2017-03-21T01:24:44Z,2017-03-21T01:24:58Z,MERGED,True,89,83,4,https://github.com/justinemarie,Restore interactive command line option.,7,[],https://github.com/NetSys/bess/pull/337,https://github.com/ddiproietto,8,https://github.com/NetSys/bess/pull/337#issuecomment-287948667,See #335 (comment),,True,{}
NetSys/bess,https://github.com/NetSys/bess,338,2017-03-17T22:29:04Z,2017-03-18T06:25:28Z,2017-03-24T21:57:25Z,MERGED,True,23,2,2,https://github.com/changlan,Dynamically load module-specific types,1,[],https://github.com/NetSys/bess/pull/338,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/338,Load symbols from files *_msg_pb2.py,Load symbols from files *_msg_pb2.py,True,{}
NetSys/bess,https://github.com/NetSys/bess,338,2017-03-17T22:29:04Z,2017-03-18T06:25:28Z,2017-03-24T21:57:25Z,MERGED,True,23,2,2,https://github.com/changlan,Dynamically load module-specific types,1,[],https://github.com/NetSys/bess/pull/338,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/338#issuecomment-287502507,Load symbols from files *_msg_pb2.py,"Codecov Report

Merging #338 into master will increase coverage by 8%.
The diff coverage is n/a.

@@          Coverage Diff           @@
##           master   #338    +/-   ##
======================================
+ Coverage      18%    25%    +8%     
======================================
  Files         156    156            
  Lines        7424   7424            
======================================
+ Hits         1314   1884   +570     
+ Misses       6110   5540   -570



Impacted Files
Coverage Δ





core/bessctl.cc
18% <0%> (+1%)
✅


core/worker.cc
78% <0%> (+3%)
✅


core/gate.h
52% <0%> (+5%)
✅


core/packet.h
41% <0%> (+8%)
✅


core/module.cc
49% <0%> (+18%)
✅


core/module.h
67% <0%> (+19%)
✅


core/packet_avx.h
88% <0%> (+33%)
✅


core/modules/source.cc
44% <0%> (+38%)
✅


core/metadata.cc
67% <0%> (+45%)
✅


core/pktbatch.h
85% <0%> (+46%)
✅


... and 11 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5f68439...6ec0504. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,338,2017-03-17T22:29:04Z,2017-03-18T06:25:28Z,2017-03-24T21:57:25Z,MERGED,True,23,2,2,https://github.com/changlan,Dynamically load module-specific types,1,[],https://github.com/NetSys/bess/pull/338,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/338#issuecomment-287520295,Load symbols from files *_msg_pb2.py,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,339,2017-03-18T08:18:55Z,2017-03-19T22:52:52Z,2017-08-09T01:23:04Z,MERGED,True,6,1,1,https://github.com/melvinw,libbess-python: fix nested protobuf map assignment,1,[],https://github.com/NetSys/bess/pull/339,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/339,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,339,2017-03-18T08:18:55Z,2017-03-19T22:52:52Z,2017-08-09T01:23:04Z,MERGED,True,6,1,1,https://github.com/melvinw,libbess-python: fix nested protobuf map assignment,1,[],https://github.com/NetSys/bess/pull/339,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/339#issuecomment-287526949,,"Codecov Report

Merging #339 into master will decrease coverage by 5%.
The diff coverage is n/a.

@@          Coverage Diff           @@
##           master   #339    +/-   ##
======================================
- Coverage      25%    20%    -5%     
======================================
  Files         156    156            
  Lines        7424   7424            
======================================
- Hits         1884   1494   -390     
- Misses       5540   5930   +390



Impacted Files
Coverage Δ





core/modules/wildcard_match.h
0% <0%> (-93%)
❌


core/modules/wildcard_match.cc
2% <0%> (-81%)
❌


core/message.h
21% <0%> (-79%)
❌


core/metadata.h
9% <0%> (-74%)
❌


core/modules/set_metadata.h
0% <0%> (-67%)
❌


core/modules/set_metadata.cc
1% <0%> (-64%)
❌


core/utils/common.h
18% <0%> (-59%)
❌


core/utils/cuckoo_map.h
0% <0%> (-48%)
❌


core/metadata.cc
22% <0%> (-45%)
❌


core/module.h
57% <0%> (-10%)
❌


... and 6 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 373e5d5...5665333. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,339,2017-03-18T08:18:55Z,2017-03-19T22:52:52Z,2017-08-09T01:23:04Z,MERGED,True,6,1,1,https://github.com/melvinw,libbess-python: fix nested protobuf map assignment,1,[],https://github.com/NetSys/bess/pull/339,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/339#issuecomment-287654966,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,341,2017-03-20T17:11:37Z,2017-03-20T18:05:56Z,2017-08-09T01:23:05Z,MERGED,True,1,0,1,https://github.com/melvinw,utils/udp: fix header guard,1,[],https://github.com/NetSys/bess/pull/341,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/341,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,341,2017-03-20T17:11:37Z,2017-03-20T18:05:56Z,2017-08-09T01:23:05Z,MERGED,True,1,0,1,https://github.com/melvinw,utils/udp: fix header guard,1,[],https://github.com/NetSys/bess/pull/341,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/341#issuecomment-287835537,,"Codecov Report

Merging #341 into master will increase coverage by 4%.
The diff coverage is n/a.

@@          Coverage Diff           @@
##           master   #341    +/-   ##
======================================
+ Coverage      23%    27%    +4%     
======================================
  Files         156    156            
  Lines        7424   7424            
======================================
+ Hits         1686   1999   +313     
+ Misses       5738   5425   -313



Impacted Files
Coverage Δ





core/traffic_class.h
61% <0%> (+1%)
⬆️


core/worker.h
83% <0%> (+6%)
⬆️


core/pktbatch.h
85% <0%> (+8%)
⬆️


core/packet.h
46% <0%> (+8%)
⬆️


core/modules/rewrite.cc
81% <0%> (+17%)
⬆️


core/modules/round_robin.cc
34% <0%> (+28%)
⬆️


core/modules/random_update.h
50% <0%> (+50%)
⬆️


core/modules/update.h
50% <0%> (+50%)
⬆️


core/modules/random_update.cc
65% <0%> (+61%)
⬆️


core/modules/update.cc
70% <0%> (+65%)
⬆️


... and 4 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e2bcfbf...fc76bb1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,341,2017-03-20T17:11:37Z,2017-03-20T18:05:56Z,2017-08-09T01:23:05Z,MERGED,True,1,0,1,https://github.com/melvinw,utils/udp: fix header guard,1,[],https://github.com/NetSys/bess/pull/341,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/341#issuecomment-287847493,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,342,2017-03-20T18:05:06Z,2017-03-20T18:49:12Z,2017-08-09T01:23:05Z,MERGED,True,2,2,1,https://github.com/melvinw,utils/endian: mark operators as const,1,[],https://github.com/NetSys/bess/pull/342,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/342,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,342,2017-03-20T18:05:06Z,2017-03-20T18:49:12Z,2017-08-09T01:23:05Z,MERGED,True,2,2,1,https://github.com/melvinw,utils/endian: mark operators as const,1,[],https://github.com/NetSys/bess/pull/342,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/342#issuecomment-287860485,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,342,2017-03-20T18:05:06Z,2017-03-20T18:49:12Z,2017-08-09T01:23:05Z,MERGED,True,2,2,1,https://github.com/melvinw,utils/endian: mark operators as const,1,[],https://github.com/NetSys/bess/pull/342,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/342#issuecomment-287861499,,"Codecov Report

Merging #342 into master will increase coverage by 3%.
The diff coverage is n/a.

@@          Coverage Diff           @@
##           master   #342    +/-   ##
======================================
+ Coverage      23%    25%    +3%     
======================================
  Files         156    156            
  Lines        7424   7424            
======================================
+ Hits         1686   1884   +198     
+ Misses       5738   5540   -198



Impacted Files
Coverage Δ





core/utils/endian.h
100% <ø> (ø)
⬆️


core/traffic_class.h
61% <0%> (+1%)
⬆️


core/packet.h
41% <0%> (+3%)
⬆️


core/worker.h
83% <0%> (+6%)
⬆️


core/pktbatch.h
85% <0%> (+8%)
⬆️


core/modules/flowgen.h
67% <0%> (+67%)
⬆️


core/modules/flowgen.cc
69% <0%> (+68%)
⬆️


core/utils/random.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e2bcfbf...1d98d8a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,343,2017-03-20T18:41:52Z,2017-03-20T18:46:40Z,2017-03-24T21:57:29Z,MERGED,True,3,3,1,https://github.com/justinemarie,Update README.md,1,[],https://github.com/NetSys/bess/pull/343,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/343,At some point the links in README.md got broken.,At some point the links in README.md got broken.,True,{}
NetSys/bess,https://github.com/NetSys/bess,343,2017-03-20T18:41:52Z,2017-03-20T18:46:40Z,2017-03-24T21:57:29Z,MERGED,True,3,3,1,https://github.com/justinemarie,Update README.md,1,[],https://github.com/NetSys/bess/pull/343,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/343#issuecomment-287859754,At some point the links in README.md got broken.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,344,2017-03-20T18:46:19Z,2017-03-21T02:55:54Z,2017-03-24T21:57:26Z,MERGED,True,10,960,9,https://github.com/sangjinhan,Drop support for Guest/IVSHMEM,1,[],https://github.com/NetSys/bess/pull/344,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/344,"Once upon a time, the kernel module supported virtual ports for VM guests with IVSHMEM. Now it's time for the guest mode to retire, since now DPDK supports virtio.","Once upon a time, the kernel module supported virtual ports for VM guests with IVSHMEM. Now it's time for the guest mode to retire, since now DPDK supports virtio.",True,{}
NetSys/bess,https://github.com/NetSys/bess,344,2017-03-20T18:46:19Z,2017-03-21T02:55:54Z,2017-03-24T21:57:26Z,MERGED,True,10,960,9,https://github.com/sangjinhan,Drop support for Guest/IVSHMEM,1,[],https://github.com/NetSys/bess/pull/344,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/344#issuecomment-287860207,"Once upon a time, the kernel module supported virtual ports for VM guests with IVSHMEM. Now it's time for the guest mode to retire, since now DPDK supports virtio.","As a side effect, this PR addresses #332.",True,{'THUMBS_UP': ['https://github.com/justinemarie']}
NetSys/bess,https://github.com/NetSys/bess,344,2017-03-20T18:46:19Z,2017-03-21T02:55:54Z,2017-03-24T21:57:26Z,MERGED,True,10,960,9,https://github.com/sangjinhan,Drop support for Guest/IVSHMEM,1,[],https://github.com/NetSys/bess/pull/344,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/344#issuecomment-287880216,"Once upon a time, the kernel module supported virtual ports for VM guests with IVSHMEM. Now it's time for the guest mode to retire, since now DPDK supports virtio.","Codecov Report

Merging #344 into master will not change coverage.
The diff coverage is n/a.

@@          Coverage Diff          @@
##           master   #344   +/-   ##
=====================================
  Coverage      25%    25%           
=====================================
  Files         156    156           
  Lines        7424   7424           
=====================================
  Hits         1884   1884           
  Misses       5540   5540

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 79b5134...c83cc8e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,344,2017-03-20T18:46:19Z,2017-03-21T02:55:54Z,2017-03-24T21:57:26Z,MERGED,True,10,960,9,https://github.com/sangjinhan,Drop support for Guest/IVSHMEM,1,[],https://github.com/NetSys/bess/pull/344,https://github.com/barath,4,https://github.com/NetSys/bess/pull/344#issuecomment-287962393,"Once upon a time, the kernel module supported virtual ports for VM guests with IVSHMEM. Now it's time for the guest mode to retire, since now DPDK supports virtio.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,345,2017-03-20T21:25:54Z,2017-03-20T21:26:12Z,2017-03-24T21:57:30Z,MERGED,True,1,0,1,https://github.com/justinemarie,Update CONTRIBUTORS.md,1,[],https://github.com/NetSys/bess/pull/345,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/345,:-),:-),True,{}
NetSys/bess,https://github.com/NetSys/bess,345,2017-03-20T21:25:54Z,2017-03-20T21:26:12Z,2017-03-24T21:57:30Z,MERGED,True,1,0,1,https://github.com/justinemarie,Update CONTRIBUTORS.md,1,[],https://github.com/NetSys/bess/pull/345,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/345#issuecomment-287903306,:-),,True,{}
NetSys/bess,https://github.com/NetSys/bess,348,2017-03-23T05:33:29Z,2017-05-23T20:45:30Z,2017-05-23T20:45:46Z,MERGED,True,692,0,5,https://github.com/TheJStone,Utility Codel,1,[],https://github.com/NetSys/bess/pull/348,https://github.com/TheJStone,1,https://github.com/NetSys/bess/pull/348,"Codel(Controlled Delay Management) is an Queue controller based on this
article http://queue.acm.org/detail.cfm?id=2209336
It provides an active queue management to help prevent bufferbloat by dropping
queue entries at an increasing rate if the delay in the queue is above the
target queue delay. The equation used to calculate drop intervals is based on TCP
throughput response to drop probability.","Codel(Controlled Delay Management) is an Queue controller based on this
article http://queue.acm.org/detail.cfm?id=2209336
It provides an active queue management to help prevent bufferbloat by dropping
queue entries at an increasing rate if the delay in the queue is above the
target queue delay. The equation used to calculate drop intervals is based on TCP
throughput response to drop probability.",True,{}
NetSys/bess,https://github.com/NetSys/bess,348,2017-03-23T05:33:29Z,2017-05-23T20:45:30Z,2017-05-23T20:45:46Z,MERGED,True,692,0,5,https://github.com/TheJStone,Utility Codel,1,[],https://github.com/NetSys/bess/pull/348,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/348#issuecomment-288623928,"Codel(Controlled Delay Management) is an Queue controller based on this
article http://queue.acm.org/detail.cfm?id=2209336
It provides an active queue management to help prevent bufferbloat by dropping
queue entries at an increasing rate if the delay in the queue is above the
target queue delay. The equation used to calculate drop intervals is based on TCP
throughput response to drop probability.","Codecov Report

Merging #348 into master will increase coverage by 1%.
The diff coverage is 63%.


@@          Coverage Diff           @@
##           master   #348    +/-   ##
======================================
+ Coverage      35%    35%    +1%     
======================================
  Files         165    168     +3     
  Lines        8107   8209   +102     
  Branches     1540   1563    +23     
======================================
+ Hits         2807   2891    +84     
+ Misses       4914   4862    -52     
- Partials      386    456    +70



Impacted Files
Coverage Δ





core/utils/queue.h
100% <100%> (ø)



core/utils/codel.h
60% <60%> (ø)



core/utils/lock_less_queue.h
72% <72%> (ø)



core/modules/wildcard_match.h
0% <0%> (-79%)
⬇️


core/utils/endian.cc
0% <0%> (-75%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-74%)
⬇️


core/modules/flowgen.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/flowgen.cc
1% <0%> (-60%)
⬇️


core/utils/random.h
46% <0%> (-54%)
⬇️


... and 35 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update defebbc...53c4f2f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,348,2017-03-23T05:33:29Z,2017-05-23T20:45:30Z,2017-05-23T20:45:46Z,MERGED,True,692,0,5,https://github.com/TheJStone,Utility Codel,1,[],https://github.com/NetSys/bess/pull/348,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/348#issuecomment-288897656,"Codel(Controlled Delay Management) is an Queue controller based on this
article http://queue.acm.org/detail.cfm?id=2209336
It provides an active queue management to help prevent bufferbloat by dropping
queue entries at an increasing rate if the delay in the queue is above the
target queue delay. The equation used to calculate drop intervals is based on TCP
throughput response to drop probability.","A few minor comments:

Please consider put them in bess:utils namespace
Do not use mem_alloc() functions. New code should use C++-style allocators.
It seems codel.h does not need to include packet.h, since FreePacketWrap() shouldn't be part of codel.h

In general, all files in core/utils/ should be useful even outside the context of BESS, thus should not include any header files in core/. While core/utils has some files violating this rule at the moment, but they will be fixed at some point.",True,{}
NetSys/bess,https://github.com/NetSys/bess,348,2017-03-23T05:33:29Z,2017-05-23T20:45:30Z,2017-05-23T20:45:46Z,MERGED,True,692,0,5,https://github.com/TheJStone,Utility Codel,1,[],https://github.com/NetSys/bess/pull/348,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/348#issuecomment-295586614,"Codel(Controlled Delay Management) is an Queue controller based on this
article http://queue.acm.org/detail.cfm?id=2209336
It provides an active queue management to help prevent bufferbloat by dropping
queue entries at an increasing rate if the delay in the queue is above the
target queue delay. The equation used to calculate drop intervals is based on TCP
throughput response to drop probability.",I have not enough cycles to review this now. Please let me come back to this PR in a few days.,True,{}
NetSys/bess,https://github.com/NetSys/bess,348,2017-03-23T05:33:29Z,2017-05-23T20:45:30Z,2017-05-23T20:45:46Z,MERGED,True,692,0,5,https://github.com/TheJStone,Utility Codel,1,[],https://github.com/NetSys/bess/pull/348,https://github.com/TheJStone,5,https://github.com/NetSys/bess/pull/348#issuecomment-302843496,"Codel(Controlled Delay Management) is an Queue controller based on this
article http://queue.acm.org/detail.cfm?id=2209336
It provides an active queue management to help prevent bufferbloat by dropping
queue entries at an increasing rate if the delay in the queue is above the
target queue delay. The equation used to calculate drop intervals is based on TCP
throughput response to drop probability.",Updated with all suggested changes.,True,{}
NetSys/bess,https://github.com/NetSys/bess,348,2017-03-23T05:33:29Z,2017-05-23T20:45:30Z,2017-05-23T20:45:46Z,MERGED,True,692,0,5,https://github.com/TheJStone,Utility Codel,1,[],https://github.com/NetSys/bess/pull/348,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/348#issuecomment-303526775,"Codel(Controlled Delay Management) is an Queue controller based on this
article http://queue.acm.org/detail.cfm?id=2209336
It provides an active queue management to help prevent bufferbloat by dropping
queue entries at an increasing rate if the delay in the queue is above the
target queue delay. The equation used to calculate drop intervals is based on TCP
throughput response to drop probability.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,350,2017-03-23T18:37:06Z,2017-03-23T18:39:21Z,2017-03-23T18:39:24Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Fix typo in IPLookup::DeInit(),1,[],https://github.com/NetSys/bess/pull/350,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/350,This PR addresses #349.,This PR addresses #349.,True,{}
NetSys/bess,https://github.com/NetSys/bess,351,2017-03-24T10:24:11Z,2017-04-03T08:18:13Z,2017-04-03T08:18:13Z,CLOSED,False,4,3,1,https://github.com/nemethf,bessctl: Fix bugs in command 'track',3,[],https://github.com/NetSys/bess/pull/351,https://github.com/nemethf,1,https://github.com/NetSys/bess/pull/351,"These tiny commits makes the track command more convenient for me.  I created thee commits, because some of them might be debatable.  Please review them.  Thanks.","These tiny commits makes the track command more convenient for me.  I created thee commits, because some of them might be debatable.  Please review them.  Thanks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,351,2017-03-24T10:24:11Z,2017-04-03T08:18:13Z,2017-04-03T08:18:13Z,CLOSED,False,4,3,1,https://github.com/nemethf,bessctl: Fix bugs in command 'track',3,[],https://github.com/NetSys/bess/pull/351,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/351#issuecomment-288989301,"These tiny commits makes the track command more convenient for me.  I created thee commits, because some of them might be debatable.  Please review them.  Thanks.","Codecov Report

Merging #351 into master will increase coverage by 8%.
The diff coverage is n/a.

@@          Coverage Diff           @@
##           master   #351    +/-   ##
======================================
+ Coverage      26%    34%    +8%     
======================================
  Files         158    158            
  Lines        7648   7648            
======================================
+ Hits         2002   2591   +589     
+ Misses       5646   5057   -589



Impacted Files
Coverage Δ





core/modules/round_robin.h
0% <0%> (-67%)
⬇️


core/modules/update.cc
5% <0%> (-65%)
⬇️


core/modules/update.h
0% <0%> (-50%)
⬇️


core/modules/round_robin.cc
6% <0%> (-28%)
⬇️


core/modules/random_update.cc
64% <0%> (-1%)
⬇️


core/module.h
68% <0%> (+1%)
⬆️


core/port.cc
38% <0%> (+15%)
⬆️


core/bessctl.cc
35% <0%> (+17%)
⬆️


core/traffic_class.h
78% <0%> (+17%)
⬆️


core/scheduler.h
86% <0%> (+21%)
⬆️


... and 19 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9ca467a...21cd196. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,351,2017-03-24T10:24:11Z,2017-04-03T08:18:13Z,2017-04-03T08:18:13Z,CLOSED,False,4,3,1,https://github.com/nemethf,bessctl: Fix bugs in command 'track',3,[],https://github.com/NetSys/bess/pull/351,https://github.com/nemethf,3,https://github.com/NetSys/bess/pull/351#issuecomment-291077338,"These tiny commits makes the track command more convenient for me.  I created thee commits, because some of them might be debatable.  Please review them.  Thanks.","The merged #358 allows omitting arguments and fixes tab completion, which makes this PR unnecessary.  Thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,353,2017-03-24T20:27:39Z,2017-03-24T20:33:06Z,2017-03-24T21:57:32Z,MERGED,True,0,2,1,https://github.com/sangjinhan,Do not install linux-virtual via apt-get,1,[],https://github.com/NetSys/bess/pull/353,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/353,"The Ansible script vagrant/bess.yml installs linux-virtual, which is a stripped down version of Linux image (typically for VMs in cloud). This package should not be installed because:

The script might be used on non-VM systems, where linux-virtual is not intended to be used for.
Even for VMs, the package lacks useful modules for DPDK, such as uio_pci_generic and vfio-pci.

--
Also removed google-mock, which is never used for building BESS.","The Ansible script vagrant/bess.yml installs linux-virtual, which is a stripped down version of Linux image (typically for VMs in cloud). This package should not be installed because:

The script might be used on non-VM systems, where linux-virtual is not intended to be used for.
Even for VMs, the package lacks useful modules for DPDK, such as uio_pci_generic and vfio-pci.

--
Also removed google-mock, which is never used for building BESS.",True,{}
NetSys/bess,https://github.com/NetSys/bess,353,2017-03-24T20:27:39Z,2017-03-24T20:33:06Z,2017-03-24T21:57:32Z,MERGED,True,0,2,1,https://github.com/sangjinhan,Do not install linux-virtual via apt-get,1,[],https://github.com/NetSys/bess/pull/353,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/353#issuecomment-289135868,"The Ansible script vagrant/bess.yml installs linux-virtual, which is a stripped down version of Linux image (typically for VMs in cloud). This package should not be installed because:

The script might be used on non-VM systems, where linux-virtual is not intended to be used for.
Even for VMs, the package lacks useful modules for DPDK, such as uio_pci_generic and vfio-pci.

--
Also removed google-mock, which is never used for building BESS.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,354,2017-03-24T20:38:19Z,2017-03-24T21:52:47Z,2017-03-24T21:57:32Z,MERGED,True,1,1,1,https://github.com/changlan,Execute `cd ..` even if `all_test` fails,1,[],https://github.com/NetSys/bess/pull/354,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/354,This should fix #347.,This should fix #347.,True,{}
NetSys/bess,https://github.com/NetSys/bess,354,2017-03-24T20:38:19Z,2017-03-24T21:52:47Z,2017-03-24T21:57:32Z,MERGED,True,1,1,1,https://github.com/changlan,Execute `cd ..` even if `all_test` fails,1,[],https://github.com/NetSys/bess/pull/354,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/354#issuecomment-289138764,This should fix #347.,"Perhaps using a subshell is cleaner...?
...
(cd core && ./all_test)
...

than
...
cd core && ./all_test
cd ..
...",True,{'THUMBS_UP': ['https://github.com/changlan']}
NetSys/bess,https://github.com/NetSys/bess,354,2017-03-24T20:38:19Z,2017-03-24T21:52:47Z,2017-03-24T21:57:32Z,MERGED,True,1,1,1,https://github.com/changlan,Execute `cd ..` even if `all_test` fails,1,[],https://github.com/NetSys/bess/pull/354,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/354#issuecomment-289139820,This should fix #347.,Nice. Fixed. #TIL,True,{}
NetSys/bess,https://github.com/NetSys/bess,354,2017-03-24T20:38:19Z,2017-03-24T21:52:47Z,2017-03-24T21:57:32Z,MERGED,True,1,1,1,https://github.com/changlan,Execute `cd ..` even if `all_test` fails,1,[],https://github.com/NetSys/bess/pull/354,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/354#issuecomment-289144874,This should fix #347.,"Codecov Report

Merging #354 into master will increase coverage by 7%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #354    +/-   ##
======================================
+ Coverage      22%    29%    +7%     
======================================
  Files         158    158            
  Lines        7648   7648            
======================================
+ Hits         1650   2222   +572     
+ Misses       5998   5426   -572



Impacted Files
Coverage Δ





core/worker.cc
78% <0%> (+3%)
⬆️


core/worker.h
89% <0%> (+6%)
⬆️


core/bessctl.cc
26% <0%> (+9%)
⬆️


core/module.h
73% <0%> (+10%)
⬆️


core/module.cc
49% <0%> (+12%)
⬆️


core/port.cc
38% <0%> (+15%)
⬆️


core/packet.h
73% <0%> (+19%)
⬆️


core/modules/rewrite.cc
81% <0%> (+22%)
⬆️


core/pktbatch.h
85% <0%> (+38%)
⬆️


core/modules/round_robin.cc
45% <0%> (+40%)
⬆️


... and 14 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update eb5ea77...ea8033b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,354,2017-03-24T20:38:19Z,2017-03-24T21:52:47Z,2017-03-24T21:57:32Z,MERGED,True,1,1,1,https://github.com/changlan,Execute `cd ..` even if `all_test` fails,1,[],https://github.com/NetSys/bess/pull/354,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/354#issuecomment-289152137,This should fix #347.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,355,2017-03-28T04:22:53Z,2017-03-28T05:36:50Z,2017-03-28T05:37:39Z,MERGED,True,1,9,2,https://github.com/barath,Switches to using std::greater for event comparison.,1,[],https://github.com/NetSys/bess/pull/355,https://github.com/barath,1,https://github.com/NetSys/bess/pull/355,(std::function was not inlined in the previous code),(std::function was not inlined in the previous code),True,{}
NetSys/bess,https://github.com/NetSys/bess,355,2017-03-28T04:22:53Z,2017-03-28T05:36:50Z,2017-03-28T05:37:39Z,MERGED,True,1,9,2,https://github.com/barath,Switches to using std::greater for event comparison.,1,[],https://github.com/NetSys/bess/pull/355,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/355#issuecomment-289659059,(std::function was not inlined in the previous code),"Codecov Report

Merging #355 into master will increase coverage by 5%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #355    +/-   ##
======================================
+ Coverage      22%    28%    +5%     
======================================
  Files         158    158            
  Lines        7648   7645     -3     
======================================
+ Hits         1707   2106   +399     
+ Misses       5941   5539   -402



Impacted Files
Coverage Δ





core/modules/flowgen.cc
1% <ø> (-68%)
⬇️


core/modules/flowgen.h
0% <ø> (-67%)
⬇️


core/modules/generic_encap.cc
2% <0%> (-88%)
⬇️


core/utils/random.h
36% <0%> (-64%)
⬇️


core/modules/generic_encap.h
0% <0%> (-50%)
⬇️


core/pktbatch.h
77% <0%> (-8%)
⬇️


core/worker.h
83% <0%> (-6%)
⬇️


core/metadata.cc
67% <0%> (ø)
⬆️


... and 23 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c4e4fc7...887a331. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,355,2017-03-28T04:22:53Z,2017-03-28T05:36:50Z,2017-03-28T05:37:39Z,MERGED,True,1,9,2,https://github.com/barath,Switches to using std::greater for event comparison.,1,[],https://github.com/NetSys/bess/pull/355,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/355#issuecomment-289668306,(std::function was not inlined in the previous code),,True,{}
NetSys/bess,https://github.com/NetSys/bess,356,2017-03-28T06:04:20Z,2017-03-28T19:21:16Z,2017-03-28T21:37:34Z,MERGED,True,13,11,1,https://github.com/sangjinhan,Call rte_eth_tx_queue_setup first,3,[],https://github.com/NetSys/bess/pull/356,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/356,"For some mysterious bug in the DPDK virtio code, the PMD driver running in a VM crashes in rte_eth_rx_burst(), if a virtio device was earlier initialized with rte_eth_rx_queue_setup() called first. This PR reverses the order, invoking rte_eth_tx_queue_setup() first then rte_eth_rx_queue_setup().
!@&^($&^","For some mysterious bug in the DPDK virtio code, the PMD driver running in a VM crashes in rte_eth_rx_burst(), if a virtio device was earlier initialized with rte_eth_rx_queue_setup() called first. This PR reverses the order, invoking rte_eth_tx_queue_setup() first then rte_eth_rx_queue_setup().
!@&^($&^",True,{}
NetSys/bess,https://github.com/NetSys/bess,356,2017-03-28T06:04:20Z,2017-03-28T19:21:16Z,2017-03-28T21:37:34Z,MERGED,True,13,11,1,https://github.com/sangjinhan,Call rte_eth_tx_queue_setup first,3,[],https://github.com/NetSys/bess/pull/356,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/356#issuecomment-289677674,"For some mysterious bug in the DPDK virtio code, the PMD driver running in a VM crashes in rte_eth_rx_burst(), if a virtio device was earlier initialized with rte_eth_rx_queue_setup() called first. This PR reverses the order, invoking rte_eth_tx_queue_setup() first then rte_eth_rx_queue_setup().
!@&^($&^","Codecov Report

Merging #356 into master will increase coverage by 6%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #356    +/-   ##
======================================
+ Coverage      29%    35%    +6%     
======================================
  Files         158    158            
  Lines        7645   7645            
======================================
+ Hits         2193   2651   +458     
+ Misses       5452   4994   -458



Impacted Files
Coverage Δ





core/drivers/pmd.cc
4% <0%> (ø)
⬆️


core/modules/vlan_pop.h
0% <0%> (-100%)
⬇️


core/modules/vlan_pop.cc
7% <0%> (-93%)
⬇️


core/packet.h
76% <0%> (-14%)
⬇️


core/module.h
71% <0%> (+1%)
⬆️


core/worker.h
89% <0%> (+6%)
⬆️


core/pktbatch.h
85% <0%> (+8%)
⬆️


core/bessctl.cc
35% <0%> (+9%)
⬆️


core/traffic_class.h
78% <0%> (+17%)
⬆️


core/scheduler.h
86% <0%> (+21%)
⬆️


... and 12 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f462c2b...106156e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,356,2017-03-28T06:04:20Z,2017-03-28T19:21:16Z,2017-03-28T21:37:34Z,MERGED,True,13,11,1,https://github.com/sangjinhan,Call rte_eth_tx_queue_setup first,3,[],https://github.com/NetSys/bess/pull/356,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/356#issuecomment-289912647,"For some mysterious bug in the DPDK virtio code, the PMD driver running in a VM crashes in rte_eth_rx_burst(), if a virtio device was earlier initialized with rte_eth_rx_queue_setup() called first. This PR reverses the order, invoking rte_eth_tx_queue_setup() first then rte_eth_rx_queue_setup().
!@&^($&^",🐈,True,{}
NetSys/bess,https://github.com/NetSys/bess,357,2017-03-29T00:22:51Z,2017-03-31T23:10:04Z,2017-03-31T23:10:04Z,CLOSED,False,721,688,30,https://github.com/ddiproietto,Merge LeafTrafficClass and Task,6,['notready'],https://github.com/NetSys/bess/pull/357,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/357,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves.  This can be slower, because the scheduler is called after every Task is executed.  Is it important to optimize for these use cases?","With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves.  This can be slower, because the scheduler is called after every Task is executed.  Is it important to optimize for these use cases?",True,{}
NetSys/bess,https://github.com/NetSys/bess,357,2017-03-29T00:22:51Z,2017-03-31T23:10:04Z,2017-03-31T23:10:04Z,CLOSED,False,721,688,30,https://github.com/ddiproietto,Merge LeafTrafficClass and Task,6,['notready'],https://github.com/NetSys/bess/pull/357,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/357#issuecomment-289947467,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves.  This can be slower, because the scheduler is called after every Task is executed.  Is it important to optimize for these use cases?","Codecov Report

Merging #357 into master will decrease coverage by 1%.
The diff coverage is 26%.


@@          Coverage Diff          @@
##           master   #357   +/-   ##
=====================================
- Coverage      21%    21%   -1%     
=====================================
  Files         158    158           
  Lines        7645   7664   +19     
=====================================
- Hits         1614   1578   -36     
- Misses       6031   6086   +55



Impacted Files
Coverage Δ





core/module.h
72% <ø> (+22%)
⬆️


core/debug.cc
8% <0%> (ø)
⬆️


core/bessctl.cc
19% <0%> (-5%)
⬇️


core/utils/extended_priority_queue.h
0% <0%> (ø)
⬆️


core/worker.h
78% <100%> (-6%)
⬇️


core/worker.cc
75% <100%> (ø)
⬆️


core/task-impl.h
100% <100%> (ø)



core/module.cc
51% <100%> (+20%)
⬆️


core/traffic_class.h
43% <26%> (-18%)
⬇️


core/task.h
50% <43%> (ø)



... and 40 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d915875...d995350. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,357,2017-03-29T00:22:51Z,2017-03-31T23:10:04Z,2017-03-31T23:10:04Z,CLOSED,False,721,688,30,https://github.com/ddiproietto,Merge LeafTrafficClass and Task,6,['notready'],https://github.com/NetSys/bess/pull/357,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/357#issuecomment-290856666,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves.  This can be slower, because the scheduler is called after every Task is executed.  Is it important to optimize for these use cases?","There is a bug here:  removing a module causes a crash.  It happens because the module needs to remove the leaves.
I'm closing this and opening a new pull request
Thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,358,2017-03-29T09:07:59Z,2017-03-31T20:01:07Z,2017-04-03T08:13:15Z,MERGED,True,20,1,2,https://github.com/nemethf,bessctl: Allow wildcarding modules in command 'track',2,[],https://github.com/NetSys/bess/pull/358,https://github.com/nemethf,1,https://github.com/NetSys/bess/pull/358,"This PR is the second iteration of #351.  * denotes every module.  As an example, the following command enables tracking on all of the input gates.
localhost:10514 $ track enable * in","This PR is the second iteration of #351.  * denotes every module.  As an example, the following command enables tracking on all of the input gates.
localhost:10514 $ track enable * in",True,{}
NetSys/bess,https://github.com/NetSys/bess,358,2017-03-29T09:07:59Z,2017-03-31T20:01:07Z,2017-04-03T08:13:15Z,MERGED,True,20,1,2,https://github.com/nemethf,bessctl: Allow wildcarding modules in command 'track',2,[],https://github.com/NetSys/bess/pull/358,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/358#issuecomment-290034346,"This PR is the second iteration of #351.  * denotes every module.  As an example, the following command enables tracking on all of the input gates.
localhost:10514 $ track enable * in","Codecov Report

Merging #358 into master will increase coverage by 9%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #358    +/-   ##
======================================
+ Coverage      21%    30%    +9%     
======================================
  Files         158    158            
  Lines        7645   7647     +2     
======================================
+ Hits         1614   2319   +705     
+ Misses       6031   5328   -703



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
1% <0%> (-82%)
⬇️


core/modules/port_out.cc
3% <0%> (-71%)
⬇️


core/modules/port_inc.cc
4% <0%> (-61%)
⬇️


core/modules/random_update.cc
4% <0%> (-59%)
⬇️


core/port.h
33% <0%> (-54%)
⬇️


core/utils/ether.cc
0% <0%> (-53%)
⬇️


core/modules/port_out.h
0% <0%> (-50%)
⬇️


core/modules/port_inc.h
0% <0%> (-50%)
⬇️


core/modules/random_update.h
0% <0%> (-50%)
⬇️


core/port.cc
23% <0%> (-15%)
⬇️


... and 37 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d915875...1154a92. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,358,2017-03-29T09:07:59Z,2017-03-31T20:01:07Z,2017-04-03T08:13:15Z,MERGED,True,20,1,2,https://github.com/nemethf,bessctl: Allow wildcarding modules in command 'track',2,[],https://github.com/NetSys/bess/pull/358,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/358#issuecomment-290157962,"This PR is the second iteration of #351.  * denotes every module.  As an example, the following command enables tracking on all of the input gates.
localhost:10514 $ track enable * in",LGTM. Would you mind adding your name to the CONTRIBUTORS.md file as well? (unless you want to remain anonymous),True,{}
NetSys/bess,https://github.com/NetSys/bess,358,2017-03-29T09:07:59Z,2017-03-31T20:01:07Z,2017-04-03T08:13:15Z,MERGED,True,20,1,2,https://github.com/nemethf,bessctl: Allow wildcarding modules in command 'track',2,[],https://github.com/NetSys/bess/pull/358,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/358#issuecomment-290815314,"This PR is the second iteration of #351.  * denotes every module.  As an example, the following command enables tracking on all of the input gates.
localhost:10514 $ track enable * in","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,359,2017-03-29T18:45:07Z,2017-03-29T20:59:20Z,2017-03-30T10:54:07Z,MERGED,True,11,4,2,https://github.com/sangjinhan,Show MAC address of PMD device at startup,3,[],https://github.com/NetSys/bess/pull/359,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/359,"This PR logs the MAC addresses of DPDK PMD devices during the driver initialization phase. This is useful especially because SR-IOV VFs are assigned with a random MAC address when created.
I0329 11:31:05.575981 10807 pmd.cc:46] 1 DPDK PMD ports have been recognized:
I0329 11:31:05.575997 10807 pmd.cc:66] DPDK port_id 0 (net_i40e)   RXQ 320 TXQ 320  3c:fd:fe:a2:ac:09  0000:02:00.01 8086:1583

While not directly related, this PR also fixes the incorrect port statistics for i40e VFs.","This PR logs the MAC addresses of DPDK PMD devices during the driver initialization phase. This is useful especially because SR-IOV VFs are assigned with a random MAC address when created.
I0329 11:31:05.575981 10807 pmd.cc:46] 1 DPDK PMD ports have been recognized:
I0329 11:31:05.575997 10807 pmd.cc:66] DPDK port_id 0 (net_i40e)   RXQ 320 TXQ 320  3c:fd:fe:a2:ac:09  0000:02:00.01 8086:1583

While not directly related, this PR also fixes the incorrect port statistics for i40e VFs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,359,2017-03-29T18:45:07Z,2017-03-29T20:59:20Z,2017-03-30T10:54:07Z,MERGED,True,11,4,2,https://github.com/sangjinhan,Show MAC address of PMD device at startup,3,[],https://github.com/NetSys/bess/pull/359,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/359#issuecomment-290223204,"This PR logs the MAC addresses of DPDK PMD devices during the driver initialization phase. This is useful especially because SR-IOV VFs are assigned with a random MAC address when created.
I0329 11:31:05.575981 10807 pmd.cc:46] 1 DPDK PMD ports have been recognized:
I0329 11:31:05.575997 10807 pmd.cc:66] DPDK port_id 0 (net_i40e)   RXQ 320 TXQ 320  3c:fd:fe:a2:ac:09  0000:02:00.01 8086:1583

While not directly related, this PR also fixes the incorrect port statistics for i40e VFs.","Codecov Report

Merging #359 into master will increase coverage by 13%.
The diff coverage is 0%.


@@           Coverage Diff           @@
##           master   #359     +/-   ##
=======================================
+ Coverage      21%    35%    +13%     
=======================================
  Files         158    158             
  Lines        7645   7647      +2     
=======================================
+ Hits         1614   2645   +1031     
+ Misses       6031   5002   -1029



Impacted Files
Coverage Δ





core/utils/ether.h
100% <ø> (ø)
⬆️


core/drivers/pmd.cc
4% <0%> (ø)
⬇️


core/worker.cc
78% <0%> (+3%)
⬆️


core/gate.h
52% <0%> (+5%)
⬆️


core/worker.h
89% <0%> (+6%)
⬆️


core/modules/random_update.cc
70% <0%> (+7%)
⬆️


core/bessctl.cc
35% <0%> (+11%)
⬆️


core/traffic_class.h
78% <0%> (+17%)
⬆️


core/module.cc
49% <0%> (+18%)
⬆️


core/scheduler.h
86% <0%> (+21%)
⬆️


... and 33 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d915875...c050b97. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,359,2017-03-29T18:45:07Z,2017-03-29T20:59:20Z,2017-03-30T10:54:07Z,MERGED,True,11,4,2,https://github.com/sangjinhan,Show MAC address of PMD device at startup,3,[],https://github.com/NetSys/bess/pull/359,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/359#issuecomment-290224243,"This PR logs the MAC addresses of DPDK PMD devices during the driver initialization phase. This is useful especially because SR-IOV VFs are assigned with a random MAC address when created.
I0329 11:31:05.575981 10807 pmd.cc:46] 1 DPDK PMD ports have been recognized:
I0329 11:31:05.575997 10807 pmd.cc:66] DPDK port_id 0 (net_i40e)   RXQ 320 TXQ 320  3c:fd:fe:a2:ac:09  0000:02:00.01 8086:1583

While not directly related, this PR also fixes the incorrect port statistics for i40e VFs.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,360,2017-03-30T00:25:56Z,2017-03-30T02:56:02Z,2017-03-30T10:54:05Z,MERGED,True,210,145,6,https://github.com/sangjinhan,Add support for protobuf Map types,7,[],https://github.com/NetSys/bess/pull/360,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/360,"The existing Python API crashes upon use of the protobuf Map type, e.g., MetadataTest module has:
message MetadataTestArg {
  map<string, int64> read = 1;
  map<string, int64> write = 2;
  map<string, int64> update = 3;
}

This PR addresses this crash issue, along with fixes for outdated unit tests.","The existing Python API crashes upon use of the protobuf Map type, e.g., MetadataTest module has:
message MetadataTestArg {
  map<string, int64> read = 1;
  map<string, int64> write = 2;
  map<string, int64> update = 3;
}

This PR addresses this crash issue, along with fixes for outdated unit tests.",True,{}
NetSys/bess,https://github.com/NetSys/bess,360,2017-03-30T00:25:56Z,2017-03-30T02:56:02Z,2017-03-30T10:54:05Z,MERGED,True,210,145,6,https://github.com/sangjinhan,Add support for protobuf Map types,7,[],https://github.com/NetSys/bess/pull/360,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/360#issuecomment-290267975,"The existing Python API crashes upon use of the protobuf Map type, e.g., MetadataTest module has:
message MetadataTestArg {
  map<string, int64> read = 1;
  map<string, int64> write = 2;
  map<string, int64> update = 3;
}

This PR addresses this crash issue, along with fixes for outdated unit tests.","Codecov Report

Merging #360 into master will increase coverage by 8%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #360    +/-   ##
======================================
+ Coverage      18%    26%    +8%     
======================================
  Files         158    158            
  Lines        7647   7740    +93     
======================================
+ Hits         1396   2035   +639     
+ Misses       6251   5705   -546



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
1% <0%> (-82%)
⬇️


core/modules/port_out.cc
3% <0%> (-71%)
⬇️


core/modules/port_inc.cc
4% <0%> (-61%)
⬇️


core/port.h
33% <0%> (-54%)
⬇️


core/utils/ether.cc
0% <0%> (-53%)
⬇️


core/modules/port_out.h
0% <0%> (-50%)
⬇️


core/modules/port_inc.h
0% <0%> (-50%)
⬇️


core/port.cc
23% <0%> (-15%)
⬇️


core/bessctl.cc
18% <0%> (-6%)
⬇️


core/drivers/pmd.cc
5% <0%> (ø)
⬆️


... and 32 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 342aa17...d54a45e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,360,2017-03-30T00:25:56Z,2017-03-30T02:56:02Z,2017-03-30T10:54:05Z,MERGED,True,210,145,6,https://github.com/sangjinhan,Add support for protobuf Map types,7,[],https://github.com/NetSys/bess/pull/360,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/360#issuecomment-290288070,"The existing Python API crashes upon use of the protobuf Map type, e.g., MetadataTest module has:
message MetadataTestArg {
  map<string, int64> read = 1;
  map<string, int64> write = 2;
  map<string, int64> update = 3;
}

This PR addresses this crash issue, along with fixes for outdated unit tests.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,361,2017-03-31T21:58:56Z,2017-04-04T05:11:02Z,2017-04-04T22:35:11Z,MERGED,True,2,5,2,https://github.com/changlan,Specify localhost for ansible-playbook,2,[],https://github.com/NetSys/bess/pull/361,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/361,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,361,2017-03-31T21:58:56Z,2017-04-04T05:11:02Z,2017-04-04T22:35:11Z,MERGED,True,2,5,2,https://github.com/changlan,Specify localhost for ansible-playbook,2,[],https://github.com/NetSys/bess/pull/361,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/361#issuecomment-290845899,,"A few comments:

You can completely ignore this: -K instead of --ask-become-pass for brevity?

Also ignore this: localhost,, not ""localhost,""


The pip task failed on a fresh Ubuntu 16.04 and I suspect it is related to this. I changed the task like this and it worked (note that I removed protobuf, which is a dependency of grpcio anyway).

- name: Install required Python packages
  pip: name=grpcio
  become: true


Why do we install Ansible from ppa, not from Ubuntu default repo?",True,{}
NetSys/bess,https://github.com/NetSys/bess,361,2017-03-31T21:58:56Z,2017-04-04T05:11:02Z,2017-04-04T22:35:11Z,MERGED,True,2,5,2,https://github.com/changlan,Specify localhost for ansible-playbook,2,[],https://github.com/NetSys/bess/pull/361,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/361#issuecomment-290847009,,"Maybe -t package option should be there, since we don't want the ""vagrant"" section to be run?",True,{}
NetSys/bess,https://github.com/NetSys/bess,361,2017-03-31T21:58:56Z,2017-04-04T05:11:02Z,2017-04-04T22:35:11Z,MERGED,True,2,5,2,https://github.com/changlan,Specify localhost for ansible-playbook,2,[],https://github.com/NetSys/bess/pull/361,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/361#issuecomment-290847125,,"Yep, fixes are coming.
Re: ppa, some versions of Ubuntu may have Ansible 1.x, the behavior of which is quite different.",True,{'THUMBS_UP': ['https://github.com/sangjinhan']}
NetSys/bess,https://github.com/NetSys/bess,361,2017-03-31T21:58:56Z,2017-04-04T05:11:02Z,2017-04-04T22:35:11Z,MERGED,True,2,5,2,https://github.com/changlan,Specify localhost for ansible-playbook,2,[],https://github.com/NetSys/bess/pull/361,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/361#issuecomment-290848246,,"Codecov Report

Merging #361 into master will increase coverage by 10%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #361    +/-   ##
======================================
+ Coverage      22%    32%   +10%     
======================================
  Files         158    158            
  Lines        7682   7682            
======================================
+ Hits         1700   2458   +758     
+ Misses       5982   5224   -758



Impacted Files
Coverage Δ





core/modules/source.cc
49% <0%> (+4%)
⬆️


core/module.h
72% <0%> (+5%)
⬆️


core/port.cc
38% <0%> (+15%)
⬆️


core/bessctl.cc
35% <0%> (+17%)
⬆️


core/modules/rewrite.cc
81% <0%> (+17%)
⬆️


core/traffic_class.h
78% <0%> (+19%)
⬆️


core/scheduler.h
86% <0%> (+21%)
⬆️


core/utils/common.h
100% <0%> (+24%)
⬆️


core/task.cc
80% <0%> (+30%)
⬆️


core/mem_alloc.cc
63% <0%> (+31%)
⬆️


... and 21 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 93a6c17...b47b389. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,361,2017-03-31T21:58:56Z,2017-04-04T05:11:02Z,2017-04-04T22:35:11Z,MERGED,True,2,5,2,https://github.com/changlan,Specify localhost for ansible-playbook,2,[],https://github.com/NetSys/bess/pull/361,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/361#issuecomment-291395129,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,362,2017-03-31T23:12:42Z,2017-04-07T18:52:05Z,2017-04-07T18:52:05Z,CLOSED,False,747,686,30,https://github.com/ddiproietto,Embed leaf task v2,6,[],https://github.com/NetSys/bess/pull/362,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/362,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves. This can be slower, because the scheduler is called after every Task is executed. Is it important to optimize for these use cases?","With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves. This can be slower, because the scheduler is called after every Task is executed. Is it important to optimize for these use cases?",True,{}
NetSys/bess,https://github.com/NetSys/bess,362,2017-03-31T23:12:42Z,2017-04-07T18:52:05Z,2017-04-07T18:52:05Z,CLOSED,False,747,686,30,https://github.com/ddiproietto,Embed leaf task v2,6,[],https://github.com/NetSys/bess/pull/362,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/362#issuecomment-290863748,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves. This can be slower, because the scheduler is called after every Task is executed. Is it important to optimize for these use cases?","Codecov Report

Merging #362 into master will increase coverage by <1%.
The diff coverage is 26%.


@@          Coverage Diff           @@
##           master   #362    +/-   ##
======================================
+ Coverage      22%    22%   +<1%     
======================================
  Files         158    158            
  Lines        7682   7713    +31     
======================================
+ Hits         1700   1714    +14     
- Misses       5982   5999    +17



Impacted Files
Coverage Δ





core/module.h
68% <ø> (+1%)
⬆️


core/bessctl.cc
19% <0%> (+1%)
⬆️


core/utils/extended_priority_queue.h
0% <0%> (ø)
⬆️


core/debug.cc
8% <0%> (ø)
⬆️


core/worker.h
78% <100%> (ø)
⬆️


core/task-impl.h
100% <100%> (ø)



core/worker.cc
78% <100%> (ø)
⬆️


core/traffic_class.h
43% <29%> (-16%)
⬇️


core/task.h
50% <50%> (ø)



core/module.cc
50% <67%> (+1%)
⬆️


... and 6 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 93a6c17...7bd6ad5. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,362,2017-03-31T23:12:42Z,2017-04-07T18:52:05Z,2017-04-07T18:52:05Z,CLOSED,False,747,686,30,https://github.com/ddiproietto,Embed leaf task v2,6,[],https://github.com/NetSys/bess/pull/362,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/362#issuecomment-291302739,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves. This can be slower, because the scheduler is called after every Task is executed. Is it important to optimize for these use cases?","Code looks great, I don't have anything to comment on. 👍
Perhaps we can revise the user interface and the default behavior of traffic classes to make it more intuitive. For example, with the samples/queue script:
...
src::Source() \
        -> Rewrite(templates=[test_packet]) \
        -> queue::Queue() \
        -> VLANPush(tci=2) \
        -> Sink()

bess.add_tc('fast', policy='rate_limit', resource='packet', limit={'packet': 9000000})
bess.add_tc('fast_leaf', policy='leaf', parent='fast', leaf_module_name=src.name)

bess.add_tc('slow', policy='rate_limit', resource='packet', limit={'packet': 1000000})
bess.add_tc('slow_leaf', policy='leaf', parent='slow', leaf_module_name=queue.name)
...

$ show tc
  worker 0 (6 classes)
    root_0            parent none        share 0   unlimited
    defaultrr_0       parent root_0      share 0   unlimited
    slow              parent defaultrr_0  share 0   limits: 1.000 Mpps
    slow_leaf         parent slow        share 0   unlimited
    fast              parent defaultrr_0  share 0   limits: 9.000 Mpps
    fast_leaf         parent fast        share 0   unlimited

A few thoughts:

While the ""important"" TCs are only slow and fast, there are too many other TCs accompanied.

The leaf TCs must be made explicitly, almost always. This is pretty tedious...


Maybe we don't need two ""default"" TCs: root_0 and defaultrr_0.

As far as the sample scripts are concerned, none of them utilize root_X.
Having a PriorityScheduler as the default root is a bit awkward.
RoundRobinScheduler for root would make more sense, since:

It has the lowest overheads,
It allows an arbitrary number of child TCs, and
It doesn't require any additional parameters to add children.




If the user specifies a complete tree of TCs, neither root_0 nor defaultrr_0 would be useful.
Usability issues:

Chasing the ""parent"" chains for show tc is not intuitive, when the user checks the TC hierarchy.
share, unlimited, or priority should be shown only when they are relevant.
It's hard to know what modules are associated with what TCs


People seem to be confused with the concept of task and task ID...

Therefore, I'd like to suggest (@ddiproietto and @barath, please check if they are reasonable):

Leaf TCs:

A default leaf TC is automatically created upon module creation
Its (internal) TC name is !<module name>:<task name>.

The :<task name> is optional, only for modules that create multiple tasks

only PortInc at the moment I think.






add_tc is used to create non-leaf TCs. The parent of a TC may or may not be specified.

When no parent is specified, a wid may or may not be specified.
update_tc can be used to specify a parent (or change a parent)


By default, BESS does not create any default TCs for workers. Instead, on resume_all, BESS performs the following actions as necessary:

If there are orphan TCs that are not bound to any worker, each is allocated to a worker in an arbitrary manner (e.g., round robin). After this, each worker has a forest of trees (each orphan is a root).

If there is only one orphan TC and it is non-leaf: the TC becomes the root of the worker.
Otherwise: a default RoundRobinTC is created as the root of the worker, and all leaf/non-leaf workers become its children.


At last, if there is an auto-created default root TC that has no child any longer, the TC is automatically removed.



To summarize, it would be like:
# API functions:
# add_tc(tc_name, policy, parent=None, wid=None, ...)    # NOTE: parent and wid cannot be both specified
# update_tc(tc_name, parent=None, wid=None, ...)   # you can do everything as add_tc, except for changing its kind (policy)
# attach_module(tc_name, mod_name, task_name=None, parent=None, wid=None)
# delete_tc(tc_name)

# new samples/queue.bess
...
bess.add_tc('fast', policy='rate_limit', resource='packet', limit=9000000)
bess.attach_module('fast', src.name)    # TODO: src.attach_to('fast') should also work

bess.add_tc('slow', policy='rate_limit', resource='packet', limit=1000000)
bess.attach_module('slow', queue.name)
...

# (with some cosmetic changes...)
$ show tc
  <worker 0>            round_robin
   +-- fast             rate_limit
   |     +-- (src)                      limit: 9.000 Mpps
   +-- slow             rate_limit
         +-- (queue)                    limit: 1.000 Mpps


Showing the TC type (round_robin and rate_limit) seems to be somewhat redundant. They can be omitted for brevity.
I am not sure where to put limit: ... (at the parent or the child). For WRR and Priority, each child would have its own weight and priority, so I thought it would make sense to have limit at the child as well.",True,{}
NetSys/bess,https://github.com/NetSys/bess,362,2017-03-31T23:12:42Z,2017-04-07T18:52:05Z,2017-04-07T18:52:05Z,CLOSED,False,747,686,30,https://github.com/ddiproietto,Embed leaf task v2,6,[],https://github.com/NetSys/bess/pull/362,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/362#issuecomment-291305840,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves. This can be slower, because the scheduler is called after every Task is executed. Is it important to optimize for these use cases?","It seems that the Traverse issue is still there. You can reproduce the bug by running the samples/queue script repeatedly.
<disconnected> $ daemon start
Done.
localhost:10514 $ run samples/queue
Done.
localhost:10514 $ run samples/queue
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Done.
localhost:10514 $ run samples/queue
*** Error: RPC failed to localhost:10514 - <_Rendezvous of RPC that terminated with (StatusCode.UNAVAILABLE, Endpoint read failed)>
From /tmp/bessd_crash.log (Mon Apr  3 22:51:55 2017):
A critical error has occured. Aborting...
Signal: 11 (Segmentation fault), si_code: 1 (SEGV_MAPERR: address not mapped to object)
pid: 13075, tid: 13077, address: 0x10, IP: 0x69d430
Backtrace (recent calls first) ---
(0): /home/sangjin/bess/core/bessd(_ZNK4bess22RoundRobinTrafficClass8TraverseEPFvPKNS_12TrafficClassEPvES4_+0x50) [0x69d430]
    bess::RoundRobinTrafficClass::Traverse(void (*)(bess::TrafficClass const*, void*), void*) const at /home/sangjin/bess/core/traffic_class.cc:385
         382:     child->Traverse(f, arg);
         383:   }
         384:   for (const auto &child : blocked_children_) {
      -> 385:     child->Traverse(f, arg);
         386:   }
         387: }
         388:
(1): /home/sangjin/bess/core/bessd(_ZNK4bess20PriorityTrafficClass8TraverseEPFvPKNS_12TrafficClassEPvES4_+0x43) [0x69d323]
    bess::PriorityTrafficClass::Traverse(void (*)(bess::TrafficClass const*, void*), void*) const at /home/sangjin/bess/core/traffic_class.cc:125
      -> 125:     child.c_->Traverse(f, arg);
(2): /home/sangjin/bess/core/bessd(_ZNK4bess12TrafficClass4SizeEv+0x29) [0x69dfe9]
    bess::TrafficClass::Size() const at /home/sangjin/bess/core/traffic_class.cc:22
      -> 22:       static_cast<void*>(&ret));
(3): /home/sangjin/bess/core/bessd(_ZN15BESSControlImpl11ListWorkersEPN4grpc13ServerContextEPKN4bess2pb12EmptyRequestEPNS4_19ListWorkersResponseE+0xcd) [0x629b2d]
    bess::Scheduler<Task>::NumTcs() const at /home/sangjin/bess/core/scheduler.h:198
      -> 198:     return root_->Size() - 1;
     (inlined by) BESSControlImpl::ListWorkers(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::ListWorkersResponse*) at /home/sangjin/bess/core/bessctl.cc:401
      -> 401:       status->set_num_tcs(workers[wid]->scheduler()->NumTcs());",True,{}
NetSys/bess,https://github.com/NetSys/bess,362,2017-03-31T23:12:42Z,2017-04-07T18:52:05Z,2017-04-07T18:52:05Z,CLOSED,False,747,686,30,https://github.com/ddiproietto,Embed leaf task v2,6,[],https://github.com/NetSys/bess/pull/362,https://github.com/ddiproietto,5,https://github.com/NetSys/bess/pull/362#issuecomment-291330716,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves. This can be slower, because the scheduler is called after every Task is executed. Is it important to optimize for these use cases?","Thanks a lot for your comments!  The user interface you're suggesting seems a lot simpler, thanks.  I'll implement the changes and post a new version.
The Traverse issue can be reproduced also on master by running samples/queue and doing show tc repeatedly.  As discussed offline, maybe I can fix it by keeping static copies of the *children_ structures that are not changed by the workers.
I'll post a new version as soon as I'm done, thanks for the suggestions!",True,{}
NetSys/bess,https://github.com/NetSys/bess,362,2017-03-31T23:12:42Z,2017-04-07T18:52:05Z,2017-04-07T18:52:05Z,CLOSED,False,747,686,30,https://github.com/ddiproietto,Embed leaf task v2,6,[],https://github.com/NetSys/bess/pull/362,https://github.com/barath,6,https://github.com/NetSys/bess/pull/362#issuecomment-291668524,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves. This can be slower, because the scheduler is called after every Task is executed. Is it important to optimize for these use cases?","Sangjin, I think your design / suggestions are good.
I had only one comment: ""If there are orphan TCs that are not bound to any worker, each is allocated to a worker in an arbitrary manner (e.g., round robin). After this, each worker has a forest of trees (each orphan is a root)."" -- I think the ultimate intent of this is simpler than this phrasing suggests.  If I understand right, all that happens is: if there is only one TC in the worker, it becomes the root; if there's more than one, they get attached to a round robin root.",True,{'THUMBS_UP': ['https://github.com/sangjinhan']}
NetSys/bess,https://github.com/NetSys/bess,362,2017-03-31T23:12:42Z,2017-04-07T18:52:05Z,2017-04-07T18:52:05Z,CLOSED,False,747,686,30,https://github.com/ddiproietto,Embed leaf task v2,6,[],https://github.com/NetSys/bess/pull/362,https://github.com/ddiproietto,7,https://github.com/NetSys/bess/pull/362#issuecomment-292621793,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
To execute multiple Tasks we now have to use a RoundRobinClass with multiple leaves. This can be slower, because the scheduler is called after every Task is executed. Is it important to optimize for these use cases?","I've implemented the interface as suggested above except:


I've split the UpdateTc message into two: UpdateTcParam and UpdateTcParent. UpdateTcParam is used to change the tc's own parameters (like the limit), UpdateTcParent is used to move TCs.


Since the scheduler keeps pointers to TCs in throttled_cache, UpdateTcParent is only implemented for leaf or orphan non-leaf.  For the same reason, I haven't implemented DeleteTc.


I've opened another pull request
Thanks",True,{}
NetSys/bess,https://github.com/NetSys/bess,363,2017-04-02T07:35:10Z,2017-04-02T11:00:19Z,2017-04-02T11:01:24Z,MERGED,True,5,1,1,https://github.com/apanda,Fix sigsegv in cuckoo_map.h,1,['bug'],https://github.com/NetSys/bess/pull/363,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/363,"Calling *this = std::move(<something else>) is unsafe outside of
the move constructor in C++11 (in particular *this is const). In this
case this resulted in a segfault. I changed this to a series of moves
of the inner elements. Interestingly in searching through github
I have not found anyone use this outside of a move constructor, so I
wonder why we chose this construct.","Calling *this = std::move(<something else>) is unsafe outside of
the move constructor in C++11 (in particular *this is const). In this
case this resulted in a segfault. I changed this to a series of moves
of the inner elements. Interestingly in searching through github
I have not found anyone use this outside of a move constructor, so I
wonder why we chose this construct.",True,{}
NetSys/bess,https://github.com/NetSys/bess,363,2017-04-02T07:35:10Z,2017-04-02T11:00:19Z,2017-04-02T11:01:24Z,MERGED,True,5,1,1,https://github.com/apanda,Fix sigsegv in cuckoo_map.h,1,['bug'],https://github.com/NetSys/bess/pull/363,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/363#issuecomment-290971002,"Calling *this = std::move(<something else>) is unsafe outside of
the move constructor in C++11 (in particular *this is const). In this
case this resulted in a segfault. I changed this to a series of moves
of the inner elements. Interestingly in searching through github
I have not found anyone use this outside of a move constructor, so I
wonder why we chose this construct.","Codecov Report

Merging #363 into master will increase coverage by 5%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #363    +/-   ##
======================================
+ Coverage      22%    27%    +5%     
======================================
  Files         158    158            
  Lines        7682   7686     +4     
======================================
+ Hits         1700   2072   +372     
+ Misses       5982   5614   -368



Impacted Files
Coverage Δ





core/utils/cuckoo_map.h
0% <0%> (-46%)
⬇️


core/modules/wildcard_match.h
0% <0%> (-93%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-81%)
⬇️


core/utils/common.h
41% <0%> (-35%)
⬇️


core/metadata.cc
67% <0%> (ø)
⬇️


core/modules/source.cc
49% <0%> (+4%)
⬆️


core/module.h
72% <0%> (+5%)
⬆️


core/worker.h
83% <0%> (+6%)
⬆️


core/pktbatch.h
85% <0%> (+8%)
⬆️


... and 20 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 93a6c17...568033b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,363,2017-04-02T07:35:10Z,2017-04-02T11:00:19Z,2017-04-02T11:01:24Z,MERGED,True,5,1,1,https://github.com/apanda,Fix sigsegv in cuckoo_map.h,1,['bug'],https://github.com/NetSys/bess/pull/363,https://github.com/barath,3,https://github.com/NetSys/bess/pull/363#issuecomment-290979195,"Calling *this = std::move(<something else>) is unsafe outside of
the move constructor in C++11 (in particular *this is const). In this
case this resulted in a segfault. I changed this to a series of moves
of the inner elements. Interestingly in searching through github
I have not found anyone use this outside of a move constructor, so I
wonder why we chose this construct.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,364,2017-04-03T23:31:39Z,2017-04-06T22:24:13Z,2017-04-06T22:24:45Z,MERGED,True,172,6,6,https://github.com/justinemarie,Implement Replicate module,7,[],https://github.com/NetSys/bess/pull/364,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/364,"One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.","One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.",True,{}
NetSys/bess,https://github.com/NetSys/bess,364,2017-04-03T23:31:39Z,2017-04-06T22:24:13Z,2017-04-06T22:24:45Z,MERGED,True,172,6,6,https://github.com/justinemarie,Implement Replicate module,7,[],https://github.com/NetSys/bess/pull/364,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/364#issuecomment-291333092,"One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.","Codecov Report

Merging #364 into master will increase coverage by 7%.
The diff coverage is 10%.


@@          Coverage Diff           @@
##           master   #364    +/-   ##
======================================
+ Coverage      17%    24%    +7%     
======================================
  Files         158    160     +2     
  Lines        7686   7882   +196     
======================================
+ Hits         1326   1921   +595     
+ Misses       6360   5961   -399



Impacted Files
Coverage Δ





core/modules/replicate.h
0% <0%> (ø)



core/packet.h
47% <33%> (+14%)
⬆️


core/modules/replicate.cc
8% <8%> (ø)



core/utils/checksum.h
0% <0%> (ø)
⬆️


core/modules/nat.h
0% <0%> (ø)
⬆️


core/drivers/pmd.cc
5% <0%> (ø)
⬆️


core/modules/ip_lookup.cc
4% <0%> (ø)
⬆️


core/bessctl.cc
18% <0%> (+1%)
⬆️


... and 22 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f384261...ae307a7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,364,2017-04-03T23:31:39Z,2017-04-06T22:24:13Z,2017-04-06T22:24:45Z,MERGED,True,172,6,6,https://github.com/justinemarie,Implement Replicate module,7,[],https://github.com/NetSys/bess/pull/364,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/364#issuecomment-291576921,"One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.",The Travis error seems benign.,True,{}
NetSys/bess,https://github.com/NetSys/bess,364,2017-04-03T23:31:39Z,2017-04-06T22:24:13Z,2017-04-06T22:24:45Z,MERGED,True,172,6,6,https://github.com/justinemarie,Implement Replicate module,7,[],https://github.com/NetSys/bess/pull/364,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/364#issuecomment-291591323,"One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.",Restarted the Travis job.,True,{}
NetSys/bess,https://github.com/NetSys/bess,364,2017-04-03T23:31:39Z,2017-04-06T22:24:13Z,2017-04-06T22:24:45Z,MERGED,True,172,6,6,https://github.com/justinemarie,Implement Replicate module,7,[],https://github.com/NetSys/bess/pull/364,https://github.com/nrdmao,5,https://github.com/NetSys/bess/pull/364#issuecomment-291768817,"One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.","Have you considered an option or version of this module that will do reference counting rather than packet copies? Particularly for packet data? If the use case is for broadcast, then packet copies seem like overkill.",True,{}
NetSys/bess,https://github.com/NetSys/bess,364,2017-04-03T23:31:39Z,2017-04-06T22:24:13Z,2017-04-06T22:24:45Z,MERGED,True,172,6,6,https://github.com/justinemarie,Implement Replicate module,7,[],https://github.com/NetSys/bess/pull/364,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/364#issuecomment-292253802,"One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.","I guess what @justinemarie presumed here is that cloning packets is an infrequent operation, used mostly in slow path. In this case the slower-but-simpler solution would be fine. Since the Packet class doesn't provide any abstractions like copy-on-write at the moment, reference counting or shallow packet copy without protection may cause incorrect behaviors.
One interesting thing to note is that the DPDK PMD drivers are optimized for ""common"" cases, running much slower with uncommon packets (e.g., refcnt >=2 ). This might nullify the performance benefit from zero copy.",True,{}
NetSys/bess,https://github.com/NetSys/bess,364,2017-04-03T23:31:39Z,2017-04-06T22:24:13Z,2017-04-06T22:24:45Z,MERGED,True,172,6,6,https://github.com/justinemarie,Implement Replicate module,7,[],https://github.com/NetSys/bess/pull/364,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/364#issuecomment-292261240,"One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.","I actually just straight up didn't know DPDK supports refcounting -- if
there's a way to do this and we think it is better, I am happy to make the
change.

Nonetheless, since the primary use case here is broadcast traffic which is
less than common, I am less worried about it (as Sangjin says).
…
On Thu, Apr 6, 2017 at 10:48 AM, Sangjin Han ***@***.***> wrote:
 I guess what @justinemarie <https://github.com/justinemarie> presumed
 here is that cloning packets is an infrequent operation, used mostly in
 slow path. In this case the slower-but-simpler solution would be fine.
 Since the Packet class doesn't provide any abstractions like
 copy-on-write at the moment, reference counting or shallow packet copy
 without protection may cause incorrect behaviors.

 One interesting thing to note is that the DPDK PMD drivers are optimized
 for ""common"" cases, running much slower with uncommon packets (e.g., refcnt
 >=2 ). This might nullify the performance benefit from zero copy.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#364 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FuaRDdFDYgkYRIjVF0mXHIR0xaHPks5rtSVdgaJpZM4MyN9U>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,364,2017-04-03T23:31:39Z,2017-04-06T22:24:13Z,2017-04-06T22:24:45Z,MERGED,True,172,6,6,https://github.com/justinemarie,Implement Replicate module,7,[],https://github.com/NetSys/bess/pull/364,https://github.com/nrdmao,8,https://github.com/NetSys/bess/pull/364#issuecomment-292327102,"One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.","OK, the rational for the current implementation of replicate sounds reasonable. Indeed broadcast should be rare relative to unicast traffic for normal subnet broadcasts. I guess I was just sort of probing about what people were thinking with respect to general multicast features. If one were to implement zero copy L3 multicast you would have to worry about things like modifications per multicast group member on the packet headers, for example for l2 encapsulation. This implies an ability to encapsulate using non-contiguous buffers and the drivers would have to be able to gather multiple buffers on egress. All modules may then have to be aware of these complications and deal with them.",True,{}
NetSys/bess,https://github.com/NetSys/bess,364,2017-04-03T23:31:39Z,2017-04-06T22:24:13Z,2017-04-06T22:24:45Z,MERGED,True,172,6,6,https://github.com/justinemarie,Implement Replicate module,7,[],https://github.com/NetSys/bess/pull/364,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/364#issuecomment-292341955,"One of the projects I'm working on requires that I handle broadcast packets, which means that I need the ability to replicate these packets to multiple recipients when I see such a packet. This module creates n copies of a single packet and sends them out on n output gates.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,365,2017-04-04T00:10:57Z,2017-04-04T02:42:08Z,2017-04-04T22:34:50Z,CLOSED,False,26,17,2,https://github.com/changlan,Fix ExpandBuckets() in CuckooMap,1,[],https://github.com/NetSys/bess/pull/365,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/365,"This seems to fix the crash issue, for some reason I can't quite explain..","This seems to fix the crash issue, for some reason I can't quite explain..",True,{}
NetSys/bess,https://github.com/NetSys/bess,365,2017-04-04T00:10:57Z,2017-04-04T02:42:08Z,2017-04-04T22:34:50Z,CLOSED,False,26,17,2,https://github.com/changlan,Fix ExpandBuckets() in CuckooMap,1,[],https://github.com/NetSys/bess/pull/365,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/365#issuecomment-291348777,"This seems to fix the crash issue, for some reason I can't quite explain..","Codecov Report

Merging #365 into master will increase coverage by 14%.
The diff coverage is 0%.


@@           Coverage Diff           @@
##           master   #365     +/-   ##
=======================================
+ Coverage      17%    31%    +14%     
=======================================
  Files         158    158             
  Lines        7686   7690      +4     
=======================================
+ Hits         1326   2379   +1053     
+ Misses       6360   5311   -1049



Impacted Files
Coverage Δ





core/utils/cuckoo_map.h
44% <0%> (+44%)
⬆️


core/worker.cc
78% <0%> (+3%)
⬆️


core/gate.h
52% <0%> (+5%)
⬆️


core/worker.h
89% <0%> (+6%)
⬆️


core/bessctl.cc
26% <0%> (+9%)
⬆️


core/port.cc
38% <0%> (+15%)
⬆️


core/module.cc
49% <0%> (+18%)
⬆️


core/module.h
70% <0%> (+22%)
⬆️


core/metadata.h
57% <0%> (+33%)
⬆️


core/packet_avx.h
88% <0%> (+33%)
⬆️


... and 31 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f384261...0e31c0a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,366,2017-04-04T06:23:33Z,2017-04-05T02:29:36Z,2017-04-06T17:51:19Z,MERGED,True,28,20,1,https://github.com/changlan,Keep the ownership of FlowRecord within AvailablePorts,1,[],https://github.com/NetSys/bess/pull/366,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/366,"AvailablePorts used to give up the ownership of the FlowRecord object after releasing a pair of IP/port. This design is not safe, as it depends on the caller to maintain the ownership correctly. When AvailablePorts got destructed, released FlowRecord objects could never be freed. Hence, a better design should keep the ownership within AvailablePorts during its lifetime.","AvailablePorts used to give up the ownership of the FlowRecord object after releasing a pair of IP/port. This design is not safe, as it depends on the caller to maintain the ownership correctly. When AvailablePorts got destructed, released FlowRecord objects could never be freed. Hence, a better design should keep the ownership within AvailablePorts during its lifetime.",True,{}
NetSys/bess,https://github.com/NetSys/bess,366,2017-04-04T06:23:33Z,2017-04-05T02:29:36Z,2017-04-06T17:51:19Z,MERGED,True,28,20,1,https://github.com/changlan,Keep the ownership of FlowRecord within AvailablePorts,1,[],https://github.com/NetSys/bess/pull/366,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/366#issuecomment-291412055,"AvailablePorts used to give up the ownership of the FlowRecord object after releasing a pair of IP/port. This design is not safe, as it depends on the caller to maintain the ownership correctly. When AvailablePorts got destructed, released FlowRecord objects could never be freed. Hence, a better design should keep the ownership within AvailablePorts during its lifetime.","Codecov Report

Merging #366 into master will increase coverage by 7%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #366    +/-   ##
======================================
+ Coverage      19%    25%    +7%     
======================================
  Files         158    158            
  Lines        7686   7689     +3     
======================================
+ Hits         1457   1960   +503     
+ Misses       6229   5729   -500



Impacted Files
Coverage Δ





core/modules/nat.h
0% <0%> (ø)
⬆️


core/metadata.cc
67% <0%> (ø)
⬆️


core/traffic_class.h
61% <0%> (+1%)
⬆️


core/bessctl.cc
18% <0%> (+1%)
⬆️


core/worker.cc
78% <0%> (+3%)
⬆️


core/packet_avx.h
88% <0%> (+4%)
⬆️


core/worker.h
83% <0%> (+6%)
⬆️


core/module.h
71% <0%> (+8%)
⬆️


core/module.cc
49% <0%> (+12%)
⬆️


core/packet.h
59% <0%> (+14%)
⬆️


... and 9 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6246179...152ae62. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,366,2017-04-04T06:23:33Z,2017-04-05T02:29:36Z,2017-04-06T17:51:19Z,MERGED,True,28,20,1,https://github.com/changlan,Keep the ownership of FlowRecord within AvailablePorts,1,[],https://github.com/NetSys/bess/pull/366,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/366#issuecomment-291722794,"AvailablePorts used to give up the ownership of the FlowRecord object after releasing a pair of IP/port. This design is not safe, as it depends on the caller to maintain the ownership correctly. When AvailablePorts got destructed, released FlowRecord objects could never be freed. Hence, a better design should keep the ownership within AvailablePorts during its lifetime.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,367,2017-04-04T19:00:43Z,2017-04-06T06:31:59Z,2017-04-06T06:32:39Z,MERGED,True,67,33,17,https://github.com/nrdmao,"32 bit compile issues, Makefile envirnomental control variables",2,[],https://github.com/NetSys/bess/pull/367,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/367,"changes are required to get bess to compile with a 32 bit compiler.
changes to the Makefile to allow compilation for an alternative architecture.
changes to the Makefile to allow the option to link against shared libraries.","changes are required to get bess to compile with a 32 bit compiler.
changes to the Makefile to allow compilation for an alternative architecture.
changes to the Makefile to allow the option to link against shared libraries.",True,{}
NetSys/bess,https://github.com/NetSys/bess,367,2017-04-04T19:00:43Z,2017-04-06T06:31:59Z,2017-04-06T06:32:39Z,MERGED,True,67,33,17,https://github.com/nrdmao,"32 bit compile issues, Makefile envirnomental control variables",2,[],https://github.com/NetSys/bess/pull/367,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/367#issuecomment-291604221,"changes are required to get bess to compile with a 32 bit compiler.
changes to the Makefile to allow compilation for an alternative architecture.
changes to the Makefile to allow the option to link against shared libraries.","Codecov Report

Merging #367 into master will decrease coverage by <1%.
The diff coverage is 7%.


@@          Coverage Diff           @@
##           master   #367    +/-   ##
======================================
- Coverage      19%    19%   -<1%     
======================================
  Files         158    158            
  Lines        7686   7689     +3     
======================================
- Hits         1457   1441    -16     
- Misses       6229   6248    +19



Impacted Files
Coverage Δ





core/modules/url_filter.cc
19% <ø> (ø)
⬆️


core/utils/checksum.h
0% <ø> (ø)
⬆️


core/modules/rewrite.cc
64% <ø> (+4%)
⬆️


core/modules/wildcard_match.h
0% <ø> (ø)
⬆️


core/modules/exact_match.h
93% <ø> (+93%)
⬆️


core/modules/nat.h
0% <ø> (ø)
⬆️


core/modules/set_metadata.cc
1% <ø> (-64%)
⬇️


core/drivers/pmd.cc
4% <ø> (ø)
⬆️


core/modules/queue_inc.cc
4% <0%> (ø)
⬆️


core/modules/source.cc
44% <0%> (ø)
⬆️


... and 26 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6246179...f204921. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,367,2017-04-04T19:00:43Z,2017-04-06T06:31:59Z,2017-04-06T06:32:39Z,MERGED,True,67,33,17,https://github.com/nrdmao,"32 bit compile issues, Makefile envirnomental control variables",2,[],https://github.com/NetSys/bess/pull/367,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/367#issuecomment-291713935,"changes are required to get bess to compile with a 32 bit compiler.
changes to the Makefile to allow compilation for an alternative architecture.
changes to the Makefile to allow the option to link against shared libraries.",Thank you for the patches! I'll add a 32-bit build test to Travis to keep the code compatible with i686.,True,{}
NetSys/bess,https://github.com/NetSys/bess,367,2017-04-04T19:00:43Z,2017-04-06T06:31:59Z,2017-04-06T06:32:39Z,MERGED,True,67,33,17,https://github.com/nrdmao,"32 bit compile issues, Makefile envirnomental control variables",2,[],https://github.com/NetSys/bess/pull/367,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/367#issuecomment-291959741,"changes are required to get bess to compile with a 32 bit compiler.
changes to the Makefile to allow compilation for an alternative architecture.
changes to the Makefile to allow the option to link against shared libraries.",Please add your name to CONTRIBUTORS.md :),True,{}
NetSys/bess,https://github.com/NetSys/bess,367,2017-04-04T19:00:43Z,2017-04-06T06:31:59Z,2017-04-06T06:32:39Z,MERGED,True,67,33,17,https://github.com/nrdmao,"32 bit compile issues, Makefile envirnomental control variables",2,[],https://github.com/NetSys/bess/pull/367,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/367#issuecomment-292081740,"changes are required to get bess to compile with a 32 bit compiler.
changes to the Makefile to allow compilation for an alternative architecture.
changes to the Makefile to allow the option to link against shared libraries.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,368,2017-04-05T02:12:14Z,2017-04-05T03:25:55Z,2017-04-06T17:51:13Z,MERGED,True,0,492,1,https://github.com/sangjinhan,Remove old test for htable,1,[],https://github.com/NetSys/bess/pull/368,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/368,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,368,2017-04-05T02:12:14Z,2017-04-05T03:25:55Z,2017-04-06T17:51:13Z,MERGED,True,0,492,1,https://github.com/sangjinhan,Remove old test for htable,1,[],https://github.com/NetSys/bess/pull/368,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/368#issuecomment-291727796,,"Codecov Report

Merging #368 into master will increase coverage by 8%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #368    +/-   ##
======================================
+ Coverage      19%    27%    +8%     
======================================
  Files         158    158            
  Lines        7686   7710    +24     
======================================
+ Hits         1457   2084   +627     
+ Misses       6229   5626   -603



Impacted Files
Coverage Δ





core/modules/nat.h
0% <0%> (ø)
⬆️


core/metadata.cc
67% <0%> (ø)
⬆️


core/traffic_class.h
61% <0%> (+1%)
⬆️


core/bessctl.cc
18% <0%> (+1%)
⬆️


core/worker.cc
78% <0%> (+3%)
⬆️


core/packet_avx.h
88% <0%> (+4%)
⬆️


core/modules/source.cc
49% <0%> (+4%)
⬆️


core/module.h
73% <0%> (+10%)
⬆️


core/worker.h
89% <0%> (+11%)
⬆️


core/module.cc
49% <0%> (+12%)
⬆️


... and 14 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6246179...217f011. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,368,2017-04-05T02:12:14Z,2017-04-05T03:25:55Z,2017-04-06T17:51:13Z,MERGED,True,0,492,1,https://github.com/sangjinhan,Remove old test for htable,1,[],https://github.com/NetSys/bess/pull/368,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/368#issuecomment-291739238,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,369,2017-04-05T21:32:17Z,2017-04-06T19:31:47Z,2017-04-06T22:25:53Z,MERGED,True,153,126,5,https://github.com/justinemarie,Build BESS in Ansible script,10,[],https://github.com/NetSys/bess/pull/369,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/369,"The ansible script no longer builds BESS! Fixed -- splits into two files, one for building BESS normally, the other for configuring a vagrant dev environment.","The ansible script no longer builds BESS! Fixed -- splits into two files, one for building BESS normally, the other for configuring a vagrant dev environment.",True,{}
NetSys/bess,https://github.com/NetSys/bess,369,2017-04-05T21:32:17Z,2017-04-06T19:31:47Z,2017-04-06T22:25:53Z,MERGED,True,153,126,5,https://github.com/justinemarie,Build BESS in Ansible script,10,[],https://github.com/NetSys/bess/pull/369,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/369#issuecomment-292003876,"The ansible script no longer builds BESS! Fixed -- splits into two files, one for building BESS normally, the other for configuring a vagrant dev environment.","Chang, can you double check I didn't screw anything up here? :-)",True,{}
NetSys/bess,https://github.com/NetSys/bess,369,2017-04-05T21:32:17Z,2017-04-06T19:31:47Z,2017-04-06T22:25:53Z,MERGED,True,153,126,5,https://github.com/justinemarie,Build BESS in Ansible script,10,[],https://github.com/NetSys/bess/pull/369,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/369#issuecomment-292011197,"The ansible script no longer builds BESS! Fixed -- splits into two files, one for building BESS normally, the other for configuring a vagrant dev environment.","Codecov Report

Merging #369 into master will increase coverage by 5%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #369    +/-   ##
======================================
+ Coverage      21%    26%    +5%     
======================================
  Files         158    158            
  Lines        7689   7689            
======================================
+ Hits         1631   2013   +382     
+ Misses       6058   5676   -382



Impacted Files
Coverage Δ





core/modules/round_robin.h
0% <0%> (-67%)
⬇️


core/modules/update.cc
5% <0%> (-65%)
⬇️


core/modules/random_update.cc
4% <0%> (-61%)
⬇️


core/modules/random_update.h
0% <0%> (-50%)
⬇️


core/modules/update.h
0% <0%> (-50%)
⬇️


core/modules/hash_lb.h
0% <0%> (-50%)
⬇️


core/modules/hash_lb.cc
4% <0%> (-37%)
⬇️


core/modules/round_robin.cc
6% <0%> (-28%)
⬇️


core/worker.h
83% <0%> (-6%)
⬇️


core/bessctl.cc
18% <0%> (+1%)
⬆️


... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f835546...cb99917. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,369,2017-04-05T21:32:17Z,2017-04-06T19:31:47Z,2017-04-06T22:25:53Z,MERGED,True,153,126,5,https://github.com/justinemarie,Build BESS in Ansible script,10,[],https://github.com/NetSys/bess/pull/369,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/369#issuecomment-292029547,"The ansible script no longer builds BESS! Fixed -- splits into two files, one for building BESS normally, the other for configuring a vagrant dev environment.","According to Chang, BESS is not built by default on purpose: #305 (comment)
The new script clones a BESS repository within the VM, thus isolated from the host. This is a semantic change from the original script, where the VM ""shares"" the existing repository in the host via the Vagrant directory sync mechanism (e.g., a user can modify the source code on an OSX host but build and test it on the Linux VM).",True,{}
NetSys/bess,https://github.com/NetSys/bess,369,2017-04-05T21:32:17Z,2017-04-06T19:31:47Z,2017-04-06T22:25:53Z,MERGED,True,153,126,5,https://github.com/justinemarie,Build BESS in Ansible script,10,[],https://github.com/NetSys/bess/pull/369,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/369#issuecomment-292040669,"The ansible script no longer builds BESS! Fixed -- splits into two files, one for building BESS normally, the other for configuring a vagrant dev environment.","There are now two scripts:
* One for use within vagrant that sets up the development environment --
this is Chang's setup with no changes.
* One for use to set up BESS end to end on a new machine, not inside of
vagrant. This one can be run on bare metal machines or in a VM and does the
entire build process end to end. This is what we recommend people use to
set up BESS on the wiki.",True,{}
NetSys/bess,https://github.com/NetSys/bess,369,2017-04-05T21:32:17Z,2017-04-06T19:31:47Z,2017-04-06T22:25:53Z,MERGED,True,153,126,5,https://github.com/justinemarie,Build BESS in Ansible script,10,[],https://github.com/NetSys/bess/pull/369,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/369#issuecomment-292040758,"The ansible script no longer builds BESS! Fixed -- splits into two files, one for building BESS normally, the other for configuring a vagrant dev environment.","Re: his comment that some steps take a while, I will add comments to the
ansible files warning users that these steps take a while and it is not
hanging.
…
On Wed, Apr 5, 2017 at 6:08 PM, Justine Sherry ***@***.***> wrote:
 There are now two scripts:
 * One for use within vagrant that sets up the development environment --
 this is Chang's setup with no changes.
 * One for use to set up BESS end to end on a new machine, not inside of
 vagrant. This one can be run on bare metal machines or in a VM and does the
 entire build process end to end. This is what we recommend people use to
 set up BESS on the wiki.",True,{}
NetSys/bess,https://github.com/NetSys/bess,369,2017-04-05T21:32:17Z,2017-04-06T19:31:47Z,2017-04-06T22:25:53Z,MERGED,True,153,126,5,https://github.com/justinemarie,Build BESS in Ansible script,10,[],https://github.com/NetSys/bess/pull/369,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/369#issuecomment-292288468,"The ansible script no longer builds BESS! Fixed -- splits into two files, one for building BESS normally, the other for configuring a vagrant dev environment.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,370,2017-04-06T17:36:13Z,2017-04-10T17:51:31Z,2017-04-14T19:23:50Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Fix batched Free() on non-AVX machines,1,[],https://github.com/NetSys/bess/pull/370,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/370,"Regression from ba8f0a6
(thank you @nrdmao for the report)","Regression from ba8f0a6
(thank you @nrdmao for the report)",True,{}
NetSys/bess,https://github.com/NetSys/bess,370,2017-04-06T17:36:13Z,2017-04-10T17:51:31Z,2017-04-14T19:23:50Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Fix batched Free() on non-AVX machines,1,[],https://github.com/NetSys/bess/pull/370,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/370#issuecomment-292263359,"Regression from ba8f0a6
(thank you @nrdmao for the report)","Codecov Report

Merging #370 into master will increase coverage by 8%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #370    +/-   ##
======================================
+ Coverage      23%    31%    +8%     
======================================
  Files         158    158            
  Lines        7689   7689            
======================================
+ Hits         1797   2408   +611     
+ Misses       5892   5281   -611



Impacted Files
Coverage Δ





core/packet.h
62% <ø> (+5%)
⬆️


core/drivers/unix_socket.cc
1% <0%> (-82%)
⬇️


core/modules/port_out.cc
3% <0%> (-71%)
⬇️


core/modules/port_inc.cc
4% <0%> (-61%)
⬇️


core/port.h
33% <0%> (-54%)
⬇️


core/utils/ether.cc
0% <0%> (-53%)
⬇️


core/modules/port_inc.h
0% <0%> (-50%)
⬇️


core/modules/port_out.h
0% <0%> (-50%)
⬇️


core/port.cc
23% <0%> (-15%)
⬇️


core/modules/random_update.cc
65% <0%> (-5%)
⬇️


... and 32 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6cbf656...03c1830. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,370,2017-04-06T17:36:13Z,2017-04-10T17:51:31Z,2017-04-14T19:23:50Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Fix batched Free() on non-AVX machines,1,[],https://github.com/NetSys/bess/pull/370,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/370#issuecomment-293026942,"Regression from ba8f0a6
(thank you @nrdmao for the report)",🐈,True,{}
NetSys/bess,https://github.com/NetSys/bess,371,2017-04-07T18:51:37Z,2017-04-12T18:55:45Z,2017-04-12T18:55:45Z,MERGED,True,1341,921,31,https://github.com/ddiproietto,Embed leaf task v3,12,[],https://github.com/NetSys/bess/pull/371,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/371,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
I have also implemented (in a separate commit) the tree view for show tc.  Sample output:
<worker 0>
  +-- main                     priority
      +-- rl                   rate_limit          priority: 5         limits: 40.000 Mbps
      |   +-- !leaf_src0:0     leaf
      +-- rest                 round_robin         priority: 100
          +-- 1                weighted_fair
          |   +-- 11           round_robin         share: 5
          |   +-- 12           round_robin         share: 6
          +-- 2                round_robin

Suggestions on how to improve are welcome!","With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
I have also implemented (in a separate commit) the tree view for show tc.  Sample output:
<worker 0>
  +-- main                     priority
      +-- rl                   rate_limit          priority: 5         limits: 40.000 Mbps
      |   +-- !leaf_src0:0     leaf
      +-- rest                 round_robin         priority: 100
          +-- 1                weighted_fair
          |   +-- 11           round_robin         share: 5
          |   +-- 12           round_robin         share: 6
          +-- 2                round_robin

Suggestions on how to improve are welcome!",True,{}
NetSys/bess,https://github.com/NetSys/bess,371,2017-04-07T18:51:37Z,2017-04-12T18:55:45Z,2017-04-12T18:55:45Z,MERGED,True,1341,921,31,https://github.com/ddiproietto,Embed leaf task v3,12,[],https://github.com/NetSys/bess/pull/371,https://github.com/ddiproietto,2,https://github.com/NetSys/bess/pull/371#issuecomment-292659533,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
I have also implemented (in a separate commit) the tree view for show tc.  Sample output:
<worker 0>
  +-- main                     priority
      +-- rl                   rate_limit          priority: 5         limits: 40.000 Mbps
      |   +-- !leaf_src0:0     leaf
      +-- rest                 round_robin         priority: 100
          +-- 1                weighted_fair
          |   +-- 11           round_robin         share: 5
          |   +-- 12           round_robin         share: 6
          +-- 2                round_robin

Suggestions on how to improve are welcome!","I didn't realize that return_with_error() returns Status::OK, so there's no way for the callers of FindTC() to understand if the TC has been found.  Luckily g++-4.8 reported a warning.
I'm pushing a new commit",True,{}
NetSys/bess,https://github.com/NetSys/bess,371,2017-04-07T18:51:37Z,2017-04-12T18:55:45Z,2017-04-12T18:55:45Z,MERGED,True,1341,921,31,https://github.com/ddiproietto,Embed leaf task v3,12,[],https://github.com/NetSys/bess/pull/371,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/371#issuecomment-292659889,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
I have also implemented (in a separate commit) the tree view for show tc.  Sample output:
<worker 0>
  +-- main                     priority
      +-- rl                   rate_limit          priority: 5         limits: 40.000 Mbps
      |   +-- !leaf_src0:0     leaf
      +-- rest                 round_robin         priority: 100
          +-- 1                weighted_fair
          |   +-- 11           round_robin         share: 5
          |   +-- 12           round_robin         share: 6
          +-- 2                round_robin

Suggestions on how to improve are welcome!","Codecov Report

Merging #371 into master will increase coverage by 1%.
The diff coverage is 59%.


@@          Coverage Diff           @@
##           master   #371    +/-   ##
======================================
+ Coverage      24%    25%    +1%     
======================================
  Files         160    158     -2     
  Lines        7737   7878   +141     
======================================
+ Hits         1876   1996   +120     
- Misses       5861   5882    +21



Impacted Files
Coverage Δ





core/debug.cc
8% <0%> (ø)
⬆️


core/utils/extended_priority_queue.h
4% <0%> (+4%)
⬆️


core/worker.h
79% <100%> (-4%)
⬇️


core/traffic_class.cc
55% <45%> (+4%)
⬆️


core/bessctl.cc
32% <58%> (+6%)
⬆️


core/traffic_class.h
74% <65%> (-4%)
⬇️


core/worker.cc
75% <67%> (-3%)
⬇️


core/module.cc
49% <70%> (+3%)
⬆️


core/module.h
69% <70%> (+2%)
⬆️


core/scheduler.h
88% <90%> (+2%)
⬆️


... and 35 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8984460...bd919a4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,371,2017-04-07T18:51:37Z,2017-04-12T18:55:45Z,2017-04-12T18:55:45Z,MERGED,True,1341,921,31,https://github.com/ddiproietto,Embed leaf task v3,12,[],https://github.com/NetSys/bess/pull/371,https://github.com/ddiproietto,4,https://github.com/NetSys/bess/pull/371#issuecomment-293106785,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
I have also implemented (in a separate commit) the tree view for show tc.  Sample output:
<worker 0>
  +-- main                     priority
      +-- rl                   rate_limit          priority: 5         limits: 40.000 Mbps
      |   +-- !leaf_src0:0     leaf
      +-- rest                 round_robin         priority: 100
          +-- 1                weighted_fair
          |   +-- 11           round_robin         share: 5
          |   +-- 12           round_robin         share: 6
          +-- 2                round_robin

Suggestions on how to improve are welcome!",Thanks a lot for the comments!,True,{}
NetSys/bess,https://github.com/NetSys/bess,371,2017-04-07T18:51:37Z,2017-04-12T18:55:45Z,2017-04-12T18:55:45Z,MERGED,True,1341,921,31,https://github.com/ddiproietto,Embed leaf task v3,12,[],https://github.com/NetSys/bess/pull/371,https://github.com/ddiproietto,5,https://github.com/NetSys/bess/pull/371#issuecomment-293366086,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
I have also implemented (in a separate commit) the tree view for show tc.  Sample output:
<worker 0>
  +-- main                     priority
      +-- rl                   rate_limit          priority: 5         limits: 40.000 Mbps
      |   +-- !leaf_src0:0     leaf
      +-- rest                 round_robin         priority: 100
          +-- 1                weighted_fair
          |   +-- 11           round_robin         share: 5
          |   +-- 12           round_robin         share: 6
          +-- 2                round_robin

Suggestions on how to improve are welcome!","These are the results of running traffic_class_bench, before (f249f12) and after(d580cdc4d21a) the refactor:
After the refactor we lose the possibility to run multiple tasks on a single leaf, so we lose the TCLeaf/TCRunTaskOnce benchmark.  Its results should be compared with TCRoundRobin/TCScheduleOnce.
Before:
----------------------------------------------------------------------------------
Benchmark                                           Time           CPU Iterations
----------------------------------------------------------------------------------
TCWeightedFair/TCScheduleOnceCount/4/0             26 ns         26 ns   27161882    37.016M items/s
TCWeightedFair/TCScheduleOnceCount/8/0             27 ns         27 ns   25522986   34.8511M items/s
TCWeightedFair/TCScheduleOnceCount/16/0            29 ns         29 ns   23911187   32.5962M items/s
TCWeightedFair/TCScheduleOnceCount/32/0            31 ns         31 ns   22438633   30.4667M items/s
TCWeightedFair/TCScheduleOnceCount/64/0            34 ns         34 ns   20369406    27.678M items/s
TCWeightedFair/TCScheduleOnceCount/128/0           42 ns         42 ns   16509520   22.4628M items/s
TCWeightedFair/TCScheduleOnceCount/256/0           51 ns         51 ns   13015095   18.7587M items/s
TCWeightedFair/TCScheduleOnceCount/512/0           59 ns         59 ns   11285487   16.2775M items/s
TCWeightedFair/TCScheduleOnceCount/1024/0          68 ns         68 ns    9685476   13.9764M items/s
TCWeightedFair/TCScheduleOnceCount/2048/0          76 ns         76 ns    8674331   12.5198M items/s
TCWeightedFair/TCScheduleOnceCount/4096/0          81 ns         81 ns    8445245   11.8019M items/s
TCWeightedFair/TCScheduleOnceCount/8192/0          87 ns         87 ns    8301092   10.9881M items/s
TCWeightedFair/TCScheduleOnceCount/16384/0        124 ns        124 ns    6167515   7.69309M items/s
TCWeightedFair/TCScheduleOnceCount/32768/0        145 ns        145 ns    5440937    6.5985M items/s
TCWeightedFair/TCScheduleOnceCount/65536/0        142 ns        142 ns    5243198    6.6991M items/s
TCWeightedFair_BigO                              7.79 lgN       7.79 lgN
TCWeightedFair_RMS                                 19 %         19 %
TCWeightedFair/TCScheduleOnceCycle/4/1             29 ns         29 ns   24127392   32.9158M items/s
TCWeightedFair/TCScheduleOnceCycle/8/1             32 ns         32 ns   21705680   29.6339M items/s
TCWeightedFair/TCScheduleOnceCycle/16/1            39 ns         39 ns   18139407   24.7293M items/s
TCWeightedFair/TCScheduleOnceCycle/32/1            48 ns         48 ns   13685969   19.9763M items/s
TCWeightedFair/TCScheduleOnceCycle/64/1            54 ns         54 ns   12488681   17.7202M items/s
TCWeightedFair/TCScheduleOnceCycle/128/1           61 ns         61 ns   10881437   15.5772M items/s
TCWeightedFair/TCScheduleOnceCycle/256/1           68 ns         68 ns    9723510   13.9882M items/s
TCWeightedFair/TCScheduleOnceCycle/512/1           78 ns         78 ns    8674833   12.2925M items/s
TCWeightedFair/TCScheduleOnceCycle/1024/1          89 ns         89 ns    7579622   10.7653M items/s
TCWeightedFair/TCScheduleOnceCycle/2048/1         102 ns        102 ns    6926232   9.34808M items/s
TCWeightedFair/TCScheduleOnceCycle/4096/1         109 ns        109 ns    6233068   8.74974M items/s
TCWeightedFair/TCScheduleOnceCycle/8192/1         125 ns        125 ns    5559447   7.63817M items/s
TCWeightedFair/TCScheduleOnceCycle/16384/1        187 ns        187 ns    3770932   5.10243M items/s
TCWeightedFair/TCScheduleOnceCycle/32768/1        231 ns        231 ns    3091050   4.13422M items/s
TCWeightedFair/TCScheduleOnceCycle/65536/1        289 ns        289 ns    2471269   3.29894M items/s
TCWeightedFair_BigO                             12.16 lgN      12.16 lgN
TCWeightedFair_RMS                                 35 %         35 %
TCRoundRobin/TCScheduleOnce/1                      19 ns         19 ns   37078034   50.6769M items/s
TCRoundRobin/TCScheduleOnce/4                      19 ns         19 ns   36847804   50.7513M items/s
TCRoundRobin/TCScheduleOnce/8                      19 ns         19 ns   36370365    49.717M items/s
TCRoundRobin/TCScheduleOnce/16                     19 ns         19 ns   36757877   50.2725M items/s
TCRoundRobin/TCScheduleOnce/32                     19 ns         19 ns   36771580   50.4955M items/s
TCRoundRobin/TCScheduleOnce/64                     19 ns         19 ns   36937390   50.5279M items/s
TCRoundRobin/TCScheduleOnce/128                    20 ns         20 ns   36117373   48.7172M items/s
TCRoundRobin/TCScheduleOnce/256                    19 ns         19 ns   35935740   49.4276M items/s
TCRoundRobin/TCScheduleOnce/512                    20 ns         20 ns   35415743   48.3292M items/s
TCRoundRobin/TCScheduleOnce/1024                   20 ns         20 ns   35326163   48.3509M items/s
TCRoundRobin/TCScheduleOnce/2048                   20 ns         20 ns   35260106   47.9361M items/s
TCRoundRobin/TCScheduleOnce/4096                   20 ns         20 ns   35846544   48.0754M items/s
TCRoundRobin/TCScheduleOnce/8192                   20 ns         20 ns   35292123   48.3978M items/s
TCRoundRobin/TCScheduleOnce/16384                  25 ns         25 ns   28244831    38.316M items/s
TCRoundRobin/TCScheduleOnce/32768                  28 ns         28 ns   25485603   34.6618M items/s
TCRoundRobin/TCScheduleOnce/65536                  28 ns         28 ns   24752426   33.9328M items/s
TCRoundRobin_BigO                               20.74 (1)      20.74 (1)
TCRoundRobin_RMS                                   15 %         15 %
TCLeaf/TCRunTaskOnce/1                             19 ns         19 ns   37081273   50.7385M items/s
TCLeaf/TCRunTaskOnce/4                             26 ns         26 ns   27302985   148.776M items/s
TCLeaf/TCRunTaskOnce/8                             44 ns         44 ns   16102843   175.347M items/s
TCLeaf/TCRunTaskOnce/16                            66 ns         66 ns   10301169   230.111M items/s
TCLeaf/TCRunTaskOnce/32                           120 ns        120 ns    5796069   255.216M items/s
TCLeaf/TCRunTaskOnce/64                           212 ns        212 ns    3296937   288.551M items/s
TCLeaf/TCRunTaskOnce/128                          395 ns        395 ns    1770811   309.179M items/s
TCLeaf/TCRunTaskOnce/256                          763 ns        763 ns     890952   320.145M items/s
TCLeaf/TCRunTaskOnce/512                         1597 ns       1597 ns     435230   305.794M items/s
TCLeaf/TCRunTaskOnce/1024                        3273 ns       3273 ns     213402   298.379M items/s
TCLeaf/TCRunTaskOnce/2048                        6508 ns       6508 ns     102269   300.123M items/s
TCLeaf/TCRunTaskOnce/4096                       12966 ns      12966 ns      52896   301.265M items/s
TCLeaf/TCRunTaskOnce/8192                       25746 ns      25745 ns      27192   303.453M items/s
TCLeaf/TCRunTaskOnce/16384                      51372 ns      51372 ns      13651   304.152M items/s
TCLeaf/TCRunTaskOnce/32768                     102636 ns     102633 ns       6848   304.484M items/s
TCLeaf/TCRunTaskOnce/65536                     229958 ns     229957 ns       3064    271.79M items/s
TCLeaf_BigO                                      0.22 NlgN       0.22 NlgN
TCLeaf_RMS                                          6 %          6 %


After:
----------------------------------------------------------------------------------
Benchmark                                           Time           CPU Iterations
----------------------------------------------------------------------------------
TCWeightedFair/TCScheduleOnceCount/4/0             23 ns         23 ns   29892111   40.6927M items/s
TCWeightedFair/TCScheduleOnceCount/8/0             25 ns         25 ns   27968308   38.2001M items/s
TCWeightedFair/TCScheduleOnceCount/16/0            27 ns         27 ns   26062292   35.5311M items/s
TCWeightedFair/TCScheduleOnceCount/32/0            29 ns         29 ns   23986816   33.0294M items/s
TCWeightedFair/TCScheduleOnceCount/64/0            31 ns         31 ns   22425569   30.6062M items/s
TCWeightedFair/TCScheduleOnceCount/128/0           35 ns         34 ns   20097630   27.6455M items/s
TCWeightedFair/TCScheduleOnceCount/256/0           47 ns         47 ns   14869223   20.2776M items/s
TCWeightedFair/TCScheduleOnceCount/512/0           54 ns         54 ns   12418570   17.7798M items/s
TCWeightedFair/TCScheduleOnceCount/1024/0          58 ns         58 ns   11654107   16.3586M items/s
TCWeightedFair/TCScheduleOnceCount/2048/0          65 ns         65 ns   10540511    14.679M items/s
TCWeightedFair/TCScheduleOnceCount/4096/0          69 ns         69 ns    9825508   13.9072M items/s
TCWeightedFair/TCScheduleOnceCount/8192/0          70 ns         70 ns    9751264   13.5903M items/s
TCWeightedFair/TCScheduleOnceCount/16384/0         78 ns         78 ns    9261178   12.2278M items/s
TCWeightedFair/TCScheduleOnceCount/32768/0        106 ns        106 ns    7513232   8.96276M items/s
TCWeightedFair/TCScheduleOnceCount/65536/0        110 ns        110 ns    6923088   8.68738M items/s
TCWeightedFair_BigO                              6.11 lgN       6.11 lgN
TCWeightedFair_RMS                                 13 %         13 %
TCWeightedFair/TCScheduleOnceCycle/4/1             25 ns         25 ns   27800708    37.909M items/s
TCWeightedFair/TCScheduleOnceCycle/8/1             30 ns         30 ns   23507936   32.1672M items/s
TCWeightedFair/TCScheduleOnceCycle/16/1            37 ns         37 ns   18705178   25.6303M items/s
TCWeightedFair/TCScheduleOnceCycle/32/1            44 ns         44 ns   15792091   21.4445M items/s
TCWeightedFair/TCScheduleOnceCycle/64/1            51 ns         51 ns   13248440     18.58M items/s
TCWeightedFair/TCScheduleOnceCycle/128/1           59 ns         59 ns   11474649   16.2522M items/s
TCWeightedFair/TCScheduleOnceCycle/256/1           65 ns         65 ns   10404612   14.5876M items/s
TCWeightedFair/TCScheduleOnceCycle/512/1           73 ns         73 ns    9375102   13.1189M items/s
TCWeightedFair/TCScheduleOnceCycle/1024/1          82 ns         82 ns    8208846   11.5788M items/s
TCWeightedFair/TCScheduleOnceCycle/2048/1          94 ns         94 ns    7231423   10.1376M items/s
TCWeightedFair/TCScheduleOnceCycle/4096/1         105 ns        105 ns    6505976   9.12169M items/s
TCWeightedFair/TCScheduleOnceCycle/8192/1         115 ns        115 ns    6056582   8.25834M items/s
TCWeightedFair/TCScheduleOnceCycle/16384/1        141 ns        141 ns    5142767   6.77133M items/s
TCWeightedFair/TCScheduleOnceCycle/32768/1        198 ns        198 ns    3586947   4.81955M items/s
TCWeightedFair/TCScheduleOnceCycle/65536/1        221 ns        221 ns    3260305     4.308M items/s
TCWeightedFair_BigO                             10.37 lgN      10.37 lgN
TCWeightedFair_RMS                                 25 %         25 %
TCRoundRobin/TCScheduleOnce/1                      16 ns         16 ns   42818187   58.6596M items/s
TCRoundRobin/TCScheduleOnce/4                      16 ns         16 ns   42870732   58.7145M items/s
TCRoundRobin/TCScheduleOnce/8                      16 ns         16 ns   42831997   58.7034M items/s
TCRoundRobin/TCScheduleOnce/16                     17 ns         17 ns   42148493   57.7155M items/s
TCRoundRobin/TCScheduleOnce/32                     16 ns         16 ns   42613975   58.1497M items/s
TCRoundRobin/TCScheduleOnce/64                     16 ns         16 ns   42481744   58.3666M items/s
TCRoundRobin/TCScheduleOnce/128                    16 ns         16 ns   42591545   58.3443M items/s
TCRoundRobin/TCScheduleOnce/256                    16 ns         16 ns   42508430   58.3475M items/s
TCRoundRobin/TCScheduleOnce/512                    16 ns         16 ns   42244717    58.456M items/s
TCRoundRobin/TCScheduleOnce/1024                   16 ns         16 ns   42047911    57.905M items/s
TCRoundRobin/TCScheduleOnce/2048                   17 ns         17 ns   41623611   57.4143M items/s
TCRoundRobin/TCScheduleOnce/4096                   17 ns         17 ns   41816284   57.5247M items/s
TCRoundRobin/TCScheduleOnce/8192                   17 ns         17 ns   41495498   57.6489M items/s
TCRoundRobin/TCScheduleOnce/16384                  17 ns         17 ns   40021240   54.6238M items/s
TCRoundRobin/TCScheduleOnce/32768                  19 ns         19 ns   36457546   49.6848M items/s
TCRoundRobin/TCScheduleOnce/65536                  21 ns         21 ns   33132649   45.6203M items/s
TCRoundRobin_BigO                               16.92 (1)      16.92 (1)
TCRoundRobin_RMS                                    7 %          7 %",True,{}
NetSys/bess,https://github.com/NetSys/bess,371,2017-04-07T18:51:37Z,2017-04-12T18:55:45Z,2017-04-12T18:55:45Z,MERGED,True,1341,921,31,https://github.com/ddiproietto,Embed leaf task v3,12,[],https://github.com/NetSys/bess/pull/371,https://github.com/barath,6,https://github.com/NetSys/bess/pull/371#issuecomment-293435332,"With this pull request LeafTrafficClass can only execute a single Task (more details in the last commit message).
I have also implemented (in a separate commit) the tree view for show tc.  Sample output:
<worker 0>
  +-- main                     priority
      +-- rl                   rate_limit          priority: 5         limits: 40.000 Mbps
      |   +-- !leaf_src0:0     leaf
      +-- rest                 round_robin         priority: 100
          +-- 1                weighted_fair
          |   +-- 11           round_robin         share: 5
          |   +-- 12           round_robin         share: 6
          +-- 2                round_robin

Suggestions on how to improve are welcome!",LGTM.  This will require changes to many scripts -- let's coordinate on when to merge.,True,{}
NetSys/bess,https://github.com/NetSys/bess,372,2017-04-07T22:45:11Z,2017-04-10T01:59:09Z,2017-04-14T19:23:51Z,MERGED,True,10,3,2,https://github.com/sangjinhan,Do not access over 6-byte boundary,1,[],https://github.com/NetSys/bess/pull/372,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/372,"This function violates access boundary for mac addresses in char addr[6], setting alarms in ASAN.
static uint64_t l2_addr_to_u64(char *addr) {
  uint64_t *addrp = reinterpret_cast<uint64_t *>(addr);","This function violates access boundary for mac addresses in char addr[6], setting alarms in ASAN.
static uint64_t l2_addr_to_u64(char *addr) {
  uint64_t *addrp = reinterpret_cast<uint64_t *>(addr);",True,{}
NetSys/bess,https://github.com/NetSys/bess,372,2017-04-07T22:45:11Z,2017-04-10T01:59:09Z,2017-04-14T19:23:51Z,MERGED,True,10,3,2,https://github.com/sangjinhan,Do not access over 6-byte boundary,1,[],https://github.com/NetSys/bess/pull/372,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/372#issuecomment-292677458,"This function violates access boundary for mac addresses in char addr[6], setting alarms in ASAN.
static uint64_t l2_addr_to_u64(char *addr) {
  uint64_t *addrp = reinterpret_cast<uint64_t *>(addr);","Codecov Report

Merging #372 into master will increase coverage by 3%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #372    +/-   ##
======================================
+ Coverage      21%    24%    +3%     
======================================
  Files         160    160            
  Lines        7737   7839   +102     
======================================
+ Hits         1639   1859   +220     
+ Misses       6098   5980   -118



Impacted Files
Coverage Δ





core/modules/l2_forward.h
0% <ø> (ø)
⬆️


core/modules/l2_forward.cc
1% <0%> (ø)
⬇️


core/modules/exact_match.h
0% <0%> (-93%)
⬇️


core/modules/exact_match.cc
3% <0%> (-73%)
⬇️


core/utils/cuckoo_map.h
0% <0%> (-44%)
⬇️


core/utils/common.h
41% <0%> (-35%)
⬇️


core/modules/rewrite.cc
59% <0%> (-4%)
⬇️


core/module.h
53% <0%> (-4%)
⬇️


core/module.cc
40% <0%> (-3%)
⬇️


core/modules/drr.h
0% <0%> (ø)
⬆️


... and 22 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update de3d7a5...ccf5c8a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,372,2017-04-07T22:45:11Z,2017-04-10T01:59:09Z,2017-04-14T19:23:51Z,MERGED,True,10,3,2,https://github.com/sangjinhan,Do not access over 6-byte boundary,1,[],https://github.com/NetSys/bess/pull/372,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/372#issuecomment-292832215,"This function violates access boundary for mac addresses in char addr[6], setting alarms in ASAN.
static uint64_t l2_addr_to_u64(char *addr) {
  uint64_t *addrp = reinterpret_cast<uint64_t *>(addr);",,True,{}
NetSys/bess,https://github.com/NetSys/bess,373,2017-04-08T06:27:23Z,2017-04-08T13:37:51Z,2017-04-08T13:39:16Z,MERGED,True,23,18,2,https://github.com/sangjinhan,Fix alloc-free mismatch in DRR module,2,[],https://github.com/NetSys/bess/pull/373,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/373,"In DRR module, there are two places where llring is allocated with a malloc-family function, but freed with C++ delete. This may cause potential memory corruption.
Also ran clang-format on the header file.","In DRR module, there are two places where llring is allocated with a malloc-family function, but freed with C++ delete. This may cause potential memory corruption.
Also ran clang-format on the header file.",True,{}
NetSys/bess,https://github.com/NetSys/bess,373,2017-04-08T06:27:23Z,2017-04-08T13:37:51Z,2017-04-08T13:39:16Z,MERGED,True,23,18,2,https://github.com/sangjinhan,Fix alloc-free mismatch in DRR module,2,[],https://github.com/NetSys/bess/pull/373,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/373#issuecomment-292700321,"In DRR module, there are two places where llring is allocated with a malloc-family function, but freed with C++ delete. This may cause potential memory corruption.
Also ran clang-format on the header file.","Codecov Report

Merging #373 into master will increase coverage by 12%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #373    +/-   ##
======================================
+ Coverage      24%    36%   +12%     
======================================
  Files         160    160            
  Lines        7737   7737            
======================================
+ Hits         1876   2805   +929     
+ Misses       5861   4932   -929



Impacted Files
Coverage Δ





core/modules/drr.cc
2% <0%> (ø)
⬆️


core/modules/drr.h
0% <0%> (ø)
⬆️


core/metadata.cc
67% <0%> (ø)
⬆️


core/worker.cc
79% <0%> (+1%)
⬆️


core/module.cc
49% <0%> (+3%)
⬆️


core/modules/source.cc
49% <0%> (+4%)
⬆️


core/modules/random_update.cc
70% <0%> (+5%)
⬆️


core/pktbatch.h
85% <0%> (+8%)
⬆️


core/bessctl.cc
35% <0%> (+9%)
⬆️


core/module.h
76% <0%> (+9%)
⬆️


... and 28 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8984460...1209abc. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,373,2017-04-08T06:27:23Z,2017-04-08T13:37:51Z,2017-04-08T13:39:16Z,MERGED,True,23,18,2,https://github.com/sangjinhan,Fix alloc-free mismatch in DRR module,2,[],https://github.com/NetSys/bess/pull/373,https://github.com/barath,3,https://github.com/NetSys/bess/pull/373#issuecomment-292718718,"In DRR module, there are two places where llring is allocated with a malloc-family function, but freed with C++ delete. This may cause potential memory corruption.
Also ran clang-format on the header file.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,374,2017-04-10T21:45:30Z,2017-04-11T22:45:48Z,2017-04-14T19:23:45Z,MERGED,True,169,73,21,https://github.com/sangjinhan,Add 32bit build/test to Travis,17,[],https://github.com/NetSys/bess/pull/374,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/374,"This PR contains patches for the Travis build environments. There are a few main changes to note:

Add 32-bit i686 build and test environment to Travis.

32-bit Docket images are added to Docker Hub (with _32 suffices to the tag)
Since Travis only supports x86_64, for the i686 case BESS is cross-built and run.


Consolidate all Vagrant/Travis/Docker related scripts in env/.
Reduce the default amount hugepages for each NUMA node, from 2GB to 1GB

For VMs running on a less beefy machine (e.g., laptops), 4GB for a VM (2GB for hugepages and 2GB for normal memory) might be too much.
On 32-bit machines, it is challenging to reserve 2GB.
The 2GB default was set when BESS was being tested with 8192 containers. Since this configuration is somewhat extreme, 1GB should be enough.
One can still increase the amount of memory with -m option to bessd. E.g., bessctl daemon start -m 2048
Once merged, I will update wiki pages accordingly.


Re-enable clang's Address/Leak/UndefinedBehavior sanitizers. While the travis script builds BESS in a container, SANITIZE env variable was not passed to the container.","This PR contains patches for the Travis build environments. There are a few main changes to note:

Add 32-bit i686 build and test environment to Travis.

32-bit Docket images are added to Docker Hub (with _32 suffices to the tag)
Since Travis only supports x86_64, for the i686 case BESS is cross-built and run.


Consolidate all Vagrant/Travis/Docker related scripts in env/.
Reduce the default amount hugepages for each NUMA node, from 2GB to 1GB

For VMs running on a less beefy machine (e.g., laptops), 4GB for a VM (2GB for hugepages and 2GB for normal memory) might be too much.
On 32-bit machines, it is challenging to reserve 2GB.
The 2GB default was set when BESS was being tested with 8192 containers. Since this configuration is somewhat extreme, 1GB should be enough.
One can still increase the amount of memory with -m option to bessd. E.g., bessctl daemon start -m 2048
Once merged, I will update wiki pages accordingly.


Re-enable clang's Address/Leak/UndefinedBehavior sanitizers. While the travis script builds BESS in a container, SANITIZE env variable was not passed to the container.",True,{}
NetSys/bess,https://github.com/NetSys/bess,374,2017-04-10T21:45:30Z,2017-04-11T22:45:48Z,2017-04-14T19:23:45Z,MERGED,True,169,73,21,https://github.com/sangjinhan,Add 32bit build/test to Travis,17,[],https://github.com/NetSys/bess/pull/374,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/374#issuecomment-293088356,"This PR contains patches for the Travis build environments. There are a few main changes to note:

Add 32-bit i686 build and test environment to Travis.

32-bit Docket images are added to Docker Hub (with _32 suffices to the tag)
Since Travis only supports x86_64, for the i686 case BESS is cross-built and run.


Consolidate all Vagrant/Travis/Docker related scripts in env/.
Reduce the default amount hugepages for each NUMA node, from 2GB to 1GB

For VMs running on a less beefy machine (e.g., laptops), 4GB for a VM (2GB for hugepages and 2GB for normal memory) might be too much.
On 32-bit machines, it is challenging to reserve 2GB.
The 2GB default was set when BESS was being tested with 8192 containers. Since this configuration is somewhat extreme, 1GB should be enough.
One can still increase the amount of memory with -m option to bessd. E.g., bessctl daemon start -m 2048
Once merged, I will update wiki pages accordingly.


Re-enable clang's Address/Leak/UndefinedBehavior sanitizers. While the travis script builds BESS in a container, SANITIZE env variable was not passed to the container.","Codecov Report

Merging #374 into master will increase coverage by <1%.
The diff coverage is 100%.


@@          Coverage Diff           @@
##           master   #374    +/-   ##
======================================
+ Coverage      25%    26%   +<1%     
======================================
  Files         160    160            
  Lines        7748   7736    -12     
======================================
+ Hits         1967   1994    +27     
+ Misses       5781   5742    -39



Impacted Files
Coverage Δ





core/utils/simd.h
100% <ø> (ø)
⬆️


core/dpdk.cc
79% <ø> (+1%)
⬆️


core/utils/checksum.h
0% <ø> (ø)
⬆️


core/opts.cc
79% <100%> (ø)
⬆️


core/packet.cc
39% <100%> (ø)
⬆️


core/modules/generic_encap.cc
2% <0%> (-88%)
⬇️


core/modules/generic_encap.h
0% <0%> (-50%)
⬇️


core/packet.h
38% <0%> (-11%)
⬇️


core/module.h
70% <0%> (-1%)
⬇️


core/metadata.h
60% <0%> (+4%)
⬆️


... and 6 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2f2bf51...eec4bf2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,374,2017-04-10T21:45:30Z,2017-04-11T22:45:48Z,2017-04-14T19:23:45Z,MERGED,True,169,73,21,https://github.com/sangjinhan,Add 32bit build/test to Travis,17,[],https://github.com/NetSys/bess/pull/374,https://github.com/nrdmao,3,https://github.com/NetSys/bess/pull/374#issuecomment-293421383,"This PR contains patches for the Travis build environments. There are a few main changes to note:

Add 32-bit i686 build and test environment to Travis.

32-bit Docket images are added to Docker Hub (with _32 suffices to the tag)
Since Travis only supports x86_64, for the i686 case BESS is cross-built and run.


Consolidate all Vagrant/Travis/Docker related scripts in env/.
Reduce the default amount hugepages for each NUMA node, from 2GB to 1GB

For VMs running on a less beefy machine (e.g., laptops), 4GB for a VM (2GB for hugepages and 2GB for normal memory) might be too much.
On 32-bit machines, it is challenging to reserve 2GB.
The 2GB default was set when BESS was being tested with 8192 containers. Since this configuration is somewhat extreme, 1GB should be enough.
One can still increase the amount of memory with -m option to bessd. E.g., bessctl daemon start -m 2048
Once merged, I will update wiki pages accordingly.


Re-enable clang's Address/Leak/UndefinedBehavior sanitizers. While the travis script builds BESS in a container, SANITIZE env variable was not passed to the container.",Looks good. Thanks Sangjin for doing this!,True,{}
NetSys/bess,https://github.com/NetSys/bess,374,2017-04-10T21:45:30Z,2017-04-11T22:45:48Z,2017-04-14T19:23:45Z,MERGED,True,169,73,21,https://github.com/sangjinhan,Add 32bit build/test to Travis,17,[],https://github.com/NetSys/bess/pull/374,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/374#issuecomment-293422292,"This PR contains patches for the Travis build environments. There are a few main changes to note:

Add 32-bit i686 build and test environment to Travis.

32-bit Docket images are added to Docker Hub (with _32 suffices to the tag)
Since Travis only supports x86_64, for the i686 case BESS is cross-built and run.


Consolidate all Vagrant/Travis/Docker related scripts in env/.
Reduce the default amount hugepages for each NUMA node, from 2GB to 1GB

For VMs running on a less beefy machine (e.g., laptops), 4GB for a VM (2GB for hugepages and 2GB for normal memory) might be too much.
On 32-bit machines, it is challenging to reserve 2GB.
The 2GB default was set when BESS was being tested with 8192 containers. Since this configuration is somewhat extreme, 1GB should be enough.
One can still increase the amount of memory with -m option to bessd. E.g., bessctl daemon start -m 2048
Once merged, I will update wiki pages accordingly.


Re-enable clang's Address/Leak/UndefinedBehavior sanitizers. While the travis script builds BESS in a container, SANITIZE env variable was not passed to the container.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,375,2017-04-10T23:34:42Z,2017-04-13T22:29:39Z,2017-04-14T19:23:46Z,MERGED,True,130,83,3,https://github.com/justinemarie,Make module tests continue even if test has crashed; add more concise,4,[],https://github.com/NetSys/bess/pull/375,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/375,printing.,printing.,True,{}
NetSys/bess,https://github.com/NetSys/bess,375,2017-04-10T23:34:42Z,2017-04-13T22:29:39Z,2017-04-14T19:23:46Z,MERGED,True,130,83,3,https://github.com/justinemarie,Make module tests continue even if test has crashed; add more concise,4,[],https://github.com/NetSys/bess/pull/375,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/375#issuecomment-293114821,printing.,"Codecov Report

Merging #375 into master will increase coverage by 27%.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master   #375     +/-   ##
=======================================
+ Coverage       4%    31%    +27%     
=======================================
  Files         158    158             
  Lines        7877   7877             
=======================================
+ Hits          339   2451   +2112     
+ Misses       7538   5426   -2112



Impacted Files
Coverage Δ





core/drivers/pmd.cc
4% <0%> (+4%)
⬆️


core/utils/extended_priority_queue.h
4% <0%> (+4%)
⬆️


core/drivers/vport.cc
5% <0%> (+5%)
⬆️


core/port.cc
23% <0%> (+12%)
⬆️


core/port.h
35% <0%> (+19%)
⬆️


core/gate.cc
19% <0%> (+19%)
⬆️


core/hooks/track.h
40% <0%> (+20%)
⬆️


core/utils/pcap_handle.cc
21% <0%> (+21%)
⬆️


core/bessd.cc
65% <0%> (+21%)
⬆️


core/modules/round_robin.cc
34% <0%> (+28%)
⬆️


... and 54 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 584aed4...02bbd2f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,375,2017-04-10T23:34:42Z,2017-04-13T22:29:39Z,2017-04-14T19:23:46Z,MERGED,True,130,83,3,https://github.com/justinemarie,Make module tests continue even if test has crashed; add more concise,4,[],https://github.com/NetSys/bess/pull/375,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/375#issuecomment-293368296,printing.,Replaced Sangjin with Melvin since Sangjin is out today.,True,{}
NetSys/bess,https://github.com/NetSys/bess,375,2017-04-10T23:34:42Z,2017-04-13T22:29:39Z,2017-04-14T19:23:46Z,MERGED,True,130,83,3,https://github.com/justinemarie,Make module tests continue even if test has crashed; add more concise,4,[],https://github.com/NetSys/bess/pull/375,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/375#issuecomment-294012136,printing.,I have addressed Melvin's comments.,True,{}
NetSys/bess,https://github.com/NetSys/bess,375,2017-04-10T23:34:42Z,2017-04-13T22:29:39Z,2017-04-14T19:23:46Z,MERGED,True,130,83,3,https://github.com/justinemarie,Make module tests continue even if test has crashed; add more concise,4,[],https://github.com/NetSys/bess/pull/375,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/375#issuecomment-294028214,printing.,Just merged with Daniele's recent commits.,True,{}
NetSys/bess,https://github.com/NetSys/bess,375,2017-04-10T23:34:42Z,2017-04-13T22:29:39Z,2017-04-14T19:23:46Z,MERGED,True,130,83,3,https://github.com/justinemarie,Make module tests continue even if test has crashed; add more concise,4,[],https://github.com/NetSys/bess/pull/375,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/375#issuecomment-294032051,printing.,LGTM. Will merge after travis finishes,True,{}
NetSys/bess,https://github.com/NetSys/bess,375,2017-04-10T23:34:42Z,2017-04-13T22:29:39Z,2017-04-14T19:23:46Z,MERGED,True,130,83,3,https://github.com/justinemarie,Make module tests continue even if test has crashed; add more concise,4,[],https://github.com/NetSys/bess/pull/375,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/375#issuecomment-294032245,printing.,mercy buckets,True,{}
NetSys/bess,https://github.com/NetSys/bess,375,2017-04-10T23:34:42Z,2017-04-13T22:29:39Z,2017-04-14T19:23:46Z,MERGED,True,130,83,3,https://github.com/justinemarie,Make module tests continue even if test has crashed; add more concise,4,[],https://github.com/NetSys/bess/pull/375,https://github.com/melvinw,8,https://github.com/NetSys/bess/pull/375#issuecomment-294038311,printing.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,375,2017-04-10T23:34:42Z,2017-04-13T22:29:39Z,2017-04-14T19:23:46Z,MERGED,True,130,83,3,https://github.com/justinemarie,Make module tests continue even if test has crashed; add more concise,4,[],https://github.com/NetSys/bess/pull/375,https://github.com/justinemarie,9,https://github.com/NetSys/bess/pull/375#issuecomment-294042551,printing.,"RAINBOWCAT
…
On Thu, Apr 13, 2017 at 3:30 PM, Melvin Walls ***@***.***> wrote:
 Thanks!
 [image: cat]
 <https://cloud.githubusercontent.com/assets/158729/25026927/24259d48-205e-11e7-9bec-56f6f467c080.jpg>

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#375 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FgJJZxaQrU9sG9ekR7CX1rWHCrFzks5rvqIPgaJpZM4M5ci2>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,376,2017-04-12T22:20:58Z,2017-04-17T19:09:47Z,2017-04-17T21:50:06Z,MERGED,True,36,6,4,https://github.com/ddiproietto,bessctl: Fix 'command module'.,1,[],https://github.com/NetSys/bess/pull/376,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/376,"'ARG_TYPE' should be handled by get_var_attrs(), otherwise the cli will
expect a literal 'ARG_TYPE'.
Error conditions are handled without killing bessctl.
If run_module_command() is passed a wrong message name it fails instead
of defaulting to EmptyArg (to support EmptyArg we now include it in
module_msg).
'show mclass' now also shows the type of protobuf message required for
each command.
Finally, [CMD_ARGS...] is optional, so we shouldn't fail if it's not
provided.","'ARG_TYPE' should be handled by get_var_attrs(), otherwise the cli will
expect a literal 'ARG_TYPE'.
Error conditions are handled without killing bessctl.
If run_module_command() is passed a wrong message name it fails instead
of defaulting to EmptyArg (to support EmptyArg we now include it in
module_msg).
'show mclass' now also shows the type of protobuf message required for
each command.
Finally, [CMD_ARGS...] is optional, so we shouldn't fail if it's not
provided.",True,{}
NetSys/bess,https://github.com/NetSys/bess,376,2017-04-12T22:20:58Z,2017-04-17T19:09:47Z,2017-04-17T21:50:06Z,MERGED,True,36,6,4,https://github.com/ddiproietto,bessctl: Fix 'command module'.,1,[],https://github.com/NetSys/bess/pull/376,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/376#issuecomment-293723991,"'ARG_TYPE' should be handled by get_var_attrs(), otherwise the cli will
expect a literal 'ARG_TYPE'.
Error conditions are handled without killing bessctl.
If run_module_command() is passed a wrong message name it fails instead
of defaulting to EmptyArg (to support EmptyArg we now include it in
module_msg).
'show mclass' now also shows the type of protobuf message required for
each command.
Finally, [CMD_ARGS...] is optional, so we shouldn't fail if it's not
provided.","Codecov Report

Merging #376 into master will decrease coverage by 1%.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #376   +/-   ##
=====================================
- Coverage      25%    24%   -1%     
=====================================
  Files         158    158           
  Lines        7876   7876           
=====================================
- Hits         2007   1911   -96     
- Misses       5869   5965   +96



Impacted Files
Coverage Δ





core/modules/exact_match.h
0% <0%> (-93%)
⬇️


core/modules/exact_match.cc
3% <0%> (-73%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 66b08a4...12e8142. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,376,2017-04-12T22:20:58Z,2017-04-17T19:09:47Z,2017-04-17T21:50:06Z,MERGED,True,36,6,4,https://github.com/ddiproietto,bessctl: Fix 'command module'.,1,[],https://github.com/NetSys/bess/pull/376,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/376#issuecomment-294562807,"'ARG_TYPE' should be handled by get_var_attrs(), otherwise the cli will
expect a literal 'ARG_TYPE'.
Error conditions are handled without killing bessctl.
If run_module_command() is passed a wrong message name it fails instead
of defaulting to EmptyArg (to support EmptyArg we now include it in
module_msg).
'show mclass' now also shows the type of protobuf message required for
each command.
Finally, [CMD_ARGS...] is optional, so we shouldn't fail if it's not
provided.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,377,2017-04-13T00:48:08Z,2017-04-14T23:10:18Z,2017-04-15T08:10:29Z,MERGED,True,229,145,14,https://github.com/changlan,Unload plugins,7,[],https://github.com/NetSys/bess/pull/377,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/377,"Use static object's constructor and destructor to initialize and destruct a module class.
Check if workers are running before importing/unloading plugins.
Misc. fixes (renaming, comments, etc.)","Use static object's constructor and destructor to initialize and destruct a module class.
Check if workers are running before importing/unloading plugins.
Misc. fixes (renaming, comments, etc.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,377,2017-04-13T00:48:08Z,2017-04-14T23:10:18Z,2017-04-15T08:10:29Z,MERGED,True,229,145,14,https://github.com/changlan,Unload plugins,7,[],https://github.com/NetSys/bess/pull/377,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/377#issuecomment-293746630,"Use static object's constructor and destructor to initialize and destruct a module class.
Check if workers are running before importing/unloading plugins.
Misc. fixes (renaming, comments, etc.)",Not ready yet. Libraries compiled with GCC do not execute destructors upon dlclose().,True,{}
NetSys/bess,https://github.com/NetSys/bess,377,2017-04-13T00:48:08Z,2017-04-14T23:10:18Z,2017-04-15T08:10:29Z,MERGED,True,229,145,14,https://github.com/changlan,Unload plugins,7,[],https://github.com/NetSys/bess/pull/377,https://github.com/barath,3,https://github.com/NetSys/bess/pull/377#issuecomment-293771553,"Use static object's constructor and destructor to initialize and destruct a module class.
Check if workers are running before importing/unloading plugins.
Misc. fixes (renaming, comments, etc.)","Also, not totally sure, but this might need to be rebased due to the TC merge.",True,{}
NetSys/bess,https://github.com/NetSys/bess,377,2017-04-13T00:48:08Z,2017-04-14T23:10:18Z,2017-04-15T08:10:29Z,MERGED,True,229,145,14,https://github.com/changlan,Unload plugins,7,[],https://github.com/NetSys/bess/pull/377,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/377#issuecomment-294070326,"Use static object's constructor and destructor to initialize and destruct a module class.
Check if workers are running before importing/unloading plugins.
Misc. fixes (renaming, comments, etc.)","Codecov Report

Merging #377 into master will decrease coverage by 9%.
The diff coverage is 27%.


@@          Coverage Diff           @@
##           master   #377    +/-   ##
======================================
- Coverage      27%    19%    -9%     
======================================
  Files         158    158            
  Lines        7877   7921    +44     
======================================
- Hits         2156   1479   -677     
- Misses       5721   6442   +721



Impacted Files
Coverage Δ





core/module.cc
37% <100%> (-13%)
⬇️


core/bessctl.cc
17% <4%> (-15%)
⬇️


core/bessd.cc
63% <50%> (-2%)
⬇️


core/main.cc
91% <50%> (ø)
⬆️


core/module.h
59% <60%> (-10%)
⬇️


core/utils/common.h
0% <0%> (-94%)
⬇️


core/modules/wildcard_match.h
0% <0%> (-93%)
⬇️


core/modules/vlan_push.cc
10% <0%> (-90%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-81%)
⬇️


core/modules/rewrite.cc
4% <0%> (-77%)
⬇️


... and 33 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c06af48...6344694. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,377,2017-04-13T00:48:08Z,2017-04-14T23:10:18Z,2017-04-15T08:10:29Z,MERGED,True,229,145,14,https://github.com/changlan,Unload plugins,7,[],https://github.com/NetSys/bess/pull/377,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/377#issuecomment-294252145,"Use static object's constructor and destructor to initialize and destruct a module class.
Check if workers are running before importing/unloading plugins.
Misc. fixes (renaming, comments, etc.)","Is this the issue the -fno-gnu-unique option trying to address? (adding here for future reference) https://www.redhat.com/archives/posix-c++-wg/2009-August/msg00002.html
What the article says ""static class members"" (it seems we don't have static variables in inline functions) are the offending variables which prevents from unloading? These are all I found such variables:

static std::map<std::string, Module *> all_modules_ (class Module)
static std::map<std::string, Port *> all_ports_ (class Port)
static std::unordered_map<std::string, TrafficClass *> all_tcs_ (class TrafficClass)

Ideally module plugins should never have a reference to those symbols... Perhaps we should separate class Module (what plugins implement) from class ModuleWrapper (internally used by the BESS framework) in the long term.",True,{}
NetSys/bess,https://github.com/NetSys/bess,377,2017-04-13T00:48:08Z,2017-04-14T23:10:18Z,2017-04-15T08:10:29Z,MERGED,True,229,145,14,https://github.com/changlan,Unload plugins,7,[],https://github.com/NetSys/bess/pull/377,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/377#issuecomment-294253241,"Use static object's constructor and destructor to initialize and destruct a module class.
Check if workers are running before importing/unloading plugins.
Misc. fixes (renaming, comments, etc.)",Good point. Making an issue so that we can keep track.,True,{}
NetSys/bess,https://github.com/NetSys/bess,377,2017-04-13T00:48:08Z,2017-04-14T23:10:18Z,2017-04-15T08:10:29Z,MERGED,True,229,145,14,https://github.com/changlan,Unload plugins,7,[],https://github.com/NetSys/bess/pull/377,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/377#issuecomment-294253668,"Use static object's constructor and destructor to initialize and destruct a module class.
Check if workers are running before importing/unloading plugins.
Misc. fixes (renaming, comments, etc.)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,378,2017-04-13T19:14:56Z,2017-04-13T20:37:42Z,2017-04-13T20:41:21Z,MERGED,True,3,1,1,https://github.com/ddiproietto,scheduler: Fix destructor of an empty Scheduler.,1,[],https://github.com/NetSys/bess/pull/378,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/378,"Since the previous commit, the scheduler can be empty (root_ == nullptr).
The destructor must handle this case correctly, otherwise bessd will
crash.
The bug can be simply reproduced with:
./bessctl daemon start -- add worker 0 0 -- delete worker 0 -- daemon stop
Reported by Sangjin (thanks!)","Since the previous commit, the scheduler can be empty (root_ == nullptr).
The destructor must handle this case correctly, otherwise bessd will
crash.
The bug can be simply reproduced with:
./bessctl daemon start -- add worker 0 0 -- delete worker 0 -- daemon stop
Reported by Sangjin (thanks!)",True,{}
NetSys/bess,https://github.com/NetSys/bess,378,2017-04-13T19:14:56Z,2017-04-13T20:37:42Z,2017-04-13T20:41:21Z,MERGED,True,3,1,1,https://github.com/ddiproietto,scheduler: Fix destructor of an empty Scheduler.,1,[],https://github.com/NetSys/bess/pull/378,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/378#issuecomment-294008476,"Since the previous commit, the scheduler can be empty (root_ == nullptr).
The destructor must handle this case correctly, otherwise bessd will
crash.
The bug can be simply reproduced with:
./bessctl daemon start -- add worker 0 0 -- delete worker 0 -- daemon stop
Reported by Sangjin (thanks!)","Codecov Report

Merging #378 into master will increase coverage by 2%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #378    +/-   ##
======================================
+ Coverage      25%    28%    +2%     
======================================
  Files         158    158            
  Lines        7876   7877     +1     
======================================
+ Hits         2007   2175   +168     
+ Misses       5869   5702   -167



Impacted Files
Coverage Δ





core/scheduler.h
89% <0%> (+22%)
⬆️


core/utils/random.h
0% <0%> (-100%)
⬇️


core/modules/exact_match.h
0% <0%> (-93%)
⬇️


core/modules/exact_match.cc
3% <0%> (-73%)
⬇️


core/modules/flowgen.cc
1% <0%> (-68%)
⬇️


core/modules/flowgen.h
0% <0%> (-67%)
⬇️


core/pktbatch.h
77% <0%> (-8%)
⬇️


core/worker.h
79% <0%> (-5%)
⬇️


core/module.h
69% <0%> (+1%)
⬆️


core/utils/extended_priority_queue.h
4% <0%> (+4%)
⬆️


... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 66b08a4...ee6d4d4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,378,2017-04-13T19:14:56Z,2017-04-13T20:37:42Z,2017-04-13T20:41:21Z,MERGED,True,3,1,1,https://github.com/ddiproietto,scheduler: Fix destructor of an empty Scheduler.,1,[],https://github.com/NetSys/bess/pull/378,https://github.com/barath,3,https://github.com/NetSys/bess/pull/378#issuecomment-294015911,"Since the previous commit, the scheduler can be empty (root_ == nullptr).
The destructor must handle this case correctly, otherwise bessd will
crash.
The bug can be simply reproduced with:
./bessctl daemon start -- add worker 0 0 -- delete worker 0 -- daemon stop
Reported by Sangjin (thanks!)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,379,2017-04-13T22:35:51Z,2017-04-14T19:22:14Z,2017-04-14T19:23:05Z,MERGED,True,24,24,6,https://github.com/shwang,consistent naming for pb messages,2,[],https://github.com/NetSys/bess/pull/379,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/379,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,379,2017-04-13T22:35:51Z,2017-04-14T19:22:14Z,2017-04-14T19:23:05Z,MERGED,True,24,24,6,https://github.com/shwang,consistent naming for pb messages,2,[],https://github.com/NetSys/bess/pull/379,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/379#issuecomment-294040109,,LGTM. Please add your name to CONTRIBUTORS.md :),True,{}
NetSys/bess,https://github.com/NetSys/bess,379,2017-04-13T22:35:51Z,2017-04-14T19:22:14Z,2017-04-14T19:23:05Z,MERGED,True,24,24,6,https://github.com/shwang,consistent naming for pb messages,2,[],https://github.com/NetSys/bess/pull/379,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/379#issuecomment-294046466,,"Codecov Report

Merging #379 into master will decrease coverage by 3%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #379    +/-   ##
======================================
- Coverage      19%    16%    -3%     
======================================
  Files         158    158            
  Lines        7877   7877            
======================================
- Hits         1506   1291   -215     
- Misses       6371   6586   +215



Impacted Files
Coverage Δ





core/modules/generic_encap.cc
2% <0%> (ø)
⬆️


core/modules/exact_match.cc
3% <0%> (ø)
⬆️


core/modules/wildcard_match.cc
2% <0%> (ø)
⬆️


core/modules/vlan_push.cc
10% <0%> (-90%)
⬇️


core/modules/rewrite.h
0% <0%> (-67%)
⬇️


core/modules/rewrite.cc
4% <0%> (-55%)
⬇️


core/modules/source.h
0% <0%> (-50%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/modules/queue.h
0% <0%> (-50%)
⬇️


core/kmod/llring.h
0% <0%> (-49%)
⬇️


... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d2384e2...1a725e1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,379,2017-04-13T22:35:51Z,2017-04-14T19:22:14Z,2017-04-14T19:23:05Z,MERGED,True,24,24,6,https://github.com/shwang,consistent naming for pb messages,2,[],https://github.com/NetSys/bess/pull/379,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/379#issuecomment-294218899,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,380,2017-04-14T05:51:14Z,2017-04-15T05:37:03Z,2017-08-08T22:13:06Z,MERGED,True,16,17,2,https://github.com/shinae-woo,Recalculate checksum with TTL update,2,[],https://github.com/NetSys/bess/pull/380,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/380,"TTL always be decreased by 1, so remove TODO for customizable parameter.
Change free_batch to drop_batch and forward dropped packets into
output gate 1, so that someone may take the dropped packet later.
(E.g., sending ICMP TTL exceeded in transit messages)","TTL always be decreased by 1, so remove TODO for customizable parameter.
Change free_batch to drop_batch and forward dropped packets into
output gate 1, so that someone may take the dropped packet later.
(E.g., sending ICMP TTL exceeded in transit messages)",True,{}
NetSys/bess,https://github.com/NetSys/bess,380,2017-04-14T05:51:14Z,2017-04-15T05:37:03Z,2017-08-08T22:13:06Z,MERGED,True,16,17,2,https://github.com/shinae-woo,Recalculate checksum with TTL update,2,[],https://github.com/NetSys/bess/pull/380,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/380#issuecomment-294273862,"TTL always be decreased by 1, so remove TODO for customizable parameter.
Change free_batch to drop_batch and forward dropped packets into
output gate 1, so that someone may take the dropped packet later.
(E.g., sending ICMP TTL exceeded in transit messages)","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,381,2017-04-14T23:08:48Z,2017-04-17T23:35:33Z,2017-04-19T01:06:44Z,MERGED,True,5,2,1,https://github.com/justinemarie,"Make tests report that test failed, rather than passed, if outputs don't",1,[],https://github.com/NetSys/bess/pull/381,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/381,match!,match!,True,{}
NetSys/bess,https://github.com/NetSys/bess,381,2017-04-14T23:08:48Z,2017-04-17T23:35:33Z,2017-04-19T01:06:44Z,MERGED,True,5,2,1,https://github.com/justinemarie,"Make tests report that test failed, rather than passed, if outputs don't",1,[],https://github.com/NetSys/bess/pull/381,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/381#issuecomment-294261302,match!,"Codecov Report

Merging #381 into master will decrease coverage by 2%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #381    +/-   ##
======================================
- Coverage      27%    25%    -2%     
======================================
  Files         158    158            
  Lines        7877   8372   +495     
======================================
- Hits         2156   2110    -46     
- Misses       5721   6262   +541



Impacted Files
Coverage Δ





core/modules/wildcard_match.h
0% <0%> (-93%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-81%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


core/utils/common.h
35% <0%> (-59%)
⬇️


core/message.h
22% <0%> (-48%)
⬇️


core/metadata.cc
22% <0%> (-45%)
⬇️


core/utils/cuckoo_map.h
0% <0%> (-44%)
⬇️


core/metadata.h
20% <0%> (-40%)
⬇️


core/modules/rewrite.cc
59% <0%> (-22%)
⬇️


... and 14 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c06af48...807d69b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,381,2017-04-14T23:08:48Z,2017-04-17T23:35:33Z,2017-04-19T01:06:44Z,MERGED,True,5,2,1,https://github.com/justinemarie,"Make tests report that test failed, rather than passed, if outputs don't",1,[],https://github.com/NetSys/bess/pull/381,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/381#issuecomment-294626927,match!,,True,{}
NetSys/bess,https://github.com/NetSys/bess,383,2017-04-14T23:23:25Z,2017-04-19T02:56:36Z,2017-04-19T20:01:07Z,MERGED,True,453,76,22,https://github.com/sangjinhan,Optimize memory copy with bess::utils::Copy(),13,[],https://github.com/NetSys/bess/pull/383,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/383,"This PR introduces bess::utils::Copy(), which is a generic memory copy function. It's faster than memcpy() and DPDK's rte_memcpy(), so it is recommended to use this new function when performance is critical in the datapath code. This PR also replaces memcpy()/rte_memcpy() with the new function in such places.
The function works on both aligned/unaligned buffers. It provides an optional sloppy parameter, which generates slightly faster and significantly smaller code when it is set. The sloppy version may copy additional up to 31 bytes to the end of the destination buffer to boost throughput. Since it differs from the original semantics of memcpy(), the sloppy option is disabled by default.
Performance benchmark
Measured with core/utils/copy_bench.cc on a machine with Xeon E5-2620 v4 @ 2.10GHz. The unit used in the table is Mops/s (thus higher is better). dst and src refer to the misalignment offset of each buffer from a CPU cacheline (64 bytes).



dst
src
size
Copy
CopySloppy
rte_memcpy
memcpy




0
0
4
333.63
333.633
285.97
166.802


0
0
7
310.397
333.63
250.223
166.802


0
0
8
333.632
333.632
285.971
181.964


0
0
14
306.643
333.633
250.203
181.965


46
0
14
288.048
234.535
250.224
181.961


50
0
14
302.559
234.515
250.223
181.965


0
0
18
333.634
333.633
333.632
153.969


46
0
18
333.635
234.645
333.632
153.969


50
0
18
192.081
234.603
166.337
153.971


0
10
31
333.632
333.63
333.632
153.971


0
0
32
333.632
333.632
333.631
166.8


15
19
48
323.82
331.596
285.97
166.802


0
0
48
333.632
326.689
249.901
166.802


2
0
60
333.632
147.066
250.156
166.802


0
0
64
333.632
328.049
249.896
166.797


0
14
64
316.969
332.494
250.223
166.643


0
18
64
319.015
332.578
250.224
166.781


0
0
100
196.842
217.97
134.763
143.515


0
0
128
144.775
218.417
111.021
83.5111


0
0
256
97.8924
132.083
76.984
92.0148


10
47
257
78.1008
89.6216
65.6321
69.9676


0
0
384
79.0841
95.6584
58.8706
80.5193


1
0
384
63.6995
66.5598
54.0979
69.5478


0
16
512
61.7649
75.4347
47.6571
71.4721


0
0
1024
58.2776
60.6538
27.0486
44.2116


0
14
1500
34.5575
34.6593
17.4057
28.5943


0
18
1500
34.6046
34.6435
17.1083
30.5496


0
0
1514
36.0912
40.8488
19.58
33.3589


0
0
1518
35.9363
40.8488
19.5822
33.3601


19
4
2047
24.5783
24.7114
13.5933
21.9958


0
0
4096
15.5164
15.5164
7.35315
11.705","This PR introduces bess::utils::Copy(), which is a generic memory copy function. It's faster than memcpy() and DPDK's rte_memcpy(), so it is recommended to use this new function when performance is critical in the datapath code. This PR also replaces memcpy()/rte_memcpy() with the new function in such places.
The function works on both aligned/unaligned buffers. It provides an optional sloppy parameter, which generates slightly faster and significantly smaller code when it is set. The sloppy version may copy additional up to 31 bytes to the end of the destination buffer to boost throughput. Since it differs from the original semantics of memcpy(), the sloppy option is disabled by default.
Performance benchmark
Measured with core/utils/copy_bench.cc on a machine with Xeon E5-2620 v4 @ 2.10GHz. The unit used in the table is Mops/s (thus higher is better). dst and src refer to the misalignment offset of each buffer from a CPU cacheline (64 bytes).



dst
src
size
Copy
CopySloppy
rte_memcpy
memcpy




0
0
4
333.63
333.633
285.97
166.802


0
0
7
310.397
333.63
250.223
166.802


0
0
8
333.632
333.632
285.971
181.964


0
0
14
306.643
333.633
250.203
181.965


46
0
14
288.048
234.535
250.224
181.961


50
0
14
302.559
234.515
250.223
181.965


0
0
18
333.634
333.633
333.632
153.969


46
0
18
333.635
234.645
333.632
153.969


50
0
18
192.081
234.603
166.337
153.971


0
10
31
333.632
333.63
333.632
153.971


0
0
32
333.632
333.632
333.631
166.8


15
19
48
323.82
331.596
285.97
166.802


0
0
48
333.632
326.689
249.901
166.802


2
0
60
333.632
147.066
250.156
166.802


0
0
64
333.632
328.049
249.896
166.797


0
14
64
316.969
332.494
250.223
166.643


0
18
64
319.015
332.578
250.224
166.781


0
0
100
196.842
217.97
134.763
143.515


0
0
128
144.775
218.417
111.021
83.5111


0
0
256
97.8924
132.083
76.984
92.0148


10
47
257
78.1008
89.6216
65.6321
69.9676


0
0
384
79.0841
95.6584
58.8706
80.5193


1
0
384
63.6995
66.5598
54.0979
69.5478


0
16
512
61.7649
75.4347
47.6571
71.4721


0
0
1024
58.2776
60.6538
27.0486
44.2116


0
14
1500
34.5575
34.6593
17.4057
28.5943


0
18
1500
34.6046
34.6435
17.1083
30.5496


0
0
1514
36.0912
40.8488
19.58
33.3589


0
0
1518
35.9363
40.8488
19.5822
33.3601


19
4
2047
24.5783
24.7114
13.5933
21.9958


0
0
4096
15.5164
15.5164
7.35315
11.705",True,{}
NetSys/bess,https://github.com/NetSys/bess,383,2017-04-14T23:23:25Z,2017-04-19T02:56:36Z,2017-04-19T20:01:07Z,MERGED,True,453,76,22,https://github.com/sangjinhan,Optimize memory copy with bess::utils::Copy(),13,[],https://github.com/NetSys/bess/pull/383,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/383#issuecomment-294254798,"This PR introduces bess::utils::Copy(), which is a generic memory copy function. It's faster than memcpy() and DPDK's rte_memcpy(), so it is recommended to use this new function when performance is critical in the datapath code. This PR also replaces memcpy()/rte_memcpy() with the new function in such places.
The function works on both aligned/unaligned buffers. It provides an optional sloppy parameter, which generates slightly faster and significantly smaller code when it is set. The sloppy version may copy additional up to 31 bytes to the end of the destination buffer to boost throughput. Since it differs from the original semantics of memcpy(), the sloppy option is disabled by default.
Performance benchmark
Measured with core/utils/copy_bench.cc on a machine with Xeon E5-2620 v4 @ 2.10GHz. The unit used in the table is Mops/s (thus higher is better). dst and src refer to the misalignment offset of each buffer from a CPU cacheline (64 bytes).



dst
src
size
Copy
CopySloppy
rte_memcpy
memcpy




0
0
4
333.63
333.633
285.97
166.802


0
0
7
310.397
333.63
250.223
166.802


0
0
8
333.632
333.632
285.971
181.964


0
0
14
306.643
333.633
250.203
181.965


46
0
14
288.048
234.535
250.224
181.961


50
0
14
302.559
234.515
250.223
181.965


0
0
18
333.634
333.633
333.632
153.969


46
0
18
333.635
234.645
333.632
153.969


50
0
18
192.081
234.603
166.337
153.971


0
10
31
333.632
333.63
333.632
153.971


0
0
32
333.632
333.632
333.631
166.8


15
19
48
323.82
331.596
285.97
166.802


0
0
48
333.632
326.689
249.901
166.802


2
0
60
333.632
147.066
250.156
166.802


0
0
64
333.632
328.049
249.896
166.797


0
14
64
316.969
332.494
250.223
166.643


0
18
64
319.015
332.578
250.224
166.781


0
0
100
196.842
217.97
134.763
143.515


0
0
128
144.775
218.417
111.021
83.5111


0
0
256
97.8924
132.083
76.984
92.0148


10
47
257
78.1008
89.6216
65.6321
69.9676


0
0
384
79.0841
95.6584
58.8706
80.5193


1
0
384
63.6995
66.5598
54.0979
69.5478


0
16
512
61.7649
75.4347
47.6571
71.4721


0
0
1024
58.2776
60.6538
27.0486
44.2116


0
14
1500
34.5575
34.6593
17.4057
28.5943


0
18
1500
34.6046
34.6435
17.1083
30.5496


0
0
1514
36.0912
40.8488
19.58
33.3589


0
0
1518
35.9363
40.8488
19.5822
33.3601


19
4
2047
24.5783
24.7114
13.5933
21.9958


0
0
4096
15.5164
15.5164
7.35315
11.705","Codecov Report

Merging #383 into master will decrease coverage by <1%.
The diff coverage is 33%.


@@          Coverage Diff           @@
##           master   #383    +/-   ##
======================================
- Coverage      24%    24%   -<1%     
======================================
  Files         158    160     +2     
  Lines        7908   8051   +143     
======================================
+ Hits         1923   1952    +29     
- Misses       5985   6099   +114



Impacted Files
Coverage Δ





core/port.cc
23% <ø> (ø)
⬆️


core/utils/common.h
35% <ø> (-24%)
⬇️


core/modules/rewrite.h
67% <ø> (ø)
⬆️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


core/modules/exact_match.cc
3% <0%> (ø)
⬆️


core/modules/buffer.cc
5% <0%> (ø)
⬆️


core/pktbatch.h
60% <0%> (-25%)
⬇️


core/utils/ether.cc
0% <0%> (ø)
⬆️


core/modules/generic_encap.cc
2% <0%> (ø)
⬆️


core/drivers/vport.cc
5% <0%> (ø)
⬆️


... and 39 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ee040df...bb3d927. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,383,2017-04-14T23:23:25Z,2017-04-19T02:56:36Z,2017-04-19T20:01:07Z,MERGED,True,453,76,22,https://github.com/sangjinhan,Optimize memory copy with bess::utils::Copy(),13,[],https://github.com/NetSys/bess/pull/383,https://github.com/nrdmao,3,https://github.com/NetSys/bess/pull/383#issuecomment-294258842,"This PR introduces bess::utils::Copy(), which is a generic memory copy function. It's faster than memcpy() and DPDK's rte_memcpy(), so it is recommended to use this new function when performance is critical in the datapath code. This PR also replaces memcpy()/rte_memcpy() with the new function in such places.
The function works on both aligned/unaligned buffers. It provides an optional sloppy parameter, which generates slightly faster and significantly smaller code when it is set. The sloppy version may copy additional up to 31 bytes to the end of the destination buffer to boost throughput. Since it differs from the original semantics of memcpy(), the sloppy option is disabled by default.
Performance benchmark
Measured with core/utils/copy_bench.cc on a machine with Xeon E5-2620 v4 @ 2.10GHz. The unit used in the table is Mops/s (thus higher is better). dst and src refer to the misalignment offset of each buffer from a CPU cacheline (64 bytes).



dst
src
size
Copy
CopySloppy
rte_memcpy
memcpy




0
0
4
333.63
333.633
285.97
166.802


0
0
7
310.397
333.63
250.223
166.802


0
0
8
333.632
333.632
285.971
181.964


0
0
14
306.643
333.633
250.203
181.965


46
0
14
288.048
234.535
250.224
181.961


50
0
14
302.559
234.515
250.223
181.965


0
0
18
333.634
333.633
333.632
153.969


46
0
18
333.635
234.645
333.632
153.969


50
0
18
192.081
234.603
166.337
153.971


0
10
31
333.632
333.63
333.632
153.971


0
0
32
333.632
333.632
333.631
166.8


15
19
48
323.82
331.596
285.97
166.802


0
0
48
333.632
326.689
249.901
166.802


2
0
60
333.632
147.066
250.156
166.802


0
0
64
333.632
328.049
249.896
166.797


0
14
64
316.969
332.494
250.223
166.643


0
18
64
319.015
332.578
250.224
166.781


0
0
100
196.842
217.97
134.763
143.515


0
0
128
144.775
218.417
111.021
83.5111


0
0
256
97.8924
132.083
76.984
92.0148


10
47
257
78.1008
89.6216
65.6321
69.9676


0
0
384
79.0841
95.6584
58.8706
80.5193


1
0
384
63.6995
66.5598
54.0979
69.5478


0
16
512
61.7649
75.4347
47.6571
71.4721


0
0
1024
58.2776
60.6538
27.0486
44.2116


0
14
1500
34.5575
34.6593
17.4057
28.5943


0
18
1500
34.6046
34.6435
17.1083
30.5496


0
0
1514
36.0912
40.8488
19.58
33.3589


0
0
1518
35.9363
40.8488
19.5822
33.3601


19
4
2047
24.5783
24.7114
13.5933
21.9958


0
0
4096
15.5164
15.5164
7.35315
11.705","Some additional potentially interesting test cases:
Copy for L2 broadcast:
src=0 dst=0 size=1514, 1518
Copy for L3 multicast:
src=14, 18 dst=0 size=64, 1500
Copy for L2 encap:
src=0 dst=0, 46, 50 size=14, 18",True,{}
NetSys/bess,https://github.com/NetSys/bess,383,2017-04-14T23:23:25Z,2017-04-19T02:56:36Z,2017-04-19T20:01:07Z,MERGED,True,453,76,22,https://github.com/sangjinhan,Optimize memory copy with bess::utils::Copy(),13,[],https://github.com/NetSys/bess/pull/383,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/383#issuecomment-294270896,"This PR introduces bess::utils::Copy(), which is a generic memory copy function. It's faster than memcpy() and DPDK's rte_memcpy(), so it is recommended to use this new function when performance is critical in the datapath code. This PR also replaces memcpy()/rte_memcpy() with the new function in such places.
The function works on both aligned/unaligned buffers. It provides an optional sloppy parameter, which generates slightly faster and significantly smaller code when it is set. The sloppy version may copy additional up to 31 bytes to the end of the destination buffer to boost throughput. Since it differs from the original semantics of memcpy(), the sloppy option is disabled by default.
Performance benchmark
Measured with core/utils/copy_bench.cc on a machine with Xeon E5-2620 v4 @ 2.10GHz. The unit used in the table is Mops/s (thus higher is better). dst and src refer to the misalignment offset of each buffer from a CPU cacheline (64 bytes).



dst
src
size
Copy
CopySloppy
rte_memcpy
memcpy




0
0
4
333.63
333.633
285.97
166.802


0
0
7
310.397
333.63
250.223
166.802


0
0
8
333.632
333.632
285.971
181.964


0
0
14
306.643
333.633
250.203
181.965


46
0
14
288.048
234.535
250.224
181.961


50
0
14
302.559
234.515
250.223
181.965


0
0
18
333.634
333.633
333.632
153.969


46
0
18
333.635
234.645
333.632
153.969


50
0
18
192.081
234.603
166.337
153.971


0
10
31
333.632
333.63
333.632
153.971


0
0
32
333.632
333.632
333.631
166.8


15
19
48
323.82
331.596
285.97
166.802


0
0
48
333.632
326.689
249.901
166.802


2
0
60
333.632
147.066
250.156
166.802


0
0
64
333.632
328.049
249.896
166.797


0
14
64
316.969
332.494
250.223
166.643


0
18
64
319.015
332.578
250.224
166.781


0
0
100
196.842
217.97
134.763
143.515


0
0
128
144.775
218.417
111.021
83.5111


0
0
256
97.8924
132.083
76.984
92.0148


10
47
257
78.1008
89.6216
65.6321
69.9676


0
0
384
79.0841
95.6584
58.8706
80.5193


1
0
384
63.6995
66.5598
54.0979
69.5478


0
16
512
61.7649
75.4347
47.6571
71.4721


0
0
1024
58.2776
60.6538
27.0486
44.2116


0
14
1500
34.5575
34.6593
17.4057
28.5943


0
18
1500
34.6046
34.6435
17.1083
30.5496


0
0
1514
36.0912
40.8488
19.58
33.3589


0
0
1518
35.9363
40.8488
19.5822
33.3601


19
4
2047
24.5783
24.7114
13.5933
21.9958


0
0
4096
15.5164
15.5164
7.35315
11.705",Good idea. Added those data points to the table above.,True,{}
NetSys/bess,https://github.com/NetSys/bess,383,2017-04-14T23:23:25Z,2017-04-19T02:56:36Z,2017-04-19T20:01:07Z,MERGED,True,453,76,22,https://github.com/sangjinhan,Optimize memory copy with bess::utils::Copy(),13,[],https://github.com/NetSys/bess/pull/383,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/383#issuecomment-295016378,"This PR introduces bess::utils::Copy(), which is a generic memory copy function. It's faster than memcpy() and DPDK's rte_memcpy(), so it is recommended to use this new function when performance is critical in the datapath code. This PR also replaces memcpy()/rte_memcpy() with the new function in such places.
The function works on both aligned/unaligned buffers. It provides an optional sloppy parameter, which generates slightly faster and significantly smaller code when it is set. The sloppy version may copy additional up to 31 bytes to the end of the destination buffer to boost throughput. Since it differs from the original semantics of memcpy(), the sloppy option is disabled by default.
Performance benchmark
Measured with core/utils/copy_bench.cc on a machine with Xeon E5-2620 v4 @ 2.10GHz. The unit used in the table is Mops/s (thus higher is better). dst and src refer to the misalignment offset of each buffer from a CPU cacheline (64 bytes).



dst
src
size
Copy
CopySloppy
rte_memcpy
memcpy




0
0
4
333.63
333.633
285.97
166.802


0
0
7
310.397
333.63
250.223
166.802


0
0
8
333.632
333.632
285.971
181.964


0
0
14
306.643
333.633
250.203
181.965


46
0
14
288.048
234.535
250.224
181.961


50
0
14
302.559
234.515
250.223
181.965


0
0
18
333.634
333.633
333.632
153.969


46
0
18
333.635
234.645
333.632
153.969


50
0
18
192.081
234.603
166.337
153.971


0
10
31
333.632
333.63
333.632
153.971


0
0
32
333.632
333.632
333.631
166.8


15
19
48
323.82
331.596
285.97
166.802


0
0
48
333.632
326.689
249.901
166.802


2
0
60
333.632
147.066
250.156
166.802


0
0
64
333.632
328.049
249.896
166.797


0
14
64
316.969
332.494
250.223
166.643


0
18
64
319.015
332.578
250.224
166.781


0
0
100
196.842
217.97
134.763
143.515


0
0
128
144.775
218.417
111.021
83.5111


0
0
256
97.8924
132.083
76.984
92.0148


10
47
257
78.1008
89.6216
65.6321
69.9676


0
0
384
79.0841
95.6584
58.8706
80.5193


1
0
384
63.6995
66.5598
54.0979
69.5478


0
16
512
61.7649
75.4347
47.6571
71.4721


0
0
1024
58.2776
60.6538
27.0486
44.2116


0
14
1500
34.5575
34.6593
17.4057
28.5943


0
18
1500
34.6046
34.6435
17.1083
30.5496


0
0
1514
36.0912
40.8488
19.58
33.3589


0
0
1518
35.9363
40.8488
19.5822
33.3601


19
4
2047
24.5783
24.7114
13.5933
21.9958


0
0
4096
15.5164
15.5164
7.35315
11.705","I was originally concerned about the binary size, since the new function is always inlined. So I chose replace only memcpy() on data plane.
I added an non-inlined version as well, and updated the files you listed. Now there are two flavors:

CopyInlined(): inlining is forced. For datapath use.
Copy(): inlined only when appropriate. For generic use.",True,{}
NetSys/bess,https://github.com/NetSys/bess,383,2017-04-14T23:23:25Z,2017-04-19T02:56:36Z,2017-04-19T20:01:07Z,MERGED,True,453,76,22,https://github.com/sangjinhan,Optimize memory copy with bess::utils::Copy(),13,[],https://github.com/NetSys/bess/pull/383,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/383#issuecomment-295017258,"This PR introduces bess::utils::Copy(), which is a generic memory copy function. It's faster than memcpy() and DPDK's rte_memcpy(), so it is recommended to use this new function when performance is critical in the datapath code. This PR also replaces memcpy()/rte_memcpy() with the new function in such places.
The function works on both aligned/unaligned buffers. It provides an optional sloppy parameter, which generates slightly faster and significantly smaller code when it is set. The sloppy version may copy additional up to 31 bytes to the end of the destination buffer to boost throughput. Since it differs from the original semantics of memcpy(), the sloppy option is disabled by default.
Performance benchmark
Measured with core/utils/copy_bench.cc on a machine with Xeon E5-2620 v4 @ 2.10GHz. The unit used in the table is Mops/s (thus higher is better). dst and src refer to the misalignment offset of each buffer from a CPU cacheline (64 bytes).



dst
src
size
Copy
CopySloppy
rte_memcpy
memcpy




0
0
4
333.63
333.633
285.97
166.802


0
0
7
310.397
333.63
250.223
166.802


0
0
8
333.632
333.632
285.971
181.964


0
0
14
306.643
333.633
250.203
181.965


46
0
14
288.048
234.535
250.224
181.961


50
0
14
302.559
234.515
250.223
181.965


0
0
18
333.634
333.633
333.632
153.969


46
0
18
333.635
234.645
333.632
153.969


50
0
18
192.081
234.603
166.337
153.971


0
10
31
333.632
333.63
333.632
153.971


0
0
32
333.632
333.632
333.631
166.8


15
19
48
323.82
331.596
285.97
166.802


0
0
48
333.632
326.689
249.901
166.802


2
0
60
333.632
147.066
250.156
166.802


0
0
64
333.632
328.049
249.896
166.797


0
14
64
316.969
332.494
250.223
166.643


0
18
64
319.015
332.578
250.224
166.781


0
0
100
196.842
217.97
134.763
143.515


0
0
128
144.775
218.417
111.021
83.5111


0
0
256
97.8924
132.083
76.984
92.0148


10
47
257
78.1008
89.6216
65.6321
69.9676


0
0
384
79.0841
95.6584
58.8706
80.5193


1
0
384
63.6995
66.5598
54.0979
69.5478


0
16
512
61.7649
75.4347
47.6571
71.4721


0
0
1024
58.2776
60.6538
27.0486
44.2116


0
14
1500
34.5575
34.6593
17.4057
28.5943


0
18
1500
34.6046
34.6435
17.1083
30.5496


0
0
1514
36.0912
40.8488
19.58
33.3589


0
0
1518
35.9363
40.8488
19.5822
33.3601


19
4
2047
24.5783
24.7114
13.5933
21.9958


0
0
4096
15.5164
15.5164
7.35315
11.705",Rebased to master to resolve a conflict.,True,{}
NetSys/bess,https://github.com/NetSys/bess,383,2017-04-14T23:23:25Z,2017-04-19T02:56:36Z,2017-04-19T20:01:07Z,MERGED,True,453,76,22,https://github.com/sangjinhan,Optimize memory copy with bess::utils::Copy(),13,[],https://github.com/NetSys/bess/pull/383,https://github.com/apanda,7,https://github.com/NetSys/bess/pull/383#issuecomment-295050242,"This PR introduces bess::utils::Copy(), which is a generic memory copy function. It's faster than memcpy() and DPDK's rte_memcpy(), so it is recommended to use this new function when performance is critical in the datapath code. This PR also replaces memcpy()/rte_memcpy() with the new function in such places.
The function works on both aligned/unaligned buffers. It provides an optional sloppy parameter, which generates slightly faster and significantly smaller code when it is set. The sloppy version may copy additional up to 31 bytes to the end of the destination buffer to boost throughput. Since it differs from the original semantics of memcpy(), the sloppy option is disabled by default.
Performance benchmark
Measured with core/utils/copy_bench.cc on a machine with Xeon E5-2620 v4 @ 2.10GHz. The unit used in the table is Mops/s (thus higher is better). dst and src refer to the misalignment offset of each buffer from a CPU cacheline (64 bytes).



dst
src
size
Copy
CopySloppy
rte_memcpy
memcpy




0
0
4
333.63
333.633
285.97
166.802


0
0
7
310.397
333.63
250.223
166.802


0
0
8
333.632
333.632
285.971
181.964


0
0
14
306.643
333.633
250.203
181.965


46
0
14
288.048
234.535
250.224
181.961


50
0
14
302.559
234.515
250.223
181.965


0
0
18
333.634
333.633
333.632
153.969


46
0
18
333.635
234.645
333.632
153.969


50
0
18
192.081
234.603
166.337
153.971


0
10
31
333.632
333.63
333.632
153.971


0
0
32
333.632
333.632
333.631
166.8


15
19
48
323.82
331.596
285.97
166.802


0
0
48
333.632
326.689
249.901
166.802


2
0
60
333.632
147.066
250.156
166.802


0
0
64
333.632
328.049
249.896
166.797


0
14
64
316.969
332.494
250.223
166.643


0
18
64
319.015
332.578
250.224
166.781


0
0
100
196.842
217.97
134.763
143.515


0
0
128
144.775
218.417
111.021
83.5111


0
0
256
97.8924
132.083
76.984
92.0148


10
47
257
78.1008
89.6216
65.6321
69.9676


0
0
384
79.0841
95.6584
58.8706
80.5193


1
0
384
63.6995
66.5598
54.0979
69.5478


0
16
512
61.7649
75.4347
47.6571
71.4721


0
0
1024
58.2776
60.6538
27.0486
44.2116


0
14
1500
34.5575
34.6593
17.4057
28.5943


0
18
1500
34.6046
34.6435
17.1083
30.5496


0
0
1514
36.0912
40.8488
19.58
33.3589


0
0
1518
35.9363
40.8488
19.5822
33.3601


19
4
2047
24.5783
24.7114
13.5933
21.9958


0
0
4096
15.5164
15.5164
7.35315
11.705",Merged,True,{}
NetSys/bess,https://github.com/NetSys/bess,384,2017-04-15T05:49:48Z,2017-04-15T23:23:42Z,2017-08-08T22:13:10Z,MERGED,True,35,35,14,https://github.com/shinae-woo,Replace environment variable names in .bess files,1,[],https://github.com/NetSys/bess/pull/384,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/384,"Do not use SN_*, but use BESS_*","Do not use SN_*, but use BESS_*",True,{}
NetSys/bess,https://github.com/NetSys/bess,384,2017-04-15T05:49:48Z,2017-04-15T23:23:42Z,2017-08-08T22:13:10Z,MERGED,True,35,35,14,https://github.com/shinae-woo,Replace environment variable names in .bess files,1,[],https://github.com/NetSys/bess/pull/384,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/384#issuecomment-294275764,"Do not use SN_*, but use BESS_*","Codecov Report

Merging #384 into master will increase coverage by 5%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #384    +/-   ##
======================================
+ Coverage      21%    26%    +5%     
======================================
  Files         158    158            
  Lines        7908   7908            
======================================
+ Hits         1674   2048   +374     
+ Misses       6234   5860   -374



Impacted Files
Coverage Δ





core/utils/random.h
0% <0%> (-100%)
⬇️


core/modules/flowgen.cc
1% <0%> (-68%)
⬇️


core/modules/flowgen.h
0% <0%> (-67%)
⬇️


core/traffic_class.cc
28% <0%> (-27%)
⬇️


core/traffic_class.h
58% <0%> (-16%)
⬇️


core/scheduler.h
81% <0%> (-5%)
⬇️


core/utils/extended_priority_queue.h
0% <0%> (-4%)
⬇️


core/bessctl.cc
27% <0%> (-4%)
⬇️


core/worker.h
84% <0%> (ø)
⬆️


core/gate.h
52% <0%> (+5%)
⬆️


... and 24 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9090be5...cd50bad. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,384,2017-04-15T05:49:48Z,2017-04-15T23:23:42Z,2017-08-08T22:13:10Z,MERGED,True,35,35,14,https://github.com/shinae-woo,Replace environment variable names in .bess files,1,[],https://github.com/NetSys/bess/pull/384,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/384#issuecomment-294323598,"Do not use SN_*, but use BESS_*",This is great. Thank you for the clean-up work!,True,{}
NetSys/bess,https://github.com/NetSys/bess,385,2017-04-15T23:14:14Z,2017-04-24T02:14:22Z,2017-04-25T05:48:05Z,MERGED,True,32,19,12,https://github.com/sangjinhan,Avoid undefined bit shift operations,4,[],https://github.com/NetSys/bess/pull/385,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/385,"This PR fixes subtle bugs caused by undefined bit shift operations. For example in the following code from core/modules/exact_match.cc
if (field.mask() == 0) {
    /* by default all bits are considered */
    f->mask = ((uint64_t)1 << (f->size * 8)) - 1;

The code behavior is unknown when f->size == 8, since 1ull << 64 is an undefined operation in C++. On pre-Haswell machines the code works as intended (f->mask becomes 0b111111...111). However, on Haswell or later f->mask results in 0b000000...000. This difference comes from the use of new bit instructions (BMI) on newer processors. As a result, the ExactMatch module does not work correctly with 8-byte fields on some machines.","This PR fixes subtle bugs caused by undefined bit shift operations. For example in the following code from core/modules/exact_match.cc
if (field.mask() == 0) {
    /* by default all bits are considered */
    f->mask = ((uint64_t)1 << (f->size * 8)) - 1;

The code behavior is unknown when f->size == 8, since 1ull << 64 is an undefined operation in C++. On pre-Haswell machines the code works as intended (f->mask becomes 0b111111...111). However, on Haswell or later f->mask results in 0b000000...000. This difference comes from the use of new bit instructions (BMI) on newer processors. As a result, the ExactMatch module does not work correctly with 8-byte fields on some machines.",True,{}
NetSys/bess,https://github.com/NetSys/bess,385,2017-04-15T23:14:14Z,2017-04-24T02:14:22Z,2017-04-25T05:48:05Z,MERGED,True,32,19,12,https://github.com/sangjinhan,Avoid undefined bit shift operations,4,[],https://github.com/NetSys/bess/pull/385,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/385#issuecomment-294323265,"This PR fixes subtle bugs caused by undefined bit shift operations. For example in the following code from core/modules/exact_match.cc
if (field.mask() == 0) {
    /* by default all bits are considered */
    f->mask = ((uint64_t)1 << (f->size * 8)) - 1;

The code behavior is unknown when f->size == 8, since 1ull << 64 is an undefined operation in C++. On pre-Haswell machines the code works as intended (f->mask becomes 0b111111...111). However, on Haswell or later f->mask results in 0b000000...000. This difference comes from the use of new bit instructions (BMI) on newer processors. As a result, the ExactMatch module does not work correctly with 8-byte fields on some machines.","Codecov Report

Merging #385 into master will decrease coverage by <1%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #385    +/-   ##
======================================
- Coverage      21%    21%   -<1%     
======================================
  Files         158    158            
  Lines        7908   7914     +6     
======================================
  Hits         1674   1674            
- Misses       6234   6240     +6



Impacted Files
Coverage Δ





core/modules/url_filter.cc
19% <ø> (ø)
⬆️


core/modules/dump.cc
11% <ø> (ø)
⬆️


core/modules/nat.h
0% <ø> (ø)
⬆️


core/modules/ip_lookup.cc
4% <0%> (ø)
⬆️


core/modules/measure.cc
5% <0%> (ø)
⬆️


core/modules/hash_lb.cc
4% <0%> (ø)
⬆️


core/modules/update.cc
5% <0%> (ø)
⬆️


core/modules/exact_match.cc
3% <0%> (ø)
⬇️


core/utils/ip.cc
0% <0%> (ø)
⬆️


core/modules/l2_forward.cc
1% <0%> (ø)
⬆️


... and 4 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9090be5...bf4c523. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,385,2017-04-15T23:14:14Z,2017-04-24T02:14:22Z,2017-04-25T05:48:05Z,MERGED,True,32,19,12,https://github.com/sangjinhan,Avoid undefined bit shift operations,4,[],https://github.com/NetSys/bess/pull/385,https://github.com/barath,3,https://github.com/NetSys/bess/pull/385#issuecomment-294349452,"This PR fixes subtle bugs caused by undefined bit shift operations. For example in the following code from core/modules/exact_match.cc
if (field.mask() == 0) {
    /* by default all bits are considered */
    f->mask = ((uint64_t)1 << (f->size * 8)) - 1;

The code behavior is unknown when f->size == 8, since 1ull << 64 is an undefined operation in C++. On pre-Haswell machines the code works as intended (f->mask becomes 0b111111...111). However, on Haswell or later f->mask results in 0b000000...000. This difference comes from the use of new bit instructions (BMI) on newer processors. As a result, the ExactMatch module does not work correctly with 8-byte fields on some machines.",Is there any way to add a unit test for this?,True,{}
NetSys/bess,https://github.com/NetSys/bess,385,2017-04-15T23:14:14Z,2017-04-24T02:14:22Z,2017-04-25T05:48:05Z,MERGED,True,32,19,12,https://github.com/sangjinhan,Avoid undefined bit shift operations,4,[],https://github.com/NetSys/bess/pull/385,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/385#issuecomment-295023527,"This PR fixes subtle bugs caused by undefined bit shift operations. For example in the following code from core/modules/exact_match.cc
if (field.mask() == 0) {
    /* by default all bits are considered */
    f->mask = ((uint64_t)1 << (f->size * 8)) - 1;

The code behavior is unknown when f->size == 8, since 1ull << 64 is an undefined operation in C++. On pre-Haswell machines the code works as intended (f->mask becomes 0b111111...111). However, on Haswell or later f->mask results in 0b000000...000. This difference comes from the use of new bit instructions (BMI) on newer processors. As a result, the ExactMatch module does not work correctly with 8-byte fields on some machines.","There would be no general way to prevent future misuse of shift operations. Modules could be tested in integration tests, but let's do that in a separate PR.",True,{}
NetSys/bess,https://github.com/NetSys/bess,385,2017-04-15T23:14:14Z,2017-04-24T02:14:22Z,2017-04-25T05:48:05Z,MERGED,True,32,19,12,https://github.com/sangjinhan,Avoid undefined bit shift operations,4,[],https://github.com/NetSys/bess/pull/385,https://github.com/barath,5,https://github.com/NetSys/bess/pull/385#issuecomment-296509311,"This PR fixes subtle bugs caused by undefined bit shift operations. For example in the following code from core/modules/exact_match.cc
if (field.mask() == 0) {
    /* by default all bits are considered */
    f->mask = ((uint64_t)1 << (f->size * 8)) - 1;

The code behavior is unknown when f->size == 8, since 1ull << 64 is an undefined operation in C++. On pre-Haswell machines the code works as intended (f->mask becomes 0b111111...111). However, on Haswell or later f->mask results in 0b000000...000. This difference comes from the use of new bit instructions (BMI) on newer processors. As a result, the ExactMatch module does not work correctly with 8-byte fields on some machines.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,386,2017-04-15T23:33:19Z,2017-04-20T20:17:10Z,2017-04-20T20:17:41Z,MERGED,True,70,34,1,https://github.com/sangjinhan,"Add alignof() info for ""bessd -t""",1,[],https://github.com/NetSys/bess/pull/386,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/386,also add max_align_t to the type list....,also add max_align_t to the type list....,True,{}
NetSys/bess,https://github.com/NetSys/bess,386,2017-04-15T23:33:19Z,2017-04-20T20:17:10Z,2017-04-20T20:17:41Z,MERGED,True,70,34,1,https://github.com/sangjinhan,"Add alignof() info for ""bessd -t""",1,[],https://github.com/NetSys/bess/pull/386,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/386#issuecomment-294323906,also add max_align_t to the type list....,"Codecov Report

Merging #386 into master will decrease coverage by 22%.
The diff coverage is 0%.


@@           Coverage Diff           @@
##           master   #386     +/-   ##
=======================================
- Coverage      26%     4%    -22%     
=======================================
  Files         158     55    -103     
  Lines        7908   4155   -3753     
=======================================
- Hits         2048    178   -1870     
+ Misses       5860   3977   -1883



Impacted Files
Coverage Δ





core/debug.cc
7% <0%> (-1%)
⬇️


core/utils/pcap_handle.h
0% <0%> (-100%)
⬇️


core/drivers/pcap.h
0% <0%> (-100%)
⬇️


core/drivers/unix_socket.h
0% <0%> (-100%)
⬇️


core/drivers/vport_zc.h
0% <0%> (-100%)
⬇️


core/utils/simd.h
0% <0%> (-100%)
⬇️


core/drivers/vport.h
0% <0%> (-100%)
⬇️


core/message.cc
0% <0%> (-91%)
⬇️


core/packet_avx.h
0% <0%> (-88%)
⬇️


core/worker.h
0% <0%> (-84%)
⬇️


... and 134 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 51920c3...14c25fb. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,386,2017-04-15T23:33:19Z,2017-04-20T20:17:10Z,2017-04-20T20:17:41Z,MERGED,True,70,34,1,https://github.com/sangjinhan,"Add alignof() info for ""bessd -t""",1,[],https://github.com/NetSys/bess/pull/386,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/386#issuecomment-294323907,also add max_align_t to the type list....,"Codecov Report

Merging #386 into master will increase coverage by 1%.
The diff coverage is 0%.


@@          Coverage Diff          @@
##           master   #386   +/-   ##
=====================================
+ Coverage      21%    22%   +1%     
=====================================
  Files         158    158           
  Lines        7908   7924   +16     
=====================================
+ Hits         1674   1771   +97     
+ Misses       6234   6153   -81



Impacted Files
Coverage Δ





core/debug.cc
7% <0%> (-1%)
⬇️


core/module.cc
34% <0%> (ø)
⬆️


core/module.h
53% <0%> (+1%)
⬆️


core/packet.h
53% <0%> (+28%)
⬆️


core/modules/vlan_push.h
50% <0%> (+50%)
⬆️


core/modules/rewrite.cc
59% <0%> (+55%)
⬆️


core/modules/rewrite.h
67% <0%> (+67%)
⬆️


core/modules/vlan_push.cc
100% <0%> (+90%)
⬆️


core/modules/vlan_pop.cc
100% <0%> (+93%)
⬆️


core/modules/vlan_pop.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 51920c3...14c25fb. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,386,2017-04-15T23:33:19Z,2017-04-20T20:17:10Z,2017-04-20T20:17:41Z,MERGED,True,70,34,1,https://github.com/sangjinhan,"Add alignof() info for ""bessd -t""",1,[],https://github.com/NetSys/bess/pull/386,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/386#issuecomment-295024194,also add max_align_t to the type list....,"Let me not add comments there; those functions are self explanatory, and never meant to be used anywhere else other than the only current user: bessd -t.",True,{}
NetSys/bess,https://github.com/NetSys/bess,386,2017-04-15T23:33:19Z,2017-04-20T20:17:10Z,2017-04-20T20:17:41Z,MERGED,True,70,34,1,https://github.com/sangjinhan,"Add alignof() info for ""bessd -t""",1,[],https://github.com/NetSys/bess/pull/386,https://github.com/changlan,5,https://github.com/NetSys/bess/pull/386#issuecomment-295890079,also add max_align_t to the type list....,,True,{}
NetSys/bess,https://github.com/NetSys/bess,387,2017-04-16T01:22:36Z,2017-04-17T22:27:56Z,2017-04-17T23:23:11Z,MERGED,True,23,26,4,https://github.com/sangjinhan,Increase max # of worker threads: 4 -> 64,4,[],https://github.com/NetSys/bess/pull/387,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/387,The hardcoded limit of 4 CPU cores may not be enough for some use cases...,The hardcoded limit of 4 CPU cores may not be enough for some use cases...,True,{}
NetSys/bess,https://github.com/NetSys/bess,387,2017-04-16T01:22:36Z,2017-04-17T22:27:56Z,2017-04-17T23:23:11Z,MERGED,True,23,26,4,https://github.com/sangjinhan,Increase max # of worker threads: 4 -> 64,4,[],https://github.com/NetSys/bess/pull/387,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/387#issuecomment-294327491,The hardcoded limit of 4 CPU cores may not be enough for some use cases...,"Codecov Report

Merging #387 into master will increase coverage by 8%.
The diff coverage is 60%.


@@          Coverage Diff           @@
##           master   #387    +/-   ##
======================================
+ Coverage      21%    29%    +8%     
======================================
  Files         158    158            
  Lines        7908   7902     -6     
======================================
+ Hits         1674   2268   +594     
+ Misses       6234   5634   -600



Impacted Files
Coverage Δ





core/worker.h
84% <ø> (ø)
⬆️


core/bessctl.cc
38% <40%> (+7%)
⬆️


core/worker.cc
75% <70%> (ø)
⬆️


core/utils/checksum.h
0% <0%> (ø)
⬆️


core/modules/update_ttl.cc
8% <0%> (+1%)
⬆️


core/gate.h
52% <0%> (+5%)
⬆️


core/module.cc
40% <0%> (+6%)
⬆️


core/module.h
66% <0%> (+13%)
⬆️


core/port.cc
38% <0%> (+15%)
⬆️


... and 19 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 51920c3...dce1b49. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,387,2017-04-16T01:22:36Z,2017-04-17T22:27:56Z,2017-04-17T23:23:11Z,MERGED,True,23,26,4,https://github.com/sangjinhan,Increase max # of worker threads: 4 -> 64,4,[],https://github.com/NetSys/bess/pull/387,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/387#issuecomment-294327492,The hardcoded limit of 4 CPU cores may not be enough for some use cases...,"Codecov Report

Merging #387 into master will increase coverage by 8%.
The diff coverage is 60%.


@@          Coverage Diff           @@
##           master   #387    +/-   ##
======================================
+ Coverage      21%    29%    +8%     
======================================
  Files         158    158            
  Lines        7908   7902     -6     
======================================
+ Hits         1674   2268   +594     
+ Misses       6234   5634   -600



Impacted Files
Coverage Δ





core/worker.h
84% <ø> (ø)
⬆️


core/bessctl.cc
38% <40%> (+7%)
⬆️


core/worker.cc
75% <70%> (ø)
⬆️


core/utils/checksum.h
0% <0%> (ø)
⬆️


core/modules/update_ttl.cc
8% <0%> (+1%)
⬆️


core/gate.h
52% <0%> (+5%)
⬆️


core/module.cc
40% <0%> (+6%)
⬆️


core/module.h
66% <0%> (+13%)
⬆️


core/port.cc
38% <0%> (+15%)
⬆️


... and 19 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 51920c3...dce1b49. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,387,2017-04-16T01:22:36Z,2017-04-17T22:27:56Z,2017-04-17T23:23:11Z,MERGED,True,23,26,4,https://github.com/sangjinhan,Increase max # of worker threads: 4 -> 64,4,[],https://github.com/NetSys/bess/pull/387,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/387#issuecomment-294613692,The hardcoded limit of 4 CPU cores may not be enough for some use cases...,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,391,2017-04-17T19:06:41Z,2017-04-19T01:05:42Z,2017-04-19T01:06:25Z,MERGED,True,49,0,7,https://github.com/changlan,Add command `show plugin`,1,[],https://github.com/NetSys/bess/pull/391,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/391,"which shows all imported plugins:
localhost:10514 $ show plugin
/bess/core/modules/vlan_push.so
/bess/core/modules/vxlan_encap.so
/bess/core/modules/vxlan_decap.so
/bess/core/modules/drr.so
/bess/core/modules/measure.so
/bess/core/modules/split.so
/bess/core/modules/bypass.so
/bess/core/modules/update_ttl.so
/bess/core/modules/url_filter.so
/bess/core/modules/acl.so
/bess/core/modules/vlan_split.so
/bess/core/modules/generic_decap.so
/bess/core/modules/wildcard_match.so
/bess/core/modules/ip_lookup.so
/bess/core/modules/rewrite.so
/bess/core/modules/random_update.so
/bess/core/modules/update.so
/bess/core/modules/sink.so
/bess/core/modules/port_out.so
/bess/core/modules/queue.so
/bess/core/modules/vlan_pop.so
/bess/core/modules/random_drop.so
/bess/core/modules/set_metadata.so
/bess/core/modules/macswap.so
/bess/core/modules/source.so
/bess/core/modules/flowgen.so
/bess/core/modules/timestamp.so
/bess/core/modules/buffer.so
/bess/core/modules/ether_encap.so
/bess/core/modules/exact_match.so
/bess/core/modules/generic_encap.so
/bess/core/modules/hash_lb.so
/bess/core/modules/replicate.so
/bess/core/modules/port_inc.so
/bess/core/modules/ip_checksum.so
/bess/core/modules/ip_encap.so
/bess/core/modules/ipswap.so
/bess/core/modules/l2_forward.so
/bess/core/modules/round_robin.so
/bess/core/modules/mttest.so
/bess/core/modules/merge.so
/bess/core/modules/dump.so
/bess/core/modules/noop.so
/bess/core/modules/queue_inc.so
/bess/core/modules/queue_out.so","which shows all imported plugins:
localhost:10514 $ show plugin
/bess/core/modules/vlan_push.so
/bess/core/modules/vxlan_encap.so
/bess/core/modules/vxlan_decap.so
/bess/core/modules/drr.so
/bess/core/modules/measure.so
/bess/core/modules/split.so
/bess/core/modules/bypass.so
/bess/core/modules/update_ttl.so
/bess/core/modules/url_filter.so
/bess/core/modules/acl.so
/bess/core/modules/vlan_split.so
/bess/core/modules/generic_decap.so
/bess/core/modules/wildcard_match.so
/bess/core/modules/ip_lookup.so
/bess/core/modules/rewrite.so
/bess/core/modules/random_update.so
/bess/core/modules/update.so
/bess/core/modules/sink.so
/bess/core/modules/port_out.so
/bess/core/modules/queue.so
/bess/core/modules/vlan_pop.so
/bess/core/modules/random_drop.so
/bess/core/modules/set_metadata.so
/bess/core/modules/macswap.so
/bess/core/modules/source.so
/bess/core/modules/flowgen.so
/bess/core/modules/timestamp.so
/bess/core/modules/buffer.so
/bess/core/modules/ether_encap.so
/bess/core/modules/exact_match.so
/bess/core/modules/generic_encap.so
/bess/core/modules/hash_lb.so
/bess/core/modules/replicate.so
/bess/core/modules/port_inc.so
/bess/core/modules/ip_checksum.so
/bess/core/modules/ip_encap.so
/bess/core/modules/ipswap.so
/bess/core/modules/l2_forward.so
/bess/core/modules/round_robin.so
/bess/core/modules/mttest.so
/bess/core/modules/merge.so
/bess/core/modules/dump.so
/bess/core/modules/noop.so
/bess/core/modules/queue_inc.so
/bess/core/modules/queue_out.so",True,{}
NetSys/bess,https://github.com/NetSys/bess,391,2017-04-17T19:06:41Z,2017-04-19T01:05:42Z,2017-04-19T01:06:25Z,MERGED,True,49,0,7,https://github.com/changlan,Add command `show plugin`,1,[],https://github.com/NetSys/bess/pull/391,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/391#issuecomment-295031377,"which shows all imported plugins:
localhost:10514 $ show plugin
/bess/core/modules/vlan_push.so
/bess/core/modules/vxlan_encap.so
/bess/core/modules/vxlan_decap.so
/bess/core/modules/drr.so
/bess/core/modules/measure.so
/bess/core/modules/split.so
/bess/core/modules/bypass.so
/bess/core/modules/update_ttl.so
/bess/core/modules/url_filter.so
/bess/core/modules/acl.so
/bess/core/modules/vlan_split.so
/bess/core/modules/generic_decap.so
/bess/core/modules/wildcard_match.so
/bess/core/modules/ip_lookup.so
/bess/core/modules/rewrite.so
/bess/core/modules/random_update.so
/bess/core/modules/update.so
/bess/core/modules/sink.so
/bess/core/modules/port_out.so
/bess/core/modules/queue.so
/bess/core/modules/vlan_pop.so
/bess/core/modules/random_drop.so
/bess/core/modules/set_metadata.so
/bess/core/modules/macswap.so
/bess/core/modules/source.so
/bess/core/modules/flowgen.so
/bess/core/modules/timestamp.so
/bess/core/modules/buffer.so
/bess/core/modules/ether_encap.so
/bess/core/modules/exact_match.so
/bess/core/modules/generic_encap.so
/bess/core/modules/hash_lb.so
/bess/core/modules/replicate.so
/bess/core/modules/port_inc.so
/bess/core/modules/ip_checksum.so
/bess/core/modules/ip_encap.so
/bess/core/modules/ipswap.so
/bess/core/modules/l2_forward.so
/bess/core/modules/round_robin.so
/bess/core/modules/mttest.so
/bess/core/modules/merge.so
/bess/core/modules/dump.so
/bess/core/modules/noop.so
/bess/core/modules/queue_inc.so
/bess/core/modules/queue_out.so",,True,{}
NetSys/bess,https://github.com/NetSys/bess,392,2017-04-17T22:13:32Z,2017-04-19T00:35:47Z,2017-04-19T01:06:35Z,MERGED,True,71,0,2,https://github.com/changlan,Add pre-commit hooks to format C++/Python code,2,[],https://github.com/NetSys/bess/pull/392,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/392,Run ./install_git_hooks.sh to enable.,Run ./install_git_hooks.sh to enable.,True,{}
NetSys/bess,https://github.com/NetSys/bess,392,2017-04-17T22:13:32Z,2017-04-19T00:35:47Z,2017-04-19T01:06:35Z,MERGED,True,71,0,2,https://github.com/changlan,Add pre-commit hooks to format C++/Python code,2,[],https://github.com/NetSys/bess/pull/392,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/392#issuecomment-294611420,Run ./install_git_hooks.sh to enable.,"Two nitpicky suggestions:

How about _ (underscore) rather than -, for consistency with other filenames?
""hook"" is a overloaded term since we have ""gate hooks"" in the framework. ""install_git_hooks.sh"" might be better..?",True,{}
NetSys/bess,https://github.com/NetSys/bess,392,2017-04-17T22:13:32Z,2017-04-19T00:35:47Z,2017-04-19T01:06:35Z,MERGED,True,71,0,2,https://github.com/changlan,Add pre-commit hooks to format C++/Python code,2,[],https://github.com/NetSys/bess/pull/392,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/392#issuecomment-294612349,Run ./install_git_hooks.sh to enable.,Sounds good. Updated.,True,{}
NetSys/bess,https://github.com/NetSys/bess,392,2017-04-17T22:13:32Z,2017-04-19T00:35:47Z,2017-04-19T01:06:35Z,MERGED,True,71,0,2,https://github.com/changlan,Add pre-commit hooks to format C++/Python code,2,[],https://github.com/NetSys/bess/pull/392,https://github.com/barath,4,https://github.com/NetSys/bess/pull/392#issuecomment-294612693,Run ./install_git_hooks.sh to enable.,I have a few tweaks to the .clang-format file; I'll make those a separate PR.,True,{}
NetSys/bess,https://github.com/NetSys/bess,392,2017-04-17T22:13:32Z,2017-04-19T00:35:47Z,2017-04-19T01:06:35Z,MERGED,True,71,0,2,https://github.com/changlan,Add pre-commit hooks to format C++/Python code,2,[],https://github.com/NetSys/bess/pull/392,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/392#issuecomment-294632856,Run ./install_git_hooks.sh to enable.,"Codecov Report

Merging #392 into master will increase coverage by <1%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #392    +/-   ##
======================================
+ Coverage      21%    21%   +<1%     
======================================
  Files         158    158            
  Lines        7908   7919    +11     
======================================
+ Hits         1674   1685    +11     
  Misses       6234   6234



Impacted Files
Coverage Δ





core/worker.h
90% <0%> (+6%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7c0cccf...8384a59. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,392,2017-04-17T22:13:32Z,2017-04-19T00:35:47Z,2017-04-19T01:06:35Z,MERGED,True,71,0,2,https://github.com/changlan,Add pre-commit hooks to format C++/Python code,2,[],https://github.com/NetSys/bess/pull/392,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/392#issuecomment-295026063,Run ./install_git_hooks.sh to enable.,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,393,2017-04-17T22:14:31Z,2017-04-17T23:18:55Z,2017-04-17T23:24:28Z,MERGED,True,78,56,10,https://github.com/changlan,Reformat Python code,1,[],https://github.com/NetSys/bess/pull/393,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/393,Ran autopep8 over the Python code. No semantic change.,Ran autopep8 over the Python code. No semantic change.,True,{'THUMBS_UP': ['https://github.com/justinemarie']}
NetSys/bess,https://github.com/NetSys/bess,393,2017-04-17T22:14:31Z,2017-04-17T23:18:55Z,2017-04-17T23:24:28Z,MERGED,True,78,56,10,https://github.com/changlan,Reformat Python code,1,[],https://github.com/NetSys/bess/pull/393,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/393#issuecomment-294621404,Ran autopep8 over the Python code. No semantic change.,"Codecov Report

Merging #393 into master will decrease coverage by 3%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #393    +/-   ##
======================================
- Coverage      21%    19%    -3%     
======================================
  Files         158    158            
  Lines        7908   7908            
======================================
- Hits         1674   1470   -204     
- Misses       6234   6438   +204



Impacted Files
Coverage Δ





core/utils/random.h
0% <0%> (-100%)
⬇️


core/modules/flowgen.cc
1% <0%> (-68%)
⬇️


core/modules/flowgen.h
0% <0%> (-67%)
⬇️


core/pktbatch.h
23% <0%> (-23%)
⬇️


core/packet.h
15% <0%> (-11%)
⬇️


core/worker.h
79% <0%> (-5%)
⬇️


core/packet_avx.h
84% <0%> (-4%)
⬇️


core/worker.cc
74% <0%> (-1%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7c0cccf...fae4ccd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,393,2017-04-17T22:14:31Z,2017-04-17T23:18:55Z,2017-04-17T23:24:28Z,MERGED,True,78,56,10,https://github.com/changlan,Reformat Python code,1,[],https://github.com/NetSys/bess/pull/393,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/393#issuecomment-294623163,Ran autopep8 over the Python code. No semantic change.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,394,2017-04-17T22:27:17Z,2017-04-17T23:15:38Z,2017-04-17T23:23:20Z,MERGED,True,2,2,1,https://github.com/barath,Update .clang-format,1,[],https://github.com/NetSys/bess/pull/394,https://github.com/barath,1,https://github.com/NetSys/bess/pull/394,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,394,2017-04-17T22:27:17Z,2017-04-17T23:15:38Z,2017-04-17T23:23:20Z,MERGED,True,2,2,1,https://github.com/barath,Update .clang-format,1,[],https://github.com/NetSys/bess/pull/394,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/394#issuecomment-294622429,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,395,2017-04-17T22:46:04Z,2017-04-20T19:28:41Z,2017-07-02T17:41:05Z,MERGED,True,3,0,1,https://github.com/shwang,travis: output coverage percentage from genhtml,1,[],https://github.com/NetSys/bess/pull/395,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/395,"Adding this output should make it clearer whether our fluctuating
code coverage is a problem with codecov.io or a problem with our
tests.
The coverage percentage generated by genhtml will not be the same as
the percentage generated by codecov.io (because aren't looking at
all of the same files and count differently for some line types),
but is roughly proportional.","Adding this output should make it clearer whether our fluctuating
code coverage is a problem with codecov.io or a problem with our
tests.
The coverage percentage generated by genhtml will not be the same as
the percentage generated by codecov.io (because aren't looking at
all of the same files and count differently for some line types),
but is roughly proportional.",True,{}
NetSys/bess,https://github.com/NetSys/bess,395,2017-04-17T22:46:04Z,2017-04-20T19:28:41Z,2017-07-02T17:41:05Z,MERGED,True,3,0,1,https://github.com/shwang,travis: output coverage percentage from genhtml,1,[],https://github.com/NetSys/bess/pull/395,https://github.com/shwang,2,https://github.com/NetSys/bess/pull/395#issuecomment-294618097,"Adding this output should make it clearer whether our fluctuating
code coverage is a problem with codecov.io or a problem with our
tests.
The coverage percentage generated by genhtml will not be the same as
the percentage generated by codecov.io (because aren't looking at
all of the same files and count differently for some line types),
but is roughly proportional.",for #388,True,{}
NetSys/bess,https://github.com/NetSys/bess,395,2017-04-17T22:46:04Z,2017-04-20T19:28:41Z,2017-07-02T17:41:05Z,MERGED,True,3,0,1,https://github.com/shwang,travis: output coverage percentage from genhtml,1,[],https://github.com/NetSys/bess/pull/395,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/395#issuecomment-294638285,"Adding this output should make it clearer whether our fluctuating
code coverage is a problem with codecov.io or a problem with our
tests.
The coverage percentage generated by genhtml will not be the same as
the percentage generated by codecov.io (because aren't looking at
all of the same files and count differently for some line types),
but is roughly proportional.","Codecov Report

Merging #395 into master will decrease coverage by 5%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #395    +/-   ##
======================================
- Coverage      22%    17%    -5%     
======================================
  Files         160    160            
  Lines        8040   8040            
======================================
- Hits         1749   1332   -417     
- Misses       6291   6708   +417



Impacted Files
Coverage Δ





core/modules/vlan_push.cc
10% <0%> (-90%)
⬇️


core/modules/rewrite.h
0% <0%> (-67%)
⬇️


core/modules/rewrite.cc
4% <0%> (-54%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/modules/source.h
0% <0%> (-50%)
⬇️


core/modules/queue.h
0% <0%> (-50%)
⬇️


core/kmod/llring.h
0% <0%> (-49%)
⬇️


core/modules/queue.cc
3% <0%> (-46%)
⬇️


core/modules/source.cc
7% <0%> (-38%)
⬇️


core/scheduler.h
48% <0%> (-35%)
⬇️


... and 9 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4791386...f5c5526. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,395,2017-04-17T22:46:04Z,2017-04-20T19:28:41Z,2017-07-02T17:41:05Z,MERGED,True,3,0,1,https://github.com/shwang,travis: output coverage percentage from genhtml,1,[],https://github.com/NetSys/bess/pull/395,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/395#issuecomment-295870923,"Adding this output should make it clearer whether our fluctuating
code coverage is a problem with codecov.io or a problem with our
tests.
The coverage percentage generated by genhtml will not be the same as
the percentage generated by codecov.io (because aren't looking at
all of the same files and count differently for some line types),
but is roughly proportional.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,396,2017-04-18T09:23:58Z,2017-04-20T20:31:59Z,2017-04-21T10:05:56Z,MERGED,True,41,2,8,https://github.com/nemethf,Set & query version info,4,[],https://github.com/NetSys/bess/pull/396,https://github.com/nemethf,1,https://github.com/NetSys/bess/pull/396,"Hi,
This PR allows us to easily check whether we forgot to update one of the bessd instances we use.  Additionally, this makes straightforward to record the version we used during a measurement.
Bess should be installed from git, hence the PR generates the version information by executing a git command.  (However, the effect on build time is negligible.)  The version string will be similar to this: v0.2.0-409-gee04-dirty.  (The latest tag, number of commits since the latest tag, the beginning of the hash of the current HEAD, and ""dirty"" if there are uncommitted  changes.)
The auto-generated version.h simply contains one #define.  I can modify this to have a proper include header guard, a ""const std::string kBessVersion = ""..."", etc, but I think I already over-engineered it.","Hi,
This PR allows us to easily check whether we forgot to update one of the bessd instances we use.  Additionally, this makes straightforward to record the version we used during a measurement.
Bess should be installed from git, hence the PR generates the version information by executing a git command.  (However, the effect on build time is negligible.)  The version string will be similar to this: v0.2.0-409-gee04-dirty.  (The latest tag, number of commits since the latest tag, the beginning of the hash of the current HEAD, and ""dirty"" if there are uncommitted  changes.)
The auto-generated version.h simply contains one #define.  I can modify this to have a proper include header guard, a ""const std::string kBessVersion = ""..."", etc, but I think I already over-engineered it.",True,{}
NetSys/bess,https://github.com/NetSys/bess,396,2017-04-18T09:23:58Z,2017-04-20T20:31:59Z,2017-04-21T10:05:56Z,MERGED,True,41,2,8,https://github.com/nemethf,Set & query version info,4,[],https://github.com/NetSys/bess/pull/396,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/396#issuecomment-294758402,"Hi,
This PR allows us to easily check whether we forgot to update one of the bessd instances we use.  Additionally, this makes straightforward to record the version we used during a measurement.
Bess should be installed from git, hence the PR generates the version information by executing a git command.  (However, the effect on build time is negligible.)  The version string will be similar to this: v0.2.0-409-gee04-dirty.  (The latest tag, number of commits since the latest tag, the beginning of the hash of the current HEAD, and ""dirty"" if there are uncommitted  changes.)
The auto-generated version.h simply contains one #define.  I can modify this to have a proper include header guard, a ""const std::string kBessVersion = ""..."", etc, but I think I already over-engineered it.","Codecov Report

Merging #396 into master will decrease coverage by 8%.
The diff coverage is 40%.


@@          Coverage Diff           @@
##           master   #396    +/-   ##
======================================
- Coverage      24%    17%    -8%     
======================================
  Files         158    160     +2     
  Lines        7908   8044   +136     
======================================
- Hits         1923   1333   -590     
- Misses       5985   6711   +726



Impacted Files
Coverage Δ





core/main.cc
91% <100%> (ø)
⬆️


core/bessctl.cc
16% <25%> (-2%)
⬇️


core/modules/wildcard_match.h
0% <0%> (-93%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-81%)
⬇️


core/modules/rewrite.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


core/modules/rewrite.cc
4% <0%> (-60%)
⬇️


core/utils/common.h
0% <0%> (-59%)
⬇️


core/message.h
16% <0%> (-53%)
⬇️


... and 25 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ee040df...9ca31e7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,396,2017-04-18T09:23:58Z,2017-04-20T20:31:59Z,2017-04-21T10:05:56Z,MERGED,True,41,2,8,https://github.com/nemethf,Set & query version info,4,[],https://github.com/NetSys/bess/pull/396,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/396#issuecomment-295898735,"Hi,
This PR allows us to easily check whether we forgot to update one of the bessd instances we use.  Additionally, this makes straightforward to record the version we used during a measurement.
Bess should be installed from git, hence the PR generates the version information by executing a git command.  (However, the effect on build time is negligible.)  The version string will be similar to this: v0.2.0-409-gee04-dirty.  (The latest tag, number of commits since the latest tag, the beginning of the hash of the current HEAD, and ""dirty"" if there are uncommitted  changes.)
The auto-generated version.h simply contains one #define.  I can modify this to have a proper include header guard, a ""const std::string kBessVersion = ""..."", etc, but I think I already over-engineered it.",Merged,True,{}
NetSys/bess,https://github.com/NetSys/bess,397,2017-04-18T18:08:56Z,2017-04-19T03:15:25Z,2017-04-19T16:19:53Z,MERGED,True,193,47,5,https://github.com/ddiproietto,Fix and enhance NAT checksum update,5,[],https://github.com/NetSys/bess/pull/397,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/397,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,397,2017-04-18T18:08:56Z,2017-04-19T03:15:25Z,2017-04-19T16:19:53Z,MERGED,True,193,47,5,https://github.com/ddiproietto,Fix and enhance NAT checksum update,5,[],https://github.com/NetSys/bess/pull/397,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/397#issuecomment-294936937,,"Codecov Report

Merging #397 into master will increase coverage by 8%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #397    +/-   ##
======================================
+ Coverage      24%    33%    +8%     
======================================
  Files         158    158            
  Lines        7908   8404   +496     
======================================
+ Hits         1923   2735   +812     
+ Misses       5985   5669   -316



Impacted Files
Coverage Δ





core/utils/checksum.h
0% <0%> (ø)
⬆️


core/modules/nat.cc
2% <0%> (ø)
⬇️


core/main.cc
90% <0%> (-1%)
⬇️


core/module.h
68% <0%> (ø)
⬆️


core/modules/update_ttl.cc
9% <0%> (+2%)
⬆️


core/bessd.cc
65% <0%> (+2%)
⬆️


core/worker.cc
75% <0%> (+3%)
⬆️


core/module.cc
55% <0%> (+3%)
⬆️


core/utils/extended_priority_queue.h
4% <0%> (+4%)
⬆️


core/worker.h
90% <0%> (+6%)
⬆️


... and 13 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ee040df...3efe003. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,397,2017-04-18T18:08:56Z,2017-04-19T03:15:25Z,2017-04-19T16:19:53Z,MERGED,True,193,47,5,https://github.com/ddiproietto,Fix and enhance NAT checksum update,5,[],https://github.com/NetSys/bess/pull/397,https://github.com/barath,3,https://github.com/NetSys/bess/pull/397#issuecomment-295050606,,"Thanks, LGTM.  Will merge after CI finishes.",True,{}
NetSys/bess,https://github.com/NetSys/bess,397,2017-04-18T18:08:56Z,2017-04-19T03:15:25Z,2017-04-19T16:19:53Z,MERGED,True,193,47,5,https://github.com/ddiproietto,Fix and enhance NAT checksum update,5,[],https://github.com/NetSys/bess/pull/397,https://github.com/barath,4,https://github.com/NetSys/bess/pull/397#issuecomment-295056429,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,399,2017-04-19T11:38:20Z,2017-04-19T21:53:59Z,2017-04-20T05:43:38Z,MERGED,True,99,17,4,https://github.com/justinemarie,Add get_rules() command to WildcardMatch,11,[],https://github.com/NetSys/bess/pull/399,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/399,"This patch allows you to ask a running WildcardMatch module what the current rules are via a new function, get_rules().","This patch allows you to ask a running WildcardMatch module what the current rules are via a new function, get_rules().",True,{}
NetSys/bess,https://github.com/NetSys/bess,399,2017-04-19T11:38:20Z,2017-04-19T21:53:59Z,2017-04-20T05:43:38Z,MERGED,True,99,17,4,https://github.com/justinemarie,Add get_rules() command to WildcardMatch,11,[],https://github.com/NetSys/bess/pull/399,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/399#issuecomment-295244214,"This patch allows you to ask a running WildcardMatch module what the current rules are via a new function, get_rules().","Codecov Report

Merging #399 into master will decrease coverage by 6%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #399    +/-   ##
======================================
- Coverage      23%    17%    -6%     
======================================
  Files         160    160            
  Lines        7999   8459   +460     
======================================
- Hits         1878   1473   -405     
- Misses       6121   6986   +865



Impacted Files
Coverage Δ





core/modules/wildcard_match.h
0% <ø> (ø)
⬆️


core/message.h
16% <0%> (-6%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (ø)
⬇️


core/traffic_class.cc
3% <0%> (-52%)
⬇️


core/modules/source.h
0% <0%> (-50%)
⬇️


core/modules/l2_forward.h
0% <0%> (-50%)
⬇️


core/modules/l2_forward.cc
1% <0%> (-43%)
⬇️


core/traffic_class.h
32% <0%> (-42%)
⬇️


core/scheduler.h
48% <0%> (-39%)
⬇️


core/modules/source.cc
7% <0%> (-38%)
⬇️


... and 20 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f0aff96...2151966. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,399,2017-04-19T11:38:20Z,2017-04-19T21:53:59Z,2017-04-20T05:43:38Z,MERGED,True,99,17,4,https://github.com/justinemarie,Add get_rules() command to WildcardMatch,11,[],https://github.com/NetSys/bess/pull/399,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/399#issuecomment-295413541,"This patch allows you to ask a running WildcardMatch module what the current rules are via a new function, get_rules().",reminder: in the end we should squash and merge,True,{}
NetSys/bess,https://github.com/NetSys/bess,399,2017-04-19T11:38:20Z,2017-04-19T21:53:59Z,2017-04-20T05:43:38Z,MERGED,True,99,17,4,https://github.com/justinemarie,Add get_rules() command to WildcardMatch,11,[],https://github.com/NetSys/bess/pull/399,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/399#issuecomment-295459412,"This patch allows you to ask a running WildcardMatch module what the current rules are via a new function, get_rules().",Good to go?,True,{}
NetSys/bess,https://github.com/NetSys/bess,399,2017-04-19T11:38:20Z,2017-04-19T21:53:59Z,2017-04-20T05:43:38Z,MERGED,True,99,17,4,https://github.com/justinemarie,Add get_rules() command to WildcardMatch,11,[],https://github.com/NetSys/bess/pull/399,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/399#issuecomment-295460750,"This patch allows you to ask a running WildcardMatch module what the current rules are via a new function, get_rules().",,True,{}
NetSys/bess,https://github.com/NetSys/bess,400,2017-04-19T18:21:13Z,2017-04-19T18:29:03Z,2017-04-19T18:42:41Z,MERGED,True,1,1,1,https://github.com/TheJStone,Fix copy.h error on non-AVX2 machines,1,[],https://github.com/NetSys/bess/pull/400,https://github.com/TheJStone,1,https://github.com/NetSys/bess/pull/400,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,400,2017-04-19T18:21:13Z,2017-04-19T18:29:03Z,2017-04-19T18:42:41Z,MERGED,True,1,1,1,https://github.com/TheJStone,Fix copy.h error on non-AVX2 machines,1,[],https://github.com/NetSys/bess/pull/400,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/400#issuecomment-295380249,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,400,2017-04-19T18:21:13Z,2017-04-19T18:29:03Z,2017-04-19T18:42:41Z,MERGED,True,1,1,1,https://github.com/TheJStone,Fix copy.h error on non-AVX2 machines,1,[],https://github.com/NetSys/bess/pull/400,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/400#issuecomment-295385197,,"Codecov Report

Merging #400 into master will increase coverage by <1%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #400    +/-   ##
======================================
+ Coverage      23%    24%   +<1%     
======================================
  Files         160    160            
  Lines        7999   7999            
======================================
+ Hits         1878   1894    +16     
+ Misses       6121   6105    -16



Impacted Files
Coverage Δ





core/utils/copy.h
38% <ø> (ø)
⬆️


core/modules/l2_forward.h
0% <0%> (-50%)
⬇️


core/modules/l2_forward.cc
1% <0%> (-43%)
⬇️


core/module.h
53% <0%> (-7%)
⬇️


core/module.cc
34% <0%> (-3%)
⬇️


core/bessctl.cc
31% <0%> (-1%)
⬇️


core/traffic_class.h
75% <0%> (+1%)
⬆️


core/traffic_class.cc
57% <0%> (+2%)
⬆️


core/scheduler.h
89% <0%> (+3%)
⬆️


core/worker.cc
82% <0%> (+7%)
⬆️


... and 9 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f0aff96...c6351a4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,401,2017-04-19T18:40:53Z,2017-04-20T20:14:56Z,2017-04-20T20:17:40Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Fix issues in Ansible script docker.yml,1,[],https://github.com/NetSys/bess/pull/401,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/401,docker.yml does not install docker properly. See #389,docker.yml does not install docker properly. See #389,True,{}
NetSys/bess,https://github.com/NetSys/bess,401,2017-04-19T18:40:53Z,2017-04-20T20:14:56Z,2017-04-20T20:17:40Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Fix issues in Ansible script docker.yml,1,[],https://github.com/NetSys/bess/pull/401,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/401#issuecomment-295412806,docker.yml does not install docker properly. See #389,"Codecov Report

Merging #401 into master will increase coverage by 4%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #401    +/-   ##
======================================
+ Coverage      21%    25%    +4%     
======================================
  Files         160    160            
  Lines        7999   7999            
======================================
+ Hits         1703   2004   +301     
+ Misses       6296   5995   -301



Impacted Files
Coverage Δ





core/module.cc
34% <0%> (ø)
⬆️


core/module.h
53% <0%> (+1%)
⬆️


core/traffic_class.h
75% <0%> (+1%)
⬆️


core/traffic_class.cc
57% <0%> (+2%)
⬆️


core/scheduler.h
89% <0%> (+3%)
⬆️


core/worker.cc
82% <0%> (+7%)
⬆️


core/packet.h
45% <0%> (+19%)
⬆️


core/modules/round_robin.cc
34% <0%> (+28%)
⬆️


core/mem_alloc.cc
63% <0%> (+31%)
⬆️


core/message.h
57% <0%> (+35%)
⬆️


... and 12 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 276c063...e82c870. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,401,2017-04-19T18:40:53Z,2017-04-20T20:14:56Z,2017-04-20T20:17:40Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Fix issues in Ansible script docker.yml,1,[],https://github.com/NetSys/bess/pull/401,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/401#issuecomment-295889247,docker.yml does not install docker properly. See #389,,True,{}
NetSys/bess,https://github.com/NetSys/bess,402,2017-04-19T19:01:35Z,2017-04-19T21:47:32Z,2017-04-19T21:48:09Z,MERGED,True,40,23,2,https://github.com/ddiproietto,Fix bessctl gates tracking,3,[],https://github.com/NetSys/bess/pull/402,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/402,This should fix Issue #398,This should fix Issue #398,True,{}
NetSys/bess,https://github.com/NetSys/bess,402,2017-04-19T19:01:35Z,2017-04-19T21:47:32Z,2017-04-19T21:48:09Z,MERGED,True,40,23,2,https://github.com/ddiproietto,Fix bessctl gates tracking,3,[],https://github.com/NetSys/bess/pull/402,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/402#issuecomment-295431226,This should fix Issue #398,"Codecov Report

Merging #402 into master will increase coverage by 7%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #402    +/-   ##
======================================
+ Coverage      21%    28%    +7%     
======================================
  Files         160    160            
  Lines        7999   8004     +5     
======================================
+ Hits         1703   2230   +527     
+ Misses       6296   5774   -522



Impacted Files
Coverage Δ





core/bessctl.cc
18% <0%> (-13%)
⬇️


core/traffic_class.cc
13% <0%> (-42%)
⬇️


core/traffic_class.h
44% <0%> (-30%)
⬇️


core/scheduler.h
67% <0%> (-20%)
⬇️


core/utils/extended_priority_queue.h
0% <0%> (-4%)
⬇️


core/worker.cc
72% <0%> (-3%)
⬇️


core/gate.h
52% <0%> (+5%)
⬆️


core/utils/copy.h
49% <0%> (+11%)
⬆️


core/packet.h
38% <0%> (+13%)
⬆️


... and 22 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 276c063...ca02edd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,402,2017-04-19T19:01:35Z,2017-04-19T21:47:32Z,2017-04-19T21:48:09Z,MERGED,True,40,23,2,https://github.com/ddiproietto,Fix bessctl gates tracking,3,[],https://github.com/NetSys/bess/pull/402,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/402#issuecomment-295458498,This should fix Issue #398,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,404,2017-04-19T21:56:17Z,2017-04-24T18:39:47Z,2017-04-25T05:48:06Z,MERGED,True,37,23,3,https://github.com/justinemarie,Allow python modules to be created for existing BESS modules.,13,[],https://github.com/NetSys/bess/pull/404,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/404,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,True,{}
NetSys/bess,https://github.com/NetSys/bess,404,2017-04-19T21:56:17Z,2017-04-24T18:39:47Z,2017-04-25T05:48:06Z,MERGED,True,37,23,3,https://github.com/justinemarie,Allow python modules to be created for existing BESS modules.,13,[],https://github.com/NetSys/bess/pull/404,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/404#issuecomment-295462123,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,Wait one more thing I need to add (check to make sure module exists).,True,{}
NetSys/bess,https://github.com/NetSys/bess,404,2017-04-19T21:56:17Z,2017-04-24T18:39:47Z,2017-04-25T05:48:06Z,MERGED,True,37,23,3,https://github.com/justinemarie,Allow python modules to be created for existing BESS modules.,13,[],https://github.com/NetSys/bess/pull/404,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/404#issuecomment-295466868,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,Okay put the right check in now :-),True,{}
NetSys/bess,https://github.com/NetSys/bess,404,2017-04-19T21:56:17Z,2017-04-24T18:39:47Z,2017-04-25T05:48:06Z,MERGED,True,37,23,3,https://github.com/justinemarie,Allow python modules to be created for existing BESS modules.,13,[],https://github.com/NetSys/bess/pull/404,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/404#issuecomment-295504454,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,"Codecov Report

Merging #404 into master will decrease coverage by 5%.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master   #404     +/-   ##
=======================================
- Coverage      22%    17%     -5%     
=======================================
  Files         160    160             
  Lines        8040   8844    +804     
=======================================
- Hits         1749   1519    -230     
- Misses       6291   7325   +1034



Impacted Files
Coverage Δ





core/modules/vlan_push.cc
10% <0%> (-90%)
⬇️


core/modules/rewrite.h
0% <0%> (-67%)
⬇️


core/modules/rewrite.cc
4% <0%> (-54%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/modules/source.h
0% <0%> (-50%)
⬇️


core/modules/queue.h
0% <0%> (-50%)
⬇️


core/kmod/llring.h
0% <0%> (-49%)
⬇️


core/modules/queue.cc
3% <0%> (-46%)
⬇️


core/modules/source.cc
7% <0%> (-38%)
⬇️


core/scheduler.h
48% <0%> (-35%)
⬇️


... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4791386...2ae4143. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,404,2017-04-19T21:56:17Z,2017-04-24T18:39:47Z,2017-04-25T05:48:06Z,MERGED,True,37,23,3,https://github.com/justinemarie,Allow python modules to be created for existing BESS modules.,13,[],https://github.com/NetSys/bess/pull/404,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/404#issuecomment-295861385,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,This is ready for another lookthrough and/or commit as soon as it finishes in Travis.,True,{}
NetSys/bess,https://github.com/NetSys/bess,404,2017-04-19T21:56:17Z,2017-04-24T18:39:47Z,2017-04-25T05:48:06Z,MERGED,True,37,23,3,https://github.com/justinemarie,Allow python modules to be created for existing BESS modules.,13,[],https://github.com/NetSys/bess/pull/404,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/404#issuecomment-296745215,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,bump,True,{}
NetSys/bess,https://github.com/NetSys/bess,404,2017-04-19T21:56:17Z,2017-04-24T18:39:47Z,2017-04-25T05:48:06Z,MERGED,True,37,23,3,https://github.com/justinemarie,Allow python modules to be created for existing BESS modules.,13,[],https://github.com/NetSys/bess/pull/404,https://github.com/melvinw,7,https://github.com/NetSys/bess/pull/404#issuecomment-296777804,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,Is conf/samples/reattachment.bess supposed to be part of this PR? I can't find it.,True,{}
NetSys/bess,https://github.com/NetSys/bess,404,2017-04-19T21:56:17Z,2017-04-24T18:39:47Z,2017-04-25T05:48:06Z,MERGED,True,37,23,3,https://github.com/justinemarie,Allow python modules to be created for existing BESS modules.,13,[],https://github.com/NetSys/bess/pull/404,https://github.com/justinemarie,8,https://github.com/NetSys/bess/pull/404#issuecomment-296780167,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,"No, it has been removed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,404,2017-04-19T21:56:17Z,2017-04-24T18:39:47Z,2017-04-25T05:48:06Z,MERGED,True,37,23,3,https://github.com/justinemarie,Allow python modules to be created for existing BESS modules.,13,[],https://github.com/NetSys/bess/pull/404,https://github.com/melvinw,9,https://github.com/NetSys/bess/pull/404#issuecomment-296786490,This allows you to instantiate a module in python for a BESS module that already exists; just invoke the module by name and declare _do_not_create in the constructor. An example is in conf/samples/reattachment.bess.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,405,2017-04-20T01:56:40Z,2017-05-01T05:15:11Z,2017-05-01T20:07:17Z,MERGED,True,72,0,4,https://github.com/sangjinhan,Add WorkerSplit module,3,[],https://github.com/NetSys/bess/pull/405,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/405,"This PR introduces a new module, WorkerSplit, which is simple yet strange. Let me justify its raison d'être with some backgrounds:

Most stateful modules are not thread-safe.

Because...

BESS does not provide an easy API to access per-task / per-worker storage for modules.
Some modules are inherently not safe for threading (e.g., QueueOut running on a PMD port)


It's unlikely that this issue is resolved very soon for all modules.


One way to work around the issue would be replicating such modules so that each worker thread has a dedicated module instance. It's not always straightforward though. For example,

A and B are bound to worker 0 and 1 respectively. 
C is thread-safe but not replicable. 
D is replicable but not thread-safe.

A
 \
  C - D 
 /
B

With the above set up D will be accessed by the both workers, potentially crashing.

What WorkerSplit module (W) does is like this:
A       D0
 \     /
  C - W 
 /     \
B       D1

On worker 0, W forwards packets to output gate 0. On worker 1, W forwards packets to output gate 1. On worker X, to output gate X.
One may emulate this behavior by adding SetMetadata('foo', 0) between A and C and SetMetadata('foo', 1) between B and C, to remember where packets came from. Then you can  replace W with Split('foo') to split packets based on the metadata. However this alternative incurs too much overheads for the same behavior.","This PR introduces a new module, WorkerSplit, which is simple yet strange. Let me justify its raison d'être with some backgrounds:

Most stateful modules are not thread-safe.

Because...

BESS does not provide an easy API to access per-task / per-worker storage for modules.
Some modules are inherently not safe for threading (e.g., QueueOut running on a PMD port)


It's unlikely that this issue is resolved very soon for all modules.


One way to work around the issue would be replicating such modules so that each worker thread has a dedicated module instance. It's not always straightforward though. For example,

A and B are bound to worker 0 and 1 respectively. 
C is thread-safe but not replicable. 
D is replicable but not thread-safe.

A
 \
  C - D 
 /
B

With the above set up D will be accessed by the both workers, potentially crashing.

What WorkerSplit module (W) does is like this:
A       D0
 \     /
  C - W 
 /     \
B       D1

On worker 0, W forwards packets to output gate 0. On worker 1, W forwards packets to output gate 1. On worker X, to output gate X.
One may emulate this behavior by adding SetMetadata('foo', 0) between A and C and SetMetadata('foo', 1) between B and C, to remember where packets came from. Then you can  replace W with Split('foo') to split packets based on the metadata. However this alternative incurs too much overheads for the same behavior.",True,{}
NetSys/bess,https://github.com/NetSys/bess,405,2017-04-20T01:56:40Z,2017-05-01T05:15:11Z,2017-05-01T20:07:17Z,MERGED,True,72,0,4,https://github.com/sangjinhan,Add WorkerSplit module,3,[],https://github.com/NetSys/bess/pull/405,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/405#issuecomment-295541311,"This PR introduces a new module, WorkerSplit, which is simple yet strange. Let me justify its raison d'être with some backgrounds:

Most stateful modules are not thread-safe.

Because...

BESS does not provide an easy API to access per-task / per-worker storage for modules.
Some modules are inherently not safe for threading (e.g., QueueOut running on a PMD port)


It's unlikely that this issue is resolved very soon for all modules.


One way to work around the issue would be replicating such modules so that each worker thread has a dedicated module instance. It's not always straightforward though. For example,

A and B are bound to worker 0 and 1 respectively. 
C is thread-safe but not replicable. 
D is replicable but not thread-safe.

A
 \
  C - D 
 /
B

With the above set up D will be accessed by the both workers, potentially crashing.

What WorkerSplit module (W) does is like this:
A       D0
 \     /
  C - W 
 /     \
B       D1

On worker 0, W forwards packets to output gate 0. On worker 1, W forwards packets to output gate 1. On worker X, to output gate X.
One may emulate this behavior by adding SetMetadata('foo', 0) between A and C and SetMetadata('foo', 1) between B and C, to remember where packets came from. Then you can  replace W with Split('foo') to split packets based on the metadata. However this alternative incurs too much overheads for the same behavior.","Codecov Report

Merging #405 into master will increase coverage by 5%.
The diff coverage is 20%.


@@           Coverage Diff           @@
##           master   #405     +/-   ##
=======================================
+ Coverage      22%    26%     +5%     
=======================================
  Files         160    162      +2     
  Lines        8040   9410   +1370     
=======================================
+ Hits         1749   2475    +726     
- Misses       6291   6935    +644



Impacted Files
Coverage Δ





core/modules/worker_split.h
0% <0%> (ø)



core/modules/worker_split.cc
25% <25%> (ø)



core/modules/vlan_push.cc
10% <0%> (-90%)
⬇️


core/modules/queue.h
0% <0%> (-50%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/kmod/llring.h
0% <0%> (-49%)
⬇️


core/modules/queue.cc
3% <0%> (-46%)
⬇️


core/mem_alloc.cc
31% <0%> (-31%)
⬇️


core/drivers/pmd.h
40% <0%> (-10%)
⬇️


core/worker.cc
72% <0%> (-10%)
⬇️


... and 40 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4791386...7dff6aa. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,405,2017-04-20T01:56:40Z,2017-05-01T05:15:11Z,2017-05-01T20:07:17Z,MERGED,True,72,0,4,https://github.com/sangjinhan,Add WorkerSplit module,3,[],https://github.com/NetSys/bess/pull/405,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/405#issuecomment-295862034,"This PR introduces a new module, WorkerSplit, which is simple yet strange. Let me justify its raison d'être with some backgrounds:

Most stateful modules are not thread-safe.

Because...

BESS does not provide an easy API to access per-task / per-worker storage for modules.
Some modules are inherently not safe for threading (e.g., QueueOut running on a PMD port)


It's unlikely that this issue is resolved very soon for all modules.


One way to work around the issue would be replicating such modules so that each worker thread has a dedicated module instance. It's not always straightforward though. For example,

A and B are bound to worker 0 and 1 respectively. 
C is thread-safe but not replicable. 
D is replicable but not thread-safe.

A
 \
  C - D 
 /
B

With the above set up D will be accessed by the both workers, potentially crashing.

What WorkerSplit module (W) does is like this:
A       D0
 \     /
  C - W 
 /     \
B       D1

On worker 0, W forwards packets to output gate 0. On worker 1, W forwards packets to output gate 1. On worker X, to output gate X.
One may emulate this behavior by adding SetMetadata('foo', 0) between A and C and SetMetadata('foo', 1) between B and C, to remember where packets came from. Then you can  replace W with Split('foo') to split packets based on the metadata. However this alternative incurs too much overheads for the same behavior.",This is a very useful module -- I used a module like this for Click a lot when scaling out the bigger Click conf files.,True,{}
NetSys/bess,https://github.com/NetSys/bess,405,2017-04-20T01:56:40Z,2017-05-01T05:15:11Z,2017-05-01T20:07:17Z,MERGED,True,72,0,4,https://github.com/sangjinhan,Add WorkerSplit module,3,[],https://github.com/NetSys/bess/pull/405,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/405#issuecomment-295862249,"This PR introduces a new module, WorkerSplit, which is simple yet strange. Let me justify its raison d'être with some backgrounds:

Most stateful modules are not thread-safe.

Because...

BESS does not provide an easy API to access per-task / per-worker storage for modules.
Some modules are inherently not safe for threading (e.g., QueueOut running on a PMD port)


It's unlikely that this issue is resolved very soon for all modules.


One way to work around the issue would be replicating such modules so that each worker thread has a dedicated module instance. It's not always straightforward though. For example,

A and B are bound to worker 0 and 1 respectively. 
C is thread-safe but not replicable. 
D is replicable but not thread-safe.

A
 \
  C - D 
 /
B

With the above set up D will be accessed by the both workers, potentially crashing.

What WorkerSplit module (W) does is like this:
A       D0
 \     /
  C - W 
 /     \
B       D1

On worker 0, W forwards packets to output gate 0. On worker 1, W forwards packets to output gate 1. On worker X, to output gate X.
One may emulate this behavior by adding SetMetadata('foo', 0) between A and C and SetMetadata('foo', 1) between B and C, to remember where packets came from. Then you can  replace W with Split('foo') to split packets based on the metadata. However this alternative incurs too much overheads for the same behavior.",Can you add a module test in bessctl/conf/testing?,True,{'THUMBS_UP': ['https://github.com/sangjinhan']}
NetSys/bess,https://github.com/NetSys/bess,405,2017-04-20T01:56:40Z,2017-05-01T05:15:11Z,2017-05-01T20:07:17Z,MERGED,True,72,0,4,https://github.com/sangjinhan,Add WorkerSplit module,3,[],https://github.com/NetSys/bess/pull/405,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/405#issuecomment-297598408,"This PR introduces a new module, WorkerSplit, which is simple yet strange. Let me justify its raison d'être with some backgrounds:

Most stateful modules are not thread-safe.

Because...

BESS does not provide an easy API to access per-task / per-worker storage for modules.
Some modules are inherently not safe for threading (e.g., QueueOut running on a PMD port)


It's unlikely that this issue is resolved very soon for all modules.


One way to work around the issue would be replicating such modules so that each worker thread has a dedicated module instance. It's not always straightforward though. For example,

A and B are bound to worker 0 and 1 respectively. 
C is thread-safe but not replicable. 
D is replicable but not thread-safe.

A
 \
  C - D 
 /
B

With the above set up D will be accessed by the both workers, potentially crashing.

What WorkerSplit module (W) does is like this:
A       D0
 \     /
  C - W 
 /     \
B       D1

On worker 0, W forwards packets to output gate 0. On worker 1, W forwards packets to output gate 1. On worker X, to output gate X.
One may emulate this behavior by adding SetMetadata('foo', 0) between A and C and SetMetadata('foo', 1) between B and C, to remember where packets came from. Then you can  replace W with Split('foo') to split packets based on the metadata. However this alternative incurs too much overheads for the same behavior.",Added a module test as per Justine's comment.,True,{}
NetSys/bess,https://github.com/NetSys/bess,405,2017-04-20T01:56:40Z,2017-05-01T05:15:11Z,2017-05-01T20:07:17Z,MERGED,True,72,0,4,https://github.com/sangjinhan,Add WorkerSplit module,3,[],https://github.com/NetSys/bess/pull/405,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/405#issuecomment-298287487,"This PR introduces a new module, WorkerSplit, which is simple yet strange. Let me justify its raison d'être with some backgrounds:

Most stateful modules are not thread-safe.

Because...

BESS does not provide an easy API to access per-task / per-worker storage for modules.
Some modules are inherently not safe for threading (e.g., QueueOut running on a PMD port)


It's unlikely that this issue is resolved very soon for all modules.


One way to work around the issue would be replicating such modules so that each worker thread has a dedicated module instance. It's not always straightforward though. For example,

A and B are bound to worker 0 and 1 respectively. 
C is thread-safe but not replicable. 
D is replicable but not thread-safe.

A
 \
  C - D 
 /
B

With the above set up D will be accessed by the both workers, potentially crashing.

What WorkerSplit module (W) does is like this:
A       D0
 \     /
  C - W 
 /     \
B       D1

On worker 0, W forwards packets to output gate 0. On worker 1, W forwards packets to output gate 1. On worker X, to output gate X.
One may emulate this behavior by adding SetMetadata('foo', 0) between A and C and SetMetadata('foo', 1) between B and C, to remember where packets came from. Then you can  replace W with Split('foo') to split packets based on the metadata. However this alternative incurs too much overheads for the same behavior.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,406,2017-04-20T03:11:45Z,2017-04-20T21:39:31Z,2017-04-20T21:41:59Z,MERGED,True,206,29,13,https://github.com/apanda,Detect scheduling constraint violations - Step 1,2,[],https://github.com/NetSys/bess/pull/406,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/406,"This change begins tracking placement constraints for tasks, e.g.,
recording when a physical port is best placed on a particular NUMA node.
We also add support for bessctl command check violations that can be
used to detect and find violations. This is the first step of this
change, and I am going to expand it to other port types, and also record
other types of violations.
Note I am submitting this early since the changes are quite extensive, and
I wanted to reduce code review overhead.","This change begins tracking placement constraints for tasks, e.g.,
recording when a physical port is best placed on a particular NUMA node.
We also add support for bessctl command check violations that can be
used to detect and find violations. This is the first step of this
change, and I am going to expand it to other port types, and also record
other types of violations.
Note I am submitting this early since the changes are quite extensive, and
I wanted to reduce code review overhead.",True,{}
NetSys/bess,https://github.com/NetSys/bess,406,2017-04-20T03:11:45Z,2017-04-20T21:39:31Z,2017-04-20T21:41:59Z,MERGED,True,206,29,13,https://github.com/apanda,Detect scheduling constraint violations - Step 1,2,[],https://github.com/NetSys/bess/pull/406,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/406#issuecomment-295569043,"This change begins tracking placement constraints for tasks, e.g.,
recording when a physical port is best placed on a particular NUMA node.
We also add support for bessctl command check violations that can be
used to detect and find violations. This is the first step of this
change, and I am going to expand it to other port types, and also record
other types of violations.
Note I am submitting this early since the changes are quite extensive, and
I wanted to reduce code review overhead.","Codecov Report

❗ No coverage uploaded for pull request base (master@edeb8d0). Click here to learn what that means.
The diff coverage is 14%.


@@           Coverage Diff           @@
##             master   #406   +/-   ##
=======================================
  Coverage          ?    16%           
=======================================
  Files             ?    160           
  Lines             ?   8099           
  Branches          ?      0           
=======================================
  Hits              ?   1334           
  Misses            ?   6765           
  Partials          ?      0



Impacted Files
Coverage Δ





core/modules/queue_inc.cc
4% <0%> (ø)



core/modules/port_inc.cc
4% <0%> (ø)



core/bessctl.cc
16% <0%> (ø)



core/port.h
32% <0%> (ø)



core/drivers/pmd.cc
4% <0%> (ø)



core/module.cc
34% <100%> (ø)



core/module.h
49% <25%> (ø)



core/drivers/pmd.h
33% <33%> (ø)





Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update edeb8d0...bd4c8e9. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,406,2017-04-20T03:11:45Z,2017-04-20T21:39:31Z,2017-04-20T21:41:59Z,MERGED,True,206,29,13,https://github.com/apanda,Detect scheduling constraint violations - Step 1,2,[],https://github.com/NetSys/bess/pull/406,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/406#issuecomment-295857141,"This change begins tracking placement constraints for tasks, e.g.,
recording when a physical port is best placed on a particular NUMA node.
We also add support for bessctl command check violations that can be
used to detect and find violations. This is the first step of this
change, and I am going to expand it to other port types, and also record
other types of violations.
Note I am submitting this early since the changes are quite extensive, and
I wanted to reduce code review overhead.",For calling this to resume_all -- I will do that in the next PR once I have all the other bits in -- will address the rest shortly and look at the code coverage bit.,True,{}
NetSys/bess,https://github.com/NetSys/bess,406,2017-04-20T03:11:45Z,2017-04-20T21:39:31Z,2017-04-20T21:41:59Z,MERGED,True,206,29,13,https://github.com/apanda,Detect scheduling constraint violations - Step 1,2,[],https://github.com/NetSys/bess/pull/406,https://github.com/apanda,4,https://github.com/NetSys/bess/pull/406#issuecomment-295897897,"This change begins tracking placement constraints for tasks, e.g.,
recording when a physical port is best placed on a particular NUMA node.
We also add support for bessctl command check violations that can be
used to detect and find violations. This is the first step of this
change, and I am going to expand it to other port types, and also record
other types of violations.
Note I am submitting this early since the changes are quite extensive, and
I wanted to reduce code review overhead.",@ddiproietto Addressed your comments.,True,{}
NetSys/bess,https://github.com/NetSys/bess,406,2017-04-20T03:11:45Z,2017-04-20T21:39:31Z,2017-04-20T21:41:59Z,MERGED,True,206,29,13,https://github.com/apanda,Detect scheduling constraint violations - Step 1,2,[],https://github.com/NetSys/bess/pull/406,https://github.com/ddiproietto,5,https://github.com/NetSys/bess/pull/406#issuecomment-295927024,"This change begins tracking placement constraints for tasks, e.g.,
recording when a physical port is best placed on a particular NUMA node.
We also add support for bessctl command check violations that can be
used to detect and find violations. This is the first step of this
change, and I am going to expand it to other port types, and also record
other types of violations.
Note I am submitting this early since the changes are quite extensive, and
I wanted to reduce code review overhead.","LGTM, thanks",True,{}
NetSys/bess,https://github.com/NetSys/bess,409,2017-04-21T23:09:48Z,2017-04-26T20:00:56Z,2017-04-26T20:02:56Z,MERGED,True,51,11,4,https://github.com/changlan,module: Add burst parameter to FlowGen,4,[],https://github.com/NetSys/bess/pull/409,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/409,So that we can change “burst” parameter at runtime (akin to Source).,So that we can change “burst” parameter at runtime (akin to Source).,True,{}
NetSys/bess,https://github.com/NetSys/bess,409,2017-04-21T23:09:48Z,2017-04-26T20:00:56Z,2017-04-26T20:02:56Z,MERGED,True,51,11,4,https://github.com/changlan,module: Add burst parameter to FlowGen,4,[],https://github.com/NetSys/bess/pull/409,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/409#issuecomment-296789759,So that we can change “burst” parameter at runtime (akin to Source).,"Codecov Report

Merging #409 into master will increase coverage by 7%.
The diff coverage is 35%.


@@          Coverage Diff           @@
##           master   #409    +/-   ##
======================================
+ Coverage      16%    23%    +7%     
======================================
  Files         160    160            
  Lines        8160   8190    +30     
======================================
+ Hits         1333   1911   +578     
+ Misses       6827   6279   -548



Impacted Files
Coverage Δ





core/modules/flowgen.h
67% <100%> (ø)
⬆️


core/modules/flowgen.cc
66% <31%> (-2%)
⬇️


core/main.cc
89% <0%> (-3%)
⬇️


core/opts.cc
79% <0%> (ø)
⬇️


core/pktbatch.h
50% <0%> (ø)
⬆️


core/module.h
49% <0%> (+2%)
⬆️


core/utils/extended_priority_queue.h
4% <0%> (+4%)
⬆️


core/worker.cc
82% <0%> (+13%)
⬆️


core/bessctl.cc
29% <0%> (+14%)
⬆️


core/packet.h
45% <0%> (+19%)
⬆️


... and 15 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 50cd567...4b033b2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,409,2017-04-21T23:09:48Z,2017-04-26T20:00:56Z,2017-04-26T20:02:56Z,MERGED,True,51,11,4,https://github.com/changlan,module: Add burst parameter to FlowGen,4,[],https://github.com/NetSys/bess/pull/409,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/409#issuecomment-297204892,So that we can change “burst” parameter at runtime (akin to Source).,"Thanks, mind if I do squash merge?",True,{}
NetSys/bess,https://github.com/NetSys/bess,409,2017-04-21T23:09:48Z,2017-04-26T20:00:56Z,2017-04-26T20:02:56Z,MERGED,True,51,11,4,https://github.com/changlan,module: Add burst parameter to FlowGen,4,[],https://github.com/NetSys/bess/pull/409,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/409#issuecomment-297205042,So that we can change “burst” parameter at runtime (akin to Source).,Also don't forget to update the protobuf file too,True,{}
NetSys/bess,https://github.com/NetSys/bess,409,2017-04-21T23:09:48Z,2017-04-26T20:00:56Z,2017-04-26T20:02:56Z,MERGED,True,51,11,4,https://github.com/changlan,module: Add burst parameter to FlowGen,4,[],https://github.com/NetSys/bess/pull/409,https://github.com/changlan,5,https://github.com/NetSys/bess/pull/409#issuecomment-297205353,So that we can change “burst” parameter at runtime (akin to Source).,"Oh, you mean remove burst in FlowGenArg as well?",True,{}
NetSys/bess,https://github.com/NetSys/bess,409,2017-04-21T23:09:48Z,2017-04-26T20:00:56Z,2017-04-26T20:02:56Z,MERGED,True,51,11,4,https://github.com/changlan,module: Add burst parameter to FlowGen,4,[],https://github.com/NetSys/bess/pull/409,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/409#issuecomment-297205980,So that we can change “burst” parameter at runtime (akin to Source).,"Never mind, I forgot Update and Init share the same parameters :-)
Will merge after CI build is done.",True,{}
NetSys/bess,https://github.com/NetSys/bess,409,2017-04-21T23:09:48Z,2017-04-26T20:00:56Z,2017-04-26T20:02:56Z,MERGED,True,51,11,4,https://github.com/changlan,module: Add burst parameter to FlowGen,4,[],https://github.com/NetSys/bess/pull/409,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/409#issuecomment-297524890,So that we can change “burst” parameter at runtime (akin to Source).,,True,{}
NetSys/bess,https://github.com/NetSys/bess,410,2017-04-22T00:48:40Z,2017-04-24T01:40:15Z,2017-04-24T01:40:45Z,MERGED,True,232,95,14,https://github.com/apanda,Module constraints part 2,8,[],https://github.com/NetSys/bess/pull/410,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/410,"This improves on the previous patch in a few ways:


We now account for all modules called by a worker when deciding on placement.


We check to see that only thread safe modules are called from multiple workers.


The only bit left is to perhaps always run this when resume_all is called, however there are some semantic challenges there which I need to work through.","This improves on the previous patch in a few ways:


We now account for all modules called by a worker when deciding on placement.


We check to see that only thread safe modules are called from multiple workers.


The only bit left is to perhaps always run this when resume_all is called, however there are some semantic challenges there which I need to work through.",True,{}
NetSys/bess,https://github.com/NetSys/bess,410,2017-04-22T00:48:40Z,2017-04-24T01:40:15Z,2017-04-24T01:40:45Z,MERGED,True,232,95,14,https://github.com/apanda,Module constraints part 2,8,[],https://github.com/NetSys/bess/pull/410,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/410#issuecomment-296344372,"This improves on the previous patch in a few ways:


We now account for all modules called by a worker when deciding on placement.


We check to see that only thread safe modules are called from multiple workers.


The only bit left is to perhaps always run this when resume_all is called, however there are some semantic challenges there which I need to work through.","Codecov Report

Merging #410 into master will increase coverage by 8%.
The diff coverage is 5%.


@@          Coverage Diff           @@
##           master   #410    +/-   ##
======================================
+ Coverage      21%    29%    +8%     
======================================
  Files         160    160            
  Lines        8099   8155    +56     
======================================
+ Hits         1705   2334   +629     
+ Misses       6394   5821   -573



Impacted Files
Coverage Δ





core/port.h
32% <0%> (ø)
⬆️


core/modules/queue_out.cc
3% <0%> (ø)
⬇️


core/modules/port_inc.cc
4% <0%> (ø)
⬇️


core/bessctl.cc
30% <0%> (+1%)
⬆️


core/modules/queue_inc.cc
4% <0%> (ø)
⬇️


core/modules/port_out.cc
3% <0%> (ø)
⬇️


core/drivers/pmd.cc
4% <0%> (ø)
⬆️


core/module.h
63% <18%> (+12%)
⬆️


core/module.cc
44% <3%> (+10%)
⬆️


core/drivers/pmd.h
33% <50%> (ø)
⬆️


... and 22 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 38192c5...1c59d6c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,410,2017-04-22T00:48:40Z,2017-04-24T01:40:15Z,2017-04-24T01:40:45Z,MERGED,True,232,95,14,https://github.com/apanda,Module constraints part 2,8,[],https://github.com/NetSys/bess/pull/410,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/410#issuecomment-296347250,"This improves on the previous patch in a few ways:


We now account for all modules called by a worker when deciding on placement.


We check to see that only thread safe modules are called from multiple workers.


The only bit left is to perhaps always run this when resume_all is called, however there are some semantic challenges there which I need to work through.",@barath Your comments should have been addressed.,True,{}
NetSys/bess,https://github.com/NetSys/bess,410,2017-04-22T00:48:40Z,2017-04-24T01:40:15Z,2017-04-24T01:40:45Z,MERGED,True,232,95,14,https://github.com/apanda,Module constraints part 2,8,[],https://github.com/NetSys/bess/pull/410,https://github.com/barath,4,https://github.com/NetSys/bess/pull/410#issuecomment-296505840,"This improves on the previous patch in a few ways:


We now account for all modules called by a worker when deciding on placement.


We check to see that only thread safe modules are called from multiple workers.


The only bit left is to perhaps always run this when resume_all is called, however there are some semantic challenges there which I need to work through.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,411,2017-04-24T19:36:59Z,2017-04-25T05:37:33Z,2017-04-25T05:38:34Z,MERGED,True,42,29,1,https://github.com/changlan,protobuf: Convert camelCase to snake_case,1,[],https://github.com/NetSys/bess/pull/411,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/411,"Modules commands in the comments are in camelCase. BESS code uses
snake_case.","Modules commands in the comments are in camelCase. BESS code uses
snake_case.",True,{}
NetSys/bess,https://github.com/NetSys/bess,411,2017-04-24T19:36:59Z,2017-04-25T05:37:33Z,2017-04-25T05:38:34Z,MERGED,True,42,29,1,https://github.com/changlan,protobuf: Convert camelCase to snake_case,1,[],https://github.com/NetSys/bess/pull/411,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/411#issuecomment-296815120,"Modules commands in the comments are in camelCase. BESS code uses
snake_case.","Codecov Report

Merging #411 into master will decrease coverage by 4%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #411    +/-   ##
======================================
- Coverage      29%    25%    -4%     
======================================
  Files         160    160            
  Lines        8156   8156            
======================================
- Hits         2369   2074   -295     
- Misses       5787   6082   +295



Impacted Files
Coverage Δ





core/modules/vlan_push.cc
10% <0%> (-90%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/modules/queue.h
0% <0%> (-50%)
⬇️


core/kmod/llring.h
0% <0%> (-49%)
⬇️


core/modules/queue.cc
3% <0%> (-46%)
⬇️


core/mem_alloc.cc
31% <0%> (-31%)
⬇️


core/packet.h
32% <0%> (-19%)
⬇️


core/modules/rewrite.cc
64% <0%> (-18%)
⬇️


core/scheduler.h
67% <0%> (-16%)
⬇️


core/traffic_class.cc
13% <0%> (-15%)
⬇️


... and 4 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 917c9d5...9bcbd7f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,411,2017-04-24T19:36:59Z,2017-04-25T05:37:33Z,2017-04-25T05:38:34Z,MERGED,True,42,29,1,https://github.com/changlan,protobuf: Convert camelCase to snake_case,1,[],https://github.com/NetSys/bess/pull/411,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/411#issuecomment-296916229,"Modules commands in the comments are in camelCase. BESS code uses
snake_case.","This is very helpful, thank you! At some point I need to think about how to re-do the auto-documenting code -- I think my choice to autogen from protobuf was not the right one.",True,{}
NetSys/bess,https://github.com/NetSys/bess,411,2017-04-24T19:36:59Z,2017-04-25T05:37:33Z,2017-04-25T05:38:34Z,MERGED,True,42,29,1,https://github.com/changlan,protobuf: Convert camelCase to snake_case,1,[],https://github.com/NetSys/bess/pull/411,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/411#issuecomment-296916389,"Modules commands in the comments are in camelCase. BESS code uses
snake_case.",,True,{'THUMBS_UP': ['https://github.com/changlan']}
NetSys/bess,https://github.com/NetSys/bess,412,2017-04-24T23:00:55Z,2017-04-27T21:17:16Z,2017-04-27T21:18:32Z,MERGED,True,8,6,3,https://github.com/sangjinhan,Add clear() command to Measure module,1,[],https://github.com/NetSys/bess/pull/412,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/412,"At the moment, Measure resets the two histograms (RTT and jitter) (with 1M elements each) only when Histogram::Insert() is called, i.e., when packets are received. It takes about 10ms, artificially inflating the latency of pending packets. The measurement results will show higher tail latency than it should be.
As a quick fix, this PR adds clear() command to reset histograms in an explicit manner, so that the Measure module can perform Histogram::Insert() without delayed by histogram reset.
bess.pause_all()
stats = measure.get_summary()
measure.clear()                 <- histograms are reset here
bess.resume_all()
...                             <- not here","At the moment, Measure resets the two histograms (RTT and jitter) (with 1M elements each) only when Histogram::Insert() is called, i.e., when packets are received. It takes about 10ms, artificially inflating the latency of pending packets. The measurement results will show higher tail latency than it should be.
As a quick fix, this PR adds clear() command to reset histograms in an explicit manner, so that the Measure module can perform Histogram::Insert() without delayed by histogram reset.
bess.pause_all()
stats = measure.get_summary()
measure.clear()                 <- histograms are reset here
bess.resume_all()
...                             <- not here",True,{}
NetSys/bess,https://github.com/NetSys/bess,412,2017-04-24T23:00:55Z,2017-04-27T21:17:16Z,2017-04-27T21:18:32Z,MERGED,True,8,6,3,https://github.com/sangjinhan,Add clear() command to Measure module,1,[],https://github.com/NetSys/bess/pull/412,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/412#issuecomment-296845487,"At the moment, Measure resets the two histograms (RTT and jitter) (with 1M elements each) only when Histogram::Insert() is called, i.e., when packets are received. It takes about 10ms, artificially inflating the latency of pending packets. The measurement results will show higher tail latency than it should be.
As a quick fix, this PR adds clear() command to reset histograms in an explicit manner, so that the Measure module can perform Histogram::Insert() without delayed by histogram reset.
bess.pause_all()
stats = measure.get_summary()
measure.clear()                 <- histograms are reset here
bess.resume_all()
...                             <- not here","Codecov Report

Merging #412 into master will decrease coverage by 6%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #412    +/-   ##
======================================
- Coverage      29%    23%    -6%     
======================================
  Files         160    160            
  Lines        8156   8160     +4     
======================================
- Hits         2369   1895   -474     
- Misses       5787   6265   +478



Impacted Files
Coverage Δ





core/modules/measure.h
0% <ø> (ø)
⬆️


core/modules/measure.cc
4% <0%> (ø)
⬇️


core/modules/wildcard_match.h
0% <0%> (-93%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-84%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


core/utils/cuckoo_map.h
0% <0%> (-57%)
⬇️


core/message.h
16% <0%> (-55%)
⬇️


core/metadata.cc
22% <0%> (-45%)
⬇️


core/metadata.h
20% <0%> (-40%)
⬇️


... and 17 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 917c9d5...0a8bcb1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,412,2017-04-24T23:00:55Z,2017-04-27T21:17:16Z,2017-04-27T21:18:32Z,MERGED,True,8,6,3,https://github.com/sangjinhan,Add clear() command to Measure module,1,[],https://github.com/NetSys/bess/pull/412,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/412#issuecomment-297842021,"At the moment, Measure resets the two histograms (RTT and jitter) (with 1M elements each) only when Histogram::Insert() is called, i.e., when packets are received. It takes about 10ms, artificially inflating the latency of pending packets. The measurement results will show higher tail latency than it should be.
As a quick fix, this PR adds clear() command to reset histograms in an explicit manner, so that the Measure module can perform Histogram::Insert() without delayed by histogram reset.
bess.pause_all()
stats = measure.get_summary()
measure.clear()                 <- histograms are reset here
bess.resume_all()
...                             <- not here",,True,{}
NetSys/bess,https://github.com/NetSys/bess,413,2017-04-25T00:24:52Z,2017-04-26T16:21:59Z,2017-04-26T16:24:43Z,MERGED,True,100,48,4,https://github.com/ddiproietto,Add and connect modules without stopping workers,7,[],https://github.com/NetSys/bess/pull/413,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/413,"WIth this changes, it's possible to add modules and connect them (as long as they're not in use).","WIth this changes, it's possible to add modules and connect them (as long as they're not in use).",True,{}
NetSys/bess,https://github.com/NetSys/bess,413,2017-04-25T00:24:52Z,2017-04-26T16:21:59Z,2017-04-26T16:24:43Z,MERGED,True,100,48,4,https://github.com/ddiproietto,Add and connect modules without stopping workers,7,[],https://github.com/NetSys/bess/pull/413,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/413#issuecomment-296861445,"WIth this changes, it's possible to add modules and connect them (as long as they're not in use).","Codecov Report

Merging #413 into master will decrease coverage by 13%.
The diff coverage is 2%.


@@           Coverage Diff           @@
##           master   #413     +/-   ##
=======================================
- Coverage      29%    16%    -13%     
=======================================
  Files         160    160             
  Lines        8156   8184     +28     
=======================================
- Hits         2369   1333   -1036     
- Misses       5787   6851   +1064



Impacted Files
Coverage Δ





core/worker.h
84% <ø> (ø)
⬆️


core/worker.cc
68% <0%> (-13%)
⬇️


core/bessctl.cc
15% <2%> (-16%)
⬇️


core/modules/wildcard_match.h
0% <0%> (-93%)
⬇️


core/modules/vlan_push.cc
10% <0%> (-90%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-84%)
⬇️


core/modules/rewrite.cc
4% <0%> (-78%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/rewrite.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


... and 29 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 917c9d5...41ddbf9. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,413,2017-04-25T00:24:52Z,2017-04-26T16:21:59Z,2017-04-26T16:24:43Z,MERGED,True,100,48,4,https://github.com/ddiproietto,Add and connect modules without stopping workers,7,[],https://github.com/NetSys/bess/pull/413,https://github.com/barath,3,https://github.com/NetSys/bess/pull/413#issuecomment-297168897,"WIth this changes, it's possible to add modules and connect them (as long as they're not in use).","BESS code looks good, maybe someone can look at the bessctl code?",True,{}
NetSys/bess,https://github.com/NetSys/bess,413,2017-04-25T00:24:52Z,2017-04-26T16:21:59Z,2017-04-26T16:24:43Z,MERGED,True,100,48,4,https://github.com/ddiproietto,Add and connect modules without stopping workers,7,[],https://github.com/NetSys/bess/pull/413,https://github.com/barath,4,https://github.com/NetSys/bess/pull/413#issuecomment-297465783,"WIth this changes, it's possible to add modules and connect them (as long as they're not in use).",,True,{}
NetSys/bess,https://github.com/NetSys/bess,414,2017-04-25T00:25:38Z,2017-04-25T03:48:55Z,2017-04-25T03:53:12Z,MERGED,True,8,0,1,https://github.com/ddiproietto,traffic_class: Fix descendant removal from RR TC.,1,[],https://github.com/NetSys/bess/pull/414,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/414,"If the last unblocked child is blocked or removed, next_child_ must
wrap around, otherwise bessd may crash.
To reproduce:
daemon start
run samples/roundrobin
add module Queue queue0
delete module queue0
add module Queue queue0
delete module queue0
...","If the last unblocked child is blocked or removed, next_child_ must
wrap around, otherwise bessd may crash.
To reproduce:
daemon start
run samples/roundrobin
add module Queue queue0
delete module queue0
add module Queue queue0
delete module queue0
...",True,{}
NetSys/bess,https://github.com/NetSys/bess,414,2017-04-25T00:25:38Z,2017-04-25T03:48:55Z,2017-04-25T03:53:12Z,MERGED,True,8,0,1,https://github.com/ddiproietto,traffic_class: Fix descendant removal from RR TC.,1,[],https://github.com/NetSys/bess/pull/414,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/414#issuecomment-296863517,"If the last unblocked child is blocked or removed, next_child_ must
wrap around, otherwise bessd may crash.
To reproduce:
daemon start
run samples/roundrobin
add module Queue queue0
delete module queue0
add module Queue queue0
delete module queue0
...","Codecov Report

Merging #414 into master will decrease coverage by 8%.
The diff coverage is 50%.


@@          Coverage Diff           @@
##           master   #414    +/-   ##
======================================
- Coverage      29%    21%    -8%     
======================================
  Files         160    160            
  Lines        8156   8160     +4     
======================================
- Hits         2369   1706   -663     
- Misses       5787   6454   +667



Impacted Files
Coverage Δ





core/traffic_class.cc
55% <50%> (+27%)
⬆️


core/modules/wildcard_match.h
0% <0%> (-93%)
⬇️


core/modules/vlan_push.cc
10% <0%> (-90%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-84%)
⬇️


core/modules/rewrite.cc
4% <0%> (-78%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/rewrite.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


core/utils/cuckoo_map.h
0% <0%> (-57%)
⬇️


core/message.h
16% <0%> (-55%)
⬇️


... and 23 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 917c9d5...2e24372. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,414,2017-04-25T00:25:38Z,2017-04-25T03:48:55Z,2017-04-25T03:53:12Z,MERGED,True,8,0,1,https://github.com/ddiproietto,traffic_class: Fix descendant removal from RR TC.,1,[],https://github.com/NetSys/bess/pull/414,https://github.com/barath,3,https://github.com/NetSys/bess/pull/414#issuecomment-296892940,"If the last unblocked child is blocked or removed, next_child_ must
wrap around, otherwise bessd may crash.
To reproduce:
daemon start
run samples/roundrobin
add module Queue queue0
delete module queue0
add module Queue queue0
delete module queue0
...",,True,{}
NetSys/bess,https://github.com/NetSys/bess,415,2017-04-25T00:44:40Z,2017-04-25T19:48:01Z,2017-04-25T19:48:25Z,MERGED,True,7,3,3,https://github.com/nrdmao,Add a modules option to load the modules from an arbitrary directory,2,[],https://github.com/NetSys/bess/pull/415,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/415,"This option provides a degree of flexibility to BESS installations where the location of bessd is decouple from the location of the module .so's. For example, for consistency with other system daemons, one might install bessd in /usr/bin but the module .so's in /usr/lib/bess/modules. Under such circumstances bessd may be started as such: bessd -modules /usr/lib/bess/modules","This option provides a degree of flexibility to BESS installations where the location of bessd is decouple from the location of the module .so's. For example, for consistency with other system daemons, one might install bessd in /usr/bin but the module .so's in /usr/lib/bess/modules. Under such circumstances bessd may be started as such: bessd -modules /usr/lib/bess/modules",True,{}
NetSys/bess,https://github.com/NetSys/bess,415,2017-04-25T00:44:40Z,2017-04-25T19:48:01Z,2017-04-25T19:48:25Z,MERGED,True,7,3,3,https://github.com/nrdmao,Add a modules option to load the modules from an arbitrary directory,2,[],https://github.com/NetSys/bess/pull/415,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/415#issuecomment-296865800,"This option provides a degree of flexibility to BESS installations where the location of bessd is decouple from the location of the module .so's. For example, for consistency with other system daemons, one might install bessd in /usr/bin but the module .so's in /usr/lib/bess/modules. Under such circumstances bessd may be started as such: bessd -modules /usr/lib/bess/modules","Codecov Report

Merging #415 into master will decrease coverage by 8%.
The diff coverage is 50%.


@@          Coverage Diff           @@
##           master   #415    +/-   ##
======================================
- Coverage      29%    21%    -8%     
======================================
  Files         160    160            
  Lines        8156   8162     +6     
======================================
- Hits         2369   1707   -662     
- Misses       5787   6455   +668



Impacted Files
Coverage Δ





core/opts.cc
80% <100%> (+1%)
⬆️


core/main.cc
89% <33%> (-3%)
⬇️


core/modules/wildcard_match.h
0% <0%> (-93%)
⬇️


core/modules/vlan_push.cc
10% <0%> (-90%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-84%)
⬇️


core/modules/rewrite.cc
4% <0%> (-78%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/rewrite.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


core/utils/cuckoo_map.h
0% <0%> (-57%)
⬇️


... and 24 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 917c9d5...4a035e4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,415,2017-04-25T00:44:40Z,2017-04-25T19:48:01Z,2017-04-25T19:48:25Z,MERGED,True,7,3,3,https://github.com/nrdmao,Add a modules option to load the modules from an arbitrary directory,2,[],https://github.com/NetSys/bess/pull/415,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/415#issuecomment-297144360,"This option provides a degree of flexibility to BESS installations where the location of bessd is decouple from the location of the module .so's. For example, for consistency with other system daemons, one might install bessd in /usr/bin but the module .so's in /usr/lib/bess/modules. Under such circumstances bessd may be started as such: bessd -modules /usr/lib/bess/modules",,True,{}
NetSys/bess,https://github.com/NetSys/bess,416,2017-04-25T16:16:13Z,2017-04-27T05:36:37Z,2017-04-27T05:37:00Z,MERGED,True,99,41,9,https://github.com/apanda,Constraint checks pt 3,8,[],https://github.com/NetSys/bess/pull/416,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/416,"Run constraint checks before resuming by default. Most failures are
recorded on the log, fatal failures cause resume to fail.","Run constraint checks before resuming by default. Most failures are
recorded on the log, fatal failures cause resume to fail.",True,{}
NetSys/bess,https://github.com/NetSys/bess,416,2017-04-25T16:16:13Z,2017-04-27T05:36:37Z,2017-04-27T05:37:00Z,MERGED,True,99,41,9,https://github.com/apanda,Constraint checks pt 3,8,[],https://github.com/NetSys/bess/pull/416,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/416#issuecomment-297260483,"Run constraint checks before resuming by default. Most failures are
recorded on the log, fatal failures cause resume to fail.","Codecov Report

Merging #416 into master will increase coverage by 5%.
The diff coverage is 83%.


@@          Coverage Diff           @@
##           master   #416    +/-   ##
======================================
+ Coverage      16%    21%    +5%     
======================================
  Files         160    160            
  Lines        8184   8211    +27     
======================================
+ Hits         1333   1723   +390     
+ Misses       6851   6488   -363



Impacted Files
Coverage Δ





core/worker.h
84% <ø> (ø)
⬆️


core/modules/queue.h
0% <0%> (ø)
⬆️


core/modules/sink.h
50% <100%> (-50%)
⬇️


core/module.h
62% <100%> (+15%)
⬆️


core/worker.cc
69% <100%> (+1%)
⬆️


core/bessctl.cc
20% <83%> (+5%)
⬆️


core/module.cc
51% <84%> (+22%)
⬆️


core/modules/flowgen.cc
66% <0%> (-2%)
⬇️


core/modules/flowgen.h
67% <0%> (ø)
⬆️


core/scheduler.h
49% <0%> (+1%)
⬆️


... and 21 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f73d0ab...170224d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,416,2017-04-25T16:16:13Z,2017-04-27T05:36:37Z,2017-04-27T05:37:00Z,MERGED,True,99,41,9,https://github.com/apanda,Constraint checks pt 3,8,[],https://github.com/NetSys/bess/pull/416,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/416#issuecomment-297467522,"Run constraint checks before resuming by default. Most failures are
recorded on the log, fatal failures cause resume to fail.",@barath Resolved your comment.,True,{}
NetSys/bess,https://github.com/NetSys/bess,416,2017-04-25T16:16:13Z,2017-04-27T05:36:37Z,2017-04-27T05:37:00Z,MERGED,True,99,41,9,https://github.com/apanda,Constraint checks pt 3,8,[],https://github.com/NetSys/bess/pull/416,https://github.com/apanda,4,https://github.com/NetSys/bess/pull/416#issuecomment-297528490,"Run constraint checks before resuming by default. Most failures are
recorded on the log, fatal failures cause resume to fail.",@barath @sangjinhan @ddiproietto added the attach_orphans change from the e-mail.,True,{}
NetSys/bess,https://github.com/NetSys/bess,416,2017-04-25T16:16:13Z,2017-04-27T05:36:37Z,2017-04-27T05:37:00Z,MERGED,True,99,41,9,https://github.com/apanda,Constraint checks pt 3,8,[],https://github.com/NetSys/bess/pull/416,https://github.com/barath,5,https://github.com/NetSys/bess/pull/416#issuecomment-297616674,"Run constraint checks before resuming by default. Most failures are
recorded on the log, fatal failures cause resume to fail.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,417,2017-04-26T18:10:25Z,2017-04-27T21:14:40Z,2017-04-27T21:18:31Z,MERGED,True,6,5,2,https://github.com/sangjinhan,"Do not use ""name"" as a field name",1,[],https://github.com/NetSys/bess/pull/417,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/417,"The Split module has a protobuf type called SplitArg, which has name field for attribute name. name shouldn't be used as a field name though, since it is reserved for module name, e.g., Split(name='split0', name='attr_foo', size=4) has two names in its parameter list, causing an error.
This PR changes the field name to attribute, which is the field name used by other modules, including ExactMatch, SetMetadata, etc.
I think there should be some systematic way to check if name is misused in module_msg.proto, but I am not sure what the best way would be...","The Split module has a protobuf type called SplitArg, which has name field for attribute name. name shouldn't be used as a field name though, since it is reserved for module name, e.g., Split(name='split0', name='attr_foo', size=4) has two names in its parameter list, causing an error.
This PR changes the field name to attribute, which is the field name used by other modules, including ExactMatch, SetMetadata, etc.
I think there should be some systematic way to check if name is misused in module_msg.proto, but I am not sure what the best way would be...",True,{}
NetSys/bess,https://github.com/NetSys/bess,417,2017-04-26T18:10:25Z,2017-04-27T21:14:40Z,2017-04-27T21:18:31Z,MERGED,True,6,5,2,https://github.com/sangjinhan,"Do not use ""name"" as a field name",1,[],https://github.com/NetSys/bess/pull/417,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/417#issuecomment-297495371,"The Split module has a protobuf type called SplitArg, which has name field for attribute name. name shouldn't be used as a field name though, since it is reserved for module name, e.g., Split(name='split0', name='attr_foo', size=4) has two names in its parameter list, causing an error.
This PR changes the field name to attribute, which is the field name used by other modules, including ExactMatch, SetMetadata, etc.
I think there should be some systematic way to check if name is misused in module_msg.proto, but I am not sure what the best way would be...","Codecov Report

Merging #417 into master will increase coverage by 9%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #417    +/-   ##
======================================
+ Coverage      16%    25%    +9%     
======================================
  Files         160    160            
  Lines        8184   8503   +319     
======================================
+ Hits         1333   2113   +780     
+ Misses       6851   6390   -461



Impacted Files
Coverage Δ





core/modules/split.cc
3% <0%> (ø)
⬆️


core/worker.cc
72% <0%> (+3%)
⬆️


core/utils/extended_priority_queue.h
4% <0%> (+4%)
⬆️


core/packet.h
32% <0%> (+6%)
⬆️


core/utils/copy.h
45% <0%> (+7%)
⬆️


core/module.h
55% <0%> (+8%)
⬆️


core/module.cc
39% <0%> (+10%)
⬆️


core/bessctl.cc
31% <0%> (+16%)
⬆️


core/pktbatch.h
80% <0%> (+30%)
⬆️


core/packet_avx.h
88% <0%> (+33%)
⬆️


... and 12 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f73d0ab...71ac176. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,417,2017-04-26T18:10:25Z,2017-04-27T21:14:40Z,2017-04-27T21:18:31Z,MERGED,True,6,5,2,https://github.com/sangjinhan,"Do not use ""name"" as a field name",1,[],https://github.com/NetSys/bess/pull/417,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/417#issuecomment-297841451,"The Split module has a protobuf type called SplitArg, which has name field for attribute name. name shouldn't be used as a field name though, since it is reserved for module name, e.g., Split(name='split0', name='attr_foo', size=4) has two names in its parameter list, causing an error.
This PR changes the field name to attribute, which is the field name used by other modules, including ExactMatch, SetMetadata, etc.
I think there should be some systematic way to check if name is misused in module_msg.proto, but I am not sure what the best way would be...",,True,{}
NetSys/bess,https://github.com/NetSys/bess,418,2017-04-26T18:43:49Z,2017-04-28T21:47:21Z,2017-04-28T21:47:41Z,MERGED,True,11,6,3,https://github.com/changlan,IPLookup: Parameterize max_rules and max_tbl8s,1,[],https://github.com/NetSys/bess/pull/418,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/418,max_rules and number_tbl8s of rte_lpm were hardcoded. This PR makes them parameters of the module.,max_rules and number_tbl8s of rte_lpm were hardcoded. This PR makes them parameters of the module.,True,{}
NetSys/bess,https://github.com/NetSys/bess,418,2017-04-26T18:43:49Z,2017-04-28T21:47:21Z,2017-04-28T21:47:41Z,MERGED,True,11,6,3,https://github.com/changlan,IPLookup: Parameterize max_rules and max_tbl8s,1,[],https://github.com/NetSys/bess/pull/418,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/418#issuecomment-297516317,max_rules and number_tbl8s of rte_lpm were hardcoded. This PR makes them parameters of the module.,"Codecov Report

Merging #418 into master will increase coverage by 6%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #418    +/-   ##
======================================
+ Coverage      16%    22%    +6%     
======================================
  Files         160    160            
  Lines        8199   8653   +454     
======================================
+ Hits         1336   1897   +561     
+ Misses       6863   6756   -107



Impacted Files
Coverage Δ





core/modules/ip_lookup.h
0% <ø> (ø)
⬆️


core/modules/ip_lookup.cc
3% <0%> (ø)
⬇️


core/modules/flowgen.h
40% <0%> (-27%)
⬇️


core/modules/flowgen.cc
46% <0%> (-20%)
⬇️


core/worker.cc
66% <0%> (-2%)
⬇️


core/opts.cc
79% <0%> (-1%)
⬇️


core/bessctl.cc
21% <0%> (+6%)
⬆️


core/module.h
54% <0%> (+7%)
⬆️


core/packet.h
34% <0%> (+9%)
⬆️


core/module.cc
39% <0%> (+10%)
⬆️


... and 18 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update caca727...0f3923f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,418,2017-04-26T18:43:49Z,2017-04-28T21:47:21Z,2017-04-28T21:47:41Z,MERGED,True,11,6,3,https://github.com/changlan,IPLookup: Parameterize max_rules and max_tbl8s,1,[],https://github.com/NetSys/bess/pull/418,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/418#issuecomment-297526615,max_rules and number_tbl8s of rte_lpm were hardcoded. This PR makes them parameters of the module.,"Sorry I wasn't very clear on this. Could you also add max_tbl8s (or a different name) as well? It refers to the maximum number of IP prefixes with smaller than /24, and the default value might be not enough for wide-area FIBs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,418,2017-04-26T18:43:49Z,2017-04-28T21:47:21Z,2017-04-28T21:47:41Z,MERGED,True,11,6,3,https://github.com/changlan,IPLookup: Parameterize max_rules and max_tbl8s,1,[],https://github.com/NetSys/bess/pull/418,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/418#issuecomment-298114382,max_rules and number_tbl8s of rte_lpm were hardcoded. This PR makes them parameters of the module.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,419,2017-04-26T22:14:01Z,2017-04-28T18:57:59Z,2017-04-29T01:33:37Z,MERGED,True,24,64,9,https://github.com/changlan,module: Remove `burst` from Init arguments,1,[],https://github.com/NetSys/bess/pull/419,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/419,And set burst_ to default kMaxBurst on module initialization,And set burst_ to default kMaxBurst on module initialization,True,{}
NetSys/bess,https://github.com/NetSys/bess,419,2017-04-26T22:14:01Z,2017-04-28T18:57:59Z,2017-04-29T01:33:37Z,MERGED,True,24,64,9,https://github.com/changlan,module: Remove `burst` from Init arguments,1,[],https://github.com/NetSys/bess/pull/419,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/419#issuecomment-297557781,And set burst_ to default kMaxBurst on module initialization,"Let me add some backgrounds for this PR:

Given that all those modules support a separate command set_burst(), supporting the burst parameter also in Init() is somewhat redundant.
Init() and SetBurst() behave differently with burst == 0, which is a little confusing.",True,{'THUMBS_UP': ['https://github.com/changlan']}
NetSys/bess,https://github.com/NetSys/bess,419,2017-04-26T22:14:01Z,2017-04-28T18:57:59Z,2017-04-29T01:33:37Z,MERGED,True,24,64,9,https://github.com/changlan,module: Remove `burst` from Init arguments,1,[],https://github.com/NetSys/bess/pull/419,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/419#issuecomment-297567629,And set burst_ to default kMaxBurst on module initialization,"Codecov Report

Merging #419 into master will increase coverage by 9%.
The diff coverage is 27%.


@@          Coverage Diff           @@
##           master   #419    +/-   ##
======================================
+ Coverage      23%    32%    +9%     
======================================
  Files         160    160            
  Lines        8211   8716   +505     
======================================
+ Hits         1899   2773   +874     
+ Misses       6312   5943   -369



Impacted Files
Coverage Δ





core/modules/queue_inc.h
0% <ø> (ø)
⬆️


core/modules/port_inc.h
50% <ø> (+50%)
⬆️


core/modules/queue.h
0% <ø> (ø)
⬆️


core/modules/queue_inc.cc
5% <0%> (ø)
⬆️


core/modules/queue.cc
3% <0%> (ø)
⬆️


core/modules/flowgen.cc
67% <100%> (+66%)
⬆️


core/modules/source.cc
48% <100%> (+3%)
⬆️


core/modules/port_inc.cc
70% <40%> (+65%)
⬆️


core/modules/ip_lookup.cc
4% <0%> (-61%)
⬇️


core/modules/ip_lookup.h
0% <0%> (-50%)
⬇️


... and 31 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1311bcf...0f6fd21. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,419,2017-04-26T22:14:01Z,2017-04-28T18:57:59Z,2017-04-29T01:33:37Z,MERGED,True,24,64,9,https://github.com/changlan,module: Remove `burst` from Init arguments,1,[],https://github.com/NetSys/bess/pull/419,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/419#issuecomment-298080057,And set burst_ to default kMaxBurst on module initialization,,True,{}
NetSys/bess,https://github.com/NetSys/bess,420,2017-04-27T01:01:36Z,2017-04-30T20:49:12Z,2017-05-02T22:23:08Z,MERGED,True,20,17,2,https://github.com/ddiproietto,module: Optimize RunModuleSplit().,1,[],https://github.com/NetSys/bess/pull/420,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/420,"This commit adds a level of indirection to the splits_ thread local
variable: instead of keeping an entire batch for each possible output
gate, we keep a pointer to a batch.
This makes RunModuleSplit() faster, because we avoid copying the whole
batch (we only use a pointer now).
I tried running samples/acl on my laptop before and after the change
and looking at how many packets are generated by source0:



source0 burst
before (Mpps)
after (Mpps)




32
83.4
92.5


1
16.7
17.6","This commit adds a level of indirection to the splits_ thread local
variable: instead of keeping an entire batch for each possible output
gate, we keep a pointer to a batch.
This makes RunModuleSplit() faster, because we avoid copying the whole
batch (we only use a pointer now).
I tried running samples/acl on my laptop before and after the change
and looking at how many packets are generated by source0:



source0 burst
before (Mpps)
after (Mpps)




32
83.4
92.5


1
16.7
17.6",True,{}
NetSys/bess,https://github.com/NetSys/bess,420,2017-04-27T01:01:36Z,2017-04-30T20:49:12Z,2017-05-02T22:23:08Z,MERGED,True,20,17,2,https://github.com/ddiproietto,module: Optimize RunModuleSplit().,1,[],https://github.com/NetSys/bess/pull/420,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/420#issuecomment-298110442,"This commit adds a level of indirection to the splits_ thread local
variable: instead of keeping an entire batch for each possible output
gate, we keep a pointer to a batch.
This makes RunModuleSplit() faster, because we avoid copying the whole
batch (we only use a pointer now).
I tried running samples/acl on my laptop before and after the change
and looking at how many packets are generated by source0:



source0 burst
before (Mpps)
after (Mpps)




32
83.4
92.5


1
16.7
17.6","Codecov Report

Merging #420 into master will increase coverage by 14%.
The diff coverage is 55%.


@@           Coverage Diff           @@
##           master   #420     +/-   ##
=======================================
+ Coverage      16%    31%    +14%     
=======================================
  Files         160    160             
  Lines        8199   8963    +764     
=======================================
+ Hits         1336   2757   +1421     
+ Misses       6863   6206    -657



Impacted Files
Coverage Δ





core/worker.h
86% <ø> (+2%)
⬆️


core/module.cc
44% <55%> (+15%)
⬆️


core/modules/queue_inc.cc
4% <0%> (ø)
⬇️


core/modules/sink.h
100% <0%> (ø)
⬆️


core/modules/flowgen.cc
67% <0%> (+1%)
⬆️


core/modules/measure.cc
5% <0%> (+1%)
⬆️


core/modules/split.cc
4% <0%> (+1%)
⬆️


core/utils/copy.h
42% <0%> (+4%)
⬆️


core/utils/extended_priority_queue.h
4% <0%> (+4%)
⬆️


... and 34 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update caca727...05af488. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,420,2017-04-27T01:01:36Z,2017-04-30T20:49:12Z,2017-05-02T22:23:08Z,MERGED,True,20,17,2,https://github.com/ddiproietto,module: Optimize RunModuleSplit().,1,[],https://github.com/NetSys/bess/pull/420,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/420#issuecomment-298256258,"This commit adds a level of indirection to the splits_ thread local
variable: instead of keeping an entire batch for each possible output
gate, we keep a pointer to a batch.
This makes RunModuleSplit() faster, because we avoid copying the whole
batch (we only use a pointer now).
I tried running samples/acl on my laptop before and after the change
and looking at how many packets are generated by source0:



source0 burst
before (Mpps)
after (Mpps)




32
83.4
92.5


1
16.7
17.6",,True,{}
NetSys/bess,https://github.com/NetSys/bess,422,2017-04-27T20:32:31Z,2017-04-29T00:22:53Z,2017-04-29T00:37:59Z,MERGED,True,23,12,3,https://github.com/changlan,module: Fix minor memory leaks,2,[],https://github.com/NetSys/bess/pull/422,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/422,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,422,2017-04-27T20:32:31Z,2017-04-29T00:22:53Z,2017-04-29T00:37:59Z,MERGED,True,23,12,3,https://github.com/changlan,module: Fix minor memory leaks,2,[],https://github.com/NetSys/bess/pull/422,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/422#issuecomment-297842773,,"Codecov Report

Merging #422 into master will increase coverage by 2%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #422    +/-   ##
======================================
+ Coverage      23%    25%    +2%     
======================================
  Files         160    160            
  Lines        8211   8212     +1     
======================================
+ Hits         1899   2068   +169     
+ Misses       6312   6144   -168



Impacted Files
Coverage Δ





core/modules/flowgen.cc
66% <0%> (+65%)
⬆️


core/modules/url_filter.cc
19% <0%> (ø)
⬇️


core/modules/ip_lookup.cc
4% <0%> (-61%)
⬇️


core/modules/l2_forward.h
0% <0%> (-50%)
⬇️


core/modules/ip_lookup.h
0% <0%> (-50%)
⬇️


core/modules/l2_forward.cc
1% <0%> (-43%)
⬇️


core/packet.h
28% <0%> (-2%)
⬇️


core/module.cc
51% <0%> (-2%)
⬇️


core/utils/copy.h
49% <0%> (+4%)
⬆️


core/worker.h
84% <0%> (+5%)
⬆️


... and 7 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1311bcf...5fb13fd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,422,2017-04-27T20:32:31Z,2017-04-29T00:22:53Z,2017-04-29T00:37:59Z,MERGED,True,23,12,3,https://github.com/changlan,module: Fix minor memory leaks,2,[],https://github.com/NetSys/bess/pull/422,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/422#issuecomment-298130015,,"Codecov Report

Merging #422 into master will increase coverage by 9%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #422    +/-   ##
======================================
+ Coverage      23%    33%    +9%     
======================================
  Files         160    160            
  Lines        8211   8478   +267     
======================================
+ Hits         1899   2760   +861     
+ Misses       6312   5718   -594



Impacted Files
Coverage Δ





core/modules/url_filter.cc
19% <0%> (ø)
⬇️


core/modules/flowgen.cc
51% <0%> (+50%)
⬆️


core/utils/trie.h
0% <0%> (ø)
⬆️


core/modules/l2_forward.h
0% <0%> (-50%)
⬇️


core/modules/l2_forward.cc
1% <0%> (-43%)
⬇️


core/modules/ip_lookup.cc
45% <0%> (-19%)
⬇️


core/modules/queue_inc.cc
4% <0%> (ø)
⬇️


core/modules/port_inc.cc
4% <0%> (ø)
⬇️


core/modules/queue.cc
3% <0%> (ø)
⬇️


... and 36 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1311bcf...fff0bff. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,422,2017-04-27T20:32:31Z,2017-04-29T00:22:53Z,2017-04-29T00:37:59Z,MERGED,True,23,12,3,https://github.com/changlan,module: Fix minor memory leaks,2,[],https://github.com/NetSys/bess/pull/422,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/422#issuecomment-298134244,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,423,2017-04-27T21:46:39Z,2017-05-05T04:24:28Z,2017-08-09T01:23:06Z,MERGED,True,85,19,8,https://github.com/melvinw,bessctl: allow pause/resume of individual workers,4,[],https://github.com/NetSys/bess/pull/423,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/423,"Some operations only operate on datastructure within a single worker
(e.g., poking the Measure module). Pausing all workers for such
operations can lead to unecessary packet drops by workers that have
nothing to do with the operation anyway. To the end of making this
behavior avoidable , this patch exposes pause_worker() and
resume_worker() and adds corresponding RPCs.","Some operations only operate on datastructure within a single worker
(e.g., poking the Measure module). Pausing all workers for such
operations can lead to unecessary packet drops by workers that have
nothing to do with the operation anyway. To the end of making this
behavior avoidable , this patch exposes pause_worker() and
resume_worker() and adds corresponding RPCs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,423,2017-04-27T21:46:39Z,2017-05-05T04:24:28Z,2017-08-09T01:23:06Z,MERGED,True,85,19,8,https://github.com/melvinw,bessctl: allow pause/resume of individual workers,4,[],https://github.com/NetSys/bess/pull/423,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/423#issuecomment-297848456,"Some operations only operate on datastructure within a single worker
(e.g., poking the Measure module). Pausing all workers for such
operations can lead to unecessary packet drops by workers that have
nothing to do with the operation anyway. To the end of making this
behavior avoidable , this patch exposes pause_worker() and
resume_worker() and adds corresponding RPCs.",Not quite ready. Needs a sample script,True,{}
NetSys/bess,https://github.com/NetSys/bess,423,2017-04-27T21:46:39Z,2017-05-05T04:24:28Z,2017-08-09T01:23:06Z,MERGED,True,85,19,8,https://github.com/melvinw,bessctl: allow pause/resume of individual workers,4,[],https://github.com/NetSys/bess/pull/423,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/423#issuecomment-297855202,"Some operations only operate on datastructure within a single worker
(e.g., poking the Measure module). Pausing all workers for such
operations can lead to unecessary packet drops by workers that have
nothing to do with the operation anyway. To the end of making this
behavior avoidable , this patch exposes pause_worker() and
resume_worker() and adds corresponding RPCs.","Codecov Report

Merging #423 into master will decrease coverage by 6%.
The diff coverage is 17%.


@@          Coverage Diff           @@
##           master   #423    +/-   ##
======================================
- Coverage      29%    23%    -6%     
======================================
  Files         160    160            
  Lines        8214   8224    +10     
======================================
- Hits         2393   1894   -499     
- Misses       5821   6330   +509



Impacted Files
Coverage Δ





core/worker.h
84% <ø> (ø)
⬆️


core/bessctl.cc
19% <0%> (-19%)
⬇️


core/worker.cc
69% <100%> (-6%)
⬇️


core/modules/generic_encap.cc
2% <0%> (-88%)
⬇️


core/drivers/unix_socket.cc
1% <0%> (-82%)
⬇️


core/modules/port_out.cc
3% <0%> (-72%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


core/modules/port_inc.cc
4% <0%> (-62%)
⬇️


core/modules/random_update.cc
4% <0%> (-59%)
⬇️


... and 29 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3e7cd18...05236df. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,423,2017-04-27T21:46:39Z,2017-05-05T04:24:28Z,2017-08-09T01:23:06Z,MERGED,True,85,19,8,https://github.com/melvinw,bessctl: allow pause/resume of individual workers,4,[],https://github.com/NetSys/bess/pull/423,https://github.com/apanda,4,https://github.com/NetSys/bess/pull/423#issuecomment-297889449,"Some operations only operate on datastructure within a single worker
(e.g., poking the Measure module). Pausing all workers for such
operations can lead to unecessary packet drops by workers that have
nothing to do with the operation anyway. To the end of making this
behavior avoidable , this patch exposes pause_worker() and
resume_worker() and adds corresponding RPCs.",Recently @sangjinhan mentioned it seemed unlikely we would pause individual workers -- in particular there were existing bugs with things like attach_workers if this happened. I added him to get his opinion.,True,{}
NetSys/bess,https://github.com/NetSys/bess,423,2017-04-27T21:46:39Z,2017-05-05T04:24:28Z,2017-08-09T01:23:06Z,MERGED,True,85,19,8,https://github.com/melvinw,bessctl: allow pause/resume of individual workers,4,[],https://github.com/NetSys/bess/pull/423,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/423#issuecomment-298079154,"Some operations only operate on datastructure within a single worker
(e.g., poking the Measure module). Pausing all workers for such
operations can lead to unecessary packet drops by workers that have
nothing to do with the operation anyway. To the end of making this
behavior avoidable , this patch exposes pause_worker() and
resume_worker() and adds corresponding RPCs.","Oh, what I meant was there is no ""current"" use case in bessctl/conf sample scripts, not saying it would be unnecessary in the future. There would be some scenarios that pausing a single worker is enough (e.g., manipulating a scheduler TC tree).
In general, the reason why I chose not to expose knobs for pausing/resuming individual workers is:

It is hard to know (especially for a controller) whether pausing a single worker is enough to do some particular operations. For example, as far as the Flowgen modules in the sample script are concerned, it is clear that only one worker thread is dealing with the module. But in general cases it might not be true. I think we should not assume controllers doing right things...

By the way, did you check if the sample script actually works? The update() command seems still marked as not thread-safe. No matter whether a single worker is running or paused, it would be rejected by bessctl.cc if not all workers are paused (unless there was only one worker).",True,{}
NetSys/bess,https://github.com/NetSys/bess,423,2017-04-27T21:46:39Z,2017-05-05T04:24:28Z,2017-08-09T01:23:06Z,MERGED,True,85,19,8,https://github.com/melvinw,bessctl: allow pause/resume of individual workers,4,[],https://github.com/NetSys/bess/pull/423,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/423#issuecomment-298101046,"Some operations only operate on datastructure within a single worker
(e.g., poking the Measure module). Pausing all workers for such
operations can lead to unecessary packet drops by workers that have
nothing to do with the operation anyway. To the end of making this
behavior avoidable , this patch exposes pause_worker() and
resume_worker() and adds corresponding RPCs.","Ah, okay. I'm fine with killing this PR for now or, alternatively, marking this code as POTENTIALLY DANGEROUS and making it more clear in the documentation what the appropriate use cases may be. I'll do that and update the logic in bessctl.cc if we keep it open (sorry, I neglected to test the sample script before submitting this).",True,{}
NetSys/bess,https://github.com/NetSys/bess,423,2017-04-27T21:46:39Z,2017-05-05T04:24:28Z,2017-08-09T01:23:06Z,MERGED,True,85,19,8,https://github.com/melvinw,bessctl: allow pause/resume of individual workers,4,[],https://github.com/NetSys/bess/pull/423,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/423#issuecomment-298110672,"Some operations only operate on datastructure within a single worker
(e.g., poking the Measure module). Pausing all workers for such
operations can lead to unecessary packet drops by workers that have
nothing to do with the operation anyway. To the end of making this
behavior avoidable , this patch exposes pause_worker() and
resume_worker() and adds corresponding RPCs.","Perhaps you can add LOG(WARN) for PauseWorker() in bessctl.cc, saying ""experimental"" and ""support may discontinue""?",True,{}
NetSys/bess,https://github.com/NetSys/bess,423,2017-04-27T21:46:39Z,2017-05-05T04:24:28Z,2017-08-09T01:23:06Z,MERGED,True,85,19,8,https://github.com/melvinw,bessctl: allow pause/resume of individual workers,4,[],https://github.com/NetSys/bess/pull/423,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/423#issuecomment-299369702,"Some operations only operate on datastructure within a single worker
(e.g., poking the Measure module). Pausing all workers for such
operations can lead to unecessary packet drops by workers that have
nothing to do with the operation anyway. To the end of making this
behavior avoidable , this patch exposes pause_worker() and
resume_worker() and adds corresponding RPCs.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,424,2017-04-27T23:35:21Z,2017-04-30T00:26:17Z,2017-04-30T00:26:40Z,MERGED,True,73,40,4,https://github.com/apanda,Account for chains with cycles,4,[],https://github.com/NetSys/bess/pull/424,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/424,"My constraint checking code assumed there were no cycles, this is not
true for cases such as the NAT. Addresses issue #421","My constraint checking code assumed there were no cycles, this is not
true for cases such as the NAT. Addresses issue #421",True,{}
NetSys/bess,https://github.com/NetSys/bess,424,2017-04-27T23:35:21Z,2017-04-30T00:26:17Z,2017-04-30T00:26:40Z,MERGED,True,73,40,4,https://github.com/apanda,Account for chains with cycles,4,[],https://github.com/NetSys/bess/pull/424,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/424#issuecomment-297876758,"My constraint checking code assumed there were no cycles, this is not
true for cases such as the NAT. Addresses issue #421","Codecov Report

Merging #424 into master will decrease coverage by 5%.
The diff coverage is 80%.


@@          Coverage Diff           @@
##           master   #424    +/-   ##
======================================
- Coverage      29%    24%    -5%     
======================================
  Files         160    160            
  Lines        8214   8228    +14     
======================================
- Hits         2393   1996   -397     
- Misses       5821   6232   +411



Impacted Files
Coverage Δ





core/bessctl.cc
32% <0%> (-7%)
⬇️


core/module.h
58% <100%> (-10%)
⬇️


core/module.cc
45% <81%> (-1%)
⬇️


core/modules/generic_encap.cc
2% <0%> (-88%)
⬇️


core/drivers/unix_socket.cc
1% <0%> (-82%)
⬇️


core/modules/port_out.cc
3% <0%> (-72%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


core/modules/port_inc.cc
4% <0%> (-62%)
⬇️


core/modules/random_update.cc
4% <0%> (-59%)
⬇️


... and 28 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3e7cd18...4bd9c54. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,424,2017-04-27T23:35:21Z,2017-04-30T00:26:17Z,2017-04-30T00:26:40Z,MERGED,True,73,40,4,https://github.com/apanda,Account for chains with cycles,4,[],https://github.com/NetSys/bess/pull/424,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/424#issuecomment-298173249,"My constraint checking code assumed there were no cycles, this is not
true for cases such as the NAT. Addresses issue #421","@barath, @sangjinhan your comments should be addressed at this point.",True,{}
NetSys/bess,https://github.com/NetSys/bess,424,2017-04-27T23:35:21Z,2017-04-30T00:26:17Z,2017-04-30T00:26:40Z,MERGED,True,73,40,4,https://github.com/apanda,Account for chains with cycles,4,[],https://github.com/NetSys/bess/pull/424,https://github.com/codecov-io,4,https://github.com/NetSys/bess/pull/424#issuecomment-298175101,"My constraint checking code assumed there were no cycles, this is not
true for cases such as the NAT. Addresses issue #421","Codecov Report

Merging #424 into master will decrease coverage by <1%.
The diff coverage is 72%.


@@          Coverage Diff           @@
##           master   #424    +/-   ##
======================================
- Coverage      24%    24%   -<1%     
======================================
  Files         160    160            
  Lines        8196   8211    +15     
======================================
+ Hits         1950   1953     +3     
- Misses       6246   6258    +12



Impacted Files
Coverage Δ





core/bessctl.cc
32% <0%> (+12%)
⬆️


core/module.h
59% <100%> (-3%)
⬇️


core/module.cc
43% <69%> (-10%)
⬇️


core/modules/exact_match.h
0% <0%> (-93%)
⬇️


core/modules/exact_match.cc
3% <0%> (-73%)
⬇️


core/modules/ip_lookup.cc
3% <0%> (-62%)
⬇️


core/modules/l2_forward.h
0% <0%> (-50%)
⬇️


core/modules/ip_lookup.h
0% <0%> (-50%)
⬇️


core/modules/l2_forward.cc
1% <0%> (-43%)
⬇️


core/utils/cuckoo_map.h
0% <0%> (-43%)
⬇️


... and 20 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8703b0b...a8778f1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,424,2017-04-27T23:35:21Z,2017-04-30T00:26:17Z,2017-04-30T00:26:40Z,MERGED,True,73,40,4,https://github.com/apanda,Account for chains with cycles,4,[],https://github.com/NetSys/bess/pull/424,https://github.com/barath,5,https://github.com/NetSys/bess/pull/424#issuecomment-298202968,"My constraint checking code assumed there were no cycles, this is not
true for cases such as the NAT. Addresses issue #421",,True,{}
NetSys/bess,https://github.com/NetSys/bess,425,2017-04-28T20:48:03Z,2017-04-28T21:44:08Z,2017-04-28T21:45:06Z,MERGED,True,0,2,1,https://github.com/justinemarie,Remove print statement confirming no-violations.,1,[],https://github.com/NetSys/bess/pull/425,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/425,"The new safety checking features print out ""No violations"" every time one runs a command in bessctl. This gets tedious -- it's likely easier to have the code only print if violations are found, and just silently succeed when there are no problems.","The new safety checking features print out ""No violations"" every time one runs a command in bessctl. This gets tedious -- it's likely easier to have the code only print if violations are found, and just silently succeed when there are no problems.",True,{}
NetSys/bess,https://github.com/NetSys/bess,425,2017-04-28T20:48:03Z,2017-04-28T21:44:08Z,2017-04-28T21:45:06Z,MERGED,True,0,2,1,https://github.com/justinemarie,Remove print statement confirming no-violations.,1,[],https://github.com/NetSys/bess/pull/425,https://github.com/codecov-io,2,https://github.com/NetSys/bess/pull/425#issuecomment-298113716,"The new safety checking features print out ""No violations"" every time one runs a command in bessctl. This gets tedious -- it's likely easier to have the code only print if violations are found, and just silently succeed when there are no problems.","Codecov Report

Merging #425 into master will increase coverage by 14%.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master   #425     +/-   ##
=======================================
+ Coverage      17%    31%    +14%     
=======================================
  Files         160    160             
  Lines        8194   8194             
=======================================
+ Hits         1416   2553   +1137     
+ Misses       6778   5641   -1137



Impacted Files
Coverage Δ





core/utils/extended_priority_queue.h
4% <0%> (+4%)
⬆️


core/packet.h
32% <0%> (+6%)
⬆️


core/gate.cc
31% <0%> (+12%)
⬆️


core/utils/copy.h
50% <0%> (+12%)
⬆️


core/worker.cc
82% <0%> (+13%)
⬆️


core/module.cc
56% <0%> (+14%)
⬆️


core/gate.h
62% <0%> (+14%)
⬆️


core/module.h
71% <0%> (+16%)
⬆️


core/bessctl.cc
40% <0%> (+22%)
⬆️


core/pktbatch.h
70% <0%> (+30%)
⬆️


... and 21 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 93360de...a80090b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,425,2017-04-28T20:48:03Z,2017-04-28T21:44:08Z,2017-04-28T21:45:06Z,MERGED,True,0,2,1,https://github.com/justinemarie,Remove print statement confirming no-violations.,1,[],https://github.com/NetSys/bess/pull/425,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/425#issuecomment-298113935,"The new safety checking features print out ""No violations"" every time one runs a command in bessctl. This gets tedious -- it's likely easier to have the code only print if violations are found, and just silently succeed when there are no problems.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,426,2017-04-28T20:49:09Z,2017-05-02T21:30:27Z,2017-05-02T21:30:44Z,MERGED,True,37,3,3,https://github.com/changlan,git: Fix a number of issues in hooks,2,[],https://github.com/NetSys/bess/pull/426,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/426,"Fix pre-commit hook
Make sure pwd is the root directory of BESS repo
Make sure clang-format and autopep8 exist before installing hooks","Fix pre-commit hook
Make sure pwd is the root directory of BESS repo
Make sure clang-format and autopep8 exist before installing hooks",True,{}
NetSys/bess,https://github.com/NetSys/bess,426,2017-04-28T20:49:09Z,2017-05-02T21:30:27Z,2017-05-02T21:30:44Z,MERGED,True,37,3,3,https://github.com/changlan,git: Fix a number of issues in hooks,2,[],https://github.com/NetSys/bess/pull/426,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/426#issuecomment-298767330,"Fix pre-commit hook
Make sure pwd is the root directory of BESS repo
Make sure clang-format and autopep8 exist before installing hooks",,True,{}
NetSys/bess,https://github.com/NetSys/bess,427,2017-04-30T08:02:27Z,2017-05-03T02:55:30Z,2017-05-03T02:56:10Z,MERGED,True,47,22,1,https://github.com/sangjinhan,Minor updates to git pre-commit hook,10,[],https://github.com/NetSys/bess/pull/427,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/427,"Fix errors caused by @echo
Formatters are now customizable (e.g., clang-format-3.7 instead of clang-format)
Detect corner cases that are not correctly handled by the script:

Bypassed staging with git commit -a or git commit -- <files>
Partial staging with git add --patch


Show reformatting differences in color

Will need to rebase this PR once #426 is merged, since there are some overlaps.","Fix errors caused by @echo
Formatters are now customizable (e.g., clang-format-3.7 instead of clang-format)
Detect corner cases that are not correctly handled by the script:

Bypassed staging with git commit -a or git commit -- <files>
Partial staging with git add --patch


Show reformatting differences in color

Will need to rebase this PR once #426 is merged, since there are some overlaps.",True,{}
NetSys/bess,https://github.com/NetSys/bess,427,2017-04-30T08:02:27Z,2017-05-03T02:55:30Z,2017-05-03T02:56:10Z,MERGED,True,47,22,1,https://github.com/sangjinhan,Minor updates to git pre-commit hook,10,[],https://github.com/NetSys/bess/pull/427,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/427#issuecomment-298417008,"Fix errors caused by @echo
Formatters are now customizable (e.g., clang-format-3.7 instead of clang-format)
Detect corner cases that are not correctly handled by the script:

Bypassed staging with git commit -a or git commit -- <files>
Partial staging with git add --patch


Show reformatting differences in color

Will need to rebase this PR once #426 is merged, since there are some overlaps.",It also fixes the bug that reformat-and-commit doesn't work when two or more files are reformatted.,True,{}
NetSys/bess,https://github.com/NetSys/bess,427,2017-04-30T08:02:27Z,2017-05-03T02:55:30Z,2017-05-03T02:56:10Z,MERGED,True,47,22,1,https://github.com/sangjinhan,Minor updates to git pre-commit hook,10,[],https://github.com/NetSys/bess/pull/427,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/427#issuecomment-298799845,"Fix errors caused by @echo
Formatters are now customizable (e.g., clang-format-3.7 instead of clang-format)
Detect corner cases that are not correctly handled by the script:

Bypassed staging with git commit -a or git commit -- <files>
Partial staging with git add --patch


Show reformatting differences in color

Will need to rebase this PR once #426 is merged, since there are some overlaps.",Rebased to resolve merge conflicts with #426,True,{}
NetSys/bess,https://github.com/NetSys/bess,427,2017-04-30T08:02:27Z,2017-05-03T02:55:30Z,2017-05-03T02:56:10Z,MERGED,True,47,22,1,https://github.com/sangjinhan,Minor updates to git pre-commit hook,10,[],https://github.com/NetSys/bess/pull/427,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/427#issuecomment-298812779,"Fix errors caused by @echo
Formatters are now customizable (e.g., clang-format-3.7 instead of clang-format)
Detect corner cases that are not correctly handled by the script:

Bypassed staging with git commit -a or git commit -- <files>
Partial staging with git add --patch


Show reformatting differences in color

Will need to rebase this PR once #426 is merged, since there are some overlaps.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,428,2017-04-30T23:02:17Z,2017-05-03T22:16:38Z,2017-05-08T06:55:09Z,MERGED,True,5,13,1,https://github.com/sangjinhan,Fix bessctl auto completion with special chars,1,[],https://github.com/NetSys/bess/pull/428,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/428,"readline treats some special characters (including backtick and ~!@#$%^&*()-=+[{]}\|;:'"",<>?/ as delimiters. This behavior interferes with bessctl causing incorrect auto completions. Examples:
localhost:10514 $ track disable *<tab>
localhost:10514 $ track disable ** _
...
localhost:10514 $ run file ~/my-modu<tab>
localhost:10514 $ run file ~/my-my-modules/_

This PR fixes the issue by declaring such characters non-delimiters.","readline treats some special characters (including backtick and ~!@#$%^&*()-=+[{]}\|;:'"",<>?/ as delimiters. This behavior interferes with bessctl causing incorrect auto completions. Examples:
localhost:10514 $ track disable *<tab>
localhost:10514 $ track disable ** _
...
localhost:10514 $ run file ~/my-modu<tab>
localhost:10514 $ run file ~/my-my-modules/_

This PR fixes the issue by declaring such characters non-delimiters.",True,{}
NetSys/bess,https://github.com/NetSys/bess,428,2017-04-30T23:02:17Z,2017-05-03T22:16:38Z,2017-05-08T06:55:09Z,MERGED,True,5,13,1,https://github.com/sangjinhan,Fix bessctl auto completion with special chars,1,[],https://github.com/NetSys/bess/pull/428,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/428#issuecomment-299053534,"readline treats some special characters (including backtick and ~!@#$%^&*()-=+[{]}\|;:'"",<>?/ as delimiters. This behavior interferes with bessctl causing incorrect auto completions. Examples:
localhost:10514 $ track disable *<tab>
localhost:10514 $ track disable ** _
...
localhost:10514 $ run file ~/my-modu<tab>
localhost:10514 $ run file ~/my-my-modules/_

This PR fixes the issue by declaring such characters non-delimiters.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,429,2017-05-01T17:59:01Z,2017-05-02T21:46:17Z,2017-05-08T06:54:43Z,MERGED,True,11,2,4,https://github.com/justinemarie,Move Port and Module classes to general libbess-python.,3,[],https://github.com/NetSys/bess/pull/429,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/429,I have some thoughts about this for @sangjinhan and @melvinw that I'll bring up in person.,I have some thoughts about this for @sangjinhan and @melvinw that I'll bring up in person.,True,{}
NetSys/bess,https://github.com/NetSys/bess,429,2017-05-01T17:59:01Z,2017-05-02T21:46:17Z,2017-05-08T06:54:43Z,MERGED,True,11,2,4,https://github.com/justinemarie,Move Port and Module classes to general libbess-python.,3,[],https://github.com/NetSys/bess/pull/429,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/429#issuecomment-298390542,I have some thoughts about this for @sangjinhan and @melvinw that I'll bring up in person.,lol thx for the rename,True,{}
NetSys/bess,https://github.com/NetSys/bess,429,2017-05-01T17:59:01Z,2017-05-02T21:46:17Z,2017-05-08T06:54:43Z,MERGED,True,11,2,4,https://github.com/justinemarie,Move Port and Module classes to general libbess-python.,3,[],https://github.com/NetSys/bess/pull/429,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/429#issuecomment-298702975,I have some thoughts about this for @sangjinhan and @melvinw that I'll bring up in person.,Rebased to pull in the RunSplit revert.,True,{}
NetSys/bess,https://github.com/NetSys/bess,429,2017-05-01T17:59:01Z,2017-05-02T21:46:17Z,2017-05-08T06:54:43Z,MERGED,True,11,2,4,https://github.com/justinemarie,Move Port and Module classes to general libbess-python.,3,[],https://github.com/NetSys/bess/pull/429,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/429#issuecomment-298771106,I have some thoughts about this for @sangjinhan and @melvinw that I'll bring up in person.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,430,2017-05-01T20:00:27Z,2017-05-02T06:42:16Z,2017-05-02T06:42:39Z,MERGED,True,46,18,2,https://github.com/changlan,trie: Add tests for copy constructor and assignment operator,1,[],https://github.com/NetSys/bess/pull/430,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/430,"Add tests for copy constructor and assignment operator;
Fix implicit assignment operator;
Use std::unique_ptr.","Add tests for copy constructor and assignment operator;
Fix implicit assignment operator;
Use std::unique_ptr.",True,{}
NetSys/bess,https://github.com/NetSys/bess,430,2017-05-01T20:00:27Z,2017-05-02T06:42:16Z,2017-05-02T06:42:39Z,MERGED,True,46,18,2,https://github.com/changlan,trie: Add tests for copy constructor and assignment operator,1,[],https://github.com/NetSys/bess/pull/430,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/430#issuecomment-298427064,"Add tests for copy constructor and assignment operator;
Fix implicit assignment operator;
Use std::unique_ptr.",Does it have any performance implications?,True,{}
NetSys/bess,https://github.com/NetSys/bess,430,2017-05-01T20:00:27Z,2017-05-02T06:42:16Z,2017-05-02T06:42:39Z,MERGED,True,46,18,2,https://github.com/changlan,trie: Add tests for copy constructor and assignment operator,1,[],https://github.com/NetSys/bess/pull/430,https://github.com/codecov-io,3,https://github.com/NetSys/bess/pull/430#issuecomment-298428927,"Add tests for copy constructor and assignment operator;
Fix implicit assignment operator;
Use std::unique_ptr.","Codecov Report

Merging #430 into master will decrease coverage by 6%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #430    +/-   ##
======================================
- Coverage      31%    25%    -6%     
======================================
  Files         162    162            
  Lines        8215   8644   +429     
======================================
- Hits         2539   2140   -399     
- Misses       5676   6504   +828



Impacted Files
Coverage Δ





core/utils/trie.h
0% <0%> (ø)
⬆️


core/utils/common.h
0% <0%> (-94%)
⬇️


core/modules/wildcard_match.h
0% <0%> (-93%)
⬇️


core/modules/exact_match.h
0% <0%> (-93%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-84%)
⬇️


core/modules/exact_match.cc
3% <0%> (-73%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
1% <0%> (-64%)
⬇️


core/utils/cuckoo_map.h
0% <0%> (-57%)
⬇️


core/traffic_class.cc
3% <0%> (-52%)
⬇️


... and 40 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7d135bb...b1404a7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,430,2017-05-01T20:00:27Z,2017-05-02T06:42:16Z,2017-05-02T06:42:39Z,MERGED,True,46,18,2,https://github.com/changlan,trie: Add tests for copy constructor and assignment operator,1,[],https://github.com/NetSys/bess/pull/430,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/430#issuecomment-298432501,"Add tests for copy constructor and assignment operator;
Fix implicit assignment operator;
Use std::unique_ptr.","std::unique_ptr's memory footprint is same as regular pointers, and its constructor and destructor should have the same performance as manual new and delete.",True,{}
NetSys/bess,https://github.com/NetSys/bess,430,2017-05-01T20:00:27Z,2017-05-02T06:42:16Z,2017-05-02T06:42:39Z,MERGED,True,46,18,2,https://github.com/changlan,trie: Add tests for copy constructor and assignment operator,1,[],https://github.com/NetSys/bess/pull/430,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/430#issuecomment-298509826,"Add tests for copy constructor and assignment operator;
Fix implicit assignment operator;
Use std::unique_ptr.","I was concerned about runtime overheads (for pointer dereference). It seems that there is none: http://stackoverflow.com/questions/22295665/how-much-is-the-overhead-of-smart-pointers-compared-to-normal-pointers-in-c
Thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,430,2017-05-01T20:00:27Z,2017-05-02T06:42:16Z,2017-05-02T06:42:39Z,MERGED,True,46,18,2,https://github.com/changlan,trie: Add tests for copy constructor and assignment operator,1,[],https://github.com/NetSys/bess/pull/430,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/430#issuecomment-298509865,"Add tests for copy constructor and assignment operator;
Fix implicit assignment operator;
Use std::unique_ptr.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,431,2017-05-01T21:43:28Z,2017-05-05T05:01:49Z,2017-05-08T06:55:07Z,CLOSED,False,0,5,1,https://github.com/justinemarie,THIS IS WHY CODECOV KEPT COMING BACK,1,[],https://github.com/NetSys/bess/pull/431,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/431,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,431,2017-05-01T21:43:28Z,2017-05-05T05:01:49Z,2017-05-08T06:55:07Z,CLOSED,False,0,5,1,https://github.com/justinemarie,THIS IS WHY CODECOV KEPT COMING BACK,1,[],https://github.com/NetSys/bess/pull/431,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/431#issuecomment-298702564,,Rebased to pull in the RunSplit revert.,True,{}
NetSys/bess,https://github.com/NetSys/bess,431,2017-05-01T21:43:28Z,2017-05-05T05:01:49Z,2017-05-08T06:55:07Z,CLOSED,False,0,5,1,https://github.com/justinemarie,THIS IS WHY CODECOV KEPT COMING BACK,1,[],https://github.com/NetSys/bess/pull/431,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/431#issuecomment-299375757,,Let me temporarily close this PR until we see if #440 fixes the issue.,True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/432,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.","This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.",True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/432#issuecomment-298468299,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.","Update: Daniele and I just talked about this. We're not sure what is causing these (non-deterministic) errors but it was something around when this commit happened, possibly in combination with this commit -- but it clearly isn't this commit alone.
I'm going to check out a bunch of old versions of the repo and run them through Travis repeatedly to see whether we can track it down.",True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/432#issuecomment-298470135,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.","This is the commit one prior to when the PR was merged:
https://travis-ci.org/NetSys/bess/builds/227782156",True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/432#issuecomment-298471346,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.","This is the commit one before when the PR was branched:
https://travis-ci.org/NetSys/bess/builds/227783582",True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/432#issuecomment-298508168,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.","So the alternative two paths succeeded -- I guess we should go ahead and revert here and return to this optimization later?
Note that this revert commit originally failed as well, so reverting is not guaranteed to fix everything 100%...",True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/barath,6,https://github.com/NetSys/bess/pull/432#issuecomment-298508600,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.","I'm curious if we understand why the optimization failed.
…
On Mon, May 1, 2017 at 11:30 PM, Justine Sherry ***@***.***> wrote:
 So the alternative two paths succeeded -- I guess we should go ahead and
 revert here and return to this optimization later?

 Note that this revert commit originally failed as well, so reverting is
 not guaranteed to fix everything 100%...

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#432 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7esGEMdd1qguWr7Bq8TlMLPh5FjjGks5r1s13gaJpZM4NNgvc>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/432#issuecomment-298508987,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.","We don't, we've been trying to track it down -- but the problem is the bug is backing up all the other PRs because Travis is failing all of them. So Daniele proposed we revert and come back to it.",True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/barath,8,https://github.com/NetSys/bess/pull/432#issuecomment-298509628,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.","Thanks.  Agreed, just was curious.
…
On Mon, May 1, 2017 at 11:36 PM, Justine Sherry ***@***.***> wrote:
 We don't, we've been trying to track it down -- but the problem is the bug
 is backing up all the other PRs because Travis is failing all of them. So
 Daniele proposed we revert and come back to it.

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#432 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7ei67WsVPYG43UitjZdn_uPU1YG6Bks5r1s7XgaJpZM4NNgvc>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/justinemarie,9,https://github.com/NetSys/bess/pull/432#issuecomment-298701617,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.",Daniele and I are doing some git surgery.,True,{}
NetSys/bess,https://github.com/NetSys/bess,432,2017-05-01T22:30:49Z,2017-05-02T17:19:43Z,2017-05-02T22:21:22Z,MERGED,True,17,20,2,https://github.com/ddiproietto,"Revert ""module: Optimize RunModuleSplit().""",1,[],https://github.com/NetSys/bess/pull/432,https://github.com/justinemarie,10,https://github.com/NetSys/bess/pull/432#issuecomment-298701770,"This reverts commit 05af488.
It causes crashes in travis tests, but not locally.  Until we debug
it let's revert the patch.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,433,2017-05-02T00:18:26Z,2017-05-02T21:42:30Z,2017-05-08T06:55:05Z,CLOSED,False,35,0,3,https://github.com/justinemarie,Make travis auto-push updates to independent libbess-python repo.,1,[],https://github.com/NetSys/bess/pull/433,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/433,This script updates the libbess-python repository with the latest version of the script from bess; it triggers whenever there is a push to master.,This script updates the libbess-python repository with the latest version of the script from bess; it triggers whenever there is a push to master.,True,{}
NetSys/bess,https://github.com/NetSys/bess,433,2017-05-02T00:18:26Z,2017-05-02T21:42:30Z,2017-05-08T06:55:05Z,CLOSED,False,35,0,3,https://github.com/justinemarie,Make travis auto-push updates to independent libbess-python repo.,1,[],https://github.com/NetSys/bess/pull/433,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/433#issuecomment-298707428,This script updates the libbess-python repository with the latest version of the script from bess; it triggers whenever there is a push to master.,Rebased to pull in RunSplit revert.,True,{}
NetSys/bess,https://github.com/NetSys/bess,433,2017-05-02T00:18:26Z,2017-05-02T21:42:30Z,2017-05-08T06:55:05Z,CLOSED,False,35,0,3,https://github.com/justinemarie,Make travis auto-push updates to independent libbess-python repo.,1,[],https://github.com/NetSys/bess/pull/433,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/433#issuecomment-298770135,This script updates the libbess-python repository with the latest version of the script from bess; it triggers whenever there is a push to master.,Sangjin found an easier way to do this (check out the libbess-python subdir using svn rather than git) so I'm closing this PR.,True,{}
NetSys/bess,https://github.com/NetSys/bess,435,2017-05-02T20:40:47Z,2017-05-05T04:30:07Z,2017-05-05T04:30:18Z,MERGED,True,112,101,4,https://github.com/nrdmao,driver and kernel module support for 32 bit user and 64 bit kernel,2,[],https://github.com/NetSys/bess/pull/435,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/435,These changes were required to get bessd to function in 32 bit mode as a user process against a 64 bit mode kernel.,These changes were required to get bessd to function in 32 bit mode as a user process against a 64 bit mode kernel.,True,{}
NetSys/bess,https://github.com/NetSys/bess,435,2017-05-02T20:40:47Z,2017-05-05T04:30:07Z,2017-05-05T04:30:18Z,MERGED,True,112,101,4,https://github.com/nrdmao,driver and kernel module support for 32 bit user and 64 bit kernel,2,[],https://github.com/NetSys/bess/pull/435,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/435#issuecomment-299371540,These changes were required to get bessd to function in 32 bit mode as a user process against a 64 bit mode kernel.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,436,2017-05-03T00:20:47Z,2017-05-18T17:28:00Z,2017-05-18T17:28:00Z,CLOSED,False,1,1,1,https://github.com/ddiproietto,rewrite: Honor round robin behavior.,1,['notready'],https://github.com/NetSys/bess/pull/436,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/436,"The Rewrite module is not really round robin (e.g., by looking at the
show pipeline numbers for samples/exactmatch, we can notice a
slight difference between gates that are supposed to have the same
rate).
This commit fixes the problem.","The Rewrite module is not really round robin (e.g., by looking at the
show pipeline numbers for samples/exactmatch, we can notice a
slight difference between gates that are supposed to have the same
rate).
This commit fixes the problem.",True,{}
NetSys/bess,https://github.com/NetSys/bess,437,2017-05-03T02:13:30Z,2017-05-08T22:43:24Z,2017-05-09T19:19:51Z,MERGED,True,941,1169,105,https://github.com/sangjinhan,Refactor return type of Module/Port Init() and commands,8,[],https://github.com/NetSys/bess/pull/437,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/437,"NOTE: This PR may break any custom modules/drivers outside the main repository.

Currently the return type of Init() and CommandFoo() are inconsistent, and reporting success/failure is verbose and can be done in many different ways. This increases code complexity and dependency on Protobuf. This PR simplifies Init/command handling, with new type CommandResponse and helper functions CommandSuccess() and CommandFailure(). These can be used whether you are writing Init() or commands, or whether you are dealing with Port or Module.
Usage comparison
Before (existing code)
// Init function
pb_error_t MyModule::Init(const bess::pb::DumpArg &arg) {
  // case 1: success in Init()
  return pb_errno(0);

  // case 2: failure in Init()
  return pb_errno(EINVAL);

  // case 3: failure in Init(), with error message
  return pb_error(EINVAL, ""Invalid value: %d"", val);
}

// Command function
pb_cmd_response_t MyModule::CommandFoo(const bess::pb::SomeType x) {
  // case 4: success in command
  pb_cmd_response_t response;
  set_cmd_response_error(&response, pb_errno(0));
  return response;

  // case 5: success in command, with return data
  pb_cmd_response_t response;
  response.mutable_error()->set_err(0);
  response.mutable_other()->PackFrom(some_return_data);
  return response;

  // case 6: failure in Init()
  pb_cmd_response_t response;
  set_cmd_response_error(&response, pb_errno(EINVAL));
  return response;

  // case 7: failure in Init(), with error message
  pb_cmd_response_t response;
  set_cmd_response_error(&response, 
                         pb_error(EINVAL, ""Invalid value %d"", val));
  return response;
}

After (with new API)
CommandResponse MyModule::Init(const bess::pb::DumpArg &arg) {  // or
CommandResponse MyModule::CommandFoo(const bess::pb::SomeType x) {
  // case 1: success
  return CommandSuccess();

  // case 2: success with return data
  return CommandSuccess(some_return_data);

  // case 3: failure
  return CommandFailure(EINVAL);

  // case 4: failure with error message
  return CommandFailure(EINVAL, ""Invalid value: %d"", val);
}","NOTE: This PR may break any custom modules/drivers outside the main repository.

Currently the return type of Init() and CommandFoo() are inconsistent, and reporting success/failure is verbose and can be done in many different ways. This increases code complexity and dependency on Protobuf. This PR simplifies Init/command handling, with new type CommandResponse and helper functions CommandSuccess() and CommandFailure(). These can be used whether you are writing Init() or commands, or whether you are dealing with Port or Module.
Usage comparison
Before (existing code)
// Init function
pb_error_t MyModule::Init(const bess::pb::DumpArg &arg) {
  // case 1: success in Init()
  return pb_errno(0);

  // case 2: failure in Init()
  return pb_errno(EINVAL);

  // case 3: failure in Init(), with error message
  return pb_error(EINVAL, ""Invalid value: %d"", val);
}

// Command function
pb_cmd_response_t MyModule::CommandFoo(const bess::pb::SomeType x) {
  // case 4: success in command
  pb_cmd_response_t response;
  set_cmd_response_error(&response, pb_errno(0));
  return response;

  // case 5: success in command, with return data
  pb_cmd_response_t response;
  response.mutable_error()->set_err(0);
  response.mutable_other()->PackFrom(some_return_data);
  return response;

  // case 6: failure in Init()
  pb_cmd_response_t response;
  set_cmd_response_error(&response, pb_errno(EINVAL));
  return response;

  // case 7: failure in Init(), with error message
  pb_cmd_response_t response;
  set_cmd_response_error(&response, 
                         pb_error(EINVAL, ""Invalid value %d"", val));
  return response;
}

After (with new API)
CommandResponse MyModule::Init(const bess::pb::DumpArg &arg) {  // or
CommandResponse MyModule::CommandFoo(const bess::pb::SomeType x) {
  // case 1: success
  return CommandSuccess();

  // case 2: success with return data
  return CommandSuccess(some_return_data);

  // case 3: failure
  return CommandFailure(EINVAL);

  // case 4: failure with error message
  return CommandFailure(EINVAL, ""Invalid value: %d"", val);
}",True,{}
NetSys/bess,https://github.com/NetSys/bess,437,2017-05-03T02:13:30Z,2017-05-08T22:43:24Z,2017-05-09T19:19:51Z,MERGED,True,941,1169,105,https://github.com/sangjinhan,Refactor return type of Module/Port Init() and commands,8,[],https://github.com/NetSys/bess/pull/437,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/437#issuecomment-300011463,"NOTE: This PR may break any custom modules/drivers outside the main repository.

Currently the return type of Init() and CommandFoo() are inconsistent, and reporting success/failure is verbose and can be done in many different ways. This increases code complexity and dependency on Protobuf. This PR simplifies Init/command handling, with new type CommandResponse and helper functions CommandSuccess() and CommandFailure(). These can be used whether you are writing Init() or commands, or whether you are dealing with Port or Module.
Usage comparison
Before (existing code)
// Init function
pb_error_t MyModule::Init(const bess::pb::DumpArg &arg) {
  // case 1: success in Init()
  return pb_errno(0);

  // case 2: failure in Init()
  return pb_errno(EINVAL);

  // case 3: failure in Init(), with error message
  return pb_error(EINVAL, ""Invalid value: %d"", val);
}

// Command function
pb_cmd_response_t MyModule::CommandFoo(const bess::pb::SomeType x) {
  // case 4: success in command
  pb_cmd_response_t response;
  set_cmd_response_error(&response, pb_errno(0));
  return response;

  // case 5: success in command, with return data
  pb_cmd_response_t response;
  response.mutable_error()->set_err(0);
  response.mutable_other()->PackFrom(some_return_data);
  return response;

  // case 6: failure in Init()
  pb_cmd_response_t response;
  set_cmd_response_error(&response, pb_errno(EINVAL));
  return response;

  // case 7: failure in Init(), with error message
  pb_cmd_response_t response;
  set_cmd_response_error(&response, 
                         pb_error(EINVAL, ""Invalid value %d"", val));
  return response;
}

After (with new API)
CommandResponse MyModule::Init(const bess::pb::DumpArg &arg) {  // or
CommandResponse MyModule::CommandFoo(const bess::pb::SomeType x) {
  // case 1: success
  return CommandSuccess();

  // case 2: success with return data
  return CommandSuccess(some_return_data);

  // case 3: failure
  return CommandFailure(EINVAL);

  // case 4: failure with error message
  return CommandFailure(EINVAL, ""Invalid value: %d"", val);
}","Yup, resolved the merge conflicts.",True,{}
NetSys/bess,https://github.com/NetSys/bess,437,2017-05-03T02:13:30Z,2017-05-08T22:43:24Z,2017-05-09T19:19:51Z,MERGED,True,941,1169,105,https://github.com/sangjinhan,Refactor return type of Module/Port Init() and commands,8,[],https://github.com/NetSys/bess/pull/437,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/437#issuecomment-300011721,"NOTE: This PR may break any custom modules/drivers outside the main repository.

Currently the return type of Init() and CommandFoo() are inconsistent, and reporting success/failure is verbose and can be done in many different ways. This increases code complexity and dependency on Protobuf. This PR simplifies Init/command handling, with new type CommandResponse and helper functions CommandSuccess() and CommandFailure(). These can be used whether you are writing Init() or commands, or whether you are dealing with Port or Module.
Usage comparison
Before (existing code)
// Init function
pb_error_t MyModule::Init(const bess::pb::DumpArg &arg) {
  // case 1: success in Init()
  return pb_errno(0);

  // case 2: failure in Init()
  return pb_errno(EINVAL);

  // case 3: failure in Init(), with error message
  return pb_error(EINVAL, ""Invalid value: %d"", val);
}

// Command function
pb_cmd_response_t MyModule::CommandFoo(const bess::pb::SomeType x) {
  // case 4: success in command
  pb_cmd_response_t response;
  set_cmd_response_error(&response, pb_errno(0));
  return response;

  // case 5: success in command, with return data
  pb_cmd_response_t response;
  response.mutable_error()->set_err(0);
  response.mutable_other()->PackFrom(some_return_data);
  return response;

  // case 6: failure in Init()
  pb_cmd_response_t response;
  set_cmd_response_error(&response, pb_errno(EINVAL));
  return response;

  // case 7: failure in Init(), with error message
  pb_cmd_response_t response;
  set_cmd_response_error(&response, 
                         pb_error(EINVAL, ""Invalid value %d"", val));
  return response;
}

After (with new API)
CommandResponse MyModule::Init(const bess::pb::DumpArg &arg) {  // or
CommandResponse MyModule::CommandFoo(const bess::pb::SomeType x) {
  // case 1: success
  return CommandSuccess();

  // case 2: success with return data
  return CommandSuccess(some_return_data);

  // case 3: failure
  return CommandFailure(EINVAL);

  // case 4: failure with error message
  return CommandFailure(EINVAL, ""Invalid value: %d"", val);
}",,True,{}
NetSys/bess,https://github.com/NetSys/bess,439,2017-05-04T19:59:54Z,2017-05-08T00:37:39Z,2017-08-09T01:23:06Z,MERGED,True,16,6,2,https://github.com/melvinw,bessctl: scan all workers in resume checks,2,[],https://github.com/NetSys/bess/pull/439,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/439,"Currently, propagate_active_workers() and
CheckSchedulingConstraints() don't handle the cases when workers are
created in any order other than 0, 1, 2, 3, ...
Running the following script produces the crash below.
bess.pause_all()
bess.add_worker(wid=1, core=0)
bess.add_worker(wid=2, core=1)
bess.add_worker(wid=3, core=2)
bess.resume_all()

log:
*** Error: Unhandled exception in the configuration script (most recent call last)
  File ""foo.bess"", line 5, in <module>
    bess.resume_all()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 226, in resume_all
    return self.check_resume_all()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 220, in check_resume_all
    ret = self.check_constraints()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 191, in check_constraints
    response = self.check_scheduling_constraints()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 231, in check_scheduling_constraints
    return self._request('CheckSchedulingConstraints')
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 148, in _request
    raise self.RPCError(str(e))
*** Error: RPC failed to localhost:10514 - <_Rendezvous of RPC that terminated with (StatusCode.UNAVAILABLE, {""created"":""@1493924686.381156070"",""description"":""EOF"",""file"":""src/core/lib/iomgr/tcp_posix.c"",""file_line"":235,""grpc_status"":14})>
From /tmp/bessd_crash.log (Thu May  4 12:04:46 2017):
A critical error has occured. Aborting...
Signal: 11 (Segmentation fault), si_code: 1 (SEGV_MAPERR: address not mapped to object)
pid: 11334, tid: 11347, address: 0x20, IP: 0x62f7ab
Backtrace (recent calls first) ---
(0): /home/melvin/bess/core/bessd(_Z23propagate_active_workerv+0x1ab) [0x62f7ab]
    propagate_active_worker() at /home/melvin/bess/core/module.cc:683
         680:   for (int i = 0; i < num_workers; i++) {
         681:     int socket = 1ull << workers[i]->socket();
         682:     int core = workers[i]->core();
      -> 683:     bess::TrafficClass *root = workers[i]->scheduler()->root();
         684:     if (root) {
         685:       root->Traverse([i, socket, core](bess::TCChildArgs *args) {
         686:         bess::TrafficClass *c = args->child();
(1): /home/melvin/bess/core/bessd(_ZN15BESSControlImpl26CheckSchedulingConstraintsEPN4grpc13ServerContextEPKN4bess2pb12EmptyRequestEPNS4_34CheckSchedulingConstraintsResponseE+0x3e) [0x645d0e]
    BESSControlImpl::CheckSchedulingConstraints(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*) at /home/melvin/bess/core/bessctl.cc:583
      -> 583:     propagate_active_worker();
(2): /home/melvin/bess/core/bessd(_ZNSt17_Function_handlerIFN4grpc6StatusEPN4bess2pb11BESSControl7ServiceEPNS0_13ServerContextEPKNS3_12EmptyRequestEPNS3_34CheckSchedulingConstraintsResponseEESt7_Mem_fnIMS5_FS1_S8_SB_SD_EEE9_M_invokeERKSt9_Any_dataOS6_OS8_OSB_OSD_+0x47) [0x6a9307]
    grpc::Status std::_Mem_fn_base<grpc::Status (bess::pb::BESSControl::Service::*)(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*), true>::operator()<grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*, void>(bess::pb::BESSControl::Service*, grpc::ServerContext*&&, bess::pb::EmptyRequest const*&&, bess::pb::CheckSchedulingConstraintsResponse*&&) const at /usr/include/c++/5/functional:600
      -> 600:   { return (__object->*_M_pmf)(std::forward<_Args>(__args)...); }
     (inlined by) std::_Function_handler<grpc::Status (bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*), std::_Mem_fn<grpc::Status (bess::pb::BESSControl::Service::*)(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*)> >::_M_invoke(std::_Any_data const&, bess::pb::BESSControl::Service*&&, grpc::ServerContext*&&, bess::pb::EmptyRequest const*&&, bess::pb::CheckSchedulingConstraintsResponse*&&) at /usr/include/c++/5/functional:1857
      -> 1857:      std::forward<_ArgTypes>(__args)...);
(3): /home/melvin/bess/core/bessd(_ZN4grpc16RpcMethodHandlerIN4bess2pb11BESSControl7ServiceENS2_12EmptyRequestENS2_34CheckSchedulingConstraintsResponseEE10RunHandlerERKNS_13MethodHandler16HandlerParameterE+0xae) [0x6c379e]
    std::function<grpc::Status (bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*)>::operator()(bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*) const at /usr/include/c++/5/functional:2267
      -> 2267:       return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
     (inlined by) grpc::RpcMethodHandler<bess::pb::BESSControl::Service, bess::pb::EmptyRequest, bess::pb::CheckSchedulingConstraintsResponse>::RunHandler(grpc::MethodHandler::HandlerParameter const&) at /usr/local/include/grpc++/impl/codegen/method_handler_impl.h:59
      -> 59:       status = func_(service_, param.server_context, &req, &rsp);
(4): /home/melvin/bess/core/bessd(_ZN4grpc6Server24SyncRequestThreadManager6DoWorkEPvb+0x898) [0x9c6b38]
    grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) at ??:?
(5): /home/melvin/bess/core/bessd(_ZN4grpc13ThreadManager12MainWorkLoopEv+0xc6) [0x9c8e66]
    grpc::ThreadManager::MainWorkLoop() at ??:?
(6): /home/melvin/bess/core/bessd(_ZN4grpc13ThreadManager12WorkerThread3RunEv+0xb) [0x9c8ecb]
    grpc::ThreadManager::WorkerThread::Run() at ??:?
(7): /home/melvin/bess/core/bessd() [0xc2640f]
    execute_native_thread_routine at thread.o:?
(8): /lib/x86_64-linux-gnu/libpthread.so.0(+0x76b9) [0x7f5b44f216b9]
    start_thread at ??:?
(9): /lib/x86_64-linux-gnu/libc.so.6(clone+0x6c) [0x7f5b44c5782c]
    clone at /build/glibc-9tT8Do/glibc-2.23/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:109
        (file/line not available)","Currently, propagate_active_workers() and
CheckSchedulingConstraints() don't handle the cases when workers are
created in any order other than 0, 1, 2, 3, ...
Running the following script produces the crash below.
bess.pause_all()
bess.add_worker(wid=1, core=0)
bess.add_worker(wid=2, core=1)
bess.add_worker(wid=3, core=2)
bess.resume_all()

log:
*** Error: Unhandled exception in the configuration script (most recent call last)
  File ""foo.bess"", line 5, in <module>
    bess.resume_all()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 226, in resume_all
    return self.check_resume_all()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 220, in check_resume_all
    ret = self.check_constraints()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 191, in check_constraints
    response = self.check_scheduling_constraints()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 231, in check_scheduling_constraints
    return self._request('CheckSchedulingConstraints')
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 148, in _request
    raise self.RPCError(str(e))
*** Error: RPC failed to localhost:10514 - <_Rendezvous of RPC that terminated with (StatusCode.UNAVAILABLE, {""created"":""@1493924686.381156070"",""description"":""EOF"",""file"":""src/core/lib/iomgr/tcp_posix.c"",""file_line"":235,""grpc_status"":14})>
From /tmp/bessd_crash.log (Thu May  4 12:04:46 2017):
A critical error has occured. Aborting...
Signal: 11 (Segmentation fault), si_code: 1 (SEGV_MAPERR: address not mapped to object)
pid: 11334, tid: 11347, address: 0x20, IP: 0x62f7ab
Backtrace (recent calls first) ---
(0): /home/melvin/bess/core/bessd(_Z23propagate_active_workerv+0x1ab) [0x62f7ab]
    propagate_active_worker() at /home/melvin/bess/core/module.cc:683
         680:   for (int i = 0; i < num_workers; i++) {
         681:     int socket = 1ull << workers[i]->socket();
         682:     int core = workers[i]->core();
      -> 683:     bess::TrafficClass *root = workers[i]->scheduler()->root();
         684:     if (root) {
         685:       root->Traverse([i, socket, core](bess::TCChildArgs *args) {
         686:         bess::TrafficClass *c = args->child();
(1): /home/melvin/bess/core/bessd(_ZN15BESSControlImpl26CheckSchedulingConstraintsEPN4grpc13ServerContextEPKN4bess2pb12EmptyRequestEPNS4_34CheckSchedulingConstraintsResponseE+0x3e) [0x645d0e]
    BESSControlImpl::CheckSchedulingConstraints(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*) at /home/melvin/bess/core/bessctl.cc:583
      -> 583:     propagate_active_worker();
(2): /home/melvin/bess/core/bessd(_ZNSt17_Function_handlerIFN4grpc6StatusEPN4bess2pb11BESSControl7ServiceEPNS0_13ServerContextEPKNS3_12EmptyRequestEPNS3_34CheckSchedulingConstraintsResponseEESt7_Mem_fnIMS5_FS1_S8_SB_SD_EEE9_M_invokeERKSt9_Any_dataOS6_OS8_OSB_OSD_+0x47) [0x6a9307]
    grpc::Status std::_Mem_fn_base<grpc::Status (bess::pb::BESSControl::Service::*)(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*), true>::operator()<grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*, void>(bess::pb::BESSControl::Service*, grpc::ServerContext*&&, bess::pb::EmptyRequest const*&&, bess::pb::CheckSchedulingConstraintsResponse*&&) const at /usr/include/c++/5/functional:600
      -> 600:   { return (__object->*_M_pmf)(std::forward<_Args>(__args)...); }
     (inlined by) std::_Function_handler<grpc::Status (bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*), std::_Mem_fn<grpc::Status (bess::pb::BESSControl::Service::*)(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*)> >::_M_invoke(std::_Any_data const&, bess::pb::BESSControl::Service*&&, grpc::ServerContext*&&, bess::pb::EmptyRequest const*&&, bess::pb::CheckSchedulingConstraintsResponse*&&) at /usr/include/c++/5/functional:1857
      -> 1857:      std::forward<_ArgTypes>(__args)...);
(3): /home/melvin/bess/core/bessd(_ZN4grpc16RpcMethodHandlerIN4bess2pb11BESSControl7ServiceENS2_12EmptyRequestENS2_34CheckSchedulingConstraintsResponseEE10RunHandlerERKNS_13MethodHandler16HandlerParameterE+0xae) [0x6c379e]
    std::function<grpc::Status (bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*)>::operator()(bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*) const at /usr/include/c++/5/functional:2267
      -> 2267:       return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
     (inlined by) grpc::RpcMethodHandler<bess::pb::BESSControl::Service, bess::pb::EmptyRequest, bess::pb::CheckSchedulingConstraintsResponse>::RunHandler(grpc::MethodHandler::HandlerParameter const&) at /usr/local/include/grpc++/impl/codegen/method_handler_impl.h:59
      -> 59:       status = func_(service_, param.server_context, &req, &rsp);
(4): /home/melvin/bess/core/bessd(_ZN4grpc6Server24SyncRequestThreadManager6DoWorkEPvb+0x898) [0x9c6b38]
    grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) at ??:?
(5): /home/melvin/bess/core/bessd(_ZN4grpc13ThreadManager12MainWorkLoopEv+0xc6) [0x9c8e66]
    grpc::ThreadManager::MainWorkLoop() at ??:?
(6): /home/melvin/bess/core/bessd(_ZN4grpc13ThreadManager12WorkerThread3RunEv+0xb) [0x9c8ecb]
    grpc::ThreadManager::WorkerThread::Run() at ??:?
(7): /home/melvin/bess/core/bessd() [0xc2640f]
    execute_native_thread_routine at thread.o:?
(8): /lib/x86_64-linux-gnu/libpthread.so.0(+0x76b9) [0x7f5b44f216b9]
    start_thread at ??:?
(9): /lib/x86_64-linux-gnu/libc.so.6(clone+0x6c) [0x7f5b44c5782c]
    clone at /build/glibc-9tT8Do/glibc-2.23/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:109
        (file/line not available)",True,{}
NetSys/bess,https://github.com/NetSys/bess,439,2017-05-04T19:59:54Z,2017-05-08T00:37:39Z,2017-08-09T01:23:06Z,MERGED,True,16,6,2,https://github.com/melvinw,bessctl: scan all workers in resume checks,2,[],https://github.com/NetSys/bess/pull/439,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/439#issuecomment-299747485,"Currently, propagate_active_workers() and
CheckSchedulingConstraints() don't handle the cases when workers are
created in any order other than 0, 1, 2, 3, ...
Running the following script produces the crash below.
bess.pause_all()
bess.add_worker(wid=1, core=0)
bess.add_worker(wid=2, core=1)
bess.add_worker(wid=3, core=2)
bess.resume_all()

log:
*** Error: Unhandled exception in the configuration script (most recent call last)
  File ""foo.bess"", line 5, in <module>
    bess.resume_all()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 226, in resume_all
    return self.check_resume_all()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 220, in check_resume_all
    ret = self.check_constraints()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 191, in check_constraints
    response = self.check_scheduling_constraints()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 231, in check_scheduling_constraints
    return self._request('CheckSchedulingConstraints')
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 148, in _request
    raise self.RPCError(str(e))
*** Error: RPC failed to localhost:10514 - <_Rendezvous of RPC that terminated with (StatusCode.UNAVAILABLE, {""created"":""@1493924686.381156070"",""description"":""EOF"",""file"":""src/core/lib/iomgr/tcp_posix.c"",""file_line"":235,""grpc_status"":14})>
From /tmp/bessd_crash.log (Thu May  4 12:04:46 2017):
A critical error has occured. Aborting...
Signal: 11 (Segmentation fault), si_code: 1 (SEGV_MAPERR: address not mapped to object)
pid: 11334, tid: 11347, address: 0x20, IP: 0x62f7ab
Backtrace (recent calls first) ---
(0): /home/melvin/bess/core/bessd(_Z23propagate_active_workerv+0x1ab) [0x62f7ab]
    propagate_active_worker() at /home/melvin/bess/core/module.cc:683
         680:   for (int i = 0; i < num_workers; i++) {
         681:     int socket = 1ull << workers[i]->socket();
         682:     int core = workers[i]->core();
      -> 683:     bess::TrafficClass *root = workers[i]->scheduler()->root();
         684:     if (root) {
         685:       root->Traverse([i, socket, core](bess::TCChildArgs *args) {
         686:         bess::TrafficClass *c = args->child();
(1): /home/melvin/bess/core/bessd(_ZN15BESSControlImpl26CheckSchedulingConstraintsEPN4grpc13ServerContextEPKN4bess2pb12EmptyRequestEPNS4_34CheckSchedulingConstraintsResponseE+0x3e) [0x645d0e]
    BESSControlImpl::CheckSchedulingConstraints(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*) at /home/melvin/bess/core/bessctl.cc:583
      -> 583:     propagate_active_worker();
(2): /home/melvin/bess/core/bessd(_ZNSt17_Function_handlerIFN4grpc6StatusEPN4bess2pb11BESSControl7ServiceEPNS0_13ServerContextEPKNS3_12EmptyRequestEPNS3_34CheckSchedulingConstraintsResponseEESt7_Mem_fnIMS5_FS1_S8_SB_SD_EEE9_M_invokeERKSt9_Any_dataOS6_OS8_OSB_OSD_+0x47) [0x6a9307]
    grpc::Status std::_Mem_fn_base<grpc::Status (bess::pb::BESSControl::Service::*)(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*), true>::operator()<grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*, void>(bess::pb::BESSControl::Service*, grpc::ServerContext*&&, bess::pb::EmptyRequest const*&&, bess::pb::CheckSchedulingConstraintsResponse*&&) const at /usr/include/c++/5/functional:600
      -> 600:   { return (__object->*_M_pmf)(std::forward<_Args>(__args)...); }
     (inlined by) std::_Function_handler<grpc::Status (bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*), std::_Mem_fn<grpc::Status (bess::pb::BESSControl::Service::*)(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*)> >::_M_invoke(std::_Any_data const&, bess::pb::BESSControl::Service*&&, grpc::ServerContext*&&, bess::pb::EmptyRequest const*&&, bess::pb::CheckSchedulingConstraintsResponse*&&) at /usr/include/c++/5/functional:1857
      -> 1857:      std::forward<_ArgTypes>(__args)...);
(3): /home/melvin/bess/core/bessd(_ZN4grpc16RpcMethodHandlerIN4bess2pb11BESSControl7ServiceENS2_12EmptyRequestENS2_34CheckSchedulingConstraintsResponseEE10RunHandlerERKNS_13MethodHandler16HandlerParameterE+0xae) [0x6c379e]
    std::function<grpc::Status (bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*)>::operator()(bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*) const at /usr/include/c++/5/functional:2267
      -> 2267:       return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
     (inlined by) grpc::RpcMethodHandler<bess::pb::BESSControl::Service, bess::pb::EmptyRequest, bess::pb::CheckSchedulingConstraintsResponse>::RunHandler(grpc::MethodHandler::HandlerParameter const&) at /usr/local/include/grpc++/impl/codegen/method_handler_impl.h:59
      -> 59:       status = func_(service_, param.server_context, &req, &rsp);
(4): /home/melvin/bess/core/bessd(_ZN4grpc6Server24SyncRequestThreadManager6DoWorkEPvb+0x898) [0x9c6b38]
    grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) at ??:?
(5): /home/melvin/bess/core/bessd(_ZN4grpc13ThreadManager12MainWorkLoopEv+0xc6) [0x9c8e66]
    grpc::ThreadManager::MainWorkLoop() at ??:?
(6): /home/melvin/bess/core/bessd(_ZN4grpc13ThreadManager12WorkerThread3RunEv+0xb) [0x9c8ecb]
    grpc::ThreadManager::WorkerThread::Run() at ??:?
(7): /home/melvin/bess/core/bessd() [0xc2640f]
    execute_native_thread_routine at thread.o:?
(8): /lib/x86_64-linux-gnu/libpthread.so.0(+0x76b9) [0x7f5b44f216b9]
    start_thread at ??:?
(9): /lib/x86_64-linux-gnu/libc.so.6(clone+0x6c) [0x7f5b44c5782c]
    clone at /build/glibc-9tT8Do/glibc-2.23/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:109
        (file/line not available)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,439,2017-05-04T19:59:54Z,2017-05-08T00:37:39Z,2017-08-09T01:23:06Z,MERGED,True,16,6,2,https://github.com/melvinw,bessctl: scan all workers in resume checks,2,[],https://github.com/NetSys/bess/pull/439,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/439#issuecomment-300597502,"Currently, propagate_active_workers() and
CheckSchedulingConstraints() don't handle the cases when workers are
created in any order other than 0, 1, 2, 3, ...
Running the following script produces the crash below.
bess.pause_all()
bess.add_worker(wid=1, core=0)
bess.add_worker(wid=2, core=1)
bess.add_worker(wid=3, core=2)
bess.resume_all()

log:
*** Error: Unhandled exception in the configuration script (most recent call last)
  File ""foo.bess"", line 5, in <module>
    bess.resume_all()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 226, in resume_all
    return self.check_resume_all()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 220, in check_resume_all
    ret = self.check_constraints()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 191, in check_constraints
    response = self.check_scheduling_constraints()
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 231, in check_scheduling_constraints
    return self._request('CheckSchedulingConstraints')
  File ""/home/melvin/bess/bessctl/../libbess-python/bess.py"", line 148, in _request
    raise self.RPCError(str(e))
*** Error: RPC failed to localhost:10514 - <_Rendezvous of RPC that terminated with (StatusCode.UNAVAILABLE, {""created"":""@1493924686.381156070"",""description"":""EOF"",""file"":""src/core/lib/iomgr/tcp_posix.c"",""file_line"":235,""grpc_status"":14})>
From /tmp/bessd_crash.log (Thu May  4 12:04:46 2017):
A critical error has occured. Aborting...
Signal: 11 (Segmentation fault), si_code: 1 (SEGV_MAPERR: address not mapped to object)
pid: 11334, tid: 11347, address: 0x20, IP: 0x62f7ab
Backtrace (recent calls first) ---
(0): /home/melvin/bess/core/bessd(_Z23propagate_active_workerv+0x1ab) [0x62f7ab]
    propagate_active_worker() at /home/melvin/bess/core/module.cc:683
         680:   for (int i = 0; i < num_workers; i++) {
         681:     int socket = 1ull << workers[i]->socket();
         682:     int core = workers[i]->core();
      -> 683:     bess::TrafficClass *root = workers[i]->scheduler()->root();
         684:     if (root) {
         685:       root->Traverse([i, socket, core](bess::TCChildArgs *args) {
         686:         bess::TrafficClass *c = args->child();
(1): /home/melvin/bess/core/bessd(_ZN15BESSControlImpl26CheckSchedulingConstraintsEPN4grpc13ServerContextEPKN4bess2pb12EmptyRequestEPNS4_34CheckSchedulingConstraintsResponseE+0x3e) [0x645d0e]
    BESSControlImpl::CheckSchedulingConstraints(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*) at /home/melvin/bess/core/bessctl.cc:583
      -> 583:     propagate_active_worker();
(2): /home/melvin/bess/core/bessd(_ZNSt17_Function_handlerIFN4grpc6StatusEPN4bess2pb11BESSControl7ServiceEPNS0_13ServerContextEPKNS3_12EmptyRequestEPNS3_34CheckSchedulingConstraintsResponseEESt7_Mem_fnIMS5_FS1_S8_SB_SD_EEE9_M_invokeERKSt9_Any_dataOS6_OS8_OSB_OSD_+0x47) [0x6a9307]
    grpc::Status std::_Mem_fn_base<grpc::Status (bess::pb::BESSControl::Service::*)(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*), true>::operator()<grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*, void>(bess::pb::BESSControl::Service*, grpc::ServerContext*&&, bess::pb::EmptyRequest const*&&, bess::pb::CheckSchedulingConstraintsResponse*&&) const at /usr/include/c++/5/functional:600
      -> 600:   { return (__object->*_M_pmf)(std::forward<_Args>(__args)...); }
     (inlined by) std::_Function_handler<grpc::Status (bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*), std::_Mem_fn<grpc::Status (bess::pb::BESSControl::Service::*)(grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*)> >::_M_invoke(std::_Any_data const&, bess::pb::BESSControl::Service*&&, grpc::ServerContext*&&, bess::pb::EmptyRequest const*&&, bess::pb::CheckSchedulingConstraintsResponse*&&) at /usr/include/c++/5/functional:1857
      -> 1857:      std::forward<_ArgTypes>(__args)...);
(3): /home/melvin/bess/core/bessd(_ZN4grpc16RpcMethodHandlerIN4bess2pb11BESSControl7ServiceENS2_12EmptyRequestENS2_34CheckSchedulingConstraintsResponseEE10RunHandlerERKNS_13MethodHandler16HandlerParameterE+0xae) [0x6c379e]
    std::function<grpc::Status (bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*)>::operator()(bess::pb::BESSControl::Service*, grpc::ServerContext*, bess::pb::EmptyRequest const*, bess::pb::CheckSchedulingConstraintsResponse*) const at /usr/include/c++/5/functional:2267
      -> 2267:       return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
     (inlined by) grpc::RpcMethodHandler<bess::pb::BESSControl::Service, bess::pb::EmptyRequest, bess::pb::CheckSchedulingConstraintsResponse>::RunHandler(grpc::MethodHandler::HandlerParameter const&) at /usr/local/include/grpc++/impl/codegen/method_handler_impl.h:59
      -> 59:       status = func_(service_, param.server_context, &req, &rsp);
(4): /home/melvin/bess/core/bessd(_ZN4grpc6Server24SyncRequestThreadManager6DoWorkEPvb+0x898) [0x9c6b38]
    grpc::Server::SyncRequestThreadManager::DoWork(void*, bool) at ??:?
(5): /home/melvin/bess/core/bessd(_ZN4grpc13ThreadManager12MainWorkLoopEv+0xc6) [0x9c8e66]
    grpc::ThreadManager::MainWorkLoop() at ??:?
(6): /home/melvin/bess/core/bessd(_ZN4grpc13ThreadManager12WorkerThread3RunEv+0xb) [0x9c8ecb]
    grpc::ThreadManager::WorkerThread::Run() at ??:?
(7): /home/melvin/bess/core/bessd() [0xc2640f]
    execute_native_thread_routine at thread.o:?
(8): /lib/x86_64-linux-gnu/libpthread.so.0(+0x76b9) [0x7f5b44f216b9]
    start_thread at ??:?
(9): /lib/x86_64-linux-gnu/libc.so.6(clone+0x6c) [0x7f5b44c5782c]
    clone at /build/glibc-9tT8Do/glibc-2.23/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:109
        (file/line not available)","Codecov Report

Merging #439 into master will increase coverage by 1%.
The diff coverage is 80%.


@@          Coverage Diff          @@
##           master   #439   +/-   ##
=====================================
+ Coverage      30%    31%   +1%     
=====================================
  Files         162    162           
  Lines        8212   8215    +3     
=====================================
+ Hits         2473   2518   +45     
+ Misses       5739   5697   -42



Impacted Files
Coverage Δ





core/module.cc
56% <100%> (ø)
⬆️


core/bessctl.cc
39% <67%> (+7%)
⬆️


core/drivers/unix_socket.cc
1% <0%> (-82%)
⬇️


core/modules/port_out.cc
3% <0%> (-72%)
⬇️


core/modules/port_inc.cc
4% <0%> (-65%)
⬇️


core/modules/random_update.cc
4% <0%> (-59%)
⬇️


core/port.h
32% <0%> (-54%)
⬇️


core/utils/ether.cc
0% <0%> (-53%)
⬇️


core/modules/port_inc.h
0% <0%> (-50%)
⬇️


core/modules/port_out.h
0% <0%> (-50%)
⬇️


... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 19d3e60...6e7c03e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,440,2017-05-05T00:45:52Z,2017-05-08T00:36:51Z,2017-05-08T06:54:37Z,MERGED,True,7,9,3,https://github.com/changlan,Stabilizes code coverage data,1,[],https://github.com/NetSys/bess/pull/440,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/440,"If DEBUG=1, run unit tests only
Use gcov-5
Remove lcov on CI since it seems to be useless

This PR should address #434 and #388.","If DEBUG=1, run unit tests only
Use gcov-5
Remove lcov on CI since it seems to be useless

This PR should address #434 and #388.",True,{}
NetSys/bess,https://github.com/NetSys/bess,440,2017-05-05T00:45:52Z,2017-05-08T00:36:51Z,2017-05-08T06:54:37Z,MERGED,True,7,9,3,https://github.com/changlan,Stabilizes code coverage data,1,[],https://github.com/NetSys/bess/pull/440,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/440#issuecomment-299375577,"If DEBUG=1, run unit tests only
Use gcov-5
Remove lcov on CI since it seems to be useless

This PR should address #434 and #388.","Could you briefly describe here the changes and why they are needed, for future reference, particularly for the followings?

Installing g++-5: is it for gcov-5? If so, could you add a comment in the travis script?
Why left only the C++ unit tests? Because other tests do not accumulate the results correctly? Because others require different GCOV_PREFIX_STRIP values?

I believe the use of lcov was for tests (#395) and it is safe for removal.",True,{}
NetSys/bess,https://github.com/NetSys/bess,440,2017-05-05T00:45:52Z,2017-05-08T00:36:51Z,2017-05-08T06:54:37Z,MERGED,True,7,9,3,https://github.com/changlan,Stabilizes code coverage data,1,[],https://github.com/NetSys/bess/pull/440,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/440#issuecomment-299519921,"If DEBUG=1, run unit tests only
Use gcov-5
Remove lcov on CI since it seems to be useless

This PR should address #434 and #388.","Yes. I added the comment.
Those runtime integration tests have some sort of nondeterminism that leads to fluctuations of code coverage data we saw. I remove them and only include unit tests.",True,{}
NetSys/bess,https://github.com/NetSys/bess,440,2017-05-05T00:45:52Z,2017-05-08T00:36:51Z,2017-05-08T06:54:37Z,MERGED,True,7,9,3,https://github.com/changlan,Stabilizes code coverage data,1,[],https://github.com/NetSys/bess/pull/440,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/440#issuecomment-299523744,"If DEBUG=1, run unit tests only
Use gcov-5
Remove lcov on CI since it seems to be useless

This PR should address #434 and #388.","Chang you are the king.
…
On Fri, May 5, 2017 at 10:02 AM, Chang Lan ***@***.***> wrote:

    - Yes. I added the comment.
    - Those runtime integration tests have some sort of nondeterminism
    that leads to fluctuations of code coverage data we saw. I remove them and
    only include unit tests.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#440 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6Fl-oKdBQguxavf9fZkEsF0QpHTAKks5r21YLgaJpZM4NRYZ->
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,440,2017-05-05T00:45:52Z,2017-05-08T00:36:51Z,2017-05-08T06:54:37Z,MERGED,True,7,9,3,https://github.com/changlan,Stabilizes code coverage data,1,[],https://github.com/NetSys/bess/pull/440,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/440#issuecomment-299538600,"If DEBUG=1, run unit tests only
Use gcov-5
Remove lcov on CI since it seems to be useless

This PR should address #434 and #388.","Even if they are non-deterministic to some extent, they should have been cumulative; i.e., non-unittest should only increase the coverage from the baseline (28% from unit tests). But we have seen the coverage number going far below 28% many times. This may suggest that the real problem is ""the result from later tests did not accumulate correctly"", not ""later tests had non-determinism""? Could you check on this...?
My concern is that DEBUG=1 used to have served two roles: 1. running the code in debug mode and 2. collecting coverage data. The new change is for the role 2 but nullifying the role 1. One option might be separating COVERAGE=1 from DEBUG=1, this is what I would do as a last resort...
Perhaps the ideal case would be, when DEBUG=1,

All tests run, no matter whether they are unit or non-unit tests,
All tests generate coverage data in a cumulative manner, and
The final resulting coverage is reasonably stable.",True,{}
NetSys/bess,https://github.com/NetSys/bess,440,2017-05-05T00:45:52Z,2017-05-08T00:36:51Z,2017-05-08T06:54:37Z,MERGED,True,7,9,3,https://github.com/changlan,Stabilizes code coverage data,1,[],https://github.com/NetSys/bess/pull/440,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/440#issuecomment-299545092,"If DEBUG=1, run unit tests only
Use gcov-5
Remove lcov on CI since it seems to be useless

This PR should address #434 and #388.","Sorry, I guess I wasn't clear. The baseline (unit tests) wasn't accumulated correctly since GCOV_PREFIX_STRIP was incorrect. Therefore the old coverage result was actually only reflecting the later tests, and those tests have non-determinism (or other problems that I haven't figure out). That's probably why the data is fluctuating. So my initial intention is that the coverage should reflect the unit tests.
You are right about the two roles. I am looking into on how to stabilize the coverage of other tests. If that turns out to be nontrivial, perhaps the only option is:

Separate DEBUG and COVERAGE
If COVERAGE=1, run unit tests only.",True,{}
NetSys/bess,https://github.com/NetSys/bess,440,2017-05-05T00:45:52Z,2017-05-08T00:36:51Z,2017-05-08T06:54:37Z,MERGED,True,7,9,3,https://github.com/changlan,Stabilizes code coverage data,1,[],https://github.com/NetSys/bess/pull/440,https://github.com/changlan,7,https://github.com/NetSys/bess/pull/440#issuecomment-299591908,"If DEBUG=1, run unit tests only
Use gcov-5
Remove lcov on CI since it seems to be useless

This PR should address #434 and #388.",Done. Let's see if the data is stable.,True,{}
NetSys/bess,https://github.com/NetSys/bess,440,2017-05-05T00:45:52Z,2017-05-08T00:36:51Z,2017-05-08T06:54:37Z,MERGED,True,7,9,3,https://github.com/changlan,Stabilizes code coverage data,1,[],https://github.com/NetSys/bess/pull/440,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/440#issuecomment-299747447,"If DEBUG=1, run unit tests only
Use gcov-5
Remove lcov on CI since it seems to be useless

This PR should address #434 and #388.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,441,2017-05-08T08:56:22Z,2017-05-08T20:26:51Z,2017-05-09T19:19:51Z,MERGED,True,6,6,1,https://github.com/sangjinhan,Fix errors in DPDK custom configuration file,1,[],https://github.com/NetSys/bess/pull/441,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/441,"This PR fixes the issue that Mellanox PMD drivers are not built even when it should, which is caused by the following the problems:

CONFIG_RTE_... should have a value y or n, not 'Y' or 'N'.
Mellanox drivers should be enabled by default

It's supposed to be ""disabled"" when dependency is not available.
(not that it is enabled when dependency is available)","This PR fixes the issue that Mellanox PMD drivers are not built even when it should, which is caused by the following the problems:

CONFIG_RTE_... should have a value y or n, not 'Y' or 'N'.
Mellanox drivers should be enabled by default

It's supposed to be ""disabled"" when dependency is not available.
(not that it is enabled when dependency is available)",True,{}
NetSys/bess,https://github.com/NetSys/bess,441,2017-05-08T08:56:22Z,2017-05-08T20:26:51Z,2017-05-09T19:19:51Z,MERGED,True,6,6,1,https://github.com/sangjinhan,Fix errors in DPDK custom configuration file,1,[],https://github.com/NetSys/bess/pull/441,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/441#issuecomment-299980939,"This PR fixes the issue that Mellanox PMD drivers are not built even when it should, which is caused by the following the problems:

CONFIG_RTE_... should have a value y or n, not 'Y' or 'N'.
Mellanox drivers should be enabled by default

It's supposed to be ""disabled"" when dependency is not available.
(not that it is enabled when dependency is available)","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,442,2017-05-08T23:41:03Z,2017-05-10T03:26:07Z,2017-05-15T07:02:33Z,MERGED,True,80,72,2,https://github.com/changlan,tc: Add test for RemoveChild(),1,[],https://github.com/NetSys/bess/pull/442,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/442,"This PR adds tests for RemoveChild() in traffic_class, as a part of the ongoing effort to improve code coverage.","This PR adds tests for RemoveChild() in traffic_class, as a part of the ongoing effort to improve code coverage.",True,{}
NetSys/bess,https://github.com/NetSys/bess,442,2017-05-08T23:41:03Z,2017-05-10T03:26:07Z,2017-05-15T07:02:33Z,MERGED,True,80,72,2,https://github.com/changlan,tc: Add test for RemoveChild(),1,[],https://github.com/NetSys/bess/pull/442,https://github.com/barath,2,https://github.com/NetSys/bess/pull/442#issuecomment-300021321,"This PR adds tests for RemoveChild() in traffic_class, as a part of the ongoing effort to improve code coverage.",LGTM,True,{}
NetSys/bess,https://github.com/NetSys/bess,442,2017-05-08T23:41:03Z,2017-05-10T03:26:07Z,2017-05-15T07:02:33Z,MERGED,True,80,72,2,https://github.com/changlan,tc: Add test for RemoveChild(),1,[],https://github.com/NetSys/bess/pull/442,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/442#issuecomment-300025196,"This PR adds tests for RemoveChild() in traffic_class, as a part of the ongoing effort to improve code coverage.","Codecov Report

Merging #442 into master will increase coverage by 4%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #442    +/-   ##
======================================
+ Coverage      34%    37%    +4%     
======================================
  Files         164    164            
  Lines        8032   8035     +3     
  Branches     1529   1528     -1     
======================================
+ Hits         2693   3006   +313     
+ Misses       4958   4590   -368     
- Partials      381    439    +58



Impacted Files
Coverage Δ





core/module.h
70% <0%> (+2%)
⬆️


core/bessctl.cc
31% <0%> (+5%)
⬆️


core/worker.h
89% <0%> (+5%)
⬆️


core/packet.h
49% <0%> (+8%)
⬆️


core/utils/copy.h
54% <0%> (+11%)
⬆️


core/traffic_class.cc
79% <0%> (+15%)
⬆️


core/port.h
93% <0%> (+17%)
⬆️


core/modules/rewrite.cc
79% <0%> (+21%)
⬆️


core/utils/extended_priority_queue.h
87% <0%> (+23%)
⬆️


core/modules/hash_lb.cc
37% <0%> (+33%)
⬆️


... and 8 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7bb5c24...2c3c8a7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,442,2017-05-08T23:41:03Z,2017-05-10T03:26:07Z,2017-05-15T07:02:33Z,MERGED,True,80,72,2,https://github.com/changlan,tc: Add test for RemoveChild(),1,[],https://github.com/NetSys/bess/pull/442,https://github.com/barath,4,https://github.com/NetSys/bess/pull/442#issuecomment-300363448,"This PR adds tests for RemoveChild() in traffic_class, as a part of the ongoing effort to improve code coverage.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,444,2017-05-09T19:17:12Z,2017-05-15T22:14:18Z,2017-05-22T19:29:48Z,MERGED,True,194,147,10,https://github.com/barath,Modularizes the scheduler.,6,['enhancement'],https://github.com/NetSys/bess/pull/444,https://github.com/barath,1,https://github.com/NetSys/bess/pull/444,"The current scheduler (""default"") is made the default.","The current scheduler (""default"") is made the default.",True,{}
NetSys/bess,https://github.com/NetSys/bess,444,2017-05-09T19:17:12Z,2017-05-15T22:14:18Z,2017-05-22T19:29:48Z,MERGED,True,194,147,10,https://github.com/barath,Modularizes the scheduler.,6,['enhancement'],https://github.com/NetSys/bess/pull/444,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/444#issuecomment-300283590,"The current scheduler (""default"") is made the default.","Codecov Report

Merging #444 into master will decrease coverage by 9%.
The diff coverage is 65%.


@@           Coverage Diff           @@
##           master   #444     +/-   ##
=======================================
- Coverage      42%    33%     -9%     
=======================================
  Files         164    165      +1     
  Lines        8032   8911    +879     
  Branches     1531   1735    +204     
=======================================
- Hits         3362   2900    -462     
- Misses       4170   5613   +1443     
+ Partials      500    398    -102



Impacted Files
Coverage Δ





core/traffic_class.h
86% <ø> (ø)
⬆️


core/worker.h
84% <ø> (ø)
⬆️


core/bessctl.cc
20% <0%> (-15%)
⬇️


core/scheduler.h
54% <71%> (-28%)
⬇️


core/worker.cc
61% <75%> (-12%)
⬇️


core/modules/vlan_pop.h
0% <0%> (-100%)
⬇️


core/modules/vlan_push.cc
9% <0%> (-87%)
⬇️


core/modules/vlan_pop.cc
6% <0%> (-86%)
⬇️


core/modules/exact_match.h
0% <0%> (-79%)
⬇️


core/modules/wildcard_match.h
0% <0%> (-79%)
⬇️


... and 62 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 12b52cb...152916f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,444,2017-05-09T19:17:12Z,2017-05-15T22:14:18Z,2017-05-22T19:29:48Z,MERGED,True,194,147,10,https://github.com/barath,Modularizes the scheduler.,6,['enhancement'],https://github.com/NetSys/bess/pull/444,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/444#issuecomment-301620326,"The current scheduler (""default"") is made the default.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,445,2017-05-09T19:41:21Z,2017-05-10T03:27:10Z,2017-05-15T07:02:32Z,MERGED,True,90,39,3,https://github.com/changlan,util: Add tests for extended_priority_queue,1,[],https://github.com/NetSys/bess/pull/445,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/445,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,445,2017-05-09T19:41:21Z,2017-05-10T03:27:10Z,2017-05-15T07:02:32Z,MERGED,True,90,39,3,https://github.com/changlan,util: Add tests for extended_priority_queue,1,[],https://github.com/NetSys/bess/pull/445,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/445#issuecomment-300289288,,"Codecov Report

Merging #445 into master will increase coverage by 5%.
The diff coverage is 83%.


@@          Coverage Diff           @@
##           master   #445    +/-   ##
======================================
+ Coverage      34%    39%    +5%     
======================================
  Files         164    164            
  Lines        8032   8036     +4     
  Branches     1529   1528     -1     
======================================
+ Hits         2693   3122   +429     
+ Misses       4958   4458   -500     
- Partials      381    456    +75



Impacted Files
Coverage Δ





core/utils/extended_priority_queue.h
83% <100%> (+19%)
⬆️


core/traffic_class.h
86% <78%> (+1%)
⬆️


core/modules/ip_lookup.cc
4% <0%> (-59%)
⬇️


core/modules/ip_lookup.h
0% <0%> (-50%)
⬇️


core/module.cc
69% <0%> (ø)
⬆️


core/metadata.cc
80% <0%> (ø)
⬆️


core/utils/cuckoo_map.h
79% <0%> (+2%)
⬆️


core/module.h
71% <0%> (+3%)
⬆️


core/bessctl.cc
36% <0%> (+10%)
⬆️


core/message.cc
68% <0%> (+13%)
⬆️


... and 15 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7bb5c24...9b967ad. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,445,2017-05-09T19:41:21Z,2017-05-10T03:27:10Z,2017-05-15T07:02:32Z,MERGED,True,90,39,3,https://github.com/changlan,util: Add tests for extended_priority_queue,1,[],https://github.com/NetSys/bess/pull/445,https://github.com/barath,3,https://github.com/NetSys/bess/pull/445#issuecomment-300292189,,Thanks for adding these tests!,True,{}
NetSys/bess,https://github.com/NetSys/bess,445,2017-05-09T19:41:21Z,2017-05-10T03:27:10Z,2017-05-15T07:02:32Z,MERGED,True,90,39,3,https://github.com/changlan,util: Add tests for extended_priority_queue,1,[],https://github.com/NetSys/bess/pull/445,https://github.com/barath,4,https://github.com/NetSys/bess/pull/445#issuecomment-300363558,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,446,2017-05-10T00:30:39Z,2017-05-10T03:24:40Z,2017-05-10T03:25:47Z,MERGED,True,5,1,3,https://github.com/apanda,Fix `WorkerSplit` and `Bypass` model,2,[],https://github.com/NetSys/bess/pull/446,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/446,Both modules are thread safe and worker_split.bess uses them as such.,Both modules are thread safe and worker_split.bess uses them as such.,True,{}
NetSys/bess,https://github.com/NetSys/bess,446,2017-05-10T00:30:39Z,2017-05-10T03:24:40Z,2017-05-10T03:25:47Z,MERGED,True,5,1,3,https://github.com/apanda,Fix `WorkerSplit` and `Bypass` model,2,[],https://github.com/NetSys/bess/pull/446,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/446#issuecomment-300344240,Both modules are thread safe and worker_split.bess uses them as such.,"Codecov Report

Merging #446 into master will increase coverage by 2%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #446    +/-   ##
======================================
+ Coverage      34%    36%    +2%     
======================================
  Files         164    164            
  Lines        8032   8034     +2     
  Branches     1529   1528     -1     
======================================
+ Hits         2693   2880   +187     
+ Misses       4958   4750   -208     
- Partials      381    404    +23



Impacted Files
Coverage Δ





core/modules/bypass.h
0% <0%> (ø)
⬆️


core/modules/worker_split.h
0% <0%> (ø)
⬆️


core/modules/flowgen.h
0% <0%> (-67%)
⬇️


core/modules/flowgen.cc
1% <0%> (-60%)
⬇️


core/modules/ip_lookup.cc
4% <0%> (-59%)
⬇️


core/utils/random.h
46% <0%> (-54%)
⬇️


core/modules/ip_lookup.h
0% <0%> (-50%)
⬇️


core/pktbatch.h
50% <0%> (-20%)
⬇️


core/module.cc
62% <0%> (-6%)
⬇️


core/utils/cuckoo_map.h
78% <0%> (+1%)
⬆️


... and 23 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7bb5c24...3428e22. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,446,2017-05-10T00:30:39Z,2017-05-10T03:24:40Z,2017-05-10T03:25:47Z,MERGED,True,5,1,3,https://github.com/apanda,Fix `WorkerSplit` and `Bypass` model,2,[],https://github.com/NetSys/bess/pull/446,https://github.com/barath,3,https://github.com/NetSys/bess/pull/446#issuecomment-300363171,Both modules are thread safe and worker_split.bess uses them as such.,"Ah, good point -- I didn't notice that.  LGTM.",True,{}
NetSys/bess,https://github.com/NetSys/bess,446,2017-05-10T00:30:39Z,2017-05-10T03:24:40Z,2017-05-10T03:25:47Z,MERGED,True,5,1,3,https://github.com/apanda,Fix `WorkerSplit` and `Bypass` model,2,[],https://github.com/NetSys/bess/pull/446,https://github.com/barath,4,https://github.com/NetSys/bess/pull/446#issuecomment-300363341,Both modules are thread safe and worker_split.bess uses them as such.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,447,2017-05-10T22:26:37Z,2017-05-11T18:00:20Z,2017-05-15T07:02:30Z,MERGED,True,12,26,5,https://github.com/changlan,port: Virtualize Port and delete dead codes,1,[],https://github.com/NetSys/bess/pull/447,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/447,"Init(), DeInit(), RecvPackets(), SendPackets() should always be defined
when creating a new driver. To make the process less error-prone, we can enforce
this by making those functions purely virtual.","Init(), DeInit(), RecvPackets(), SendPackets() should always be defined
when creating a new driver. To make the process less error-prone, we can enforce
this by making those functions purely virtual.",True,{}
NetSys/bess,https://github.com/NetSys/bess,447,2017-05-10T22:26:37Z,2017-05-11T18:00:20Z,2017-05-15T07:02:30Z,MERGED,True,12,26,5,https://github.com/changlan,port: Virtualize Port and delete dead codes,1,[],https://github.com/NetSys/bess/pull/447,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/447#issuecomment-300636340,"Init(), DeInit(), RecvPackets(), SendPackets() should always be defined
when creating a new driver. To make the process less error-prone, we can enforce
this by making those functions purely virtual.","Codecov Report

Merging #447 into master will increase coverage by 6%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #447    +/-   ##
======================================
+ Coverage      35%    42%    +6%     
======================================
  Files         164    164            
  Lines        8032   8034     +2     
  Branches     1529   1529            
======================================
+ Hits         2823   3344   +521     
+ Misses       4806   4227   -579     
- Partials      403    463    +60



Impacted Files
Coverage Δ





core/port.cc
80% <ø> (+5%)
⬆️


core/drivers/vport_zc.h
100% <ø> (ø)
⬆️


core/port.h
93% <ø> (+17%)
⬆️


core/drivers/vport.h
100% <ø> (ø)
⬆️


core/modules/vlan_pop.h
0% <0%> (-100%)
⬇️


core/modules/vlan_push.cc
8% <0%> (-88%)
⬇️


core/modules/vlan_pop.cc
8% <0%> (-85%)
⬇️


core/modules/queue.h
0% <0%> (-67%)
⬇️


core/modules/hash_lb.h
0% <0%> (-50%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


... and 39 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 82bf1ed...50f60fe. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,447,2017-05-10T22:26:37Z,2017-05-11T18:00:20Z,2017-05-15T07:02:30Z,MERGED,True,12,26,5,https://github.com/changlan,port: Virtualize Port and delete dead codes,1,[],https://github.com/NetSys/bess/pull/447,https://github.com/barath,3,https://github.com/NetSys/bess/pull/447#issuecomment-300868684,"Init(), DeInit(), RecvPackets(), SendPackets() should always be defined
when creating a new driver. To make the process less error-prone, we can enforce
this by making those functions purely virtual.",LGTM.  Do all the other drivers properly override methods from Port?,True,{}
NetSys/bess,https://github.com/NetSys/bess,447,2017-05-10T22:26:37Z,2017-05-11T18:00:20Z,2017-05-15T07:02:30Z,MERGED,True,12,26,5,https://github.com/changlan,port: Virtualize Port and delete dead codes,1,[],https://github.com/NetSys/bess/pull/447,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/447#issuecomment-300869098,"Init(), DeInit(), RecvPackets(), SendPackets() should always be defined
when creating a new driver. To make the process less error-prone, we can enforce
this by making those functions purely virtual.","Yes
…
On May 11, 2017 10:57 AM, ""Barath Raghavan"" ***@***.***> wrote:
 LGTM. Do all the other drivers properly override methods from Port?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#447 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk0nZUxC6fcIaDPkf_Fh_1OL1-l7k0wks5r40wlgaJpZM4NXTDr>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,447,2017-05-10T22:26:37Z,2017-05-11T18:00:20Z,2017-05-15T07:02:30Z,MERGED,True,12,26,5,https://github.com/changlan,port: Virtualize Port and delete dead codes,1,[],https://github.com/NetSys/bess/pull/447,https://github.com/barath,5,https://github.com/NetSys/bess/pull/447#issuecomment-300873772,"Init(), DeInit(), RecvPackets(), SendPackets() should always be defined
when creating a new driver. To make the process less error-prone, we can enforce
this by making those functions purely virtual.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,448,2017-05-14T21:15:53Z,2017-05-15T18:15:39Z,2017-05-15T18:17:53Z,MERGED,True,10,4,1,https://github.com/sangjinhan,Fix false style error detection,2,[],https://github.com/NetSys/bess/pull/448,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/448,"When there are multiple files to commit, LF is used as a separator between diff results. It causes the pre-commit hook to (incorrectly) recognize the LF characters that there are something requiring reformatting.","When there are multiple files to commit, LF is used as a separator between diff results. It causes the pre-commit hook to (incorrectly) recognize the LF characters that there are something requiring reformatting.",True,{}
NetSys/bess,https://github.com/NetSys/bess,448,2017-05-14T21:15:53Z,2017-05-15T18:15:39Z,2017-05-15T18:17:53Z,MERGED,True,10,4,1,https://github.com/sangjinhan,Fix false style error detection,2,[],https://github.com/NetSys/bess/pull/448,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/448#issuecomment-301343112,"When there are multiple files to commit, LF is used as a separator between diff results. It causes the pre-commit hook to (incorrectly) recognize the LF characters that there are something requiring reformatting.","Codecov Report

Merging #448 into master will decrease coverage by 3%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #448    +/-   ##
======================================
- Coverage      42%    39%    -3%     
======================================
  Files         164    164            
  Lines        8032   8033     +1     
  Branches     1531   1530     -1     
======================================
- Hits         3362   3160   -202     
- Misses       4170   4435   +265     
+ Partials      500    438    -62



Impacted Files
Coverage Δ





core/modules/vlan_pop.h
0% <0%> (-100%)
⬇️


core/modules/vlan_pop.cc
8% <0%> (-85%)
⬇️


core/modules/exact_match.h
0% <0%> (-79%)
⬇️


core/drivers/unix_socket.cc
1% <0%> (-68%)
⬇️


core/modules/random_update.cc
3% <0%> (-60%)
⬇️


core/modules/exact_match.cc
3% <0%> (-58%)
⬇️


core/modules/port_inc.cc
3% <0%> (-58%)
⬇️


core/modules/port_out.cc
3% <0%> (-57%)
⬇️


core/modules/port_inc.h
0% <0%> (-50%)
⬇️


core/modules/port_out.h
0% <0%> (-50%)
⬇️


... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 12b52cb...fc8b359. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,448,2017-05-14T21:15:53Z,2017-05-15T18:15:39Z,2017-05-15T18:17:53Z,MERGED,True,10,4,1,https://github.com/sangjinhan,Fix false style error detection,2,[],https://github.com/NetSys/bess/pull/448,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/448#issuecomment-301559543,"When there are multiple files to commit, LF is used as a separator between diff results. It causes the pre-commit hook to (incorrectly) recognize the LF characters that there are something requiring reformatting.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,449,2017-05-14T21:50:42Z,2017-05-15T18:30:23Z,2017-05-15T18:32:06Z,MERGED,True,1111,900,57,https://github.com/sangjinhan,Revamp endianness and protocol code,24,[],https://github.com/NetSys/bess/pull/449,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/449,"This PR updates the code to use BigEndian types (be16_t, be32_t, and be64_t) whenever applicable. Since these are strongly typed, mistakes regarding endianness can be statically detected. All protocol header declaration now use BigEndian types for multi-byte fields. For example, the following code will cause build errors.
  Tcp *tcp;  // seq_num and ack_num are declared of be32_t type
  tcp->ack_num = tcp_received->seq_num + 1;  // ""+"" between be32_t and uint32_t is not defined

Instead, the code should be explicit about typing, like either of these.
tcp->ack_num = tcp_received->seq_num + be32_t(1);  // one way
tcp->ack_num = be32_t(tcp_received->seq_num.value() + 1);  // another way

The idea is from the Linux kernel source code, where developers are required to explicitly convert between cpu-order and network-order variables (because of C limitations, gcc cannot detect errors directly; Linux requires external verifier for this).

Update existing code using DPDK or libc functions to use utils/*.hfor strict type checking.
VXLAN header was added
Some structs were renamed for clarity and brevity:

EthHeader -> Ethernet
Ipv4Header -> Ipv4
TcpHeader -> Tcp
UdpHeader -> Udp
IcmpHeader -> Icmp
CIDRNetwork -> Ipv4Prefix","This PR updates the code to use BigEndian types (be16_t, be32_t, and be64_t) whenever applicable. Since these are strongly typed, mistakes regarding endianness can be statically detected. All protocol header declaration now use BigEndian types for multi-byte fields. For example, the following code will cause build errors.
  Tcp *tcp;  // seq_num and ack_num are declared of be32_t type
  tcp->ack_num = tcp_received->seq_num + 1;  // ""+"" between be32_t and uint32_t is not defined

Instead, the code should be explicit about typing, like either of these.
tcp->ack_num = tcp_received->seq_num + be32_t(1);  // one way
tcp->ack_num = be32_t(tcp_received->seq_num.value() + 1);  // another way

The idea is from the Linux kernel source code, where developers are required to explicitly convert between cpu-order and network-order variables (because of C limitations, gcc cannot detect errors directly; Linux requires external verifier for this).

Update existing code using DPDK or libc functions to use utils/*.hfor strict type checking.
VXLAN header was added
Some structs were renamed for clarity and brevity:

EthHeader -> Ethernet
Ipv4Header -> Ipv4
TcpHeader -> Tcp
UdpHeader -> Udp
IcmpHeader -> Icmp
CIDRNetwork -> Ipv4Prefix",True,{}
NetSys/bess,https://github.com/NetSys/bess,449,2017-05-14T21:50:42Z,2017-05-15T18:30:23Z,2017-05-15T18:32:06Z,MERGED,True,1111,900,57,https://github.com/sangjinhan,Revamp endianness and protocol code,24,[],https://github.com/NetSys/bess/pull/449,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/449#issuecomment-301342446,"This PR updates the code to use BigEndian types (be16_t, be32_t, and be64_t) whenever applicable. Since these are strongly typed, mistakes regarding endianness can be statically detected. All protocol header declaration now use BigEndian types for multi-byte fields. For example, the following code will cause build errors.
  Tcp *tcp;  // seq_num and ack_num are declared of be32_t type
  tcp->ack_num = tcp_received->seq_num + 1;  // ""+"" between be32_t and uint32_t is not defined

Instead, the code should be explicit about typing, like either of these.
tcp->ack_num = tcp_received->seq_num + be32_t(1);  // one way
tcp->ack_num = be32_t(tcp_received->seq_num.value() + 1);  // another way

The idea is from the Linux kernel source code, where developers are required to explicitly convert between cpu-order and network-order variables (because of C limitations, gcc cannot detect errors directly; Linux requires external verifier for this).

Update existing code using DPDK or libc functions to use utils/*.hfor strict type checking.
VXLAN header was added
Some structs were renamed for clarity and brevity:

EthHeader -> Ethernet
Ipv4Header -> Ipv4
TcpHeader -> Tcp
UdpHeader -> Udp
IcmpHeader -> Icmp
CIDRNetwork -> Ipv4Prefix","Codecov Report

Merging #449 into master will decrease coverage by 1%.
The diff coverage is 37%.


@@          Coverage Diff          @@
##           master   #449   +/-   ##
=====================================
- Coverage      42%    41%   -1%     
=====================================
  Files         164    165    +1     
  Lines        8032   8046   +14     
  Branches     1531   1530    -1     
=====================================
- Hits         3362   3315   -47     
- Misses       4170   4246   +76     
+ Partials      500    485   -15



Impacted Files
Coverage Δ





core/utils/ether.cc
87% <ø> (ø)
⬆️


core/modules/set_metadata.h
67% <ø> (ø)
⬆️


core/modules/update_ttl.h
0% <ø> (ø)
⬆️


core/modules/flowgen.h
67% <ø> (ø)
⬆️


core/modules/vxlan_encap.h
0% <ø> (ø)
⬆️


core/modules/vlan_push.h
50% <ø> (ø)
⬆️


core/modules/update.h
0% <ø> (ø)
⬆️


core/modules/random_update.h
50% <ø> (ø)
⬆️


core/modules/split.h
0% <ø> (ø)
⬆️


core/modules/drr.h
0% <ø> (ø)
⬆️


... and 59 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 12b52cb...3340e26. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,449,2017-05-14T21:50:42Z,2017-05-15T18:30:23Z,2017-05-15T18:32:06Z,MERGED,True,1111,900,57,https://github.com/sangjinhan,Revamp endianness and protocol code,24,[],https://github.com/NetSys/bess/pull/449,https://github.com/barath,3,https://github.com/NetSys/bess/pull/449#issuecomment-301563559,"This PR updates the code to use BigEndian types (be16_t, be32_t, and be64_t) whenever applicable. Since these are strongly typed, mistakes regarding endianness can be statically detected. All protocol header declaration now use BigEndian types for multi-byte fields. For example, the following code will cause build errors.
  Tcp *tcp;  // seq_num and ack_num are declared of be32_t type
  tcp->ack_num = tcp_received->seq_num + 1;  // ""+"" between be32_t and uint32_t is not defined

Instead, the code should be explicit about typing, like either of these.
tcp->ack_num = tcp_received->seq_num + be32_t(1);  // one way
tcp->ack_num = be32_t(tcp_received->seq_num.value() + 1);  // another way

The idea is from the Linux kernel source code, where developers are required to explicitly convert between cpu-order and network-order variables (because of C limitations, gcc cannot detect errors directly; Linux requires external verifier for this).

Update existing code using DPDK or libc functions to use utils/*.hfor strict type checking.
VXLAN header was added
Some structs were renamed for clarity and brevity:

EthHeader -> Ethernet
Ipv4Header -> Ipv4
TcpHeader -> Tcp
UdpHeader -> Udp
IcmpHeader -> Icmp
CIDRNetwork -> Ipv4Prefix",,True,{}
NetSys/bess,https://github.com/NetSys/bess,450,2017-05-14T22:25:32Z,2017-05-15T16:13:53Z,2017-05-15T16:15:56Z,MERGED,True,38,19,1,https://github.com/sangjinhan,Skip ZeroCopyVPort unittests when run by a non-root user,2,[],https://github.com/NetSys/bess/pull/450,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/450,The unittests for ZeroCopyVPort silently fails if not run by root during DPDK initialization. This commit will just skip (with a log message) the test in that case.,The unittests for ZeroCopyVPort silently fails if not run by root during DPDK initialization. This commit will just skip (with a log message) the test in that case.,True,{}
NetSys/bess,https://github.com/NetSys/bess,450,2017-05-14T22:25:32Z,2017-05-15T16:13:53Z,2017-05-15T16:15:56Z,MERGED,True,38,19,1,https://github.com/sangjinhan,Skip ZeroCopyVPort unittests when run by a non-root user,2,[],https://github.com/NetSys/bess/pull/450,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/450#issuecomment-301346487,The unittests for ZeroCopyVPort silently fails if not run by root during DPDK initialization. This commit will just skip (with a log message) the test in that case.,"Codecov Report

Merging #450 into master will decrease coverage by 6%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #450    +/-   ##
======================================
- Coverage      42%    36%    -6%     
======================================
  Files         164    164            
  Lines        8032   8026     -6     
  Branches     1531   1529     -2     
======================================
- Hits         3362   2887   -475     
- Misses       4170   4713   +543     
+ Partials      500    426    -74



Impacted Files
Coverage Δ





core/modules/vlan_pop.h
0% <0%> (-100%)
⬇️


core/drivers/vport_zc.cc
1% <0%> (-93%)
⬇️


core/modules/vlan_pop.cc
8% <0%> (-85%)
⬇️


core/modules/wildcard_match.h
0% <0%> (-79%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-74%)
⬇️


core/drivers/unix_socket.cc
1% <0%> (-68%)
⬇️


core/modules/random_update.cc
3% <0%> (-60%)
⬇️


core/modules/port_inc.cc
3% <0%> (-58%)
⬇️


core/modules/port_out.cc
3% <0%> (-57%)
⬇️


core/modules/port_inc.h
0% <0%> (-50%)
⬇️


... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 12b52cb...0c7f088. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,450,2017-05-14T22:25:32Z,2017-05-15T16:13:53Z,2017-05-15T16:15:56Z,MERGED,True,38,19,1,https://github.com/sangjinhan,Skip ZeroCopyVPort unittests when run by a non-root user,2,[],https://github.com/NetSys/bess/pull/450,https://github.com/barath,3,https://github.com/NetSys/bess/pull/450#issuecomment-301525049,The unittests for ZeroCopyVPort silently fails if not run by root during DPDK initialization. This commit will just skip (with a log message) the test in that case.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,451,2017-05-14T23:31:51Z,2017-05-15T16:17:52Z,2017-05-15T16:20:21Z,MERGED,True,4,1,2,https://github.com/sangjinhan,Fix packet exhaustion in DRR modules,2,[],https://github.com/NetSys/bess/pull/451,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/451,"The DRR module leaks Packet objects in two ways:

When the module fails to enqueue packets, they're not properly freed.
The default per-flow queue size is huge: 200,000. Two flows are enough to exhaust the entire packet pool (262,144), if queues start building up. It is now reduced to 8,192.

Since the DRR module in samples/drr.bess depletes the packet pool, the fast and slow traffic classes shows incorrect behavior as follows. Due to failure of packet allocations, they cannot keep up with the their limits (90kpps and 40kpps). It results in excessive scheduling of these TCs.
localhost:10514 $ monitor tc
16:03:51.536827          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !default_rr_0        1729.016    16239298       0.105      67.351       0.006   16469.467
W0 fast                 1165.459    10993218       0.030      20.157       0.003   38855.298
W0 !leaf_src1:0         1165.904    10997460       0.030      20.157       0.003   38870.142
W0 slow                  558.965     5240201       0.025      16.790       0.005   22371.824
W0 !leaf_src2:0          559.164     5242083       0.025      16.790       0.005   22379.729
W0 medium                  4.129        1560       0.050      30.363      32.000      82.678
W0 !leaf_q:0               4.131        1561       0.050      30.383      32.000      82.674
--------------------------------------------------------------------------------------------

The corrected behavior is like this:
16:20:35.515949          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !default_rr_0          21.689        5621       0.180     117.690      32.000     120.566
W0 fast                   12.947        2810       0.090      60.435      32.000     143.958
W0 !leaf_src1:0           12.945        2810       0.090      60.439      32.000     143.934
W0 slow                    6.010        1249       0.040      26.874      32.000     150.278
W0 !leaf_src2:0            6.003        1248       0.040      26.852      32.000     150.241
W0 medium                  2.736        1560       0.050      30.369      32.000      54.777
W0 !leaf_q:0               2.738        1561       0.050      30.388      32.000      54.780
--------------------------------------------------------------------------------------------","The DRR module leaks Packet objects in two ways:

When the module fails to enqueue packets, they're not properly freed.
The default per-flow queue size is huge: 200,000. Two flows are enough to exhaust the entire packet pool (262,144), if queues start building up. It is now reduced to 8,192.

Since the DRR module in samples/drr.bess depletes the packet pool, the fast and slow traffic classes shows incorrect behavior as follows. Due to failure of packet allocations, they cannot keep up with the their limits (90kpps and 40kpps). It results in excessive scheduling of these TCs.
localhost:10514 $ monitor tc
16:03:51.536827          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !default_rr_0        1729.016    16239298       0.105      67.351       0.006   16469.467
W0 fast                 1165.459    10993218       0.030      20.157       0.003   38855.298
W0 !leaf_src1:0         1165.904    10997460       0.030      20.157       0.003   38870.142
W0 slow                  558.965     5240201       0.025      16.790       0.005   22371.824
W0 !leaf_src2:0          559.164     5242083       0.025      16.790       0.005   22379.729
W0 medium                  4.129        1560       0.050      30.363      32.000      82.678
W0 !leaf_q:0               4.131        1561       0.050      30.383      32.000      82.674
--------------------------------------------------------------------------------------------

The corrected behavior is like this:
16:20:35.515949          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !default_rr_0          21.689        5621       0.180     117.690      32.000     120.566
W0 fast                   12.947        2810       0.090      60.435      32.000     143.958
W0 !leaf_src1:0           12.945        2810       0.090      60.439      32.000     143.934
W0 slow                    6.010        1249       0.040      26.874      32.000     150.278
W0 !leaf_src2:0            6.003        1248       0.040      26.852      32.000     150.241
W0 medium                  2.736        1560       0.050      30.369      32.000      54.777
W0 !leaf_q:0               2.738        1561       0.050      30.388      32.000      54.780
--------------------------------------------------------------------------------------------",True,{}
NetSys/bess,https://github.com/NetSys/bess,451,2017-05-14T23:31:51Z,2017-05-15T16:17:52Z,2017-05-15T16:20:21Z,MERGED,True,4,1,2,https://github.com/sangjinhan,Fix packet exhaustion in DRR modules,2,[],https://github.com/NetSys/bess/pull/451,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/451#issuecomment-301347499,"The DRR module leaks Packet objects in two ways:

When the module fails to enqueue packets, they're not properly freed.
The default per-flow queue size is huge: 200,000. Two flows are enough to exhaust the entire packet pool (262,144), if queues start building up. It is now reduced to 8,192.

Since the DRR module in samples/drr.bess depletes the packet pool, the fast and slow traffic classes shows incorrect behavior as follows. Due to failure of packet allocations, they cannot keep up with the their limits (90kpps and 40kpps). It results in excessive scheduling of these TCs.
localhost:10514 $ monitor tc
16:03:51.536827          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !default_rr_0        1729.016    16239298       0.105      67.351       0.006   16469.467
W0 fast                 1165.459    10993218       0.030      20.157       0.003   38855.298
W0 !leaf_src1:0         1165.904    10997460       0.030      20.157       0.003   38870.142
W0 slow                  558.965     5240201       0.025      16.790       0.005   22371.824
W0 !leaf_src2:0          559.164     5242083       0.025      16.790       0.005   22379.729
W0 medium                  4.129        1560       0.050      30.363      32.000      82.678
W0 !leaf_q:0               4.131        1561       0.050      30.383      32.000      82.674
--------------------------------------------------------------------------------------------

The corrected behavior is like this:
16:20:35.515949          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !default_rr_0          21.689        5621       0.180     117.690      32.000     120.566
W0 fast                   12.947        2810       0.090      60.435      32.000     143.958
W0 !leaf_src1:0           12.945        2810       0.090      60.439      32.000     143.934
W0 slow                    6.010        1249       0.040      26.874      32.000     150.278
W0 !leaf_src2:0            6.003        1248       0.040      26.852      32.000     150.241
W0 medium                  2.736        1560       0.050      30.369      32.000      54.777
W0 !leaf_q:0               2.738        1561       0.050      30.388      32.000      54.780
--------------------------------------------------------------------------------------------","Codecov Report

Merging #451 into master will increase coverage by 1%.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #451   +/-   ##
=====================================
+ Coverage      42%    42%   +1%     
=====================================
  Files         164    164           
  Lines        8032   8034    +2     
  Branches     1531   1531           
=====================================
+ Hits         3362   3414   +52     
+ Misses       4170   4132   -38     
+ Partials      500    488   -12



Impacted Files
Coverage Δ





core/modules/drr.cc
2% <ø> (ø)
⬆️


core/modules/drr.h
0% <ø> (ø)
⬆️


core/modules/vlan_pop.h
0% <0%> (-100%)
⬇️


core/modules/vlan_push.cc
8% <0%> (-88%)
⬇️


core/modules/vlan_pop.cc
8% <0%> (-85%)
⬇️


core/modules/exact_match.h
0% <0%> (-79%)
⬇️


core/modules/queue.h
0% <0%> (-67%)
⬇️


core/modules/exact_match.cc
3% <0%> (-58%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/modules/queue.cc
2% <0%> (-40%)
⬇️


... and 22 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 12b52cb...08f22bd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,451,2017-05-14T23:31:51Z,2017-05-15T16:17:52Z,2017-05-15T16:20:21Z,MERGED,True,4,1,2,https://github.com/sangjinhan,Fix packet exhaustion in DRR modules,2,[],https://github.com/NetSys/bess/pull/451,https://github.com/barath,3,https://github.com/NetSys/bess/pull/451#issuecomment-301526271,"The DRR module leaks Packet objects in two ways:

When the module fails to enqueue packets, they're not properly freed.
The default per-flow queue size is huge: 200,000. Two flows are enough to exhaust the entire packet pool (262,144), if queues start building up. It is now reduced to 8,192.

Since the DRR module in samples/drr.bess depletes the packet pool, the fast and slow traffic classes shows incorrect behavior as follows. Due to failure of packet allocations, they cannot keep up with the their limits (90kpps and 40kpps). It results in excessive scheduling of these TCs.
localhost:10514 $ monitor tc
16:03:51.536827          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !default_rr_0        1729.016    16239298       0.105      67.351       0.006   16469.467
W0 fast                 1165.459    10993218       0.030      20.157       0.003   38855.298
W0 !leaf_src1:0         1165.904    10997460       0.030      20.157       0.003   38870.142
W0 slow                  558.965     5240201       0.025      16.790       0.005   22371.824
W0 !leaf_src2:0          559.164     5242083       0.025      16.790       0.005   22379.729
W0 medium                  4.129        1560       0.050      30.363      32.000      82.678
W0 !leaf_q:0               4.131        1561       0.050      30.383      32.000      82.674
--------------------------------------------------------------------------------------------

The corrected behavior is like this:
16:20:35.515949          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !default_rr_0          21.689        5621       0.180     117.690      32.000     120.566
W0 fast                   12.947        2810       0.090      60.435      32.000     143.958
W0 !leaf_src1:0           12.945        2810       0.090      60.439      32.000     143.934
W0 slow                    6.010        1249       0.040      26.874      32.000     150.278
W0 !leaf_src2:0            6.003        1248       0.040      26.852      32.000     150.241
W0 medium                  2.736        1560       0.050      30.369      32.000      54.777
W0 !leaf_q:0               2.738        1561       0.050      30.388      32.000      54.780
--------------------------------------------------------------------------------------------",,True,{}
NetSys/bess,https://github.com/NetSys/bess,452,2017-05-15T04:18:04Z,2017-05-18T16:37:45Z,2017-05-22T19:29:49Z,MERGED,True,19,11,3,https://github.com/sangjinhan,Enhance versioning,6,[],https://github.com/NetSys/bess/pull/452,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/452,"version.h is updated whenever Makefile is executed. This confuses make, since it thinks something useful has been done:
$ make
...
$ make
$        # ""make: Nothing to be done for 'all'."" is not shown since version.h has been updated.
This PR fixes this behavior of Makefile, not updating version.h when unnecessary (e.g., modifying modules or unit tests). Also other minor updates include:

Allow custom versioning w/o git describe

This enables building BESS when git is not available.


Print out version info in log messages and bessd -t
Use 7 characters for commit hashes","version.h is updated whenever Makefile is executed. This confuses make, since it thinks something useful has been done:
$ make
...
$ make
$        # ""make: Nothing to be done for 'all'."" is not shown since version.h has been updated.
This PR fixes this behavior of Makefile, not updating version.h when unnecessary (e.g., modifying modules or unit tests). Also other minor updates include:

Allow custom versioning w/o git describe

This enables building BESS when git is not available.


Print out version info in log messages and bessd -t
Use 7 characters for commit hashes",True,{}
NetSys/bess,https://github.com/NetSys/bess,452,2017-05-15T04:18:04Z,2017-05-18T16:37:45Z,2017-05-22T19:29:49Z,MERGED,True,19,11,3,https://github.com/sangjinhan,Enhance versioning,6,[],https://github.com/NetSys/bess/pull/452,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/452#issuecomment-302465937,"version.h is updated whenever Makefile is executed. This confuses make, since it thinks something useful has been done:
$ make
...
$ make
$        # ""make: Nothing to be done for 'all'."" is not shown since version.h has been updated.
This PR fixes this behavior of Makefile, not updating version.h when unnecessary (e.g., modifying modules or unit tests). Also other minor updates include:

Allow custom versioning w/o git describe

This enables building BESS when git is not available.


Print out version info in log messages and bessd -t
Use 7 characters for commit hashes",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,453,2017-05-15T18:41:14Z,2017-05-15T20:25:08Z,2017-05-15T20:26:41Z,MERGED,True,17,12,6,https://github.com/barath,Fixes relevant warnings from flawfinder and cppcheck.,1,[],https://github.com/NetSys/bess/pull/453,https://github.com/barath,1,https://github.com/NetSys/bess/pull/453,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,453,2017-05-15T18:41:14Z,2017-05-15T20:25:08Z,2017-05-15T20:26:41Z,MERGED,True,17,12,6,https://github.com/barath,Fixes relevant warnings from flawfinder and cppcheck.,1,[],https://github.com/NetSys/bess/pull/453,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/453#issuecomment-301582010,,"Codecov Report

Merging #453 into master will decrease coverage by 1%.
The diff coverage is 33%.


@@          Coverage Diff           @@
##           master   #453    +/-   ##
======================================
- Coverage      36%    35%    -1%     
======================================
  Files         165    165            
  Lines        8043   8886   +843     
  Branches     1531   1726   +195     
======================================
+ Hits         2889   3103   +214     
- Misses       4731   5343   +612     
- Partials      423    440    +17



Impacted Files
Coverage Δ





core/modules/measure.h
0% <ø> (ø)
⬆️


core/utils/random.h
100% <ø> (ø)
⬆️


core/worker.cc
68% <0%> (ø)
⬆️


core/utils/histogram.h
68% <100%> (ø)
⬆️


core/utils/trie.h
79% <100%> (-4%)
⬇️


core/drivers/vport.cc
4% <20%> (ø)
⬆️


core/modules/ip_lookup.cc
5% <0%> (-56%)
⬇️


core/modules/ip_lookup.h
0% <0%> (-50%)
⬇️


core/modules/set_metadata.h
33% <0%> (-33%)
⬇️


core/utils/ip.cc
81% <0%> (-7%)
⬇️


... and 41 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 768548b...6724e35. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,453,2017-05-15T18:41:14Z,2017-05-15T20:25:08Z,2017-05-15T20:26:41Z,MERGED,True,17,12,6,https://github.com/barath,Fixes relevant warnings from flawfinder and cppcheck.,1,[],https://github.com/NetSys/bess/pull/453,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/453#issuecomment-301594118,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,454,2017-05-15T20:17:21Z,2017-05-15T20:18:00Z,2017-08-09T01:23:00Z,MERGED,True,1,1,1,https://github.com/melvinw,travis: fix typo in sanitzer flags,1,[],https://github.com/NetSys/bess/pull/454,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/454,"There is a typo in the definition of ASAN_OPTIONS that prevents travis
from outputting the sanitzer log. This commit fixes the typo.","There is a typo in the definition of ASAN_OPTIONS that prevents travis
from outputting the sanitzer log. This commit fixes the typo.",True,{}
NetSys/bess,https://github.com/NetSys/bess,454,2017-05-15T20:17:21Z,2017-05-15T20:18:00Z,2017-08-09T01:23:00Z,MERGED,True,1,1,1,https://github.com/melvinw,travis: fix typo in sanitzer flags,1,[],https://github.com/NetSys/bess/pull/454,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/454#issuecomment-301592218,"There is a typo in the definition of ASAN_OPTIONS that prevents travis
from outputting the sanitzer log. This commit fixes the typo.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,455,2017-05-15T20:38:30Z,2017-05-18T17:23:43Z,2017-05-22T19:29:47Z,MERGED,True,48,19,3,https://github.com/sangjinhan,Provide additional context info upon API failures,2,[],https://github.com/NetSys/bess/pull/455,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/455,"For complex controllers for BESS scripts, it could be challenging to figure out what caused API errors and why. This PR adds some additional information in case of BESS API errors.
Before:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)

After:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
     command: set_burst
 command_arg: {'burst': 100}
      module: s
       query: ModuleCommand
   query_arg: {'cmd': u'set_burst', 'name': u's', 'arg': {...}}","For complex controllers for BESS scripts, it could be challenging to figure out what caused API errors and why. This PR adds some additional information in case of BESS API errors.
Before:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)

After:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
     command: set_burst
 command_arg: {'burst': 100}
      module: s
       query: ModuleCommand
   query_arg: {'cmd': u'set_burst', 'name': u's', 'arg': {...}}",True,{}
NetSys/bess,https://github.com/NetSys/bess,455,2017-05-15T20:38:30Z,2017-05-18T17:23:43Z,2017-05-22T19:29:47Z,MERGED,True,48,19,3,https://github.com/sangjinhan,Provide additional context info upon API failures,2,[],https://github.com/NetSys/bess/pull/455,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/455#issuecomment-301888877,"For complex controllers for BESS scripts, it could be challenging to figure out what caused API errors and why. This PR adds some additional information in case of BESS API errors.
Before:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)

After:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
     command: set_burst
 command_arg: {'burst': 100}
      module: s
       query: ModuleCommand
   query_arg: {'cmd': u'set_burst', 'name': u's', 'arg': {...}}","While not directly related to this PR, a bug was fixed that protobuf_to_dict() does not correctly support protobuf Map type.",True,{}
NetSys/bess,https://github.com/NetSys/bess,455,2017-05-15T20:38:30Z,2017-05-18T17:23:43Z,2017-05-22T19:29:47Z,MERGED,True,48,19,3,https://github.com/sangjinhan,Provide additional context info upon API failures,2,[],https://github.com/NetSys/bess/pull/455,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/455#issuecomment-301896259,"For complex controllers for BESS scripts, it could be challenging to figure out what caused API errors and why. This PR adds some additional information in case of BESS API errors.
Before:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)

After:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
     command: set_burst
 command_arg: {'burst': 100}
      module: s
       query: ModuleCommand
   query_arg: {'cmd': u'set_burst', 'name': u's', 'arg': {...}}","Codecov Report

Merging #455 into master will decrease coverage by <1%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #455    +/-   ##
======================================
- Coverage      31%    31%   -<1%     
======================================
  Files         165    165            
  Lines        8042   8042            
  Branches     1529   1529            
======================================
- Hits         2523   2503    -20     
- Misses       5163   5190    +27     
+ Partials      356    349     -7



Impacted Files
Coverage Δ





core/modules/update.cc
5% <0%> (-66%)
⬇️


core/modules/random_update.cc
4% <0%> (-65%)
⬇️


core/modules/round_robin.h
0% <0%> (-50%)
⬇️


core/modules/update.h
0% <0%> (-50%)
⬇️


core/modules/random_update.h
0% <0%> (-50%)
⬇️


core/modules/round_robin.cc
4% <0%> (-24%)
⬇️


core/utils/endian.h
67% <0%> (-10%)
⬇️


core/module.cc
62% <0%> (ø)
⬇️


core/bessctl.cc
15% <0%> (ø)
⬇️


core/worker.cc
64% <0%> (+3%)
⬆️


... and 6 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3fee0de...3b78ce4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,455,2017-05-15T20:38:30Z,2017-05-18T17:23:43Z,2017-05-22T19:29:47Z,MERGED,True,48,19,3,https://github.com/sangjinhan,Provide additional context info upon API failures,2,[],https://github.com/NetSys/bess/pull/455,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/455#issuecomment-302482279,"For complex controllers for BESS scripts, it could be challenging to figure out what caused API errors and why. This PR adds some additional information in case of BESS API errors.
Before:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)

After:
localhost:10514 $ run samples/broken
...
*** Error: burst size must be [0,32]
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
     command: set_burst
 command_arg: {'burst': 100}
      module: s
       query: ModuleCommand
   query_arg: {'cmd': u'set_burst', 'name': u's', 'arg': {...}}",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,456,2017-05-15T20:39:13Z,2017-05-15T20:42:04Z,2017-05-15T20:42:07Z,MERGED,True,4,0,1,https://github.com/melvinw,travis: avoid redundant builds for pull requests,1,[],https://github.com/NetSys/bess/pull/456,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/456,"Currently Travis launches two builds for pull requests submitted from
branches of NetSys/bess. This is the dominant workflow at the moment and
as a result Travis is doing a lot of extra work and the feedback
loop on pull requests is unnecessarily long.
This commit does away with the extra work by limiting Travis to only run
push jobs on the master branch.","Currently Travis launches two builds for pull requests submitted from
branches of NetSys/bess. This is the dominant workflow at the moment and
as a result Travis is doing a lot of extra work and the feedback
loop on pull requests is unnecessarily long.
This commit does away with the extra work by limiting Travis to only run
push jobs on the master branch.",True,{}
NetSys/bess,https://github.com/NetSys/bess,457,2017-05-16T19:57:50Z,2017-05-17T23:44:24Z,2017-05-17T23:44:46Z,MERGED,True,4,4,4,https://github.com/sangjinhan,"Fix incorrect ""gates"" arguments in examples",1,[],https://github.com/NetSys/bess/pull/457,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/457,"gates takes a list of gate numbers, not the number of gates.","gates takes a list of gate numbers, not the number of gates.",True,{}
NetSys/bess,https://github.com/NetSys/bess,457,2017-05-16T19:57:50Z,2017-05-17T23:44:24Z,2017-05-17T23:44:46Z,MERGED,True,4,4,4,https://github.com/sangjinhan,"Fix incorrect ""gates"" arguments in examples",1,[],https://github.com/NetSys/bess/pull/457,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/457#issuecomment-301906459,"gates takes a list of gate numbers, not the number of gates.","Codecov Report

Merging #457 into master will increase coverage by 2%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #457    +/-   ##
======================================
+ Coverage      31%    34%    +2%     
======================================
  Files         165    165            
  Lines        8042   8044     +2     
  Branches     1529   1529            
======================================
+ Hits         2523   2701   +178     
+ Misses       5163   4946   -217     
- Partials      356    397    +41



Impacted Files
Coverage Δ





core/modules/update.cc
5% <0%> (-66%)
⬇️


core/modules/random_update.cc
4% <0%> (-65%)
⬇️


core/modules/random_update.h
0% <0%> (-50%)
⬇️


core/modules/update.h
0% <0%> (-50%)
⬇️


core/modules/round_robin.h
0% <0%> (-50%)
⬇️


core/modules/round_robin.cc
4% <0%> (-24%)
⬇️


core/utils/endian.h
67% <0%> (-10%)
⬇️


core/module.cc
62% <0%> (ø)
⬇️


core/utils/copy.h
46% <0%> (+3%)
⬆️


core/traffic_class.cc
79% <0%> (+4%)
⬆️


... and 14 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3fee0de...39455d0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,457,2017-05-16T19:57:50Z,2017-05-17T23:44:24Z,2017-05-17T23:44:46Z,MERGED,True,4,4,4,https://github.com/sangjinhan,"Fix incorrect ""gates"" arguments in examples",1,[],https://github.com/NetSys/bess/pull/457,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/457#issuecomment-302261388,"gates takes a list of gate numbers, not the number of gates.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,458,2017-05-16T22:01:49Z,2017-05-18T17:14:07Z,2017-05-22T19:29:46Z,MERGED,True,12,9,1,https://github.com/sangjinhan,Fix name collision of pktgen on multiple workers,1,[],https://github.com/NetSys/bess/pull/458,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/458,"perftest/pktgen.bess fails when used with multiple workers. This is because every worker thread tries to create a tc namedbit_limit.
$ BESS_PORTS=2 BESS_CORES=2 BESS_RATELIMIT_MBPS=10000 bessctl run perftest/pktgen -- monitor port
…
*** Error: Unhandled exception in the configuration script (most recent call last)
  File ""/home/sangjin/bess/bessctl/conf/perftest/pktgen.bess"", line 61, in <module>
    bess.add_tc('bit_limit', policy='rate_limit', resource='bit', limit={'bit': rate_limit * 1000000})
  File ""/home/sangjin/bess/bessctl/../libbess-python/bess.py"", line 464, in add_tc
    return self._request('AddTc', request)
  File ""/home/sangjin/bess/bessctl/../libbess-python/bess.py"", line 158, in _request
    raise self.Error(code, errmsg)
*** Error: Name 'bit_limit' already exists
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
  Command failed: run perftest/pktgen","perftest/pktgen.bess fails when used with multiple workers. This is because every worker thread tries to create a tc namedbit_limit.
$ BESS_PORTS=2 BESS_CORES=2 BESS_RATELIMIT_MBPS=10000 bessctl run perftest/pktgen -- monitor port
…
*** Error: Unhandled exception in the configuration script (most recent call last)
  File ""/home/sangjin/bess/bessctl/conf/perftest/pktgen.bess"", line 61, in <module>
    bess.add_tc('bit_limit', policy='rate_limit', resource='bit', limit={'bit': rate_limit * 1000000})
  File ""/home/sangjin/bess/bessctl/../libbess-python/bess.py"", line 464, in add_tc
    return self._request('AddTc', request)
  File ""/home/sangjin/bess/bessctl/../libbess-python/bess.py"", line 158, in _request
    raise self.Error(code, errmsg)
*** Error: Name 'bit_limit' already exists
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
  Command failed: run perftest/pktgen",True,{}
NetSys/bess,https://github.com/NetSys/bess,458,2017-05-16T22:01:49Z,2017-05-18T17:14:07Z,2017-05-22T19:29:46Z,MERGED,True,12,9,1,https://github.com/sangjinhan,Fix name collision of pktgen on multiple workers,1,[],https://github.com/NetSys/bess/pull/458,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/458#issuecomment-301934739,"perftest/pktgen.bess fails when used with multiple workers. This is because every worker thread tries to create a tc namedbit_limit.
$ BESS_PORTS=2 BESS_CORES=2 BESS_RATELIMIT_MBPS=10000 bessctl run perftest/pktgen -- monitor port
…
*** Error: Unhandled exception in the configuration script (most recent call last)
  File ""/home/sangjin/bess/bessctl/conf/perftest/pktgen.bess"", line 61, in <module>
    bess.add_tc('bit_limit', policy='rate_limit', resource='bit', limit={'bit': rate_limit * 1000000})
  File ""/home/sangjin/bess/bessctl/../libbess-python/bess.py"", line 464, in add_tc
    return self._request('AddTc', request)
  File ""/home/sangjin/bess/bessctl/../libbess-python/bess.py"", line 158, in _request
    raise self.Error(code, errmsg)
*** Error: Name 'bit_limit' already exists
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
  Command failed: run perftest/pktgen","Codecov Report

Merging #458 into master will increase coverage by <1%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #458    +/-   ##
======================================
+ Coverage      31%    31%   +<1%     
======================================
  Files         165    165            
  Lines        8042   8041     -1     
  Branches     1529   1529            
======================================
+ Hits         2523   2531     +8     
+ Misses       5163   5137    -26     
- Partials      356    373    +17



Impacted Files
Coverage Δ





core/modules/rewrite.h
0% <0%> (-67%)
⬇️


core/modules/update.cc
5% <0%> (-66%)
⬇️


core/modules/random_update.cc
4% <0%> (-65%)
⬇️


core/modules/rewrite.cc
4% <0%> (-51%)
⬇️


core/modules/update.h
0% <0%> (-50%)
⬇️


core/modules/random_update.h
0% <0%> (-50%)
⬇️


core/modules/round_robin.h
0% <0%> (-50%)
⬇️


core/modules/round_robin.cc
4% <0%> (-24%)
⬇️


core/utils/endian.h
67% <0%> (-10%)
⬇️


core/module.cc
62% <0%> (ø)
⬇️


... and 5 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3fee0de...bec44cd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,458,2017-05-16T22:01:49Z,2017-05-18T17:14:07Z,2017-05-22T19:29:46Z,MERGED,True,12,9,1,https://github.com/sangjinhan,Fix name collision of pktgen on multiple workers,1,[],https://github.com/NetSys/bess/pull/458,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/458#issuecomment-302478306,"perftest/pktgen.bess fails when used with multiple workers. This is because every worker thread tries to create a tc namedbit_limit.
$ BESS_PORTS=2 BESS_CORES=2 BESS_RATELIMIT_MBPS=10000 bessctl run perftest/pktgen -- monitor port
…
*** Error: Unhandled exception in the configuration script (most recent call last)
  File ""/home/sangjin/bess/bessctl/conf/perftest/pktgen.bess"", line 61, in <module>
    bess.add_tc('bit_limit', policy='rate_limit', resource='bit', limit={'bit': rate_limit * 1000000})
  File ""/home/sangjin/bess/bessctl/../libbess-python/bess.py"", line 464, in add_tc
    return self._request('AddTc', request)
  File ""/home/sangjin/bess/bessctl/../libbess-python/bess.py"", line 158, in _request
    raise self.Error(code, errmsg)
*** Error: Name 'bit_limit' already exists
  BESS daemon response - errno=22 (EINVAL: Invalid argument)
  Command failed: run perftest/pktgen",LGTM. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,459,2017-05-17T17:42:41Z,2017-05-18T18:53:38Z,2017-05-22T19:29:44Z,MERGED,True,69,79,4,https://github.com/barath,Makes TC blocking common to all TCs.,2,[],https://github.com/NetSys/bess/pull/459,https://github.com/barath,1,https://github.com/NetSys/bess/pull/459,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,459,2017-05-17T17:42:41Z,2017-05-18T18:53:38Z,2017-05-22T19:29:44Z,MERGED,True,69,79,4,https://github.com/barath,Makes TC blocking common to all TCs.,2,[],https://github.com/NetSys/bess/pull/459,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/459#issuecomment-302180560,,"Codecov Report

Merging #459 into master will increase coverage by 2%.
The diff coverage is 94%.


@@          Coverage Diff           @@
##           master   #459    +/-   ##
======================================
+ Coverage      33%    35%    +2%     
======================================
  Files         165    165            
  Lines        8046   8049     +3     
  Branches     1529   1529            
======================================
+ Hits         2669   2829   +160     
+ Misses       4979   4793   -186     
- Partials      398    427    +29



Impacted Files
Coverage Δ





core/scheduler.h
85% <100%> (ø)
⬆️


core/traffic_class.h
86% <100%> (ø)
⬆️


core/traffic_class.cc
79% <75%> (ø)
⬆️


core/modules/exact_match.h
0% <0%> (-79%)
⬇️


core/modules/exact_match.cc
3% <0%> (-58%)
⬇️


core/pktbatch.h
50% <0%> (-20%)
⬇️


core/module.cc
62% <0%> (-6%)
⬇️


core/modules/rewrite.cc
54% <0%> (-4%)
⬇️


core/utils/cuckoo_map.h
77% <0%> (-1%)
⬇️


core/bessctl.cc
30% <0%> (+4%)
⬆️


... and 14 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88717c0...f509992. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,459,2017-05-17T17:42:41Z,2017-05-18T18:53:38Z,2017-05-22T19:29:44Z,MERGED,True,69,79,4,https://github.com/barath,Makes TC blocking common to all TCs.,2,[],https://github.com/NetSys/bess/pull/459,https://github.com/barath,3,https://github.com/NetSys/bess/pull/459#issuecomment-302279701,,"I originally added the inline / always_inline when the code was in the .cc
file, and it eventually migrated to .h where it should be inlined by
default but I never removed the inline keywords.

I tried to reason about whether there was any case where you could be
throttled or blocked at the same time, but I realized that (I think) rate
limit traffic classes are the only ones that could ever be both, and in
that case one of the two will happen first and dominate for that time --
either a rate limit TC will get blocked in which case it won't get
scheduled so can't get throttled, but that's fine, or it will get throttled
and then can't have its blocked status changed because its children can't
be scheduled until it is unthrottled, which is also fine.
…
On Wed, May 17, 2017 at 6:08 PM, Daniele Di Proietto < ***@***.***> wrote:
 ***@***.**** approved this pull request.

 LGTM, thanks

 If I want to be picky:

    -

    This PR removes some inline keywords. Most of them didn't make sense,
    but perhaps some of them (especially the always_inline) were
    originally introduced for performance reasons, I think it's best to let the
    compiler decide, I'm fine with removing the explicit inlining. What do you
    think?
    -

    Before this PR we called a TC 'throttled' if it had to be awaken. We
    called it 'blocked' if it had to be awaken *or* if all its children
    were 'blocked'. In this PR we call everything 'blocked', losing the
    distinction between the two, Do you think it's worth to keep the
    distinction? Can we call the throttled TCs in another way, to distinguish
    them from the ones that are just blocked because their children are?

 ------------------------------

 In core/traffic_class.h
 <#459 (comment)>:

 > @@ -256,6 +257,9 @@ class TrafficClass {

    struct tc_stats stats_;

 +  // THe tsc time that this should be unblocked by the scheduler.

 s/THe/The/

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#459 (review)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7ehqNpbUR3vEsr-tmcpoGeTCkGddJks5r65oBgaJpZM4NeN4H>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,459,2017-05-17T17:42:41Z,2017-05-18T18:53:38Z,2017-05-22T19:29:44Z,MERGED,True,69,79,4,https://github.com/barath,Makes TC blocking common to all TCs.,2,[],https://github.com/NetSys/bess/pull/459,https://github.com/ddiproietto,4,https://github.com/NetSys/bess/pull/459#issuecomment-302509529,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,460,2017-05-17T23:42:41Z,2017-05-18T16:18:47Z,2017-05-22T19:29:45Z,MERGED,True,4,1,1,https://github.com/changlan,Print error message from dlerror(),1,[],https://github.com/NetSys/bess/pull/460,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/460,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,460,2017-05-17T23:42:41Z,2017-05-18T16:18:47Z,2017-05-22T19:29:45Z,MERGED,True,4,1,1,https://github.com/changlan,Print error message from dlerror(),1,[],https://github.com/NetSys/bess/pull/460,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/460#issuecomment-302267975,,"Codecov Report

Merging #460 into master will increase coverage by 1%.
The diff coverage is 0%.


@@           Coverage Diff           @@
##           master   #460     +/-   ##
=======================================
+ Coverage      31%    33%     +1%     
=======================================
  Files         165    165             
  Lines        8042   9355   +1313     
  Branches     1529   1903    +374     
=======================================
+ Hits         2523   3043    +520     
- Misses       5163   5902    +739     
- Partials      356    410     +54



Impacted Files
Coverage Δ





core/bessd.cc
53% <0%> (-1%)
⬇️


core/modules/update.cc
6% <0%> (-65%)
⬇️


core/modules/random_update.cc
5% <0%> (-64%)
⬇️


core/modules/round_robin.h
0% <0%> (-50%)
⬇️


core/modules/random_update.h
0% <0%> (-50%)
⬇️


core/modules/update.h
0% <0%> (-50%)
⬇️


core/modules/flowgen.h
33% <0%> (-33%)
⬇️


core/modules/round_robin.cc
4% <0%> (-24%)
⬇️


core/modules/flowgen.cc
45% <0%> (-16%)
⬇️


core/utils/ip.cc
81% <0%> (-7%)
⬇️


... and 46 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3fee0de...0480ec6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,460,2017-05-17T23:42:41Z,2017-05-18T16:18:47Z,2017-05-22T19:29:45Z,MERGED,True,4,1,1,https://github.com/changlan,Print error message from dlerror(),1,[],https://github.com/NetSys/bess/pull/460,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/460#issuecomment-302460192,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,461,2017-05-18T20:29:22Z,2017-05-18T21:14:05Z,2017-10-23T21:30:04Z,MERGED,True,1,0,1,https://github.com/ddiproietto,"debug: Fix build with recent glog, gflags and g++.",1,[],https://github.com/NetSys/bess/pull/461,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/461,"On my system building bess fails with:
debug.cc: In function ‘void bess::debug::DumpTypes()’:
debug.cc:455:28: error: ‘VersionString’ is not a member of ‘google’
   std::cout << ""bessd "" << google::VersionString() << std::endl;
                            ^~~~~~
debug.cc:455:28: note: suggested alternative:
In file included from bess_msg.pb.h:9:0,
                 from message.h:6,
                 from module.h:11,
                 from debug.cc:24:
/usr/include/google/protobuf/stubs/common.h:124:32: note:   ‘google::protobuf::internal::VersionString’
 std::string LIBPROTOBUF_EXPORT VersionString(int version);
                                ^~~~~~~~~~~~~
debug.cc: In function ‘void bess::debug::GoPanic()’:
debug.cc:359:1: error: ‘noreturn’ function does return [-Werror]
 }
 ^

including gflags.h directly fixes it.","On my system building bess fails with:
debug.cc: In function ‘void bess::debug::DumpTypes()’:
debug.cc:455:28: error: ‘VersionString’ is not a member of ‘google’
   std::cout << ""bessd "" << google::VersionString() << std::endl;
                            ^~~~~~
debug.cc:455:28: note: suggested alternative:
In file included from bess_msg.pb.h:9:0,
                 from message.h:6,
                 from module.h:11,
                 from debug.cc:24:
/usr/include/google/protobuf/stubs/common.h:124:32: note:   ‘google::protobuf::internal::VersionString’
 std::string LIBPROTOBUF_EXPORT VersionString(int version);
                                ^~~~~~~~~~~~~
debug.cc: In function ‘void bess::debug::GoPanic()’:
debug.cc:359:1: error: ‘noreturn’ function does return [-Werror]
 }
 ^

including gflags.h directly fixes it.",True,{}
NetSys/bess,https://github.com/NetSys/bess,461,2017-05-18T20:29:22Z,2017-05-18T21:14:05Z,2017-10-23T21:30:04Z,MERGED,True,1,0,1,https://github.com/ddiproietto,"debug: Fix build with recent glog, gflags and g++.",1,[],https://github.com/NetSys/bess/pull/461,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/461#issuecomment-302540841,"On my system building bess fails with:
debug.cc: In function ‘void bess::debug::DumpTypes()’:
debug.cc:455:28: error: ‘VersionString’ is not a member of ‘google’
   std::cout << ""bessd "" << google::VersionString() << std::endl;
                            ^~~~~~
debug.cc:455:28: note: suggested alternative:
In file included from bess_msg.pb.h:9:0,
                 from message.h:6,
                 from module.h:11,
                 from debug.cc:24:
/usr/include/google/protobuf/stubs/common.h:124:32: note:   ‘google::protobuf::internal::VersionString’
 std::string LIBPROTOBUF_EXPORT VersionString(int version);
                                ^~~~~~~~~~~~~
debug.cc: In function ‘void bess::debug::GoPanic()’:
debug.cc:359:1: error: ‘noreturn’ function does return [-Werror]
 }
 ^

including gflags.h directly fixes it.","Codecov Report

Merging #461 into master will decrease coverage by 1%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #461    +/-   ##
======================================
- Coverage      38%    37%    -1%     
======================================
  Files         165    165            
  Lines        8051   8066    +15     
  Branches     1530   1534     +4     
======================================
- Hits         3072   2974    -98     
- Misses       4520   4649   +129     
+ Partials      459    443    -16



Impacted Files
Coverage Δ





core/debug.cc
51% <ø> (ø)
⬆️


core/modules/vlan_push.cc
7% <0%> (-85%)
⬇️


core/modules/random_update.cc
4% <0%> (-72%)
⬇️


core/drivers/unix_socket.cc
1% <0%> (-68%)
⬇️


core/modules/queue.h
0% <0%> (-67%)
⬇️


core/modules/port_inc.cc
3% <0%> (-58%)
⬇️


core/modules/port_out.cc
3% <0%> (-57%)
⬇️


core/modules/random_update.h
0% <0%> (-50%)
⬇️


core/modules/hash_lb.h
0% <0%> (-50%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


... and 22 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1d1894a...a99cd50. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,461,2017-05-18T20:29:22Z,2017-05-18T21:14:05Z,2017-10-23T21:30:04Z,MERGED,True,1,0,1,https://github.com/ddiproietto,"debug: Fix build with recent glog, gflags and g++.",1,[],https://github.com/NetSys/bess/pull/461,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/461#issuecomment-302543698,"On my system building bess fails with:
debug.cc: In function ‘void bess::debug::DumpTypes()’:
debug.cc:455:28: error: ‘VersionString’ is not a member of ‘google’
   std::cout << ""bessd "" << google::VersionString() << std::endl;
                            ^~~~~~
debug.cc:455:28: note: suggested alternative:
In file included from bess_msg.pb.h:9:0,
                 from message.h:6,
                 from module.h:11,
                 from debug.cc:24:
/usr/include/google/protobuf/stubs/common.h:124:32: note:   ‘google::protobuf::internal::VersionString’
 std::string LIBPROTOBUF_EXPORT VersionString(int version);
                                ^~~~~~~~~~~~~
debug.cc: In function ‘void bess::debug::GoPanic()’:
debug.cc:359:1: error: ‘noreturn’ function does return [-Werror]
 }
 ^

including gflags.h directly fixes it.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,462,2017-05-18T21:53:03Z,2017-05-18T23:40:48Z,2017-05-18T23:47:48Z,MERGED,True,7,1,1,https://github.com/changlan,Fix pep8 package name,1,[],https://github.com/NetSys/bess/pull/462,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/462,The name is pep8 in both trusty and xenial: http://packages.ubuntu.com/trusty/python/pep8,The name is pep8 in both trusty and xenial: http://packages.ubuntu.com/trusty/python/pep8,True,{}
NetSys/bess,https://github.com/NetSys/bess,462,2017-05-18T21:53:03Z,2017-05-18T23:40:48Z,2017-05-18T23:47:48Z,MERGED,True,7,1,1,https://github.com/changlan,Fix pep8 package name,1,[],https://github.com/NetSys/bess/pull/462,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/462#issuecomment-302553876,The name is pep8 in both trusty and xenial: http://packages.ubuntu.com/trusty/python/pep8,"If I remember correctly, on a clean Xenial machine, autopep8didn't work if only Python 2 is available... Could you check with Vagrant?
My comment from #426:

Note that python-autopep8 package alone is not enough; its dependency package pep8 would only support Python 3, so python-pep8 should be also installed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,462,2017-05-18T21:53:03Z,2017-05-18T23:40:48Z,2017-05-18T23:47:48Z,MERGED,True,7,1,1,https://github.com/changlan,Fix pep8 package name,1,[],https://github.com/NetSys/bess/pull/462,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/462#issuecomment-302558636,The name is pep8 in both trusty and xenial: http://packages.ubuntu.com/trusty/python/pep8,"Codecov Report

Merging #462 into master will decrease coverage by 1%.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #462   +/-   ##
=====================================
- Coverage      34%    33%   -1%     
=====================================
  Files         165    165           
  Lines        8049   8048    -1     
  Branches     1529   1529           
=====================================
- Hits         2756   2671   -85     
- Misses       4888   4979   +91     
+ Partials      405    398    -7



Impacted Files
Coverage Δ





core/modules/random_update.cc
4% <0%> (-65%)
⬇️


core/modules/random_update.h
0% <0%> (-50%)
⬇️


core/modules/hash_lb.h
0% <0%> (-50%)
⬇️


core/modules/hash_lb.cc
4% <0%> (-33%)
⬇️


core/modules/rewrite.cc
58% <0%> (-21%)
⬇️


core/utils/copy.h
43% <0%> (-7%)
⬇️


core/modules/source.cc
50% <0%> (-6%)
⬇️


core/utils/endian.h
67% <0%> (-5%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9abca7e...389103b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,462,2017-05-18T21:53:03Z,2017-05-18T23:40:48Z,2017-05-18T23:47:48Z,MERGED,True,7,1,1,https://github.com/changlan,Fix pep8 package name,1,[],https://github.com/NetSys/bess/pull/462,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/462#issuecomment-302564352,The name is pep8 in both trusty and xenial: http://packages.ubuntu.com/trusty/python/pep8,"Yes, you are right. pep8 after Xenial becomes python3-pep8 but python-autopep8's package dependency on Xenial doesn't reflect this. I added a check before installing python-pep8.",True,{}
NetSys/bess,https://github.com/NetSys/bess,462,2017-05-18T21:53:03Z,2017-05-18T23:40:48Z,2017-05-18T23:47:48Z,MERGED,True,7,1,1,https://github.com/changlan,Fix pep8 package name,1,[],https://github.com/NetSys/bess/pull/462,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/462#issuecomment-302570268,The name is pep8 in both trusty and xenial: http://packages.ubuntu.com/trusty/python/pep8,,True,{}
NetSys/bess,https://github.com/NetSys/bess,463,2017-05-18T23:35:54Z,2017-05-19T01:01:33Z,2017-05-19T01:02:50Z,MERGED,True,44,1,4,https://github.com/apanda,Fix queue constraint checking,3,[],https://github.com/NetSys/bess/pull/463,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/463,"Not only should we not propagate workers for queues, but the constraint
checks themselves need to be different. This patch adds a new check
method.","Not only should we not propagate workers for queues, but the constraint
checks themselves need to be different. This patch adds a new check
method.",True,{}
NetSys/bess,https://github.com/NetSys/bess,463,2017-05-18T23:35:54Z,2017-05-19T01:01:33Z,2017-05-19T01:02:50Z,MERGED,True,44,1,4,https://github.com/apanda,Fix queue constraint checking,3,[],https://github.com/NetSys/bess/pull/463,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/463#issuecomment-302572191,"Not only should we not propagate workers for queues, but the constraint
checks themselves need to be different. This patch adds a new check
method.",Probably it's good to move non-trivial functions from .h to .cc.,True,{}
NetSys/bess,https://github.com/NetSys/bess,463,2017-05-18T23:35:54Z,2017-05-19T01:01:33Z,2017-05-19T01:02:50Z,MERGED,True,44,1,4,https://github.com/apanda,Fix queue constraint checking,3,[],https://github.com/NetSys/bess/pull/463,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/463#issuecomment-302574167,"Not only should we not propagate workers for queues, but the constraint
checks themselves need to be different. This patch adds a new check
method.",@sangjinhan Done,True,{}
NetSys/bess,https://github.com/NetSys/bess,463,2017-05-18T23:35:54Z,2017-05-19T01:01:33Z,2017-05-19T01:02:50Z,MERGED,True,44,1,4,https://github.com/apanda,Fix queue constraint checking,3,[],https://github.com/NetSys/bess/pull/463,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/463#issuecomment-302577937,"Not only should we not propagate workers for queues, but the constraint
checks themselves need to be different. This patch adds a new check
method.","Codecov Report

Merging #463 into master will increase coverage by <1%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #463    +/-   ##
======================================
+ Coverage      34%    34%   +<1%     
======================================
  Files         165    165            
  Lines        8049   8059    +10     
  Branches     1529   1532     +3     
======================================
+ Hits         2756   2776    +20     
+ Misses       4888   4882     -6     
+ Partials      405    401     -4



Impacted Files
Coverage Δ





core/modules/queue.h
0% <ø> (ø)
⬆️


core/modules/queue.cc
2% <0%> (ø)
⬇️


core/modules/exact_match.h
0% <0%> (-79%)
⬇️


core/modules/flowgen.h
0% <0%> (-67%)
⬇️


core/modules/flowgen.cc
1% <0%> (-60%)
⬇️


core/modules/exact_match.cc
3% <0%> (-58%)
⬇️


core/utils/random.h
46% <0%> (-54%)
⬇️


core/modules/hash_lb.h
0% <0%> (-50%)
⬇️


core/modules/hash_lb.cc
4% <0%> (-33%)
⬇️


core/utils/copy.h
43% <0%> (-7%)
⬇️


... and 19 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9abca7e...0452d09. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,463,2017-05-18T23:35:54Z,2017-05-19T01:01:33Z,2017-05-19T01:02:50Z,MERGED,True,44,1,4,https://github.com/apanda,Fix queue constraint checking,3,[],https://github.com/NetSys/bess/pull/463,https://github.com/barath,5,https://github.com/NetSys/bess/pull/463#issuecomment-302580955,"Not only should we not propagate workers for queues, but the constraint
checks themselves need to be different. This patch adds a new check
method.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,464,2017-05-19T02:21:31Z,2017-05-25T19:26:21Z,2017-05-25T23:08:04Z,MERGED,True,101,60,4,https://github.com/sangjinhan,Fix potential gRPC race,6,[],https://github.com/NetSys/bess/pull/464,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/464,"gRPC servers are internally multi-threaded, so all RPC handlers must be thread-safe. BESS API handlers are not. This means, if there are multiple client connections, the daemon may crash due to race condition.
gRPC does not currently support a knob to limit the number of handler threads (only ""idle"" handler threads can be limited). Instead, I introduced a mutex to serialize all RPCs over concurrent connections. Since it could be tedious and error-prone to insert a mutex block in every handler, mutex::lock() and mutex::unlock() have been added to the callback functions called by all RPC messages.
In addition, the gRPC server has been encapsulated as a class object.","gRPC servers are internally multi-threaded, so all RPC handlers must be thread-safe. BESS API handlers are not. This means, if there are multiple client connections, the daemon may crash due to race condition.
gRPC does not currently support a knob to limit the number of handler threads (only ""idle"" handler threads can be limited). Instead, I introduced a mutex to serialize all RPCs over concurrent connections. Since it could be tedious and error-prone to insert a mutex block in every handler, mutex::lock() and mutex::unlock() have been added to the callback functions called by all RPC messages.
In addition, the gRPC server has been encapsulated as a class object.",True,{}
NetSys/bess,https://github.com/NetSys/bess,464,2017-05-19T02:21:31Z,2017-05-25T19:26:21Z,2017-05-25T23:08:04Z,MERGED,True,101,60,4,https://github.com/sangjinhan,Fix potential gRPC race,6,[],https://github.com/NetSys/bess/pull/464,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/464#issuecomment-302595316,"gRPC servers are internally multi-threaded, so all RPC handlers must be thread-safe. BESS API handlers are not. This means, if there are multiple client connections, the daemon may crash due to race condition.
gRPC does not currently support a knob to limit the number of handler threads (only ""idle"" handler threads can be limited). Instead, I introduced a mutex to serialize all RPCs over concurrent connections. Since it could be tedious and error-prone to insert a mutex block in every handler, mutex::lock() and mutex::unlock() have been added to the callback functions called by all RPC messages.
In addition, the gRPC server has been encapsulated as a class object.","Codecov Report

Merging #464 into master will decrease coverage by 12%.
The diff coverage is 9%.


@@           Coverage Diff           @@
##           master   #464     +/-   ##
=======================================
- Coverage      34%    22%    -12%     
=======================================
  Files         165    169      +4     
  Lines        8103   8200     +97     
  Branches     1538   1563     +25     
=======================================
- Hits         2744   1822    -922     
- Misses       4949   6112   +1163     
+ Partials      410    266    -144



Impacted Files
Coverage Δ





core/main.cc
43% <0%> (-35%)
⬇️


core/bessctl.h
0% <0%> (ø)



core/bessctl.cc
0% <0%> (-21%)
⬇️


core/utils/ether.cc
88% <100%> (+1%)
⬆️


core/drivers/vport.h
0% <0%> (-100%)
⬇️


core/drivers/unix_socket.h
0% <0%> (-100%)
⬇️


core/drivers/vport_zc.h
0% <0%> (-100%)
⬇️


core/drivers/pcap.h
0% <0%> (-100%)
⬇️


core/modules/vlan_push.cc
7% <0%> (-85%)
⬇️


core/modules/generic_encap.cc
2% <0%> (-75%)
⬇️


... and 46 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a216ccd...716898e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,464,2017-05-19T02:21:31Z,2017-05-25T19:26:21Z,2017-05-25T23:08:04Z,MERGED,True,101,60,4,https://github.com/sangjinhan,Fix potential gRPC race,6,[],https://github.com/NetSys/bess/pull/464,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/464#issuecomment-304100754,"gRPC servers are internally multi-threaded, so all RPC handlers must be thread-safe. BESS API handlers are not. This means, if there are multiple client connections, the daemon may crash due to race condition.
gRPC does not currently support a knob to limit the number of handler threads (only ""idle"" handler threads can be limited). Instead, I introduced a mutex to serialize all RPCs over concurrent connections. Since it could be tedious and error-prone to insert a mutex block in every handler, mutex::lock() and mutex::unlock() have been added to the callback functions called by all RPC messages.
In addition, the gRPC server has been encapsulated as a class object.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,465,2017-05-19T22:15:30Z,2017-05-20T00:04:42Z,2017-05-22T19:29:44Z,MERGED,True,119,19,5,https://github.com/barath,Experimental scheduler,4,[],https://github.com/NetSys/bess/pull/465,https://github.com/barath,1,https://github.com/NetSys/bess/pull/465,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,465,2017-05-19T22:15:30Z,2017-05-20T00:04:42Z,2017-05-22T19:29:44Z,MERGED,True,119,19,5,https://github.com/barath,Experimental scheduler,4,[],https://github.com/NetSys/bess/pull/465,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/465#issuecomment-302829956,,"Codecov Report

Merging #465 into master will decrease coverage by 1%.
The diff coverage is 11%.


@@          Coverage Diff          @@
##           master   #465   +/-   ##
=====================================
- Coverage      36%    35%   -1%     
=====================================
  Files         165    165           
  Lines        8062   8106   +44     
  Branches     1533   1540    +7     
=====================================
- Hits         2893   2865   -28     
- Misses       4746   4831   +85     
+ Partials      423    410   -13



Impacted Files
Coverage Δ





core/bessctl.cc
22% <0%> (-9%)
⬇️


core/worker.cc
63% <0%> (-4%)
⬇️


core/scheduler.h
48% <11%> (-37%)
⬇️


core/traffic_class.h
85% <33%> (-2%)
⬇️


core/traffic_class.cc
75% <0%> (-4%)
⬇️


core/module.h
72% <0%> (-1%)
⬇️


core/modules/exact_match.cc
61% <0%> (+58%)
⬆️


... and 1 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8c04c3f...dce0d4b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,465,2017-05-19T22:15:30Z,2017-05-20T00:04:42Z,2017-05-22T19:29:44Z,MERGED,True,119,19,5,https://github.com/barath,Experimental scheduler,4,[],https://github.com/NetSys/bess/pull/465,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/465#issuecomment-302836334,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,466,2017-05-20T00:20:01Z,2017-05-20T04:08:38Z,2017-05-24T17:43:08Z,MERGED,True,11,1,2,https://github.com/ddiproietto,libbess-python: attach_module() to 'priority' or 'weighted_fair'.,1,[],https://github.com/NetSys/bess/pull/466,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/466,"attach_module() didn't allow attaching to 'priority' or 'weighted_fair'
parents, because it didn't have a way to specify the 'priority' or
'share' parameters.  This commit adds the parameters (they're similar to
what we have in add_tc()).","attach_module() didn't allow attaching to 'priority' or 'weighted_fair'
parents, because it didn't have a way to specify the 'priority' or
'share' parameters.  This commit adds the parameters (they're similar to
what we have in add_tc()).",True,{}
NetSys/bess,https://github.com/NetSys/bess,466,2017-05-20T00:20:01Z,2017-05-20T04:08:38Z,2017-05-24T17:43:08Z,MERGED,True,11,1,2,https://github.com/ddiproietto,libbess-python: attach_module() to 'priority' or 'weighted_fair'.,1,[],https://github.com/NetSys/bess/pull/466,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/466#issuecomment-302841270,"attach_module() didn't allow attaching to 'priority' or 'weighted_fair'
parents, because it didn't have a way to specify the 'priority' or
'share' parameters.  This commit adds the parameters (they're similar to
what we have in add_tc()).","Codecov Report

Merging #466 into master will decrease coverage by 1%.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #466   +/-   ##
=====================================
- Coverage      35%    34%   -1%     
=====================================
  Files         165    165           
  Lines        8107   8106    -1     
  Branches     1540   1540           
=====================================
- Hits         2807   2749   -58     
- Misses       4914   4974   +60     
+ Partials      386    383    -3



Impacted Files
Coverage Δ





core/modules/vlan_pop.h
0% <0%> (-100%)
⬇️


core/modules/vlan_push.cc
7% <0%> (-89%)
⬇️


core/modules/vlan_pop.cc
8% <0%> (-85%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/modules/rewrite.cc
58% <0%> (-21%)
⬇️


core/packet.h
43% <0%> (-16%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update defebbc...fed8289. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,466,2017-05-20T00:20:01Z,2017-05-20T04:08:38Z,2017-05-24T17:43:08Z,MERGED,True,11,1,2,https://github.com/ddiproietto,libbess-python: attach_module() to 'priority' or 'weighted_fair'.,1,[],https://github.com/NetSys/bess/pull/466,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/466#issuecomment-302849137,"attach_module() didn't allow attaching to 'priority' or 'weighted_fair'
parents, because it didn't have a way to specify the 'priority' or
'share' parameters.  This commit adds the parameters (they're similar to
what we have in add_tc()).",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,467,2017-05-20T05:35:08Z,2017-05-22T19:44:46Z,2017-08-09T01:22:59Z,CLOSED,False,163,34,6,https://github.com/melvinw,add byte tracking gate hook,1,[],https://github.com/NetSys/bess/pull/467,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/467,"This commit adds a gate hook called TrackBytes and corresponding bessctl
commands enable track bytes, monitor pipeline bytes, and show pipeline bytes.
Example Usage
localhost:10514 $ run samples/s2s
localhost:10514 $ track bytes enable source0
localhost:10514 $ show pipeline bytes
+---------+                     +-------+
| source0 |  :0 3705477728 0:   | sink0 |
| Source  | ------------------> | Sink  |
+---------+                     +-------+
localhost:10514 $ monitor pipeline bytes
+---------+                   +-------+
| source0 |  :0 101106.0 0:   | sink0 |
| Source  | ----------------> | Sink  |
+---------+                   +-------+","This commit adds a gate hook called TrackBytes and corresponding bessctl
commands enable track bytes, monitor pipeline bytes, and show pipeline bytes.
Example Usage
localhost:10514 $ run samples/s2s
localhost:10514 $ track bytes enable source0
localhost:10514 $ show pipeline bytes
+---------+                     +-------+
| source0 |  :0 3705477728 0:   | sink0 |
| Source  | ------------------> | Sink  |
+---------+                     +-------+
localhost:10514 $ monitor pipeline bytes
+---------+                   +-------+
| source0 |  :0 101106.0 0:   | sink0 |
| Source  | ----------------> | Sink  |
+---------+                   +-------+",True,{}
NetSys/bess,https://github.com/NetSys/bess,467,2017-05-20T05:35:08Z,2017-05-22T19:44:46Z,2017-08-09T01:22:59Z,CLOSED,False,163,34,6,https://github.com/melvinw,add byte tracking gate hook,1,[],https://github.com/NetSys/bess/pull/467,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/467#issuecomment-302853611,"This commit adds a gate hook called TrackBytes and corresponding bessctl
commands enable track bytes, monitor pipeline bytes, and show pipeline bytes.
Example Usage
localhost:10514 $ run samples/s2s
localhost:10514 $ track bytes enable source0
localhost:10514 $ show pipeline bytes
+---------+                     +-------+
| source0 |  :0 3705477728 0:   | sink0 |
| Source  | ------------------> | Sink  |
+---------+                     +-------+
localhost:10514 $ monitor pipeline bytes
+---------+                   +-------+
| source0 |  :0 101106.0 0:   | sink0 |
| Source  | ----------------> | Sink  |
+---------+                   +-------+","Codecov Report

Merging #467 into master will decrease coverage by 2%.
The diff coverage is 2%.


@@          Coverage Diff           @@
##           master   #467    +/-   ##
======================================
- Coverage      34%    32%    -2%     
======================================
  Files         165    167     +2     
  Lines        8103   8138    +35     
  Branches     1538   1546     +8     
======================================
- Hits         2744   2629   -115     
- Misses       4949   5136   +187     
+ Partials      410    373    -37



Impacted Files
Coverage Δ





core/hooks/track_bytes.cc
0% <0%> (ø)



core/bessctl.cc
16% <0%> (-5%)
⬇️


core/hooks/track_bytes.h
25% <25%> (ø)



core/modules/vlan_push.cc
7% <0%> (-85%)
⬇️


core/modules/queue.h
0% <0%> (-67%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/kmod/llring.h
0% <0%> (-43%)
⬇️


core/modules/queue.cc
2% <0%> (-41%)
⬇️


core/mem_alloc.cc
27% <0%> (-27%)
⬇️


core/scheduler.h
37% <0%> (-16%)
⬇️


... and 12 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a216ccd...8d5998e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,467,2017-05-20T05:35:08Z,2017-05-22T19:44:46Z,2017-08-09T01:22:59Z,CLOSED,False,163,34,6,https://github.com/melvinw,add byte tracking gate hook,1,[],https://github.com/NetSys/bess/pull/467,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/467#issuecomment-302915331,"This commit adds a gate hook called TrackBytes and corresponding bessctl
commands enable track bytes, monitor pipeline bytes, and show pipeline bytes.
Example Usage
localhost:10514 $ run samples/s2s
localhost:10514 $ track bytes enable source0
localhost:10514 $ show pipeline bytes
+---------+                     +-------+
| source0 |  :0 3705477728 0:   | sink0 |
| Source  | ------------------> | Sink  |
+---------+                     +-------+
localhost:10514 $ monitor pipeline bytes
+---------+                   +-------+
| source0 |  :0 101106.0 0:   | sink0 |
| Source  | ----------------> | Sink  |
+---------+                   +-------+",Thanks for the comments! Going to close this and open another PR based on refactoring track.,True,{}
NetSys/bess,https://github.com/NetSys/bess,468,2017-05-22T19:38:05Z,2017-05-23T21:21:58Z,2017-05-23T21:22:14Z,MERGED,True,1,1,1,https://github.com/barath,Adjusts round robin's increment.,1,[],https://github.com/NetSys/bess/pull/468,https://github.com/barath,1,https://github.com/NetSys/bess/pull/468,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,468,2017-05-22T19:38:05Z,2017-05-23T21:21:58Z,2017-05-23T21:22:14Z,MERGED,True,1,1,1,https://github.com/barath,Adjusts round robin's increment.,1,[],https://github.com/NetSys/bess/pull/468,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/468#issuecomment-303207051,,"Codecov Report

Merging #468 into master will decrease coverage by 3%.
The diff coverage is 100%.


@@          Coverage Diff           @@
##           master   #468    +/-   ##
======================================
- Coverage      34%    31%    -3%     
======================================
  Files         165    165            
  Lines        8103   8101     -2     
  Branches     1538   1538            
======================================
- Hits         2744   2534   -210     
- Misses       4949   5212   +263     
+ Partials      410    355    -55



Impacted Files
Coverage Δ





core/traffic_class.cc
75% <100%> (-1%)
⬇️


core/modules/vlan_push.cc
7% <0%> (-85%)
⬇️


core/modules/generic_encap.cc
2% <0%> (-75%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/queue.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
2% <0%> (-52%)
⬇️


core/modules/generic_encap.h
0% <0%> (-50%)
⬇️


core/utils/endian.cc
0% <0%> (-50%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/kmod/llring.h
0% <0%> (-43%)
⬇️


... and 16 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a216ccd...7fb30dd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,468,2017-05-22T19:38:05Z,2017-05-23T21:21:58Z,2017-05-23T21:22:14Z,MERGED,True,1,1,1,https://github.com/barath,Adjusts round robin's increment.,1,[],https://github.com/NetSys/bess/pull/468,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/468#issuecomment-303515949,,Could you add a brief description about the change?,True,{}
NetSys/bess,https://github.com/NetSys/bess,468,2017-05-22T19:38:05Z,2017-05-23T21:21:58Z,2017-05-23T21:22:14Z,MERGED,True,1,1,1,https://github.com/barath,Adjusts round robin's increment.,1,[],https://github.com/NetSys/bess/pull/468,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/468#issuecomment-303536172,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,469,2017-05-22T22:18:53Z,2017-05-25T17:49:45Z,2017-05-25T17:50:12Z,MERGED,True,28,23,1,https://github.com/changlan,pcap: Support jumbo frame,1,[],https://github.com/NetSys/bess/pull/469,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/469,"This PR adds jumbo frame support to the PCAP driver, roughly following this DPDK patch: http://dpdk.org/ml/archives/dev/2015-February/014404.html.","This PR adds jumbo frame support to the PCAP driver, roughly following this DPDK patch: http://dpdk.org/ml/archives/dev/2015-February/014404.html.",True,{}
NetSys/bess,https://github.com/NetSys/bess,469,2017-05-22T22:18:53Z,2017-05-25T17:49:45Z,2017-05-25T17:50:12Z,MERGED,True,28,23,1,https://github.com/changlan,pcap: Support jumbo frame,1,[],https://github.com/NetSys/bess/pull/469,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/469#issuecomment-303242671,"This PR adds jumbo frame support to the PCAP driver, roughly following this DPDK patch: http://dpdk.org/ml/archives/dev/2015-February/014404.html.","Codecov Report

Merging #469 into master will decrease coverage by 6%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #469    +/-   ##
======================================
- Coverage      37%    30%    -6%     
======================================
  Files         168    168            
  Lines        8216   8224     +8     
  Branches     1565   1562     -3     
======================================
- Hits         3007   2483   -524     
- Misses       4768   5365   +597     
+ Partials      441    376    -65



Impacted Files
Coverage Δ





core/drivers/pcap.cc
2% <0%> (-1%)
⬇️


core/modules/wildcard_match.h
0% <0%> (-79%)
⬇️


core/utils/endian.cc
0% <0%> (-75%)
⬇️


core/modules/wildcard_match.cc
2% <0%> (-74%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/flowgen.h
0% <0%> (-67%)
⬇️


core/modules/random_update.cc
4% <0%> (-65%)
⬇️


core/modules/flowgen.cc
1% <0%> (-60%)
⬇️


core/utils/random.h
46% <0%> (-54%)
⬇️


core/modules/set_metadata.cc
2% <0%> (-52%)
⬇️


... and 17 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c491ed7...1ece45f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,469,2017-05-22T22:18:53Z,2017-05-25T17:49:45Z,2017-05-25T17:50:12Z,MERGED,True,28,23,1,https://github.com/changlan,pcap: Support jumbo frame,1,[],https://github.com/NetSys/bess/pull/469,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/469#issuecomment-304076306,"This PR adds jumbo frame support to the PCAP driver, roughly following this DPDK patch: http://dpdk.org/ml/archives/dev/2015-February/014404.html.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,470,2017-05-23T08:36:35Z,2017-05-23T20:02:33Z,2017-05-23T20:04:15Z,MERGED,True,89,32,5,https://github.com/sangjinhan,Correct the unit of max_burst parameter for ratelimit TCs,4,[],https://github.com/NetSys/bess/pull/470,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/470,"max_burst, which is the maximum token bucket size, cam be used to absorb burstiness of resource scheduling. While its unit should be the amount of ""work"", it was internally stored in ""work/time"". This PR addresses this bug.
localhost:10514 $ show tc
<worker 0>
  +-- w0_1000MHz               rate_limit          1000.000 MHz
      +-- w0_rr                round_robin
          +-- w0_500MHz_0      rate_limit          500.000 MHz
          |   +-- !leaf_w0_src0:0 leaf
          +-- w0_500MHz_1      rate_limit          500.000 MHz
              +-- !leaf_w0_src1:0 leaf
<worker 1>
  +-- w1_1000MHz               rate_limit          1000.000 MHz
      +-- w1_rr                round_robin
          +-- w1_500MHz_0      rate_limit          500.000 MHz         (burst: 10000 cycles)
          |   +-- !leaf_w1_src0:0 leaf
          +-- w1_500MHz_1      rate_limit          500.000 MHz         (burst: 10000 cycles)
              +-- !leaf_w1_src1:0 leaf
localhost:10514 $ monitor tc
Monitoring traffic classes: w0_1000MHz, w0_rr, w0_500MHz_0, !leaf_w0_src0:0, w0_500MHz_1, !leaf_w0_src1:0, w1_1000MHz, w1_rr, w1_500MHz_0, !leaf_w1_src0:0, w1_500MHz_1, !leaf_w1_src1:0

08:08:29.059552          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 w0_1000MHz            921.930     2256896      19.934   13395.660       8.832      46.249    # <- inaccurate
W0 w0_rr                 921.931     2256915      19.934   13395.734       8.832      46.249
W0 w0_500MHz_0           422.919     1686692       1.687    1133.458       1.000     250.738
W0 !leaf_w0_src0:0       422.918     1686696       1.687    1133.460       1.000     250.737
W0 w0_500MHz_1           499.014      570236      18.248   12262.360      32.000      27.347
W0 !leaf_w0_src1:0       499.015      570238      18.248   12262.401      32.000      27.347
W1 w1_1000MHz            998.631     2866496      23.148   15555.141       8.075      43.142    # <- accurate
W1 w1_rr                 998.626     2866410      23.146   15554.407       8.075      43.144
W1 w1_500MHz_0           499.035     2212278       2.212    1486.651       1.000     225.575
W1 !leaf_w1_src0:0       499.035     2212285       2.212    1486.656       1.000     225.575
W1 w1_500MHz_1           499.602      654192      20.934   14067.751      32.000      23.865
W1 !leaf_w1_src1:0       499.602      654189      20.934   14067.696      32.000      23.866
--------------------------------------------------------------------------------------------","max_burst, which is the maximum token bucket size, cam be used to absorb burstiness of resource scheduling. While its unit should be the amount of ""work"", it was internally stored in ""work/time"". This PR addresses this bug.
localhost:10514 $ show tc
<worker 0>
  +-- w0_1000MHz               rate_limit          1000.000 MHz
      +-- w0_rr                round_robin
          +-- w0_500MHz_0      rate_limit          500.000 MHz
          |   +-- !leaf_w0_src0:0 leaf
          +-- w0_500MHz_1      rate_limit          500.000 MHz
              +-- !leaf_w0_src1:0 leaf
<worker 1>
  +-- w1_1000MHz               rate_limit          1000.000 MHz
      +-- w1_rr                round_robin
          +-- w1_500MHz_0      rate_limit          500.000 MHz         (burst: 10000 cycles)
          |   +-- !leaf_w1_src0:0 leaf
          +-- w1_500MHz_1      rate_limit          500.000 MHz         (burst: 10000 cycles)
              +-- !leaf_w1_src1:0 leaf
localhost:10514 $ monitor tc
Monitoring traffic classes: w0_1000MHz, w0_rr, w0_500MHz_0, !leaf_w0_src0:0, w0_500MHz_1, !leaf_w0_src1:0, w1_1000MHz, w1_rr, w1_500MHz_0, !leaf_w1_src0:0, w1_500MHz_1, !leaf_w1_src1:0

08:08:29.059552          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 w0_1000MHz            921.930     2256896      19.934   13395.660       8.832      46.249    # <- inaccurate
W0 w0_rr                 921.931     2256915      19.934   13395.734       8.832      46.249
W0 w0_500MHz_0           422.919     1686692       1.687    1133.458       1.000     250.738
W0 !leaf_w0_src0:0       422.918     1686696       1.687    1133.460       1.000     250.737
W0 w0_500MHz_1           499.014      570236      18.248   12262.360      32.000      27.347
W0 !leaf_w0_src1:0       499.015      570238      18.248   12262.401      32.000      27.347
W1 w1_1000MHz            998.631     2866496      23.148   15555.141       8.075      43.142    # <- accurate
W1 w1_rr                 998.626     2866410      23.146   15554.407       8.075      43.144
W1 w1_500MHz_0           499.035     2212278       2.212    1486.651       1.000     225.575
W1 !leaf_w1_src0:0       499.035     2212285       2.212    1486.656       1.000     225.575
W1 w1_500MHz_1           499.602      654192      20.934   14067.751      32.000      23.865
W1 !leaf_w1_src1:0       499.602      654189      20.934   14067.696      32.000      23.866
--------------------------------------------------------------------------------------------",True,{}
NetSys/bess,https://github.com/NetSys/bess,470,2017-05-23T08:36:35Z,2017-05-23T20:02:33Z,2017-05-23T20:04:15Z,MERGED,True,89,32,5,https://github.com/sangjinhan,Correct the unit of max_burst parameter for ratelimit TCs,4,[],https://github.com/NetSys/bess/pull/470,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/470#issuecomment-303492146,"max_burst, which is the maximum token bucket size, cam be used to absorb burstiness of resource scheduling. While its unit should be the amount of ""work"", it was internally stored in ""work/time"". This PR addresses this bug.
localhost:10514 $ show tc
<worker 0>
  +-- w0_1000MHz               rate_limit          1000.000 MHz
      +-- w0_rr                round_robin
          +-- w0_500MHz_0      rate_limit          500.000 MHz
          |   +-- !leaf_w0_src0:0 leaf
          +-- w0_500MHz_1      rate_limit          500.000 MHz
              +-- !leaf_w0_src1:0 leaf
<worker 1>
  +-- w1_1000MHz               rate_limit          1000.000 MHz
      +-- w1_rr                round_robin
          +-- w1_500MHz_0      rate_limit          500.000 MHz         (burst: 10000 cycles)
          |   +-- !leaf_w1_src0:0 leaf
          +-- w1_500MHz_1      rate_limit          500.000 MHz         (burst: 10000 cycles)
              +-- !leaf_w1_src1:0 leaf
localhost:10514 $ monitor tc
Monitoring traffic classes: w0_1000MHz, w0_rr, w0_500MHz_0, !leaf_w0_src0:0, w0_500MHz_1, !leaf_w0_src1:0, w1_1000MHz, w1_rr, w1_500MHz_0, !leaf_w1_src0:0, w1_500MHz_1, !leaf_w1_src1:0

08:08:29.059552          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 w0_1000MHz            921.930     2256896      19.934   13395.660       8.832      46.249    # <- inaccurate
W0 w0_rr                 921.931     2256915      19.934   13395.734       8.832      46.249
W0 w0_500MHz_0           422.919     1686692       1.687    1133.458       1.000     250.738
W0 !leaf_w0_src0:0       422.918     1686696       1.687    1133.460       1.000     250.737
W0 w0_500MHz_1           499.014      570236      18.248   12262.360      32.000      27.347
W0 !leaf_w0_src1:0       499.015      570238      18.248   12262.401      32.000      27.347
W1 w1_1000MHz            998.631     2866496      23.148   15555.141       8.075      43.142    # <- accurate
W1 w1_rr                 998.626     2866410      23.146   15554.407       8.075      43.144
W1 w1_500MHz_0           499.035     2212278       2.212    1486.651       1.000     225.575
W1 !leaf_w1_src0:0       499.035     2212285       2.212    1486.656       1.000     225.575
W1 w1_500MHz_1           499.602      654192      20.934   14067.751      32.000      23.865
W1 !leaf_w1_src1:0       499.602      654189      20.934   14067.696      32.000      23.866
--------------------------------------------------------------------------------------------","Codecov Report

Merging #470 into master will increase coverage by 11%.
The diff coverage is 100%.


@@           Coverage Diff           @@
##           master   #470     +/-   ##
=======================================
+ Coverage      34%    45%    +11%     
=======================================
  Files         165    165             
  Lines        8103   8122     +19     
  Branches     1538   1542      +4     
=======================================
+ Hits         2744   3670    +926     
+ Misses       4949   3896   -1053     
- Partials      410    556    +146



Impacted Files
Coverage Δ





core/traffic_class.cc
76% <100%> (ø)
⬆️


core/traffic_class.h
86% <100%> (+1%)
⬆️


core/metadata.cc
80% <0%> (ø)
⬆️


core/module.h
78% <0%> (+1%)
⬆️


core/utils/cuckoo_map.h
79% <0%> (+2%)
⬆️


core/worker.h
89% <0%> (+5%)
⬆️


core/utils/copy.h
53% <0%> (+7%)
⬆️


core/module.cc
72% <0%> (+7%)
⬆️


core/utils/endian.h
76% <0%> (+10%)
⬆️


core/packet.h
59% <0%> (+10%)
⬆️


... and 33 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a216ccd...79d611a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,470,2017-05-23T08:36:35Z,2017-05-23T20:02:33Z,2017-05-23T20:04:15Z,MERGED,True,89,32,5,https://github.com/sangjinhan,Correct the unit of max_burst parameter for ratelimit TCs,4,[],https://github.com/NetSys/bess/pull/470,https://github.com/barath,3,https://github.com/NetSys/bess/pull/470#issuecomment-303515785,"max_burst, which is the maximum token bucket size, cam be used to absorb burstiness of resource scheduling. While its unit should be the amount of ""work"", it was internally stored in ""work/time"". This PR addresses this bug.
localhost:10514 $ show tc
<worker 0>
  +-- w0_1000MHz               rate_limit          1000.000 MHz
      +-- w0_rr                round_robin
          +-- w0_500MHz_0      rate_limit          500.000 MHz
          |   +-- !leaf_w0_src0:0 leaf
          +-- w0_500MHz_1      rate_limit          500.000 MHz
              +-- !leaf_w0_src1:0 leaf
<worker 1>
  +-- w1_1000MHz               rate_limit          1000.000 MHz
      +-- w1_rr                round_robin
          +-- w1_500MHz_0      rate_limit          500.000 MHz         (burst: 10000 cycles)
          |   +-- !leaf_w1_src0:0 leaf
          +-- w1_500MHz_1      rate_limit          500.000 MHz         (burst: 10000 cycles)
              +-- !leaf_w1_src1:0 leaf
localhost:10514 $ monitor tc
Monitoring traffic classes: w0_1000MHz, w0_rr, w0_500MHz_0, !leaf_w0_src0:0, w0_500MHz_1, !leaf_w0_src1:0, w1_1000MHz, w1_rr, w1_500MHz_0, !leaf_w1_src0:0, w1_500MHz_1, !leaf_w1_src1:0

08:08:29.059552          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 w0_1000MHz            921.930     2256896      19.934   13395.660       8.832      46.249    # <- inaccurate
W0 w0_rr                 921.931     2256915      19.934   13395.734       8.832      46.249
W0 w0_500MHz_0           422.919     1686692       1.687    1133.458       1.000     250.738
W0 !leaf_w0_src0:0       422.918     1686696       1.687    1133.460       1.000     250.737
W0 w0_500MHz_1           499.014      570236      18.248   12262.360      32.000      27.347
W0 !leaf_w0_src1:0       499.015      570238      18.248   12262.401      32.000      27.347
W1 w1_1000MHz            998.631     2866496      23.148   15555.141       8.075      43.142    # <- accurate
W1 w1_rr                 998.626     2866410      23.146   15554.407       8.075      43.144
W1 w1_500MHz_0           499.035     2212278       2.212    1486.651       1.000     225.575
W1 !leaf_w1_src0:0       499.035     2212285       2.212    1486.656       1.000     225.575
W1 w1_500MHz_1           499.602      654192      20.934   14067.751      32.000      23.865
W1 !leaf_w1_src1:0       499.602      654189      20.934   14067.696      32.000      23.866
--------------------------------------------------------------------------------------------",,True,{}
NetSys/bess,https://github.com/NetSys/bess,471,2017-05-23T12:34:19Z,2017-05-23T19:51:48Z,2017-05-23T19:52:21Z,MERGED,True,1,1,1,https://github.com/GalSagie,Fix comment in IP checksum module,1,[],https://github.com/NetSys/bess/pull/471,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/471,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,471,2017-05-23T12:34:19Z,2017-05-23T19:51:48Z,2017-05-23T19:52:21Z,MERGED,True,1,1,1,https://github.com/GalSagie,Fix comment in IP checksum module,1,[],https://github.com/NetSys/bess/pull/471,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/471#issuecomment-303391574,,"Codecov Report

Merging #471 into master will decrease coverage by 2%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #471    +/-   ##
======================================
- Coverage      34%    31%    -2%     
======================================
  Files         165    165            
  Lines        8103   8101     -2     
  Branches     1538   1538            
======================================
- Hits         2744   2550   -194     
- Misses       4949   5183   +234     
+ Partials      410    368    -42



Impacted Files
Coverage Δ





core/modules/ip_checksum.h
0% <ø> (ø)
⬆️


core/modules/vlan_push.cc
7% <0%> (-85%)
⬇️


core/modules/generic_encap.cc
2% <0%> (-75%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/queue.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
2% <0%> (-52%)
⬇️


core/utils/endian.cc
0% <0%> (-50%)
⬇️


core/modules/generic_encap.h
0% <0%> (-50%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/kmod/llring.h
0% <0%> (-43%)
⬇️


... and 15 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a216ccd...7985c50. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,471,2017-05-23T12:34:19Z,2017-05-23T19:51:48Z,2017-05-23T19:52:21Z,MERGED,True,1,1,1,https://github.com/GalSagie,Fix comment in IP checksum module,1,[],https://github.com/NetSys/bess/pull/471,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/471#issuecomment-303512766,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,472,2017-05-23T18:25:49Z,2017-05-25T17:48:17Z,2017-05-25T17:48:35Z,MERGED,True,112,28,6,https://github.com/apanda,Account for tasks instead of workers,5,[],https://github.com/NetSys/bess/pull/472,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/472,"Previously we were ensuring that each worker was propagated exactly once
through a module. This doesn't work since multiple tasks in a worker
might be using the same module. This change fixes this misaccounting.
Also fixes related bugs in queue.cc","Previously we were ensuring that each worker was propagated exactly once
through a module. This doesn't work since multiple tasks in a worker
might be using the same module. This change fixes this misaccounting.
Also fixes related bugs in queue.cc",True,{}
NetSys/bess,https://github.com/NetSys/bess,472,2017-05-23T18:25:49Z,2017-05-25T17:48:17Z,2017-05-25T17:48:35Z,MERGED,True,112,28,6,https://github.com/apanda,Account for tasks instead of workers,5,[],https://github.com/NetSys/bess/pull/472,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/472#issuecomment-303498731,"Previously we were ensuring that each worker was propagated exactly once
through a module. This doesn't work since multiple tasks in a worker
might be using the same module. This change fixes this misaccounting.
Also fixes related bugs in queue.cc","Codecov Report

Merging #472 into master will decrease coverage by 3%.
The diff coverage is 67%.


@@          Coverage Diff           @@
##           master   #472    +/-   ##
======================================
- Coverage      34%    31%    -3%     
======================================
  Files         165    168     +3     
  Lines        8103   8205   +102     
  Branches     1538   1562    +24     
======================================
- Hits         2744   2529   -215     
- Misses       4949   5292   +343     
+ Partials      410    384    -26



Impacted Files
Coverage Δ





core/modules/queue.cc
2% <0%> (-41%)
⬇️


core/module.h
70% <100%> (-7%)
⬇️


core/module.cc
68% <50%> (+4%)
⬆️


core/modules/vlan_push.cc
7% <0%> (-85%)
⬇️


core/modules/generic_encap.cc
2% <0%> (-75%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/flowgen.h
0% <0%> (-67%)
⬇️


core/modules/queue.h
0% <0%> (-67%)
⬇️


core/modules/flowgen.cc
1% <0%> (-60%)
⬇️


core/utils/random.h
46% <0%> (-54%)
⬇️


... and 29 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a216ccd...dfa1b1e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,472,2017-05-23T18:25:49Z,2017-05-25T17:48:17Z,2017-05-25T17:48:35Z,MERGED,True,112,28,6,https://github.com/apanda,Account for tasks instead of workers,5,[],https://github.com/NetSys/bess/pull/472,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/472#issuecomment-303544862,"Previously we were ensuring that each worker was propagated exactly once
through a module. This doesn't work since multiple tasks in a worker
might be using the same module. This change fixes this misaccounting.
Also fixes related bugs in queue.cc",@barath Tests added,True,{}
NetSys/bess,https://github.com/NetSys/bess,472,2017-05-23T18:25:49Z,2017-05-25T17:48:17Z,2017-05-25T17:48:35Z,MERGED,True,112,28,6,https://github.com/apanda,Account for tasks instead of workers,5,[],https://github.com/NetSys/bess/pull/472,https://github.com/barath,4,https://github.com/NetSys/bess/pull/472#issuecomment-303608832,"Previously we were ensuring that each worker was propagated exactly once
through a module. This doesn't work since multiple tasks in a worker
might be using the same module. This change fixes this misaccounting.
Also fixes related bugs in queue.cc","LGTM, pending Sangjin's review.",True,{}
NetSys/bess,https://github.com/NetSys/bess,472,2017-05-23T18:25:49Z,2017-05-25T17:48:17Z,2017-05-25T17:48:35Z,MERGED,True,112,28,6,https://github.com/apanda,Account for tasks instead of workers,5,[],https://github.com/NetSys/bess/pull/472,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/472#issuecomment-304075907,"Previously we were ensuring that each worker was propagated exactly once
through a module. This doesn't work since multiple tasks in a worker
might be using the same module. This change fixes this misaccounting.
Also fixes related bugs in queue.cc",,True,{}
NetSys/bess,https://github.com/NetSys/bess,473,2017-05-23T19:51:16Z,2017-05-23T20:37:50Z,2017-05-23T20:41:59Z,MERGED,True,1,1,1,https://github.com/changlan,Fix the field type of `WorkerStatus`,1,[],https://github.com/NetSys/bess/pull/473,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/473,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,473,2017-05-23T19:51:16Z,2017-05-23T20:37:50Z,2017-05-23T20:41:59Z,MERGED,True,1,1,1,https://github.com/changlan,Fix the field type of `WorkerStatus`,1,[],https://github.com/NetSys/bess/pull/473,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/473#issuecomment-303524859,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,473,2017-05-23T19:51:16Z,2017-05-23T20:37:50Z,2017-05-23T20:41:59Z,MERGED,True,1,1,1,https://github.com/changlan,Fix the field type of `WorkerStatus`,1,[],https://github.com/NetSys/bess/pull/473,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/473#issuecomment-303525790,,"Codecov Report

Merging #473 into master will decrease coverage by 1%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #473    +/-   ##
======================================
- Coverage      34%    33%    -1%     
======================================
  Files         165    165            
  Lines        8103   8100     -3     
  Branches     1538   1537     -1     
======================================
- Hits         2744   2644   -100     
- Misses       4949   5079   +130     
+ Partials      410    377    -33



Impacted Files
Coverage Δ





core/modules/vlan_push.cc
7% <0%> (-85%)
⬇️


core/modules/generic_encap.cc
2% <0%> (-75%)
⬇️


core/modules/set_metadata.h
0% <0%> (-67%)
⬇️


core/modules/queue.h
0% <0%> (-67%)
⬇️


core/modules/set_metadata.cc
2% <0%> (-52%)
⬇️


core/modules/vlan_push.h
0% <0%> (-50%)
⬇️


core/modules/generic_encap.h
0% <0%> (-50%)
⬇️


core/utils/endian.cc
0% <0%> (-50%)
⬇️


core/kmod/llring.h
0% <0%> (-43%)
⬇️


core/modules/queue.cc
2% <0%> (-41%)
⬇️


... and 23 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a216ccd...4c599ed. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,474,2017-05-24T01:55:45Z,2017-05-26T00:11:14Z,2017-08-09T01:22:47Z,MERGED,True,445,418,14,https://github.com/melvinw,refactor gate hooks,7,[],https://github.com/NetSys/bess/pull/474,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/474,The way gate hooks are handled right now is kind of clumsy. This pull request cleans up much of this clumsiness and makes it easier to add gate hooks. It also extends the Track hook to optionally count bits.,The way gate hooks are handled right now is kind of clumsy. This pull request cleans up much of this clumsiness and makes it easier to add gate hooks. It also extends the Track hook to optionally count bits.,True,{}
NetSys/bess,https://github.com/NetSys/bess,474,2017-05-24T01:55:45Z,2017-05-26T00:11:14Z,2017-08-09T01:22:47Z,MERGED,True,445,418,14,https://github.com/melvinw,refactor gate hooks,7,[],https://github.com/NetSys/bess/pull/474,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/474#issuecomment-303597110,The way gate hooks are handled right now is kind of clumsy. This pull request cleans up much of this clumsiness and makes it easier to add gate hooks. It also extends the Track hook to optionally count bits.,"Note: enabling bit tracking adds considerable overhead. ~50Mpps over regular packet/batch tracking on my 2.6GHz Xeon E5 2690 v4
localhost:10514 $ run samples/s2s
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0

18:58:46.494019          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !leaf_source0:0      2600.052     7374047     235.970  158571.518      32.000      11.019
--------------------------------------------------------------------------------------------
localhost:10514 $ track disable source0
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0

18:58:58.572562          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !leaf_source0:0      2600.051     7626610     244.052  164002.623      32.000      10.654
--------------------------------------------------------------------------------------------
localhost:10514 $ track bit enable source0
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0

18:59:10.981560          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !leaf_source0:0      2600.052     6099271     195.177  131158.724      32.000      13.322
--------------------------------------------------------------------------------------------",True,{}
NetSys/bess,https://github.com/NetSys/bess,474,2017-05-24T01:55:45Z,2017-05-26T00:11:14Z,2017-08-09T01:22:47Z,MERGED,True,445,418,14,https://github.com/melvinw,refactor gate hooks,7,[],https://github.com/NetSys/bess/pull/474,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/474#issuecomment-303599460,The way gate hooks are handled right now is kind of clumsy. This pull request cleans up much of this clumsiness and makes it easier to add gate hooks. It also extends the Track hook to optionally count bits.,"Codecov Report

Merging #474 into master will increase coverage by 1%.
The diff coverage is 19%.


@@          Coverage Diff           @@
##           master   #474    +/-   ##
======================================
+ Coverage      33%    34%    +1%     
======================================
  Files         168    167     -1     
  Lines        8212   8221     +9     
  Branches     1563   1550    -13     
======================================
+ Hits         2705   2824   +119     
+ Misses       5119   4988   -131     
- Partials      388    409    +21



Impacted Files
Coverage Δ





core/module.h
70% <ø> (ø)
⬆️


core/bessctl.cc
17% <0%> (+1%)
⬆️


core/module.cc
77% <100%> (+15%)
⬆️


core/hooks/tcpdump.cc
16% <30%> (+16%)
⬆️


core/gate.h
75% <36%> (-20%)
⬇️


core/hooks/track.h
75% <50%> (-25%)
⬇️


core/hooks/track.cc
57% <54%> (-43%)
⬇️


core/gate.cc
81% <73%> (-3%)
⬇️


core/packet.h
39% <0%> (+2%)
⬆️


... and 4 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c3235e2...4561145. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,474,2017-05-24T01:55:45Z,2017-05-26T00:11:14Z,2017-08-09T01:22:47Z,MERGED,True,445,418,14,https://github.com/melvinw,refactor gate hooks,7,[],https://github.com/NetSys/bess/pull/474,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/474#issuecomment-304157250,The way gate hooks are handled right now is kind of clumsy. This pull request cleans up much of this clumsiness and makes it easier to add gate hooks. It also extends the Track hook to optionally count bits.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,475,2017-05-25T18:43:11Z,2017-06-16T16:55:28Z,2017-06-16T16:56:57Z,MERGED,True,94,5,5,https://github.com/TheJStone,Extended Utility Codel,1,[],https://github.com/NetSys/bess/pull/475,https://github.com/TheJStone,1,https://github.com/NetSys/bess/pull/475,"Adds Factory, Generator and Resize methods(as well as a few minor fixups) to Utility Codel in order to allow integration into DRR.","Adds Factory, Generator and Resize methods(as well as a few minor fixups) to Utility Codel in order to allow integration into DRR.",True,{}
NetSys/bess,https://github.com/NetSys/bess,475,2017-05-25T18:43:11Z,2017-06-16T16:55:28Z,2017-06-16T16:56:57Z,MERGED,True,94,5,5,https://github.com/TheJStone,Extended Utility Codel,1,[],https://github.com/NetSys/bess/pull/475,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/475#issuecomment-304098627,"Adds Factory, Generator and Resize methods(as well as a few minor fixups) to Utility Codel in order to allow integration into DRR.","Codecov Report

Merging #475 into master will decrease coverage by 0.07%.
The diff coverage is 73.07%.


@@            Coverage Diff             @@
##           master     #475      +/-   ##
==========================================
- Coverage   65.33%   65.26%   -0.08%     
==========================================
  Files         198      198              
  Lines       12261    12311      +50     
==========================================
+ Hits         8011     8035      +24     
- Misses       4250     4276      +26



Impacted Files
Coverage Δ





core/utils/queue.h
100% <ø> (ø)
⬆️


core/utils/codel.h
77.14% <0%> (-8.13%)
⬇️


core/utils/codel_test.cc
100% <100%> (ø)
⬆️


core/utils/llqueue_test.cc
100% <100%> (ø)
⬆️


core/utils/lock_less_queue.h
84.44% <81.25%> (+1.68%)
⬆️


core/modules/nat.cc
70.22% <0%> (-11.46%)
⬇️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/modules/queue.cc
61.81% <0%> (+0.9%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4f9fa25...6b47981. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,475,2017-05-25T18:43:11Z,2017-06-16T16:55:28Z,2017-06-16T16:56:57Z,MERGED,True,94,5,5,https://github.com/TheJStone,Extended Utility Codel,1,[],https://github.com/NetSys/bess/pull/475,https://github.com/barath,3,https://github.com/NetSys/bess/pull/475#issuecomment-307679560,"Adds Factory, Generator and Resize methods(as well as a few minor fixups) to Utility Codel in order to allow integration into DRR.","Just wanted to follow up -- Josh, do you think you're pretty much done making the changes Panda asked about?  If so, we can merge this in the next day or two.",True,{}
NetSys/bess,https://github.com/NetSys/bess,475,2017-05-25T18:43:11Z,2017-06-16T16:55:28Z,2017-06-16T16:56:57Z,MERGED,True,94,5,5,https://github.com/TheJStone,Extended Utility Codel,1,[],https://github.com/NetSys/bess/pull/475,https://github.com/TheJStone,4,https://github.com/NetSys/bess/pull/475#issuecomment-307815451,"Adds Factory, Generator and Resize methods(as well as a few minor fixups) to Utility Codel in order to allow integration into DRR.","ya, I can finish it up tonight and push. I will ping you when I do.",True,{}
NetSys/bess,https://github.com/NetSys/bess,475,2017-05-25T18:43:11Z,2017-06-16T16:55:28Z,2017-06-16T16:56:57Z,MERGED,True,94,5,5,https://github.com/TheJStone,Extended Utility Codel,1,[],https://github.com/NetSys/bess/pull/475,https://github.com/apanda,5,https://github.com/NetSys/bess/pull/475#issuecomment-309078794,"Adds Factory, Generator and Resize methods(as well as a few minor fixups) to Utility Codel in order to allow integration into DRR.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,476,2017-05-25T18:54:39Z,,2017-09-06T04:37:41Z,OPEN,False,149,144,4,https://github.com/TheJStone,Integrated Codel into DRR,1,['notready'],https://github.com/NetSys/bess/pull/476,https://github.com/TheJStone,1,https://github.com/NetSys/bess/pull/476,"Uses the added functions in the commit Extended Utility Codel to allow the use of locklessqueue and Codel in DRR for each flow's queue. Main changes:

change calls to queue's within drr to match Queue template
add the ability to specify queuetype and arguments within protobuf message and construct that queue in drr.

Note: this pr will fail build until the Extended Utility Codel commit is merged because it is dependent on the methods in that pr.","Uses the added functions in the commit Extended Utility Codel to allow the use of locklessqueue and Codel in DRR for each flow's queue. Main changes:

change calls to queue's within drr to match Queue template
add the ability to specify queuetype and arguments within protobuf message and construct that queue in drr.

Note: this pr will fail build until the Extended Utility Codel commit is merged because it is dependent on the methods in that pr.",True,{}
NetSys/bess,https://github.com/NetSys/bess,476,2017-05-25T18:54:39Z,,2017-09-06T04:37:41Z,OPEN,False,149,144,4,https://github.com/TheJStone,Integrated Codel into DRR,1,['notready'],https://github.com/NetSys/bess/pull/476,https://github.com/barath,2,https://github.com/NetSys/bess/pull/476#issuecomment-309795879,"Uses the added functions in the commit Extended Utility Codel to allow the use of locklessqueue and Codel in DRR for each flow's queue. Main changes:

change calls to queue's within drr to match Queue template
add the ability to specify queuetype and arguments within protobuf message and construct that queue in drr.

Note: this pr will fail build until the Extended Utility Codel commit is merged because it is dependent on the methods in that pr.",What's the status of this PR?,True,{}
NetSys/bess,https://github.com/NetSys/bess,476,2017-05-25T18:54:39Z,,2017-09-06T04:37:41Z,OPEN,False,149,144,4,https://github.com/TheJStone,Integrated Codel into DRR,1,['notready'],https://github.com/NetSys/bess/pull/476,https://github.com/TheJStone,3,https://github.com/NetSys/bess/pull/476#issuecomment-309933109,"Uses the added functions in the commit Extended Utility Codel to allow the use of locklessqueue and Codel in DRR for each flow's queue. Main changes:

change calls to queue's within drr to match Queue template
add the ability to specify queuetype and arguments within protobuf message and construct that queue in drr.

Note: this pr will fail build until the Extended Utility Codel commit is merged because it is dependent on the methods in that pr.",I pushed the changes requested in the review and these chnages are awaiting further review. The code should also be run again now that the codel update has been merged.,True,{}
NetSys/bess,https://github.com/NetSys/bess,477,2017-05-25T21:36:11Z,2017-05-26T00:15:37Z,2017-05-31T19:06:28Z,MERGED,True,8,1,2,https://github.com/barath,Fixes call to std::abs() to address clang 4.0 warning.,3,[],https://github.com/NetSys/bess/pull/477,https://github.com/barath,1,https://github.com/NetSys/bess/pull/477,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,477,2017-05-25T21:36:11Z,2017-05-26T00:15:37Z,2017-05-31T19:06:28Z,MERGED,True,8,1,2,https://github.com/barath,Fixes call to std::abs() to address clang 4.0 warning.,3,[],https://github.com/NetSys/bess/pull/477,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/477#issuecomment-304132382,,What was the error clang complained about? (underflow?),True,{}
NetSys/bess,https://github.com/NetSys/bess,477,2017-05-25T21:36:11Z,2017-05-26T00:15:37Z,2017-05-31T19:06:28Z,MERGED,True,8,1,2,https://github.com/barath,Fixes call to std::abs() to address clang 4.0 warning.,3,[],https://github.com/NetSys/bess/pull/477,https://github.com/barath,3,https://github.com/NetSys/bess/pull/477#issuecomment-304136621,,"modules/measure.cc:83:29: error: taking the absolute value of unsigned type
'unsigned long' has no effect [-Werror,-Wabsolute-value]
…
On Thu, May 25, 2017 at 2:40 PM, Sangjin Han ***@***.***> wrote:
 What was the error clang complained about? (underflow?)

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#477 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7epsOn8T7uqLlhbVai5payOevwsvFks5r9fVhgaJpZM4Nm6_R>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,477,2017-05-25T21:36:11Z,2017-05-26T00:15:37Z,2017-05-31T19:06:28Z,MERGED,True,8,1,2,https://github.com/barath,Fixes call to std::abs() to address clang 4.0 warning.,3,[],https://github.com/NetSys/bess/pull/477,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/477#issuecomment-304138319,,"Codecov Report

Merging #477 into master will decrease coverage by <1%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #477    +/-   ##
======================================
- Coverage      22%    22%   -<1%     
======================================
  Files         169    169            
  Lines        8217   8219     +2     
  Branches     1563   1563            
======================================
  Hits         1822   1822            
- Misses       6129   6131     +2     
  Partials      266    266



Impacted Files
Coverage Δ





core/utils/common.h
87% <0%> (-8%)
⬇️


core/modules/measure.cc
3% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 92c30a9...f07ef7d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,477,2017-05-25T21:36:11Z,2017-05-26T00:15:37Z,2017-05-31T19:06:28Z,MERGED,True,8,1,2,https://github.com/barath,Fixes call to std::abs() to address clang 4.0 warning.,3,[],https://github.com/NetSys/bess/pull/477,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/477#issuecomment-304138431,,"Oh I see. Might be useful to add this to common.h...
template <typename T>
T absdiff(const T &lhs, const T &rhs) {
  return lhs > rhs ? lhs - rhs : rhs - lhs;
}",True,{}
NetSys/bess,https://github.com/NetSys/bess,477,2017-05-25T21:36:11Z,2017-05-26T00:15:37Z,2017-05-31T19:06:28Z,MERGED,True,8,1,2,https://github.com/barath,Fixes call to std::abs() to address clang 4.0 warning.,3,[],https://github.com/NetSys/bess/pull/477,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/477#issuecomment-304157814,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,478,2017-05-25T21:59:30Z,2017-05-26T00:08:44Z,2017-05-26T00:09:02Z,MERGED,True,3,8,3,https://github.com/changlan,Deprecate GetDump(),1,[],https://github.com/NetSys/bess/pull/478,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/478,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,478,2017-05-25T21:59:30Z,2017-05-26T00:08:44Z,2017-05-26T00:09:02Z,MERGED,True,3,8,3,https://github.com/changlan,Deprecate GetDump(),1,[],https://github.com/NetSys/bess/pull/478,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/478#issuecomment-304142474,,"Codecov Report

Merging #478 into master will increase coverage by <1%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #478    +/-   ##
======================================
+ Coverage      22%    22%   +<1%     
======================================
  Files         169    169            
  Lines        8217   8216     -1     
  Branches     1563   1563            
======================================
  Hits         1822   1822            
+ Misses       6129   6128     -1     
  Partials      266    266



Impacted Files
Coverage Δ





core/module.h
46% <ø> (+1%)
⬆️


core/bessctl.cc
0% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 92c30a9...a426311. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,478,2017-05-25T21:59:30Z,2017-05-26T00:08:44Z,2017-05-26T00:09:02Z,MERGED,True,3,8,3,https://github.com/changlan,Deprecate GetDump(),1,[],https://github.com/NetSys/bess/pull/478,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/478#issuecomment-304156917,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,479,2017-05-26T00:08:06Z,2017-05-27T06:02:42Z,2017-05-27T06:03:24Z,MERGED,True,440,469,16,https://github.com/sangjinhan,Update NAT module,16,[],https://github.com/NetSys/bess/pull/479,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/479,"This PR revamps the NAT module, with the following changes:

More compliant to the standards. Most importantly, the new module performs Endpoint-Independent Mapping, which is required for NAT hole punching.
The memory footprint has been reduced (total 64 bytes/entry; used to be 128 bytes/entry) and only proportional to the number of concurrent connections. It doesn't not maintain the list of free IP/port pairs any longer; using a large external IP address pool won't increase memory usage.
The garbage collection phase has been eliminated. The module won't stop entirely even if IP/port pairs run out.
Performance improvement (below)

Local test (unidirectional)
All numbers are in Mpps.



Flows
New
Old




1
43.8
27.2


16
29.2
20.2


256
30.1
20.7


4096
24.7
15.6


65536
19.4
13.2



Local test (bidirectional)
For actual pps, multiple these numbers by 2



Flows
New
Old




1
23.1
13.8


16
16.7
9.9


256
15.4
10.4


4096
12.6
7.7


65536
9.3
6.8



With i40e NICs



Flows
New
Old




1
16.2
12.9


16
13.8
11.3


256
13.0
10.0


4096
12.2
7.1


65536
11.6
6.6


1048576
6.2
3.8","This PR revamps the NAT module, with the following changes:

More compliant to the standards. Most importantly, the new module performs Endpoint-Independent Mapping, which is required for NAT hole punching.
The memory footprint has been reduced (total 64 bytes/entry; used to be 128 bytes/entry) and only proportional to the number of concurrent connections. It doesn't not maintain the list of free IP/port pairs any longer; using a large external IP address pool won't increase memory usage.
The garbage collection phase has been eliminated. The module won't stop entirely even if IP/port pairs run out.
Performance improvement (below)

Local test (unidirectional)
All numbers are in Mpps.



Flows
New
Old




1
43.8
27.2


16
29.2
20.2


256
30.1
20.7


4096
24.7
15.6


65536
19.4
13.2



Local test (bidirectional)
For actual pps, multiple these numbers by 2



Flows
New
Old




1
23.1
13.8


16
16.7
9.9


256
15.4
10.4


4096
12.6
7.7


65536
9.3
6.8



With i40e NICs



Flows
New
Old




1
16.2
12.9


16
13.8
11.3


256
13.0
10.0


4096
12.2
7.1


65536
11.6
6.6


1048576
6.2
3.8",True,{}
NetSys/bess,https://github.com/NetSys/bess,479,2017-05-26T00:08:06Z,2017-05-27T06:02:42Z,2017-05-27T06:03:24Z,MERGED,True,440,469,16,https://github.com/sangjinhan,Update NAT module,16,[],https://github.com/NetSys/bess/pull/479,https://github.com/barath,2,https://github.com/NetSys/bess/pull/479#issuecomment-304353455,"This PR revamps the NAT module, with the following changes:

More compliant to the standards. Most importantly, the new module performs Endpoint-Independent Mapping, which is required for NAT hole punching.
The memory footprint has been reduced (total 64 bytes/entry; used to be 128 bytes/entry) and only proportional to the number of concurrent connections. It doesn't not maintain the list of free IP/port pairs any longer; using a large external IP address pool won't increase memory usage.
The garbage collection phase has been eliminated. The module won't stop entirely even if IP/port pairs run out.
Performance improvement (below)

Local test (unidirectional)
All numbers are in Mpps.



Flows
New
Old




1
43.8
27.2


16
29.2
20.2


256
30.1
20.7


4096
24.7
15.6


65536
19.4
13.2



Local test (bidirectional)
For actual pps, multiple these numbers by 2



Flows
New
Old




1
23.1
13.8


16
16.7
9.9


256
15.4
10.4


4096
12.6
7.7


65536
9.3
6.8



With i40e NICs



Flows
New
Old




1
16.2
12.9


16
13.8
11.3


256
13.0
10.0


4096
12.2
7.1


65536
11.6
6.6


1048576
6.2
3.8","LGTM, will merge after Travis.",True,{}
NetSys/bess,https://github.com/NetSys/bess,479,2017-05-26T00:08:06Z,2017-05-27T06:02:42Z,2017-05-27T06:03:24Z,MERGED,True,440,469,16,https://github.com/sangjinhan,Update NAT module,16,[],https://github.com/NetSys/bess/pull/479,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/479#issuecomment-304407335,"This PR revamps the NAT module, with the following changes:

More compliant to the standards. Most importantly, the new module performs Endpoint-Independent Mapping, which is required for NAT hole punching.
The memory footprint has been reduced (total 64 bytes/entry; used to be 128 bytes/entry) and only proportional to the number of concurrent connections. It doesn't not maintain the list of free IP/port pairs any longer; using a large external IP address pool won't increase memory usage.
The garbage collection phase has been eliminated. The module won't stop entirely even if IP/port pairs run out.
Performance improvement (below)

Local test (unidirectional)
All numbers are in Mpps.



Flows
New
Old




1
43.8
27.2


16
29.2
20.2


256
30.1
20.7


4096
24.7
15.6


65536
19.4
13.2



Local test (bidirectional)
For actual pps, multiple these numbers by 2



Flows
New
Old




1
23.1
13.8


16
16.7
9.9


256
15.4
10.4


4096
12.6
7.7


65536
9.3
6.8



With i40e NICs



Flows
New
Old




1
16.2
12.9


16
13.8
11.3


256
13.0
10.0


4096
12.2
7.1


65536
11.6
6.6


1048576
6.2
3.8","Codecov Report

Merging #479 into master will decrease coverage by 8%.
The diff coverage is 7%.


@@          Coverage Diff           @@
##           master   #479    +/-   ##
======================================
- Coverage      30%    23%    -8%     
======================================
  Files         168    168            
  Lines        8243   8165    -78     
  Branches     1553   1553            
======================================
- Hits         2486   1841   -645     
- Misses       5374   6056   +682     
+ Partials      383    268   -115



Impacted Files
Coverage Δ





core/utils/endian.h
67% <ø> (ø)
⬆️


core/utils/ip.h
100% <ø> (ø)
⬆️


core/modules/update_ttl.cc
7% <0%> (ø)
⬆️


core/modules/nat.cc
1% <0%> (-1%)
⬇️


core/modules/nat.h
0% <0%> (ø)
⬆️


core/utils/checksum.h
88% <100%> (ø)
⬆️


core/utils/ip.cc
90% <100%> (+2%)
⬆️


core/drivers/unix_socket.h
0% <0%> (-100%)
⬇️


core/bessctl.h
0% <0%> (-100%)
⬇️


core/drivers/vport_zc.h
0% <0%> (-100%)
⬇️


... and 28 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6ea54bb...0788035. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,479,2017-05-26T00:08:06Z,2017-05-27T06:02:42Z,2017-05-27T06:03:24Z,MERGED,True,440,469,16,https://github.com/sangjinhan,Update NAT module,16,[],https://github.com/NetSys/bess/pull/479,https://github.com/barath,4,https://github.com/NetSys/bess/pull/479#issuecomment-304430677,"This PR revamps the NAT module, with the following changes:

More compliant to the standards. Most importantly, the new module performs Endpoint-Independent Mapping, which is required for NAT hole punching.
The memory footprint has been reduced (total 64 bytes/entry; used to be 128 bytes/entry) and only proportional to the number of concurrent connections. It doesn't not maintain the list of free IP/port pairs any longer; using a large external IP address pool won't increase memory usage.
The garbage collection phase has been eliminated. The module won't stop entirely even if IP/port pairs run out.
Performance improvement (below)

Local test (unidirectional)
All numbers are in Mpps.



Flows
New
Old




1
43.8
27.2


16
29.2
20.2


256
30.1
20.7


4096
24.7
15.6


65536
19.4
13.2



Local test (bidirectional)
For actual pps, multiple these numbers by 2



Flows
New
Old




1
23.1
13.8


16
16.7
9.9


256
15.4
10.4


4096
12.6
7.7


65536
9.3
6.8



With i40e NICs



Flows
New
Old




1
16.2
12.9


16
13.8
11.3


256
13.0
10.0


4096
12.2
7.1


65536
11.6
6.6


1048576
6.2
3.8",,True,{}
NetSys/bess,https://github.com/NetSys/bess,480,2017-05-26T01:49:49Z,2017-05-26T19:30:41Z,2017-09-28T16:26:10Z,MERGED,True,76,43,18,https://github.com/ddiproietto,Rename attach_module() to attach_task() and add module.attach_task,3,[],https://github.com/NetSys/bess/pull/480,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/480,"This only makes the interface easier to use from .bess scripts.
Backwards compatibility is preserved for now","This only makes the interface easier to use from .bess scripts.
Backwards compatibility is preserved for now",True,{}
NetSys/bess,https://github.com/NetSys/bess,480,2017-05-26T01:49:49Z,2017-05-26T19:30:41Z,2017-09-28T16:26:10Z,MERGED,True,76,43,18,https://github.com/ddiproietto,Rename attach_module() to attach_task() and add module.attach_task,3,[],https://github.com/NetSys/bess/pull/480,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/480#issuecomment-304173886,"This only makes the interface easier to use from .bess scripts.
Backwards compatibility is preserved for now","Codecov Report

Merging #480 into master will not change coverage.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #480   +/-   ##
=====================================
  Coverage      22%    22%           
=====================================
  Files         168    168           
  Lines        8227   8227           
  Branches     1550   1550           
=====================================
  Hits         1840   1840           
  Misses       6119   6119           
  Partials      268    268

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b4f3a22...a39f835. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,480,2017-05-26T01:49:49Z,2017-05-26T19:30:41Z,2017-09-28T16:26:10Z,MERGED,True,76,43,18,https://github.com/ddiproietto,Rename attach_module() to attach_task() and add module.attach_task,3,[],https://github.com/NetSys/bess/pull/480,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/480#issuecomment-304369618,"This only makes the interface easier to use from .bess scripts.
Backwards compatibility is preserved for now",,True,{}
NetSys/bess,https://github.com/NetSys/bess,481,2017-05-26T18:44:23Z,2017-05-26T19:01:04Z,2017-05-31T19:06:29Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Fix a silly bug in the git pre-commit hook,1,[],https://github.com/NetSys/bess/pull/481,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/481,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,481,2017-05-26T18:44:23Z,2017-05-26T19:01:04Z,2017-05-31T19:06:29Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Fix a silly bug in the git pre-commit hook,1,[],https://github.com/NetSys/bess/pull/481,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/481#issuecomment-304363280,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,481,2017-05-26T18:44:23Z,2017-05-26T19:01:04Z,2017-05-31T19:06:29Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Fix a silly bug in the git pre-commit hook,1,[],https://github.com/NetSys/bess/pull/481,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/481#issuecomment-304365203,,"Codecov Report

Merging #481 into master will not change coverage.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #481   +/-   ##
=====================================
  Coverage      22%    22%           
=====================================
  Files         168    168           
  Lines        8227   8227           
  Branches     1550   1550           
=====================================
  Hits         1840   1840           
  Misses       6119   6119           
  Partials      268    268

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b4f3a22...94a6b15. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,482,2017-05-28T09:34:06Z,2017-06-01T06:09:07Z,2017-06-01T06:09:20Z,MERGED,True,46,0,1,https://github.com/GalSagie,Add ARP Header utils,6,[],https://github.com/NetSys/bess/pull/482,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/482,This is planned to be used in an ARP responder module,This is planned to be used in an ARP responder module,True,{}
NetSys/bess,https://github.com/NetSys/bess,482,2017-05-28T09:34:06Z,2017-06-01T06:09:07Z,2017-06-01T06:09:20Z,MERGED,True,46,0,1,https://github.com/GalSagie,Add ARP Header utils,6,[],https://github.com/NetSys/bess/pull/482,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/482#issuecomment-304504554,This is planned to be used in an ARP responder module,"Codecov Report

Merging #482 into master will not change coverage.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #482   +/-   ##
=====================================
  Coverage      23%    23%           
=====================================
  Files         168    168           
  Lines        8165   8165           
  Branches     1553   1553           
=====================================
  Hits         1841   1841           
  Misses       6056   6056           
  Partials      268    268

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 345a9fa...b8fadaa. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,482,2017-05-28T09:34:06Z,2017-06-01T06:09:07Z,2017-06-01T06:09:20Z,MERGED,True,46,0,1,https://github.com/GalSagie,Add ARP Header utils,6,[],https://github.com/NetSys/bess/pull/482,https://github.com/GalSagie,3,https://github.com/NetSys/bess/pull/482#issuecomment-304768752,This is planned to be used in an ARP responder module,"Just noticed thati used  Ipv4 struct however it refers to a complete Ipv4 header (might consider changing the name).
I will fix this and re send.",True,{}
NetSys/bess,https://github.com/NetSys/bess,482,2017-05-28T09:34:06Z,2017-06-01T06:09:07Z,2017-06-01T06:09:20Z,MERGED,True,46,0,1,https://github.com/GalSagie,Add ARP Header utils,6,[],https://github.com/NetSys/bess/pull/482,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/482#issuecomment-305398078,This is planned to be used in an ARP responder module,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,483,2017-05-28T13:17:08Z,2017-05-29T22:00:30Z,2017-05-29T22:00:30Z,MERGED,True,1,0,1,https://github.com/GalSagie,Update CONTRIBUTORS with Gal Sagie,1,[],https://github.com/NetSys/bess/pull/483,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/483,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,483,2017-05-28T13:17:08Z,2017-05-29T22:00:30Z,2017-05-29T22:00:30Z,MERGED,True,1,0,1,https://github.com/GalSagie,Update CONTRIBUTORS with Gal Sagie,1,[],https://github.com/NetSys/bess/pull/483,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/483#issuecomment-304516612,,"Codecov Report

Merging #483 into master will not change coverage.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #483   +/-   ##
=====================================
  Coverage      23%    23%           
=====================================
  Files         168    168           
  Lines        8165   8165           
  Branches     1553   1553           
=====================================
  Hits         1841   1841           
  Misses       6056   6056           
  Partials      268    268

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 345a9fa...92ef02f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,484,2017-05-29T06:22:38Z,2017-05-29T21:59:40Z,2017-05-29T22:00:03Z,MERGED,True,0,13,8,https://github.com/GalSagie,Remove redundant python imports,1,[],https://github.com/NetSys/bess/pull/484,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/484,"Remove unused imports from all python files that
are not auto generated","Remove unused imports from all python files that
are not auto generated",True,{}
NetSys/bess,https://github.com/NetSys/bess,484,2017-05-29T06:22:38Z,2017-05-29T21:59:40Z,2017-05-29T22:00:03Z,MERGED,True,0,13,8,https://github.com/GalSagie,Remove redundant python imports,1,[],https://github.com/NetSys/bess/pull/484,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/484#issuecomment-304586743,"Remove unused imports from all python files that
are not auto generated","Codecov Report

Merging #484 into master will not change coverage.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #484   +/-   ##
=====================================
  Coverage      23%    23%           
=====================================
  Files         168    168           
  Lines        8165   8165           
  Branches     1553   1553           
=====================================
  Hits         1841   1841           
  Misses       6056   6056           
  Partials      268    268

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 345a9fa...d59800c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,484,2017-05-29T06:22:38Z,2017-05-29T21:59:40Z,2017-05-29T22:00:03Z,MERGED,True,0,13,8,https://github.com/GalSagie,Remove redundant python imports,1,[],https://github.com/NetSys/bess/pull/484,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/484#issuecomment-304736318,"Remove unused imports from all python files that
are not auto generated",,True,{}
NetSys/bess,https://github.com/NetSys/bess,485,2017-05-29T06:45:52Z,2017-05-30T19:34:33Z,2017-05-30T19:35:02Z,MERGED,True,11,5,2,https://github.com/GalSagie,Fix few pep8 errors,1,[],https://github.com/NetSys/bess/pull/485,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/485,"This patch fix some of the pep8 errors, some errors
were left untouched at this point due to code readability, might
need to consider changing the checks","This patch fix some of the pep8 errors, some errors
were left untouched at this point due to code readability, might
need to consider changing the checks",True,{}
NetSys/bess,https://github.com/NetSys/bess,485,2017-05-29T06:45:52Z,2017-05-30T19:34:33Z,2017-05-30T19:35:02Z,MERGED,True,11,5,2,https://github.com/GalSagie,Fix few pep8 errors,1,[],https://github.com/NetSys/bess/pull/485,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/485#issuecomment-304593224,"This patch fix some of the pep8 errors, some errors
were left untouched at this point due to code readability, might
need to consider changing the checks","Codecov Report

Merging #485 into master will not change coverage.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #485   +/-   ##
=====================================
  Coverage      23%    23%           
=====================================
  Files         168    168           
  Lines        8165   8165           
  Branches     1553   1553           
=====================================
  Hits         1841   1841           
  Misses       6056   6056           
  Partials      268    268

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 345a9fa...8e9196a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,485,2017-05-29T06:45:52Z,2017-05-30T19:34:33Z,2017-05-30T19:35:02Z,MERGED,True,11,5,2,https://github.com/GalSagie,Fix few pep8 errors,1,[],https://github.com/NetSys/bess/pull/485,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/485#issuecomment-304984431,"This patch fix some of the pep8 errors, some errors
were left untouched at this point due to code readability, might
need to consider changing the checks","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,485,2017-05-29T06:45:52Z,2017-05-30T19:34:33Z,2017-05-30T19:35:02Z,MERGED,True,11,5,2,https://github.com/GalSagie,Fix few pep8 errors,1,[],https://github.com/NetSys/bess/pull/485,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/485#issuecomment-304984545,"This patch fix some of the pep8 errors, some errors
were left untouched at this point due to code readability, might
need to consider changing the checks",,True,{}
NetSys/bess,https://github.com/NetSys/bess,486,2017-05-29T07:18:53Z,2017-05-29T21:58:11Z,2017-05-29T21:58:31Z,MERGED,True,2,3,1,https://github.com/GalSagie,Remove unused variables from container build python script,1,[],https://github.com/NetSys/bess/pull/486,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/486,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,486,2017-05-29T07:18:53Z,2017-05-29T21:58:11Z,2017-05-29T21:58:31Z,MERGED,True,2,3,1,https://github.com/GalSagie,Remove unused variables from container build python script,1,[],https://github.com/NetSys/bess/pull/486,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/486#issuecomment-304597661,,"Codecov Report

Merging #486 into master will not change coverage.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #486   +/-   ##
=====================================
  Coverage      23%    23%           
=====================================
  Files         168    168           
  Lines        8165   8165           
  Branches     1553   1553           
=====================================
  Hits         1841   1841           
  Misses       6056   6056           
  Partials      268    268

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 345a9fa...65664c5. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,486,2017-05-29T07:18:53Z,2017-05-29T21:58:11Z,2017-05-29T21:58:31Z,MERGED,True,2,3,1,https://github.com/GalSagie,Remove unused variables from container build python script,1,[],https://github.com/NetSys/bess/pull/486,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/486#issuecomment-304736193,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,487,2017-05-29T08:25:55Z,2017-05-29T16:45:56Z,2017-05-29T16:46:28Z,CLOSED,False,17,0,3,https://github.com/GalSagie,Add copy command to Ethernet MAC address class,1,[],https://github.com/NetSys/bess/pull/487,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/487,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,487,2017-05-29T08:25:55Z,2017-05-29T16:45:56Z,2017-05-29T16:46:28Z,CLOSED,False,17,0,3,https://github.com/GalSagie,Add copy command to Ethernet MAC address class,1,[],https://github.com/NetSys/bess/pull/487,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/487#issuecomment-304610839,,"Codecov Report

Merging #487 into master will increase coverage by <1%.
The diff coverage is 100%.


@@          Coverage Diff           @@
##           master   #487    +/-   ##
======================================
+ Coverage      23%    23%   +<1%     
======================================
  Files         168    168            
  Lines        8165   8168     +3     
  Branches     1553   1554     +1     
======================================
+ Hits         1841   1844     +3     
  Misses       6056   6056            
  Partials      268    268



Impacted Files
Coverage Δ





core/utils/ether.h
60% <ø> (ø)
⬆️


core/utils/ether.cc
89% <100%> (+2%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 345a9fa...3adce93. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,487,2017-05-29T08:25:55Z,2017-05-29T16:45:56Z,2017-05-29T16:46:28Z,CLOSED,False,17,0,3,https://github.com/GalSagie,Add copy command to Ethernet MAC address class,1,[],https://github.com/NetSys/bess/pull/487,https://github.com/GalSagie,3,https://github.com/NetSys/bess/pull/487#issuecomment-304699319,,This function is redundant as Ethernet::Address a = b  (where b is another Address object will work just as well),True,{}
NetSys/bess,https://github.com/NetSys/bess,490,2017-05-30T19:33:54Z,2017-06-01T18:17:59Z,2017-06-01T18:19:06Z,MERGED,True,258,236,26,https://github.com/sangjinhan,Migrate sanity_check.sh to Python unittest,15,[],https://github.com/NetSys/bess/pull/490,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/490,"sanity_check.sh is a simple shell script that run some selected BESS scripts to see if anything goes seriously wrong (e.g., crash). It provides a useful means of regression test, and this PR adds a few improvements to it:

Instead of manually specifying which scripts are to be run, now it tries all scripts in the bessctl/conf/samples directory.

For this, all scripts in the directory have been rearranged so that:

It does not creates physical/virtual ports as they might not be available on the test system.
No external dependencies are used (e.g., Docker)
Scripts are not interactive (e.g., no artificial time delay)


Scripts that do not meet the above conditions have been moved to other directories


Migrate from a custom shell script to the Python unittest framework

Down the road, we will add coverage measurement for Python code.


The old script took about 6-7 minutes to complete, adding a long delay to the CI build process. Now it takes less than a minute.
Besides ones in bessctl/conf/samples, all other BESS scripts are tested with syntax (and syntactic sugar added).","sanity_check.sh is a simple shell script that run some selected BESS scripts to see if anything goes seriously wrong (e.g., crash). It provides a useful means of regression test, and this PR adds a few improvements to it:

Instead of manually specifying which scripts are to be run, now it tries all scripts in the bessctl/conf/samples directory.

For this, all scripts in the directory have been rearranged so that:

It does not creates physical/virtual ports as they might not be available on the test system.
No external dependencies are used (e.g., Docker)
Scripts are not interactive (e.g., no artificial time delay)


Scripts that do not meet the above conditions have been moved to other directories


Migrate from a custom shell script to the Python unittest framework

Down the road, we will add coverage measurement for Python code.


The old script took about 6-7 minutes to complete, adding a long delay to the CI build process. Now it takes less than a minute.
Besides ones in bessctl/conf/samples, all other BESS scripts are tested with syntax (and syntactic sugar added).",True,{}
NetSys/bess,https://github.com/NetSys/bess,490,2017-05-30T19:33:54Z,2017-06-01T18:17:59Z,2017-06-01T18:19:06Z,MERGED,True,258,236,26,https://github.com/sangjinhan,Migrate sanity_check.sh to Python unittest,15,[],https://github.com/NetSys/bess/pull/490,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/490#issuecomment-305017264,"sanity_check.sh is a simple shell script that run some selected BESS scripts to see if anything goes seriously wrong (e.g., crash). It provides a useful means of regression test, and this PR adds a few improvements to it:

Instead of manually specifying which scripts are to be run, now it tries all scripts in the bessctl/conf/samples directory.

For this, all scripts in the directory have been rearranged so that:

It does not creates physical/virtual ports as they might not be available on the test system.
No external dependencies are used (e.g., Docker)
Scripts are not interactive (e.g., no artificial time delay)


Scripts that do not meet the above conditions have been moved to other directories


Migrate from a custom shell script to the Python unittest framework

Down the road, we will add coverage measurement for Python code.


The old script took about 6-7 minutes to complete, adding a long delay to the CI build process. Now it takes less than a minute.
Besides ones in bessctl/conf/samples, all other BESS scripts are tested with syntax (and syntactic sugar added).","Codecov Report

Merging #490 into master will decrease coverage by 4%.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master   #490     +/-   ##
=======================================
- Coverage      30%    26%     -4%     
=======================================
  Files         168    168             
  Lines        8181   8497    +316     
  Branches     1556      0   -1556     
=======================================
- Hits         2487   2213    -274     
- Misses       5311   6284    +973     
+ Partials      383      0    -383



Impacted Files
Coverage Δ





core/drivers/pcap.h
0% <0%> (-100%)
⬇️


core/drivers/unix_socket.h
0% <0%> (-100%)
⬇️


core/drivers/vport_zc.h
0% <0%> (-100%)
⬇️


core/bessctl.h
0% <0%> (-100%)
⬇️


core/drivers/vport.h
0% <0%> (-100%)
⬇️


core/modules/sink.cc
25% <0%> (-75%)
⬇️


core/packet_avx.h
0% <0%> (-69%)
⬇️


core/utils/simd.h
33% <0%> (-67%)
⬇️


core/dpdk.cc
1% <0%> (-66%)
⬇️


core/worker.h
16% <0%> (-63%)
⬇️


... and 104 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 012b5ea...0dd9a6d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,490,2017-05-30T19:33:54Z,2017-06-01T18:17:59Z,2017-06-01T18:19:06Z,MERGED,True,258,236,26,https://github.com/sangjinhan,Migrate sanity_check.sh to Python unittest,15,[],https://github.com/NetSys/bess/pull/490,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/490#issuecomment-305576593,"sanity_check.sh is a simple shell script that run some selected BESS scripts to see if anything goes seriously wrong (e.g., crash). It provides a useful means of regression test, and this PR adds a few improvements to it:

Instead of manually specifying which scripts are to be run, now it tries all scripts in the bessctl/conf/samples directory.

For this, all scripts in the directory have been rearranged so that:

It does not creates physical/virtual ports as they might not be available on the test system.
No external dependencies are used (e.g., Docker)
Scripts are not interactive (e.g., no artificial time delay)


Scripts that do not meet the above conditions have been moved to other directories


Migrate from a custom shell script to the Python unittest framework

Down the road, we will add coverage measurement for Python code.


The old script took about 6-7 minutes to complete, adding a long delay to the CI build process. Now it takes less than a minute.
Besides ones in bessctl/conf/samples, all other BESS scripts are tested with syntax (and syntactic sugar added).",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,492,2017-05-31T20:54:56Z,2017-06-02T21:47:40Z,2017-06-04T23:07:20Z,MERGED,True,173,66,29,https://github.com/sangjinhan,Add Python code coverage & Fix C++ coverage fluctuation,15,[],https://github.com/NetSys/bess/pull/492,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/492,"NOTE: This PR renames the directory libbess-python to pybess (see below for details). If you have out-of-tree controllers you will need to update them.

This PR contains two changes regarding code coverage measurement on Codecov. Both Python and C++ coverage results are merged. An example can be seen here: https://codecov.io/gh/sangjinhan/bess/tree/travis_test8

Add Python code coverage measurement

All Python unittests in the code tree are automatically run. By Python convention, the directory should be a valid Python package (has __init__.py), and unittest files should start with test_.
Currently bessctl and pybess directories are measured.

libbess-python directory has been renamed to pybess. Python packages must not have a - in their name.
bessctl is now a Python package.


In Travis build, codecov-bash has been replaced with codecov-python, as the latter is simpler to use and covers more languages.
Auto-generated *_pb2.py files are not included in the report.


Fix C++ coverage result fluctuation (#388)

A few issues have contributed to the incorrect measurement resulting in fluctuation of coverage percentage numbers.

bessd daemon was not gracefully shutdown but killed by a signal, adding some non-determinism.
Code was built with the -O1 optimization option, which caused incorrect line accounting. Now it is built with -O0 in DEBUG mode.

There were some build errors that prevented -O0. Fixed.
DPDK causes some build issue with g++ -O0. I made a dirty fix in core/modules/ip_lookup.cc. I will send a patch to DPDK mainstream...




Now the result seems to make more sense: about 63% at the moment. I am not sure if the number will be stable, but let's see.



This PR includes commits from #490. I will rebase this branch to the master once #490 has been merged.","NOTE: This PR renames the directory libbess-python to pybess (see below for details). If you have out-of-tree controllers you will need to update them.

This PR contains two changes regarding code coverage measurement on Codecov. Both Python and C++ coverage results are merged. An example can be seen here: https://codecov.io/gh/sangjinhan/bess/tree/travis_test8

Add Python code coverage measurement

All Python unittests in the code tree are automatically run. By Python convention, the directory should be a valid Python package (has __init__.py), and unittest files should start with test_.
Currently bessctl and pybess directories are measured.

libbess-python directory has been renamed to pybess. Python packages must not have a - in their name.
bessctl is now a Python package.


In Travis build, codecov-bash has been replaced with codecov-python, as the latter is simpler to use and covers more languages.
Auto-generated *_pb2.py files are not included in the report.


Fix C++ coverage result fluctuation (#388)

A few issues have contributed to the incorrect measurement resulting in fluctuation of coverage percentage numbers.

bessd daemon was not gracefully shutdown but killed by a signal, adding some non-determinism.
Code was built with the -O1 optimization option, which caused incorrect line accounting. Now it is built with -O0 in DEBUG mode.

There were some build errors that prevented -O0. Fixed.
DPDK causes some build issue with g++ -O0. I made a dirty fix in core/modules/ip_lookup.cc. I will send a patch to DPDK mainstream...




Now the result seems to make more sense: about 63% at the moment. I am not sure if the number will be stable, but let's see.



This PR includes commits from #490. I will rebase this branch to the master once #490 has been merged.",True,{}
NetSys/bess,https://github.com/NetSys/bess,492,2017-05-31T20:54:56Z,2017-06-02T21:47:40Z,2017-06-04T23:07:20Z,MERGED,True,173,66,29,https://github.com/sangjinhan,Add Python code coverage & Fix C++ coverage fluctuation,15,[],https://github.com/NetSys/bess/pull/492,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/492#issuecomment-305642223,"NOTE: This PR renames the directory libbess-python to pybess (see below for details). If you have out-of-tree controllers you will need to update them.

This PR contains two changes regarding code coverage measurement on Codecov. Both Python and C++ coverage results are merged. An example can be seen here: https://codecov.io/gh/sangjinhan/bess/tree/travis_test8

Add Python code coverage measurement

All Python unittests in the code tree are automatically run. By Python convention, the directory should be a valid Python package (has __init__.py), and unittest files should start with test_.
Currently bessctl and pybess directories are measured.

libbess-python directory has been renamed to pybess. Python packages must not have a - in their name.
bessctl is now a Python package.


In Travis build, codecov-bash has been replaced with codecov-python, as the latter is simpler to use and covers more languages.
Auto-generated *_pb2.py files are not included in the report.


Fix C++ coverage result fluctuation (#388)

A few issues have contributed to the incorrect measurement resulting in fluctuation of coverage percentage numbers.

bessd daemon was not gracefully shutdown but killed by a signal, adding some non-determinism.
Code was built with the -O1 optimization option, which caused incorrect line accounting. Now it is built with -O0 in DEBUG mode.

There were some build errors that prevented -O0. Fixed.
DPDK causes some build issue with g++ -O0. I made a dirty fix in core/modules/ip_lookup.cc. I will send a patch to DPDK mainstream...




Now the result seems to make more sense: about 63% at the moment. I am not sure if the number will be stable, but let's see.



This PR includes commits from #490. I will rebase this branch to the master once #490 has been merged.","Codecov Report

Merging #492 into master will increase coverage by 38%.
The diff coverage is 76%.


@@           Coverage Diff            @@
##           master    #492     +/-   ##
========================================
+ Coverage      26%     64%    +38%     
========================================
  Files         168     196     +28     
  Lines        8497   12034   +3537     
========================================
+ Hits         2213    7728   +5515     
+ Misses       6284    4306   -1978



Impacted Files
Coverage Δ





pybess/protobuf_to_dict.py
56% <ø> (ø)



core/modules/l2_forward.h
100% <ø> (+100%)
⬆️


pybess/bess.py
39% <ø> (ø)



pybess/test_protobuf_to_dict.py
100% <ø> (ø)



pybess/module_msg.py
100% <100%> (ø)



core/utils/simd.h
100% <100%> (+67%)
⬆️


pybess/test_bess.py
100% <100%> (ø)



core/modules/l2_forward.cc
36% <100%> (+35%)
⬆️


bessctl/test_sugar.py
97% <100%> (ø)



core/modules/ip_lookup.cc
73% <65%> (+69%)
⬆️


... and 156 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f1d0032...0e1d17f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,492,2017-05-31T20:54:56Z,2017-06-02T21:47:40Z,2017-06-04T23:07:20Z,MERGED,True,173,66,29,https://github.com/sangjinhan,Add Python code coverage & Fix C++ coverage fluctuation,15,[],https://github.com/NetSys/bess/pull/492,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/492#issuecomment-305642279,"NOTE: This PR renames the directory libbess-python to pybess (see below for details). If you have out-of-tree controllers you will need to update them.

This PR contains two changes regarding code coverage measurement on Codecov. Both Python and C++ coverage results are merged. An example can be seen here: https://codecov.io/gh/sangjinhan/bess/tree/travis_test8

Add Python code coverage measurement

All Python unittests in the code tree are automatically run. By Python convention, the directory should be a valid Python package (has __init__.py), and unittest files should start with test_.
Currently bessctl and pybess directories are measured.

libbess-python directory has been renamed to pybess. Python packages must not have a - in their name.
bessctl is now a Python package.


In Travis build, codecov-bash has been replaced with codecov-python, as the latter is simpler to use and covers more languages.
Auto-generated *_pb2.py files are not included in the report.


Fix C++ coverage result fluctuation (#388)

A few issues have contributed to the incorrect measurement resulting in fluctuation of coverage percentage numbers.

bessd daemon was not gracefully shutdown but killed by a signal, adding some non-determinism.
Code was built with the -O1 optimization option, which caused incorrect line accounting. Now it is built with -O0 in DEBUG mode.

There were some build errors that prevented -O0. Fixed.
DPDK causes some build issue with g++ -O0. I made a dirty fix in core/modules/ip_lookup.cc. I will send a patch to DPDK mainstream...




Now the result seems to make more sense: about 63% at the moment. I am not sure if the number will be stable, but let's see.



This PR includes commits from #490. I will rebase this branch to the master once #490 has been merged.","Rebased, now ready for review&merge.",True,{}
NetSys/bess,https://github.com/NetSys/bess,492,2017-05-31T20:54:56Z,2017-06-02T21:47:40Z,2017-06-04T23:07:20Z,MERGED,True,173,66,29,https://github.com/sangjinhan,Add Python code coverage & Fix C++ coverage fluctuation,15,[],https://github.com/NetSys/bess/pull/492,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/492#issuecomment-305692698,"NOTE: This PR renames the directory libbess-python to pybess (see below for details). If you have out-of-tree controllers you will need to update them.

This PR contains two changes regarding code coverage measurement on Codecov. Both Python and C++ coverage results are merged. An example can be seen here: https://codecov.io/gh/sangjinhan/bess/tree/travis_test8

Add Python code coverage measurement

All Python unittests in the code tree are automatically run. By Python convention, the directory should be a valid Python package (has __init__.py), and unittest files should start with test_.
Currently bessctl and pybess directories are measured.

libbess-python directory has been renamed to pybess. Python packages must not have a - in their name.
bessctl is now a Python package.


In Travis build, codecov-bash has been replaced with codecov-python, as the latter is simpler to use and covers more languages.
Auto-generated *_pb2.py files are not included in the report.


Fix C++ coverage result fluctuation (#388)

A few issues have contributed to the incorrect measurement resulting in fluctuation of coverage percentage numbers.

bessd daemon was not gracefully shutdown but killed by a signal, adding some non-determinism.
Code was built with the -O1 optimization option, which caused incorrect line accounting. Now it is built with -O0 in DEBUG mode.

There were some build errors that prevented -O0. Fixed.
DPDK causes some build issue with g++ -O0. I made a dirty fix in core/modules/ip_lookup.cc. I will send a patch to DPDK mainstream...




Now the result seems to make more sense: about 63% at the moment. I am not sure if the number will be stable, but let's see.



This PR includes commits from #490. I will rebase this branch to the master once #490 has been merged.",Patch for 764feea has been submitted to the DPDK upstream.,True,{}
NetSys/bess,https://github.com/NetSys/bess,492,2017-05-31T20:54:56Z,2017-06-02T21:47:40Z,2017-06-04T23:07:20Z,MERGED,True,173,66,29,https://github.com/sangjinhan,Add Python code coverage & Fix C++ coverage fluctuation,15,[],https://github.com/NetSys/bess/pull/492,https://github.com/changlan,5,https://github.com/NetSys/bess/pull/492#issuecomment-305917209,"NOTE: This PR renames the directory libbess-python to pybess (see below for details). If you have out-of-tree controllers you will need to update them.

This PR contains two changes regarding code coverage measurement on Codecov. Both Python and C++ coverage results are merged. An example can be seen here: https://codecov.io/gh/sangjinhan/bess/tree/travis_test8

Add Python code coverage measurement

All Python unittests in the code tree are automatically run. By Python convention, the directory should be a valid Python package (has __init__.py), and unittest files should start with test_.
Currently bessctl and pybess directories are measured.

libbess-python directory has been renamed to pybess. Python packages must not have a - in their name.
bessctl is now a Python package.


In Travis build, codecov-bash has been replaced with codecov-python, as the latter is simpler to use and covers more languages.
Auto-generated *_pb2.py files are not included in the report.


Fix C++ coverage result fluctuation (#388)

A few issues have contributed to the incorrect measurement resulting in fluctuation of coverage percentage numbers.

bessd daemon was not gracefully shutdown but killed by a signal, adding some non-determinism.
Code was built with the -O1 optimization option, which caused incorrect line accounting. Now it is built with -O0 in DEBUG mode.

There were some build errors that prevented -O0. Fixed.
DPDK causes some build issue with g++ -O0. I made a dirty fix in core/modules/ip_lookup.cc. I will send a patch to DPDK mainstream...




Now the result seems to make more sense: about 63% at the moment. I am not sure if the number will be stable, but let's see.



This PR includes commits from #490. I will rebase this branch to the master once #490 has been merged.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,494,2017-06-01T08:15:41Z,2017-06-06T23:03:45Z,2017-06-06T23:04:30Z,MERGED,True,151,0,4,https://github.com/GalSagie,Add ARP Responder module,5,[],https://github.com/NetSys/bess/pull/494,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/494,"ARP responder is configured with known MAC's-IP's pairs
and know to answer ARP requests depending on its configured cache.
This module can be used to implement virtual routing in
virtual enviorments and also as a foundation for ARP
handling in general.
Still todo is the ability to learn new MAC-IP pairs from
the requests and replys and also removing of pairs
from cache (with maybe potential timeouts)","ARP responder is configured with known MAC's-IP's pairs
and know to answer ARP requests depending on its configured cache.
This module can be used to implement virtual routing in
virtual enviorments and also as a foundation for ARP
handling in general.
Still todo is the ability to learn new MAC-IP pairs from
the requests and replys and also removing of pairs
from cache (with maybe potential timeouts)",True,{}
NetSys/bess,https://github.com/NetSys/bess,494,2017-06-01T08:15:41Z,2017-06-06T23:03:45Z,2017-06-06T23:04:30Z,MERGED,True,151,0,4,https://github.com/GalSagie,Add ARP Responder module,5,[],https://github.com/NetSys/bess/pull/494,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/494#issuecomment-305430759,"ARP responder is configured with known MAC's-IP's pairs
and know to answer ARP requests depending on its configured cache.
This module can be used to implement virtual routing in
virtual enviorments and also as a foundation for ARP
handling in general.
Still todo is the ability to learn new MAC-IP pairs from
the requests and replys and also removing of pairs
from cache (with maybe potential timeouts)","Codecov Report

Merging #494 into master will increase coverage by 28%.
The diff coverage is 80%.


@@           Coverage Diff            @@
##           master    #494     +/-   ##
========================================
+ Coverage      30%     58%    +28%     
========================================
  Files         168     178     +10     
  Lines        8181   10203   +2022     
  Branches     1556       0   -1556     
========================================
+ Hits         2489    5947   +3458     
+ Misses       5310    4256   -1054     
+ Partials      382       0    -382



Impacted Files
Coverage Δ





core/modules/arp_responder.h
100% <100%> (ø)



core/modules/arp_responder.cc
79% <79%> (ø)



core/modules/merge.cc
25% <0%> (-8%)
⬇️


core/metadata.h
64% <0%> (-3%)
⬇️


core/message.h
18% <0%> (-2%)
⬇️


core/modules/ip_checksum.cc
11% <0%> (-1%)
⬇️


core/modules/buffer.cc
4% <0%> (-1%)
⬇️


core/modules/timestamp.cc
4% <0%> (-1%)
⬇️


core/modules/generic_decap.cc
7% <0%> (ø)
⬇️


core/modules/port_out.cc
3% <0%> (ø)
⬇️


... and 140 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 024c1b9...103164b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,494,2017-06-01T08:15:41Z,2017-06-06T23:03:45Z,2017-06-06T23:04:30Z,MERGED,True,151,0,4,https://github.com/GalSagie,Add ARP Responder module,5,[],https://github.com/NetSys/bess/pull/494,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/494#issuecomment-306642073,"ARP responder is configured with known MAC's-IP's pairs
and know to answer ARP requests depending on its configured cache.
This module can be used to implement virtual routing in
virtual enviorments and also as a foundation for ARP
handling in general.
Still todo is the ability to learn new MAC-IP pairs from
the requests and replys and also removing of pairs
from cache (with maybe potential timeouts)","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,495,2017-06-01T13:01:50Z,2017-06-02T09:03:54Z,2017-06-02T09:03:54Z,CLOSED,False,3,0,1,https://github.com/GalSagie,Check module exists before applying tcpdump,3,[],https://github.com/NetSys/bess/pull/495,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/495,"#493
This patch verify that the module name exists before
applying tcpdump command from python SDK.","#493
This patch verify that the module name exists before
applying tcpdump command from python SDK.",True,{}
NetSys/bess,https://github.com/NetSys/bess,495,2017-06-01T13:01:50Z,2017-06-02T09:03:54Z,2017-06-02T09:03:54Z,CLOSED,False,3,0,1,https://github.com/GalSagie,Check module exists before applying tcpdump,3,[],https://github.com/NetSys/bess/pull/495,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/495#issuecomment-305494771,"#493
This patch verify that the module name exists before
applying tcpdump command from python SDK.","Codecov Report

Merging #495 into master will increase coverage by <1%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master   #495    +/-   ##
======================================
+ Coverage      30%    31%   +<1%     
======================================
  Files         168    168            
  Lines        8181   8182     +1     
  Branches     1556   1556            
======================================
+ Hits         2489   2507    +18     
+ Misses       5310   5294    -16     
+ Partials      382    381     -1



Impacted Files
Coverage Δ





core/scheduler.h
37% <0%> (-22%)
⬇️


core/bessctl.cc
17% <0%> (-8%)
⬇️


core/traffic_class.cc
75% <0%> (-6%)
⬇️


core/worker.cc
60% <0%> (-4%)
⬇️


core/module.h
70% <0%> (-1%)
⬇️


core/utils/cuckoo_map.h
79% <0%> (+1%)
⬆️


core/utils/copy.h
42% <0%> (+1%)
⬆️


core/packet_avx.h
71% <0%> (+2%)
⬆️


core/packet.h
35% <0%> (+6%)
⬆️


core/module.cc
76% <0%> (+7%)
⬆️


... and 5 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 024c1b9...5bc0a36. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,495,2017-06-01T13:01:50Z,2017-06-02T09:03:54Z,2017-06-02T09:03:54Z,CLOSED,False,3,0,1,https://github.com/GalSagie,Check module exists before applying tcpdump,3,[],https://github.com/NetSys/bess/pull/495,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/495#issuecomment-305643978,"#493
This patch verify that the module name exists before
applying tcpdump command from python SDK.","In my opinion, this patch might be somewhat redundant. #496 will show a correct error message anyway...
localhost:10514 $ tcpdump rewrit out 0 -ne
  Running: tcpdump -r /tmp/tmpP5kVKW -ne | less
*** Error: No module 'rewrit' found
  BESS daemon response - errno=2 (ENOENT: No such file or directory)
       query: ConfigureGateHook
   query_arg: {...}

GIven that no other commands explicitly check if a module (or any other entities) exists in commands.py, I think we can skip this patch...?",True,{}
NetSys/bess,https://github.com/NetSys/bess,495,2017-06-01T13:01:50Z,2017-06-02T09:03:54Z,2017-06-02T09:03:54Z,CLOSED,False,3,0,1,https://github.com/GalSagie,Check module exists before applying tcpdump,3,[],https://github.com/NetSys/bess/pull/495,https://github.com/GalSagie,4,https://github.com/NetSys/bess/pull/495#issuecomment-305693887,"#493
This patch verify that the module name exists before
applying tcpdump command from python SDK.",I agree (even that i usually prefer to protect against such cases in the SDK/API level),True,{}
NetSys/bess,https://github.com/NetSys/bess,496,2017-06-01T13:53:22Z,2017-06-01T22:44:47Z,2017-06-01T22:45:22Z,MERGED,True,2,2,1,https://github.com/GalSagie,Fix segmentation on gate hook configure for invalid module name,1,[],https://github.com/NetSys/bess/pull/496,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/496,"Since there was no return in the code, the method would continue
to the next line and segment as the module doesnt exists.
This change return the error in case the module is not found.
#493","Since there was no return in the code, the method would continue
to the next line and segment as the module doesnt exists.
This change return the error in case the module is not found.
#493",True,{}
NetSys/bess,https://github.com/NetSys/bess,496,2017-06-01T13:53:22Z,2017-06-01T22:44:47Z,2017-06-01T22:45:22Z,MERGED,True,2,2,1,https://github.com/GalSagie,Fix segmentation on gate hook configure for invalid module name,1,[],https://github.com/NetSys/bess/pull/496,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/496#issuecomment-305509920,"Since there was no return in the code, the method would continue
to the next line and segment as the module doesnt exists.
This change return the error in case the module is not found.
#493","Codecov Report

Merging #496 into master will decrease coverage by 8%.
The diff coverage is 0%.


@@          Coverage Diff           @@
##           master   #496    +/-   ##
======================================
- Coverage      30%    23%    -8%     
======================================
  Files         168    168            
  Lines        8181   8164    -17     
  Branches     1556   1553     -3     
======================================
- Hits         2489   1841   -648     
- Misses       5310   6055   +745     
+ Partials      382    268   -114



Impacted Files
Coverage Δ





core/bessctl.cc
0% <0%> (-25%)
⬇️


core/drivers/vport.h
0% <0%> (-100%)
⬇️


core/drivers/vport_zc.h
0% <0%> (-100%)
⬇️


core/bessctl.h
0% <0%> (-100%)
⬇️


core/drivers/pcap.h
0% <0%> (-100%)
⬇️


core/drivers/unix_socket.h
0% <0%> (-100%)
⬇️


core/packet_avx.h
0% <0%> (-69%)
⬇️


core/dpdk.cc
0% <0%> (-67%)
⬇️


core/utils/simd.h
33% <0%> (-67%)
⬇️


core/modules/sink.cc
33% <0%> (-67%)
⬇️


... and 22 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 024c1b9...23606c7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,496,2017-06-01T13:53:22Z,2017-06-01T22:44:47Z,2017-06-01T22:45:22Z,MERGED,True,2,2,1,https://github.com/GalSagie,Fix segmentation on gate hook configure for invalid module name,1,[],https://github.com/NetSys/bess/pull/496,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/496#issuecomment-305641248,"Since there was no return in the code, the method would continue
to the next line and segment as the module doesnt exists.
This change return the error in case the module is not found.
#493","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,497,2017-06-01T21:42:26Z,2017-06-02T23:33:29Z,2017-06-03T02:06:36Z,MERGED,True,44,37,4,https://github.com/justinemarie,Compare output packets based on strings rather than scapy comparator,7,[],https://github.com/NetSys/bess/pull/497,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/497,"Not all packets coming out of the Unix socket will be Ethernet, and (for research and experimental uses) may not even be protocols scapy knows how to parse! Better to compare based on bytestrings to avoid the dependency on scapy knowing what protocol it's looking at.","Not all packets coming out of the Unix socket will be Ethernet, and (for research and experimental uses) may not even be protocols scapy knows how to parse! Better to compare based on bytestrings to avoid the dependency on scapy knowing what protocol it's looking at.",True,{}
NetSys/bess,https://github.com/NetSys/bess,497,2017-06-01T21:42:26Z,2017-06-02T23:33:29Z,2017-06-03T02:06:36Z,MERGED,True,44,37,4,https://github.com/justinemarie,Compare output packets based on strings rather than scapy comparator,7,[],https://github.com/NetSys/bess/pull/497,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/497#issuecomment-305634182,"Not all packets coming out of the Unix socket will be Ethernet, and (for research and experimental uses) may not even be protocols scapy knows how to parse! Better to compare based on bytestrings to avoid the dependency on scapy knowing what protocol it's looking at.","Codecov Report

Merging #497 into master will increase coverage by 32%.
The diff coverage is n/a.


@@           Coverage Diff            @@
##           master    #497     +/-   ##
========================================
+ Coverage      26%     58%    +32%     
========================================
  Files         168     176      +8     
  Lines        8497   10157   +1660     
========================================
+ Hits         2213    5910   +3697     
+ Misses       6284    4247   -2037



Impacted Files
Coverage Δ





core/utils/ether.h
83% <0%> (-17%)
⬇️


core/metadata.cc
85% <0%> (-3%)
⬇️


core/utils/lock_less_queue.h
83% <0%> (-2%)
⬇️


core/debug.cc
57% <0%> (-2%)
⬇️


core/gate.cc
93% <0%> (-2%)
⬇️


core/utils/histogram.h
90% <0%> (ø)
⬇️


core/modules/buffer.cc
4% <0%> (ø)
⬇️


core/utils/codel.h
85% <0%> (ø)
⬇️


core/modules/split.cc
3% <0%> (ø)
⬇️


core/modules/port_out.cc
3% <0%> (ø)
⬇️


... and 125 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f1d0032...6b2e388. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,497,2017-06-01T21:42:26Z,2017-06-02T23:33:29Z,2017-06-03T02:06:36Z,MERGED,True,44,37,4,https://github.com/justinemarie,Compare output packets based on strings rather than scapy comparator,7,[],https://github.com/NetSys/bess/pull/497,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/497#issuecomment-305916529,"Not all packets coming out of the Unix socket will be Ethernet, and (for research and experimental uses) may not even be protocols scapy knows how to parse! Better to compare based on bytestrings to avoid the dependency on scapy knowing what protocol it's looking at.","Ready for a read again, Sangjin.",True,{}
NetSys/bess,https://github.com/NetSys/bess,497,2017-06-01T21:42:26Z,2017-06-02T23:33:29Z,2017-06-03T02:06:36Z,MERGED,True,44,37,4,https://github.com/justinemarie,Compare output packets based on strings rather than scapy comparator,7,[],https://github.com/NetSys/bess/pull/497,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/497#issuecomment-305931801,"Not all packets coming out of the Unix socket will be Ethernet, and (for research and experimental uses) may not even be protocols scapy knows how to parse! Better to compare based on bytestrings to avoid the dependency on scapy knowing what protocol it's looking at.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,497,2017-06-01T21:42:26Z,2017-06-02T23:33:29Z,2017-06-03T02:06:36Z,MERGED,True,44,37,4,https://github.com/justinemarie,Compare output packets based on strings rather than scapy comparator,7,[],https://github.com/NetSys/bess/pull/497,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/497#issuecomment-305943677,"Not all packets coming out of the Unix socket will be Ethernet, and (for research and experimental uses) may not even be protocols scapy knows how to parse! Better to compare based on bytestrings to avoid the dependency on scapy knowing what protocol it's looking at.",That cat has gorgeous eyes!,True,{}
NetSys/bess,https://github.com/NetSys/bess,498,2017-06-01T22:14:07Z,2017-06-01T23:09:21Z,2017-06-01T23:09:51Z,MERGED,True,16,28,1,https://github.com/sangjinhan,Update gRPC from v1.1.2 to v1.3.2,1,[],https://github.com/NetSys/bess/pull/498,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/498,"It was reported that older versions of gRPC are not compiled with newer clang versions...
Also, slightly updated env/packages.yml to avoid some redundant downloads (gRPC already has them in its repository).","It was reported that older versions of gRPC are not compiled with newer clang versions...
Also, slightly updated env/packages.yml to avoid some redundant downloads (gRPC already has them in its repository).",True,{}
NetSys/bess,https://github.com/NetSys/bess,498,2017-06-01T22:14:07Z,2017-06-01T23:09:21Z,2017-06-01T23:09:51Z,MERGED,True,16,28,1,https://github.com/sangjinhan,Update gRPC from v1.1.2 to v1.3.2,1,[],https://github.com/NetSys/bess/pull/498,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/498#issuecomment-305640013,"It was reported that older versions of gRPC are not compiled with newer clang versions...
Also, slightly updated env/packages.yml to avoid some redundant downloads (gRPC already has them in its repository).","Codecov Report

Merging #498 into master will not change coverage.
The diff coverage is n/a.


@@          Coverage Diff          @@
##           master   #498   +/-   ##
=====================================
  Coverage      26%    26%           
=====================================
  Files         168    168           
  Lines        8497   8497           
=====================================
  Hits         2213   2213           
  Misses       6284   6284

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f1d0032...7d1f607. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,498,2017-06-01T22:14:07Z,2017-06-01T23:09:21Z,2017-06-01T23:09:51Z,MERGED,True,16,28,1,https://github.com/sangjinhan,Update gRPC from v1.1.2 to v1.3.2,1,[],https://github.com/NetSys/bess/pull/498,https://github.com/barath,3,https://github.com/NetSys/bess/pull/498#issuecomment-305645371,"It was reported that older versions of gRPC are not compiled with newer clang versions...
Also, slightly updated env/packages.yml to avoid some redundant downloads (gRPC already has them in its repository).",,True,{}
NetSys/bess,https://github.com/NetSys/bess,499,2017-06-03T05:13:23Z,2017-06-06T23:12:39Z,2017-06-08T19:30:34Z,MERGED,True,58,75,12,https://github.com/barath,Modifies task_result to contain block field.,2,[],https://github.com/NetSys/bess/pull/499,https://github.com/barath,1,https://github.com/NetSys/bess/pull/499,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,499,2017-06-03T05:13:23Z,2017-06-06T23:12:39Z,2017-06-08T19:30:34Z,MERGED,True,58,75,12,https://github.com/barath,Modifies task_result to contain block field.,2,[],https://github.com/NetSys/bess/pull/499,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/499#issuecomment-305953103,,"Codecov Report

Merging #499 into master will decrease coverage by 6%.
The diff coverage is 48%.


@@           Coverage Diff            @@
##           master    #499     +/-   ##
========================================
- Coverage      64%     58%     -6%     
========================================
  Files         196     176     -20     
  Lines       12033   10149   -1884     
========================================
- Hits         7728    5909   -1819     
+ Misses       4305    4240     -65



Impacted Files
Coverage Δ





core/module.h
88% <ø> (ø)
⬆️


core/modules/port_inc.cc
5% <0%> (ø)
⬆️


core/modules/queue_inc.cc
5% <0%> (ø)
⬆️


core/scheduler.h
71% <0%> (+1%)
⬆️


core/modules/noop.cc
13% <0%> (ø)
⬆️


core/modules/flowgen.cc
74% <100%> (ø)
⬆️


core/modules/drr.cc
74% <100%> (ø)
⬇️


core/modules/source.cc
76% <100%> (+1%)
⬆️


core/modules/queue.cc
60% <88%> (ø)
⬆️


core/traffic_class.cc
91% <0%> (ø)
⬇️


... and 19 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e9a9b8b...3e1b228. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,499,2017-06-03T05:13:23Z,2017-06-06T23:12:39Z,2017-06-08T19:30:34Z,MERGED,True,58,75,12,https://github.com/barath,Modifies task_result to contain block field.,2,[],https://github.com/NetSys/bess/pull/499,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/499#issuecomment-306643583,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,500,2017-06-05T21:03:38Z,2017-06-07T21:52:28Z,2017-06-07T23:45:52Z,MERGED,True,284,251,54,https://github.com/changlan,Python 2/3 Compatibility,11,[],https://github.com/NetSys/bess/pull/500,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/500,"This should fix #488.

Modified Python code to be 2/3 compatible

Use Python 3 style print() with from __future__ import print_function;
Use list comprehension instead of map and filter;
Use items() instead of iteritems() (Yeah, it would become less efficient in Python 2);
Use io package to read() from files, so that the resulting string is Unicode-encoded;
Use raw_input for Python 2 and input for Python 3;
Disable implicit relative import and use absolute import instead;
Fix the discrepancy of tokenizer  between Python 2/3 (-> is an OP token in Python 3);
Run 2to3 over protoc generated scripts, since those scripts still use implicit relative import;
Use raw bytes for non-Unicode literals (e.g b'\x01').


Add unit test for both Python 2/3.","This should fix #488.

Modified Python code to be 2/3 compatible

Use Python 3 style print() with from __future__ import print_function;
Use list comprehension instead of map and filter;
Use items() instead of iteritems() (Yeah, it would become less efficient in Python 2);
Use io package to read() from files, so that the resulting string is Unicode-encoded;
Use raw_input for Python 2 and input for Python 3;
Disable implicit relative import and use absolute import instead;
Fix the discrepancy of tokenizer  between Python 2/3 (-> is an OP token in Python 3);
Run 2to3 over protoc generated scripts, since those scripts still use implicit relative import;
Use raw bytes for non-Unicode literals (e.g b'\x01').


Add unit test for both Python 2/3.",True,{}
NetSys/bess,https://github.com/NetSys/bess,500,2017-06-05T21:03:38Z,2017-06-07T21:52:28Z,2017-06-07T23:45:52Z,MERGED,True,284,251,54,https://github.com/changlan,Python 2/3 Compatibility,11,[],https://github.com/NetSys/bess/pull/500,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/500#issuecomment-306326071,"This should fix #488.

Modified Python code to be 2/3 compatible

Use Python 3 style print() with from __future__ import print_function;
Use list comprehension instead of map and filter;
Use items() instead of iteritems() (Yeah, it would become less efficient in Python 2);
Use io package to read() from files, so that the resulting string is Unicode-encoded;
Use raw_input for Python 2 and input for Python 3;
Disable implicit relative import and use absolute import instead;
Fix the discrepancy of tokenizer  between Python 2/3 (-> is an OP token in Python 3);
Run 2to3 over protoc generated scripts, since those scripts still use implicit relative import;
Use raw bytes for non-Unicode literals (e.g b'\x01').


Add unit test for both Python 2/3.","Codecov Report

Merging #500 into master will increase coverage by <1%.
The diff coverage is 77%.


@@           Coverage Diff           @@
##           master    #500    +/-   ##
=======================================
+ Coverage      64%     64%   +<1%     
=======================================
  Files         198     198            
  Lines       12071   12079     +8     
=======================================
+ Hits         7766    7772     +6     
- Misses       4305    4307     +2



Impacted Files
Coverage Δ





pybess/protobuf_to_dict.py
56% <ø> (ø)
⬆️


pybess/module_msg.py
100% <100%> (ø)
⬆️


bessctl/test_samples.py
90% <100%> (ø)
⬆️


bessctl/test_sugar.py
97% <100%> (ø)
⬆️


pybess/test_protobuf_to_dict.py
100% <100%> (ø)
⬆️


pybess/test_bess.py
100% <100%> (ø)
⬆️


pybess/bess.py
40% <47%> (ø)
⬆️


bessctl/sugar.py
92% <91%> (-1%)
⬇️


core/utils/checksum_test.cc
99% <0%> (-1%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b75a71a...3b2bd70. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,500,2017-06-05T21:03:38Z,2017-06-07T21:52:28Z,2017-06-07T23:45:52Z,MERGED,True,284,251,54,https://github.com/changlan,Python 2/3 Compatibility,11,[],https://github.com/NetSys/bess/pull/500,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/500#issuecomment-306936122,"This should fix #488.

Modified Python code to be 2/3 compatible

Use Python 3 style print() with from __future__ import print_function;
Use list comprehension instead of map and filter;
Use items() instead of iteritems() (Yeah, it would become less efficient in Python 2);
Use io package to read() from files, so that the resulting string is Unicode-encoded;
Use raw_input for Python 2 and input for Python 3;
Disable implicit relative import and use absolute import instead;
Fix the discrepancy of tokenizer  between Python 2/3 (-> is an OP token in Python 3);
Run 2to3 over protoc generated scripts, since those scripts still use implicit relative import;
Use raw bytes for non-Unicode literals (e.g b'\x01').


Add unit test for both Python 2/3.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,501,2017-06-05T23:24:38Z,2017-06-07T21:52:54Z,2017-06-08T19:30:35Z,MERGED,True,21,0,1,https://github.com/justinemarie,add basic tests for buffer module,2,[],https://github.com/NetSys/bess/pull/501,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/501,This PR adds a crash test and an output test for the buffer module.,This PR adds a crash test and an output test for the buffer module.,True,{}
NetSys/bess,https://github.com/NetSys/bess,501,2017-06-05T23:24:38Z,2017-06-07T21:52:54Z,2017-06-08T19:30:35Z,MERGED,True,21,0,1,https://github.com/justinemarie,add basic tests for buffer module,2,[],https://github.com/NetSys/bess/pull/501,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/501#issuecomment-306342716,This PR adds a crash test and an output test for the buffer module.,"Codecov Report

Merging #501 into master will increase coverage by <1%.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #501    +/-   ##
=======================================
+ Coverage      64%     64%   +<1%     
=======================================
  Files         196     196            
  Lines       12033   12033            
=======================================
+ Hits         7728    7729     +1     
+ Misses       4305    4304     -1



Impacted Files
Coverage Δ





core/utils/checksum_test.cc
100% <0%> (+1%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e9a9b8b...ae3762f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,501,2017-06-05T23:24:38Z,2017-06-07T21:52:54Z,2017-06-08T19:30:35Z,MERGED,True,21,0,1,https://github.com/justinemarie,add basic tests for buffer module,2,[],https://github.com/NetSys/bess/pull/501,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/501#issuecomment-306936254,This PR adds a crash test and an output test for the buffer module.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,501,2017-06-05T23:24:38Z,2017-06-07T21:52:54Z,2017-06-08T19:30:35Z,MERGED,True,21,0,1,https://github.com/justinemarie,add basic tests for buffer module,2,[],https://github.com/NetSys/bess/pull/501,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/501#issuecomment-306967434,This PR adds a crash test and an output test for the buffer module.,"This PR adds about 3minutes for each CI build, due to the socket timeout mechanism... :-/",True,{}
NetSys/bess,https://github.com/NetSys/bess,504,2017-06-06T18:32:47Z,2017-06-09T21:23:25Z,2017-06-09T21:26:43Z,MERGED,True,439,18,14,https://github.com/vivi,Add backpressure queue,5,[],https://github.com/NetSys/bess/pull/504,https://github.com/vivi,1,https://github.com/NetSys/bess/pull/504,Modifies the Queue module to support backpressure.,Modifies the Queue module to support backpressure.,True,{}
NetSys/bess,https://github.com/NetSys/bess,504,2017-06-06T18:32:47Z,2017-06-09T21:23:25Z,2017-06-09T21:26:43Z,MERGED,True,439,18,14,https://github.com/vivi,Add backpressure queue,5,[],https://github.com/NetSys/bess/pull/504,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/504#issuecomment-306601450,Modifies the Queue module to support backpressure.,"Codecov Report

Merging #504 into master will increase coverage by <1%.
The diff coverage is 87%.


@@           Coverage Diff           @@
##           master    #504    +/-   ##
=======================================
+ Coverage      65%     65%   +<1%     
=======================================
  Files         198     198            
  Lines       12062   12248   +186     
=======================================
+ Hits         7844    8022   +178     
- Misses       4218    4226     +8



Impacted Files
Coverage Δ





core/modules/noop.h
0% <0%> (ø)
⬆️


core/modules/queue.h
100% <100%> (ø)
⬆️


core/modules/flowgen.h
100% <100%> (ø)
⬆️


core/modules/port_inc.h
100% <100%> (ø)
⬆️


core/modules/source.h
100% <100%> (ø)
⬆️


core/modules/source.cc
76% <100%> (+1%)
⬆️


core/modules/port_inc.cc
72% <50%> (-1%)
⬇️


core/modules/flowgen.cc
74% <50%> (ø)
⬇️


core/modules/queue.cc
62% <76%> (+3%)
⬆️


core/modules/drr.cc
82% <80%> (+8%)
⬆️


... and 7 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 08b9a3a...41dbaad. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,504,2017-06-06T18:32:47Z,2017-06-09T21:23:25Z,2017-06-09T21:26:43Z,MERGED,True,439,18,14,https://github.com/vivi,Add backpressure queue,5,[],https://github.com/NetSys/bess/pull/504,https://github.com/vivi,3,https://github.com/NetSys/bess/pull/504#issuecomment-306611042,Modifies the Queue module to support backpressure.,@barath changes made!,True,{}
NetSys/bess,https://github.com/NetSys/bess,504,2017-06-06T18:32:47Z,2017-06-09T21:23:25Z,2017-06-09T21:26:43Z,MERGED,True,439,18,14,https://github.com/vivi,Add backpressure queue,5,[],https://github.com/NetSys/bess/pull/504,https://github.com/vivi,4,https://github.com/NetSys/bess/pull/504#issuecomment-306901380,Modifies the Queue module to support backpressure.,don't merge yet -- forgot to account for deleting/disconnecting individual modules,True,{}
NetSys/bess,https://github.com/NetSys/bess,504,2017-06-06T18:32:47Z,2017-06-09T21:23:25Z,2017-06-09T21:26:43Z,MERGED,True,439,18,14,https://github.com/vivi,Add backpressure queue,5,[],https://github.com/NetSys/bess/pull/504,https://github.com/barath,5,https://github.com/NetSys/bess/pull/504#issuecomment-307283697,Modifies the Queue module to support backpressure.,LGTM.,True,{}
NetSys/bess,https://github.com/NetSys/bess,504,2017-06-06T18:32:47Z,2017-06-09T21:23:25Z,2017-06-09T21:26:43Z,MERGED,True,439,18,14,https://github.com/vivi,Add backpressure queue,5,[],https://github.com/NetSys/bess/pull/504,https://github.com/barath,6,https://github.com/NetSys/bess/pull/504#issuecomment-307283743,Modifies the Queue module to support backpressure.,"@sangjinhan, did you want to take a quick look, or can we remove the notready label and merge?",True,{}
NetSys/bess,https://github.com/NetSys/bess,504,2017-06-06T18:32:47Z,2017-06-09T21:23:25Z,2017-06-09T21:26:43Z,MERGED,True,439,18,14,https://github.com/vivi,Add backpressure queue,5,[],https://github.com/NetSys/bess/pull/504,https://github.com/barath,7,https://github.com/NetSys/bess/pull/504#issuecomment-307472960,Modifies the Queue module to support backpressure.,LGTM.  Will wait for Travis.,True,{}
NetSys/bess,https://github.com/NetSys/bess,504,2017-06-06T18:32:47Z,2017-06-09T21:23:25Z,2017-06-09T21:26:43Z,MERGED,True,439,18,14,https://github.com/vivi,Add backpressure queue,5,[],https://github.com/NetSys/bess/pull/504,https://github.com/barath,8,https://github.com/NetSys/bess/pull/504#issuecomment-307503895,Modifies the Queue module to support backpressure.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,505,2017-06-07T19:16:57Z,2017-06-07T20:39:56Z,2017-06-07T20:40:29Z,MERGED,True,127,148,22,https://github.com/vivi,Style fixes,1,[],https://github.com/NetSys/bess/pull/505,https://github.com/vivi,1,https://github.com/NetSys/bess/pull/505,"Ran clang-format on all module and core files using our
.clang-format file.","Ran clang-format on all module and core files using our
.clang-format file.",True,{}
NetSys/bess,https://github.com/NetSys/bess,505,2017-06-07T19:16:57Z,2017-06-07T20:39:56Z,2017-06-07T20:40:29Z,MERGED,True,127,148,22,https://github.com/vivi,Style fixes,1,[],https://github.com/NetSys/bess/pull/505,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/505#issuecomment-306898326,"Ran clang-format on all module and core files using our
.clang-format file.",Looks good -- need to wait for Travis to merge.,True,{}
NetSys/bess,https://github.com/NetSys/bess,505,2017-06-07T19:16:57Z,2017-06-07T20:39:56Z,2017-06-07T20:40:29Z,MERGED,True,127,148,22,https://github.com/vivi,Style fixes,1,[],https://github.com/NetSys/bess/pull/505,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/505#issuecomment-306903587,"Ran clang-format on all module and core files using our
.clang-format file.","Codecov Report

Merging #505 into master will decrease coverage by <1%.
The diff coverage is 79%.


@@           Coverage Diff           @@
##           master    #505    +/-   ##
=======================================
- Coverage      64%     64%   -<1%     
=======================================
  Files         198     198            
  Lines       12071   12054    -17     
=======================================
- Hits         7766    7752    -14     
+ Misses       4305    4302     -3



Impacted Files
Coverage Δ





core/modules/nat.cc
70% <ø> (ø)
⬆️


core/opts.cc
82% <ø> (ø)
⬆️


core/module.h
88% <ø> (ø)
⬆️


core/bessctl.h
100% <ø> (ø)
⬆️


core/modules/arp_responder.h
100% <ø> (ø)
⬆️


core/modules/noop.cc
13% <0%> (ø)
⬆️


core/modules/queue_inc.cc
5% <0%> (ø)
⬆️


core/dpdk.cc
78% <0%> (ø)
⬆️


core/modules/port_inc.cc
5% <0%> (ø)
⬆️


core/traffic_class.cc
91% <100%> (ø)
⬇️


... and 10 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b75a71a...a29be9e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,505,2017-06-07T19:16:57Z,2017-06-07T20:39:56Z,2017-06-07T20:40:29Z,MERGED,True,127,148,22,https://github.com/vivi,Style fixes,1,[],https://github.com/NetSys/bess/pull/505,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/505#issuecomment-306918082,"Ran clang-format on all module and core files using our
.clang-format file.",Thank you!,True,{'LAUGH': ['https://github.com/vivi']}
NetSys/bess,https://github.com/NetSys/bess,506,2017-06-08T00:03:48Z,2017-06-08T01:56:12Z,2017-06-08T19:30:32Z,MERGED,True,11,11,2,https://github.com/changlan,Fix raw_input and input confusion,1,[],https://github.com/NetSys/bess/pull/506,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/506,Fix the bessctl crash in Python 2 introduced by the previous PR.,Fix the bessctl crash in Python 2 introduced by the previous PR.,True,{}
NetSys/bess,https://github.com/NetSys/bess,506,2017-06-08T00:03:48Z,2017-06-08T01:56:12Z,2017-06-08T19:30:32Z,MERGED,True,11,11,2,https://github.com/changlan,Fix raw_input and input confusion,1,[],https://github.com/NetSys/bess/pull/506,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/506#issuecomment-306963532,Fix the bessctl crash in Python 2 introduced by the previous PR.,"Codecov Report

Merging #506 into master will decrease coverage by <1%.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #506    +/-   ##
=======================================
- Coverage      65%     64%   -<1%     
=======================================
  Files         198     198            
  Lines       12062   12062            
=======================================
- Hits         7805    7758    -47     
- Misses       4257    4304    +47



Impacted Files
Coverage Δ





core/modules/port_inc.h
0% <0%> (-100%)
⬇️


core/modules/port_inc.cc
5% <0%> (-68%)
⬇️


core/traffic_class.cc
91% <0%> (ø)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 34ce577...62b1298. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,506,2017-06-08T00:03:48Z,2017-06-08T01:56:12Z,2017-06-08T19:30:32Z,MERGED,True,11,11,2,https://github.com/changlan,Fix raw_input and input confusion,1,[],https://github.com/NetSys/bess/pull/506,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/506#issuecomment-306975839,Fix the bessctl crash in Python 2 introduced by the previous PR.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,507,2017-06-08T11:31:49Z,2017-06-12T18:16:07Z,2017-06-14T22:56:00Z,MERGED,True,203,182,9,https://github.com/sangjinhan,Update DPDK version to 17.05,8,[],https://github.com/NetSys/bess/pull/507,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/507,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,507,2017-06-08T11:31:49Z,2017-06-12T18:16:07Z,2017-06-14T22:56:00Z,MERGED,True,203,182,9,https://github.com/sangjinhan,Update DPDK version to 17.05,8,[],https://github.com/NetSys/bess/pull/507,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/507#issuecomment-307084050,,"Codecov Report

Merging #507 into master will increase coverage by 0.26%.
The diff coverage is 91.11%.


@@            Coverage Diff             @@
##           master     #507      +/-   ##
==========================================
+ Coverage   65.03%   65.29%   +0.26%     
==========================================
  Files         198      198              
  Lines       12062    12079      +17     
==========================================
+ Hits         7844     7887      +43     
+ Misses       4218     4192      -26



Impacted Files
Coverage Δ





core/drivers/pmd.cc
4.09% <0%> (ø)
⬆️


core/packet_avx.h
93.93% <100%> (+3.93%)
⬆️


core/packet.h
83.95% <100%> (+1.05%)
⬆️


core/packet.cc
34.64% <50%> (-2.95%)
⬇️


core/drivers/vport_zc_test.cc
29.82% <0%> (-1.09%)
⬇️


core/traffic_class.cc
91.28% <0%> (+0.34%)
⬆️


core/modules/drr.cc
81.73% <0%> (+7.69%)
⬆️


core/utils/copy.h
81.37% <0%> (+9.8%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 08b9a3a...c3c3fd2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,507,2017-06-08T11:31:49Z,2017-06-12T18:16:07Z,2017-06-14T22:56:00Z,MERGED,True,203,182,9,https://github.com/sangjinhan,Update DPDK version to 17.05,8,[],https://github.com/NetSys/bess/pull/507,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/507#issuecomment-307874211,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,508,2017-06-08T23:08:08Z,2017-06-13T18:14:18Z,2017-06-14T22:55:57Z,MERGED,True,150,89,4,https://github.com/justinemarie,Add testing and 32-bit support for BPF module.,3,[],https://github.com/NetSys/bess/pull/508,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/508,Basic testing for the BPF module.,Basic testing for the BPF module.,True,{}
NetSys/bess,https://github.com/NetSys/bess,508,2017-06-08T23:08:08Z,2017-06-13T18:14:18Z,2017-06-14T22:55:57Z,MERGED,True,150,89,4,https://github.com/justinemarie,Add testing and 32-bit support for BPF module.,3,[],https://github.com/NetSys/bess/pull/508,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/508#issuecomment-307969833,Basic testing for the BPF module.,"Codecov Report

Merging #508 into master will decrease coverage by 0.05%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #508      +/-   ##
==========================================
- Coverage   65.42%   65.36%   -0.06%     
==========================================
  Files         198      198              
  Lines       12257    12246      -11     
==========================================
- Hits         8019     8005      -14     
- Misses       4238     4241       +3



Impacted Files
Coverage Δ





core/modules/bpf.h
0% <0%> (ø)
⬆️


core/modules/bpf.cc
0.72% <0%> (+0.02%)
⬆️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/utils/checksum_test.cc
99.4% <0%> (-0.6%)
⬇️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/modules/queue.cc
61.81% <0%> (+0.9%)
⬆️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update aaf0d91...813230c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,508,2017-06-08T23:08:08Z,2017-06-13T18:14:18Z,2017-06-14T22:55:57Z,MERGED,True,150,89,4,https://github.com/justinemarie,Add testing and 32-bit support for BPF module.,3,[],https://github.com/NetSys/bess/pull/508,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/508#issuecomment-307971160,Basic testing for the BPF module.,This PR is ready for review. @sangjinhan,True,{}
NetSys/bess,https://github.com/NetSys/bess,508,2017-06-08T23:08:08Z,2017-06-13T18:14:18Z,2017-06-14T22:55:57Z,MERGED,True,150,89,4,https://github.com/justinemarie,Add testing and 32-bit support for BPF module.,3,[],https://github.com/NetSys/bess/pull/508,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/508#issuecomment-308020070,Basic testing for the BPF module.,LGTM. Did some code cleanup and pushed changes to the branch. Feel free to merge unless CI complains...,True,{}
NetSys/bess,https://github.com/NetSys/bess,508,2017-06-08T23:08:08Z,2017-06-13T18:14:18Z,2017-06-14T22:55:57Z,MERGED,True,150,89,4,https://github.com/justinemarie,Add testing and 32-bit support for BPF module.,3,[],https://github.com/NetSys/bess/pull/508,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/508#issuecomment-308201326,Basic testing for the BPF module.,"Chang, can you commit since both Sangjin and I made edits? (Sangjin went through and C++-ified BPF and made it more readable after I added tests tot it).",True,{}
NetSys/bess,https://github.com/NetSys/bess,508,2017-06-08T23:08:08Z,2017-06-13T18:14:18Z,2017-06-14T22:55:57Z,MERGED,True,150,89,4,https://github.com/justinemarie,Add testing and 32-bit support for BPF module.,3,[],https://github.com/NetSys/bess/pull/508,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/508#issuecomment-308202851,Basic testing for the BPF module.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,509,2017-06-08T23:32:55Z,2017-06-13T00:17:45Z,2017-06-14T22:58:07Z,MERGED,True,17,0,1,https://github.com/justinemarie,"Yes, even Bypass gets a test.",1,[],https://github.com/NetSys/bess/pull/509,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/509,Codecov codecov!,Codecov codecov!,True,{}
NetSys/bess,https://github.com/NetSys/bess,509,2017-06-08T23:32:55Z,2017-06-13T00:17:45Z,2017-06-14T22:58:07Z,MERGED,True,17,0,1,https://github.com/justinemarie,"Yes, even Bypass gets a test.",1,[],https://github.com/NetSys/bess/pull/509,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/509#issuecomment-307259795,Codecov codecov!,"Codecov Report

Merging #509 into master will decrease coverage by 1%.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master    #509   +/-   ##
======================================
- Coverage      65%     64%   -1%     
======================================
  Files         198     198           
  Lines       12062   12062           
======================================
- Hits         7844    7759   -85     
- Misses       4218    4303   +85



Impacted Files
Coverage Δ





core/modules/buffer.h
0% <0%> (-100%)
⬇️


core/modules/port_inc.h
0% <0%> (-100%)
⬇️


core/modules/buffer.cc
4% <0%> (-96%)
⬇️


core/modules/port_inc.cc
5% <0%> (-68%)
⬇️


core/modules/nat.cc
70% <0%> (-11%)
⬇️


core/pktbatch.h
83% <0%> (-8%)
⬇️


core/traffic_class.cc
91% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 08b9a3a...c1d416e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,509,2017-06-08T23:32:55Z,2017-06-13T00:17:45Z,2017-06-14T22:58:07Z,MERGED,True,17,0,1,https://github.com/justinemarie,"Yes, even Bypass gets a test.",1,[],https://github.com/NetSys/bess/pull/509,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/509#issuecomment-307970619,Codecov codecov!,Merged.  Thanks!!,True,{}
NetSys/bess,https://github.com/NetSys/bess,510,2017-06-09T20:07:23Z,2017-06-12T17:17:04Z,2017-06-12T17:17:51Z,MERGED,True,20,17,2,https://github.com/ddiproietto,Optimize RunModuleSplit() and reduce TLS usage,1,[],https://github.com/NetSys/bess/pull/510,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/510,"My previous attempt at this caused random crashes inside gRPC on travis.
I haven't been able to understand why, or to reproduce the crash locally, but since then we changed some gRPC code.
I've run this on travis 10 times and it hasn't crashed.","My previous attempt at this caused random crashes inside gRPC on travis.
I haven't been able to understand why, or to reproduce the crash locally, but since then we changed some gRPC code.
I've run this on travis 10 times and it hasn't crashed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,510,2017-06-09T20:07:23Z,2017-06-12T17:17:04Z,2017-06-12T17:17:51Z,MERGED,True,20,17,2,https://github.com/ddiproietto,Optimize RunModuleSplit() and reduce TLS usage,1,[],https://github.com/NetSys/bess/pull/510,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/510#issuecomment-307493772,"My previous attempt at this caused random crashes inside gRPC on travis.
I haven't been able to understand why, or to reproduce the crash locally, but since then we changed some gRPC code.
I've run this on travis 10 times and it hasn't crashed.","Codecov Report

Merging #510 into master will decrease coverage by <1%.
The diff coverage is 100%.


@@           Coverage Diff           @@
##           master    #510    +/-   ##
=======================================
- Coverage      65%     65%   -<1%     
=======================================
  Files         198     198            
  Lines       12062   12059     -3     
=======================================
- Hits         7844    7785    -59     
- Misses       4218    4274    +56



Impacted Files
Coverage Δ





core/worker.h
96% <100%> (ø)
⬆️


core/module.cc
88% <100%> (ø)
⬆️


core/modules/buffer.h
0% <0%> (-100%)
⬇️


core/modules/buffer.cc
4% <0%> (-96%)
⬇️


core/utils/copy.h
55% <0%> (-17%)
⬇️


core/pktbatch.h
75% <0%> (-17%)
⬇️


core/modules/nat.cc
70% <0%> (-11%)
⬇️


core/utils/checksum_test.cc
99% <0%> (-1%)
⬇️


core/traffic_class.cc
91% <0%> (ø)
⬆️


core/drivers/unix_socket.cc
86% <0%> (+1%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 08b9a3a...d98495b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,510,2017-06-09T20:07:23Z,2017-06-12T17:17:04Z,2017-06-12T17:17:51Z,MERGED,True,20,17,2,https://github.com/ddiproietto,Optimize RunModuleSplit() and reduce TLS usage,1,[],https://github.com/NetSys/bess/pull/510,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/510#issuecomment-307856198,"My previous attempt at this caused random crashes inside gRPC on travis.
I haven't been able to understand why, or to reproduce the crash locally, but since then we changed some gRPC code.
I've run this on travis 10 times and it hasn't crashed.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,511,2017-06-09T20:15:03Z,2017-06-12T17:20:48Z,2017-06-14T22:58:05Z,MERGED,True,3,1,1,https://github.com/justinemarie,Fix bug where crash tests weren't being run.,1,[],https://github.com/NetSys/bess/pull/511,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/511,Okay this is the actual commit.,Okay this is the actual commit.,True,{}
NetSys/bess,https://github.com/NetSys/bess,511,2017-06-09T20:15:03Z,2017-06-12T17:20:48Z,2017-06-14T22:58:05Z,MERGED,True,3,1,1,https://github.com/justinemarie,Fix bug where crash tests weren't being run.,1,[],https://github.com/NetSys/bess/pull/511,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/511#issuecomment-307500906,Okay this is the actual commit.,"Codecov Report

Merging #511 into master will decrease coverage by <1%.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #511    +/-   ##
=======================================
- Coverage      65%     64%   -<1%     
=======================================
  Files         198     198            
  Lines       12062   12062            
=======================================
- Hits         7804    7760    -44     
- Misses       4258    4302    +44



Impacted Files
Coverage Δ





core/modules/port_inc.h
0% <0%> (-100%)
⬇️


core/modules/port_inc.cc
5% <0%> (-68%)
⬇️


core/traffic_class.cc
91% <0%> (ø)
⬆️


core/drivers/unix_socket.cc
86% <0%> (+1%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 39d1229...a78a0e9. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,511,2017-06-09T20:15:03Z,2017-06-12T17:20:48Z,2017-06-14T22:58:05Z,MERGED,True,3,1,1,https://github.com/justinemarie,Fix bug where crash tests weren't being run.,1,[],https://github.com/NetSys/bess/pull/511,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/511#issuecomment-307857124,Okay this is the actual commit.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,513,2017-06-13T00:48:55Z,2017-06-13T04:10:44Z,2017-06-13T04:11:18Z,MERGED,True,2,2,1,https://github.com/vivi,Fix attr_match.bess to use correct arg,1,[],https://github.com/NetSys/bess/pull/513,https://github.com/vivi,1,https://github.com/NetSys/bess/pull/513,side note: it's a bit confusing for ExactMatch to use attribute and Metadata to use name,side note: it's a bit confusing for ExactMatch to use attribute and Metadata to use name,True,{}
NetSys/bess,https://github.com/NetSys/bess,513,2017-06-13T00:48:55Z,2017-06-13T04:10:44Z,2017-06-13T04:11:18Z,MERGED,True,2,2,1,https://github.com/vivi,Fix attr_match.bess to use correct arg,1,[],https://github.com/NetSys/bess/pull/513,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/513#issuecomment-307979495,side note: it's a bit confusing for ExactMatch to use attribute and Metadata to use name,"Codecov Report

Merging #513 into master will decrease coverage by 0.3%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #513      +/-   ##
==========================================
- Coverage   65.47%   65.16%   -0.31%     
==========================================
  Files         198      198              
  Lines       12262    12262              
==========================================
- Hits         8028     7991      -37     
- Misses       4234     4271      +37



Impacted Files
Coverage Δ





core/modules/nat.cc
70.22% <0%> (-11.46%)
⬇️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/kmod/llring.h
60.95% <0%> (-2.74%)
⬇️


core/modules/queue.cc
60.9% <0%> (-0.91%)
⬇️


core/utils/checksum_test.cc
99.4% <0%> (-0.6%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 489bb00...f79fc25. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,513,2017-06-13T00:48:55Z,2017-06-13T04:10:44Z,2017-06-13T04:11:18Z,MERGED,True,2,2,1,https://github.com/vivi,Fix attr_match.bess to use correct arg,1,[],https://github.com/NetSys/bess/pull/513,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/513#issuecomment-308001584,side note: it's a bit confusing for ExactMatch to use attribute and Metadata to use name,,True,{}
NetSys/bess,https://github.com/NetSys/bess,514,2017-06-13T04:29:53Z,2017-06-13T05:56:57Z,2017-06-14T22:55:58Z,MERGED,True,7,12,3,https://github.com/sangjinhan,Fix metadata endianness,3,[],https://github.com/NetSys/bess/pull/514,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/514,"While all metadata attributes are supposed to be stored in big endian, SetMetadata and WildcardMatch modules were incorrectly assuming values are stored in host order.
(module tests will be added for a new test framework)","While all metadata attributes are supposed to be stored in big endian, SetMetadata and WildcardMatch modules were incorrectly assuming values are stored in host order.
(module tests will be added for a new test framework)",True,{}
NetSys/bess,https://github.com/NetSys/bess,514,2017-06-13T04:29:53Z,2017-06-13T05:56:57Z,2017-06-14T22:55:58Z,MERGED,True,7,12,3,https://github.com/sangjinhan,Fix metadata endianness,3,[],https://github.com/NetSys/bess/pull/514,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/514#issuecomment-308007797,"While all metadata attributes are supposed to be stored in big endian, SetMetadata and WildcardMatch modules were incorrectly assuming values are stored in host order.
(module tests will be added for a new test framework)","Codecov Report

Merging #514 into master will increase coverage by 0.1%.
The diff coverage is 60%.


@@            Coverage Diff            @@
##           master     #514     +/-   ##
=========================================
+ Coverage   65.33%   65.44%   +0.1%     
=========================================
  Files         198      198             
  Lines       12261    12258      -3     
=========================================
+ Hits         8011     8022     +11     
+ Misses       4250     4236     -14



Impacted Files
Coverage Δ





core/modules/set_metadata.cc
65.27% <100%> (-0.48%)
⬇️


core/modules/wildcard_match.cc
71.8% <50%> (-0.45%)
⬇️


core/utils/endian.cc
37.5% <0%> (-12.5%)
⬇️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/modules/queue.cc
61.81% <0%> (+0.9%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4f9fa25...c73104d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,514,2017-06-13T04:29:53Z,2017-06-13T05:56:57Z,2017-06-14T22:55:58Z,MERGED,True,7,12,3,https://github.com/sangjinhan,Fix metadata endianness,3,[],https://github.com/NetSys/bess/pull/514,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/514#issuecomment-308014730,"While all metadata attributes are supposed to be stored in big endian, SetMetadata and WildcardMatch modules were incorrectly assuming values are stored in host order.
(module tests will be added for a new test framework)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,515,2017-06-13T06:01:59Z,2017-06-13T17:02:14Z,2017-06-13T17:39:17Z,CLOSED,False,9,0,1,https://github.com/changlan,Release binaries from CI,1,['notready'],https://github.com/NetSys/bess/pull/515,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/515,(Opening this PR just to test Travis),(Opening this PR just to test Travis),True,{}
NetSys/bess,https://github.com/NetSys/bess,515,2017-06-13T06:01:59Z,2017-06-13T17:02:14Z,2017-06-13T17:39:17Z,CLOSED,False,9,0,1,https://github.com/changlan,Release binaries from CI,1,['notready'],https://github.com/NetSys/bess/pull/515,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/515#issuecomment-308019795,(Opening this PR just to test Travis),You can force trigger Travis build by naming a branch travis_*,True,{}
NetSys/bess,https://github.com/NetSys/bess,515,2017-06-13T06:01:59Z,2017-06-13T17:02:14Z,2017-06-13T17:39:17Z,CLOSED,False,9,0,1,https://github.com/changlan,Release binaries from CI,1,['notready'],https://github.com/NetSys/bess/pull/515,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/515#issuecomment-308023811,(Opening this PR just to test Travis),"Codecov Report

Merging #515 into master will increase coverage by 0.07%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #515      +/-   ##
==========================================
+ Coverage   65.42%   65.49%   +0.07%     
==========================================
  Files         198      198              
  Lines       12257    12324      +67     
==========================================
+ Hits         8019     8072      +53     
- Misses       4238     4252      +14



Impacted Files
Coverage Δ





core/modules/wildcard_match.cc
71.67% <0%> (-0.14%)
⬇️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/modules/queue.cc
61.81% <0%> (+0.9%)
⬆️


core/modules/set_metadata.cc
66.66% <0%> (+1.38%)
⬆️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️


core/utils/endian.cc
50% <0%> (+12.5%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update aaf0d91...00c4d56. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/517,Still going...,Still going...,True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/517#issuecomment-308196967,Still going...,Am now using a random number generator to assign code reviews.,True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/517#issuecomment-308245516,Still going...,"fromhex doesn't work in python3; bytearray.from produces a bytearray not
bytes.
…
On Tue, Jun 13, 2017 at 1:53 PM, Sangjin Han ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In bessctl/conf/testing/module_tests/etherencap.py
 <#517 (comment)>:

 > +    ip = scapy.IP(src=""1.2.3.4"", dst=""2.3.4.5"", ttl=98)
 +    udp = scapy.UDP(sport=10001, dport=10002)
 +    payload = 'helloworld'
 +
 +    test_packet_in = ip/udp/payload
 +    test_packet_out = eth/ip/udp/payload
 +
 +    sockname = ""metadata_fixedvalues"" + SCRIPT_STARTTIME
 +    socket_port, mysocket = gen_socket_and_port(sockname)
 +
 +    indriver = PortInc(port=sockname)
 +    outdriver = PortOut(port=sockname)
 +
 +    encap2 = EtherEncap()
 +    metadata = SetMetadata(attrs=[{""name"": ""ether_src"", ""size"": 6, ""value_bin"": binascii.unhexlify(""deadbeef1234"")},
 +        {""name"": ""ether_dst"", ""size"": 6, ""value_bin"": binascii.unhexlify(""1234deadbeef"")},

 fromhex

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#517 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FuONTtrV6wy_ZC3BhwFG12th3aIpks5sDva7gaJpZM4N411d>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/517#issuecomment-308245983,Still going...,"bytearray.fromhex() should work both in 2 and 3. What I wonder is whether protobuf accept not only str and bytes, but also bytearray...",True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/517#issuecomment-308246704,Still going...,"Codecov Report

Merging #517 into master will decrease coverage by 0.4%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #517      +/-   ##
==========================================
- Coverage   64.97%   64.57%   -0.41%     
==========================================
  Files         198      198              
  Lines       12246    12246              
==========================================
- Hits         7957     7908      -49     
- Misses       4289     4338      +49



Impacted Files
Coverage Δ





core/modules/port_inc.h
0% <0%> (-100%)
⬇️


core/modules/port_inc.cc
4.47% <0%> (-67.17%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4402b0d...993c0d0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/517#issuecomment-308247766,Still going...,"protobuf won't take bytearray, just bytes -- but could do some sort of
bytearray -> bytes
…
On Tue, Jun 13, 2017 at 1:56 PM, Sangjin Han ***@***.***> wrote:
 bytearray.fromhex() should work both in 2 and 3. What I wonder is whether
 protobuf accept not only str and bytes, but also bytearray...

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#517 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6Ft8pWn_LwT-TVTApP73FCJqwnCUdks5sDvdhgaJpZM4N411d>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/517#issuecomment-308250709,Still going...,"Okay, should be ready post-Travis.",True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/justinemarie,8,https://github.com/NetSys/bess/pull/517#issuecomment-308851887,Still going...,bump,True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/ddiproietto,9,https://github.com/NetSys/bess/pull/517#issuecomment-308870724,Still going...,LGTM thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,517,2017-06-13T17:52:06Z,2017-06-15T21:27:51Z,2017-06-15T21:40:23Z,MERGED,True,54,0,1,https://github.com/justinemarie,Add a test for EtherEncap module.,5,[],https://github.com/NetSys/bess/pull/517,https://github.com/ddiproietto,10,https://github.com/NetSys/bess/pull/517#issuecomment-308870821,Still going...,,True,{}
NetSys/bess,https://github.com/NetSys/bess,518,2017-06-13T19:17:37Z,2017-06-15T23:31:18Z,2017-06-16T21:21:52Z,MERGED,True,126,9,4,https://github.com/justinemarie,Add test for exactmatch,6,[],https://github.com/NetSys/bess/pull/518,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/518,Panda wins the lottery.,Panda wins the lottery.,True,{}
NetSys/bess,https://github.com/NetSys/bess,518,2017-06-13T19:17:37Z,2017-06-15T23:31:18Z,2017-06-16T21:21:52Z,MERGED,True,126,9,4,https://github.com/justinemarie,Add test for exactmatch,6,[],https://github.com/NetSys/bess/pull/518,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/518#issuecomment-308244672,Panda wins the lottery.,"The autopep indentation was harder to follow -- it had everything over so
far, I manually pulled it in to the left.
…
On Tue, Jun 13, 2017 at 1:40 PM, Chang Lan ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In bessctl/conf/testing/module_tests/exact_match.py
 <#518 (comment)>:

 > +
 +test_packet1 = gen_packet(scapy.TCP, '65.43.21.00', '12.34.56.78')  # match 1
 +test_packet2 = gen_packet(scapy.TCP, '00.12.34.56', '12.34.56.78')  # match 2
 +test_packet3 = gen_packet(scapy.TCP, '00.12.33.56',
 +                          '12.34.56.78')  # match nothing
 +
 +OUTPUT_TEST_INPUTS.append([em1, 1, 4,
 +                           [{'input_port': 0,
 +                             'input_packet': test_packet1,
 +                             'output_port': 1,
 +                             'output_packet': test_packet1},
 +                            {'input_port': 0,
 +                             'input_packet': test_packet2,
 +                             'output_port': 2,
 +                             'output_packet': test_packet2},
 +                               {'input_port': 0,

 Indentation here is strange. Was autopep8 not working..?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#518 (review)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6Ft2FTAgmj3RlB32TEwtc2EOHKmPaks5sDvPNgaJpZM4N485s>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,518,2017-06-13T19:17:37Z,2017-06-15T23:31:18Z,2017-06-16T21:21:52Z,MERGED,True,126,9,4,https://github.com/justinemarie,Add test for exactmatch,6,[],https://github.com/NetSys/bess/pull/518,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/518#issuecomment-308244797,Panda wins the lottery.,"(I can go with the normal autopep output if that's what we prefer)
…
On Tue, Jun 13, 2017 at 1:50 PM, Justine Sherry ***@***.***> wrote:
 The autopep indentation was harder to follow -- it had everything over so
 far, I manually pulled it in to the left.

 On Tue, Jun 13, 2017 at 1:40 PM, Chang Lan ***@***.***>
 wrote:

> ***@***.**** commented on this pull request.
> ------------------------------
>
> In bessctl/conf/testing/module_tests/exact_match.py
> <#518 (comment)>:
>
> > +
> +test_packet1 = gen_packet(scapy.TCP, '65.43.21.00', '12.34.56.78')  # match 1
> +test_packet2 = gen_packet(scapy.TCP, '00.12.34.56', '12.34.56.78')  # match 2
> +test_packet3 = gen_packet(scapy.TCP, '00.12.33.56',
> +                          '12.34.56.78')  # match nothing
> +
> +OUTPUT_TEST_INPUTS.append([em1, 1, 4,
> +                           [{'input_port': 0,
> +                             'input_packet': test_packet1,
> +                             'output_port': 1,
> +                             'output_packet': test_packet1},
> +                            {'input_port': 0,
> +                             'input_packet': test_packet2,
> +                             'output_port': 2,
> +                             'output_packet': test_packet2},
> +                               {'input_port': 0,
>
> Indentation here is strange. Was autopep8 not working..?
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <#518 (review)>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AAE6Ft2FTAgmj3RlB32TEwtc2EOHKmPaks5sDvPNgaJpZM4N485s>
> .
>",True,{}
NetSys/bess,https://github.com/NetSys/bess,518,2017-06-13T19:17:37Z,2017-06-15T23:31:18Z,2017-06-16T21:21:52Z,MERGED,True,126,9,4,https://github.com/justinemarie,Add test for exactmatch,6,[],https://github.com/NetSys/bess/pull/518,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/518#issuecomment-308245692,Panda wins the lottery.,"Will do!
…
On Tue, Jun 13, 2017 at 1:35 PM, Sangjin Han ***@***.***> wrote:
 ***@***.**** commented on this pull request.
 ------------------------------

 In bessctl/conf/testing/module_tests/exact_match.py
 <#518 (comment)>:

 > @@ -0,0 +1,45 @@
 +# Crash test -- generate a bunch of rules and stuff packets through
 +em0 = ExactMatch(fields=[{'offset': 23, 'size': 1},  # random fields, I have no idea what these are
 +                         {'offset': 2, 'size': 2},
 +                         {'offset': 29, 'size': 1}])
 +
 +em0.add(fields=[chr(255), chr(0) + chr(12), chr(55)], gate=0)

 Not a big deal, but [b'\xff', b'\x00\x0c\x37'] would be more
 representative. After all, bytes should be preferred than str.
 ------------------------------

 In bessctl/conf/testing/module_tests/exact_match.py
 <#518 (comment)>:

 > +em0 = ExactMatch(fields=[{'offset': 23, 'size': 1},  # random fields, I have no idea what these are
 +                         {'offset': 2, 'size': 2},
 +                         {'offset': 29, 'size': 1}])
 +
 +em0.add(fields=[chr(255), chr(0) + chr(12), chr(55)], gate=0)
 +em0.add(fields=[chr(255), chr(12) + chr(34), chr(55)], gate=1)
 +em0.add(fields=[chr(255), chr(12) + chr(34), chr(255)], gate=2)
 +em0.add(fields=[chr(19), chr(12) + chr(34), chr(255)], gate=3)
 +em0.add(fields=[chr(19), chr(66) + chr(0), chr(2)], gate=4)
 +em0.add(fields=[chr(123), chr(4) + chr(0), chr(2)], gate=5)
 +
 +CRASH_TEST_INPUTS.append([em0, 1, 6])
 +
 +
 +#Output test -- just make sure packets go out right ports
 +em1 = ExactMatch(fields=[{'offset': 26, 'size': 4},

 Can we have some metadata-based fields for better coverage?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#518 (review)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FrKGTBkXm-CFn5VsaTkuf4qiohGvks5sDvKigaJpZM4N485s>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,518,2017-06-13T19:17:37Z,2017-06-15T23:31:18Z,2017-06-16T21:21:52Z,MERGED,True,126,9,4,https://github.com/justinemarie,Add test for exactmatch,6,[],https://github.com/NetSys/bess/pull/518,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/518#issuecomment-308258490,Panda wins the lottery.,"Codecov Report

Merging #518 into master will decrease coverage by 0.03%.
The diff coverage is 37.5%.


@@            Coverage Diff             @@
##           master     #518      +/-   ##
==========================================
- Coverage   64.97%   64.93%   -0.04%     
==========================================
  Files         198      198              
  Lines       12246    12250       +4     
==========================================
- Hits         7957     7955       -2     
- Misses       4289     4295       +6



Impacted Files
Coverage Δ





core/modules/exact_match.cc
74.13% <37.5%> (-2.44%)
⬇️


core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️


core/modules/queue.cc
60.9% <0%> (-0.91%)
⬇️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/utils/checksum_test.cc
99.4% <0%> (-0.6%)
⬇️


bessctl/test_sugar.py
97.05% <0%> (ø)
⬆️


bessctl/test_samples.py
89.74% <0%> (ø)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4402b0d...1bd796b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,518,2017-06-13T19:17:37Z,2017-06-15T23:31:18Z,2017-06-16T21:21:52Z,MERGED,True,126,9,4,https://github.com/justinemarie,Add test for exactmatch,6,[],https://github.com/NetSys/bess/pull/518,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/518#issuecomment-308892887,Panda wins the lottery.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,519,2017-06-13T20:59:55Z,2017-06-16T21:09:32Z,2017-06-16T21:21:52Z,MERGED,True,23,0,1,https://github.com/changlan,Upload release binaries from CI,1,[],https://github.com/NetSys/bess/pull/519,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/519,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,True,{}
NetSys/bess,https://github.com/NetSys/bess,519,2017-06-13T20:59:55Z,2017-06-16T21:09:32Z,2017-06-16T21:21:52Z,MERGED,True,23,0,1,https://github.com/changlan,Upload release binaries from CI,1,[],https://github.com/NetSys/bess/pull/519,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/519#issuecomment-308249543,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,"BESS daemon is built with g++ -march=native, so the resulting binary will require same machines instructions from the machine on which it was built. I guess Travis usually runs on GCE with AVX2, but the binary won't run on any pre-Haswell machines...",True,{}
NetSys/bess,https://github.com/NetSys/bess,519,2017-06-13T20:59:55Z,2017-06-16T21:09:32Z,2017-06-16T21:21:52Z,MERGED,True,23,0,1,https://github.com/changlan,Upload release binaries from CI,1,[],https://github.com/NetSys/bess/pull/519,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/519#issuecomment-308250866,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,"Perhaps in the long-term, we should support binary compatibility with Function Multi-Versioning.
https://lwn.net/Articles/691932/",True,{}
NetSys/bess,https://github.com/NetSys/bess,519,2017-06-13T20:59:55Z,2017-06-16T21:09:32Z,2017-06-16T21:21:52Z,MERGED,True,23,0,1,https://github.com/changlan,Upload release binaries from CI,1,[],https://github.com/NetSys/bess/pull/519,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/519#issuecomment-308258839,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,How about building with multiple march for legacy architectures? How many types do we want to support: https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html?,True,{}
NetSys/bess,https://github.com/NetSys/bess,519,2017-06-13T20:59:55Z,2017-06-16T21:09:32Z,2017-06-16T21:21:52Z,MERGED,True,23,0,1,https://github.com/changlan,Upload release binaries from CI,1,[],https://github.com/NetSys/bess/pull/519,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/519#issuecomment-308260505,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,"SSSE3 (minimum HW requirement), AVX, and AVX2 should be sufficient I guess...?
SSSE3 was the lowest spec (Core 2 architecture) we saw in the field. I think most servers are now equipped with AVX2, but there still are lots of Sandy/IvyBridge servers our there only with AVX...",True,{}
NetSys/bess,https://github.com/NetSys/bess,519,2017-06-13T20:59:55Z,2017-06-16T21:09:32Z,2017-06-16T21:21:52Z,MERGED,True,23,0,1,https://github.com/changlan,Upload release binaries from CI,1,[],https://github.com/NetSys/bess/pull/519,https://github.com/apps/codecov,6,https://github.com/NetSys/bess/pull/519#issuecomment-308278125,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,"Codecov Report

Merging #519 into master will increase coverage by 2.37%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #519      +/-   ##
==========================================
+ Coverage   65.18%   67.56%   +2.37%     
==========================================
  Files         198      198              
  Lines       12245    12377     +132     
==========================================
+ Hits         7982     8362     +380     
+ Misses       4263     4015     -248



Impacted Files
Coverage Δ





core/modules/wildcard_match.cc
71.67% <0%> (-0.14%)
⬇️


bessctl/test_samples.py
89.79% <0%> (+0.05%)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/module.h
89.3% <0%> (+0.62%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


bessctl/test_sugar.py
97.72% <0%> (+0.66%)
⬆️


core/modules/set_metadata.cc
66.66% <0%> (+1.38%)
⬆️


core/utils/histogram.h
95.89% <0%> (+5.47%)
⬆️


core/modules/queue.cc
61.81% <0%> (+6.36%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


... and 6 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 866f141...6a89510. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,519,2017-06-13T20:59:55Z,2017-06-16T21:09:32Z,2017-06-16T21:21:52Z,MERGED,True,23,0,1,https://github.com/changlan,Upload release binaries from CI,1,[],https://github.com/NetSys/bess/pull/519,https://github.com/changlan,7,https://github.com/NetSys/bess/pull/519#issuecomment-308546179,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,"Done. Currently it builds for three -march types:

Generic x86-64
sandybridge
haswell",True,{}
NetSys/bess,https://github.com/NetSys/bess,519,2017-06-13T20:59:55Z,2017-06-16T21:09:32Z,2017-06-16T21:21:52Z,MERGED,True,23,0,1,https://github.com/changlan,Upload release binaries from CI,1,[],https://github.com/NetSys/bess/pull/519,https://github.com/changlan,8,https://github.com/NetSys/bess/pull/519#issuecomment-309125719,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,Sure. Can I update the instruction after this PR is merged to master branch? It is easier for me to generate release binary and test dependencies.,True,{}
NetSys/bess,https://github.com/NetSys/bess,519,2017-06-13T20:59:55Z,2017-06-16T21:09:32Z,2017-06-16T21:21:52Z,MERGED,True,23,0,1,https://github.com/changlan,Upload release binaries from CI,1,[],https://github.com/NetSys/bess/pull/519,https://github.com/melvinw,9,https://github.com/NetSys/bess/pull/519#issuecomment-309134861,Upload the GCC 6 built binaries (as well as Python scripts) whenever a tag is made.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,520,2017-06-13T21:01:58Z,2017-06-13T23:44:51Z,2017-06-13T23:49:17Z,MERGED,True,21,16,3,https://github.com/sangjinhan,Make names pytest-friendly,1,[],https://github.com/NetSys/bess/pull/520,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/520,"In pytest, which is compatible with unittest.py that we currently use, names with Test... and test_... have special meanings. This PR renames such names to avoid interference.","In pytest, which is compatible with unittest.py that we currently use, names with Test... and test_... have special meanings. This PR renames such names to avoid interference.",True,{}
NetSys/bess,https://github.com/NetSys/bess,520,2017-06-13T21:01:58Z,2017-06-13T23:44:51Z,2017-06-13T23:49:17Z,MERGED,True,21,16,3,https://github.com/sangjinhan,Make names pytest-friendly,1,[],https://github.com/NetSys/bess/pull/520,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/520#issuecomment-308264505,"In pytest, which is compatible with unittest.py that we currently use, names with Test... and test_... have special meanings. This PR renames such names to avoid interference.","Codecov Report

Merging #520 into master will decrease coverage by <.01%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #520      +/-   ##
==========================================
- Coverage   64.97%   64.96%   -0.01%     
==========================================
  Files         198      198              
  Lines       12246    12246              
==========================================
- Hits         7957     7956       -1     
- Misses       4289     4290       +1



Impacted Files
Coverage Δ





bessctl/test_samples.py
89.74% <100%> (ø)
⬆️


pybess/test_bess.py
100% <100%> (ø)
⬆️


bessctl/test_sugar.py
97.05% <100%> (ø)
⬆️


core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️


core/modules/queue.cc
60.9% <0%> (-0.91%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4402b0d...028ee1d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,520,2017-06-13T21:01:58Z,2017-06-13T23:44:51Z,2017-06-13T23:49:17Z,MERGED,True,21,16,3,https://github.com/sangjinhan,Make names pytest-friendly,1,[],https://github.com/NetSys/bess/pull/520,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/520#issuecomment-308279489,"In pytest, which is compatible with unittest.py that we currently use, names with Test... and test_... have special meanings. This PR renames such names to avoid interference.",LGTM (although does anyone else just hate how pep8 adds absurd amounts of spacing around comments?),True,{}
NetSys/bess,https://github.com/NetSys/bess,520,2017-06-13T21:01:58Z,2017-06-13T23:44:51Z,2017-06-13T23:49:17Z,MERGED,True,21,16,3,https://github.com/sangjinhan,Make names pytest-friendly,1,[],https://github.com/NetSys/bess/pull/520,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/520#issuecomment-308279919,"In pytest, which is compatible with unittest.py that we currently use, names with Test... and test_... have special meanings. This PR renames such names to avoid interference.",selfcat,True,{}
NetSys/bess,https://github.com/NetSys/bess,520,2017-06-13T21:01:58Z,2017-06-13T23:44:51Z,2017-06-13T23:49:17Z,MERGED,True,21,16,3,https://github.com/sangjinhan,Make names pytest-friendly,1,[],https://github.com/NetSys/bess/pull/520,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/520#issuecomment-308280069,"In pytest, which is compatible with unittest.py that we currently use, names with Test... and test_... have special meanings. This PR renames such names to avoid interference.","HEY NO!
I was spending all that time looking for a photo of my family's cat!!",True,{}
NetSys/bess,https://github.com/NetSys/bess,520,2017-06-13T21:01:58Z,2017-06-13T23:44:51Z,2017-06-13T23:49:17Z,MERGED,True,21,16,3,https://github.com/sangjinhan,Make names pytest-friendly,1,[],https://github.com/NetSys/bess/pull/520,https://github.com/justinemarie,6,https://github.com/NetSys/bess/pull/520#issuecomment-308280122,"In pytest, which is compatible with unittest.py that we currently use, names with Test... and test_... have special meanings. This PR renames such names to avoid interference.",I am sorry to make you feel like you had to find your own cat :(,True,{}
NetSys/bess,https://github.com/NetSys/bess,521,2017-06-15T17:27:29Z,2017-06-15T18:27:17Z,2017-08-09T01:22:47Z,MERGED,True,1,1,1,https://github.com/melvinw,pybess: don't pass self to BESS.attach_task(),1,[],https://github.com/NetSys/bess/pull/521,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/521,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,521,2017-06-15T17:27:29Z,2017-06-15T18:27:17Z,2017-08-09T01:22:47Z,MERGED,True,1,1,1,https://github.com/melvinw,pybess: don't pass self to BESS.attach_task(),1,[],https://github.com/NetSys/bess/pull/521,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/521#issuecomment-308822214,,"Codecov Report

Merging #521 into master will increase coverage by 2.1%.
The diff coverage is 0%.


@@            Coverage Diff            @@
##           master     #521     +/-   ##
=========================================
+ Coverage   65.18%   67.28%   +2.1%     
=========================================
  Files         198      198             
  Lines       12245    12246      +1     
=========================================
+ Hits         7982     8240    +258     
+ Misses       4263     4006    -257



Impacted Files
Coverage Δ





pybess/bess.py
39.78% <0%> (ø)
⬆️


core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️


core/utils/checksum_test.cc
99.4% <0%> (-0.6%)
⬇️


core/module.h
89.3% <0%> (+0.62%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/modules/queue.cc
61.81% <0%> (+6.36%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/nat.cc
81.67% <0%> (+11.45%)
⬆️


core/modules/bpf.cc
53.51% <0%> (+52.78%)
⬆️


core/modules/bpf.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 866f141...d687a8d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,521,2017-06-15T17:27:29Z,2017-06-15T18:27:17Z,2017-08-09T01:22:47Z,MERGED,True,1,1,1,https://github.com/melvinw,pybess: don't pass self to BESS.attach_task(),1,[],https://github.com/NetSys/bess/pull/521,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/521#issuecomment-308828294,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,522,2017-06-15T22:07:28Z,2017-06-15T23:58:21Z,2017-06-15T23:59:35Z,MERGED,True,2,0,1,https://github.com/shwang,Explicitly define kMaxBurst,1,[],https://github.com/NetSys/bess/pull/522,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/522,"This is required for proper linking. Previously we were able to get away only with declaration (but without definition) of kMaxBurst, because a compiler optimization ignores this issue when kMaxBurst is used for array sizing.","This is required for proper linking. Previously we were able to get away only with declaration (but without definition) of kMaxBurst, because a compiler optimization ignores this issue when kMaxBurst is used for array sizing.",True,{}
NetSys/bess,https://github.com/NetSys/bess,522,2017-06-15T22:07:28Z,2017-06-15T23:58:21Z,2017-06-15T23:59:35Z,MERGED,True,2,0,1,https://github.com/shwang,Explicitly define kMaxBurst,1,[],https://github.com/NetSys/bess/pull/522,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/522#issuecomment-308885429,"This is required for proper linking. Previously we were able to get away only with declaration (but without definition) of kMaxBurst, because a compiler optimization ignores this issue when kMaxBurst is used for array sizing.","Codecov Report

Merging #522 into master will decrease coverage by 2.91%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #522      +/-   ##
==========================================
- Coverage   67.48%   64.57%   -2.92%     
==========================================
  Files         198      198              
  Lines       12245    12246       +1     
==========================================
- Hits         8264     7908     -356     
- Misses       3981     4338     +357



Impacted Files
Coverage Δ





core/packet.cc
34.64% <ø> (ø)
⬆️


core/modules/port_inc.h
0% <0%> (-100%)
⬇️


core/modules/bpf.h
0% <0%> (-100%)
⬇️


core/modules/buffer.h
0% <0%> (-100%)
⬇️


core/modules/ether_encap.h
0% <0%> (-100%)
⬇️


core/modules/buffer.cc
4.34% <0%> (-95.66%)
⬇️


core/modules/ether_encap.cc
4.16% <0%> (-91.67%)
⬇️


core/modules/port_inc.cc
4.47% <0%> (-67.17%)
⬇️


core/modules/bpf.cc
0.72% <0%> (-52.79%)
⬇️


core/pktbatch.h
75% <0%> (-12.5%)
⬇️


... and 7 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update fc93423...69fe05d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,522,2017-06-15T22:07:28Z,2017-06-15T23:58:21Z,2017-06-15T23:59:35Z,MERGED,True,2,0,1,https://github.com/shwang,Explicitly define kMaxBurst,1,[],https://github.com/NetSys/bess/pull/522,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/522#issuecomment-308896562,"This is required for proper linking. Previously we were able to get away only with declaration (but without definition) of kMaxBurst, because a compiler optimization ignores this issue when kMaxBurst is used for array sizing.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,523,2017-06-15T22:28:42Z,2017-06-20T00:29:21Z,2017-06-20T18:51:58Z,MERGED,True,1,1,1,https://github.com/changlan,Update docker repo for Ubuntu 17.04,1,[],https://github.com/NetSys/bess/pull/523,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/523,docker-ce package exists only in the edge branch.,docker-ce package exists only in the edge branch.,True,{}
NetSys/bess,https://github.com/NetSys/bess,523,2017-06-15T22:28:42Z,2017-06-20T00:29:21Z,2017-06-20T18:51:58Z,MERGED,True,1,1,1,https://github.com/changlan,Update docker repo for Ubuntu 17.04,1,[],https://github.com/NetSys/bess/pull/523,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/523#issuecomment-308888735,docker-ce package exists only in the edge branch.,"Codecov Report

Merging #523 into master will decrease coverage by 2.58%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #523      +/-   ##
==========================================
- Coverage   67.48%   64.89%   -2.59%     
==========================================
  Files         198      198              
  Lines       12245    12245              
==========================================
- Hits         8264     7947     -317     
- Misses       3981     4298     +317



Impacted Files
Coverage Δ





core/modules/ether_encap.h
0% <0%> (-100%)
⬇️


core/modules/bpf.h
0% <0%> (-100%)
⬇️


core/modules/buffer.h
0% <0%> (-100%)
⬇️


core/modules/buffer.cc
4.34% <0%> (-95.66%)
⬇️


core/modules/ether_encap.cc
4.16% <0%> (-91.67%)
⬇️


core/modules/bpf.cc
0.72% <0%> (-52.79%)
⬇️


core/pktbatch.h
75% <0%> (-12.5%)
⬇️


core/modules/nat.cc
70.22% <0%> (-11.46%)
⬇️


core/utils/copy.h
54.9% <0%> (-8.83%)
⬇️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


... and 4 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update fc93423...b2bea27. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,523,2017-06-15T22:28:42Z,2017-06-20T00:29:21Z,2017-06-20T18:51:58Z,MERGED,True,1,1,1,https://github.com/changlan,Update docker repo for Ubuntu 17.04,1,[],https://github.com/NetSys/bess/pull/523,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/523#issuecomment-309610092,docker-ce package exists only in the edge branch.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,524,2017-06-15T23:16:34Z,2017-06-15T23:24:28Z,2017-06-16T21:21:55Z,CLOSED,False,0,22,1,https://github.com/justinemarie,"Revert ""Add test for GenericDecap module.""",1,[],https://github.com/NetSys/bess/pull/524,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/524,"This reverts commit a5abfb8.
Because this mistake is so easy to make (at least for me), I have now set GitHub to reject pushes to master that don't come from a PR.","This reverts commit a5abfb8.
Because this mistake is so easy to make (at least for me), I have now set GitHub to reject pushes to master that don't come from a PR.",True,{}
NetSys/bess,https://github.com/NetSys/bess,524,2017-06-15T23:16:34Z,2017-06-15T23:24:28Z,2017-06-16T21:21:55Z,CLOSED,False,0,22,1,https://github.com/justinemarie,"Revert ""Add test for GenericDecap module.""",1,[],https://github.com/NetSys/bess/pull/524,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/524#issuecomment-308897143,"This reverts commit a5abfb8.
Because this mistake is so easy to make (at least for me), I have now set GitHub to reject pushes to master that don't come from a PR.","Codecov Report

Merging #524 into master will decrease coverage by 0.25%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #524      +/-   ##
==========================================
- Coverage   65.17%   64.92%   -0.26%     
==========================================
  Files         198      198              
  Lines       12245    12246       +1     
==========================================
- Hits         7981     7951      -30     
- Misses       4264     4295      +31



Impacted Files
Coverage Δ





core/modules/buffer.h
0% <0%> (-100%)
⬇️


core/modules/buffer.cc
4.34% <0%> (-95.66%)
⬇️


core/pktbatch.h
75% <0%> (-12.5%)
⬇️


core/utils/copy.h
54.9% <0%> (-8.83%)
⬇️


core/kmod/llring.h
60.95% <0%> (-2.74%)
⬇️


core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️


core/utils/checksum_test.cc
100% <0%> (+0.59%)
⬆️


core/module.h
89.3% <0%> (+0.62%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/modules/queue.cc
60.9% <0%> (+5.45%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a5abfb8...0225d4f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,525,2017-06-15T23:21:25Z,2017-06-15T23:24:21Z,2017-06-16T21:21:55Z,CLOSED,False,0,0,0,https://github.com/justinemarie,Add generic decap test,2,[],https://github.com/NetSys/bess/pull/525,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/525,This is branched off my revert request. Sorry for the mixup.,This is branched off my revert request. Sorry for the mixup.,True,{}
NetSys/bess,https://github.com/NetSys/bess,525,2017-06-15T23:21:25Z,2017-06-15T23:24:21Z,2017-06-16T21:21:55Z,CLOSED,False,0,0,0,https://github.com/justinemarie,Add generic decap test,2,[],https://github.com/NetSys/bess/pull/525,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/525#issuecomment-308899897,This is branched off my revert request. Sorry for the mixup.,"Codecov Report

Merging #525 into master will increase coverage by 0.03%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #525      +/-   ##
==========================================
+ Coverage   65.17%   65.21%   +0.03%     
==========================================
  Files         198      198              
  Lines       12245    12246       +1     
==========================================
+ Hits         7981     7986       +5     
+ Misses       4264     4260       -4



Impacted Files
Coverage Δ





core/kmod/llring.h
60.95% <0%> (-2.74%)
⬇️


core/utils/checksum_test.cc
100% <0%> (+0.59%)
⬆️


core/module.h
89.3% <0%> (+0.62%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/modules/queue.cc
60.9% <0%> (+5.45%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a5abfb8...476e089. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,526,2017-06-16T17:33:47Z,2017-06-20T17:26:59Z,2017-06-20T18:50:56Z,MERGED,True,85,36,11,https://github.com/changlan,GCC 7 Support,9,[],https://github.com/NetSys/bess/pull/526,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/526,"To support newer Ubuntu versions we need to make sure BESS builds with GCC 7 correctly:

Use sort -V to compare CXX versions in Makefile
Explicitly mark fall-throughs
Misc. fixes","To support newer Ubuntu versions we need to make sure BESS builds with GCC 7 correctly:

Use sort -V to compare CXX versions in Makefile
Explicitly mark fall-throughs
Misc. fixes",True,{}
NetSys/bess,https://github.com/NetSys/bess,526,2017-06-16T17:33:47Z,2017-06-20T17:26:59Z,2017-06-20T18:50:56Z,MERGED,True,85,36,11,https://github.com/changlan,GCC 7 Support,9,[],https://github.com/NetSys/bess/pull/526,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/526#issuecomment-309124521,"To support newer Ubuntu versions we need to make sure BESS builds with GCC 7 correctly:

Use sort -V to compare CXX versions in Makefile
Explicitly mark fall-throughs
Misc. fixes","Codecov Report

Merging #526 into master will increase coverage by 2.49%.
The diff coverage is 83.33%.


@@            Coverage Diff             @@
##           master     #526      +/-   ##
==========================================
+ Coverage   65.39%   67.89%   +2.49%     
==========================================
  Files         198      198              
  Lines       12300    12297       -3     
==========================================
+ Hits         8044     8349     +305     
+ Misses       4256     3948     -308



Impacted Files
Coverage Δ





core/kmod/llring.h
63.69% <ø> (ø)
⬆️


core/modules/rewrite.h
100% <ø> (ø)
⬆️


core/message.h
18.18% <ø> (ø)
⬆️


core/utils/cuckoo_map.h
98.16% <100%> (ø)
⬆️


core/utils/copy.h
63.72% <100%> (ø)
⬆️


core/module_test.cc
96.98% <75%> (-0.06%)
⬇️


core/modules/queue.cc
60.9% <0%> (-0.91%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️


... and 9 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 54cf79d...5ccefa6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,526,2017-06-16T17:33:47Z,2017-06-20T17:26:59Z,2017-06-20T18:50:56Z,MERGED,True,85,36,11,https://github.com/changlan,GCC 7 Support,9,[],https://github.com/NetSys/bess/pull/526,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/526#issuecomment-309830007,"To support newer Ubuntu versions we need to make sure BESS builds with GCC 7 correctly:

Use sort -V to compare CXX versions in Makefile
Explicitly mark fall-throughs
Misc. fixes",,True,{}
NetSys/bess,https://github.com/NetSys/bess,527,2017-06-19T19:58:36Z,2017-06-19T21:46:21Z,2017-06-20T18:52:03Z,MERGED,True,220,169,1,https://github.com/sangjinhan,Update dpdk-devbind.py to DPDK 17.05,1,[],https://github.com/NetSys/bess/pull/527,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/527,"It seems that 2to3 somehow broke this script:
Traceback (most recent call last):
  File ""./dpdk-devbind.py"", line 36, in <module>
    from builtins import map
ImportError: No module named builtins

This PR updates the script with the one in DPDK 17.05 (the previous one was 17.02). The script runs well on both Python 2 and 3 out of the box.","It seems that 2to3 somehow broke this script:
Traceback (most recent call last):
  File ""./dpdk-devbind.py"", line 36, in <module>
    from builtins import map
ImportError: No module named builtins

This PR updates the script with the one in DPDK 17.05 (the previous one was 17.02). The script runs well on both Python 2 and 3 out of the box.",True,{}
NetSys/bess,https://github.com/NetSys/bess,527,2017-06-19T19:58:36Z,2017-06-19T21:46:21Z,2017-06-20T18:52:03Z,MERGED,True,220,169,1,https://github.com/sangjinhan,Update dpdk-devbind.py to DPDK 17.05,1,[],https://github.com/NetSys/bess/pull/527,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/527#issuecomment-309583068,"It seems that 2to3 somehow broke this script:
Traceback (most recent call last):
  File ""./dpdk-devbind.py"", line 36, in <module>
    from builtins import map
ImportError: No module named builtins

This PR updates the script with the one in DPDK 17.05 (the previous one was 17.02). The script runs well on both Python 2 and 3 out of the box.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,528,2017-06-19T22:21:11Z,2017-06-20T20:01:56Z,2017-06-20T21:21:01Z,MERGED,True,1,0,1,https://github.com/changlan,Allow CI to build tagged commits,1,[],https://github.com/NetSys/bess/pull/528,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/528,Tags are in the format like v0.1.0-alpha,Tags are in the format like v0.1.0-alpha,True,{}
NetSys/bess,https://github.com/NetSys/bess,528,2017-06-19T22:21:11Z,2017-06-20T20:01:56Z,2017-06-20T21:21:01Z,MERGED,True,1,0,1,https://github.com/changlan,Allow CI to build tagged commits,1,[],https://github.com/NetSys/bess/pull/528,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/528#issuecomment-309838146,Tags are in the format like v0.1.0-alpha,"Codecov Report

Merging #528 into master will increase coverage by 1.96%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master    #528      +/-   ##
=========================================
+ Coverage   65.34%   67.3%   +1.96%     
=========================================
  Files         198     198              
  Lines       12300   12299       -1     
=========================================
+ Hits         8037    8278     +241     
+ Misses       4263    4021     -242



Impacted Files
Coverage Δ





core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/modules/queue.cc
60.9% <0%> (ø)
⬆️


core/utils/checksum_test.cc
100% <0%> (+0.59%)
⬆️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️


core/kmod/llring.h
63.69% <0%> (+2.73%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/bpf.cc
53.51% <0%> (+52.78%)
⬆️


core/modules/bpf.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 20b940f...11a6e60. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,528,2017-06-19T22:21:11Z,2017-06-20T20:01:56Z,2017-06-20T21:21:01Z,MERGED,True,1,0,1,https://github.com/changlan,Allow CI to build tagged commits,1,[],https://github.com/NetSys/bess/pull/528,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/528#issuecomment-309874808,Tags are in the format like v0.1.0-alpha,,True,{}
NetSys/bess,https://github.com/NetSys/bess,529,2017-06-20T16:50:51Z,2017-06-23T22:40:51Z,2017-06-27T20:46:33Z,MERGED,True,586,0,6,https://github.com/sangjinhan,Add vhost-user sample script,5,[],https://github.com/NetSys/bess/pull/529,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/529,"This sample script illustrates how vhost-user ports (PMDPort(vdev='eth_vhost_X', iface=/path/to/Y.sock')) can be used for VMs with virtio-net devices. It also includes a VM image generator.","This sample script illustrates how vhost-user ports (PMDPort(vdev='eth_vhost_X', iface=/path/to/Y.sock')) can be used for VMs with virtio-net devices. It also includes a VM image generator.",True,{}
NetSys/bess,https://github.com/NetSys/bess,529,2017-06-20T16:50:51Z,2017-06-23T22:40:51Z,2017-06-27T20:46:33Z,MERGED,True,586,0,6,https://github.com/sangjinhan,Add vhost-user sample script,5,[],https://github.com/NetSys/bess/pull/529,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/529#issuecomment-309839400,"This sample script illustrates how vhost-user ports (PMDPort(vdev='eth_vhost_X', iface=/path/to/Y.sock')) can be used for VMs with virtio-net devices. It also includes a VM image generator.","Codecov Report

Merging #529 into master will increase coverage by 0.13%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #529      +/-   ##
==========================================
+ Coverage   65.39%   65.52%   +0.13%     
==========================================
  Files         198      198              
  Lines       12300    12300              
==========================================
+ Hits         8044     8060      +16     
+ Misses       4256     4240      -16



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 54cf79d...130960f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,529,2017-06-20T16:50:51Z,2017-06-23T22:40:51Z,2017-06-27T20:46:33Z,MERGED,True,586,0,6,https://github.com/sangjinhan,Add vhost-user sample script,5,[],https://github.com/NetSys/bess/pull/529,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/529#issuecomment-309874229,"This sample script illustrates how vhost-user ports (PMDPort(vdev='eth_vhost_X', iface=/path/to/Y.sock')) can be used for VMs with virtio-net devices. It also includes a VM image generator.","Those are semantically identical. BESS scripts support some syntactic sugars, such as foo -> bar to connect modules. Nowadays I am a bit skeptical if it is worth it, though... :(",True,{}
NetSys/bess,https://github.com/NetSys/bess,529,2017-06-20T16:50:51Z,2017-06-23T22:40:51Z,2017-06-27T20:46:33Z,MERGED,True,586,0,6,https://github.com/sangjinhan,Add vhost-user sample script,5,[],https://github.com/NetSys/bess/pull/529,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/529#issuecomment-310788421,"This sample script illustrates how vhost-user ports (PMDPort(vdev='eth_vhost_X', iface=/path/to/Y.sock')) can be used for VMs with virtio-net devices. It also includes a VM image generator.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/530,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.","Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.",True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/530#issuecomment-309874039,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.","Codecov Report

Merging #530 into master will decrease coverage by 2.06%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #530      +/-   ##
==========================================
- Coverage   67.44%   65.38%   -2.07%     
==========================================
  Files         198      198              
  Lines       12297    12297              
==========================================
- Hits         8294     8040     -254     
- Misses       4003     4257     +254



Impacted Files
Coverage Δ





core/kmod/llring.h
63.69% <ø> (ø)
⬆️


core/utils/copy.h
63.72% <ø> (ø)
⬆️


core/modules/ether_encap.h
0% <0%> (-100%)
⬇️


core/modules/bpf.h
0% <0%> (-100%)
⬇️


core/modules/ether_encap.cc
4.16% <0%> (-91.67%)
⬇️


core/modules/bpf.cc
0.72% <0%> (-52.79%)
⬇️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/packet_avx.h
93.93% <0%> (-1.52%)
⬇️


core/module.h
89.3% <0%> (-0.63%)
⬇️


core/modules/queue.cc
61.81% <0%> (+6.36%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1a8d1e0...1cfda7b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/530#issuecomment-309875205,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.",Is copy.h used by non-C++ code somewhere?,True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/530#issuecomment-309885141,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.","Yes, my test build on my VM just failed:
Building with KERNELRELEASE = 4.4.0-66-generic
  CC [M]  /home/vagrant/bess/core/kmod/sndrv.o
In file included from /home/vagrant/bess/core/kmod/sn_common.h:54:0,
                 from /home/vagrant/bess/core/kmod/sndrv.c:32:
/home/vagrant/bess/core/kmod/llring.h:72:32: error: missing ')' after ""__has_attribute""
 #elif __has_cpp_attribute(clang::fallthrough)
                                ^
/home/vagrant/bess/core/kmod/llring.h:72:33: error:  ':' without preceding '?'
 #elif __has_cpp_attribute(clang::fallthrough)
                                 ^
scripts/Makefile.build:258: recipe for target '/home/vagrant/bess/core/kmod/sndrv.o' failed```",True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/chris3torek,5,https://github.com/NetSys/bess/pull/530#issuecomment-309885803,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.","Oh, duh, that's just llring.h not copy.h. Not sure if copy.h is used elsewhere, will find out.",True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/chris3torek,6,https://github.com/NetSys/bess/pull/530#issuecomment-309892210,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.","Pretty sure copy.h is not used elsewhere.  Unfortunately all the #if test variants fail to pass gcc at all, it just cannot handle the #if expression with the double colon.
This pattern seems to work:
#if defined(__has_attribute) && __has_attribute(fallthrough)
#define FALLTHROUGH __attribute__((fallthrough))
#endif

#if !defined(FALLTHROUGH) && defined(__has_cpp_attribute) && \
    __has_cpp_attribute(fallthrough)
#define FALLTHROUGH [[fallthrough]]
#endif

#if !defined(FALLTHROUGH) && defined(__has_cpp_attribute) && \
    defined(__clang__)
#if __has_cpp_attribute(clang::fallthrough)
#define FALLTHROUGH [[clang::fallthrough]]
#endif
#endif

#ifndef FALLTHROUGH
#define FALLTHROUGH
#endif",True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/changlan,7,https://github.com/NetSys/bess/pull/530#issuecomment-309894571,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.","GCC 4.8 complains about this line:
utils/copy.h:4:48: error: missing binary operator before token ""(""
 #if defined(__has_attribute) && __has_attribute(fallthrough)
                                                ^
utils/copy.h:9:24: error: missing binary operator before token ""(""
     __has_cpp_attribute(fallthrough)

Probably it is because GCC 4.8 macro preprocessor doesn't recognize __has_attribute. Breaking them into two if statements works fine.",True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/chris3torek,8,https://github.com/NetSys/bess/pull/530#issuecomment-309897148,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.","Ah, so the copy.h problem is not C vs C++ but rather gcc preprocessor vs clang preprocessor. I can't get llring.h and the kmod C code to build just with the separate #if lines though: I needed an explicit __clang__ test, like the one I put in here.",True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/changlan,9,https://github.com/NetSys/bess/pull/530#issuecomment-309900819,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.","Yes. They are two different issues:

The llring.h problem is about C vs C++: square brackets attributes [[ xxx ]]  are invalid in C. They are only included after C++11.
The copy.h error only occurs with GCC 4.8, as it does not have some builtin macros, such as__has_attribute and __has_cpp_attribute ...

I updated the patch. It should address those two problems.",True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/chris3torek,10,https://github.com/NetSys/bess/pull/530#issuecomment-309901649,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.","Unfortunately gcc 5.4.1 defines __has_attribute and __has_cpp_attribute (but they do not accept C++ syntax). So the llring.h file needs more than just a test for __has_attribute, this is where I had to test __clang__ as well.
Updated note: apparently gcc 5.4.1 defines __has_attribute but __has_attribute(fallthrough) is false! So we do not define FALLTHROUGH as __attribute__((fallthrough)) earlier.",True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/chris3torek,11,https://github.com/NetSys/bess/pull/530#issuecomment-309932401,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.",I don't know why codecov is so unhappy about the ether_encap and bpf code but this is working for me now. 👍,True,{}
NetSys/bess,https://github.com/NetSys/bess,530,2017-06-20T19:06:37Z,2017-06-21T02:53:28Z,2017-06-21T06:31:50Z,MERGED,True,16,8,2,https://github.com/changlan,Use __attribute__ instead of square backets,1,[],https://github.com/NetSys/bess/pull/530,https://github.com/sangjinhan,12,https://github.com/NetSys/bess/pull/530#issuecomment-309948480,"Unfortunately C does not support square bracket [[ xxx ]] for attributes, which
breaks kernel module builds. Falling back to the old __attribute__ style.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,531,2017-06-22T19:25:10Z,2017-06-30T00:01:53Z,2017-06-30T00:04:07Z,MERGED,True,11,12,2,https://github.com/changlan,Update README and minor tweaks,3,[],https://github.com/NetSys/bess/pull/531,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/531,"Update the instruction use binary releases.
Include the parent directory bess in the tarball
Delete .pyc files before tarballing
Include kmod source code","Update the instruction use binary releases.
Include the parent directory bess in the tarball
Delete .pyc files before tarballing
Include kmod source code",True,{}
NetSys/bess,https://github.com/NetSys/bess,531,2017-06-22T19:25:10Z,2017-06-30T00:01:53Z,2017-06-30T00:04:07Z,MERGED,True,11,12,2,https://github.com/changlan,Update README and minor tweaks,3,[],https://github.com/NetSys/bess/pull/531,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/531#issuecomment-310523688,"Update the instruction use binary releases.
Include the parent directory bess in the tarball
Delete .pyc files before tarballing
Include kmod source code","Codecov Report

Merging #531 into master will increase coverage by 0.13%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #531      +/-   ##
==========================================
+ Coverage   67.46%   67.59%   +0.13%     
==========================================
  Files         198      198              
  Lines       12297    12297              
==========================================
+ Hits         8296     8312      +16     
+ Misses       4001     3985      -16



Impacted Files
Coverage Δ





core/modules/queue.cc
60.9% <0%> (-0.91%)
⬇️


core/utils/checksum_test.cc
99.4% <0%> (ø)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5b17114...80f08bd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,531,2017-06-22T19:25:10Z,2017-06-30T00:01:53Z,2017-06-30T00:04:07Z,MERGED,True,11,12,2,https://github.com/changlan,Update README and minor tweaks,3,[],https://github.com/NetSys/bess/pull/531,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/531#issuecomment-312139324,"Update the instruction use binary releases.
Include the parent directory bess in the tarball
Delete .pyc files before tarballing
Include kmod source code",,True,{}
NetSys/bess,https://github.com/NetSys/bess,532,2017-06-22T23:02:54Z,2017-06-22T23:10:27Z,2017-06-27T20:42:14Z,MERGED,True,3,2,1,https://github.com/ddiproietto,env: Install clang-3.9,2,[],https://github.com/NetSys/bess/pull/532,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/532,"It's useful to have a more recent version.  For now travis still uses 3.8,
but that may change soon.","It's useful to have a more recent version.  For now travis still uses 3.8,
but that may change soon.",True,{}
NetSys/bess,https://github.com/NetSys/bess,532,2017-06-22T23:02:54Z,2017-06-22T23:10:27Z,2017-06-27T20:42:14Z,MERGED,True,3,2,1,https://github.com/ddiproietto,env: Install clang-3.9,2,[],https://github.com/NetSys/bess/pull/532,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/532#issuecomment-310527116,"It's useful to have a more recent version.  For now travis still uses 3.8,
but that may change soon.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,532,2017-06-22T23:02:54Z,2017-06-22T23:10:27Z,2017-06-27T20:42:14Z,MERGED,True,3,2,1,https://github.com/ddiproietto,env: Install clang-3.9,2,[],https://github.com/NetSys/bess/pull/532,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/532#issuecomment-310529858,"It's useful to have a more recent version.  For now travis still uses 3.8,
but that may change soon.","Codecov Report

Merging #532 into master will increase coverage by 1.53%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #532      +/-   ##
==========================================
+ Coverage   65.49%   67.02%   +1.53%     
==========================================
  Files         198      198              
  Lines       12296    12297       +1     
==========================================
+ Hits         8053     8242     +189     
+ Misses       4243     4055     -188



Impacted Files
Coverage Δ





core/modules/port_inc.h
0% <0%> (-100%)
⬇️


core/modules/port_inc.cc
4.47% <0%> (-67.17%)
⬇️


core/port.h
78.78% <0%> (-15.16%)
⬇️


core/message.cc
58.06% <0%> (-12.91%)
⬇️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/modules/queue.cc
55.45% <0%> (-5.46%)
⬇️


core/port.cc
88.23% <0%> (-0.85%)
⬇️


core/module.h
89.93% <0%> (+0.62%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/utils/checksum_test.cc
100% <0%> (+1.19%)
⬆️


... and 7 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 86346f0...c1e9361. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,532,2017-06-22T23:02:54Z,2017-06-22T23:10:27Z,2017-06-27T20:42:14Z,MERGED,True,3,2,1,https://github.com/ddiproietto,env: Install clang-3.9,2,[],https://github.com/NetSys/bess/pull/532,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/532#issuecomment-311255650,"It's useful to have a more recent version.  For now travis still uses 3.8,
but that may change soon.","With gRPC (and protobuf) built with g++ 4.8, the ansible script fails on a clean Xenial server. Could you check please?",True,{}
NetSys/bess,https://github.com/NetSys/bess,532,2017-06-22T23:02:54Z,2017-06-22T23:10:27Z,2017-06-27T20:42:14Z,MERGED,True,3,2,1,https://github.com/ddiproietto,env: Install clang-3.9,2,[],https://github.com/NetSys/bess/pull/532,https://github.com/changlan,5,https://github.com/NetSys/bess/pull/532#issuecomment-311479180,"It's useful to have a more recent version.  For now travis still uses 3.8,
but that may change soon.","I tried different combinations of CXX to build gRPC and BESS on xenial:



BESS \ gRPC
4.8
5
6
7




4.8
x
x
x
x


5
x
v
x
x


6
x
v
v
x


7
x
v
v
x



It seems that 4.8 is not working well here. I wonder if we should stop supporting GCC 4.8.",True,{}
NetSys/bess,https://github.com/NetSys/bess,533,2017-06-26T07:22:21Z,2017-06-28T07:43:02Z,2017-06-28T07:44:17Z,MERGED,True,42,0,2,https://github.com/GalSagie,Add MPLS header file,3,[],https://github.com/NetSys/bess/pull/533,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/533,This will be used for MPLS encap/decap modules,This will be used for MPLS encap/decap modules,True,{}
NetSys/bess,https://github.com/NetSys/bess,533,2017-06-26T07:22:21Z,2017-06-28T07:43:02Z,2017-06-28T07:44:17Z,MERGED,True,42,0,2,https://github.com/GalSagie,Add MPLS header file,3,[],https://github.com/NetSys/bess/pull/533,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/533#issuecomment-310989903,This will be used for MPLS encap/decap modules,"Codecov Report

Merging #533 into master will decrease coverage by 0.19%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master     #533     +/-   ##
=========================================
- Coverage   67.59%   67.39%   -0.2%     
=========================================
  Files         198      198             
  Lines       12297    12297             
=========================================
- Hits         8312     8288     -24     
- Misses       3985     4009     +24



Impacted Files
Coverage Δ





core/utils/ether.h
83.33% <ø> (ø)
⬆️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/modules/queue.cc
55.45% <0%> (-5.46%)
⬇️


core/module.h
89.93% <0%> (-0.63%)
⬇️


core/utils/checksum_test.cc
99.4% <0%> (-0.6%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ce3d571...52d37cd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,533,2017-06-26T07:22:21Z,2017-06-28T07:43:02Z,2017-06-28T07:44:17Z,MERGED,True,42,0,2,https://github.com/GalSagie,Add MPLS header file,3,[],https://github.com/NetSys/bess/pull/533,https://github.com/barath,3,https://github.com/NetSys/bess/pull/533#issuecomment-311583143,This will be used for MPLS encap/decap modules,,True,{}
NetSys/bess,https://github.com/NetSys/bess,535,2017-06-28T19:22:25Z,2017-06-29T09:24:50Z,2017-06-29T09:25:09Z,MERGED,True,21,35,6,https://github.com/changlan,Remove GCC 4.8 support,2,[],https://github.com/NetSys/bess/pull/535,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/535,"GCC 4.8 uses a different ABI. As a result, gRPC built by GCC 4.8 doesn't work in any case (#532). In addition, if gRPC is built by GCC 5+, BESS cannot be built by GCC 4.8. This PR ditches the support for GCC 4.8.","GCC 4.8 uses a different ABI. As a result, gRPC built by GCC 4.8 doesn't work in any case (#532). In addition, if gRPC is built by GCC 5+, BESS cannot be built by GCC 4.8. This PR ditches the support for GCC 4.8.",True,{}
NetSys/bess,https://github.com/NetSys/bess,535,2017-06-28T19:22:25Z,2017-06-29T09:24:50Z,2017-06-29T09:25:09Z,MERGED,True,21,35,6,https://github.com/changlan,Remove GCC 4.8 support,2,[],https://github.com/NetSys/bess/pull/535,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/535#issuecomment-311769704,"GCC 4.8 uses a different ABI. As a result, gRPC built by GCC 4.8 doesn't work in any case (#532). In addition, if gRPC is built by GCC 5+, BESS cannot be built by GCC 4.8. This PR ditches the support for GCC 4.8.","Codecov Report

Merging #535 into master will increase coverage by 0.46%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #535      +/-   ##
==========================================
+ Coverage    67.6%   68.06%   +0.46%     
==========================================
  Files         198      198              
  Lines       12297    12297              
==========================================
+ Hits         8313     8370      +57     
+ Misses       3984     3927      -57



Impacted Files
Coverage Δ





core/kmod/llring.h
63.69% <ø> (ø)
⬆️


core/utils/copy.h
63.72% <ø> (ø)
⬆️


core/utils/common.h
93.54% <100%> (ø)
⬆️


core/utils/checksum_test.cc
98.8% <0%> (-0.6%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️


core/modules/set_metadata.cc
69.44% <0%> (+4.16%)
⬆️


core/modules/port_inc.cc
71.64% <0%> (+67.16%)
⬆️


core/modules/merge.cc
100% <0%> (+75%)
⬆️


core/modules/port_inc.h
100% <0%> (+100%)
⬆️


... and 1 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b018973...90776a2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,535,2017-06-28T19:22:25Z,2017-06-29T09:24:50Z,2017-06-29T09:25:09Z,MERGED,True,21,35,6,https://github.com/changlan,Remove GCC 4.8 support,2,[],https://github.com/NetSys/bess/pull/535,https://github.com/barath,3,https://github.com/NetSys/bess/pull/535#issuecomment-311912351,"GCC 4.8 uses a different ABI. As a result, gRPC built by GCC 4.8 doesn't work in any case (#532). In addition, if gRPC is built by GCC 5+, BESS cannot be built by GCC 4.8. This PR ditches the support for GCC 4.8.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,536,2017-06-29T11:27:36Z,2017-06-29T18:55:27Z,2017-06-29T18:56:58Z,MERGED,True,5,1,1,https://github.com/GalSagie,Add Env variable to support running of only one python test,2,[],https://github.com/NetSys/bess/pull/536,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/536,"Example use case:
run testing/run_module_tests TEST_NAME='nat'
This will only run nat.py test","Example use case:
run testing/run_module_tests TEST_NAME='nat'
This will only run nat.py test",True,{}
NetSys/bess,https://github.com/NetSys/bess,536,2017-06-29T11:27:36Z,2017-06-29T18:55:27Z,2017-06-29T18:56:58Z,MERGED,True,5,1,1,https://github.com/GalSagie,Add Env variable to support running of only one python test,2,[],https://github.com/NetSys/bess/pull/536,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/536#issuecomment-311947132,"Example use case:
run testing/run_module_tests TEST_NAME='nat'
This will only run nat.py test","Codecov Report

Merging #536 into master will decrease coverage by 0.06%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #536      +/-   ##
==========================================
- Coverage   67.46%   67.39%   -0.07%     
==========================================
  Files         198      198              
  Lines       12297    12297              
==========================================
- Hits         8296     8288       -8     
- Misses       4001     4009       +8



Impacted Files
Coverage Δ





core/modules/queue.cc
55.45% <0%> (-6.37%)
⬇️


core/module.h
89.93% <0%> (-0.63%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5b17114...e870a86. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,536,2017-06-29T11:27:36Z,2017-06-29T18:55:27Z,2017-06-29T18:56:58Z,MERGED,True,5,1,1,https://github.com/GalSagie,Add Env variable to support running of only one python test,2,[],https://github.com/NetSys/bess/pull/536,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/536#issuecomment-312067261,"Example use case:
run testing/run_module_tests TEST_NAME='nat'
This will only run nat.py test",Merged. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,537,2017-06-29T12:15:10Z,2017-07-03T21:09:13Z,2017-07-03T21:10:04Z,MERGED,True,32,0,1,https://github.com/GalSagie,Add ARP module python test,2,[],https://github.com/NetSys/bess/pull/537,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/537,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,537,2017-06-29T12:15:10Z,2017-07-03T21:09:13Z,2017-07-03T21:10:04Z,MERGED,True,32,0,1,https://github.com/GalSagie,Add ARP module python test,2,[],https://github.com/NetSys/bess/pull/537,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/537#issuecomment-312049148,,"Codecov Report

Merging #537 into master will increase coverage by 0.02%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #537      +/-   ##
==========================================
+ Coverage   67.46%   67.48%   +0.02%     
==========================================
  Files         198      198              
  Lines       12297    12297              
==========================================
+ Hits         8296     8299       +3     
+ Misses       4001     3998       -3



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️


core/modules/arp_responder.cc
83.33% <0%> (+4.76%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5b17114...5890a96. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,537,2017-06-29T12:15:10Z,2017-07-03T21:09:13Z,2017-07-03T21:10:04Z,MERGED,True,32,0,1,https://github.com/GalSagie,Add ARP module python test,2,[],https://github.com/NetSys/bess/pull/537,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/537#issuecomment-312734237,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,538,2017-06-29T14:05:48Z,2017-07-06T00:25:46Z,2017-07-06T00:26:13Z,MERGED,True,126,0,4,https://github.com/GalSagie,Add MPLS pop module,4,[],https://github.com/NetSys/bess/pull/538,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/538,"Still TODO:

Make pop more efficient using AVX instructions
Save label as metadata for next module
Currently ignores MPLS stacking","Still TODO:

Make pop more efficient using AVX instructions
Save label as metadata for next module
Currently ignores MPLS stacking",True,{}
NetSys/bess,https://github.com/NetSys/bess,538,2017-06-29T14:05:48Z,2017-07-06T00:25:46Z,2017-07-06T00:26:13Z,MERGED,True,126,0,4,https://github.com/GalSagie,Add MPLS pop module,4,[],https://github.com/NetSys/bess/pull/538,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/538#issuecomment-312010133,"Still TODO:

Make pop more efficient using AVX instructions
Save label as metadata for next module
Currently ignores MPLS stacking","Codecov Report

Merging #538 into master will increase coverage by 0.18%.
The diff coverage is 90%.


@@            Coverage Diff             @@
##           master     #538      +/-   ##
==========================================
+ Coverage   67.46%   67.65%   +0.18%     
==========================================
  Files         198      200       +2     
  Lines       12297    12331      +34     
==========================================
+ Hits         8296     8342      +46     
+ Misses       4001     3989      -12



Impacted Files
Coverage Δ





core/modules/mpls_pop.h
100% <100%> (ø)



core/modules/mpls_pop.cc
89.65% <89.65%> (ø)



pybess/protobuf_to_dict.py
54.28% <0%> (-1.6%)
⬇️


pybess/bess.py
39.67% <0%> (-0.11%)
⬇️


core/modules/arp_responder.cc
83.33% <0%> (+4.76%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5b17114...6d0351f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,538,2017-06-29T14:05:48Z,2017-07-06T00:25:46Z,2017-07-06T00:26:13Z,MERGED,True,126,0,4,https://github.com/GalSagie,Add MPLS pop module,4,[],https://github.com/NetSys/bess/pull/538,https://github.com/GalSagie,3,https://github.com/NetSys/bess/pull/538#issuecomment-312843181,"Still TODO:

Make pop more efficient using AVX instructions
Save label as metadata for next module
Currently ignores MPLS stacking",Fixed formatting problems,True,{}
NetSys/bess,https://github.com/NetSys/bess,538,2017-06-29T14:05:48Z,2017-07-06T00:25:46Z,2017-07-06T00:26:13Z,MERGED,True,126,0,4,https://github.com/GalSagie,Add MPLS pop module,4,[],https://github.com/NetSys/bess/pull/538,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/538#issuecomment-313262168,"Still TODO:

Make pop more efficient using AVX instructions
Save label as metadata for next module
Currently ignores MPLS stacking","Merged, thanks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,539,2017-06-29T18:29:05Z,2017-06-30T22:36:14Z,2017-06-30T22:36:37Z,CLOSED,False,4,4,1,https://github.com/shwang,ansible: Install protoc before gRPC.,1,['notready'],https://github.com/NetSys/bess/pull/539,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/539,"On a clean Ubuntu Xenial server, the Ansible playbook fails on the
""Compile gRPC"" step because protoc cannot be found. This patch compiles
and install protoc first so that gRPC compilation can proceed.","On a clean Ubuntu Xenial server, the Ansible playbook fails on the
""Compile gRPC"" step because protoc cannot be found. This patch compiles
and install protoc first so that gRPC compilation can proceed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,539,2017-06-29T18:29:05Z,2017-06-30T22:36:14Z,2017-06-30T22:36:37Z,CLOSED,False,4,4,1,https://github.com/shwang,ansible: Install protoc before gRPC.,1,['notready'],https://github.com/NetSys/bess/pull/539,https://github.com/shwang,2,https://github.com/NetSys/bess/pull/539#issuecomment-312057640,"On a clean Ubuntu Xenial server, the Ansible playbook fails on the
""Compile gRPC"" step because protoc cannot be found. This patch compiles
and install protoc first so that gRPC compilation can proceed.","not sure if this is enough to fix the build, please don't push yet.",True,{}
NetSys/bess,https://github.com/NetSys/bess,539,2017-06-29T18:29:05Z,2017-06-30T22:36:14Z,2017-06-30T22:36:37Z,CLOSED,False,4,4,1,https://github.com/shwang,ansible: Install protoc before gRPC.,1,['notready'],https://github.com/NetSys/bess/pull/539,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/539#issuecomment-312073867,"On a clean Ubuntu Xenial server, the Ansible playbook fails on the
""Compile gRPC"" step because protoc cannot be found. This patch compiles
and install protoc first so that gRPC compilation can proceed.","Codecov Report

Merging #539 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #539   +/-   ##
=======================================
  Coverage   67.46%   67.46%           
=======================================
  Files         198      198           
  Lines       12297    12297           
=======================================
  Hits         8296     8296           
  Misses       4001     4001



Impacted Files
Coverage Δ





core/utils/checksum_test.cc
99.4% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5b17114...fb6c07b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,539,2017-06-29T18:29:05Z,2017-06-30T22:36:14Z,2017-06-30T22:36:37Z,CLOSED,False,4,4,1,https://github.com/shwang,ansible: Install protoc before gRPC.,1,['notready'],https://github.com/NetSys/bess/pull/539,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/539#issuecomment-312113564,"On a clean Ubuntu Xenial server, the Ansible playbook fails on the
""Compile gRPC"" step because protoc cannot be found. This patch compiles
and install protoc first so that gRPC compilation can proceed.","If protobuf is not available, gRPC is supposed to build it and install automatically. If it doesn't do it properly, I think that's the issue we need to fix...",True,{}
NetSys/bess,https://github.com/NetSys/bess,539,2017-06-29T18:29:05Z,2017-06-30T22:36:14Z,2017-06-30T22:36:37Z,CLOSED,False,4,4,1,https://github.com/shwang,ansible: Install protoc before gRPC.,1,['notready'],https://github.com/NetSys/bess/pull/539,https://github.com/shwang,5,https://github.com/NetSys/bess/pull/539#issuecomment-312387430,"On a clean Ubuntu Xenial server, the Ansible playbook fails on the
""Compile gRPC"" step because protoc cannot be found. This patch compiles
and install protoc first so that gRPC compilation can proceed.",@chris3torek found a solution!,True,{}
NetSys/bess,https://github.com/NetSys/bess,540,2017-06-29T19:04:09Z,2017-07-03T22:00:19Z,2018-06-30T03:44:05Z,MERGED,True,29,1,3,https://github.com/changlan,Generate Debian package from CI,1,[],https://github.com/NetSys/bess/pull/540,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/540,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,540,2017-06-29T19:04:09Z,2017-07-03T22:00:19Z,2018-06-30T03:44:05Z,MERGED,True,29,1,3,https://github.com/changlan,Generate Debian package from CI,1,[],https://github.com/NetSys/bess/pull/540,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/540#issuecomment-312382599,,"Codecov Report

Merging #540 into master will decrease coverage by 0.6%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #540      +/-   ##
==========================================
- Coverage   68.06%   67.45%   -0.61%     
==========================================
  Files         198      198              
  Lines       12297    12297              
==========================================
- Hits         8370     8295      -75     
- Misses       3927     4002      +75



Impacted Files
Coverage Δ





core/modules/merge.h
0% <0%> (-100%)
⬇️


core/modules/port_inc.h
0% <0%> (-100%)
⬇️


core/modules/merge.cc
25% <0%> (-75%)
⬇️


core/modules/port_inc.cc
4.47% <0%> (-67.17%)
⬇️


core/modules/worker_split.h
50% <0%> (-50%)
⬇️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/modules/set_metadata.cc
65.27% <0%> (-4.17%)
⬇️


core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️


core/utils/checksum_test.cc
99.4% <0%> (-0.6%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88ac188...6475b53. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,540,2017-06-29T19:04:09Z,2017-07-03T22:00:19Z,2018-06-30T03:44:05Z,MERGED,True,29,1,3,https://github.com/changlan,Generate Debian package from CI,1,[],https://github.com/NetSys/bess/pull/540,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/540#issuecomment-312740642,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,541,2017-06-30T05:56:58Z,2017-07-05T22:42:31Z,2017-07-05T22:43:55Z,MERGED,True,133,11,4,https://github.com/sangjinhan,Add virtio-user example for BESS<->container connection with kernel bypass,5,[],https://github.com/NetSys/bess/pull/541,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/541,"Same as #529, but for containers this time.
To allow BESS and containers (both DPDK applications) to run in the same domain, --no-shconf and --huge-unlink options to the EAL options of BESS.","Same as #529, but for containers this time.
To allow BESS and containers (both DPDK applications) to run in the same domain, --no-shconf and --huge-unlink options to the EAL options of BESS.",True,{}
NetSys/bess,https://github.com/NetSys/bess,541,2017-06-30T05:56:58Z,2017-07-05T22:42:31Z,2017-07-05T22:43:55Z,MERGED,True,133,11,4,https://github.com/sangjinhan,Add virtio-user example for BESS<->container connection with kernel bypass,5,[],https://github.com/NetSys/bess/pull/541,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/541#issuecomment-313240366,"Same as #529, but for containers this time.
To allow BESS and containers (both DPDK applications) to run in the same domain, --no-shconf and --huge-unlink options to the EAL options of BESS.","Codecov Report

Merging #541 into master will increase coverage by 0.14%.
The diff coverage is 100%.


@@            Coverage Diff            @@
##           master    #541      +/-   ##
=========================================
+ Coverage   67.46%   67.6%   +0.14%     
=========================================
  Files         198     198              
  Lines       12297   12297              
=========================================
+ Hits         8296    8314      +18     
+ Misses       4001    3983      -18



Impacted Files
Coverage Δ





core/dpdk.cc
77.9% <100%> (ø)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/modules/queue.cc
61.81% <0%> (+0.9%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88ac188...8a09e14. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,541,2017-06-30T05:56:58Z,2017-07-05T22:42:31Z,2017-07-05T22:43:55Z,MERGED,True,133,11,4,https://github.com/sangjinhan,Add virtio-user example for BESS<->container connection with kernel bypass,5,[],https://github.com/NetSys/bess/pull/541,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/541#issuecomment-313246789,"Same as #529, but for containers this time.
To allow BESS and containers (both DPDK applications) to run in the same domain, --no-shconf and --huge-unlink options to the EAL options of BESS.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,542,2017-06-30T07:41:19Z,2017-07-06T22:40:25Z,2017-07-07T21:20:49Z,MERGED,True,7,11,1,https://github.com/sangjinhan,Fix ratelimit overflow,3,[],https://github.com/NetSys/bess/pull/542,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/542,"#534 is caused by uint64_t overflow while converting resource limit in resource/s to work/cycle, if the input is greater than 2^36/s. This PR is a hot fix to increase the threshold to 2^42/s (e.g., 4.4 Tbps), which should be practically good for now.","#534 is caused by uint64_t overflow while converting resource limit in resource/s to work/cycle, if the input is greater than 2^36/s. This PR is a hot fix to increase the threshold to 2^42/s (e.g., 4.4 Tbps), which should be practically good for now.",True,{}
NetSys/bess,https://github.com/NetSys/bess,542,2017-06-30T07:41:19Z,2017-07-06T22:40:25Z,2017-07-07T21:20:49Z,MERGED,True,7,11,1,https://github.com/sangjinhan,Fix ratelimit overflow,3,[],https://github.com/NetSys/bess/pull/542,https://github.com/barath,2,https://github.com/NetSys/bess/pull/542#issuecomment-312307253,"#534 is caused by uint64_t overflow while converting resource limit in resource/s to work/cycle, if the input is greater than 2^36/s. This PR is a hot fix to increase the threshold to 2^42/s (e.g., 4.4 Tbps), which should be practically good for now.",Does this affect low end rates in any way?,True,{}
NetSys/bess,https://github.com/NetSys/bess,542,2017-06-30T07:41:19Z,2017-07-06T22:40:25Z,2017-07-07T21:20:49Z,MERGED,True,7,11,1,https://github.com/sangjinhan,Fix ratelimit overflow,3,[],https://github.com/NetSys/bess/pull/542,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/542#issuecomment-312403000,"#534 is caused by uint64_t overflow while converting resource limit in resource/s to work/cycle, if the input is greater than 2^36/s. This PR is a hot fix to increase the threshold to 2^42/s (e.g., 4.4 Tbps), which should be practically good for now.","No, it should not (in any visible way).
I realized I can just use 128-bit data types to avoid overflow. I'll push a new commit.",True,{}
NetSys/bess,https://github.com/NetSys/bess,542,2017-06-30T07:41:19Z,2017-07-06T22:40:25Z,2017-07-07T21:20:49Z,MERGED,True,7,11,1,https://github.com/sangjinhan,Fix ratelimit overflow,3,[],https://github.com/NetSys/bess/pull/542,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/542#issuecomment-313261679,"#534 is caused by uint64_t overflow while converting resource limit in resource/s to work/cycle, if the input is greater than 2^36/s. This PR is a hot fix to increase the threshold to 2^42/s (e.g., 4.4 Tbps), which should be practically good for now.","Codecov Report

Merging #542 into master will increase coverage by <.01%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #542      +/-   ##
==========================================
+ Coverage   67.46%   67.47%   +<.01%     
==========================================
  Files         198      198              
  Lines       12297    12297              
==========================================
+ Hits         8296     8297       +1     
+ Misses       4001     4000       -1



Impacted Files
Coverage Δ





core/traffic_class.h
90.32% <100%> (ø)
⬆️


core/modules/queue.cc
61.81% <0%> (+0.9%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88ac188...0b57e6c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,542,2017-06-30T07:41:19Z,2017-07-06T22:40:25Z,2017-07-07T21:20:49Z,MERGED,True,7,11,1,https://github.com/sangjinhan,Fix ratelimit overflow,3,[],https://github.com/NetSys/bess/pull/542,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/542#issuecomment-313262428,"#534 is caused by uint64_t overflow while converting resource limit in resource/s to work/cycle, if the input is greater than 2^36/s. This PR is a hot fix to increase the threshold to 2^42/s (e.g., 4.4 Tbps), which should be practically good for now.",Done.,True,{}
NetSys/bess,https://github.com/NetSys/bess,542,2017-06-30T07:41:19Z,2017-07-06T22:40:25Z,2017-07-07T21:20:49Z,MERGED,True,7,11,1,https://github.com/sangjinhan,Fix ratelimit overflow,3,[],https://github.com/NetSys/bess/pull/542,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/542#issuecomment-313538709,"#534 is caused by uint64_t overflow while converting resource limit in resource/s to work/cycle, if the input is greater than 2^36/s. This PR is a hot fix to increase the threshold to 2^42/s (e.g., 4.4 Tbps), which should be practically good for now.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,542,2017-06-30T07:41:19Z,2017-07-06T22:40:25Z,2017-07-07T21:20:49Z,MERGED,True,7,11,1,https://github.com/sangjinhan,Fix ratelimit overflow,3,[],https://github.com/NetSys/bess/pull/542,https://github.com/changlan,7,https://github.com/NetSys/bess/pull/542#issuecomment-313796003,"#534 is caused by uint64_t overflow while converting resource limit in resource/s to work/cycle, if the input is greater than 2^36/s. This PR is a hot fix to increase the threshold to 2^42/s (e.g., 4.4 Tbps), which should be practically good for now.","__int128 doesn't exist in 32-bit GCC, causing the 32-bit to fail..",True,{}
NetSys/bess,https://github.com/NetSys/bess,543,2017-06-30T18:49:05Z,2017-07-03T18:49:37Z,2017-07-03T18:49:59Z,MERGED,True,8,22,1,https://github.com/shwang,Clean up run_module_tests,1,[],https://github.com/NetSys/bess/pull/543,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/543,"return_pkt is renamed to received_pkt to match error output.
Some extra whitespace is removed.
Also fixes a bug where a socket timeout would set received_pkt
to ""None"" rather than None.","return_pkt is renamed to received_pkt to match error output.
Some extra whitespace is removed.
Also fixes a bug where a socket timeout would set received_pkt
to ""None"" rather than None.",True,{}
NetSys/bess,https://github.com/NetSys/bess,543,2017-06-30T18:49:05Z,2017-07-03T18:49:37Z,2017-07-03T18:49:59Z,MERGED,True,8,22,1,https://github.com/shwang,Clean up run_module_tests,1,[],https://github.com/NetSys/bess/pull/543,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/543#issuecomment-312397489,"return_pkt is renamed to received_pkt to match error output.
Some extra whitespace is removed.
Also fixes a bug where a socket timeout would set received_pkt
to ""None"" rather than None.","Codecov Report

Merging #543 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #543   +/-   ##
=======================================
  Coverage   67.46%   67.46%           
=======================================
  Files         198      198           
  Lines       12297    12297           
=======================================
  Hits         8296     8296           
  Misses       4001     4001



Impacted Files
Coverage Δ





core/utils/checksum_test.cc
99.4% <0%> (-0.6%)
⬇️


core/modules/queue.cc
61.81% <0%> (+0.9%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88ac188...1418bf6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,543,2017-06-30T18:49:05Z,2017-07-03T18:49:37Z,2017-07-03T18:49:59Z,MERGED,True,8,22,1,https://github.com/shwang,Clean up run_module_tests,1,[],https://github.com/NetSys/bess/pull/543,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/543#issuecomment-312713166,"return_pkt is renamed to received_pkt to match error output.
Some extra whitespace is removed.
Also fixes a bug where a socket timeout would set received_pkt
to ""None"" rather than None.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,544,2017-07-01T01:05:24Z,2017-07-03T23:20:54Z,2017-08-09T01:22:46Z,MERGED,True,8,2,1,https://github.com/melvinw,pybess: fix nested protobuf dict parsing,1,[],https://github.com/NetSys/bess/pull/544,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/544,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,544,2017-07-01T01:05:24Z,2017-07-03T23:20:54Z,2017-08-09T01:22:46Z,MERGED,True,8,2,1,https://github.com/melvinw,pybess: fix nested protobuf dict parsing,1,[],https://github.com/NetSys/bess/pull/544,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/544#issuecomment-312714388,,"Codecov Report

❗ No coverage uploaded for pull request base (master@5b50e57). Click here to learn what that means.
The diff coverage is 20%.


@@            Coverage Diff            @@
##             master     #544   +/-   ##
=========================================
  Coverage          ?   68.04%           
=========================================
  Files             ?      198           
  Lines             ?    12300           
  Branches          ?        0           
=========================================
  Hits              ?     8369           
  Misses            ?     3931           
  Partials          ?        0



Impacted Files
Coverage Δ





pybess/protobuf_to_dict.py
54.28% <20%> (ø)





Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5b50e57...a4eb7ec. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,544,2017-07-01T01:05:24Z,2017-07-03T23:20:54Z,2017-08-09T01:22:46Z,MERGED,True,8,2,1,https://github.com/melvinw,pybess: fix nested protobuf dict parsing,1,[],https://github.com/NetSys/bess/pull/544,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/544#issuecomment-312748683,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,545,2017-07-01T03:59:03Z,2017-07-03T21:57:18Z,2017-07-03T21:58:07Z,MERGED,True,2,2,1,https://github.com/shwang,Remove invalid apt-get package in ansible-playbook,3,[],https://github.com/NetSys/bess/pull/545,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/545,"The protoc package doesn't exist, and so the apt-get remove
operation that was supposed to wipe previous protobuf installs failed.","The protoc package doesn't exist, and so the apt-get remove
operation that was supposed to wipe previous protobuf installs failed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,545,2017-07-01T03:59:03Z,2017-07-03T21:57:18Z,2017-07-03T21:58:07Z,MERGED,True,2,2,1,https://github.com/shwang,Remove invalid apt-get package in ansible-playbook,3,[],https://github.com/NetSys/bess/pull/545,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/545#issuecomment-312448450,"The protoc package doesn't exist, and so the apt-get remove
operation that was supposed to wipe previous protobuf installs failed.","Codecov Report

Merging #545 into master will decrease coverage by 0.45%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master    #545      +/-   ##
=========================================
- Coverage   67.46%     67%   -0.46%     
=========================================
  Files         198     198              
  Lines       12297   12297              
=========================================
- Hits         8296    8240      -56     
- Misses       4001    4057      +56



Impacted Files
Coverage Δ





core/modules/measure.h
0% <0%> (-100%)
⬇️


core/modules/measure.cc
4.61% <0%> (-63.08%)
⬇️


core/utils/histogram.h
90.41% <0%> (-5.48%)
⬇️


core/modules/queue.cc
55.45% <0%> (-5.46%)
⬇️


core/module.h
89.93% <0%> (-0.63%)
⬇️


core/utils/checksum_test.cc
99.4% <0%> (-0.6%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88ac188...1d20241. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,545,2017-07-01T03:59:03Z,2017-07-03T21:57:18Z,2017-07-03T21:58:07Z,MERGED,True,2,2,1,https://github.com/shwang,Remove invalid apt-get package in ansible-playbook,3,[],https://github.com/NetSys/bess/pull/545,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/545#issuecomment-312549629,"The protoc package doesn't exist, and so the apt-get remove
operation that was supposed to wipe previous protobuf installs failed.","I don't know what's happening with the _32 travis builds (one succeeded, one built but died during test, one complained about unauthenticated package) but the changes themselves look good to me. I take it the HAS_SYSTEM_PROTOBUF=false is either necessary or just seems like a good idea",True,{}
NetSys/bess,https://github.com/NetSys/bess,545,2017-07-01T03:59:03Z,2017-07-03T21:57:18Z,2017-07-03T21:58:07Z,MERGED,True,2,2,1,https://github.com/shwang,Remove invalid apt-get package in ansible-playbook,3,[],https://github.com/NetSys/bess/pull/545,https://github.com/shwang,4,https://github.com/NetSys/bess/pull/545#issuecomment-312570973,"The protoc package doesn't exist, and so the apt-get remove
operation that was supposed to wipe previous protobuf installs failed.","@chris3torek: HAS_SYSTEM_PROTOBUF=false forces protobuf build in case system protobuf libs are broken. The protobuf install command that's run later in the recipe replaces system protobuf anyways.
The apt-get remove stuff doesn't cover protobuf libraries that are already installed via a manual build, which could break the build if the libraries which were installed with an incompatible version of gcc.",True,{}
NetSys/bess,https://github.com/NetSys/bess,545,2017-07-01T03:59:03Z,2017-07-03T21:57:18Z,2017-07-03T21:58:07Z,MERGED,True,2,2,1,https://github.com/shwang,Remove invalid apt-get package in ansible-playbook,3,[],https://github.com/NetSys/bess/pull/545,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/545#issuecomment-312740308,"The protoc package doesn't exist, and so the apt-get remove
operation that was supposed to wipe previous protobuf installs failed.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/546,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/546#issuecomment-312488947,,"Codecov Report

Merging #546 into master will increase coverage by 1.22%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #546      +/-   ##
==========================================
+ Coverage   67.46%   68.69%   +1.22%     
==========================================
  Files         198      198              
  Lines       12297    12297              
==========================================
+ Hits         8296     8447     +151     
+ Misses       4001     3850     -151



Impacted Files
Coverage Δ





core/modules/queue.cc
55.45% <0%> (-5.46%)
⬇️


core/module.h
89.93% <0%> (-0.63%)
⬇️


core/modules/set_metadata.cc
69.44% <0%> (+4.16%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/l2_forward.cc
50.86% <0%> (+14.94%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️


core/modules/port_inc.cc
71.64% <0%> (+67.16%)
⬆️


core/modules/merge.cc
100% <0%> (+75%)
⬆️


core/modules/port_out.cc
80% <0%> (+77.5%)
⬆️


core/modules/port_inc.h
100% <0%> (+100%)
⬆️


... and 2 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88ac188...b599b27. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/shwang,3,https://github.com/NetSys/bess/pull/546#issuecomment-312548629,,"Passes build with bess-build image that results from this pull request: https://travis-ci.org/sirspinach/bess/jobs/249493056#L1696
jk, python3 needs new scapy too",True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/shwang,4,https://github.com/NetSys/bess/pull/546#issuecomment-312693591,,"The reason python3 scapy failed in the previous comment's build is that the latest release (and the current dev build) of scapy is Python2 only. secdev/scapy#657
I'm going to disable vlan_split test for python3 only.",True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/shwang,5,https://github.com/NetSys/bess/pull/546#issuecomment-312705365,,Not ready: My python3 check seems to fire off during python2 run_tests. https://travis-ci.org/NetSys/bess/jobs/249710573#L1844,True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/shwang,6,https://github.com/NetSys/bess/pull/546#issuecomment-312705751,,"Ah nvm, this is ready. With the new bess-build image it somehow works properly? https://travis-ci.org/sirspinach/bess/jobs/249712362#L1694",True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/justinemarie,7,https://github.com/NetSys/bess/pull/546#issuecomment-313493618,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/p-l-,8,https://github.com/NetSys/bess/pull/546#issuecomment-343907617,,"Hi there,
FYI the current development version of scapy should now work under Python 3 (and if you notice something broken, you're welcome to submit it as a bug), so you may want to test your code under Python 3.",True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/shinae-woo,9,https://github.com/NetSys/bess/pull/546#issuecomment-344076399,,"@p-l-
Hi Pierre, Thank you for your feedback! BESS is tested under python3 as well and currently, it skips VLAN split tests in case of python3. Supporting VLAN for python3 would be really great!",True,{}
NetSys/bess,https://github.com/NetSys/bess,546,2017-07-02T03:47:15Z,2017-07-06T19:20:59Z,2017-12-06T12:43:39Z,MERGED,True,70,1,2,https://github.com/shwang,Add VLANSplit module test,5,[],https://github.com/NetSys/bess/pull/546,https://github.com/p-l-,10,https://github.com/NetSys/bess/pull/546#issuecomment-349628611,,"@shinae-woo Scapy should now work with Python 3, and its VLAN support should work the same with Python 2 and Python 3.",True,{}
NetSys/bess,https://github.com/NetSys/bess,547,2017-07-02T13:27:50Z,2017-07-03T21:32:17Z,2017-07-03T21:32:37Z,MERGED,True,2,0,1,https://github.com/GalSagie,Fix ignore wrong direction parameter to tcpdump,1,[],https://github.com/NetSys/bess/pull/547,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/547,"tcpdump command doesnt recognize wrong parameter to the
direction which can result in unexpected behaivour, for example
'tcpdump  output 3'
This fix make sure the direction is either 'out' or 'in'","tcpdump command doesnt recognize wrong parameter to the
direction which can result in unexpected behaivour, for example
'tcpdump  output 3'
This fix make sure the direction is either 'out' or 'in'",True,{}
NetSys/bess,https://github.com/NetSys/bess,547,2017-07-02T13:27:50Z,2017-07-03T21:32:17Z,2017-07-03T21:32:37Z,MERGED,True,2,0,1,https://github.com/GalSagie,Fix ignore wrong direction parameter to tcpdump,1,[],https://github.com/NetSys/bess/pull/547,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/547#issuecomment-312493874,"tcpdump command doesnt recognize wrong parameter to the
direction which can result in unexpected behaivour, for example
'tcpdump  output 3'
This fix make sure the direction is either 'out' or 'in'","Codecov Report

Merging #547 into master will increase coverage by 0.52%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #547      +/-   ##
==========================================
+ Coverage   67.46%   67.98%   +0.52%     
==========================================
  Files         198      198              
  Lines       12297    12298       +1     
==========================================
+ Hits         8296     8361      +65     
+ Misses       4001     3937      -64



Impacted Files
Coverage Δ





pybess/bess.py
39.67% <0%> (-0.11%)
⬇️


core/packet_avx.h
93.93% <0%> (-1.52%)
⬇️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️


core/modules/port_inc.cc
71.64% <0%> (+67.16%)
⬆️


core/modules/port_inc.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88ac188...606b69f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,547,2017-07-02T13:27:50Z,2017-07-03T21:32:17Z,2017-07-03T21:32:37Z,MERGED,True,2,0,1,https://github.com/GalSagie,Fix ignore wrong direction parameter to tcpdump,1,[],https://github.com/NetSys/bess/pull/547,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/547#issuecomment-312737294,"tcpdump command doesnt recognize wrong parameter to the
direction which can result in unexpected behaivour, for example
'tcpdump  output 3'
This fix make sure the direction is either 'out' or 'in'","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/548,Make it easier to manipulate and parse MPLS headers,Make it easier to manipulate and parse MPLS headers,True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/548#issuecomment-312498230,Make it easier to manipulate and parse MPLS headers,"Codecov Report

Merging #548 into master will increase coverage by 0.64%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #548      +/-   ##
==========================================
+ Coverage   67.46%   68.11%   +0.64%     
==========================================
  Files         198      200       +2     
  Lines       12297    12372      +75     
==========================================
+ Hits         8296     8427     +131     
+ Misses       4001     3945      -56



Impacted Files
Coverage Δ





core/modules/generic_encap.cc
77.96% <0%> (-8.31%)
⬇️


bessctl/test_samples.py
83.72% <0%> (-6.03%)
⬇️


core/bessctl.cc
48.63% <0%> (-0.18%)
⬇️


pybess/bess.py
39.67% <0%> (-0.11%)
⬇️


core/modules/exact_match.cc
80.95% <0%> (-0.09%)
⬇️


core/traffic_class.h
90.32% <0%> (ø)
⬆️


core/utils/ip.h
100% <0%> (ø)
⬆️


core/dpdk.cc
77.9% <0%> (ø)
⬆️


core/modules/mpls_pop.cc
89.65% <0%> (ø)



core/modules/mpls_pop.h
100% <0%> (ø)



... and 10 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88ac188...8efb050. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/548#issuecomment-312745002,Make it easier to manipulate and parse MPLS headers,I don't quite understand the change. Aren't bit fields much easier to use?,True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/GalSagie,4,https://github.com/NetSys/bess/pull/548#issuecomment-312844552,Make it easier to manipulate and parse MPLS headers,"I thought bit fields were easier as well, but when i started working on mpls push module, it was harder to add and manipulate with the endiannes problems.
I feel this is more C++...",True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/548#issuecomment-313745368,Make it easier to manipulate and parse MPLS headers,"How about having a union here, like (untested):
union {
  struct {
#if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__  
    uint32_t ttl: 8;
    uint32_t bottom_of_stack: 1;
    uint32_t tc: 3;
    uint32_t _label: 20;
...
#endif
  };

  be32_t tag;
}

Then only label() and set_label() would be necessary.
Also, please consider replace MPLS_LS_* macros with class static constants kLabelMask, and so on.",True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/GalSagie,6,https://github.com/NetSys/bess/pull/548#issuecomment-314021881,Make it easier to manipulate and parse MPLS headers,"Ok, addressed all comments.",True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/548#issuecomment-314175342,Make it easier to manipulate and parse MPLS headers,"Sorry, a few last nits are below. You don't need to agree with everything...

You don't need getTtl(), getTc(), and isBottomOfStack() any longer, as they are directly accessible.

Accordingly, the constants (except *Label* ones) can be removed.
setEntry(): Is it still necessary?


The only required field that requires accessor is label, which is nontrivial due to endianness:

Please consider rename label to _label, to indicate the field is not meant to be directly accessible.
getLabel() should be renamed to either label() or Label(), as per the Google style guide.
A corresponding mutator would be necessary, named either (set_label() or SetLabel()).


Please consider renaming s to bottom_of_stack.
I personally feel that the comments for the struct fields are somewhat redundant. Number of bits are already in the code, and the field names are self-contained or well-known. They repeat twice for both endians, making the code slightly verbose.
The body of label() can be simply return (tag.value() & kMplsLabelMask) >> kMplsLabelShift;, since tag is already be32_t.",True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/GalSagie,8,https://github.com/NetSys/bess/pull/548#issuecomment-314179894,Make it easier to manipulate and parse MPLS headers,"Thanks for the comments and no need to be sorry :)
I think they all make perfect sense and will address them soon",True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/GalSagie,9,https://github.com/NetSys/bess/pull/548#issuecomment-314436111,Make it easier to manipulate and parse MPLS headers,"Sorry, i tried this but found that the big/little static endianes compilation is also problematic, reverted to previous work.
Feel free to edit this after it is merged but i found out its more convenient to use this way.",True,{}
NetSys/bess,https://github.com/NetSys/bess,548,2017-07-02T14:46:27Z,2017-07-17T17:15:50Z,2017-07-17T17:16:36Z,MERGED,True,32,12,1,https://github.com/GalSagie,Improve MPLS header accessibility,5,[],https://github.com/NetSys/bess/pull/548,https://github.com/sangjinhan,10,https://github.com/NetSys/bess/pull/548#issuecomment-315819842,Make it easier to manipulate and parse MPLS headers,,True,{}
NetSys/bess,https://github.com/NetSys/bess,549,2017-07-03T20:25:38Z,2017-07-03T23:34:25Z,2017-07-03T23:44:22Z,MERGED,True,11,0,1,https://github.com/shwang,Make big endian types hashable,1,[],https://github.com/NetSys/bess/pull/549,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/549,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,549,2017-07-03T20:25:38Z,2017-07-03T23:34:25Z,2017-07-03T23:44:22Z,MERGED,True,11,0,1,https://github.com/shwang,Make big endian types hashable,1,[],https://github.com/NetSys/bess/pull/549,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/549#issuecomment-312740280,,"Codecov Report

❗ No coverage uploaded for pull request base (master@5b50e57). Click here to learn what that means.
The diff coverage is n/a.


@@           Coverage Diff            @@
##             master    #549   +/-   ##
========================================
  Coverage          ?   67.6%           
========================================
  Files             ?     198           
  Lines             ?   12297           
  Branches          ?       0           
========================================
  Hits              ?    8313           
  Misses            ?    3984           
  Partials          ?       0



Impacted Files
Coverage Δ





core/utils/endian.h
86.04% <ø> (ø)





Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5b50e57...b62e4b0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,549,2017-07-03T20:25:38Z,2017-07-03T23:34:25Z,2017-07-03T23:44:22Z,MERGED,True,11,0,1,https://github.com/shwang,Make big endian types hashable,1,[],https://github.com/NetSys/bess/pull/549,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/549#issuecomment-312749754,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,550,2017-07-03T20:28:06Z,2017-07-10T22:59:08Z,2017-07-10T22:59:27Z,MERGED,True,7,0,1,https://github.com/shwang,ethernet: add Vlan convenience struct,2,[],https://github.com/NetSys/bess/pull/550,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/550,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,550,2017-07-03T20:28:06Z,2017-07-10T22:59:08Z,2017-07-10T22:59:27Z,MERGED,True,7,0,1,https://github.com/shwang,ethernet: add Vlan convenience struct,2,[],https://github.com/NetSys/bess/pull/550,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/550#issuecomment-312735949,,"Codecov Report

Merging #550 into master will decrease coverage by 0.5%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #550      +/-   ##
==========================================
- Coverage   68.05%   67.55%   -0.51%     
==========================================
  Files         198      198              
  Lines       12298    12301       +3     
==========================================
- Hits         8370     8310      -60     
- Misses       3928     3991      +63



Impacted Files
Coverage Δ





core/utils/ether.h
83.33% <ø> (ø)
⬆️


core/modules/merge.h
0% <0%> (-100%)
⬇️


core/modules/port_inc.h
0% <0%> (-100%)
⬇️


core/modules/merge.cc
25% <0%> (-75%)
⬇️


core/modules/port_inc.cc
4.47% <0%> (-67.17%)
⬇️


core/modules/worker_split.h
50% <0%> (-50%)
⬇️


core/modules/set_metadata.cc
65.27% <0%> (-4.17%)
⬇️


core/kmod/llring.h
60.95% <0%> (-2.74%)
⬇️


pybess/protobuf_to_dict.py
54.28% <0%> (-1.6%)
⬇️


core/modules/queue.cc
60.9% <0%> (-0.91%)
⬇️


... and 2 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f461947...1eb4906. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,550,2017-07-03T20:28:06Z,2017-07-10T22:59:08Z,2017-07-10T22:59:27Z,MERGED,True,7,0,1,https://github.com/shwang,ethernet: add Vlan convenience struct,2,[],https://github.com/NetSys/bess/pull/550,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/550#issuecomment-314273609,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,551,2017-07-03T21:26:15Z,2017-07-10T23:07:17Z,2017-07-12T21:48:12Z,MERGED,True,215,152,14,https://github.com/justinemarie,Standardized Field types,15,[],https://github.com/NetSys/bess/pull/551,https://github.com/justinemarie,1,https://github.com/NetSys/bess/pull/551,"Creates generic ""Field"" and ""FieldData"" types to represent data to be written into packets. This addresses inconsistent naming and types across modules that essentially do the same thing (how many ""Field"" types do we need? :-) and also enables python scripts to supply either byte strings OR integers to insert into any fields (which was inconsistently supported previously). PR also amends WildcardMatch, GenericEncap, and ExactMatch to make use of these new standardized Field types.
RandomUpdate should be extended to do so as well, but also needs to be extended to randomly update metadata in addition to packet-data -- this can be addressed in a later PR.","Creates generic ""Field"" and ""FieldData"" types to represent data to be written into packets. This addresses inconsistent naming and types across modules that essentially do the same thing (how many ""Field"" types do we need? :-) and also enables python scripts to supply either byte strings OR integers to insert into any fields (which was inconsistently supported previously). PR also amends WildcardMatch, GenericEncap, and ExactMatch to make use of these new standardized Field types.
RandomUpdate should be extended to do so as well, but also needs to be extended to randomly update metadata in addition to packet-data -- this can be addressed in a later PR.",True,{}
NetSys/bess,https://github.com/NetSys/bess,551,2017-07-03T21:26:15Z,2017-07-10T23:07:17Z,2017-07-12T21:48:12Z,MERGED,True,215,152,14,https://github.com/justinemarie,Standardized Field types,15,[],https://github.com/NetSys/bess/pull/551,https://github.com/justinemarie,2,https://github.com/NetSys/bess/pull/551#issuecomment-312743162,"Creates generic ""Field"" and ""FieldData"" types to represent data to be written into packets. This addresses inconsistent naming and types across modules that essentially do the same thing (how many ""Field"" types do we need? :-) and also enables python scripts to supply either byte strings OR integers to insert into any fields (which was inconsistently supported previously). PR also amends WildcardMatch, GenericEncap, and ExactMatch to make use of these new standardized Field types.
RandomUpdate should be extended to do so as well, but also needs to be extended to randomly update metadata in addition to packet-data -- this can be addressed in a later PR.","I believe that is the case so far, although we have talked in the past about separate libbess-python and bessd releases -- part of the reason we haven't made such a split is that we want the freedom to change the API at will.",True,{}
NetSys/bess,https://github.com/NetSys/bess,551,2017-07-03T21:26:15Z,2017-07-10T23:07:17Z,2017-07-12T21:48:12Z,MERGED,True,215,152,14,https://github.com/justinemarie,Standardized Field types,15,[],https://github.com/NetSys/bess/pull/551,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/551#issuecomment-313537457,"Creates generic ""Field"" and ""FieldData"" types to represent data to be written into packets. This addresses inconsistent naming and types across modules that essentially do the same thing (how many ""Field"" types do we need? :-) and also enables python scripts to supply either byte strings OR integers to insert into any fields (which was inconsistently supported previously). PR also amends WildcardMatch, GenericEncap, and ExactMatch to make use of these new standardized Field types.
RandomUpdate should be extended to do so as well, but also needs to be extended to randomly update metadata in addition to packet-data -- this can be addressed in a later PR.","I think this is ready pending 32-bit bug, and assuming we'll dig into the type-ambiguity in a later PR.",True,{}
NetSys/bess,https://github.com/NetSys/bess,551,2017-07-03T21:26:15Z,2017-07-10T23:07:17Z,2017-07-12T21:48:12Z,MERGED,True,215,152,14,https://github.com/justinemarie,Standardized Field types,15,[],https://github.com/NetSys/bess/pull/551,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/551#issuecomment-314178682,"Creates generic ""Field"" and ""FieldData"" types to represent data to be written into packets. This addresses inconsistent naming and types across modules that essentially do the same thing (how many ""Field"" types do we need? :-) and also enables python scripts to supply either byte strings OR integers to insert into any fields (which was inconsistently supported previously). PR also amends WildcardMatch, GenericEncap, and ExactMatch to make use of these new standardized Field types.
RandomUpdate should be extended to do so as well, but also needs to be extended to randomly update metadata in addition to packet-data -- this can be addressed in a later PR.","Codecov Report

Merging #551 into master will increase coverage by 0.12%.
The diff coverage is 73.77%.


@@            Coverage Diff             @@
##           master     #551      +/-   ##
==========================================
+ Coverage   67.44%   67.56%   +0.12%     
==========================================
  Files         198      200       +2     
  Lines       12305    12365      +60     
==========================================
+ Hits         8299     8355      +56     
- Misses       4006     4010       +4



Impacted Files
Coverage Δ





core/modules/generic_encap.h
100% <ø> (ø)
⬆️


core/modules/wildcard_match.h
95% <ø> (ø)
⬆️


pybess/test_bess.py
100% <ø> (ø)
⬆️


core/modules/exact_match.h
94.73% <ø> (ø)
⬆️


core/modules/generic_encap.cc
77.96% <36.36%> (-8.31%)
⬇️


core/modules/wildcard_match.cc
73.5% <79.16%> (+1.69%)
⬆️


core/modules/exact_match.cc
80.95% <84.61%> (-0.09%)
⬇️


core/dpdk.cc
77.9% <0%> (ø)
⬆️


core/modules/mpls_pop.h
100% <0%> (ø)



core/modules/mpls_pop.cc
89.65% <0%> (ø)



... and 4 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 50cfc20...9b317fd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,551,2017-07-03T21:26:15Z,2017-07-10T23:07:17Z,2017-07-12T21:48:12Z,MERGED,True,215,152,14,https://github.com/justinemarie,Standardized Field types,15,[],https://github.com/NetSys/bess/pull/551,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/551#issuecomment-314265364,"Creates generic ""Field"" and ""FieldData"" types to represent data to be written into packets. This addresses inconsistent naming and types across modules that essentially do the same thing (how many ""Field"" types do we need? :-) and also enables python scripts to supply either byte strings OR integers to insert into any fields (which was inconsistently supported previously). PR also amends WildcardMatch, GenericEncap, and ExactMatch to make use of these new standardized Field types.
RandomUpdate should be extended to do so as well, but also needs to be extended to randomly update metadata in addition to packet-data -- this can be addressed in a later PR.",bump,True,{}
NetSys/bess,https://github.com/NetSys/bess,551,2017-07-03T21:26:15Z,2017-07-10T23:07:17Z,2017-07-12T21:48:12Z,MERGED,True,215,152,14,https://github.com/justinemarie,Standardized Field types,15,[],https://github.com/NetSys/bess/pull/551,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/551#issuecomment-314274931,"Creates generic ""Field"" and ""FieldData"" types to represent data to be written into packets. This addresses inconsistent naming and types across modules that essentially do the same thing (how many ""Field"" types do we need? :-) and also enables python scripts to supply either byte strings OR integers to insert into any fields (which was inconsistently supported previously). PR also amends WildcardMatch, GenericEncap, and ExactMatch to make use of these new standardized Field types.
RandomUpdate should be extended to do so as well, but also needs to be extended to randomly update metadata in addition to packet-data -- this can be addressed in a later PR.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,552,2017-07-03T23:34:28Z,2017-07-05T06:25:28Z,2017-07-06T00:26:33Z,MERGED,True,6,1,1,https://github.com/sangjinhan,Keep running python unittests after failure,1,[],https://github.com/NetSys/bess/pull/552,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/552,"At the moment, one failure causes all subsequent test cases to fail. It should not. Example:
https://travis-ci.org/NetSys/bess/jobs/248679890#L1425","At the moment, one failure causes all subsequent test cases to fail. It should not. Example:
https://travis-ci.org/NetSys/bess/jobs/248679890#L1425",True,{}
NetSys/bess,https://github.com/NetSys/bess,552,2017-07-03T23:34:28Z,2017-07-05T06:25:28Z,2017-07-06T00:26:33Z,MERGED,True,6,1,1,https://github.com/sangjinhan,Keep running python unittests after failure,1,[],https://github.com/NetSys/bess/pull/552,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/552#issuecomment-313010699,"At the moment, one failure causes all subsequent test cases to fail. It should not. Example:
https://travis-ci.org/NetSys/bess/jobs/248679890#L1425",,True,{}
NetSys/bess,https://github.com/NetSys/bess,552,2017-07-03T23:34:28Z,2017-07-05T06:25:28Z,2017-07-06T00:26:33Z,MERGED,True,6,1,1,https://github.com/sangjinhan,Keep running python unittests after failure,1,[],https://github.com/NetSys/bess/pull/552,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/552#issuecomment-313016124,"At the moment, one failure causes all subsequent test cases to fail. It should not. Example:
https://travis-ci.org/NetSys/bess/jobs/248679890#L1425","Codecov Report

Merging #552 into master will increase coverage by 0.29%.
The diff coverage is 40%.


@@            Coverage Diff            @@
##           master    #552      +/-   ##
=========================================
+ Coverage   68.01%   68.3%   +0.29%     
=========================================
  Files         198     198              
  Lines       12301   12305       +4     
=========================================
+ Hits         8366    8405      +39     
+ Misses       3935    3900      -35



Impacted Files
Coverage Δ





bessctl/test_samples.py
83.72% <40%> (-6.03%)
⬇️


core/utils/checksum_test.cc
99.4% <0%> (+0.59%)
⬆️


core/modules/merge.cc
100% <0%> (+75%)
⬆️


core/modules/port_out.cc
80% <0%> (+77.5%)
⬆️


core/modules/merge.h
100% <0%> (+100%)
⬆️


core/modules/port_out.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 76edef4...7d80172. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,553,2017-07-04T10:54:50Z,2017-07-07T21:04:53Z,2017-07-07T21:05:26Z,MERGED,True,13,0,2,https://github.com/gampel,Add prefix_length member variable to Ipv4Prefix,4,[],https://github.com/NetSys/bess/pull/553,https://github.com/gampel,1,https://github.com/NetSys/bess/pull/553,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,553,2017-07-04T10:54:50Z,2017-07-07T21:04:53Z,2017-07-07T21:05:26Z,MERGED,True,13,0,2,https://github.com/gampel,Add prefix_length member variable to Ipv4Prefix,4,[],https://github.com/NetSys/bess/pull/553,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/553#issuecomment-312857379,,"Codecov Report

Merging #553 into master will increase coverage by 0.35%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #553      +/-   ##
==========================================
+ Coverage    67.1%   67.46%   +0.35%     
==========================================
  Files         200      200              
  Lines       12335    12345      +10     
==========================================
+ Hits         8278     8329      +51     
+ Misses       4057     4016      -41



Impacted Files
Coverage Δ





core/utils/ip.cc
100% <ø> (ø)
⬆️


core/utils/ip_test.cc
97.77% <100%> (+0.55%)
⬆️


core/utils/ip.h
100% <100%> (ø)
⬆️


core/modules/queue.cc
55.45% <0%> (-5.46%)
⬇️


core/module.h
89.93% <0%> (-0.63%)
⬇️


core/utils/histogram.h
95.89% <0%> (+5.47%)
⬆️


core/modules/measure.cc
67.69% <0%> (+63.07%)
⬆️


core/modules/measure.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e934a43...1dd70ec. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,553,2017-07-04T10:54:50Z,2017-07-07T21:04:53Z,2017-07-07T21:05:26Z,MERGED,True,13,0,2,https://github.com/gampel,Add prefix_length member variable to Ipv4Prefix,4,[],https://github.com/NetSys/bess/pull/553,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/553#issuecomment-313009612,,Thanks for the PR. I am not clear about the purpose of this patch. Isn't prefix_length implied by the value of mask already?,True,{}
NetSys/bess,https://github.com/NetSys/bess,553,2017-07-04T10:54:50Z,2017-07-07T21:04:53Z,2017-07-07T21:05:26Z,MERGED,True,13,0,2,https://github.com/gampel,Add prefix_length member variable to Ipv4Prefix,4,[],https://github.com/NetSys/bess/pull/553,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/553#issuecomment-313259148,,"Yeah, perhaps you can add a method using __builtin_ffs() to retrieve the prefix length.",True,{}
NetSys/bess,https://github.com/NetSys/bess,553,2017-07-04T10:54:50Z,2017-07-07T21:04:53Z,2017-07-07T21:05:26Z,MERGED,True,13,0,2,https://github.com/gampel,Add prefix_length member variable to Ipv4Prefix,4,[],https://github.com/NetSys/bess/pull/553,https://github.com/gampel,5,https://github.com/NetSys/bess/pull/553#issuecomment-313352932,,"Will do, I will add a method using the __builtin",True,{}
NetSys/bess,https://github.com/NetSys/bess,553,2017-07-04T10:54:50Z,2017-07-07T21:04:53Z,2017-07-07T21:05:26Z,MERGED,True,13,0,2,https://github.com/gampel,Add prefix_length member variable to Ipv4Prefix,4,[],https://github.com/NetSys/bess/pull/553,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/553#issuecomment-313792743,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,554,2017-07-05T04:47:45Z,2017-07-19T19:42:52Z,2017-07-19T19:43:36Z,CLOSED,False,26,0,1,https://github.com/GalSagie,Add MAINTAINERS.rst,1,[],https://github.com/NetSys/bess/pull/554,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/554,"As any open source project it is important to understand the people that has access
to push changes to the git repository and the diversity of the community as a whole.
The list was created based on previous commits and might be missing, i also didn't add emails
but think it would be great if everyone add their own emails.","As any open source project it is important to understand the people that has access
to push changes to the git repository and the diversity of the community as a whole.
The list was created based on previous commits and might be missing, i also didn't add emails
but think it would be great if everyone add their own emails.",True,{}
NetSys/bess,https://github.com/NetSys/bess,554,2017-07-05T04:47:45Z,2017-07-19T19:42:52Z,2017-07-19T19:43:36Z,CLOSED,False,26,0,1,https://github.com/GalSagie,Add MAINTAINERS.rst,1,[],https://github.com/NetSys/bess/pull/554,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/554#issuecomment-312999357,"As any open source project it is important to understand the people that has access
to push changes to the git repository and the diversity of the community as a whole.
The list was created based on previous commits and might be missing, i also didn't add emails
but think it would be great if everyone add their own emails.","Codecov Report

Merging #554 into master will increase coverage by 0.03%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #554      +/-   ##
==========================================
+ Coverage   68.01%   68.04%   +0.03%     
==========================================
  Files         198      198              
  Lines       12301    12301              
==========================================
+ Hits         8366     8370       +4     
+ Misses       3935     3931       -4



Impacted Files
Coverage Δ





core/packet_avx.h
93.93% <0%> (-1.52%)
⬇️


core/modules/queue.cc
60.9% <0%> (-0.91%)
⬇️


core/utils/checksum_test.cc
100% <0%> (+1.19%)
⬆️


core/modules/merge.cc
100% <0%> (+75%)
⬆️


core/modules/merge.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 76edef4...74a9b3c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,554,2017-07-05T04:47:45Z,2017-07-19T19:42:52Z,2017-07-19T19:43:36Z,CLOSED,False,26,0,1,https://github.com/GalSagie,Add MAINTAINERS.rst,1,[],https://github.com/NetSys/bess/pull/554,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/554#issuecomment-316495188,"As any open source project it is important to understand the people that has access
to push changes to the git repository and the diversity of the community as a whole.
The list was created based on previous commits and might be missing, i also didn't add emails
but think it would be great if everyone add their own emails.",Resolved by #578,True,{}
NetSys/bess,https://github.com/NetSys/bess,555,2017-07-05T21:36:35Z,2017-07-06T19:53:48Z,2017-07-07T21:41:30Z,MERGED,True,1,1,1,https://github.com/chris3torek,vagrant: provision VirtualBox VM with 5GB RAM,1,[],https://github.com/NetSys/bess/pull/555,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/555,"The Wiki instructions say ""5GB"" but the Vagrantfile says ""2GB"".
When I built way back when, 2GB failed, 5GB worked.
(I've had this on my laptop for quite a while, it was when I rebuilt my vagrant-based VM yesterday I noticed it was time to send a pull request)","The Wiki instructions say ""5GB"" but the Vagrantfile says ""2GB"".
When I built way back when, 2GB failed, 5GB worked.
(I've had this on my laptop for quite a while, it was when I rebuilt my vagrant-based VM yesterday I noticed it was time to send a pull request)",True,{}
NetSys/bess,https://github.com/NetSys/bess,555,2017-07-05T21:36:35Z,2017-07-06T19:53:48Z,2017-07-07T21:41:30Z,MERGED,True,1,1,1,https://github.com/chris3torek,vagrant: provision VirtualBox VM with 5GB RAM,1,[],https://github.com/NetSys/bess/pull/555,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/555#issuecomment-313306884,"The Wiki instructions say ""5GB"" but the Vagrantfile says ""2GB"".
When I built way back when, 2GB failed, 5GB worked.
(I've had this on my laptop for quite a while, it was when I rebuilt my vagrant-based VM yesterday I noticed it was time to send a pull request)","Codecov Report

Merging #555 into master will increase coverage by 0.14%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #555      +/-   ##
==========================================
+ Coverage   67.44%   67.59%   +0.14%     
==========================================
  Files         198      198              
  Lines       12305    12305              
==========================================
+ Hits         8299     8317      +18     
+ Misses       4006     3988      -18



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️


core/utils/checksum_test.cc
100% <0%> (+0.59%)
⬆️


core/modules/queue.cc
61.81% <0%> (+0.9%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 50cfc20...f6bf304. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,555,2017-07-05T21:36:35Z,2017-07-06T19:53:48Z,2017-07-07T21:41:30Z,MERGED,True,1,1,1,https://github.com/chris3torek,vagrant: provision VirtualBox VM with 5GB RAM,1,[],https://github.com/NetSys/bess/pull/555,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/555#issuecomment-313501679,"The Wiki instructions say ""5GB"" but the Vagrantfile says ""2GB"".
When I built way back when, 2GB failed, 5GB worked.
(I've had this on my laptop for quite a while, it was when I rebuilt my vagrant-based VM yesterday I noticed it was time to send a pull request)",Nice catch!,True,{}
NetSys/bess,https://github.com/NetSys/bess,556,2017-07-06T17:18:48Z,2017-07-07T16:38:20Z,2017-07-07T16:38:20Z,CLOSED,False,6,1,2,https://github.com/chris3torek,ip_lookup: work around DPDK out-of-memory bug,3,[],https://github.com/NetSys/bess/pull/556,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/556,"This is just a small hack to try to help diagnose whatever is going wrong
with Travis CI builds (seems to disproportionally affect the _32 builds,
though this does seem to happen randomly with other builds as well).

When we call rte_lpm_create() it returns NULL if the
parameters are invalid or if it runs out of memory.
For all but the ""out of memory"" case it sets rte_errno,
but when it runs out of memory, it fails to set rte_errno
at all.  This leaves whatever per-thread value it had
in it, which can often be zero.  This causes the subsequent
""return CommandFailure(rte_errno, ...)"" to return a
failure with a zero error code, which pybess interprets
as success, so that it goes on to use the invalid data
and crashes bess.
While we probably should not crash, and perhaps should
have CommandFailure guarantee a nonzero return code or
otherwise arrange for failures to show up as failures,
we can work around this easily enough for now by pre-setting
ENOMEM as the error.","This is just a small hack to try to help diagnose whatever is going wrong
with Travis CI builds (seems to disproportionally affect the _32 builds,
though this does seem to happen randomly with other builds as well).

When we call rte_lpm_create() it returns NULL if the
parameters are invalid or if it runs out of memory.
For all but the ""out of memory"" case it sets rte_errno,
but when it runs out of memory, it fails to set rte_errno
at all.  This leaves whatever per-thread value it had
in it, which can often be zero.  This causes the subsequent
""return CommandFailure(rte_errno, ...)"" to return a
failure with a zero error code, which pybess interprets
as success, so that it goes on to use the invalid data
and crashes bess.
While we probably should not crash, and perhaps should
have CommandFailure guarantee a nonzero return code or
otherwise arrange for failures to show up as failures,
we can work around this easily enough for now by pre-setting
ENOMEM as the error.",True,{}
NetSys/bess,https://github.com/NetSys/bess,556,2017-07-06T17:18:48Z,2017-07-07T16:38:20Z,2017-07-07T16:38:20Z,CLOSED,False,6,1,2,https://github.com/chris3torek,ip_lookup: work around DPDK out-of-memory bug,3,[],https://github.com/NetSys/bess/pull/556,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/556#issuecomment-313481706,"This is just a small hack to try to help diagnose whatever is going wrong
with Travis CI builds (seems to disproportionally affect the _32 builds,
though this does seem to happen randomly with other builds as well).

When we call rte_lpm_create() it returns NULL if the
parameters are invalid or if it runs out of memory.
For all but the ""out of memory"" case it sets rte_errno,
but when it runs out of memory, it fails to set rte_errno
at all.  This leaves whatever per-thread value it had
in it, which can often be zero.  This causes the subsequent
""return CommandFailure(rte_errno, ...)"" to return a
failure with a zero error code, which pybess interprets
as success, so that it goes on to use the invalid data
and crashes bess.
While we probably should not crash, and perhaps should
have CommandFailure guarantee a nonzero return code or
otherwise arrange for failures to show up as failures,
we can work around this easily enough for now by pre-setting
ENOMEM as the error.","The travis-ci 32 bit build failed, with the new check that doesn't crash bess. So that part is good. Still not sure why the builds fail but suspect it has to do with only 512 hugepages reserved in the travis setup. The bess ip_lookup.cc module asks for memory specifically on socket 0; maybe Travis often has too few socket-zero pages available?",True,{}
NetSys/bess,https://github.com/NetSys/bess,556,2017-07-06T17:18:48Z,2017-07-07T16:38:20Z,2017-07-07T16:38:20Z,CLOSED,False,6,1,2,https://github.com/chris3torek,ip_lookup: work around DPDK out-of-memory bug,3,[],https://github.com/NetSys/bess/pull/556,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/556#issuecomment-313512017,"This is just a small hack to try to help diagnose whatever is going wrong
with Travis CI builds (seems to disproportionally affect the _32 builds,
though this does seem to happen randomly with other builds as well).

When we call rte_lpm_create() it returns NULL if the
parameters are invalid or if it runs out of memory.
For all but the ""out of memory"" case it sets rte_errno,
but when it runs out of memory, it fails to set rte_errno
at all.  This leaves whatever per-thread value it had
in it, which can often be zero.  This causes the subsequent
""return CommandFailure(rte_errno, ...)"" to return a
failure with a zero error code, which pybess interprets
as success, so that it goes on to use the invalid data
and crashes bess.
While we probably should not crash, and perhaps should
have CommandFailure guarantee a nonzero return code or
otherwise arrange for failures to show up as failures,
we can work around this easily enough for now by pre-setting
ENOMEM as the error.","Codecov Report

Merging #556 into master will increase coverage by 0.01%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #556      +/-   ##
==========================================
+ Coverage   67.44%   67.45%   +0.01%     
==========================================
  Files         200      200              
  Lines       12335    12336       +1     
==========================================
+ Hits         8319     8321       +2     
+ Misses       4016     4015       -1



Impacted Files
Coverage Δ





core/modules/ip_lookup.cc
73.55% <100%> (+0.22%)
⬆️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 550f3f9...a8d5baa. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,556,2017-07-06T17:18:48Z,2017-07-07T16:38:20Z,2017-07-07T16:38:20Z,CLOSED,False,6,1,2,https://github.com/chris3torek,ip_lookup: work around DPDK out-of-memory bug,3,[],https://github.com/NetSys/bess/pull/556,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/556#issuecomment-313732053,"This is just a small hack to try to help diagnose whatever is going wrong
with Travis CI builds (seems to disproportionally affect the _32 builds,
though this does seem to happen randomly with other builds as well).

When we call rte_lpm_create() it returns NULL if the
parameters are invalid or if it runs out of memory.
For all but the ""out of memory"" case it sets rte_errno,
but when it runs out of memory, it fails to set rte_errno
at all.  This leaves whatever per-thread value it had
in it, which can often be zero.  This causes the subsequent
""return CommandFailure(rte_errno, ...)"" to return a
failure with a zero error code, which pybess interprets
as success, so that it goes on to use the invalid data
and crashes bess.
While we probably should not crash, and perhaps should
have CommandFailure guarantee a nonzero return code or
otherwise arrange for failures to show up as failures,
we can work around this easily enough for now by pre-setting
ENOMEM as the error.","retracting this for now, the travis build failed weirdly and I want to put it on a branch anyway",True,{}
NetSys/bess,https://github.com/NetSys/bess,557,2017-07-06T19:33:14Z,2017-07-17T17:18:15Z,2017-07-17T17:20:19Z,MERGED,True,58,3,4,https://github.com/shwang,pybess: Fix protobuf dict parsing to map field,4,[],https://github.com/NetSys/bess/pull/557,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/557,"Currently, map fields in protobuf messages cannot be parsed from
dictionaries because the parsing function expects dictionary
values to also be dictionaries. (Rather than plain old data,
as is found in maps).
Before recursing on dictionary contents, first check that every
value in the dictionary is also a dictionary. Also add unit tests
to confirm proper parsing for both nested and unnested dictionaries.","Currently, map fields in protobuf messages cannot be parsed from
dictionaries because the parsing function expects dictionary
values to also be dictionaries. (Rather than plain old data,
as is found in maps).
Before recursing on dictionary contents, first check that every
value in the dictionary is also a dictionary. Also add unit tests
to confirm proper parsing for both nested and unnested dictionaries.",True,{}
NetSys/bess,https://github.com/NetSys/bess,557,2017-07-06T19:33:14Z,2017-07-17T17:18:15Z,2017-07-17T17:20:19Z,MERGED,True,58,3,4,https://github.com/shwang,pybess: Fix protobuf dict parsing to map field,4,[],https://github.com/NetSys/bess/pull/557,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/557#issuecomment-314178814,"Currently, map fields in protobuf messages cannot be parsed from
dictionaries because the parsing function expects dictionary
values to also be dictionaries. (Rather than plain old data,
as is found in maps).
Before recursing on dictionary contents, first check that every
value in the dictionary is also a dictionary. Also add unit tests
to confirm proper parsing for both nested and unnested dictionaries.","Codecov Report

Merging #557 into master will decrease coverage by 0.06%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #557      +/-   ##
==========================================
- Coverage    67.7%   67.64%   -0.07%     
==========================================
  Files         200      200              
  Lines       12372    12393      +21     
==========================================
+ Hits         8377     8383       +6     
- Misses       3995     4010      +15



Impacted Files
Coverage Δ





pybess/test_protobuf_to_dict.py
100% <100%> (ø)
⬆️


pybess/protobuf_to_dict.py
59.04% <100%> (+2.85%)
⬆️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/utils/checksum_test.cc
98.8% <0%> (-1.2%)
⬇️


core/modules/queue.cc
60.9% <0%> (-0.91%)
⬇️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ec6dbc9...ff6092b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,557,2017-07-06T19:33:14Z,2017-07-17T17:18:15Z,2017-07-17T17:20:19Z,MERGED,True,58,3,4,https://github.com/shwang,pybess: Fix protobuf dict parsing to map field,4,[],https://github.com/NetSys/bess/pull/557,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/557#issuecomment-314273428,"Currently, map fields in protobuf messages cannot be parsed from
dictionaries because the parsing function expects dictionary
values to also be dictionaries. (Rather than plain old data,
as is found in maps).
Before recursing on dictionary contents, first check that every
value in the dictionary is also a dictionary. Also add unit tests
to confirm proper parsing for both nested and unnested dictionaries.",I am a bit hesitant to add a test file in the protobuf/. Perhaps you can have the .proto file in pybess/ and dynamically generate pb.py file in test_protobuf_to_dict.py if import fails?,True,{}
NetSys/bess,https://github.com/NetSys/bess,557,2017-07-06T19:33:14Z,2017-07-17T17:18:15Z,2017-07-17T17:20:19Z,MERGED,True,58,3,4,https://github.com/shwang,pybess: Fix protobuf dict parsing to map field,4,[],https://github.com/NetSys/bess/pull/557,https://github.com/shwang,4,https://github.com/NetSys/bess/pull/557#issuecomment-314870737,"Currently, map fields in protobuf messages cannot be parsed from
dictionaries because the parsing function expects dictionary
values to also be dictionaries. (Rather than plain old data,
as is found in maps).
Before recursing on dictionary contents, first check that every
value in the dictionary is also a dictionary. Also add unit tests
to confirm proper parsing for both nested and unnested dictionaries.","@sangjinhan It looks like dynamic protobuf compilation won't work outside of the container b/c protoc is not available. What do you think about modifying ""coverage2 python -m unittest discover"" to run within the container?",True,{}
NetSys/bess,https://github.com/NetSys/bess,557,2017-07-06T19:33:14Z,2017-07-17T17:18:15Z,2017-07-17T17:20:19Z,MERGED,True,58,3,4,https://github.com/shwang,pybess: Fix protobuf dict parsing to map field,4,[],https://github.com/NetSys/bess/pull/557,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/557#issuecomment-314907658,"Currently, map fields in protobuf messages cannot be parsed from
dictionaries because the parsing function expects dictionary
values to also be dictionaries. (Rather than plain old data,
as is found in maps).
Before recursing on dictionary contents, first check that every
value in the dictionary is also a dictionary. Also add unit tests
to confirm proper parsing for both nested and unnested dictionaries.","Oh I see. The unittest must run outside the container though... One alternative would be creating protobuf/tests and moving the file (renamed.... nested_dict.proto?) into the directory. What we want is not mixing real protobuf files and test files, nothing more :)",True,{}
NetSys/bess,https://github.com/NetSys/bess,557,2017-07-06T19:33:14Z,2017-07-17T17:18:15Z,2017-07-17T17:20:19Z,MERGED,True,58,3,4,https://github.com/shwang,pybess: Fix protobuf dict parsing to map field,4,[],https://github.com/NetSys/bess/pull/557,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/557#issuecomment-315820463,"Currently, map fields in protobuf messages cannot be parsed from
dictionaries because the parsing function expects dictionary
values to also be dictionaries. (Rather than plain old data,
as is found in maps).
Before recursing on dictionary contents, first check that every
value in the dictionary is also a dictionary. Also add unit tests
to confirm proper parsing for both nested and unnested dictionaries.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,559,2017-07-07T20:37:00Z,2017-07-12T21:53:45Z,2017-07-12T21:54:46Z,MERGED,True,1,1,1,https://github.com/gampel,Fix removing unrelated packages in ansible script,2,[],https://github.com/NetSys/bess/pull/559,https://github.com/gampel,1,https://github.com/NetSys/bess/pull/559,"If the expreation contains '*' then it is assumed to be
a POSIX-style regular expression, and it is applied to
all package names in the database.
It is recommanded to anchor the regular expression with
a ^ to avoid removing of unrelated packges.
The the reg expression  ""libprotobuf*"" include
""libprotobuf-lite9v5"" which is needed in many pacakges that
will be removed by that in ubuntu 16.04 like  ubuntu-desktop
ubuntu-docs ubuntu-mono and other.","If the expreation contains '*' then it is assumed to be
a POSIX-style regular expression, and it is applied to
all package names in the database.
It is recommanded to anchor the regular expression with
a ^ to avoid removing of unrelated packges.
The the reg expression  ""libprotobuf*"" include
""libprotobuf-lite9v5"" which is needed in many pacakges that
will be removed by that in ubuntu 16.04 like  ubuntu-desktop
ubuntu-docs ubuntu-mono and other.",True,{}
NetSys/bess,https://github.com/NetSys/bess,559,2017-07-07T20:37:00Z,2017-07-12T21:53:45Z,2017-07-12T21:54:46Z,MERGED,True,1,1,1,https://github.com/gampel,Fix removing unrelated packages in ansible script,2,[],https://github.com/NetSys/bess/pull/559,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/559#issuecomment-313836809,"If the expreation contains '*' then it is assumed to be
a POSIX-style regular expression, and it is applied to
all package names in the database.
It is recommanded to anchor the regular expression with
a ^ to avoid removing of unrelated packges.
The the reg expression  ""libprotobuf*"" include
""libprotobuf-lite9v5"" which is needed in many pacakges that
will be removed by that in ubuntu 16.04 like  ubuntu-desktop
ubuntu-docs ubuntu-mono and other.","Codecov Report

Merging #559 into master will increase coverage by 0.05%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #559      +/-   ##
==========================================
+ Coverage   67.44%   67.49%   +0.05%     
==========================================
  Files         200      200              
  Lines       12335    12335              
==========================================
+ Hits         8319     8326       +7     
+ Misses       4016     4009       -7



Impacted Files
Coverage Δ





core/utils/checksum_test.cc
99.4% <0%> (-0.6%)
⬇️


core/module.h
90.56% <0%> (+0.62%)
⬆️


core/modules/queue.cc
61.81% <0%> (+6.36%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 550f3f9...b85da1b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,559,2017-07-07T20:37:00Z,2017-07-12T21:53:45Z,2017-07-12T21:54:46Z,MERGED,True,1,1,1,https://github.com/gampel,Fix removing unrelated packages in ansible script,2,[],https://github.com/NetSys/bess/pull/559,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/559#issuecomment-314908675,"If the expreation contains '*' then it is assumed to be
a POSIX-style regular expression, and it is applied to
all package names in the database.
It is recommanded to anchor the regular expression with
a ^ to avoid removing of unrelated packges.
The the reg expression  ""libprotobuf*"" include
""libprotobuf-lite9v5"" which is needed in many pacakges that
will be removed by that in ubuntu 16.04 like  ubuntu-desktop
ubuntu-docs ubuntu-mono and other.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,560,2017-07-07T21:33:04Z,2017-07-11T01:02:37Z,2017-07-11T01:02:37Z,CLOSED,False,5,0,2,https://github.com/chris3torek,another test to run under travis-ci,4,['notready'],https://github.com/NetSys/bess/pull/560,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/560,"There's some chance a tricky --base-virtaddr argument might help, this is just to find out whether that's the case.","There's some chance a tricky --base-virtaddr argument might help, this is just to find out whether that's the case.",True,{}
NetSys/bess,https://github.com/NetSys/bess,562,2017-07-07T22:39:53Z,2017-07-10T17:23:50Z,2017-07-12T21:48:05Z,MERGED,True,7,4,1,https://github.com/changlan,Set default GCC version to 5 in the image,1,[],https://github.com/NetSys/bess/pull/562,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/562,"./container_build.py was still using GCC 4 by default, but BESS rejects lower versions than 5. As a result, users had to manually export CXX=g++-5 even with ./container_build.py. This PR sets g++-5 to be the default version, and the image on the Docker Hub is updated as well.","./container_build.py was still using GCC 4 by default, but BESS rejects lower versions than 5. As a result, users had to manually export CXX=g++-5 even with ./container_build.py. This PR sets g++-5 to be the default version, and the image on the Docker Hub is updated as well.",True,{}
NetSys/bess,https://github.com/NetSys/bess,562,2017-07-07T22:39:53Z,2017-07-10T17:23:50Z,2017-07-12T21:48:05Z,MERGED,True,7,4,1,https://github.com/changlan,Set default GCC version to 5 in the image,1,[],https://github.com/NetSys/bess/pull/562,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/562#issuecomment-314175723,"./container_build.py was still using GCC 4 by default, but BESS rejects lower versions than 5. As a result, users had to manually export CXX=g++-5 even with ./container_build.py. This PR sets g++-5 to be the default version, and the image on the Docker Hub is updated as well.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,563,2017-07-08T00:38:18Z,2017-07-10T16:54:23Z,2017-07-12T21:48:04Z,MERGED,True,9,0,1,https://github.com/chris3torek,Fix ratelimit overflow,1,[],https://github.com/NetSys/bess/pull/563,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/563,"👍 Let's have Travis build this (I've already looked at it, it looks good to me)","👍 Let's have Travis build this (I've already looked at it, it looks good to me)",True,{}
NetSys/bess,https://github.com/NetSys/bess,563,2017-07-08T00:38:18Z,2017-07-10T16:54:23Z,2017-07-12T21:48:04Z,MERGED,True,9,0,1,https://github.com/chris3torek,Fix ratelimit overflow,1,[],https://github.com/NetSys/bess/pull/563,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/563#issuecomment-313822400,"👍 Let's have Travis build this (I've already looked at it, it looks good to me)","(ugh, travis won't build it because of merge conflict)",True,{}
NetSys/bess,https://github.com/NetSys/bess,563,2017-07-08T00:38:18Z,2017-07-10T16:54:23Z,2017-07-12T21:48:04Z,MERGED,True,9,0,1,https://github.com/chris3torek,Fix ratelimit overflow,1,[],https://github.com/NetSys/bess/pull/563,https://github.com/justinemarie,3,https://github.com/NetSys/bess/pull/563#issuecomment-313823011,"👍 Let's have Travis build this (I've already looked at it, it looks good to me)","Git pull --rebase origin master?

Sent from my rotary phone.
…
On Jul 7, 2017 5:43 PM, ""Chris Torek"" ***@***.***> wrote:
 (ugh, travis won't build it because of merge conflict)

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#563 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FlH-6kVVrt0MV8_sedWDrJVjrqfzks5sLtCYgaJpZM4ORkhE>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,563,2017-07-08T00:38:18Z,2017-07-10T16:54:23Z,2017-07-12T21:48:04Z,MERGED,True,9,0,1,https://github.com/chris3torek,Fix ratelimit overflow,1,[],https://github.com/NetSys/bess/pull/563,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/563#issuecomment-313837219,"👍 Let's have Travis build this (I've already looked at it, it looks good to me)",I just did the rebase. Let's see how it goes.,True,{}
NetSys/bess,https://github.com/NetSys/bess,563,2017-07-08T00:38:18Z,2017-07-10T16:54:23Z,2017-07-12T21:48:04Z,MERGED,True,9,0,1,https://github.com/chris3torek,Fix ratelimit overflow,1,[],https://github.com/NetSys/bess/pull/563,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/563#issuecomment-313839311,"👍 Let's have Travis build this (I've already looked at it, it looks good to me)","Codecov Report

Merging #563 into master will increase coverage by 0.04%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #563      +/-   ##
==========================================
+ Coverage   67.48%   67.52%   +0.04%     
==========================================
  Files         200      200              
  Lines       12345    12345              
==========================================
+ Hits         8331     8336       +5     
+ Misses       4014     4009       -5



Impacted Files
Coverage Δ





core/traffic_class.h
90.32% <ø> (ø)
⬆️


core/utils/checksum_test.cc
99.4% <0%> (ø)
⬆️


core/modules/queue.cc
61.81% <0%> (+0.9%)
⬆️


core/kmod/llring.h
63.69% <0%> (+2.73%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 59b1c65...5f636af. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,563,2017-07-08T00:38:18Z,2017-07-10T16:54:23Z,2017-07-12T21:48:04Z,MERGED,True,9,0,1,https://github.com/chris3torek,Fix ratelimit overflow,1,[],https://github.com/NetSys/bess/pull/563,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/563#issuecomment-314175835,"👍 Let's have Travis build this (I've already looked at it, it looks good to me)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,564,2017-07-10T21:05:22Z,2017-07-11T00:45:45Z,2017-07-12T21:48:07Z,MERGED,True,4,4,2,https://github.com/sangjinhan,Do not generate per-packet log in non-verbose mode,1,[],https://github.com/NetSys/bess/pull/564,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/564,"For TCP stream reconstruction, packet loss or out-of-order arrival is rather common. URLFilter module generates per-packet log messages in such cases, which is too verbose. DLOG(WARNING) messages were replaced with VLOG(1), so as to be printed only with --v=1 or higher.","For TCP stream reconstruction, packet loss or out-of-order arrival is rather common. URLFilter module generates per-packet log messages in such cases, which is too verbose. DLOG(WARNING) messages were replaced with VLOG(1), so as to be printed only with --v=1 or higher.",True,{}
NetSys/bess,https://github.com/NetSys/bess,564,2017-07-10T21:05:22Z,2017-07-11T00:45:45Z,2017-07-12T21:48:07Z,MERGED,True,4,4,2,https://github.com/sangjinhan,Do not generate per-packet log in non-verbose mode,1,[],https://github.com/NetSys/bess/pull/564,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/564#issuecomment-314273311,"For TCP stream reconstruction, packet loss or out-of-order arrival is rather common. URLFilter module generates per-packet log messages in such cases, which is too verbose. DLOG(WARNING) messages were replaced with VLOG(1), so as to be printed only with --v=1 or higher.","Codecov Report

Merging #564 into master will decrease coverage by 0.04%.
The diff coverage is 50%.


@@            Coverage Diff             @@
##           master     #564      +/-   ##
==========================================
- Coverage   67.52%   67.47%   -0.05%     
==========================================
  Files         200      200              
  Lines       12345    12345              
==========================================
- Hits         8336     8330       -6     
- Misses       4009     4015       +6



Impacted Files
Coverage Δ





core/modules/url_filter.cc
55.55% <100%> (ø)
⬆️


core/utils/tcp_flow_reconstruct.h
93.61% <33.33%> (ø)
⬆️


core/modules/queue.cc
55.45% <0%> (-6.37%)
⬇️


core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️


core/module.h
89.93% <0%> (-0.63%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/utils/checksum_test.cc
100% <0%> (+1.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b0a1846...5edd57c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,564,2017-07-10T21:05:22Z,2017-07-11T00:45:45Z,2017-07-12T21:48:07Z,MERGED,True,4,4,2,https://github.com/sangjinhan,Do not generate per-packet log in non-verbose mode,1,[],https://github.com/NetSys/bess/pull/564,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/564#issuecomment-314290276,"For TCP stream reconstruction, packet loss or out-of-order arrival is rather common. URLFilter module generates per-packet log messages in such cases, which is too verbose. DLOG(WARNING) messages were replaced with VLOG(1), so as to be printed only with --v=1 or higher.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,565,2017-07-10T22:15:15Z,2017-07-10T22:45:15Z,2017-07-10T22:45:36Z,MERGED,True,0,4,1,https://github.com/apanda,Reduce message logging,1,[],https://github.com/NetSys/bess/pull/565,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/565,"This change removes logging when constraints are not violated, thus
reducing log verbosity.","This change removes logging when constraints are not violated, thus
reducing log verbosity.",True,{}
NetSys/bess,https://github.com/NetSys/bess,565,2017-07-10T22:15:15Z,2017-07-10T22:45:15Z,2017-07-10T22:45:36Z,MERGED,True,0,4,1,https://github.com/apanda,Reduce message logging,1,[],https://github.com/NetSys/bess/pull/565,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/565#issuecomment-314271329,"This change removes logging when constraints are not violated, thus
reducing log verbosity.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,566,2017-07-10T22:51:23Z,2017-07-11T01:00:04Z,2017-07-11T20:01:50Z,MERGED,True,2,1,1,https://github.com/sangjinhan,Allocate hugepages before installing dependencies,1,[],https://github.com/NetSys/bess/pull/566,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/566,This may suppress the IPLookup module failure on Travis with 32bit arch....,This may suppress the IPLookup module failure on Travis with 32bit arch....,True,{}
NetSys/bess,https://github.com/NetSys/bess,566,2017-07-10T22:51:23Z,2017-07-11T01:00:04Z,2017-07-11T20:01:50Z,MERGED,True,2,1,1,https://github.com/sangjinhan,Allocate hugepages before installing dependencies,1,[],https://github.com/NetSys/bess/pull/566,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/566#issuecomment-314282837,This may suppress the IPLookup module failure on Travis with 32bit arch....,"Codecov Report

❗ No coverage uploaded for pull request base (master@7315899). Click here to learn what that means.
The diff coverage is n/a.


@@            Coverage Diff            @@
##             master     #566   +/-   ##
=========================================
  Coverage          ?   67.72%           
=========================================
  Files             ?      200           
  Lines             ?    12372           
  Branches          ?        0           
=========================================
  Hits              ?     8379           
  Misses            ?     3993           
  Partials          ?        0

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7315899...e2d96dc. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,566,2017-07-10T22:51:23Z,2017-07-11T01:00:04Z,2017-07-11T20:01:50Z,MERGED,True,2,1,1,https://github.com/sangjinhan,Allocate hugepages before installing dependencies,1,[],https://github.com/NetSys/bess/pull/566,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/566#issuecomment-314292388,This may suppress the IPLookup module failure on Travis with 32bit arch....,,True,{}
NetSys/bess,https://github.com/NetSys/bess,566,2017-07-10T22:51:23Z,2017-07-11T01:00:04Z,2017-07-11T20:01:50Z,MERGED,True,2,1,1,https://github.com/sangjinhan,Allocate hugepages before installing dependencies,1,[],https://github.com/NetSys/bess/pull/566,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/566#issuecomment-314541185,This may suppress the IPLookup module failure on Travis with 32bit arch....,"Hi Sami!
(Is she/he Finn?)",True,{}
NetSys/bess,https://github.com/NetSys/bess,566,2017-07-10T22:51:23Z,2017-07-11T01:00:04Z,2017-07-11T20:01:50Z,MERGED,True,2,1,1,https://github.com/sangjinhan,Allocate hugepages before installing dependencies,1,[],https://github.com/NetSys/bess/pull/566,https://github.com/chris3torek,5,https://github.com/NetSys/bess/pull/566#issuecomment-314555196,This may suppress the IPLookup module failure on Travis with 32bit arch....,"No, she's just ""Siam spelled sideways"". Sami was an orphan kitten added to the two I was fostering and then ended up adopting (""failed foster"", as they call it). To avoid getting too attached, I gave them temporary names: Thing 1 (Alice or Trouble), Thing 2 (whichever one wasn't Thing 1), and Sam-I-Am, all from The Cat in the Hat.  Then Sam-I-Am shortened to Sam-I => Sami....",True,{}
NetSys/bess,https://github.com/NetSys/bess,567,2017-07-12T21:47:39Z,2017-07-12T21:49:02Z,2017-07-12T23:17:25Z,MERGED,True,1,1,1,https://github.com/changlan,Fix missing semicolon in .travis.yml,1,[],https://github.com/NetSys/bess/pull/567,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/567,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,568,2017-07-12T23:06:09Z,2017-07-17T17:21:36Z,2017-07-17T23:10:21Z,MERGED,True,1,2,1,https://github.com/changlan,Manually install ffi package for fpm,1,[],https://github.com/NetSys/bess/pull/568,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/568,.. To resolve the issue that appears in https://travis-ci.org/NetSys/bess/jobs/252988223,.. To resolve the issue that appears in https://travis-ci.org/NetSys/bess/jobs/252988223,True,{}
NetSys/bess,https://github.com/NetSys/bess,568,2017-07-12T23:06:09Z,2017-07-17T17:21:36Z,2017-07-17T23:10:21Z,MERGED,True,1,2,1,https://github.com/changlan,Manually install ffi package for fpm,1,[],https://github.com/NetSys/bess/pull/568,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/568#issuecomment-314930992,.. To resolve the issue that appears in https://travis-ci.org/NetSys/bess/jobs/252988223,"Codecov Report

Merging #568 into master will decrease coverage by 0.13%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #568      +/-   ##
==========================================
- Coverage    67.7%   67.57%   -0.14%     
==========================================
  Files         200      200              
  Lines       12372    12372              
==========================================
- Hits         8377     8360      -17     
- Misses       3995     4012      +17



Impacted Files
Coverage Δ





core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/modules/queue.cc
60.9% <0%> (-0.91%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ec6dbc9...f66904b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,568,2017-07-12T23:06:09Z,2017-07-17T17:21:36Z,2017-07-17T23:10:21Z,MERGED,True,1,2,1,https://github.com/changlan,Manually install ffi package for fpm,1,[],https://github.com/NetSys/bess/pull/568,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/568#issuecomment-315821470,.. To resolve the issue that appears in https://travis-ci.org/NetSys/bess/jobs/252988223,,True,{}
NetSys/bess,https://github.com/NetSys/bess,569,2017-07-13T18:02:21Z,2017-07-13T22:12:25Z,2017-07-14T18:29:14Z,MERGED,True,88,58,27,https://github.com/barath,Names module command thread safety args for clarity.,1,[],https://github.com/NetSys/bess/pull/569,https://github.com/barath,1,https://github.com/NetSys/bess/pull/569,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,569,2017-07-13T18:02:21Z,2017-07-13T22:12:25Z,2017-07-14T18:29:14Z,MERGED,True,88,58,27,https://github.com/barath,Names module command thread safety args for clarity.,1,[],https://github.com/NetSys/bess/pull/569,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/569#issuecomment-315166648,,"Codecov Report

Merging #569 into master will increase coverage by <.01%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #569      +/-   ##
==========================================
+ Coverage    67.7%   67.71%   +<.01%     
==========================================
  Files         200      200              
  Lines       12372    12372              
==========================================
+ Hits         8377     8378       +1     
+ Misses       3995     3994       -1



Impacted Files
Coverage Δ





core/modules/dump.cc
12.5% <ø> (ø)
⬆️


core/modules/vlan_push.cc
100% <ø> (ø)
⬆️


core/modules/measure.cc
67.69% <ø> (ø)
⬆️


core/modules/round_robin.cc
53.19% <ø> (ø)
⬆️


core/modules/rewrite.cc
88.7% <ø> (ø)
⬆️


core/modules/random_update.cc
81.35% <ø> (ø)
⬆️


core/module.h
90.56% <ø> (ø)
⬆️


core/modules/source.cc
76.31% <ø> (ø)
⬆️


core/modules/replicate.cc
76.47% <ø> (ø)
⬆️


core/modules/queue.cc
61.81% <ø> (ø)
⬆️


... and 18 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ec6dbc9...5cb4413. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,569,2017-07-13T18:02:21Z,2017-07-13T22:12:25Z,2017-07-14T18:29:14Z,MERGED,True,88,58,27,https://github.com/barath,Names module command thread safety args for clarity.,1,[],https://github.com/NetSys/bess/pull/569,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/569#issuecomment-315216421,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,570,2017-07-13T22:17:28Z,2017-07-14T02:45:30Z,2017-07-14T18:29:15Z,MERGED,True,31,1,4,https://github.com/barath,Adds a queue command to get the queue's occupancy.,2,[],https://github.com/NetSys/bess/pull/570,https://github.com/barath,1,https://github.com/NetSys/bess/pull/570,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,570,2017-07-13T22:17:28Z,2017-07-14T02:45:30Z,2017-07-14T18:29:15Z,MERGED,True,31,1,4,https://github.com/barath,Adds a queue command to get the queue's occupancy.,2,[],https://github.com/NetSys/bess/pull/570,https://github.com/barath,2,https://github.com/NetSys/bess/pull/570#issuecomment-315224657,,Done.,True,{}
NetSys/bess,https://github.com/NetSys/bess,570,2017-07-13T22:17:28Z,2017-07-14T02:45:30Z,2017-07-14T18:29:15Z,MERGED,True,31,1,4,https://github.com/barath,Adds a queue command to get the queue's occupancy.,2,[],https://github.com/NetSys/bess/pull/570,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/570#issuecomment-315226767,,"Codecov Report

Merging #570 into master will decrease coverage by 0.08%.
The diff coverage is 16.66%.


@@            Coverage Diff             @@
##           master     #570      +/-   ##
==========================================
- Coverage   67.58%   67.49%   -0.09%     
==========================================
  Files         200      200              
  Lines       12372    12377       +5     
==========================================
- Hits         8361     8354       -7     
- Misses       4011     4023      +12



Impacted Files
Coverage Δ





core/modules/queue.h
100% <ø> (ø)
⬆️


core/modules/queue.cc
53.04% <16.66%> (-7.87%)
⬇️


core/module.h
89.93% <0%> (-0.63%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 92ce409...5e45161. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,570,2017-07-13T22:17:28Z,2017-07-14T02:45:30Z,2017-07-14T18:29:15Z,MERGED,True,31,1,4,https://github.com/barath,Adds a queue command to get the queue's occupancy.,2,[],https://github.com/NetSys/bess/pull/570,https://github.com/vivi,4,https://github.com/NetSys/bess/pull/570#issuecomment-315227886,,"Queue::GetDesc has the same logic, maybe make QueueCommandGetStatusResponse contain a string instead?",True,{}
NetSys/bess,https://github.com/NetSys/bess,570,2017-07-13T22:17:28Z,2017-07-14T02:45:30Z,2017-07-14T18:29:15Z,MERGED,True,31,1,4,https://github.com/barath,Adds a queue command to get the queue's occupancy.,2,[],https://github.com/NetSys/bess/pull/570,https://github.com/barath,5,https://github.com/NetSys/bess/pull/570#issuecomment-315249941,,Yeah -- unfortunately I want the numbers rather than a string representation.  I thought about changing GetDesc but it's so simple that it seemed the extra layer of indirection wasn't worth it.,True,{}
NetSys/bess,https://github.com/NetSys/bess,570,2017-07-13T22:17:28Z,2017-07-14T02:45:30Z,2017-07-14T18:29:15Z,MERGED,True,31,1,4,https://github.com/barath,Adds a queue command to get the queue's occupancy.,2,[],https://github.com/NetSys/bess/pull/570,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/570#issuecomment-315254928,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,571,2017-07-14T14:50:02Z,2017-07-14T18:09:47Z,2017-07-14T18:10:14Z,MERGED,True,6,5,1,https://github.com/gampel,prefetch must be done prior to running next module,1,[],https://github.com/NetSys/bess/pull/571,https://github.com/gampel,1,https://github.com/NetSys/bess/pull/571,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,571,2017-07-14T14:50:02Z,2017-07-14T18:09:47Z,2017-07-14T18:10:14Z,MERGED,True,6,5,1,https://github.com/gampel,prefetch must be done prior to running next module,1,[],https://github.com/NetSys/bess/pull/571,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/571#issuecomment-315389809,,"Codecov Report

Merging #571 into master will decrease coverage by 0.54%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #571      +/-   ##
==========================================
- Coverage   67.69%   67.15%   -0.55%     
==========================================
  Files         200      200              
  Lines       12377    12377              
==========================================
- Hits         8379     8312      -67     
- Misses       3998     4065      +67



Impacted Files
Coverage Δ





core/modules/queue.cc
58.26% <100%> (ø)
⬆️


core/modules/measure.h
0% <0%> (-100%)
⬇️


core/modules/measure.cc
4.61% <0%> (-63.08%)
⬇️


core/modules/worker_split.h
50% <0%> (-50%)
⬇️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/utils/histogram.h
90.41% <0%> (-5.48%)
⬇️


core/packet_avx.h
93.93% <0%> (-1.52%)
⬇️


core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5a42a77...9296a71. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,571,2017-07-14T14:50:02Z,2017-07-14T18:09:47Z,2017-07-14T18:10:14Z,MERGED,True,6,5,1,https://github.com/gampel,prefetch must be done prior to running next module,1,[],https://github.com/NetSys/bess/pull/571,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/571#issuecomment-315428477,,"Excellent, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,572,2017-07-14T21:50:27Z,2017-07-17T21:50:24Z,2017-07-17T23:10:10Z,MERGED,True,188,216,8,https://github.com/sangjinhan,Remove Traverse() feature from TC trees,9,[],https://github.com/NetSys/bess/pull/572,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/572,"It has been observed a couple of times on Travis that TrafficClass::Traverse() gets stuck in an infinite loop. While its cause is unknown yet, the tree traversal mechanism of Traverse() doesn't seem to be strictly necessary; all it use cases can be replaced with simple iteration over all TCs. I hope this simpler implementation makes the bug less likely to occur...","It has been observed a couple of times on Travis that TrafficClass::Traverse() gets stuck in an infinite loop. While its cause is unknown yet, the tree traversal mechanism of Traverse() doesn't seem to be strictly necessary; all it use cases can be replaced with simple iteration over all TCs. I hope this simpler implementation makes the bug less likely to occur...",True,{}
NetSys/bess,https://github.com/NetSys/bess,572,2017-07-14T21:50:27Z,2017-07-17T21:50:24Z,2017-07-17T23:10:10Z,MERGED,True,188,216,8,https://github.com/sangjinhan,Remove Traverse() feature from TC trees,9,[],https://github.com/NetSys/bess/pull/572,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/572#issuecomment-315482932,"It has been observed a couple of times on Travis that TrafficClass::Traverse() gets stuck in an infinite loop. While its cause is unknown yet, the tree traversal mechanism of Traverse() doesn't seem to be strictly necessary; all it use cases can be replaced with simple iteration over all TCs. I hope this simpler implementation makes the bug less likely to occur...","Codecov Report

Merging #572 into master will increase coverage by 0.16%.
The diff coverage is 65.49%.


@@            Coverage Diff             @@
##           master     #572      +/-   ##
==========================================
+ Coverage   67.64%   67.81%   +0.16%     
==========================================
  Files         200      202       +2     
  Lines       12377    12516     +139     
==========================================
+ Hits         8373     8488     +115     
- Misses       4004     4028      +24



Impacted Files
Coverage Δ





core/worker.h
95.65% <ø> (ø)
⬆️


core/worker.cc
90.58% <100%> (ø)
⬆️


core/traffic_class_test.cc
99.41% <100%> (ø)
⬆️


core/module.cc
87.79% <100%> (-0.15%)
⬇️


core/bessctl.cc
48.69% <24.07%> (+0.05%)
⬆️


core/scheduler.h
66.66% <66.66%> (-2.9%)
⬇️


core/traffic_class.h
89.33% <77.77%> (-0.99%)
⬇️


core/traffic_class.cc
91.13% <94.33%> (-0.16%)
⬇️


core/modules/worker_split.h
50% <0%> (-50%)
⬇️


core/modules/queue.cc
53.04% <0%> (-5.22%)
⬇️


... and 10 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update be61e48...27c00ac. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,572,2017-07-14T21:50:27Z,2017-07-17T21:50:24Z,2017-07-17T23:10:10Z,MERGED,True,188,216,8,https://github.com/sangjinhan,Remove Traverse() feature from TC trees,9,[],https://github.com/NetSys/bess/pull/572,https://github.com/barath,3,https://github.com/NetSys/bess/pull/572#issuecomment-315502780,"It has been observed a couple of times on Travis that TrafficClass::Traverse() gets stuck in an infinite loop. While its cause is unknown yet, the tree traversal mechanism of Traverse() doesn't seem to be strictly necessary; all it use cases can be replaced with simple iteration over all TCs. I hope this simpler implementation makes the bug less likely to occur...",LGTM otherwise.,True,{}
NetSys/bess,https://github.com/NetSys/bess,573,2017-07-14T22:33:18Z,2017-07-17T17:23:16Z,2017-08-08T22:13:19Z,MERGED,True,453,51,6,https://github.com/shinae-woo,Add L4Checksum module and add support for IP options to IPChecksum,4,[],https://github.com/NetSys/bess/pull/573,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/573,"Adding functionality to calculate checksums for IPv4 header with options, UDP.
Adding a module to calculate L4 (UDP/TCP) over IPv4.","Adding functionality to calculate checksums for IPv4 header with options, UDP.
Adding a module to calculate L4 (UDP/TCP) over IPv4.",True,{}
NetSys/bess,https://github.com/NetSys/bess,573,2017-07-14T22:33:18Z,2017-07-17T17:23:16Z,2017-08-08T22:13:19Z,MERGED,True,453,51,6,https://github.com/shinae-woo,Add L4Checksum module and add support for IP options to IPChecksum,4,[],https://github.com/NetSys/bess/pull/573,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/573#issuecomment-315672664,"Adding functionality to calculate checksums for IPv4 header with options, UDP.
Adding a module to calculate L4 (UDP/TCP) over IPv4.","Codecov Report

Merging #573 into master will increase coverage by 0.1%.
The diff coverage is 85.33%.


@@            Coverage Diff            @@
##           master     #573     +/-   ##
=========================================
+ Coverage   67.64%   67.75%   +0.1%     
=========================================
  Files         200      202      +2     
  Lines       12377    12515    +138     
=========================================
+ Hits         8373     8479    +106     
- Misses       4004     4036     +32



Impacted Files
Coverage Δ





core/modules/l4_checksum.h
0% <0%> (ø)



core/modules/ip_checksum.cc
11.11% <0%> (ø)
⬆️


core/utils/checksum.h
96.52% <100%> (+1.11%)
⬆️


core/modules/l4_checksum.cc
5.26% <5.26%> (ø)



core/utils/checksum_test.cc
99.2% <97.87%> (-0.8%)
⬇️


core/modules/worker_split.h
50% <0%> (-50%)
⬇️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/packet_avx.h
93.93% <0%> (-1.52%)
⬇️


... and 4 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update be61e48...87431d6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,573,2017-07-14T22:33:18Z,2017-07-17T17:23:16Z,2017-08-08T22:13:19Z,MERGED,True,453,51,6,https://github.com/shinae-woo,Add L4Checksum module and add support for IP options to IPChecksum,4,[],https://github.com/NetSys/bess/pull/573,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/573#issuecomment-315822555,"Adding functionality to calculate checksums for IPv4 header with options, UDP.
Adding a module to calculate L4 (UDP/TCP) over IPv4.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,575,2017-07-17T18:51:01Z,2017-07-17T21:29:27Z,2017-08-21T07:27:19Z,MERGED,True,8,5,2,https://github.com/melvinw,modules/port_out: pick queue using input gate,1,[],https://github.com/NetSys/bess/pull/575,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/575,"This should resolve the old TODO.
Credit to @ddiproietto for the idea.","This should resolve the old TODO.
Credit to @ddiproietto for the idea.",True,{}
NetSys/bess,https://github.com/NetSys/bess,575,2017-07-17T18:51:01Z,2017-07-17T21:29:27Z,2017-08-21T07:27:19Z,MERGED,True,8,5,2,https://github.com/melvinw,modules/port_out: pick queue using input gate,1,[],https://github.com/NetSys/bess/pull/575,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/575#issuecomment-315848567,"This should resolve the old TODO.
Credit to @ddiproietto for the idea.","Not sure whether it makes more sense to pick a default, valid value for qid when the input gate is out of bounds or to just drop the batch. I chose to drop, but I'm happy to change if anyone feels strongly enough in the other direction.",True,{}
NetSys/bess,https://github.com/NetSys/bess,575,2017-07-17T18:51:01Z,2017-07-17T21:29:27Z,2017-08-21T07:27:19Z,MERGED,True,8,5,2,https://github.com/melvinw,modules/port_out: pick queue using input gate,1,[],https://github.com/NetSys/bess/pull/575,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/575#issuecomment-315850932,"This should resolve the old TODO.
Credit to @ddiproietto for the idea.","The original idea (which has never been implemented though) was automatic mapping between cores (workers) <-> TX queues, plus locking if necessary. But I guess we can later add an option to control its default behavior.
Dropping packets for invalid qid sounds good to me",True,{}
NetSys/bess,https://github.com/NetSys/bess,575,2017-07-17T18:51:01Z,2017-07-17T21:29:27Z,2017-08-21T07:27:19Z,MERGED,True,8,5,2,https://github.com/melvinw,modules/port_out: pick queue using input gate,1,[],https://github.com/NetSys/bess/pull/575,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/575#issuecomment-315854949,"This should resolve the old TODO.
Credit to @ddiproietto for the idea.","Note for future reference: PortOut module is not thread-safe at the moment, as multiple workers may access the same TX queue.",True,{}
NetSys/bess,https://github.com/NetSys/bess,575,2017-07-17T18:51:01Z,2017-07-17T21:29:27Z,2017-08-21T07:27:19Z,MERGED,True,8,5,2,https://github.com/melvinw,modules/port_out: pick queue using input gate,1,[],https://github.com/NetSys/bess/pull/575,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/575#issuecomment-315857557,"This should resolve the old TODO.
Credit to @ddiproietto for the idea.","Codecov Report

Merging #575 into master will increase coverage by 0.01%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #575      +/-   ##
==========================================
+ Coverage   67.74%   67.76%   +0.01%     
==========================================
  Files         202      202              
  Lines       12536    12538       +2     
==========================================
+ Hits         8493     8496       +3     
+ Misses       4043     4042       -1



Impacted Files
Coverage Δ





core/modules/port_out.h
0% <ø> (ø)
⬆️


core/modules/port_out.cc
2.38% <0%> (-0.12%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/utils/checksum_test.cc
99.6% <0%> (+0.39%)
⬆️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f9007c7...3fbde99. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,575,2017-07-17T18:51:01Z,2017-07-17T21:29:27Z,2017-08-21T07:27:19Z,MERGED,True,8,5,2,https://github.com/melvinw,modules/port_out: pick queue using input gate,1,[],https://github.com/NetSys/bess/pull/575,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/575#issuecomment-315890669,"This should resolve the old TODO.
Credit to @ddiproietto for the idea.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,575,2017-07-17T18:51:01Z,2017-07-17T21:29:27Z,2017-08-21T07:27:19Z,MERGED,True,8,5,2,https://github.com/melvinw,modules/port_out: pick queue using input gate,1,[],https://github.com/NetSys/bess/pull/575,https://github.com/llvilanova,7,https://github.com/NetSys/bess/pull/575#issuecomment-323667191,"This should resolve the old TODO.
Credit to @ddiproietto for the idea.","Sorry to resurrect an old issue, but I just wanted to point out that the proto file was not updated to document this (which would eventually reach the wiki).",True,{}
NetSys/bess,https://github.com/NetSys/bess,577,2017-07-17T20:05:30Z,2017-07-17T21:04:51Z,2017-07-17T23:10:09Z,MERGED,True,15,14,3,https://github.com/sangjinhan,CI: Run unittests in an arbitrary order,2,[],https://github.com/NetSys/bess/pull/577,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/577,"... to add more randomness. Done with --gtest_shuffle
Some tests in post_test.cc were order-dependent and fixed.","... to add more randomness. Done with --gtest_shuffle
Some tests in post_test.cc were order-dependent and fixed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,577,2017-07-17T20:05:30Z,2017-07-17T21:04:51Z,2017-07-17T23:10:09Z,MERGED,True,15,14,3,https://github.com/sangjinhan,CI: Run unittests in an arbitrary order,2,[],https://github.com/NetSys/bess/pull/577,https://github.com/barath,2,https://github.com/NetSys/bess/pull/577#issuecomment-315867289,"... to add more randomness. Done with --gtest_shuffle
Some tests in post_test.cc were order-dependent and fixed.",Thanks for doing this.,True,{}
NetSys/bess,https://github.com/NetSys/bess,577,2017-07-17T20:05:30Z,2017-07-17T21:04:51Z,2017-07-17T23:10:09Z,MERGED,True,15,14,3,https://github.com/sangjinhan,CI: Run unittests in an arbitrary order,2,[],https://github.com/NetSys/bess/pull/577,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/577#issuecomment-315877555,"... to add more randomness. Done with --gtest_shuffle
Some tests in post_test.cc were order-dependent and fixed.","Codecov Report

Merging #577 into master will increase coverage by 0.62%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #577      +/-   ##
==========================================
+ Coverage   67.74%   68.37%   +0.62%     
==========================================
  Files         202      202              
  Lines       12536    12537       +1     
==========================================
+ Hits         8493     8572      +79     
+ Misses       4043     3965      -78



Impacted Files
Coverage Δ





core/port.h
78.78% <ø> (ø)
⬆️


core/port_test.cc
98.83% <100%> (ø)
⬆️


core/utils/checksum_test.cc
98.8% <0%> (-0.4%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/module.h
90.56% <0%> (+0.62%)
⬆️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️


core/modules/set_metadata.cc
69.44% <0%> (+4.16%)
⬆️


core/modules/queue.cc
59.13% <0%> (+6.08%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️


... and 2 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f9007c7...5be0159. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,578,2017-07-17T21:48:07Z,2017-07-20T17:10:06Z,2017-09-06T00:23:01Z,MERGED,True,10536,352,351,https://github.com/barath,Updates copyright / license for all code.,3,[],https://github.com/NetSys/bess/pull/578,https://github.com/barath,1,https://github.com/NetSys/bess/pull/578,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,578,2017-07-17T21:48:07Z,2017-07-20T17:10:06Z,2017-09-06T00:23:01Z,MERGED,True,10536,352,351,https://github.com/barath,Updates copyright / license for all code.,3,[],https://github.com/NetSys/bess/pull/578,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/578#issuecomment-315919061,,"Codecov Report

Merging #578 into master will decrease coverage by 0.36%.
The diff coverage is 80%.


@@            Coverage Diff             @@
##           master     #578      +/-   ##
==========================================
- Coverage   67.72%   67.35%   -0.37%     
==========================================
  Files         202      202              
  Lines       12521    12524       +3     
==========================================
- Hits         8480     8436      -44     
- Misses       4041     4088      +47



Impacted Files
Coverage Δ





core/traffic_class.cc
91.13% <ø> (+0.35%)
⬆️


core/modules/macswap.h
100% <ø> (ø)
⬆️


core/modules/vlan_pop.cc
100% <ø> (ø)
⬆️


core/modules/replicate.h
100% <ø> (ø)
⬆️


core/snbuf.cc
1.06% <ø> (ø)
⬆️


core/message.h
18.18% <ø> (ø)
⬆️


core/module.cc
87.79% <ø> (ø)
⬆️


core/packet.h
83.95% <ø> (ø)
⬆️


core/modules/exact_match.h
94.73% <ø> (ø)
⬆️


core/modules/rewrite.h
100% <ø> (ø)
⬆️


... and 198 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 21c5bfc...d9b4070. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,578,2017-07-17T21:48:07Z,2017-07-20T17:10:06Z,2017-09-06T00:23:01Z,MERGED,True,10536,352,351,https://github.com/barath,Updates copyright / license for all code.,3,[],https://github.com/NetSys/bess/pull/578,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/578#issuecomment-316770793,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,579,2017-07-17T22:06:29Z,2017-07-18T00:01:36Z,2017-08-08T22:13:25Z,MERGED,True,3,2,1,https://github.com/shinae-woo,Fix a bug that ixgbevf does not show any stats for show/monitor port,1,[],https://github.com/NetSys/bess/pull/579,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/579,"ixgbevf does not support per queue stats.
It is hard coded since I couldn't find a way to identify whether the driver supports queue-level or port-level stat functionality yet.
(no flags, no driver-level supported functions, etc).
BTW, in EC2 instances using ixgbevf, the stats are incorrect.
EC2 limits pps per EC2 instance, (e.g., 75Kpps for c2.xlarge),
the stats show more pps than rate limited performance and no drop count.
It looks like rate limiting happens in host side and hidden from the EC2 instances.","ixgbevf does not support per queue stats.
It is hard coded since I couldn't find a way to identify whether the driver supports queue-level or port-level stat functionality yet.
(no flags, no driver-level supported functions, etc).
BTW, in EC2 instances using ixgbevf, the stats are incorrect.
EC2 limits pps per EC2 instance, (e.g., 75Kpps for c2.xlarge),
the stats show more pps than rate limited performance and no drop count.
It looks like rate limiting happens in host side and hidden from the EC2 instances.",True,{}
NetSys/bess,https://github.com/NetSys/bess,579,2017-07-17T22:06:29Z,2017-07-18T00:01:36Z,2017-08-08T22:13:25Z,MERGED,True,3,2,1,https://github.com/shinae-woo,Fix a bug that ixgbevf does not show any stats for show/monitor port,1,[],https://github.com/NetSys/bess/pull/579,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/579#issuecomment-315912400,"ixgbevf does not support per queue stats.
It is hard coded since I couldn't find a way to identify whether the driver supports queue-level or port-level stat functionality yet.
(no flags, no driver-level supported functions, etc).
BTW, in EC2 instances using ixgbevf, the stats are incorrect.
EC2 limits pps per EC2 instance, (e.g., 75Kpps for c2.xlarge),
the stats show more pps than rate limited performance and no drop count.
It looks like rate limiting happens in host side and hidden from the EC2 instances.","Codecov Report

Merging #579 into master will increase coverage by 0.16%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #579      +/-   ##
==========================================
+ Coverage   67.71%   67.87%   +0.16%     
==========================================
  Files         202      202              
  Lines       12519    12520       +1     
==========================================
+ Hits         8477     8498      +21     
+ Misses       4042     4022      -20



Impacted Files
Coverage Δ





core/drivers/pmd.cc
4.06% <0%> (-0.03%)
⬇️


core/utils/checksum_test.cc
98.8% <0%> (-0.4%)
⬇️


core/modules/queue.cc
59.13% <0%> (+0.86%)
⬆️


core/kmod/llring.h
63.69% <0%> (+2.73%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update eadb767...cb6f199. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,579,2017-07-17T22:06:29Z,2017-07-18T00:01:36Z,2017-08-08T22:13:25Z,MERGED,True,3,2,1,https://github.com/shinae-woo,Fix a bug that ixgbevf does not show any stats for show/monitor port,1,[],https://github.com/NetSys/bess/pull/579,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/579#issuecomment-315919198,"ixgbevf does not support per queue stats.
It is hard coded since I couldn't find a way to identify whether the driver supports queue-level or port-level stat functionality yet.
(no flags, no driver-level supported functions, etc).
BTW, in EC2 instances using ixgbevf, the stats are incorrect.
EC2 limits pps per EC2 instance, (e.g., 75Kpps for c2.xlarge),
the stats show more pps than rate limited performance and no drop count.
It looks like rate limiting happens in host side and hidden from the EC2 instances.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,580,2017-07-18T01:29:33Z,2017-07-18T02:28:45Z,2017-08-09T01:22:45Z,MERGED,True,6,1,3,https://github.com/melvinw,opts: add option for gRPC bind address,1,[],https://github.com/NetSys/bess/pull/580,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/580,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,580,2017-07-18T01:29:33Z,2017-07-18T02:28:45Z,2017-08-09T01:22:45Z,MERGED,True,6,1,3,https://github.com/melvinw,opts: add option for gRPC bind address,1,[],https://github.com/NetSys/bess/pull/580,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/580#issuecomment-315937621,,"Codecov Report

Merging #580 into master will increase coverage by 0.1%.
The diff coverage is 100%.


@@            Coverage Diff            @@
##           master     #580     +/-   ##
=========================================
+ Coverage   67.72%   67.83%   +0.1%     
=========================================
  Files         202      202             
  Lines       12520    12521      +1     
=========================================
+ Hits         8479     8493     +14     
+ Misses       4041     4028     -13



Impacted Files
Coverage Δ





core/main.cc
89.74% <100%> (ø)
⬆️


core/opts.cc
82.35% <100%> (+0.53%)
⬆️


core/kmod/llring.h
60.95% <0%> (-2.74%)
⬇️


core/modules/queue.cc
58.26% <0%> (-0.87%)
⬇️


core/utils/checksum_test.cc
98.8% <0%> (+0.39%)
⬆️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2e52604...7d8b583. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,581,2017-07-19T10:31:24Z,2017-07-20T10:45:50Z,2017-07-20T10:47:24Z,CLOSED,False,242,99,9,https://github.com/GalSagie,Add MPLS Push module,16,[],https://github.com/NetSys/bess/pull/581,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/581,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,581,2017-07-19T10:31:24Z,2017-07-20T10:45:50Z,2017-07-20T10:47:24Z,CLOSED,False,242,99,9,https://github.com/GalSagie,Add MPLS Push module,16,[],https://github.com/NetSys/bess/pull/581,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/581#issuecomment-316352216,,"Codecov Report

Merging #581 into master will increase coverage by 0.23%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #581      +/-   ##
==========================================
+ Coverage   67.72%   67.96%   +0.23%     
==========================================
  Files         202      205       +3     
  Lines       12521    12552      +31     
==========================================
+ Hits         8480     8531      +51     
+ Misses       4041     4021      -20



Impacted Files
Coverage Δ





core/modules/mpls_push.cc
100% <100%> (ø)



core/modules/mpls_push.h
100% <100%> (ø)



core/utils/mpls.h
100% <0%> (ø)



core/traffic_class.cc
91.13% <0%> (+0.35%)
⬆️


core/utils/checksum_test.cc
99.6% <0%> (+0.39%)
⬆️


core/modules/queue.cc
59.13% <0%> (+0.86%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 21c5bfc...723250d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,581,2017-07-19T10:31:24Z,2017-07-20T10:45:50Z,2017-07-20T10:47:24Z,CLOSED,False,242,99,9,https://github.com/GalSagie,Add MPLS Push module,16,[],https://github.com/NetSys/bess/pull/581,https://github.com/GalSagie,3,https://github.com/NetSys/bess/pull/581#issuecomment-316666928,,"Bad merge, i will resubmit another pull request and close this one for convenient of fixing this",True,{}
NetSys/bess,https://github.com/NetSys/bess,582,2017-07-19T18:22:29Z,2017-07-19T19:19:03Z,2017-07-19T19:19:13Z,CLOSED,False,127,96,3,https://github.com/chris3torek,Buildtweaks,9,[],https://github.com/NetSys/bess/pull/582,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/582,"This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).","This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).",True,{}
NetSys/bess,https://github.com/NetSys/bess,582,2017-07-19T18:22:29Z,2017-07-19T19:19:03Z,2017-07-19T19:19:13Z,CLOSED,False,127,96,3,https://github.com/chris3torek,Buildtweaks,9,[],https://github.com/NetSys/bess/pull/582,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/582#issuecomment-316489414,"This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).",(moving this to other fork),True,{}
NetSys/bess,https://github.com/NetSys/bess,583,2017-07-19T19:22:56Z,2017-07-19T22:33:32Z,2017-07-20T10:46:51Z,MERGED,True,127,96,3,https://github.com/chris3torek,Build tweaks,9,[],https://github.com/NetSys/bess/pull/583,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/583,"This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).","This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).",True,{}
NetSys/bess,https://github.com/NetSys/bess,583,2017-07-19T19:22:56Z,2017-07-19T22:33:32Z,2017-07-20T10:46:51Z,MERGED,True,127,96,3,https://github.com/chris3torek,Build tweaks,9,[],https://github.com/NetSys/bess/pull/583,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/583#issuecomment-316500572,"This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).","Codecov Report

Merging #583 into master will increase coverage by 0.15%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #583      +/-   ##
==========================================
+ Coverage   67.72%   67.87%   +0.15%     
==========================================
  Files         202      202              
  Lines       12521    12521              
==========================================
+ Hits         8480     8499      +19     
+ Misses       4041     4022      -19



Impacted Files
Coverage Δ





core/utils/checksum_test.cc
98.8% <0%> (-0.4%)
⬇️


core/traffic_class.cc
91.13% <0%> (+0.35%)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/modules/queue.cc
59.13% <0%> (+0.86%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 21c5bfc...885b24f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,583,2017-07-19T19:22:56Z,2017-07-19T22:33:32Z,2017-07-20T10:46:51Z,MERGED,True,127,96,3,https://github.com/chris3torek,Build tweaks,9,[],https://github.com/NetSys/bess/pull/583,https://github.com/shwang,3,https://github.com/NetSys/bess/pull/583#issuecomment-316506327,"This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).",Could you change .travis.yml to build in verbose by default?,True,{}
NetSys/bess,https://github.com/NetSys/bess,583,2017-07-19T19:22:56Z,2017-07-19T22:33:32Z,2017-07-20T10:46:51Z,MERGED,True,127,96,3,https://github.com/chris3torek,Build tweaks,9,[],https://github.com/NetSys/bess/pull/583,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/583#issuecomment-316507056,"This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).",I thought I'd leave that to a separate thing (mostly because I'm not sure which builds are timing out in the first place). Which one(s) are?,True,{'THUMBS_UP': ['https://github.com/shwang']}
NetSys/bess,https://github.com/NetSys/bess,583,2017-07-19T19:22:56Z,2017-07-19T22:33:32Z,2017-07-20T10:46:51Z,MERGED,True,127,96,3,https://github.com/chris3torek,Build tweaks,9,[],https://github.com/NetSys/bess/pull/583,https://github.com/chris3torek,5,https://github.com/NetSys/bess/pull/583#issuecomment-316513461,"This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).",(This was discussed elsewhere but I'll add it here since I guess these discussions get archived on GitHub.) It looks like the place to tweak in travis is in another repo that just uses this one.,True,{}
NetSys/bess,https://github.com/NetSys/bess,583,2017-07-19T19:22:56Z,2017-07-19T22:33:32Z,2017-07-20T10:46:51Z,MERGED,True,127,96,3,https://github.com/chris3torek,Build tweaks,9,[],https://github.com/NetSys/bess/pull/583,https://github.com/changlan,6,https://github.com/NetSys/bess/pull/583#issuecomment-316538753,"This is a series of tweaks to build.py and container_build.py aimed at some usability improvement for development with DPDK updates if and when this is required, and for building with automated build systems (e.g., travis, where we've seen things like travis timeouts—we could work around these by tweaking the travis settings but I like this idea better).","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,584,2017-07-19T19:26:20Z,2017-09-06T00:43:14Z,2017-09-06T00:43:14Z,CLOSED,False,30,37,2,https://github.com/shwang,Allow module inheritance across shared objects,5,['notready'],https://github.com/NetSys/bess/pull/584,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/584,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.","Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.",True,{}
NetSys/bess,https://github.com/NetSys/bess,584,2017-07-19T19:26:20Z,2017-09-06T00:43:14Z,2017-09-06T00:43:14Z,CLOSED,False,30,37,2,https://github.com/shwang,Allow module inheritance across shared objects,5,['notready'],https://github.com/NetSys/bess/pull/584,https://github.com/vivi,2,https://github.com/NetSys/bess/pull/584#issuecomment-316491522,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.",(I would test your module with inheritance extensively before merging this...still not sure if inheritance works 100%) :P,True,{'THUMBS_UP': ['https://github.com/shwang']}
NetSys/bess,https://github.com/NetSys/bess,584,2017-07-19T19:26:20Z,2017-09-06T00:43:14Z,2017-09-06T00:43:14Z,CLOSED,False,30,37,2,https://github.com/shwang,Allow module inheritance across shared objects,5,['notready'],https://github.com/NetSys/bess/pull/584,https://github.com/shwang,3,https://github.com/NetSys/bess/pull/584#issuecomment-316491801,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.",Is there any concern here with making modules less isolated from each other? (one malicious/buggy module might crash another?),True,{}
NetSys/bess,https://github.com/NetSys/bess,584,2017-07-19T19:26:20Z,2017-09-06T00:43:14Z,2017-09-06T00:43:14Z,CLOSED,False,30,37,2,https://github.com/shwang,Allow module inheritance across shared objects,5,['notready'],https://github.com/NetSys/bess/pull/584,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/584#issuecomment-316496175,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.",Would it be simpler to combine two while loops of loading modules by initializing failed list with all unloaded modules at the beginning? (And perhaps rename failed to pending),True,{'THUMBS_UP': ['https://github.com/shwang']}
NetSys/bess,https://github.com/NetSys/bess,584,2017-07-19T19:26:20Z,2017-09-06T00:43:14Z,2017-09-06T00:43:14Z,CLOSED,False,30,37,2,https://github.com/shwang,Allow module inheritance across shared objects,5,['notready'],https://github.com/NetSys/bess/pull/584,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/584#issuecomment-316505817,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.","Codecov Report

Merging #584 into master will decrease coverage by 0.88%.
The diff coverage is 84.61%.


@@            Coverage Diff             @@
##           master     #584      +/-   ##
==========================================
- Coverage   68.24%   67.36%   -0.89%     
==========================================
  Files         202      202              
  Lines       12525    12526       +1     
==========================================
- Hits         8548     8438     -110     
- Misses       3977     4088     +111



Impacted Files
Coverage Δ





core/bessd.cc
70.14% <84.61%> (+1.36%)
⬆️


core/modules/merge.h
0% <0%> (-100%)
⬇️


core/modules/measure.h
0% <0%> (-100%)
⬇️


core/modules/port_inc.h
0% <0%> (-100%)
⬇️


core/modules/merge.cc
25% <0%> (-75%)
⬇️


core/modules/port_inc.cc
4.47% <0%> (-67.17%)
⬇️


core/modules/measure.cc
4.61% <0%> (-63.08%)
⬇️


core/modules/worker_split.h
50% <0%> (-50%)
⬇️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/utils/histogram.h
90.41% <0%> (-5.48%)
⬇️


... and 192 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8cb053b...1403241. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,584,2017-07-19T19:26:20Z,2017-09-06T00:43:14Z,2017-09-06T00:43:14Z,CLOSED,False,30,37,2,https://github.com/shwang,Allow module inheritance across shared objects,5,['notready'],https://github.com/NetSys/bess/pull/584,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/584#issuecomment-316596122,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.",ERROR would be a better fit than INFO...?,True,{}
NetSys/bess,https://github.com/NetSys/bess,584,2017-07-19T19:26:20Z,2017-09-06T00:43:14Z,2017-09-06T00:43:14Z,CLOSED,False,30,37,2,https://github.com/shwang,Allow module inheritance across shared objects,5,['notready'],https://github.com/NetSys/bess/pull/584,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/584#issuecomment-318218003,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.","Sorry, could you please rebase the branch?",True,{}
NetSys/bess,https://github.com/NetSys/bess,584,2017-07-19T19:26:20Z,2017-09-06T00:43:14Z,2017-09-06T00:43:14Z,CLOSED,False,30,37,2,https://github.com/shwang,Allow module inheritance across shared objects,5,['notready'],https://github.com/NetSys/bess/pull/584,https://github.com/shwang,8,https://github.com/NetSys/bess/pull/584#issuecomment-318218049,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.",sure,True,{}
NetSys/bess,https://github.com/NetSys/bess,584,2017-07-19T19:26:20Z,2017-09-06T00:43:14Z,2017-09-06T00:43:14Z,CLOSED,False,30,37,2,https://github.com/shwang,Allow module inheritance across shared objects,5,['notready'],https://github.com/NetSys/bess/pull/584,https://github.com/melvinw,9,https://github.com/NetSys/bess/pull/584#issuecomment-327341938,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.",Rebased this. Will open new pr,True,{}
NetSys/bess,https://github.com/NetSys/bess,585,2017-07-19T21:30:14Z,2017-07-19T22:49:59Z,2017-07-20T10:46:28Z,MERGED,True,1,2,1,https://github.com/shwang,Include all extra*.mk files in core/Makefile,1,[],https://github.com/NetSys/bess/pull/585,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/585,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,585,2017-07-19T21:30:14Z,2017-07-19T22:49:59Z,2017-07-20T10:46:28Z,MERGED,True,1,2,1,https://github.com/shwang,Include all extra*.mk files in core/Makefile,1,[],https://github.com/NetSys/bess/pull/585,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/585#issuecomment-316533499,,"Codecov Report

Merging #585 into master will increase coverage by 0.11%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #585      +/-   ##
==========================================
+ Coverage   67.72%   67.83%   +0.11%     
==========================================
  Files         202      202              
  Lines       12521    12521              
==========================================
+ Hits         8480     8494      +14     
+ Misses       4041     4027      -14



Impacted Files
Coverage Δ





core/kmod/llring.h
60.95% <0%> (-2.74%)
⬇️


core/modules/queue.cc
58.26% <0%> (ø)
⬆️


core/traffic_class.cc
91.13% <0%> (+0.35%)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 21c5bfc...17c56c8. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,585,2017-07-19T21:30:14Z,2017-07-19T22:49:59Z,2017-07-20T10:46:28Z,MERGED,True,1,2,1,https://github.com/shwang,Include all extra*.mk files in core/Makefile,1,[],https://github.com/NetSys/bess/pull/585,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/585#issuecomment-316542242,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,587,2017-07-19T22:47:56Z,2017-07-20T17:13:00Z,2017-07-20T17:13:40Z,MERGED,True,25,15,3,https://github.com/sangjinhan,"Fix ""monitor tc"" bug that incorrectly sets wid",1,[],https://github.com/NetSys/bess/pull/587,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/587,#572 introduces a regression bug; ListTcs always returns -1 for all TCs.,#572 introduces a regression bug; ListTcs always returns -1 for all TCs.,True,{}
NetSys/bess,https://github.com/NetSys/bess,587,2017-07-19T22:47:56Z,2017-07-20T17:13:00Z,2017-07-20T17:13:40Z,MERGED,True,25,15,3,https://github.com/sangjinhan,"Fix ""monitor tc"" bug that incorrectly sets wid",1,[],https://github.com/NetSys/bess/pull/587,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/587#issuecomment-316554803,#572 introduces a regression bug; ListTcs always returns -1 for all TCs.,"Codecov Report

Merging #587 into master will decrease coverage by 0.51%.
The diff coverage is 6.66%.


@@            Coverage Diff             @@
##           master     #587      +/-   ##
==========================================
- Coverage   67.83%   67.31%   -0.52%     
==========================================
  Files         202      202              
  Lines       12521    12524       +3     
==========================================
- Hits         8494     8431      -63     
- Misses       4027     4093      +66



Impacted Files
Coverage Δ





core/traffic_class.cc
88.92% <0%> (-2.21%)
⬇️


core/bessctl.cc
48.8% <0%> (+0.11%)
⬆️


core/traffic_class.h
88.51% <50%> (-0.82%)
⬇️


core/modules/measure.h
0% <0%> (-100%)
⬇️


core/modules/measure.cc
4.61% <0%> (-63.08%)
⬇️


core/modules/drr.cc
74.05% <0%> (-7.55%)
⬇️


core/utils/histogram.h
90.41% <0%> (-5.48%)
⬇️


core/utils/checksum_test.cc
98.8% <0%> (-0.4%)
⬇️


core/modules/queue.cc
59.13% <0%> (+0.86%)
⬆️


core/kmod/llring.h
63.69% <0%> (+2.73%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b47c71a...7157c97. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,588,2017-07-19T22:52:22Z,2017-07-20T04:02:09Z,2017-08-09T01:22:24Z,MERGED,True,9,1,1,https://github.com/melvinw,modules/queue: add all fields to initializer list,1,[],https://github.com/NetSys/bess/pull/588,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/588,This should fix #586,This should fix #586,True,{}
NetSys/bess,https://github.com/NetSys/bess,588,2017-07-19T22:52:22Z,2017-07-20T04:02:09Z,2017-08-09T01:22:24Z,MERGED,True,9,1,1,https://github.com/melvinw,modules/queue: add all fields to initializer list,1,[],https://github.com/NetSys/bess/pull/588,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/588#issuecomment-316567411,This should fix #586,"Codecov Report

Merging #588 into master will increase coverage by 0.15%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #588      +/-   ##
==========================================
+ Coverage   67.67%   67.82%   +0.15%     
==========================================
  Files         202      202              
  Lines       12521    12522       +1     
==========================================
+ Hits         8473     8493      +20     
+ Misses       4048     4029      -19



Impacted Files
Coverage Δ





core/modules/queue.h
100% <100%> (ø)
⬆️


core/utils/checksum_test.cc
99.6% <0%> (+1.19%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3920598...ad42113. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,588,2017-07-19T22:52:22Z,2017-07-20T04:02:09Z,2017-08-09T01:22:24Z,MERGED,True,9,1,1,https://github.com/melvinw,modules/queue: add all fields to initializer list,1,[],https://github.com/NetSys/bess/pull/588,https://github.com/barath,3,https://github.com/NetSys/bess/pull/588#issuecomment-316592116,This should fix #586,,True,{}
NetSys/bess,https://github.com/NetSys/bess,589,2017-07-20T01:32:38Z,2017-07-27T22:01:22Z,2017-08-09T01:22:22Z,MERGED,True,98,1,5,https://github.com/melvinw,bessctl: add DumpMempool command,3,[],https://github.com/NetSys/bess/pull/589,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/589,This was useful during some debugging I did today. Others might find it helpful in the future.,This was useful during some debugging I did today. Others might find it helpful in the future.,True,{}
NetSys/bess,https://github.com/NetSys/bess,589,2017-07-20T01:32:38Z,2017-07-27T22:01:22Z,2017-08-09T01:22:22Z,MERGED,True,98,1,5,https://github.com/melvinw,bessctl: add DumpMempool command,3,[],https://github.com/NetSys/bess/pull/589,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/589#issuecomment-316574115,This was useful during some debugging I did today. Others might find it helpful in the future.,"Codecov Report

Merging #589 into master will increase coverage by 0.41%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #589      +/-   ##
==========================================
+ Coverage   67.67%   68.08%   +0.41%     
==========================================
  Files         202      202              
  Lines       12521    12553      +32     
==========================================
+ Hits         8473     8547      +74     
+ Misses       4048     4006      -42



Impacted Files
Coverage Δ





pybess/bess.py
39.68% <ø> (ø)
⬆️


core/bessctl.cc
47.5% <0%> (-1.19%)
⬇️


core/metadata.h
61.01% <0%> (-3.27%)
⬇️


core/traffic_class.cc
88.92% <0%> (-2.21%)
⬇️


core/traffic_class.h
88.51% <0%> (-0.82%)
⬇️


core/modules/ip_lookup.cc
73.33% <0%> (ø)
⬆️


core/utils/llqueue_test.cc
100% <0%> (ø)
⬆️


core/pktbatch.h
87.5% <0%> (ø)
⬆️


... and 193 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3920598...feb264e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,589,2017-07-20T01:32:38Z,2017-07-27T22:01:22Z,2017-08-09T01:22:22Z,MERGED,True,98,1,5,https://github.com/melvinw,bessctl: add DumpMempool command,3,[],https://github.com/NetSys/bess/pull/589,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/589#issuecomment-316798927,This was useful during some debugging I did today. Others might find it helpful in the future.,"Looks great. Thanks!
One minor request: could you change the command to show system packets? I expect there would be many more commands in a similar nature to come in the near future; a single show system ... command would be easier than remembering individual commands.",True,{}
NetSys/bess,https://github.com/NetSys/bess,589,2017-07-20T01:32:38Z,2017-07-27T22:01:22Z,2017-08-09T01:22:22Z,MERGED,True,98,1,5,https://github.com/melvinw,bessctl: add DumpMempool command,3,[],https://github.com/NetSys/bess/pull/589,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/589#issuecomment-318215909,This was useful during some debugging I did today. Others might find it helpful in the future.,You got it. Done,True,{}
NetSys/bess,https://github.com/NetSys/bess,589,2017-07-20T01:32:38Z,2017-07-27T22:01:22Z,2017-08-09T01:22:22Z,MERGED,True,98,1,5,https://github.com/melvinw,bessctl: add DumpMempool command,3,[],https://github.com/NetSys/bess/pull/589,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/589#issuecomment-318498945,This was useful during some debugging I did today. Others might find it helpful in the future.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,590,2017-07-20T10:53:14Z,,2017-08-02T19:32:52Z,OPEN,False,105,0,4,https://github.com/GalSagie,Add MPLS push module,1,['notready'],https://github.com/NetSys/bess/pull/590,https://github.com/GalSagie,1,https://github.com/NetSys/bess/pull/590,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,590,2017-07-20T10:53:14Z,,2017-08-02T19:32:52Z,OPEN,False,105,0,4,https://github.com/GalSagie,Add MPLS push module,1,['notready'],https://github.com/NetSys/bess/pull/590,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/590#issuecomment-316678421,,"Codecov Report

Merging #590 into master will increase coverage by 0.59%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #590      +/-   ##
==========================================
+ Coverage   67.29%   67.89%   +0.59%     
==========================================
  Files         202      205       +3     
  Lines       12522    12555      +33     
==========================================
+ Hits         8427     8524      +97     
+ Misses       4095     4031      -64



Impacted Files
Coverage Δ





core/modules/mpls_push.cc
100% <100%> (ø)



core/modules/mpls_push.h
100% <100%> (ø)



core/utils/checksum_test.cc
98.8% <0%> (-0.4%)
⬇️


core/utils/mpls.h
100% <0%> (ø)



core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/utils/histogram.h
95.89% <0%> (+5.47%)
⬆️


core/modules/drr.cc
81.6% <0%> (+7.54%)
⬆️


core/modules/measure.cc
67.69% <0%> (+63.07%)
⬆️


... and 1 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c7fbee5...dc618ad. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,590,2017-07-20T10:53:14Z,,2017-08-02T19:32:52Z,OPEN,False,105,0,4,https://github.com/GalSagie,Add MPLS push module,1,['notready'],https://github.com/NetSys/bess/pull/590,https://github.com/nrdmao,3,https://github.com/NetSys/bess/pull/590#issuecomment-316743742,,"So with this design you will have an instance of the MPLS Push module for every unique label to be pushed. Which, in some instances, might be 1000's of labels. Does this really scale well in BESS to have 1000's modules and therefore 1000's of connections between modules?",True,{}
NetSys/bess,https://github.com/NetSys/bess,590,2017-07-20T10:53:14Z,,2017-08-02T19:32:52Z,OPEN,False,105,0,4,https://github.com/GalSagie,Add MPLS push module,1,['notready'],https://github.com/NetSys/bess/pull/590,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/590#issuecomment-316855806,,"@nrdmao That's a great point. At that scale probably we would want:

All packets to go thorough a single pipeline, unless their processing flows diverge.
Each packet carries its MPLS label as metadata, which is set by some upstream modules.
Then MPLSPush module tags packets accordingly on a per-packet basis

(3) is what some existing modules do, such as IPEncap, EtherEncap, etc. In contrast, some other modules work on a per-""flow"" basis, such as VLANPush or this module. Ideally, it should be configurable to choose which scheme to use.
At the moment, unfortunately, the per-packet metadata approach is not quite applicable in most cases.  Existing classification modules (BPF, IPLookup, ExactMatch, etc.) support only flow split (packets are distributed across output gates, as a result of classification), but not metadata update.",True,{}
NetSys/bess,https://github.com/NetSys/bess,590,2017-07-20T10:53:14Z,,2017-08-02T19:32:52Z,OPEN,False,105,0,4,https://github.com/GalSagie,Add MPLS push module,1,['notready'],https://github.com/NetSys/bess/pull/590,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/590#issuecomment-318161680,,"Sorry, could you rebase the branch? Due to changes in #591 there are build errors in this PR...",True,{}
NetSys/bess,https://github.com/NetSys/bess,591,2017-07-24T04:23:33Z,2017-07-25T03:21:43Z,2017-08-08T22:12:19Z,MERGED,True,642,133,62,https://github.com/shinae-woo,Add a framework for external modules,6,[],https://github.com/NetSys/bess/pull/591,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/591,"sample_plugin directory shows an example of external module

Modifications

Support makefile template (bess_plugin.mk and Makefile) for plugin developer
Change bessctl and build process to support dynamic import of plugin


To build a module plugin externally:

BESS must be already built. Set BESS_HOME environment variable to that directory.
Create module (and optionally Protobuf) files
Change Makefile template, found in sample_plugin, as necessary
$ make


To load a plugin at runtime

import plugin foo.so in bessctl
bess_plugin.mk automatically copies required protobuf files into pybess/plugin_pb.
restart bessctl
I wanted to keep bessctl stateless, so I didn't add command such as import protobuf xxx_pb2.py




Cleanups

Generated protobuf files are separately located:

C files for  core/pb/*
Python files for pybess/builtin_pb


Change and clean up: module_msg.py -> module_pb_loader.py


Bug fixes

Pause and resume BESS daemon when import/unload modules (otherwise EBUSY error occurs)
A few minor bugs...



Known issues

Currently building external modules is too much dependent on BESS environments (e.g., why DPDK headers are mandatory?)
Wiki page requires being updated accordingly: https://github.com/NetSys/bess/wiki/Writing-Your-Own-Module
Unload plugin can crash the BESS daemon process, as there is nothing that prevents from unloading ""busy"" module classes.
bessctl auto-completion of command has a bug. complete_filename doesn't list up directories  when suffix is provided.","sample_plugin directory shows an example of external module

Modifications

Support makefile template (bess_plugin.mk and Makefile) for plugin developer
Change bessctl and build process to support dynamic import of plugin


To build a module plugin externally:

BESS must be already built. Set BESS_HOME environment variable to that directory.
Create module (and optionally Protobuf) files
Change Makefile template, found in sample_plugin, as necessary
$ make


To load a plugin at runtime

import plugin foo.so in bessctl
bess_plugin.mk automatically copies required protobuf files into pybess/plugin_pb.
restart bessctl
I wanted to keep bessctl stateless, so I didn't add command such as import protobuf xxx_pb2.py




Cleanups

Generated protobuf files are separately located:

C files for  core/pb/*
Python files for pybess/builtin_pb


Change and clean up: module_msg.py -> module_pb_loader.py


Bug fixes

Pause and resume BESS daemon when import/unload modules (otherwise EBUSY error occurs)
A few minor bugs...



Known issues

Currently building external modules is too much dependent on BESS environments (e.g., why DPDK headers are mandatory?)
Wiki page requires being updated accordingly: https://github.com/NetSys/bess/wiki/Writing-Your-Own-Module
Unload plugin can crash the BESS daemon process, as there is nothing that prevents from unloading ""busy"" module classes.
bessctl auto-completion of command has a bug. complete_filename doesn't list up directories  when suffix is provided.",True,{}
NetSys/bess,https://github.com/NetSys/bess,591,2017-07-24T04:23:33Z,2017-07-25T03:21:43Z,2017-08-08T22:12:19Z,MERGED,True,642,133,62,https://github.com/shinae-woo,Add a framework for external modules,6,[],https://github.com/NetSys/bess/pull/591,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/591#issuecomment-317320068,"sample_plugin directory shows an example of external module

Modifications

Support makefile template (bess_plugin.mk and Makefile) for plugin developer
Change bessctl and build process to support dynamic import of plugin


To build a module plugin externally:

BESS must be already built. Set BESS_HOME environment variable to that directory.
Create module (and optionally Protobuf) files
Change Makefile template, found in sample_plugin, as necessary
$ make


To load a plugin at runtime

import plugin foo.so in bessctl
bess_plugin.mk automatically copies required protobuf files into pybess/plugin_pb.
restart bessctl
I wanted to keep bessctl stateless, so I didn't add command such as import protobuf xxx_pb2.py




Cleanups

Generated protobuf files are separately located:

C files for  core/pb/*
Python files for pybess/builtin_pb


Change and clean up: module_msg.py -> module_pb_loader.py


Bug fixes

Pause and resume BESS daemon when import/unload modules (otherwise EBUSY error occurs)
A few minor bugs...



Known issues

Currently building external modules is too much dependent on BESS environments (e.g., why DPDK headers are mandatory?)
Wiki page requires being updated accordingly: https://github.com/NetSys/bess/wiki/Writing-Your-Own-Module
Unload plugin can crash the BESS daemon process, as there is nothing that prevents from unloading ""busy"" module classes.
bessctl auto-completion of command has a bug. complete_filename doesn't list up directories  when suffix is provided.","Codecov Report

Merging #591 into master will increase coverage by 0.46%.
The diff coverage is 88.63%.


@@            Coverage Diff             @@
##           master     #591      +/-   ##
==========================================
+ Coverage   67.76%   68.22%   +0.46%     
==========================================
  Files         202      202              
  Lines       12528    12525       -3     
==========================================
+ Hits         8489     8545      +56     
+ Misses       4039     3980      -59



Impacted Files
Coverage Δ





core/modules/l2_forward.h
100% <ø> (ø)
⬆️


core/modules/mttest.h
0% <ø> (ø)
⬆️


core/modules/round_robin.h
100% <ø> (ø)
⬆️


core/modules/port_out.h
0% <ø> (ø)
⬆️


core/bessctl.cc
48.8% <ø> (ø)
⬆️


core/modules/arp_responder.h
100% <ø> (ø)
⬆️


core/modules/url_filter.h
93.75% <ø> (ø)
⬆️


core/modules/ip_encap.h
0% <ø> (ø)
⬆️


core/modules/rewrite.h
100% <ø> (ø)
⬆️


core/modules/generic_encap.h
100% <ø> (ø)
⬆️


... and 46 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e26e0c1...bbab76d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,591,2017-07-24T04:23:33Z,2017-07-25T03:21:43Z,2017-08-08T22:12:19Z,MERGED,True,642,133,62,https://github.com/shinae-woo,Add a framework for external modules,6,[],https://github.com/NetSys/bess/pull/591,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/591#issuecomment-317521899,"sample_plugin directory shows an example of external module

Modifications

Support makefile template (bess_plugin.mk and Makefile) for plugin developer
Change bessctl and build process to support dynamic import of plugin


To build a module plugin externally:

BESS must be already built. Set BESS_HOME environment variable to that directory.
Create module (and optionally Protobuf) files
Change Makefile template, found in sample_plugin, as necessary
$ make


To load a plugin at runtime

import plugin foo.so in bessctl
bess_plugin.mk automatically copies required protobuf files into pybess/plugin_pb.
restart bessctl
I wanted to keep bessctl stateless, so I didn't add command such as import protobuf xxx_pb2.py




Cleanups

Generated protobuf files are separately located:

C files for  core/pb/*
Python files for pybess/builtin_pb


Change and clean up: module_msg.py -> module_pb_loader.py


Bug fixes

Pause and resume BESS daemon when import/unload modules (otherwise EBUSY error occurs)
A few minor bugs...



Known issues

Currently building external modules is too much dependent on BESS environments (e.g., why DPDK headers are mandatory?)
Wiki page requires being updated accordingly: https://github.com/NetSys/bess/wiki/Writing-Your-Own-Module
Unload plugin can crash the BESS daemon process, as there is nothing that prevents from unloading ""busy"" module classes.
bessctl auto-completion of command has a bug. complete_filename doesn't list up directories  when suffix is provided.","I must admit, I copied the source code from RamdomUpdate.* to create SequentialUpdate.*
:)",True,{}
NetSys/bess,https://github.com/NetSys/bess,591,2017-07-24T04:23:33Z,2017-07-25T03:21:43Z,2017-08-08T22:12:19Z,MERGED,True,642,133,62,https://github.com/shinae-woo,Add a framework for external modules,6,[],https://github.com/NetSys/bess/pull/591,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/591#issuecomment-317521981,"sample_plugin directory shows an example of external module

Modifications

Support makefile template (bess_plugin.mk and Makefile) for plugin developer
Change bessctl and build process to support dynamic import of plugin


To build a module plugin externally:

BESS must be already built. Set BESS_HOME environment variable to that directory.
Create module (and optionally Protobuf) files
Change Makefile template, found in sample_plugin, as necessary
$ make


To load a plugin at runtime

import plugin foo.so in bessctl
bess_plugin.mk automatically copies required protobuf files into pybess/plugin_pb.
restart bessctl
I wanted to keep bessctl stateless, so I didn't add command such as import protobuf xxx_pb2.py




Cleanups

Generated protobuf files are separately located:

C files for  core/pb/*
Python files for pybess/builtin_pb


Change and clean up: module_msg.py -> module_pb_loader.py


Bug fixes

Pause and resume BESS daemon when import/unload modules (otherwise EBUSY error occurs)
A few minor bugs...



Known issues

Currently building external modules is too much dependent on BESS environments (e.g., why DPDK headers are mandatory?)
Wiki page requires being updated accordingly: https://github.com/NetSys/bess/wiki/Writing-Your-Own-Module
Unload plugin can crash the BESS daemon process, as there is nothing that prevents from unloading ""busy"" module classes.
bessctl auto-completion of command has a bug. complete_filename doesn't list up directories  when suffix is provided.",@changlan may take a look over for the protobuf/build part?,True,{}
NetSys/bess,https://github.com/NetSys/bess,591,2017-07-24T04:23:33Z,2017-07-25T03:21:43Z,2017-08-08T22:12:19Z,MERGED,True,642,133,62,https://github.com/shinae-woo,Add a framework for external modules,6,[],https://github.com/NetSys/bess/pull/591,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/591#issuecomment-317527761,"sample_plugin directory shows an example of external module

Modifications

Support makefile template (bess_plugin.mk and Makefile) for plugin developer
Change bessctl and build process to support dynamic import of plugin


To build a module plugin externally:

BESS must be already built. Set BESS_HOME environment variable to that directory.
Create module (and optionally Protobuf) files
Change Makefile template, found in sample_plugin, as necessary
$ make


To load a plugin at runtime

import plugin foo.so in bessctl
bess_plugin.mk automatically copies required protobuf files into pybess/plugin_pb.
restart bessctl
I wanted to keep bessctl stateless, so I didn't add command such as import protobuf xxx_pb2.py




Cleanups

Generated protobuf files are separately located:

C files for  core/pb/*
Python files for pybess/builtin_pb


Change and clean up: module_msg.py -> module_pb_loader.py


Bug fixes

Pause and resume BESS daemon when import/unload modules (otherwise EBUSY error occurs)
A few minor bugs...



Known issues

Currently building external modules is too much dependent on BESS environments (e.g., why DPDK headers are mandatory?)
Wiki page requires being updated accordingly: https://github.com/NetSys/bess/wiki/Writing-Your-Own-Module
Unload plugin can crash the BESS daemon process, as there is nothing that prevents from unloading ""busy"" module classes.
bessctl auto-completion of command has a bug. complete_filename doesn't list up directories  when suffix is provided.","Given that bess_plugin.mk is common for all external plugins, the file should be placed somewhere else...? (e.g., core/)",True,{}
NetSys/bess,https://github.com/NetSys/bess,591,2017-07-24T04:23:33Z,2017-07-25T03:21:43Z,2017-08-08T22:12:19Z,MERGED,True,642,133,62,https://github.com/shinae-woo,Add a framework for external modules,6,[],https://github.com/NetSys/bess/pull/591,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/591#issuecomment-317617683,"sample_plugin directory shows an example of external module

Modifications

Support makefile template (bess_plugin.mk and Makefile) for plugin developer
Change bessctl and build process to support dynamic import of plugin


To build a module plugin externally:

BESS must be already built. Set BESS_HOME environment variable to that directory.
Create module (and optionally Protobuf) files
Change Makefile template, found in sample_plugin, as necessary
$ make


To load a plugin at runtime

import plugin foo.so in bessctl
bess_plugin.mk automatically copies required protobuf files into pybess/plugin_pb.
restart bessctl
I wanted to keep bessctl stateless, so I didn't add command such as import protobuf xxx_pb2.py




Cleanups

Generated protobuf files are separately located:

C files for  core/pb/*
Python files for pybess/builtin_pb


Change and clean up: module_msg.py -> module_pb_loader.py


Bug fixes

Pause and resume BESS daemon when import/unload modules (otherwise EBUSY error occurs)
A few minor bugs...



Known issues

Currently building external modules is too much dependent on BESS environments (e.g., why DPDK headers are mandatory?)
Wiki page requires being updated accordingly: https://github.com/NetSys/bess/wiki/Writing-Your-Own-Module
Unload plugin can crash the BESS daemon process, as there is nothing that prevents from unloading ""busy"" module classes.
bessctl auto-completion of command has a bug. complete_filename doesn't list up directories  when suffix is provided.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,592,2017-07-25T00:10:09Z,2017-07-27T22:02:06Z,2017-07-28T03:52:12Z,MERGED,True,253,78,4,https://github.com/shwang,Trie: Add support for values and prefix nodes,2,[],https://github.com/NetSys/bess/pull/592,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/592,"A prefix key ""asdf"" can be inserted into the Trie to match all keys that begin with ""asdf"". Lookup() returns the value associated with the most specific match, prioritizing an exact match over the longest prefix.","A prefix key ""asdf"" can be inserted into the Trie to match all keys that begin with ""asdf"". Lookup() returns the value associated with the most specific match, prioritizing an exact match over the longest prefix.",True,{}
NetSys/bess,https://github.com/NetSys/bess,592,2017-07-25T00:10:09Z,2017-07-27T22:02:06Z,2017-07-28T03:52:12Z,MERGED,True,253,78,4,https://github.com/shwang,Trie: Add support for values and prefix nodes,2,[],https://github.com/NetSys/bess/pull/592,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/592#issuecomment-317802310,"A prefix key ""asdf"" can be inserted into the Trie to match all keys that begin with ""asdf"". Lookup() returns the value associated with the most specific match, prioritizing an exact match over the longest prefix.","Codecov Report

Merging #592 into master will decrease coverage by 0.02%.
The diff coverage is 98.55%.


@@            Coverage Diff             @@
##           master     #592      +/-   ##
==========================================
- Coverage   68.51%   68.48%   -0.03%     
==========================================
  Files         202      202              
  Lines       12525    12632     +107     
==========================================
+ Hits         8581     8651      +70     
- Misses       3944     3981      +37



Impacted Files
Coverage Δ





core/modules/url_filter.cc
55.55% <0%> (ø)
⬆️


core/modules/url_filter.h
93.75% <100%> (ø)
⬆️


core/utils/trie_test.cc
100% <100%> (ø)
⬆️


core/utils/trie.h
98.55% <97.29%> (-1.45%)
⬇️


core/modules/port_out.h
0% <0%> (-100%)
⬇️


core/modules/port_out.cc
2.38% <0%> (-78.58%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/utils/checksum_test.cc
99.2% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b7543ee...27089b4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,592,2017-07-25T00:10:09Z,2017-07-27T22:02:06Z,2017-07-28T03:52:12Z,MERGED,True,253,78,4,https://github.com/shwang,Trie: Add support for values and prefix nodes,2,[],https://github.com/NetSys/bess/pull/592,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/592#issuecomment-318499093,"A prefix key ""asdf"" can be inserted into the Trie to match all keys that begin with ""asdf"". Lookup() returns the value associated with the most specific match, prioritizing an exact match over the longest prefix.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,593,2017-07-25T16:52:31Z,2017-07-26T23:45:09Z,2017-07-27T23:44:33Z,MERGED,True,135,46,2,https://github.com/chris3torek,Pytweaks,3,[],https://github.com/NetSys/bess/pull/593,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/593,"This fixes a few minor bugs and changes the way the standard test modules are run so that their namespaces behave the way one would expect in a Python module.
In particular, if you write custom test functions, you had to avoid using global (module level) functions and/or classes -- everything had to be within the local scope of each function (i.e., closures).  Now test module code works the same way as other run <path> BESS scripts: it gets exec-ed in a module with a private namespace, rather than borrowing the local variables of the loader function.
I included an example of the other bug I fixed.  I can't explain why the assertion failure in pybess/module.py is missing the name though:
    assert False, '%s is not a module' % next_mod
AssertionError:  is not a module

(why isn't next_mod the string, here?)","This fixes a few minor bugs and changes the way the standard test modules are run so that their namespaces behave the way one would expect in a Python module.
In particular, if you write custom test functions, you had to avoid using global (module level) functions and/or classes -- everything had to be within the local scope of each function (i.e., closures).  Now test module code works the same way as other run <path> BESS scripts: it gets exec-ed in a module with a private namespace, rather than borrowing the local variables of the loader function.
I included an example of the other bug I fixed.  I can't explain why the assertion failure in pybess/module.py is missing the name though:
    assert False, '%s is not a module' % next_mod
AssertionError:  is not a module

(why isn't next_mod the string, here?)",True,{}
NetSys/bess,https://github.com/NetSys/bess,593,2017-07-25T16:52:31Z,2017-07-26T23:45:09Z,2017-07-27T23:44:33Z,MERGED,True,135,46,2,https://github.com/chris3torek,Pytweaks,3,[],https://github.com/NetSys/bess/pull/593,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/593#issuecomment-317811796,"This fixes a few minor bugs and changes the way the standard test modules are run so that their namespaces behave the way one would expect in a Python module.
In particular, if you write custom test functions, you had to avoid using global (module level) functions and/or classes -- everything had to be within the local scope of each function (i.e., closures).  Now test module code works the same way as other run <path> BESS scripts: it gets exec-ed in a module with a private namespace, rather than borrowing the local variables of the loader function.
I included an example of the other bug I fixed.  I can't explain why the assertion failure in pybess/module.py is missing the name though:
    assert False, '%s is not a module' % next_mod
AssertionError:  is not a module

(why isn't next_mod the string, here?)","Codecov Report

Merging #593 into master will decrease coverage by 0.26%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #593      +/-   ##
==========================================
- Coverage   68.51%   68.24%   -0.27%     
==========================================
  Files         202      202              
  Lines       12525    12525              
==========================================
- Hits         8581     8548      -33     
- Misses       3944     3977      +33



Impacted Files
Coverage Δ





core/modules/port_out.h
0% <0%> (-100%)
⬇️


core/modules/port_out.cc
2.38% <0%> (-78.58%)
⬇️


core/utils/checksum_test.cc
99.6% <0%> (+0.39%)
⬆️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b7543ee...e6be406. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,593,2017-07-25T16:52:31Z,2017-07-26T23:45:09Z,2017-07-27T23:44:33Z,MERGED,True,135,46,2,https://github.com/chris3torek,Pytweaks,3,[],https://github.com/NetSys/bess/pull/593,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/593#issuecomment-318215138,"This fixes a few minor bugs and changes the way the standard test modules are run so that their namespaces behave the way one would expect in a Python module.
In particular, if you write custom test functions, you had to avoid using global (module level) functions and/or classes -- everything had to be within the local scope of each function (i.e., closures).  Now test module code works the same way as other run <path> BESS scripts: it gets exec-ed in a module with a private namespace, rather than borrowing the local variables of the loader function.
I included an example of the other bug I fixed.  I can't explain why the assertion failure in pybess/module.py is missing the name though:
    assert False, '%s is not a module' % next_mod
AssertionError:  is not a module

(why isn't next_mod the string, here?)","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,594,2017-07-26T23:33:49Z,2017-07-28T20:45:57Z,2017-07-28T20:46:36Z,MERGED,True,121,43,2,https://github.com/sangjinhan,Fix crash during checksum calculation upon invalid IP headers,6,[],https://github.com/NetSys/bess/pull/594,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/594,"BESS daemon process may crash if an IP header is malformed, e.g.

IP header length is larger than IP total length
IP header is incomplete (smaller than 20B)

Similar issues happen with malformed UDP/TCP packets. The crash is due to expression like iph.length.value() - (iph.header_length << 2), which causes underflow of an unsigned type. Error conditions are now checked for packets from a potentially untrusted source.
This PR also addresses the following less-severe, corner-case issues:

VerifyIpv4UdpChecksum() does not work correctly if the checksum field is 0.

For UDP packets, checksum 0 should always be considered ""correct""


If a UDP checksum result happens to be 0, the field must have 0xffff (rfc768)
In contrast to TCP, UDP header has its own length field. This one must be preferred over the derived L4 length from IP header fields.","BESS daemon process may crash if an IP header is malformed, e.g.

IP header length is larger than IP total length
IP header is incomplete (smaller than 20B)

Similar issues happen with malformed UDP/TCP packets. The crash is due to expression like iph.length.value() - (iph.header_length << 2), which causes underflow of an unsigned type. Error conditions are now checked for packets from a potentially untrusted source.
This PR also addresses the following less-severe, corner-case issues:

VerifyIpv4UdpChecksum() does not work correctly if the checksum field is 0.

For UDP packets, checksum 0 should always be considered ""correct""


If a UDP checksum result happens to be 0, the field must have 0xffff (rfc768)
In contrast to TCP, UDP header has its own length field. This one must be preferred over the derived L4 length from IP header fields.",True,{}
NetSys/bess,https://github.com/NetSys/bess,594,2017-07-26T23:33:49Z,2017-07-28T20:45:57Z,2017-07-28T20:46:36Z,MERGED,True,121,43,2,https://github.com/sangjinhan,Fix crash during checksum calculation upon invalid IP headers,6,[],https://github.com/NetSys/bess/pull/594,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/594#issuecomment-318219913,"BESS daemon process may crash if an IP header is malformed, e.g.

IP header length is larger than IP total length
IP header is incomplete (smaller than 20B)

Similar issues happen with malformed UDP/TCP packets. The crash is due to expression like iph.length.value() - (iph.header_length << 2), which causes underflow of an unsigned type. Error conditions are now checked for packets from a potentially untrusted source.
This PR also addresses the following less-severe, corner-case issues:

VerifyIpv4UdpChecksum() does not work correctly if the checksum field is 0.

For UDP packets, checksum 0 should always be considered ""correct""


If a UDP checksum result happens to be 0, the field must have 0xffff (rfc768)
In contrast to TCP, UDP header has its own length field. This one must be preferred over the derived L4 length from IP header fields.","Codecov Report

Merging #594 into master will increase coverage by 0.46%.
The diff coverage is 95.45%.


@@            Coverage Diff             @@
##           master     #594      +/-   ##
==========================================
+ Coverage   68.51%   68.98%   +0.46%     
==========================================
  Files         202      202              
  Lines       12525    12563      +38     
==========================================
+ Hits         8581     8666      +85     
+ Misses       3944     3897      -47



Impacted Files
Coverage Δ





core/utils/checksum_test.cc
99.61% <100%> (+0.41%)
⬆️


core/utils/checksum.h
93.56% <93.18%> (-2.97%)
⬇️


core/modules/l2_forward.cc
50.86% <0%> (+14.94%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b7543ee...2c2c806. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,594,2017-07-26T23:33:49Z,2017-07-28T20:45:57Z,2017-07-28T20:46:36Z,MERGED,True,121,43,2,https://github.com/sangjinhan,Fix crash during checksum calculation upon invalid IP headers,6,[],https://github.com/NetSys/bess/pull/594,https://github.com/barath,3,https://github.com/NetSys/bess/pull/594#issuecomment-318757834,"BESS daemon process may crash if an IP header is malformed, e.g.

IP header length is larger than IP total length
IP header is incomplete (smaller than 20B)

Similar issues happen with malformed UDP/TCP packets. The crash is due to expression like iph.length.value() - (iph.header_length << 2), which causes underflow of an unsigned type. Error conditions are now checked for packets from a potentially untrusted source.
This PR also addresses the following less-severe, corner-case issues:

VerifyIpv4UdpChecksum() does not work correctly if the checksum field is 0.

For UDP packets, checksum 0 should always be considered ""correct""


If a UDP checksum result happens to be 0, the field must have 0xffff (rfc768)
In contrast to TCP, UDP header has its own length field. This one must be preferred over the derived L4 length from IP header fields.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,595,2017-07-27T23:25:19Z,2017-08-07T18:19:31Z,2017-09-06T00:22:59Z,MERGED,True,6,7,2,https://github.com/sangjinhan,Fix tcpdump for scattered packet buffers,3,[],https://github.com/NetSys/bess/pull/595,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/595,"Scattered packet buffers have total_len larger than data_len, which accounts only the first segment. Since we consider only the first segment has been captured, not the entire packet, only data_len bytes must be written to the fifo.
Also, internally fifo_fd_ stored 0 to represent ""no file descriptor is open"", but fd 0 might be actually being used. Because of this the class destructor may accidentally close stdin or any other file descriptor allocated to 0.","Scattered packet buffers have total_len larger than data_len, which accounts only the first segment. Since we consider only the first segment has been captured, not the entire packet, only data_len bytes must be written to the fifo.
Also, internally fifo_fd_ stored 0 to represent ""no file descriptor is open"", but fd 0 might be actually being used. Because of this the class destructor may accidentally close stdin or any other file descriptor allocated to 0.",True,{}
NetSys/bess,https://github.com/NetSys/bess,595,2017-07-27T23:25:19Z,2017-08-07T18:19:31Z,2017-09-06T00:22:59Z,MERGED,True,6,7,2,https://github.com/sangjinhan,Fix tcpdump for scattered packet buffers,3,[],https://github.com/NetSys/bess/pull/595,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/595#issuecomment-318519866,"Scattered packet buffers have total_len larger than data_len, which accounts only the first segment. Since we consider only the first segment has been captured, not the entire packet, only data_len bytes must be written to the fifo.
Also, internally fifo_fd_ stored 0 to represent ""no file descriptor is open"", but fd 0 might be actually being used. Because of this the class destructor may accidentally close stdin or any other file descriptor allocated to 0.","Codecov Report

Merging #595 into master will increase coverage by 0.42%.
The diff coverage is 40%.


@@            Coverage Diff             @@
##           master     #595      +/-   ##
==========================================
+ Coverage   67.91%   68.34%   +0.42%     
==========================================
  Files         202      202              
  Lines       12659    12660       +1     
==========================================
+ Hits         8597     8652      +55     
+ Misses       4062     4008      -54



Impacted Files
Coverage Δ





core/hooks/tcpdump.cc
17.94% <40%> (-0.48%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️


core/modules/set_metadata.cc
69.44% <0%> (+4.16%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️


core/modules/port_inc.cc
71.64% <0%> (+67.16%)
⬆️


core/modules/merge.cc
100% <0%> (+75%)
⬆️


core/modules/merge.h
100% <0%> (+100%)
⬆️


core/modules/port_inc.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 302dbe8...31f910f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,595,2017-07-27T23:25:19Z,2017-08-07T18:19:31Z,2017-09-06T00:22:59Z,MERGED,True,6,7,2,https://github.com/sangjinhan,Fix tcpdump for scattered packet buffers,3,[],https://github.com/NetSys/bess/pull/595,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/595#issuecomment-320740863,"Scattered packet buffers have total_len larger than data_len, which accounts only the first segment. Since we consider only the first segment has been captured, not the entire packet, only data_len bytes must be written to the fifo.
Also, internally fifo_fd_ stored 0 to represent ""no file descriptor is open"", but fd 0 might be actually being used. Because of this the class destructor may accidentally close stdin or any other file descriptor allocated to 0.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,596,2017-07-27T23:27:55Z,2017-08-07T18:21:20Z,2017-09-06T00:23:00Z,MERGED,True,26,15,2,https://github.com/sangjinhan,Fix minor CLI issues,1,[],https://github.com/NetSys/bess/pull/596,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/596,"import plugin PLUGIN_FILE doesn't correctly support auto completion
No space between a long command and its description
Command abbreviation does not work for gate DIRECTION type

e.g., tr ena * o[ut]


tcpdump MODULE [DIRECTION] [OGATE]... should be [GATE]
If one command is a strict prefix of another command, only the latter is shown as the only candidate for auto completion. For example show worker<tab> only shows the second command out of the below two commands.

show worker               Show the status of all worker threads
show worker WORKER_ID...  Show the status of specified worker threads","import plugin PLUGIN_FILE doesn't correctly support auto completion
No space between a long command and its description
Command abbreviation does not work for gate DIRECTION type

e.g., tr ena * o[ut]


tcpdump MODULE [DIRECTION] [OGATE]... should be [GATE]
If one command is a strict prefix of another command, only the latter is shown as the only candidate for auto completion. For example show worker<tab> only shows the second command out of the below two commands.

show worker               Show the status of all worker threads
show worker WORKER_ID...  Show the status of specified worker threads",True,{}
NetSys/bess,https://github.com/NetSys/bess,596,2017-07-27T23:27:55Z,2017-08-07T18:21:20Z,2017-09-06T00:23:00Z,MERGED,True,26,15,2,https://github.com/sangjinhan,Fix minor CLI issues,1,[],https://github.com/NetSys/bess/pull/596,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/596#issuecomment-318522745,"import plugin PLUGIN_FILE doesn't correctly support auto completion
No space between a long command and its description
Command abbreviation does not work for gate DIRECTION type

e.g., tr ena * o[ut]


tcpdump MODULE [DIRECTION] [OGATE]... should be [GATE]
If one command is a strict prefix of another command, only the latter is shown as the only candidate for auto completion. For example show worker<tab> only shows the second command out of the below two commands.

show worker               Show the status of all worker threads
show worker WORKER_ID...  Show the status of specified worker threads","Codecov Report

Merging #596 into master will increase coverage by 0.37%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #596      +/-   ##
==========================================
+ Coverage   67.91%   68.29%   +0.37%     
==========================================
  Files         202      202              
  Lines       12659    12659              
==========================================
+ Hits         8597     8645      +48     
+ Misses       4062     4014      -48



Impacted Files
Coverage Δ





core/utils/checksum_test.cc
99.2% <0%> (-0.4%)
⬇️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️


core/modules/port_inc.cc
71.64% <0%> (+67.16%)
⬆️


core/modules/port_inc.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 302dbe8...267b0e8. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,596,2017-07-27T23:27:55Z,2017-08-07T18:21:20Z,2017-09-06T00:23:00Z,MERGED,True,26,15,2,https://github.com/sangjinhan,Fix minor CLI issues,1,[],https://github.com/NetSys/bess/pull/596,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/596#issuecomment-320741256,"import plugin PLUGIN_FILE doesn't correctly support auto completion
No space between a long command and its description
Command abbreviation does not work for gate DIRECTION type

e.g., tr ena * o[ut]


tcpdump MODULE [DIRECTION] [OGATE]... should be [GATE]
If one command is a strict prefix of another command, only the latter is shown as the only candidate for auto completion. For example show worker<tab> only shows the second command out of the below two commands.

show worker               Show the status of all worker threads
show worker WORKER_ID...  Show the status of specified worker threads",,True,{}
NetSys/bess,https://github.com/NetSys/bess,597,2017-07-28T01:07:02Z,2017-07-31T18:35:34Z,2017-08-08T22:12:16Z,MERGED,True,11,6,1,https://github.com/shinae-woo,Prevent `bessctl` crash from  bess config file loading errors,2,[],https://github.com/NetSys/bess/pull/597,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/597,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,597,2017-07-28T01:07:02Z,2017-07-31T18:35:34Z,2017-08-08T22:12:16Z,MERGED,True,11,6,1,https://github.com/shinae-woo,Prevent `bessctl` crash from  bess config file loading errors,2,[],https://github.com/NetSys/bess/pull/597,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/597#issuecomment-318533503,,"Codecov Report

Merging #597 into master will decrease coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #597      +/-   ##
==========================================
- Coverage   69.08%   69.07%   -0.01%     
==========================================
  Files         202      202              
  Lines       12697    12697              
==========================================
- Hits         8772     8771       -1     
- Misses       3925     3926       +1



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2d50e87...85c1fc6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,597,2017-07-28T01:07:02Z,2017-07-31T18:35:34Z,2017-08-08T22:12:16Z,MERGED,True,11,6,1,https://github.com/shinae-woo,Prevent `bessctl` crash from  bess config file loading errors,2,[],https://github.com/NetSys/bess/pull/597,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/597#issuecomment-318804192,,"I catched both IOError and OSError (parent of FileNotFoundError, as there may be other cases, e.g., permission denied).
I kept the try catch statements in commands.py, but not in sugar.py.
sugar.py doesn't have contexts of CLI environments, but a utility library, so the caller should know what to do with exceptions. In test_sugar.py, the tests should check whether the utility raises appropriate exceptions.",True,{}
NetSys/bess,https://github.com/NetSys/bess,597,2017-07-28T01:07:02Z,2017-07-31T18:35:34Z,2017-08-08T22:12:16Z,MERGED,True,11,6,1,https://github.com/shinae-woo,Prevent `bessctl` crash from  bess config file loading errors,2,[],https://github.com/NetSys/bess/pull/597,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/597#issuecomment-318806346,,"Sounds good, should be fine this way.",True,{}
NetSys/bess,https://github.com/NetSys/bess,597,2017-07-28T01:07:02Z,2017-07-31T18:35:34Z,2017-08-08T22:12:16Z,MERGED,True,11,6,1,https://github.com/shinae-woo,Prevent `bessctl` crash from  bess config file loading errors,2,[],https://github.com/NetSys/bess/pull/597,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/597#issuecomment-318930753,,"Instead of return, could you do raise cli.HandledError() for both error cases? When bessctl is running in non-interactive mode (e.g., cat commands.txt | bessctl), bessctl should stop there without running subsequent commands. HandledError will cause bessctl to stop processing the command loop in non-interactive mode, but return won't.",True,{}
NetSys/bess,https://github.com/NetSys/bess,597,2017-07-28T01:07:02Z,2017-07-31T18:35:34Z,2017-08-08T22:12:16Z,MERGED,True,11,6,1,https://github.com/shinae-woo,Prevent `bessctl` crash from  bess config file loading errors,2,[],https://github.com/NetSys/bess/pull/597,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/597#issuecomment-319157465,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,599,2017-08-01T20:26:12Z,2017-08-01T20:26:58Z,2017-08-01T20:27:19Z,MERGED,True,2,2,1,https://github.com/shwang,module tests: Set socket timeout by parameter,1,[],https://github.com/NetSys/bess/pull/599,https://github.com/shwang,1,https://github.com/NetSys/bess/pull/599,This is useful for reducing the run time of custom tests where lots of drops are expected.,This is useful for reducing the run time of custom tests where lots of drops are expected.,True,{}
NetSys/bess,https://github.com/NetSys/bess,599,2017-08-01T20:26:12Z,2017-08-01T20:26:58Z,2017-08-01T20:27:19Z,MERGED,True,2,2,1,https://github.com/shwang,module tests: Set socket timeout by parameter,1,[],https://github.com/NetSys/bess/pull/599,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/599#issuecomment-319486533,This is useful for reducing the run time of custom tests where lots of drops are expected.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,600,2017-08-02T06:07:19Z,2017-08-03T17:27:01Z,2017-08-03T17:41:20Z,CLOSED,False,103,10,4,https://github.com/melvinw,modules/set_metadata: add shift and mask support,3,[],https://github.com/NetSys/bess/pull/600,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/600,"This patch changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also fixes one of the metadata test scripts.
A quick micro benchmark on a 2.1GHz Xeon 2620v4 with the script below shows relatively minor overhead is imposed when SetMetadata is not configured to use the new features.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()

Before



attr. size
Mpps
cycles/pkt




1
108.108
19.422


2
108.407
19.372


4
111.280
18.872


8
113.383
18.522


16
106.242
19.767


24
115.461
18.188


32
116.844
17.973



After



attr. size
Mpps
cycles/pkt




1
103.293
20.331


2
103.518
20.287


4
109.368
19.202


8
109.321
19.210


16
109.904
19.108


24
111.408
18.850


32
114.985
18.264","This patch changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also fixes one of the metadata test scripts.
A quick micro benchmark on a 2.1GHz Xeon 2620v4 with the script below shows relatively minor overhead is imposed when SetMetadata is not configured to use the new features.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()

Before



attr. size
Mpps
cycles/pkt




1
108.108
19.422


2
108.407
19.372


4
111.280
18.872


8
113.383
18.522


16
106.242
19.767


24
115.461
18.188


32
116.844
17.973



After



attr. size
Mpps
cycles/pkt




1
103.293
20.331


2
103.518
20.287


4
109.368
19.202


8
109.321
19.210


16
109.904
19.108


24
111.408
18.850


32
114.985
18.264",True,{}
NetSys/bess,https://github.com/NetSys/bess,600,2017-08-02T06:07:19Z,2017-08-03T17:27:01Z,2017-08-03T17:41:20Z,CLOSED,False,103,10,4,https://github.com/melvinw,modules/set_metadata: add shift and mask support,3,[],https://github.com/NetSys/bess/pull/600,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/600#issuecomment-319583314,"This patch changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also fixes one of the metadata test scripts.
A quick micro benchmark on a 2.1GHz Xeon 2620v4 with the script below shows relatively minor overhead is imposed when SetMetadata is not configured to use the new features.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()

Before



attr. size
Mpps
cycles/pkt




1
108.108
19.422


2
108.407
19.372


4
111.280
18.872


8
113.383
18.522


16
106.242
19.767


24
115.461
18.188


32
116.844
17.973



After



attr. size
Mpps
cycles/pkt




1
103.293
20.331


2
103.518
20.287


4
109.368
19.202


8
109.321
19.210


16
109.904
19.108


24
111.408
18.850


32
114.985
18.264","Codecov Report

Merging #600 into master will increase coverage by 0.84%.
The diff coverage is 9.37%.


@@            Coverage Diff             @@
##           master     #600      +/-   ##
==========================================
+ Coverage   67.96%   68.81%   +0.84%     
==========================================
  Files         202      202              
  Lines       12697    12757      +60     
==========================================
+ Hits         8630     8779     +149     
+ Misses       4067     3978      -89



Impacted Files
Coverage Δ





core/modules/set_metadata.h
100% <ø> (ø)
⬆️


core/modules/set_metadata.cc
42.42% <9.37%> (-22.86%)
⬇️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️


core/modules/l2_forward.cc
50.86% <0%> (+14.94%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️


core/modules/port_inc.cc
71.64% <0%> (+67.16%)
⬆️


core/modules/merge.cc
100% <0%> (+75%)
⬆️


core/modules/port_out.cc
80.95% <0%> (+78.57%)
⬆️


core/modules/merge.h
100% <0%> (+100%)
⬆️


... and 2 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8349141...b63d71a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,600,2017-08-02T06:07:19Z,2017-08-03T17:27:01Z,2017-08-03T17:41:20Z,CLOSED,False,103,10,4,https://github.com/melvinw,modules/set_metadata: add shift and mask support,3,[],https://github.com/NetSys/bess/pull/600,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/600#issuecomment-319749627,"This patch changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also fixes one of the metadata test scripts.
A quick micro benchmark on a 2.1GHz Xeon 2620v4 with the script below shows relatively minor overhead is imposed when SetMetadata is not configured to use the new features.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()

Before



attr. size
Mpps
cycles/pkt




1
108.108
19.422


2
108.407
19.372


4
111.280
18.872


8
113.383
18.522


16
106.242
19.767


24
115.461
18.188


32
116.844
17.973



After



attr. size
Mpps
cycles/pkt




1
103.293
20.331


2
103.518
20.287


4
109.368
19.202


8
109.321
19.210


16
109.904
19.108


24
111.408
18.850


32
114.985
18.264",Debugging a segfault. Marking not-ready for a bit,True,{}
NetSys/bess,https://github.com/NetSys/bess,600,2017-08-02T06:07:19Z,2017-08-03T17:27:01Z,2017-08-03T17:41:20Z,CLOSED,False,103,10,4,https://github.com/melvinw,modules/set_metadata: add shift and mask support,3,[],https://github.com/NetSys/bess/pull/600,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/600#issuecomment-319761182,"This patch changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also fixes one of the metadata test scripts.
A quick micro benchmark on a 2.1GHz Xeon 2620v4 with the script below shows relatively minor overhead is imposed when SetMetadata is not configured to use the new features.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()

Before



attr. size
Mpps
cycles/pkt




1
108.108
19.422


2
108.407
19.372


4
111.280
18.872


8
113.383
18.522


16
106.242
19.767


24
115.461
18.188


32
116.844
17.973



After



attr. size
Mpps
cycles/pkt




1
103.293
20.331


2
103.518
20.287


4
109.368
19.202


8
109.321
19.210


16
109.904
19.108


24
111.408
18.850


32
114.985
18.264","Thanks for the comments! I'll see if I can come up with a way to use _mm_bslli_si128() and _mm_bsrli_si128() to handle the shifting, though it's not immediately clear to me how I'd do that with a carry (maybe I don't need it).",True,{}
NetSys/bess,https://github.com/NetSys/bess,600,2017-08-02T06:07:19Z,2017-08-03T17:27:01Z,2017-08-03T17:41:20Z,CLOSED,False,103,10,4,https://github.com/melvinw,modules/set_metadata: add shift and mask support,3,[],https://github.com/NetSys/bess/pull/600,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/600#issuecomment-320036221,"This patch changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also fixes one of the metadata test scripts.
A quick micro benchmark on a 2.1GHz Xeon 2620v4 with the script below shows relatively minor overhead is imposed when SetMetadata is not configured to use the new features.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()

Before



attr. size
Mpps
cycles/pkt




1
108.108
19.422


2
108.407
19.372


4
111.280
18.872


8
113.383
18.522


16
106.242
19.767


24
115.461
18.188


32
116.844
17.973



After



attr. size
Mpps
cycles/pkt




1
103.293
20.331


2
103.518
20.287


4
109.368
19.202


8
109.321
19.210


16
109.904
19.108


24
111.408
18.850


32
114.985
18.264",Going to reopen this as a slightly different PR,True,{}
NetSys/bess,https://github.com/NetSys/bess,601,2017-08-03T20:11:52Z,2017-08-03T21:14:04Z,2017-09-08T19:04:33Z,MERGED,True,45,1,2,https://github.com/ddiproietto,metadata: Fix crash when igate is nullptr.,2,[],https://github.com/NetSys/bess/pull/601,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/601,"igates are stored in a vector, with the gate number used as index.
If a gate index in a module is not used, the vector will have nullptr
where the igate pointer should be.
Pipeline::TraverseUpstream() didn't check for nullptr.  This caused
a crash (reproducible with the test included in the commit).
The commit fixes the crash.","igates are stored in a vector, with the gate number used as index.
If a gate index in a module is not used, the vector will have nullptr
where the igate pointer should be.
Pipeline::TraverseUpstream() didn't check for nullptr.  This caused
a crash (reproducible with the test included in the commit).
The commit fixes the crash.",True,{}
NetSys/bess,https://github.com/NetSys/bess,601,2017-08-03T20:11:52Z,2017-08-03T21:14:04Z,2017-09-08T19:04:33Z,MERGED,True,45,1,2,https://github.com/ddiproietto,metadata: Fix crash when igate is nullptr.,2,[],https://github.com/NetSys/bess/pull/601,https://github.com/barath,2,https://github.com/NetSys/bess/pull/601#issuecomment-320078179,"igates are stored in a vector, with the gate number used as index.
If a gate index in a module is not used, the vector will have nullptr
where the igate pointer should be.
Pipeline::TraverseUpstream() didn't check for nullptr.  This caused
a crash (reproducible with the test included in the commit).
The commit fixes the crash.","LGTM, just a minor comment on the test script.",True,{}
NetSys/bess,https://github.com/NetSys/bess,601,2017-08-03T20:11:52Z,2017-08-03T21:14:04Z,2017-09-08T19:04:33Z,MERGED,True,45,1,2,https://github.com/ddiproietto,metadata: Fix crash when igate is nullptr.,2,[],https://github.com/NetSys/bess/pull/601,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/601#issuecomment-320080913,"igates are stored in a vector, with the gate number used as index.
If a gate index in a module is not used, the vector will have nullptr
where the igate pointer should be.
Pipeline::TraverseUpstream() didn't check for nullptr.  This caused
a crash (reproducible with the test included in the commit).
The commit fixes the crash.","Thanks, I expanded the comment",True,{}
NetSys/bess,https://github.com/NetSys/bess,601,2017-08-03T20:11:52Z,2017-08-03T21:14:04Z,2017-09-08T19:04:33Z,MERGED,True,45,1,2,https://github.com/ddiproietto,metadata: Fix crash when igate is nullptr.,2,[],https://github.com/NetSys/bess/pull/601,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/601#issuecomment-320086504,"igates are stored in a vector, with the gate number used as index.
If a gate index in a module is not used, the vector will have nullptr
where the igate pointer should be.
Pipeline::TraverseUpstream() didn't check for nullptr.  This caused
a crash (reproducible with the test included in the commit).
The commit fixes the crash.","Codecov Report

Merging #601 into master will increase coverage by 0.42%.
The diff coverage is 66.66%.


@@            Coverage Diff             @@
##           master     #601      +/-   ##
==========================================
+ Coverage   67.96%   68.39%   +0.42%     
==========================================
  Files         202      202              
  Lines       12697    12699       +2     
==========================================
+ Hits         8630     8685      +55     
+ Misses       4067     4014      -53



Impacted Files
Coverage Δ





core/metadata.cc
84.92% <66.66%> (-0.26%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/modules/set_metadata.cc
69.44% <0%> (+4.16%)
⬆️


core/modules/worker_split.h
100% <0%> (+50%)
⬆️


core/modules/port_inc.cc
71.64% <0%> (+67.16%)
⬆️


core/modules/merge.cc
100% <0%> (+75%)
⬆️


core/modules/merge.h
100% <0%> (+100%)
⬆️


core/modules/port_inc.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8349141...3a5ed6d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,602,2017-08-04T00:43:05Z,2017-08-08T17:42:03Z,2017-08-09T01:22:19Z,MERGED,True,592,30,6,https://github.com/melvinw,modules/set_metadata: add shift/mask support,6,[],https://github.com/NetSys/bess/pull/602,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/602,"This commit changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also makes some small optimizations and cleans up parts of
the module.
A quick micro benchmark on a 2.1GHz xeon 2620v4 with the script below shows the new features impose no undue overhead when they aren't used.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()




Attr. Size
Mpps Before
Mpps After




1
103.293
114.835


2
103.518
114.918


4
109.368
109.702


8
109.321
114.845


16
109.904
113.136


24
111.408
119.894


32
114.985
120.66



I'm not too sure how useful the shift functions other than Shift*Small are since the scope of my interest was limited to SetMetadata and it only operates on up to 32 bytes. I'll open another PR in the future (or append to this one if people prefer) with a proper benchmark and possible changes for larger buffers.","This commit changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also makes some small optimizations and cleans up parts of
the module.
A quick micro benchmark on a 2.1GHz xeon 2620v4 with the script below shows the new features impose no undue overhead when they aren't used.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()




Attr. Size
Mpps Before
Mpps After




1
103.293
114.835


2
103.518
114.918


4
109.368
109.702


8
109.321
114.845


16
109.904
113.136


24
111.408
119.894


32
114.985
120.66



I'm not too sure how useful the shift functions other than Shift*Small are since the scope of my interest was limited to SetMetadata and it only operates on up to 32 bytes. I'll open another PR in the future (or append to this one if people prefer) with a proper benchmark and possible changes for larger buffers.",True,{}
NetSys/bess,https://github.com/NetSys/bess,602,2017-08-04T00:43:05Z,2017-08-08T17:42:03Z,2017-08-09T01:22:19Z,MERGED,True,592,30,6,https://github.com/melvinw,modules/set_metadata: add shift/mask support,6,[],https://github.com/NetSys/bess/pull/602,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/602#issuecomment-320299285,"This commit changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also makes some small optimizations and cleans up parts of
the module.
A quick micro benchmark on a 2.1GHz xeon 2620v4 with the script below shows the new features impose no undue overhead when they aren't used.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()




Attr. Size
Mpps Before
Mpps After




1
103.293
114.835


2
103.518
114.918


4
109.368
109.702


8
109.321
114.845


16
109.904
113.136


24
111.408
119.894


32
114.985
120.66



I'm not too sure how useful the shift functions other than Shift*Small are since the scope of my interest was limited to SetMetadata and it only operates on up to 32 bytes. I'll open another PR in the future (or append to this one if people prefer) with a proper benchmark and possible changes for larger buffers.","Codecov Report

Merging #602 into master will increase coverage by 0.11%.
The diff coverage is 74.16%.


@@            Coverage Diff             @@
##           master     #602      +/-   ##
==========================================
+ Coverage   69.07%   69.19%   +0.11%     
==========================================
  Files         202      204       +2     
  Lines       12700    12983     +283     
==========================================
+ Hits         8773     8983     +210     
- Misses       3927     4000      +73



Impacted Files
Coverage Δ





core/modules/set_metadata.h
100% <ø> (ø)
⬆️


core/utils/bits.h
100% <100%> (ø)



core/modules/set_metadata.cc
54.54% <33.33%> (-14.9%)
⬇️


core/utils/bits_test.cc
73.65% <73.65%> (ø)



core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ab14fe6...cad919d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,602,2017-08-04T00:43:05Z,2017-08-08T17:42:03Z,2017-08-09T01:22:19Z,MERGED,True,592,30,6,https://github.com/melvinw,modules/set_metadata: add shift/mask support,6,[],https://github.com/NetSys/bess/pull/602,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/602#issuecomment-321029457,"This commit changes SetMetadata to optionally shift and mask (in that
order) values when copying metadata values from the contents of a
packet. It also makes some small optimizations and cleans up parts of
the module.
A quick micro benchmark on a 2.1GHz xeon 2620v4 with the script below shows the new features impose no undue overhead when they aren't used.
ATTR_SIZE = int($ATTR_SIZE!'1')
Source() \
    -> SetMetadata(attrs=[{'name': 'foo', 'size': ATTR_SIZE, 'offset': 0}]) \
    -> MetadataTest(read={'foo': ATTR_SIZE}) \
    -> Sink()




Attr. Size
Mpps Before
Mpps After




1
103.293
114.835


2
103.518
114.918


4
109.368
109.702


8
109.321
114.845


16
109.904
113.136


24
111.408
119.894


32
114.985
120.66



I'm not too sure how useful the shift functions other than Shift*Small are since the scope of my interest was limited to SetMetadata and it only operates on up to 32 bytes. I'll open another PR in the future (or append to this one if people prefer) with a proper benchmark and possible changes for larger buffers.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,603,2017-08-09T01:03:23Z,2017-08-10T17:46:45Z,2017-11-01T17:54:52Z,MERGED,True,3,3,1,https://github.com/melvinw,set_metadata: make packet mode logic explicit,1,[],https://github.com/NetSys/bess/pull/603,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/603,"The existing version is hard to reason about and makes the no shift/no
mask code path unreachable.","The existing version is hard to reason about and makes the no shift/no
mask code path unreachable.",True,{}
NetSys/bess,https://github.com/NetSys/bess,603,2017-08-09T01:03:23Z,2017-08-10T17:46:45Z,2017-11-01T17:54:52Z,MERGED,True,3,3,1,https://github.com/melvinw,set_metadata: make packet mode logic explicit,1,[],https://github.com/NetSys/bess/pull/603,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/603#issuecomment-321131535,"The existing version is hard to reason about and makes the no shift/no
mask code path unreachable.","Codecov Report

Merging #603 into master will decrease coverage by 0.01%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #603      +/-   ##
==========================================
- Coverage    69.2%   69.19%   -0.02%     
==========================================
  Files         204      204              
  Lines       12983    12984       +1     
==========================================
- Hits         8985     8984       -1     
- Misses       3998     4000       +2



Impacted Files
Coverage Δ





core/modules/set_metadata.cc
54% <0%> (-0.55%)
⬇️


core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1963967...e104b7e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,603,2017-08-09T01:03:23Z,2017-08-10T17:46:45Z,2017-11-01T17:54:52Z,MERGED,True,3,3,1,https://github.com/melvinw,set_metadata: make packet mode logic explicit,1,[],https://github.com/NetSys/bess/pull/603,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/603#issuecomment-321624270,"The existing version is hard to reason about and makes the no shift/no
mask code path unreachable.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,604,2017-08-10T01:39:43Z,2017-08-15T17:27:07Z,2017-08-15T17:30:02Z,MERGED,True,469,163,19,https://github.com/chris3torek,Revamp plugins,7,[],https://github.com/NetSys/bess/pull/604,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/604,"This series of commits adds support for out-of-tree plugins (and out-of-tree module test code).
It's pretty complex, so it could use close scrutiny.  I have tried to rearrange it nicely into functional commits, so that each commit makes sense on its own (and each one is at least lightly tested).","This series of commits adds support for out-of-tree plugins (and out-of-tree module test code).
It's pretty complex, so it could use close scrutiny.  I have tried to rearrange it nicely into functional commits, so that each commit makes sense on its own (and each one is at least lightly tested).",True,{}
NetSys/bess,https://github.com/NetSys/bess,604,2017-08-10T01:39:43Z,2017-08-15T17:27:07Z,2017-08-15T17:30:02Z,MERGED,True,469,163,19,https://github.com/chris3torek,Revamp plugins,7,[],https://github.com/NetSys/bess/pull/604,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/604#issuecomment-321711945,"This series of commits adds support for out-of-tree plugins (and out-of-tree module test code).
It's pretty complex, so it could use close scrutiny.  I have tried to rearrange it nicely into functional commits, so that each commit makes sense on its own (and each one is at least lightly tested).","Codecov Report

Merging #604 into master will decrease coverage by 0.62%.
The diff coverage is 84.41%.


@@            Coverage Diff             @@
##           master     #604      +/-   ##
==========================================
- Coverage   69.18%   68.55%   -0.63%     
==========================================
  Files         204      204              
  Lines       12984    13037      +53     
==========================================
- Hits         8983     8938      -45     
- Misses       4001     4099      +98



Impacted Files
Coverage Δ





pybess/test_protobuf_to_dict.py
98.14% <83.33%> (-1.86%)
⬇️


pybess/pm_import.py
84.21% <84.21%> (ø)



pybess/bess.py
43.03% <84.84%> (+3.34%)
⬆️


core/modules/port_out.h
0% <0%> (-100%)
⬇️


core/modules/port_out.cc
2.38% <0%> (-78.58%)
⬇️


core/modules/l2_forward.cc
35.91% <0%> (-14.95%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 03dab10...006cd1e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,605,2017-08-11T01:06:46Z,2017-09-05T05:29:13Z,2017-09-05T05:29:49Z,MERGED,True,4,1,1,https://github.com/nrdmao,allow module .so's to be symbolic links,1,[],https://github.com/NetSys/bess/pull/605,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/605,"If libtool is used to build libraries, then come in the form of .so.0.0.1 for example and then the .so is linked to the version specific .so. With this commit, bessd can load such symlinks. I also added some
logging to add diagnostics on modules loaded and failure to load modules.","If libtool is used to build libraries, then come in the form of .so.0.0.1 for example and then the .so is linked to the version specific .so. With this commit, bessd can load such symlinks. I also added some
logging to add diagnostics on modules loaded and failure to load modules.",True,{}
NetSys/bess,https://github.com/NetSys/bess,605,2017-08-11T01:06:46Z,2017-09-05T05:29:13Z,2017-09-05T05:29:49Z,MERGED,True,4,1,1,https://github.com/nrdmao,allow module .so's to be symbolic links,1,[],https://github.com/NetSys/bess/pull/605,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/605#issuecomment-321716044,"If libtool is used to build libraries, then come in the form of .so.0.0.1 for example and then the .so is linked to the version specific .so. With this commit, bessd can load such symlinks. I also added some
logging to add diagnostics on modules loaded and failure to load modules.","Codecov Report

Merging #605 into master will increase coverage by <.01%.
The diff coverage is 75%.


@@            Coverage Diff             @@
##           master     #605      +/-   ##
==========================================
+ Coverage   69.18%   69.19%   +<.01%     
==========================================
  Files         204      204              
  Lines       12984    12987       +3     
==========================================
+ Hits         8983     8986       +3     
  Misses       4001     4001



Impacted Files
Coverage Δ





core/bessd.cc
68.75% <75%> (-0.04%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 03dab10...613a42a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,605,2017-08-11T01:06:46Z,2017-09-05T05:29:13Z,2017-09-05T05:29:49Z,MERGED,True,4,1,1,https://github.com/nrdmao,allow module .so's to be symbolic links,1,[],https://github.com/NetSys/bess/pull/605,https://github.com/changlan,3,https://github.com/NetSys/bess/pull/605#issuecomment-323830517,"If libtool is used to build libraries, then come in the form of .so.0.0.1 for example and then the .so is linked to the version specific .so. With this commit, bessd can load such symlinks. I also added some
logging to add diagnostics on modules loaded and failure to load modules.",LGTM. Contributor License Agreement pending.,True,{}
NetSys/bess,https://github.com/NetSys/bess,605,2017-08-11T01:06:46Z,2017-09-05T05:29:13Z,2017-09-05T05:29:49Z,MERGED,True,4,1,1,https://github.com/nrdmao,allow module .so's to be symbolic links,1,[],https://github.com/NetSys/bess/pull/605,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/605#issuecomment-327074984,"If libtool is used to build libraries, then come in the form of .so.0.0.1 for example and then the .so is linked to the version specific .so. With this commit, bessd can load such symlinks. I also added some
logging to add diagnostics on modules loaded and failure to load modules.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,606,2017-08-15T18:11:58Z,2017-08-18T03:07:11Z,2017-08-18T16:38:43Z,MERGED,True,71,7,2,https://github.com/chris3torek,Container build fixes,2,[],https://github.com/NetSys/bess/pull/606,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/606,"To build plugins when doing container builds, we need the container build code to export any outside-bess-repo plugins.
A sanity check (do all plugin directories actually exist) also seems like a good idea, but it's a separate commit since it's not required to make the container build work.","To build plugins when doing container builds, we need the container build code to export any outside-bess-repo plugins.
A sanity check (do all plugin directories actually exist) also seems like a good idea, but it's a separate commit since it's not required to make the container build work.",True,{}
NetSys/bess,https://github.com/NetSys/bess,606,2017-08-15T18:11:58Z,2017-08-18T03:07:11Z,2017-08-18T16:38:43Z,MERGED,True,71,7,2,https://github.com/chris3torek,Container build fixes,2,[],https://github.com/NetSys/bess/pull/606,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/606#issuecomment-322556119,"To build plugins when doing container builds, we need the container build code to export any outside-bess-repo plugins.
A sanity check (do all plugin directories actually exist) also seems like a good idea, but it's a separate commit since it's not required to make the container build work.","Codecov Report

Merging #606 into master will decrease coverage by 0.68%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #606      +/-   ##
==========================================
- Coverage   69.23%   68.55%   -0.69%     
==========================================
  Files         204      204              
  Lines       13037    13037              
==========================================
- Hits         9026     8937      -89     
- Misses       4011     4100      +89



Impacted Files
Coverage Δ





core/modules/port_out.h
0% <0%> (-100%)
⬇️


core/modules/port_out.cc
2.38% <0%> (-78.58%)
⬇️


core/modules/l2_forward.cc
35.91% <0%> (-14.95%)
⬇️


core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2d2de3c...9010d9e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,606,2017-08-15T18:11:58Z,2017-08-18T03:07:11Z,2017-08-18T16:38:43Z,MERGED,True,71,7,2,https://github.com/chris3torek,Container build fixes,2,[],https://github.com/NetSys/bess/pull/606,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/606#issuecomment-323247781,"To build plugins when doing container builds, we need the container build code to export any outside-bess-repo plugins.
A sanity check (do all plugin directories actually exist) also seems like a good idea, but it's a separate commit since it's not required to make the container build work.",👍,True,{}
NetSys/bess,https://github.com/NetSys/bess,607,2017-08-15T19:43:28Z,2017-08-18T03:16:12Z,2017-08-18T16:39:14Z,MERGED,True,3,2,1,https://github.com/chris3torek,build.py: fix up the fixup for the DPDK remote,1,[],https://github.com/NetSys/bess/pull/607,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/607,"In commit c3aa0bc we did a
shallow clone of the DPDK repository, then did a fixup step
so that it was easy to un-shallow the repository later.
The fixup step was wrong (""git config remote.url.fetch"" instead
of ""git config remote.origin.fetch"").
This only affects anyone intending to update DPDK, but let's
clean it up (and fix the pep8 complaint about the line length).","In commit c3aa0bc we did a
shallow clone of the DPDK repository, then did a fixup step
so that it was easy to un-shallow the repository later.
The fixup step was wrong (""git config remote.url.fetch"" instead
of ""git config remote.origin.fetch"").
This only affects anyone intending to update DPDK, but let's
clean it up (and fix the pep8 complaint about the line length).",True,{}
NetSys/bess,https://github.com/NetSys/bess,607,2017-08-15T19:43:28Z,2017-08-18T03:16:12Z,2017-08-18T16:39:14Z,MERGED,True,3,2,1,https://github.com/chris3torek,build.py: fix up the fixup for the DPDK remote,1,[],https://github.com/NetSys/bess/pull/607,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/607#issuecomment-322579464,"In commit c3aa0bc we did a
shallow clone of the DPDK repository, then did a fixup step
so that it was easy to un-shallow the repository later.
The fixup step was wrong (""git config remote.url.fetch"" instead
of ""git config remote.origin.fetch"").
This only affects anyone intending to update DPDK, but let's
clean it up (and fix the pep8 complaint about the line length).","Codecov Report

Merging #607 into master will decrease coverage by 0.67%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #607      +/-   ##
==========================================
- Coverage   69.23%   68.55%   -0.68%     
==========================================
  Files         204      204              
  Lines       13037    13037              
==========================================
- Hits         9026     8938      -88     
- Misses       4011     4099      +88



Impacted Files
Coverage Δ





core/modules/port_out.h
0% <0%> (-100%)
⬇️


core/modules/port_out.cc
2.38% <0%> (-78.58%)
⬇️


core/modules/l2_forward.cc
35.91% <0%> (-14.95%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2d2de3c...deb6279. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,607,2017-08-15T19:43:28Z,2017-08-18T03:16:12Z,2017-08-18T16:39:14Z,MERGED,True,3,2,1,https://github.com/chris3torek,build.py: fix up the fixup for the DPDK remote,1,[],https://github.com/NetSys/bess/pull/607,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/607#issuecomment-323248767,"In commit c3aa0bc we did a
shallow clone of the DPDK repository, then did a fixup step
so that it was easy to un-shallow the repository later.
The fixup step was wrong (""git config remote.url.fetch"" instead
of ""git config remote.origin.fetch"").
This only affects anyone intending to update DPDK, but let's
clean it up (and fix the pep8 complaint about the line length).",,True,{}
NetSys/bess,https://github.com/NetSys/bess,609,2017-08-18T00:45:47Z,2017-08-21T19:26:23Z,2017-08-21T20:41:11Z,MERGED,True,7,4,2,https://github.com/chris3torek,Fix coverage,2,[],https://github.com/NetSys/bess/pull/609,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/609,"The -E thing explains why coverage was getting weird.
I put in the correct symlink (as a separate commit) per Sangjin's request.","The -E thing explains why coverage was getting weird.
I put in the correct symlink (as a separate commit) per Sangjin's request.",True,{}
NetSys/bess,https://github.com/NetSys/bess,609,2017-08-18T00:45:47Z,2017-08-21T19:26:23Z,2017-08-21T20:41:11Z,MERGED,True,7,4,2,https://github.com/chris3torek,Fix coverage,2,[],https://github.com/NetSys/bess/pull/609,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/609#issuecomment-323234720,"The -E thing explains why coverage was getting weird.
I put in the correct symlink (as a separate commit) per Sangjin's request.","Codecov Report

Merging #609 into master will increase coverage by 0.46%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #609      +/-   ##
==========================================
+ Coverage   68.82%   69.29%   +0.46%     
==========================================
  Files         204      204              
  Lines       13037    13037              
==========================================
+ Hits         8973     9034      +61     
+ Misses       4064     4003      -61



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/port.cc
89.07% <0%> (+0.84%)
⬆️


core/message.cc
70.96% <0%> (+12.9%)
⬆️


core/modules/l2_forward.cc
50.86% <0%> (+14.94%)
⬆️


core/port.h
93.93% <0%> (+15.15%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update fe81b45...198af32. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,609,2017-08-18T00:45:47Z,2017-08-21T19:26:23Z,2017-08-21T20:41:11Z,MERGED,True,7,4,2,https://github.com/chris3torek,Fix coverage,2,[],https://github.com/NetSys/bess/pull/609,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/609#issuecomment-323830421,"The -E thing explains why coverage was getting weird.
I put in the correct symlink (as a separate commit) per Sangjin's request.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/llvilanova,1,https://github.com/NetSys/bess/pull/613,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.",True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/llvilanova,2,https://github.com/NetSys/bess/pull/613#issuecomment-323703984,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.",I'm not sure how this patch affects the failed test. Any ideas?,True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/613#issuecomment-323853877,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.",Seems like the failure happens with 32bit build and it is reproducible. Trying to debug it...,True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/613#issuecomment-323917275,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","Codecov Report

Merging #613 into master will increase coverage by 0.02%.
The diff coverage is 77.58%.


@@            Coverage Diff             @@
##           master     #613      +/-   ##
==========================================
+ Coverage   69.29%   69.32%   +0.02%     
==========================================
  Files         204      204              
  Lines       13037    13061      +24     
==========================================
+ Hits         9034     9054      +20     
- Misses       4003     4007       +4



Impacted Files
Coverage Δ





core/drivers/unix_socket.h
100% <100%> (ø)
⬆️


core/drivers/unix_socket.cc
80.91% <77.19%> (-4.14%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/dpdk.cc
82.55% <0%> (+4.65%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2ee1973...8cd0de6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/llvilanova,5,https://github.com/NetSys/bess/pull/613#issuecomment-323992960,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","Is there some way for me to easily test the failing experiment on that build?
Also, is it possible that DeInit is being called before Init? (I've checked this never happens when Init returns a command error) That could trigger a file descriptor close before properly setting the descriptors (they should all be zero from the constructor).",True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/llvilanova,6,https://github.com/NetSys/bess/pull/613#issuecomment-324091921,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","I just did a cleanup to ensure there's no threads or FDs left behind when a module is destroyed, but it still shows the same failure.
If you give me a command line to reproduce the failing build and specific test I'll give it a shot in the debugger.",True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/613#issuecomment-324104003,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","I don't know how to reliably reproduce the issue locally. What I did was using Travis with my private fork of this repo. The issue seems to happen only with 32bit builds.
What I realized is that bessctl/conf/testing/module_tests/vlan.py opens lots of (more precisely, 450) UnixSocketPort. Given that each port now opens three (not two) file descriptors, my theory is that it may exceed the file descriptor limit of 1024. For processes launched by root, maybe this limit only applies to 32bit programs. Could you update the file as below?
-        return [VLANSplit(), 1, 150, expected]
+        return [VLANSplit(), 1, 30, expected]

-    OUTPUT_TEST_INPUTS.append(output_test([1, 100, 77, -1, 149, 50, 100, -1]))
-    OUTPUT_TEST_INPUTS.append(output_test([100, 77, -1, 149, 50, 100, -1, 33, 70]))
-    OUTPUT_TEST_INPUTS.append(output_test([100, 77, -1, 149, 50, 100, -1, 33, 70], True))
+    OUTPUT_TEST_INPUTS.append(output_test([1, 17, -1, 29, 10, 13, 7]))
+    OUTPUT_TEST_INPUTS.append(output_test([1, 17, -1, 29, 10, 13, 7], True))",True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/llvilanova,8,https://github.com/NetSys/bess/pull/613#issuecomment-324111177,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.",I'm on it.,True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/613#issuecomment-324140344,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","Two requests regarding file descriptor usage:

Instead of using epoll, could you switch to select or poll?
Instead of using pipe, you can terminate the thread with pthread_cancel or pthread_kill

Let's have a separate function for the thread, rather than a large lambda block.",True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/llvilanova,10,https://github.com/NetSys/bess/pull/613#issuecomment-324174412,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","Can't use poll because wakeup conditions apply to all FDs (therefore the thread will be woken up too often - i.e., every time there's data on the client socket, not only when it's closed, since we need to wait for available reads on the accept socket).
Can't use select either because socket disconnect can only be detected together with available read events (i.e., will wake up too often when the client socket is readable, not only when it's closed).
So, is it OK to keep it with epoll?",True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/sangjinhan,11,https://github.com/NetSys/bess/pull/613#issuecomment-324176871,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","I am not sure if I understood correctly. You can add client_fd_ only to exceptfds for select(), or set it only with POLLRDHUP for poll()? Just like epoll, you should be able to specify what events you want to monitor for individual file descriptors. I vaguely remember that all select/poll/epoll are implemented with the same backend code in the kernel.
Maybe I am missing something here. If you find epoll is the only way to reliably detect disconnection of client_fd_, please go ahead.",True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/llvilanova,12,https://github.com/NetSys/bess/pull/613#issuecomment-324184975,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","Ooops, sorry. I read poll too quickly and misunderstood it; yes it's a suitable replacement to epoll_wait.
For the record, the limitations on select still stand: there is no equivalent to EPOLLHUP/POLLHUP in select, and one must instead add a FD into readfds and check if a read returns zero (overkill for this FD monitoring thread).",True,{}
NetSys/bess,https://github.com/NetSys/bess,613,2017-08-21T09:01:49Z,2017-08-24T21:28:42Z,2017-08-27T12:19:55Z,MERGED,True,117,78,3,https://github.com/llvilanova,drivers/unix_socket: Let clients to freely connect/disconnect,12,[],https://github.com/NetSys/bess/pull/613,https://github.com/sangjinhan,13,https://github.com/NetSys/bess/pull/613#issuecomment-324763021,"In order to allow external controllers (connected through a UNIX socket) truly
independent of bessd, client disconnection must always be detected, regardless
of whether the port is used or not. This is done by keeping a thread
around (using epoll).
Before, this driver would only reliably detect disconnects when the port is used
to receive packets. When used to send packets, the port would only detect
disconnects on an actual send, which depends on the processed packets; this led
to only some instances accepting new clients, making external program
reconnection impossible.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,614,2017-08-21T20:45:55Z,2017-08-21T21:23:49Z,2017-08-21T21:29:33Z,MERGED,True,1,1,1,https://github.com/chris3torek,Fix minor CLI issue (#612),1,[],https://github.com/NetSys/bess/pull/614,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/614,(driver name was mis-classified as name instead of name+),(driver name was mis-classified as name instead of name+),True,{}
NetSys/bess,https://github.com/NetSys/bess,614,2017-08-21T20:45:55Z,2017-08-21T21:23:49Z,2017-08-21T21:29:33Z,MERGED,True,1,1,1,https://github.com/chris3torek,Fix minor CLI issue (#612),1,[],https://github.com/NetSys/bess/pull/614,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/614#issuecomment-323855924,(driver name was mis-classified as name instead of name+),"Codecov Report

Merging #614 into master will decrease coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master    #614      +/-   ##
=========================================
- Coverage   69.31%   69.3%   -0.01%     
=========================================
  Files         204     204              
  Lines       13037   13037              
=========================================
- Hits         9036    9035       -1     
- Misses       4001    4002       +1



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
85.04% <0%> (-0.94%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3792f46...1b9db04. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,614,2017-08-21T20:45:55Z,2017-08-21T21:23:49Z,2017-08-21T21:29:33Z,MERGED,True,1,1,1,https://github.com/chris3torek,Fix minor CLI issue (#612),1,[],https://github.com/NetSys/bess/pull/614,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/614#issuecomment-323856692,(driver name was mis-classified as name instead of name+),"Wow, codecov is picky!  Minus less than .01%, and it's just a random chance one I think (not sure how one gets EINTR there). 🙄",True,{}
NetSys/bess,https://github.com/NetSys/bess,614,2017-08-21T20:45:55Z,2017-08-21T21:23:49Z,2017-08-21T21:29:33Z,MERGED,True,1,1,1,https://github.com/chris3torek,Fix minor CLI issue (#612),1,[],https://github.com/NetSys/bess/pull/614,https://github.com/changlan,4,https://github.com/NetSys/bess/pull/614#issuecomment-323856867,(driver name was mis-classified as name instead of name+),"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,615,2017-08-22T17:24:57Z,2017-08-22T19:52:46Z,2017-08-22T23:48:56Z,MERGED,True,44,44,1,https://github.com/ddiproietto,Allocate more memory with --no-huge,2,[],https://github.com/NetSys/bess/pull/615,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/615,"This fixes BESS with --no-huge, which can be useful for testing.
Also, this PR refactors DPDK args creation and uses more of C++.  I think it's a little bit more readable this way.","This fixes BESS with --no-huge, which can be useful for testing.
Also, this PR refactors DPDK args creation and uses more of C++.  I think it's a little bit more readable this way.",True,{}
NetSys/bess,https://github.com/NetSys/bess,615,2017-08-22T17:24:57Z,2017-08-22T19:52:46Z,2017-08-22T23:48:56Z,MERGED,True,44,44,1,https://github.com/ddiproietto,Allocate more memory with --no-huge,2,[],https://github.com/NetSys/bess/pull/615,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/615#issuecomment-324104376,"This fixes BESS with --no-huge, which can be useful for testing.
Also, this PR refactors DPDK args creation and uses more of C++.  I think it's a little bit more readable this way.","Codecov Report

Merging #615 into master will increase coverage by 0.04%.
The diff coverage is 85.18%.


@@            Coverage Diff             @@
##           master     #615      +/-   ##
==========================================
+ Coverage   69.29%   69.34%   +0.04%     
==========================================
  Files         204      204              
  Lines       13037    13037              
==========================================
+ Hits         9034     9040       +6     
+ Misses       4003     3997       -6



Impacted Files
Coverage Δ





core/dpdk.cc
82.55% <85.18%> (+4.65%)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2ee1973...ec7e34a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,615,2017-08-22T17:24:57Z,2017-08-22T19:52:46Z,2017-08-22T23:48:56Z,MERGED,True,44,44,1,https://github.com/ddiproietto,Allocate more memory with --no-huge,2,[],https://github.com/NetSys/bess/pull/615,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/615#issuecomment-324133432,"This fixes BESS with --no-huge, which can be useful for testing.
Also, this PR refactors DPDK args creation and uses more of C++.  I think it's a little bit more readable this way.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,616,2017-08-24T00:28:18Z,2017-08-27T06:09:21Z,2017-08-29T18:35:31Z,MERGED,True,6,2,1,https://github.com/chris3torek,module tests: pause workers after custom tests,1,[],https://github.com/NetSys/bess/pull/616,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/616,"When we run custom tests, the custom-test loop reads:
for each test:
    pause workers
    reset pipeline
    run test

so that each one starts with a fresh context.  But custom
tests, especially if they fail, may leave workers running.
Meanwhile the main loop expects not to need to pause, it just
does a pipeline reset:
for each module:
    reset pipeline
    (run all the module tests)

To keep the number of rpc's down do one extra ""pause"" after
all custom tests if and only if there are any custom tests.
It would be simpler to do a pause at the top of the ""for each
module"" loop, though...
(While here, trim out unrelated now-irrelevant comment about
scope, fixed in c524bc8.)","When we run custom tests, the custom-test loop reads:
for each test:
    pause workers
    reset pipeline
    run test

so that each one starts with a fresh context.  But custom
tests, especially if they fail, may leave workers running.
Meanwhile the main loop expects not to need to pause, it just
does a pipeline reset:
for each module:
    reset pipeline
    (run all the module tests)

To keep the number of rpc's down do one extra ""pause"" after
all custom tests if and only if there are any custom tests.
It would be simpler to do a pause at the top of the ""for each
module"" loop, though...
(While here, trim out unrelated now-irrelevant comment about
scope, fixed in c524bc8.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,616,2017-08-24T00:28:18Z,2017-08-27T06:09:21Z,2017-08-29T18:35:31Z,MERGED,True,6,2,1,https://github.com/chris3torek,module tests: pause workers after custom tests,1,[],https://github.com/NetSys/bess/pull/616,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/616#issuecomment-324503309,"When we run custom tests, the custom-test loop reads:
for each test:
    pause workers
    reset pipeline
    run test

so that each one starts with a fresh context.  But custom
tests, especially if they fail, may leave workers running.
Meanwhile the main loop expects not to need to pause, it just
does a pipeline reset:
for each module:
    reset pipeline
    (run all the module tests)

To keep the number of rpc's down do one extra ""pause"" after
all custom tests if and only if there are any custom tests.
It would be simpler to do a pause at the top of the ""for each
module"" loop, though...
(While here, trim out unrelated now-irrelevant comment about
scope, fixed in c524bc8.)","Codecov Report

Merging #616 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #616      +/-   ##
==========================================
+ Coverage   69.33%   69.34%   +<.01%     
==========================================
  Files         204      204              
  Lines       13037    13037              
==========================================
+ Hits         9039     9040       +1     
+ Misses       3998     3997       -1



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
85.98% <0%> (+0.93%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 425ce73...083a16f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,616,2017-08-24T00:28:18Z,2017-08-27T06:09:21Z,2017-08-29T18:35:31Z,MERGED,True,6,2,1,https://github.com/chris3torek,module tests: pause workers after custom tests,1,[],https://github.com/NetSys/bess/pull/616,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/616#issuecomment-324693071,"When we run custom tests, the custom-test loop reads:
for each test:
    pause workers
    reset pipeline
    run test

so that each one starts with a fresh context.  But custom
tests, especially if they fail, may leave workers running.
Meanwhile the main loop expects not to need to pause, it just
does a pipeline reset:
for each module:
    reset pipeline
    (run all the module tests)

To keep the number of rpc's down do one extra ""pause"" after
all custom tests if and only if there are any custom tests.
It would be simpler to do a pause at the top of the ""for each
module"" loop, though...
(While here, trim out unrelated now-irrelevant comment about
scope, fixed in c524bc8.)","Kevin had what I think is a good suggestion: we should have an RPC to do both (pause-all-reset), perhaps an optional pause-all flag in the reset RPC. This would cut the number of RPCs in half for the usual case. I'm not sure about backwards-compatiblity issues though.",True,{}
NetSys/bess,https://github.com/NetSys/bess,616,2017-08-24T00:28:18Z,2017-08-27T06:09:21Z,2017-08-29T18:35:31Z,MERGED,True,6,2,1,https://github.com/chris3torek,module tests: pause workers after custom tests,1,[],https://github.com/NetSys/bess/pull/616,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/616#issuecomment-324767080,"When we run custom tests, the custom-test loop reads:
for each test:
    pause workers
    reset pipeline
    run test

so that each one starts with a fresh context.  But custom
tests, especially if they fail, may leave workers running.
Meanwhile the main loop expects not to need to pause, it just
does a pipeline reset:
for each module:
    reset pipeline
    (run all the module tests)

To keep the number of rpc's down do one extra ""pause"" after
all custom tests if and only if there are any custom tests.
It would be simpler to do a pause at the top of the ""for each
module"" loop, though...
(While here, trim out unrelated now-irrelevant comment about
scope, fixed in c524bc8.)","Perhaps the easiest way is moving the bess.pause_all() at the beginning of for test in CUSTOM_TEST_FUNCTIONS: loop to the end? At least it is what crash/output tests seem to do... I think the intended invariant for each per-type test loop is that the pipeline has been already paused before start, and after end.",True,{}
NetSys/bess,https://github.com/NetSys/bess,616,2017-08-24T00:28:18Z,2017-08-27T06:09:21Z,2017-08-29T18:35:31Z,MERGED,True,6,2,1,https://github.com/chris3torek,module tests: pause workers after custom tests,1,[],https://github.com/NetSys/bess/pull/616,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/616#issuecomment-325179299,"When we run custom tests, the custom-test loop reads:
for each test:
    pause workers
    reset pipeline
    run test

so that each one starts with a fresh context.  But custom
tests, especially if they fail, may leave workers running.
Meanwhile the main loop expects not to need to pause, it just
does a pipeline reset:
for each module:
    reset pipeline
    (run all the module tests)

To keep the number of rpc's down do one extra ""pause"" after
all custom tests if and only if there are any custom tests.
It would be simpler to do a pause at the top of the ""for each
module"" loop, though...
(While here, trim out unrelated now-irrelevant comment about
scope, fixed in c524bc8.)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,618,2017-08-24T19:38:24Z,2017-08-30T00:30:36Z,2017-08-30T19:02:01Z,MERGED,True,40,6,2,https://github.com/ddiproietto,Makefile: Use pkg-config if available.,4,[],https://github.com/NetSys/bess/pull/618,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/618,"Debian buster(testing) and presumably ubuntu 17.10 package all the
dependencies required to build BESS (except dpdk).
New versions of GRPC (packaged in debian) require libc-ares and if BESS
is statically linked (by default it is), -lcares must be passed to the
linker.
Instead of forcing a new dependency for all users (even the ones that don't
need it), this commit makes use of pkg-config, which will automatically
include the indirect dependencies (such as libc-ares).
For users that have an old grpc version (such as container_build.py),
pkg-config is still optional.  I'd like to make it required, but a new
container image must be generated, and that's a decision we can make
later.","Debian buster(testing) and presumably ubuntu 17.10 package all the
dependencies required to build BESS (except dpdk).
New versions of GRPC (packaged in debian) require libc-ares and if BESS
is statically linked (by default it is), -lcares must be passed to the
linker.
Instead of forcing a new dependency for all users (even the ones that don't
need it), this commit makes use of pkg-config, which will automatically
include the indirect dependencies (such as libc-ares).
For users that have an old grpc version (such as container_build.py),
pkg-config is still optional.  I'd like to make it required, but a new
container image must be generated, and that's a decision we can make
later.",True,{}
NetSys/bess,https://github.com/NetSys/bess,618,2017-08-24T19:38:24Z,2017-08-30T00:30:36Z,2017-08-30T19:02:01Z,MERGED,True,40,6,2,https://github.com/ddiproietto,Makefile: Use pkg-config if available.,4,[],https://github.com/NetSys/bess/pull/618,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/618#issuecomment-325060198,"Debian buster(testing) and presumably ubuntu 17.10 package all the
dependencies required to build BESS (except dpdk).
New versions of GRPC (packaged in debian) require libc-ares and if BESS
is statically linked (by default it is), -lcares must be passed to the
linker.
Instead of forcing a new dependency for all users (even the ones that don't
need it), this commit makes use of pkg-config, which will automatically
include the indirect dependencies (such as libc-ares).
For users that have an old grpc version (such as container_build.py),
pkg-config is still optional.  I'd like to make it required, but a new
container image must be generated, and that's a decision we can make
later.","Codecov Report

Merging #618 into master will decrease coverage by 0.02%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master    #618      +/-   ##
=========================================
- Coverage   69.33%   69.3%   -0.03%     
=========================================
  Files         204     204              
  Lines       13037   13068      +31     
=========================================
+ Hits         9039    9057      +18     
- Misses       3998    4011      +13



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
80.15% <0%> (-4.9%)
⬇️


core/modules/queue.h
100% <0%> (ø)
⬆️


core/modules/vlan_split.h
0% <0%> (ø)
⬆️


core/modules/port_inc.h
100% <0%> (ø)
⬆️


core/drivers/unix_socket.h
100% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 425ce73...bbb11c3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,618,2017-08-24T19:38:24Z,2017-08-30T00:30:36Z,2017-08-30T19:02:01Z,MERGED,True,40,6,2,https://github.com/ddiproietto,Makefile: Use pkg-config if available.,4,[],https://github.com/NetSys/bess/pull/618,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/618#issuecomment-325842726,"Debian buster(testing) and presumably ubuntu 17.10 package all the
dependencies required to build BESS (except dpdk).
New versions of GRPC (packaged in debian) require libc-ares and if BESS
is statically linked (by default it is), -lcares must be passed to the
linker.
Instead of forcing a new dependency for all users (even the ones that don't
need it), this commit makes use of pkg-config, which will automatically
include the indirect dependencies (such as libc-ares).
For users that have an old grpc version (such as container_build.py),
pkg-config is still optional.  I'd like to make it required, but a new
container image must be generated, and that's a decision we can make
later.","Great, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,618,2017-08-24T19:38:24Z,2017-08-30T00:30:36Z,2017-08-30T19:02:01Z,MERGED,True,40,6,2,https://github.com/ddiproietto,Makefile: Use pkg-config if available.,4,[],https://github.com/NetSys/bess/pull/618,https://github.com/Codeacious,4,https://github.com/NetSys/bess/pull/618#issuecomment-325879150,"Debian buster(testing) and presumably ubuntu 17.10 package all the
dependencies required to build BESS (except dpdk).
New versions of GRPC (packaged in debian) require libc-ares and if BESS
is statically linked (by default it is), -lcares must be passed to the
linker.
Instead of forcing a new dependency for all users (even the ones that don't
need it), this commit makes use of pkg-config, which will automatically
include the indirect dependencies (such as libc-ares).
For users that have an old grpc version (such as container_build.py),
pkg-config is still optional.  I'd like to make it required, but a new
container image must be generated, and that's a decision we can make
later.","This pull request appears to have broken static builds for me on Ubuntu 16.04 LTS (kernel 4.4.0-93-generic):
/usr/local/home/rotor/bess/deps/dpdk-17.05/build/lib/librte_pmd_ark.a(ark_ethdev.o): In function `check_for_ext':
/usr/local/home/rotor/bess/deps/dpdk-17.05/drivers/net/ark/ark_ethdev.c:199: warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/libdl.a(dlopen.o): In function `dlopen':
(.text+0x5): undefined reference to `__dlopen'
/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/libdl.a(dlclose.o): In function `dlclose':
(.text+0x1): undefined reference to `__dlclose'
/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/libdl.a(dlsym.o): In function `dlsym':
(.text+0x5): undefined reference to `__dlsym'
/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/libdl.a(dlerror.o): In function `dlerror':
(.text+0x1): undefined reference to `__dlerror'
collect2: error: ld returned 1 exit status
Error: port_test
g++ -o port_test port_test.o gtest-all.o gtest_main.o bess.a -rdynamic -L/usr/local/home/rotor/bess/deps/dpdk-17.05/build/lib -Wl,-rpath=/usr/local/home/rotor/bess/deps/dpdk-17.05/build/lib -pthread -static-libstdc++ -lpthread -ldl -Wl,-non_shared -Wl,--whole-archive -ldpdk -Wl,--no-whole-archive -L/usr/local/lib -lglog -lprotobuf -pthread -lpthread -lz -lgrpc++ -lgrpc -lssl -ldl -lcrypto -ldl -lunwind -llzma -lz -lpcap -lgflags -Wl,-call_shared -lpthread -ldl -libverbs
Makefile:394: recipe for target 'port_test' failed

The full output is much longer, but are duplicates of this error on other files.
The issue seems to be that pkg-config --libs --static grpc++ returns -L/usr/local/lib -lgrpc++ -lgrpc -lz -lssl -ldl -lcrypto -ldl, meaning g++ attempts to use symbols from the static library libdl.a instead of libdl.so when linking DPDK. Manually running the linking command without the additional -ldl flags returned by pkg-config solves the issue.
An easy, but hacky, way to do this in the Makefile is to use sed:
PKG_LIBS := $(shell $(PKG_CONFIG) --static --libs $(PKG_CONFIG_DEPS) | sed -e s/-ldl//g)
But there's probably better method to solve this issue.",True,{}
NetSys/bess,https://github.com/NetSys/bess,618,2017-08-24T19:38:24Z,2017-08-30T00:30:36Z,2017-08-30T19:02:01Z,MERGED,True,40,6,2,https://github.com/ddiproietto,Makefile: Use pkg-config if available.,4,[],https://github.com/NetSys/bess/pull/618,https://github.com/ddiproietto,5,https://github.com/NetSys/bess/pull/618#issuecomment-326087697,"Debian buster(testing) and presumably ubuntu 17.10 package all the
dependencies required to build BESS (except dpdk).
New versions of GRPC (packaged in debian) require libc-ares and if BESS
is statically linked (by default it is), -lcares must be passed to the
linker.
Instead of forcing a new dependency for all users (even the ones that don't
need it), this commit makes use of pkg-config, which will automatically
include the indirect dependencies (such as libc-ares).
For users that have an old grpc version (such as container_build.py),
pkg-config is still optional.  I'd like to make it required, but a new
container image must be generated, and that's a decision we can make
later.","Thanks for reporting this and sorry for the breakage.
I wasn't able to reproduce it on ubuntu 16.04, but your suggestion makes sense to me (I like it better than listing twice the libraries).
I submitted PR #626, I removes -ld from the static libraries, I hope it fixes the problem for you.
Thanks",True,{}
NetSys/bess,https://github.com/NetSys/bess,619,2017-08-25T00:29:32Z,2017-08-25T22:53:35Z,2017-08-29T18:35:55Z,MERGED,True,2,0,1,https://github.com/chris3torek,[trivial] .gitignore: ignore Vagrant temporaries,1,[],https://github.com/NetSys/bess/pull/619,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/619,"Restore dot-file ignore lost in the general gitignore
reduction in bdfb282.","Restore dot-file ignore lost in the general gitignore
reduction in bdfb282.",True,{}
NetSys/bess,https://github.com/NetSys/bess,619,2017-08-25T00:29:32Z,2017-08-25T22:53:35Z,2017-08-29T18:35:55Z,MERGED,True,2,0,1,https://github.com/chris3torek,[trivial] .gitignore: ignore Vagrant temporaries,1,[],https://github.com/NetSys/bess/pull/619,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/619#issuecomment-324796580,"Restore dot-file ignore lost in the general gitignore
reduction in bdfb282.","Codecov Report

Merging #619 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #619   +/-   ##
=======================================
  Coverage   69.31%   69.31%           
=======================================
  Files         204      204           
  Lines       13061    13061           
=======================================
  Hits         9053     9053           
  Misses       4008     4008

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0b4ffeb...fdbc63f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,619,2017-08-25T00:29:32Z,2017-08-25T22:53:35Z,2017-08-29T18:35:55Z,MERGED,True,2,0,1,https://github.com/chris3torek,[trivial] .gitignore: ignore Vagrant temporaries,1,[],https://github.com/NetSys/bess/pull/619,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/619#issuecomment-325051311,"Restore dot-file ignore lost in the general gitignore
reduction in bdfb282.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,620,2017-08-25T01:00:50Z,2017-08-25T22:49:50Z,2017-08-25T23:11:24Z,MERGED,True,9,1,3,https://github.com/ddiproietto,modules: Thread safety checker fixes.,1,[],https://github.com/NetSys/bess/pull/620,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/620,"VLANSplit is stateless and can be run from multiple threads.
Queue contains a multiproducer ring.  It is single consumer, but since
the module registers only one task that shouldn't be a problem.
PortInc supports more than one task, and that needs to be taken into
account.","VLANSplit is stateless and can be run from multiple threads.
Queue contains a multiproducer ring.  It is single consumer, but since
the module registers only one task that shouldn't be a problem.
PortInc supports more than one task, and that needs to be taken into
account.",True,{}
NetSys/bess,https://github.com/NetSys/bess,620,2017-08-25T01:00:50Z,2017-08-25T22:49:50Z,2017-08-25T23:11:24Z,MERGED,True,9,1,3,https://github.com/ddiproietto,modules: Thread safety checker fixes.,1,[],https://github.com/NetSys/bess/pull/620,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/620#issuecomment-324800787,"VLANSplit is stateless and can be run from multiple threads.
Queue contains a multiproducer ring.  It is single consumer, but since
the module registers only one task that shouldn't be a problem.
PortInc supports more than one task, and that needs to be taken into
account.","Codecov Report

Merging #620 into master will decrease coverage by <.01%.
The diff coverage is 62.5%.


@@            Coverage Diff            @@
##           master    #620      +/-   ##
=========================================
- Coverage   69.31%   69.3%   -0.01%     
=========================================
  Files         204     204              
  Lines       13061   13068       +7     
=========================================
+ Hits         9053    9057       +4     
- Misses       4008    4011       +3



Impacted Files
Coverage Δ





core/modules/vlan_split.h
0% <0%> (ø)
⬆️


core/modules/port_inc.h
100% <100%> (ø)
⬆️


core/modules/queue.h
100% <100%> (ø)
⬆️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/drivers/unix_socket.cc
80.91% <0%> (+0.76%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0b4ffeb...d5b5f4a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,620,2017-08-25T01:00:50Z,2017-08-25T22:49:50Z,2017-08-25T23:11:24Z,MERGED,True,9,1,3,https://github.com/ddiproietto,modules: Thread safety checker fixes.,1,[],https://github.com/NetSys/bess/pull/620,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/620#issuecomment-325050866,"VLANSplit is stateless and can be run from multiple threads.
Queue contains a multiproducer ring.  It is single consumer, but since
the module registers only one task that shouldn't be a problem.
PortInc supports more than one task, and that needs to be taken into
account.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,621,2017-08-27T06:11:58Z,2017-08-29T18:25:50Z,2017-09-06T00:22:59Z,MERGED,True,8,7,1,https://github.com/sangjinhan,Make path for module tests configurable,1,[],https://github.com/NetSys/bess/pull/621,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/621,"This commit introduces a new env variable TEST_PATH, to specify custom module test directory other than conf/testing/module_tests.","This commit introduces a new env variable TEST_PATH, to specify custom module test directory other than conf/testing/module_tests.",True,{}
NetSys/bess,https://github.com/NetSys/bess,621,2017-08-27T06:11:58Z,2017-08-29T18:25:50Z,2017-09-06T00:22:59Z,MERGED,True,8,7,1,https://github.com/sangjinhan,Make path for module tests configurable,1,[],https://github.com/NetSys/bess/pull/621,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/621#issuecomment-325181077,"This commit introduces a new env variable TEST_PATH, to specify custom module test directory other than conf/testing/module_tests.","Codecov Report

Merging #621 into master will decrease coverage by 0.03%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #621      +/-   ##
==========================================
- Coverage   69.32%   69.29%   -0.04%     
==========================================
  Files         204      204              
  Lines       13068    13068              
==========================================
- Hits         9060     9056       -4     
- Misses       4008     4012       +4



Impacted Files
Coverage Δ





core/modules/port_out.cc
80.95% <0%> (-2.39%)
⬇️


core/drivers/unix_socket.cc
80.15% <0%> (-1.53%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0716603...e91e6fd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,621,2017-08-27T06:11:58Z,2017-08-29T18:25:50Z,2017-09-06T00:22:59Z,MERGED,True,8,7,1,https://github.com/sangjinhan,Make path for module tests configurable,1,[],https://github.com/NetSys/bess/pull/621,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/621#issuecomment-325752652,"This commit introduces a new env variable TEST_PATH, to specify custom module test directory other than conf/testing/module_tests.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,622,2017-08-27T06:53:38Z,2017-08-27T08:26:56Z,2017-09-06T00:22:58Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Add qid to QueueOut::GetDesc(),1,[],https://github.com/NetSys/bess/pull/622,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/622,"Unlike QueueInc module, show pipeline does not show which qid a QueueOut module is associated with. This commit fixes it.","Unlike QueueInc module, show pipeline does not show which qid a QueueOut module is associated with. This commit fixes it.",True,{}
NetSys/bess,https://github.com/NetSys/bess,622,2017-08-27T06:53:38Z,2017-08-27T08:26:56Z,2017-09-06T00:22:58Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Add qid to QueueOut::GetDesc(),1,[],https://github.com/NetSys/bess/pull/622,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/622#issuecomment-325181942,"Unlike QueueInc module, show pipeline does not show which qid a QueueOut module is associated with. This commit fixes it.","Codecov Report

Merging #622 into master will decrease coverage by 0.02%.
The diff coverage is 0%.


@@            Coverage Diff            @@
##           master    #622      +/-   ##
=========================================
- Coverage   69.32%   69.3%   -0.03%     
=========================================
  Files         204     204              
  Lines       13068   13068              
=========================================
- Hits         9060    9057       -3     
- Misses       4008    4011       +3



Impacted Files
Coverage Δ





core/modules/queue_out.cc
2.56% <0%> (ø)
⬆️


core/modules/port_out.cc
80.95% <0%> (-2.39%)
⬇️


core/drivers/unix_socket.cc
80.15% <0%> (-1.53%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0716603...f2ed0a1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,622,2017-08-27T06:53:38Z,2017-08-27T08:26:56Z,2017-09-06T00:22:58Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Add qid to QueueOut::GetDesc(),1,[],https://github.com/NetSys/bess/pull/622,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/622#issuecomment-325184503,"Unlike QueueInc module, show pipeline does not show which qid a QueueOut module is associated with. This commit fixes it.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,623,2017-08-27T08:00:52Z,2017-08-28T17:03:47Z,2017-09-06T00:22:57Z,MERGED,True,11,2,1,https://github.com/sangjinhan,Fix RoundRobin crash with zero output gate,1,[],https://github.com/NetSys/bess/pull/623,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/623,"If RoundRobin module has no output gate, it crashes due to division by zero. In this case, the ""right"" behavior should be just dropping packets.
Also, this commit replaces the modulo(%) operation with a simple if branch. It saves about 22 cycles per batch or packet, depending on the operation mode of RoundRobin.","If RoundRobin module has no output gate, it crashes due to division by zero. In this case, the ""right"" behavior should be just dropping packets.
Also, this commit replaces the modulo(%) operation with a simple if branch. It saves about 22 cycles per batch or packet, depending on the operation mode of RoundRobin.",True,{}
NetSys/bess,https://github.com/NetSys/bess,623,2017-08-27T08:00:52Z,2017-08-28T17:03:47Z,2017-09-06T00:22:57Z,MERGED,True,11,2,1,https://github.com/sangjinhan,Fix RoundRobin crash with zero output gate,1,[],https://github.com/NetSys/bess/pull/623,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/623#issuecomment-325184847,"If RoundRobin module has no output gate, it crashes due to division by zero. In this case, the ""right"" behavior should be just dropping packets.
Also, this commit replaces the modulo(%) operation with a simple if branch. It saves about 22 cycles per batch or packet, depending on the operation mode of RoundRobin.","Codecov Report

Merging #623 into master will decrease coverage by 0.02%.
The diff coverage is 71.42%.


@@            Coverage Diff            @@
##           master    #623      +/-   ##
=========================================
- Coverage   69.32%   69.3%   -0.03%     
=========================================
  Files         204     204              
  Lines       13068   13072       +4     
=========================================
- Hits         9060    9059       -1     
- Misses       4008    4013       +5



Impacted Files
Coverage Δ





core/modules/round_robin.cc
52.94% <71.42%> (-0.26%)
⬇️


core/modules/port_out.cc
80.95% <0%> (-2.39%)
⬇️


core/drivers/unix_socket.cc
80.91% <0%> (-0.77%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0716603...f8c3a7c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,623,2017-08-27T08:00:52Z,2017-08-28T17:03:47Z,2017-09-06T00:22:57Z,MERGED,True,11,2,1,https://github.com/sangjinhan,Fix RoundRobin crash with zero output gate,1,[],https://github.com/NetSys/bess/pull/623,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/623#issuecomment-325412858,"If RoundRobin module has no output gate, it crashes due to division by zero. In this case, the ""right"" behavior should be just dropping packets.
Also, this commit replaces the modulo(%) operation with a simple if branch. It saves about 22 cycles per batch or packet, depending on the operation mode of RoundRobin.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,624,2017-08-28T17:56:01Z,2017-08-31T02:57:24Z,2017-09-06T00:22:56Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Print out BESS envvar warnings to stderr,1,[],https://github.com/NetSys/bess/pull/624,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/624,"Environment variable XXX is not set. Using default value YYY better be sent to stderr, so that external scripts can read stdout for ""real"" output.","Environment variable XXX is not set. Using default value YYY better be sent to stderr, so that external scripts can read stdout for ""real"" output.",True,{}
NetSys/bess,https://github.com/NetSys/bess,624,2017-08-28T17:56:01Z,2017-08-31T02:57:24Z,2017-09-06T00:22:56Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Print out BESS envvar warnings to stderr,1,[],https://github.com/NetSys/bess/pull/624,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/624#issuecomment-325439247,"Environment variable XXX is not set. Using default value YYY better be sent to stderr, so that external scripts can read stdout for ""real"" output.","Codecov Report

Merging #624 into master will decrease coverage by 0.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #624      +/-   ##
==========================================
- Coverage    69.3%   69.29%   -0.02%     
==========================================
  Files         204      204              
  Lines       13072    13072              
==========================================
- Hits         9060     9058       -2     
- Misses       4012     4014       +2



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
80.15% <0%> (-0.77%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 122e4ce...e3642d2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,624,2017-08-28T17:56:01Z,2017-08-31T02:57:24Z,2017-09-06T00:22:56Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Print out BESS envvar warnings to stderr,1,[],https://github.com/NetSys/bess/pull/624,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/624#issuecomment-326175533,"Environment variable XXX is not set. Using default value YYY better be sent to stderr, so that external scripts can read stdout for ""real"" output.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,626,2017-08-30T19:00:34Z,2017-09-04T02:06:34Z,2017-09-08T19:05:20Z,MERGED,True,6,4,1,https://github.com/ddiproietto,Makefile: Fix build on ubuntu 16.04 with pkg-config.,1,[],https://github.com/NetSys/bess/pull/626,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/626,"Instead of listing twice the libraries that we want to link dynamically
with, we can simply filter those out from the result of pkg-config.
This should fix the build in ubuntu 16.04 (although I wasn't able to
reproduce the problem).
Reported and suggested by @Codeacious","Instead of listing twice the libraries that we want to link dynamically
with, we can simply filter those out from the result of pkg-config.
This should fix the build in ubuntu 16.04 (although I wasn't able to
reproduce the problem).
Reported and suggested by @Codeacious",True,{}
NetSys/bess,https://github.com/NetSys/bess,626,2017-08-30T19:00:34Z,2017-09-04T02:06:34Z,2017-09-08T19:05:20Z,MERGED,True,6,4,1,https://github.com/ddiproietto,Makefile: Fix build on ubuntu 16.04 with pkg-config.,1,[],https://github.com/NetSys/bess/pull/626,https://github.com/Codeacious,2,https://github.com/NetSys/bess/pull/626#issuecomment-326108210,"Instead of listing twice the libraries that we want to link dynamically
with, we can simply filter those out from the result of pkg-config.
This should fix the build in ubuntu 16.04 (although I wasn't able to
reproduce the problem).
Reported and suggested by @Codeacious",I'm able to build successfully with this change. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,626,2017-08-30T19:00:34Z,2017-09-04T02:06:34Z,2017-09-08T19:05:20Z,MERGED,True,6,4,1,https://github.com/ddiproietto,Makefile: Fix build on ubuntu 16.04 with pkg-config.,1,[],https://github.com/NetSys/bess/pull/626,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/626#issuecomment-326114443,"Instead of listing twice the libraries that we want to link dynamically
with, we can simply filter those out from the result of pkg-config.
This should fix the build in ubuntu 16.04 (although I wasn't able to
reproduce the problem).
Reported and suggested by @Codeacious","I don't see why this is stalling on Travis, but something goes wrong during test_list_modules (pybess.test_bess.TestBESS) ...  (test never finishes). It seems to be consistent though: all six of the matrix builds stall out in the same spot.",True,{}
NetSys/bess,https://github.com/NetSys/bess,626,2017-08-30T19:00:34Z,2017-09-04T02:06:34Z,2017-09-08T19:05:20Z,MERGED,True,6,4,1,https://github.com/ddiproietto,Makefile: Fix build on ubuntu 16.04 with pkg-config.,1,[],https://github.com/NetSys/bess/pull/626,https://github.com/xnhp0320,4,https://github.com/NetSys/bess/pull/626#issuecomment-326278351,"Instead of listing twice the libraries that we want to link dynamically
with, we can simply filter those out from the result of pkg-config.
This should fix the build in ubuntu 16.04 (although I wasn't able to
reproduce the problem).
Reported and suggested by @Codeacious","Hi, have this Travis issued been fixed? I am also hitting on this issue, and by using your patch, I can build bess now.",True,{}
NetSys/bess,https://github.com/NetSys/bess,626,2017-08-30T19:00:34Z,2017-09-04T02:06:34Z,2017-09-08T19:05:20Z,MERGED,True,6,4,1,https://github.com/ddiproietto,Makefile: Fix build on ubuntu 16.04 with pkg-config.,1,[],https://github.com/NetSys/bess/pull/626,https://github.com/ddiproietto,5,https://github.com/NetSys/bess/pull/626#issuecomment-326362712,"Instead of listing twice the libraries that we want to link dynamically
with, we can simply filter those out from the result of pkg-config.
This should fix the build in ubuntu 16.04 (although I wasn't able to
reproduce the problem).
Reported and suggested by @Codeacious","I'm still investigating the issue, it doesn't appear to be related to this PR.
I can reproduce the problem locally by upgrading python grpcio to 1.6.0 (@chris3torek and I noticed that it has been updated on pypi yesterday).
test_kill appears to cause problems (
  
    
      bess/pybess/test_bess.py
    
    
         Line 90
      in
      65a01c7
    
  
  
    

        
          
           def test_kill(self): 
        
    
  

), if I skip it everything seems fine.
This is the output with debug set to true (
  
    
      bess/pybess/bess.py
    
    
         Line 97
      in
      65a01c7
    
  
  
    

        
          
           self.debug = False 
        
    
  

), it appears that the channel doesn't recover from TRANSIENT_FAILURE
I'm still investigating, worst case we can ask pip to install grpcio 1.4.0
test_connect (pybess.test_bess.TestBESS) ... Channel status: None -> ChannelConnectivity.IDLE
Channel status: ChannelConnectivity.IDLE -> ChannelConnectivity.CONNECTING
Channel status: ChannelConnectivity.CONNECTING -> ChannelConnectivity.READY
ok
test_create_port (pybess.test_bess.TestBESS) ... Channel status: None -> ChannelConnectivity.IDLE
Channel status: ChannelConnectivity.IDLE -> ChannelConnectivity.CONNECTING
Channel status: ChannelConnectivity.CONNECTING -> ChannelConnectivity.READY
==== /bess.pb.BESSControl/CreatePort
---> CreatePortRequest
{'arg': {'type_url': 'type.googleapis.com/bess.pb.PCAPPortArg',
         'value': '\n\x03rnd'},
 'driver': 'PCAPPort',
 'name': 'p0'}
<--- CreatePortResponse
{'name': 'p0'}
==== /bess.pb.BESSControl/CreatePort
---> CreatePortRequest
{'arg': {'type_url': 'type.googleapis.com/bess.pb.PMDPortArg',
         'value': '\x08\x01\x10\xf5o'},
 'driver': 'PMDPort',
 'name': 'p0'}
<--- CreatePortResponse
{'name': 'p0'}
==== /bess.pb.BESSControl/CreatePort
---> CreatePortRequest
{'arg': {'type_url': 'type.googleapis.com/bess.pb.UnixSocketPortArg',
         'value': '\n\t/ajksd/dd'},
 'driver': 'UnixSocketPort',
 'name': 'p0'}
<--- CreatePortResponse
{'name': 'p0'}
==== /bess.pb.BESSControl/CreatePort
---> CreatePortRequest
{'arg': {'type_url': 'type.googleapis.com/bess.pb.VPortArg',
         'value': '\n\x05veth0\x18\xd4\xb4\x01*\x03\x01\x02\x030{8{J\x071.2.3.4J\x0f255.254.253.252'},
 'driver': 'VPort',
 'name': 'p0'}
<--- CreatePortResponse
{'name': 'p0'}
Channel status: ChannelConnectivity.READY -> ChannelConnectivity.TRANSIENT_FAILURE
Channel status: AbnormalDisconnection -> ChannelConnectivity.IDLE
ok
test_kill (pybess.test_bess.TestBESS) ... Channel status: None -> ChannelConnectivity.IDLE
Channel status: ChannelConnectivity.IDLE -> ChannelConnectivity.CONNECTING
Channel status: ChannelConnectivity.CONNECTING -> ChannelConnectivity.READY
==== /bess.pb.BESSControl/KillBess
---> EmptyRequest
<--- EmptyResponse
ok
test_list_modules (pybess.test_bess.TestBESS) ... Channel status: None -> ChannelConnectivity.IDLE
Channel status: ChannelConnectivity.IDLE -> ChannelConnectivity.READY
==== /bess.pb.BESSControl/ListModules
---> EmptyRequest
<--- ListModulesResponse
Channel status: ChannelConnectivity.READY -> ChannelConnectivity.TRANSIENT_FAILURE
ok
test_run_module_command (pybess.test_bess.TestBESS)Channel status: AbnormalDisconnection -> ChannelConnectivity.IDLE
 ... Channel status: None -> ChannelConnectivity.IDLE
Channel status: ChannelConnectivity.IDLE -> ChannelConnectivity.TRANSIENT_FAILURE
Channel status: ChannelConnectivity.TRANSIENT_FAILURE -> ChannelConnectivity.IDLE
�Traceback (most recent call last):
  File ""/usr/lib/python2.7/runpy.py"", line 174, in _run_module_as_main
    ""__main__"", fname, loader, pkg_name)
  File ""/usr/lib/python2.7/runpy.py"", line 72, in _run_code
    exec code in run_globals
  File ""/usr/lib/python2.7/unittest/__main__.py"", line 12, in <module>
    main(module=None)
  File ""/usr/lib/python2.7/unittest/main.py"", line 95, in __init__
    self.runTests()
  File ""/usr/lib/python2.7/unittest/main.py"", line 232, in runTests
    self.result = testRunner.run(self.test)
  File ""/usr/lib/python2.7/unittest/runner.py"", line 151, in run
    test(result)
  File ""/usr/lib/python2.7/unittest/suite.py"", line 70, in __call__
    return self.run(*args, **kwds)
  File ""/usr/lib/python2.7/unittest/suite.py"", line 108, in run
    test(result)
  File ""/usr/lib/python2.7/unittest/suite.py"", line 70, in __call__
    return self.run(*args, **kwds)
  File ""/usr/lib/python2.7/unittest/suite.py"", line 108, in run
    test(result)
  File ""/usr/lib/python2.7/unittest/suite.py"", line 70, in __call__
    return self.run(*args, **kwds)
  File ""/usr/lib/python2.7/unittest/suite.py"", line 108, in run
    test(result)
  File ""/usr/lib/python2.7/unittest/case.py"", line 393, in __call__
    return self.run(*args, **kwds)
  File ""/usr/lib/python2.7/unittest/case.py"", line 329, in run
    testMethod()
  File ""/home/ddp/bess/pybess/test_bess.py"", line 138, in test_run_module_command
    client.connect(port=self.PORT)
  File ""/home/ddp/bess/pybess/bess.py"", line 193, in connect
    time.sleep(0.1)
KeyboardInterrupt",True,{}
NetSys/bess,https://github.com/NetSys/bess,626,2017-08-30T19:00:34Z,2017-09-04T02:06:34Z,2017-09-08T19:05:20Z,MERGED,True,6,4,1,https://github.com/ddiproietto,Makefile: Fix build on ubuntu 16.04 with pkg-config.,1,[],https://github.com/NetSys/bess/pull/626,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/626#issuecomment-326513133,"Instead of listing twice the libraries that we want to link dynamically
with, we can simply filter those out from the result of pkg-config.
This should fix the build in ubuntu 16.04 (although I wasn't able to
reproduce the problem).
Reported and suggested by @Codeacious","In my local setup, the test suite failed even without test_kill; test_list_modules succeeds but its next one fails...
With some investigation, I am fairly certain that it's a bug of grpc 1.6.0. If a channel has been closed by the server (self.server.stop()), in some conditions the client doesn't seem to create a new socket for subsequent channels but tries to reuse the already broken file descriptor (shutdown()ed but not close()ed).
#628 would work, but given that pip does not support maintaining multiple package versions, forcing a specific version of grpcio could interfere with other applications using the package.
As a (not ideal either) workaround, we can launch/terminate the dummy gRPC server per testcase (rather than per individual test), so that the channel is not disrupted by between every two tests. This can be done by simply switching setUp()/tearDown() to setUpClass()/tearDownClass().",True,{}
NetSys/bess,https://github.com/NetSys/bess,626,2017-08-30T19:00:34Z,2017-09-04T02:06:34Z,2017-09-08T19:05:20Z,MERGED,True,6,4,1,https://github.com/ddiproietto,Makefile: Fix build on ubuntu 16.04 with pkg-config.,1,[],https://github.com/NetSys/bess/pull/626,https://github.com/apps/codecov,7,https://github.com/NetSys/bess/pull/626#issuecomment-326689777,"Instead of listing twice the libraries that we want to link dynamically
with, we can simply filter those out from the result of pkg-config.
This should fix the build in ubuntu 16.04 (although I wasn't able to
reproduce the problem).
Reported and suggested by @Codeacious","Codecov Report

Merging #626 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master    #626      +/-   ##
=========================================
+ Coverage    69.3%   69.3%   +<.01%     
=========================================
  Files         204     204              
  Lines       13072   13078       +6     
=========================================
+ Hits         9059    9064       +5     
- Misses       4013    4014       +1



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


pybess/test_bess.py
100% <0%> (ø)
⬆️


pybess/bess.py
43.09% <0%> (+0.06%)
⬆️


core/drivers/unix_socket.cc
81.67% <0%> (+1.52%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 78c6c00...229392a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,626,2017-08-30T19:00:34Z,2017-09-04T02:06:34Z,2017-09-08T19:05:20Z,MERGED,True,6,4,1,https://github.com/ddiproietto,Makefile: Fix build on ubuntu 16.04 with pkg-config.,1,[],https://github.com/NetSys/bess/pull/626,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/626#issuecomment-326850383,"Instead of listing twice the libraries that we want to link dynamically
with, we can simply filter those out from the result of pkg-config.
This should fix the build in ubuntu 16.04 (although I wasn't able to
reproduce the problem).
Reported and suggested by @Codeacious",,True,{}
NetSys/bess,https://github.com/NetSys/bess,627,2017-08-30T23:39:54Z,2017-09-05T05:34:20Z,2017-11-01T17:54:50Z,MERGED,True,10,2,1,https://github.com/melvinw,bessctl: take DNS names and IPs in daemon connect,1,[],https://github.com/NetSys/bess/pull/627,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/627,"daemon connect currently accpets name tokens for its HOST argument.
name is overly restrictive, so this commit add a new token called
host which matches DNS names and IPv4 addresses.","daemon connect currently accpets name tokens for its HOST argument.
name is overly restrictive, so this commit add a new token called
host which matches DNS names and IPv4 addresses.",True,{'THUMBS_UP': ['https://github.com/krsna1729']}
NetSys/bess,https://github.com/NetSys/bess,627,2017-08-30T23:39:54Z,2017-09-05T05:34:20Z,2017-11-01T17:54:50Z,MERGED,True,10,2,1,https://github.com/melvinw,bessctl: take DNS names and IPs in daemon connect,1,[],https://github.com/NetSys/bess/pull/627,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/627#issuecomment-326692780,"daemon connect currently accpets name tokens for its HOST argument.
name is overly restrictive, so this commit add a new token called
host which matches DNS names and IPv4 addresses.","Codecov Report

Merging #627 into master will decrease coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #627      +/-   ##
==========================================
- Coverage    69.3%   69.29%   -0.01%     
==========================================
  Files         204      204              
  Lines       13072    13078       +6     
==========================================
+ Hits         9059     9063       +4     
- Misses       4013     4015       +2



Impacted Files
Coverage Δ





pybess/test_bess.py
100% <0%> (ø)
⬆️


pybess/bess.py
43.09% <0%> (+0.06%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 78c6c00...d61de85. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,627,2017-08-30T23:39:54Z,2017-09-05T05:34:20Z,2017-11-01T17:54:50Z,MERGED,True,10,2,1,https://github.com/melvinw,bessctl: take DNS names and IPs in daemon connect,1,[],https://github.com/NetSys/bess/pull/627,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/627#issuecomment-327075542,"daemon connect currently accpets name tokens for its HOST argument.
name is overly restrictive, so this commit add a new token called
host which matches DNS names and IPv4 addresses.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,628,2017-08-31T22:04:14Z,2017-09-01T19:25:14Z,2017-09-01T19:26:03Z,CLOSED,False,9,3,4,https://github.com/ddiproietto,travis: Use grpcio 1.4.0.,2,[],https://github.com/NetSys/bess/pull/628,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/628,"grpcio 1.6.0 (released yesterday) creates problems to the BESS testsuite.
Until we figure out how to make it work, use grpcio 1.4.0.  This fixes a
travis failure observed on master.","grpcio 1.6.0 (released yesterday) creates problems to the BESS testsuite.
Until we figure out how to make it work, use grpcio 1.4.0.  This fixes a
travis failure observed on master.",True,{}
NetSys/bess,https://github.com/NetSys/bess,628,2017-08-31T22:04:14Z,2017-09-01T19:25:14Z,2017-09-01T19:26:03Z,CLOSED,False,9,3,4,https://github.com/ddiproietto,travis: Use grpcio 1.4.0.,2,[],https://github.com/NetSys/bess/pull/628,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/628#issuecomment-326445983,"grpcio 1.6.0 (released yesterday) creates problems to the BESS testsuite.
Until we figure out how to make it work, use grpcio 1.4.0.  This fixes a
travis failure observed on master.","Codecov Report

Merging #628 into master will not change coverage.
The diff coverage is n/a.


@@          Coverage Diff           @@
##           master    #628   +/-   ##
======================================
  Coverage    69.3%   69.3%           
======================================
  Files         204     204           
  Lines       13072   13072           
======================================
  Hits         9059    9059           
  Misses       4013    4013



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/drivers/unix_socket.cc
80.91% <0%> (+0.76%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 341c454...d85d45f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,628,2017-08-31T22:04:14Z,2017-09-01T19:25:14Z,2017-09-01T19:26:03Z,CLOSED,False,9,3,4,https://github.com/ddiproietto,travis: Use grpcio 1.4.0.,2,[],https://github.com/NetSys/bess/pull/628,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/628#issuecomment-326664622,"grpcio 1.6.0 (released yesterday) creates problems to the BESS testsuite.
Until we figure out how to make it work, use grpcio 1.4.0.  This fixes a
travis failure observed on master.","We have a workaround for the tests, it's better to close this",True,{}
NetSys/bess,https://github.com/NetSys/bess,629,2017-09-01T16:47:14Z,2017-09-01T20:51:12Z,2017-09-06T00:22:55Z,MERGED,True,19,8,2,https://github.com/sangjinhan,"Launch BESS daemon per testcase, not every test",1,[],https://github.com/NetSys/bess/pull/629,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/629,#626 (comment),#626 (comment),True,{}
NetSys/bess,https://github.com/NetSys/bess,629,2017-09-01T16:47:14Z,2017-09-01T20:51:12Z,2017-09-06T00:22:55Z,MERGED,True,19,8,2,https://github.com/sangjinhan,"Launch BESS daemon per testcase, not every test",1,[],https://github.com/NetSys/bess/pull/629,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/629#issuecomment-326637524,#626 (comment),"Codecov Report

Merging #629 into master will decrease coverage by <.01%.
The diff coverage is 83.33%.


@@            Coverage Diff             @@
##           master     #629      +/-   ##
==========================================
- Coverage    69.3%   69.29%   -0.01%     
==========================================
  Files         204      204              
  Lines       13072    13078       +6     
==========================================
+ Hits         9059     9063       +4     
- Misses       4013     4015       +2



Impacted Files
Coverage Δ





pybess/test_bess.py
100% <100%> (ø)
⬆️


pybess/bess.py
43.09% <50%> (+0.06%)
⬆️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/drivers/unix_socket.cc
80.91% <0%> (+0.76%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 341c454...4bac1ad. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,629,2017-09-01T16:47:14Z,2017-09-01T20:51:12Z,2017-09-06T00:22:55Z,MERGED,True,19,8,2,https://github.com/sangjinhan,"Launch BESS daemon per testcase, not every test",1,[],https://github.com/NetSys/bess/pull/629,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/629#issuecomment-326664299,#626 (comment),"LGTM as well, thanks for doing this",True,{}
NetSys/bess,https://github.com/NetSys/bess,629,2017-09-01T16:47:14Z,2017-09-01T20:51:12Z,2017-09-06T00:22:55Z,MERGED,True,19,8,2,https://github.com/sangjinhan,"Launch BESS daemon per testcase, not every test",1,[],https://github.com/NetSys/bess/pull/629,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/629#issuecomment-326681238,#626 (comment),Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,630,2017-09-02T22:15:14Z,2017-09-05T06:28:16Z,2017-11-01T17:54:48Z,MERGED,True,8,0,2,https://github.com/melvinw,worker: add thread-local instance of Random,1,[],https://github.com/NetSys/bess/pull/630,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/630,@sangjinhan and @ddiproietto pointed out that this may be useful,@sangjinhan and @ddiproietto pointed out that this may be useful,True,{}
NetSys/bess,https://github.com/NetSys/bess,630,2017-09-02T22:15:14Z,2017-09-05T06:28:16Z,2017-11-01T17:54:48Z,MERGED,True,8,0,2,https://github.com/melvinw,worker: add thread-local instance of Random,1,[],https://github.com/NetSys/bess/pull/630,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/630#issuecomment-326773389,@sangjinhan and @ddiproietto pointed out that this may be useful,"Codecov Report

Merging #630 into master will decrease coverage by 0.01%.
The diff coverage is 100%.


@@            Coverage Diff            @@
##           master    #630      +/-   ##
=========================================
- Coverage   69.31%   69.3%   -0.02%     
=========================================
  Files         204     204              
  Lines       13078   13080       +2     
=========================================
  Hits         9065    9065              
- Misses       4013    4015       +2



Impacted Files
Coverage Δ





core/worker.h
95.65% <ø> (ø)
⬆️


core/worker.cc
90.69% <100%> (+0.1%)
⬆️


core/drivers/unix_socket.cc
80.15% <0%> (-1.53%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update bf460f7...2aebc91. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,630,2017-09-02T22:15:14Z,2017-09-05T06:28:16Z,2017-11-01T17:54:48Z,MERGED,True,8,0,2,https://github.com/melvinw,worker: add thread-local instance of Random,1,[],https://github.com/NetSys/bess/pull/630,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/630#issuecomment-327083121,@sangjinhan and @ddiproietto pointed out that this may be useful,,True,{}
NetSys/bess,https://github.com/NetSys/bess,632,2017-09-04T21:46:00Z,2017-09-05T05:47:02Z,2017-09-05T05:47:51Z,MERGED,True,1,1,1,https://github.com/apanda,Mark get_summary in measure.cc as thread safe,1,[],https://github.com/NetSys/bess/pull/632,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/632,"get_summary reads a value, and should be thread safe to execute (the
values might be off though).","get_summary reads a value, and should be thread safe to execute (the
values might be off though).",True,{}
NetSys/bess,https://github.com/NetSys/bess,632,2017-09-04T21:46:00Z,2017-09-05T05:47:02Z,2017-09-05T05:47:51Z,MERGED,True,1,1,1,https://github.com/apanda,Mark get_summary in measure.cc as thread safe,1,[],https://github.com/NetSys/bess/pull/632,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/632#issuecomment-327034230,"get_summary reads a value, and should be thread safe to execute (the
values might be off though).","Codecov Report

Merging #632 into master will decrease coverage by 0.02%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #632      +/-   ##
==========================================
- Coverage   69.29%   69.27%   -0.03%     
==========================================
  Files         204      204              
  Lines       13078    13078              
==========================================
- Hits         9063     9060       -3     
- Misses       4015     4018       +3



Impacted Files
Coverage Δ





core/modules/measure.cc
67.69% <ø> (ø)
⬆️


pybess/bess.py
42.61% <0%> (-0.49%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 57497af...9ef4f36. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,632,2017-09-04T21:46:00Z,2017-09-05T05:47:02Z,2017-09-05T05:47:51Z,MERGED,True,1,1,1,https://github.com/apanda,Mark get_summary in measure.cc as thread safe,1,[],https://github.com/NetSys/bess/pull/632,https://github.com/barath,3,https://github.com/NetSys/bess/pull/632#issuecomment-327048237,"get_summary reads a value, and should be thread safe to execute (the
values might be off though).",Is it possible that the return value will not just be stale but total junk?,True,{}
NetSys/bess,https://github.com/NetSys/bess,632,2017-09-04T21:46:00Z,2017-09-05T05:47:02Z,2017-09-05T05:47:51Z,MERGED,True,1,1,1,https://github.com/apanda,Mark get_summary in measure.cc as thread safe,1,[],https://github.com/NetSys/bess/pull/632,https://github.com/apanda,4,https://github.com/NetSys/bess/pull/632#issuecomment-327048489,"get_summary reads a value, and should be thread safe to execute (the
values might be off though).","My reading of the function was no -- things like number of packets, and size of packets will be correct. The histogram might report some inaccuracies, but they will be small.",True,{}
NetSys/bess,https://github.com/NetSys/bess,632,2017-09-04T21:46:00Z,2017-09-05T05:47:02Z,2017-09-05T05:47:51Z,MERGED,True,1,1,1,https://github.com/apanda,Mark get_summary in measure.cc as thread safe,1,[],https://github.com/NetSys/bess/pull/632,https://github.com/barath,5,https://github.com/NetSys/bess/pull/632#issuecomment-327048662,"get_summary reads a value, and should be thread safe to execute (the
values might be off though).","Ok, LGTM in that case.
…
On Mon, Sep 4, 2017 at 6:29 PM, Aurojit Panda ***@***.***> wrote:
 My reading of the function was no -- things like number of packets, and
 size of packets will be correct. The histogram might report some
 inaccuracies, but they will be small.

 —
 You are receiving this because your review was requested.
 Reply to this email directly, view it on GitHub
 <#632 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7eqd9cQkPCYhHByIAzde_5onFddtQks5sfKPxgaJpZM4PMRB2>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,632,2017-09-04T21:46:00Z,2017-09-05T05:47:02Z,2017-09-05T05:47:51Z,MERGED,True,1,1,1,https://github.com/apanda,Mark get_summary in measure.cc as thread safe,1,[],https://github.com/NetSys/bess/pull/632,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/632#issuecomment-327077256,"get_summary reads a value, and should be thread safe to execute (the
values might be off though).",,True,{}
NetSys/bess,https://github.com/NetSys/bess,633,2017-09-06T00:44:23Z,2017-09-06T22:43:17Z,2017-11-01T17:54:46Z,MERGED,True,33,10,2,https://github.com/melvinw,Allow module inheritance across shared objects,1,['enhancement'],https://github.com/NetSys/bess/pull/633,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/633,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.
Nearly all of the work in this patch was done by
Steven Wang <@sirspinach> and Vivian Fang <@vivi>","Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.
Nearly all of the work in this patch was done by
Steven Wang <@sirspinach> and Vivian Fang <@vivi>",True,{}
NetSys/bess,https://github.com/NetSys/bess,633,2017-09-06T00:44:23Z,2017-09-06T22:43:17Z,2017-11-01T17:54:46Z,MERGED,True,33,10,2,https://github.com/melvinw,Allow module inheritance across shared objects,1,['enhancement'],https://github.com/NetSys/bess/pull/633,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/633#issuecomment-327351062,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.
Nearly all of the work in this patch was done by
Steven Wang <@sirspinach> and Vivian Fang <@vivi>","Codecov Report

Merging #633 into master will increase coverage by <.01%.
The diff coverage is 66.66%.


@@            Coverage Diff             @@
##           master     #633      +/-   ##
==========================================
+ Coverage   69.36%   69.36%   +<.01%     
==========================================
  Files         204      204              
  Lines       13140    13148       +8     
==========================================
+ Hits         9114     9120       +6     
- Misses       4026     4028       +2



Impacted Files
Coverage Δ





core/bessd.cc
68.98% <66.66%> (+0.23%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0d5c021...61a1f9c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,633,2017-09-06T00:44:23Z,2017-09-06T22:43:17Z,2017-11-01T17:54:46Z,MERGED,True,33,10,2,https://github.com/melvinw,Allow module inheritance across shared objects,1,['enhancement'],https://github.com/NetSys/bess/pull/633,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/633#issuecomment-327554945,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.
Nearly all of the work in this patch was done by
Steven Wang <@sirspinach> and Vivian Fang <@vivi>","Unloading. If I am reading the documentation right they're not a problem for this change itself, they just mean that if you load module X, then load module Y that uses X, then attempt to unload X, module X sticks around until module Y is also unloaded. That seems like the right behavior so I think this just works as is, but it seems worth mentioning.

I wonder if there's a way to detect these sorts of dependencies (or cleanly express them explicitly) and issue logs when these indirect unloads happen.",True,{}
NetSys/bess,https://github.com/NetSys/bess,633,2017-09-06T00:44:23Z,2017-09-06T22:43:17Z,2017-11-01T17:54:46Z,MERGED,True,33,10,2,https://github.com/melvinw,Allow module inheritance across shared objects,1,['enhancement'],https://github.com/NetSys/bess/pull/633,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/633#issuecomment-327556238,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.
Nearly all of the work in this patch was done by
Steven Wang <@sirspinach> and Vivian Fang <@vivi>","Note for the future: Ideally our build system should be able to make .so files self-containted (the object file that has Y must also have X) as necessary, in case we want a plugin to be inter-dependency free.",True,{}
NetSys/bess,https://github.com/NetSys/bess,633,2017-09-06T00:44:23Z,2017-09-06T22:43:17Z,2017-11-01T17:54:46Z,MERGED,True,33,10,2,https://github.com/melvinw,Allow module inheritance across shared objects,1,['enhancement'],https://github.com/NetSys/bess/pull/633,https://github.com/changlan,5,https://github.com/NetSys/bess/pull/633#issuecomment-327605692,"Previously, modules could not access (and therefore inherit from)
other modules because the RTLD_GLOBAL flag was not set. This patch
allows inheritance by dlopening module shared objects with the
RTLD_GLOBAL flag and by loading modules in multiple passes.
Nearly all of the work in this patch was done by
Steven Wang <@sirspinach> and Vivian Fang <@vivi>","Extending @sangjinhan's note: in the future it would be good to add some way to specify which additional libraries should be statically linked with .so files. For example, we may want to link an encryption module with -lssl.",True,{}
NetSys/bess,https://github.com/NetSys/bess,634,2017-09-06T01:20:21Z,2017-09-06T17:17:10Z,2017-11-01T17:54:47Z,MERGED,True,95,22,35,https://github.com/melvinw,various constraint checking enhancements,3,['enhancement'],https://github.com/NetSys/bess/pull/634,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/634,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,634,2017-09-06T01:20:21Z,2017-09-06T17:17:10Z,2017-11-01T17:54:47Z,MERGED,True,95,22,35,https://github.com/melvinw,various constraint checking enhancements,3,['enhancement'],https://github.com/NetSys/bess/pull/634,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/634#issuecomment-327353514,,"Codecov Report

Merging #634 into master will increase coverage by 0.04%.
The diff coverage is 84%.


@@            Coverage Diff             @@
##           master     #634      +/-   ##
==========================================
+ Coverage   69.31%   69.36%   +0.04%     
==========================================
  Files         204      204              
  Lines       13083    13140      +57     
==========================================
+ Hits         9069     9114      +45     
- Misses       4014     4026      +12



Impacted Files
Coverage Δ





core/module.h
89.93% <ø> (ø)
⬆️


core/modules/worker_split.h
100% <ø> (ø)
⬆️


core/modules/timestamp.h
0% <0%> (ø)
⬆️


core/modules/ip_encap.h
0% <0%> (ø)
⬆️


core/modules/split.h
0% <0%> (ø)
⬆️


core/modules/l4_checksum.h
0% <0%> (ø)
⬆️


core/modules/ip_checksum.h
0% <0%> (ø)
⬆️


core/modules/vxlan_decap.h
0% <0%> (ø)
⬆️


core/modules/vxlan_encap.h
0% <0%> (ø)
⬆️


core/modules/mttest.h
0% <0%> (ø)
⬆️


... and 27 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8fd4deb...e333741. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,634,2017-09-06T01:20:21Z,2017-09-06T17:17:10Z,2017-11-01T17:54:47Z,MERGED,True,95,22,35,https://github.com/melvinw,various constraint checking enhancements,3,['enhancement'],https://github.com/NetSys/bess/pull/634,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/634#issuecomment-327552959,,Thanks,True,{}
NetSys/bess,https://github.com/NetSys/bess,636,2017-09-06T17:35:33Z,2017-09-06T18:53:21Z,2017-11-01T17:54:44Z,MERGED,True,1,1,1,https://github.com/melvinw,modules/queue: do not declare Queue as final,1,[],https://github.com/NetSys/bess/pull/636,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/636,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,636,2017-09-06T17:35:33Z,2017-09-06T18:53:21Z,2017-11-01T17:54:44Z,MERGED,True,1,1,1,https://github.com/melvinw,modules/queue: do not declare Queue as final,1,[],https://github.com/NetSys/bess/pull/636,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/636#issuecomment-327573763,,"Codecov Report

Merging #636 into master will not change coverage.
The diff coverage is 100%.


@@           Coverage Diff           @@
##           master     #636   +/-   ##
=======================================
  Coverage   69.36%   69.36%           
=======================================
  Files         204      204           
  Lines       13140    13140           
=======================================
  Hits         9114     9114           
  Misses       4026     4026



Impacted Files
Coverage Δ





core/modules/queue.h
100% <100%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0d5c021...9925979. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,637,2017-09-06T17:45:34Z,2017-09-06T22:07:35Z,2017-09-06T22:20:01Z,MERGED,True,21,9,1,https://github.com/shinae-woo,"Kill container by name, but not by python subprocessor",2,[],https://github.com/NetSys/bess/pull/637,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/637,"Container daemons are not children of docker run, but children of docker daemon. Therefore, killing docker run does not always guarantee killing container daemons","Container daemons are not children of docker run, but children of docker daemon. Therefore, killing docker run does not always guarantee killing container daemons",True,{}
NetSys/bess,https://github.com/NetSys/bess,637,2017-09-06T17:45:34Z,2017-09-06T22:07:35Z,2017-09-06T22:20:01Z,MERGED,True,21,9,1,https://github.com/shinae-woo,"Kill container by name, but not by python subprocessor",2,[],https://github.com/NetSys/bess/pull/637,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/637#issuecomment-327583080,"Container daemons are not children of docker run, but children of docker daemon. Therefore, killing docker run does not always guarantee killing container daemons","Codecov Report

Merging #637 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #637   +/-   ##
=======================================
  Coverage   69.36%   69.36%           
=======================================
  Files         204      204           
  Lines       13140    13140           
=======================================
  Hits         9114     9114           
  Misses       4026     4026

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0d5c021...1871e16. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,637,2017-09-06T17:45:34Z,2017-09-06T22:07:35Z,2017-09-06T22:20:01Z,MERGED,True,21,9,1,https://github.com/shinae-woo,"Kill container by name, but not by python subprocessor",2,[],https://github.com/NetSys/bess/pull/637,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/637#issuecomment-327583107,"Container daemons are not children of docker run, but children of docker daemon. Therefore, killing docker run does not always guarantee killing container daemons","Aha, reading up on docker I see you're right. But docker kill <name> is a bit severe (sends SIGKILL), would it be reasonable to use docker stop which sends SIGTERM first, then waits 10 seconds by default, then resorts to SIGKILL?
(I will need to do the same in my test code)",True,{'HEART': ['https://github.com/shinae-woo']}
NetSys/bess,https://github.com/NetSys/bess,637,2017-09-06T17:45:34Z,2017-09-06T22:07:35Z,2017-09-06T22:20:01Z,MERGED,True,21,9,1,https://github.com/shinae-woo,"Kill container by name, but not by python subprocessor",2,[],https://github.com/NetSys/bess/pull/637,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/637#issuecomment-327584526,"Container daemons are not children of docker run, but children of docker daemon. Therefore, killing docker run does not always guarantee killing container daemons","For the sake of demonstration, as an example script, personally I would prefer simplicity over completeness. As testpmd does not make any side effects I guess SIGKILL should be fine...?",True,{}
NetSys/bess,https://github.com/NetSys/bess,637,2017-09-06T17:45:34Z,2017-09-06T22:07:35Z,2017-09-06T22:20:01Z,MERGED,True,21,9,1,https://github.com/shinae-woo,"Kill container by name, but not by python subprocessor",2,[],https://github.com/NetSys/bess/pull/637,https://github.com/chris3torek,5,https://github.com/NetSys/bess/pull/637#issuecomment-327585323,"Container daemons are not children of docker run, but children of docker daemon. Therefore, killing docker run does not always guarantee killing container daemons","OK, in that case I'd say this looks fine.",True,{}
NetSys/bess,https://github.com/NetSys/bess,637,2017-09-06T17:45:34Z,2017-09-06T22:07:35Z,2017-09-06T22:20:01Z,MERGED,True,21,9,1,https://github.com/shinae-woo,"Kill container by name, but not by python subprocessor",2,[],https://github.com/NetSys/bess/pull/637,https://github.com/shinae-woo,6,https://github.com/NetSys/bess/pull/637#issuecomment-327611569,"Container daemons are not children of docker run, but children of docker daemon. Therefore, killing docker run does not always guarantee killing container daemons","@chris3torek For me, SIGKILL would be fine, too. (Waiting 10 sec would be bothersome in my specific 'development' environments), But if you need more graceful termination, please fix them :) As now, they are --rm containers, my first thought was who cares? But soon later, in some environments (scale-in in my case), someone may need graceful teardown such as serving all flows in queues.",True,{}
NetSys/bess,https://github.com/NetSys/bess,637,2017-09-06T17:45:34Z,2017-09-06T22:07:35Z,2017-09-06T22:20:01Z,MERGED,True,21,9,1,https://github.com/shinae-woo,"Kill container by name, but not by python subprocessor",2,[],https://github.com/NetSys/bess/pull/637,https://github.com/chris3torek,7,https://github.com/NetSys/bess/pull/637#issuecomment-327621897,"Container daemons are not children of docker run, but children of docker daemon. Therefore, killing docker run does not always guarantee killing container daemons","SIGKILL suffices for me too but it's exactly that kind of thing (draining a queue) that I was thinking about.
I like the extra exception-case cleanup with the code in finally. (There's some other cleanup that my own code needs, e.g., removing the host-side /tmp/bessd directory, that makes it more complicated and I haven't made it all work for every case yet.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,637,2017-09-06T17:45:34Z,2017-09-06T22:07:35Z,2017-09-06T22:20:01Z,MERGED,True,21,9,1,https://github.com/shinae-woo,"Kill container by name, but not by python subprocessor",2,[],https://github.com/NetSys/bess/pull/637,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/637#issuecomment-327625735,"Container daemons are not children of docker run, but children of docker daemon. Therefore, killing docker run does not always guarantee killing container daemons",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,638,2017-09-06T19:09:16Z,2017-09-06T19:34:02Z,2017-09-06T20:21:06Z,CLOSED,False,1,0,1,https://github.com/muraliran,ignore autogen files in pybess,2,[],https://github.com/NetSys/bess/pull/638,https://github.com/muraliran,1,https://github.com/NetSys/bess/pull/638,noted to ignore only pb2 autogen files,noted to ignore only pb2 autogen files,True,{}
NetSys/bess,https://github.com/NetSys/bess,638,2017-09-06T19:09:16Z,2017-09-06T19:34:02Z,2017-09-06T20:21:06Z,CLOSED,False,1,0,1,https://github.com/muraliran,ignore autogen files in pybess,2,[],https://github.com/NetSys/bess/pull/638,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/638#issuecomment-327590149,noted to ignore only pb2 autogen files,"I guess you had some lingering files that were auto generated by the old version of BESS build system. Once you manually remove the files (or clone the repo again for a fresh copy), those files won't appear again. Let me close the PR. Thank you though!",True,{}
NetSys/bess,https://github.com/NetSys/bess,638,2017-09-06T19:09:16Z,2017-09-06T19:34:02Z,2017-09-06T20:21:06Z,CLOSED,False,1,0,1,https://github.com/muraliran,ignore autogen files in pybess,2,[],https://github.com/NetSys/bess/pull/638,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/638#issuecomment-327601730,noted to ignore only pb2 autogen files,"Codecov Report

❗ No coverage uploaded for pull request base (master@2e6a80b). Click here to learn what that means.
The diff coverage is n/a.


@@            Coverage Diff            @@
##             master     #638   +/-   ##
=========================================
  Coverage          ?   69.36%           
=========================================
  Files             ?      204           
  Lines             ?    13140           
  Branches          ?        0           
=========================================
  Hits              ?     9114           
  Misses            ?     4026           
  Partials          ?        0

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2e6a80b...2b8fad7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,639,2017-09-06T22:18:56Z,2017-09-13T18:40:39Z,2017-11-04T00:02:07Z,MERGED,True,22,5,2,https://github.com/shinae-woo,Check if kernel headers installed,3,[],https://github.com/NetSys/bess/pull/639,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/639,"DPDK and BESS kernel modules have dependencies on it

This is motivated by to make DPDK and BESS run on my AWS instances as they only support virtual functions (e.g., ixgbevf), which only supports igb_uio driver. So after short discussion with @sangjinhan, I checked if kernel header installed to configure DPDK correctly and also for the BESS kernel module.

I would prefer not to maintain deps/dpdk-*_common_linuxapp file, But I don't have enough history regarding this matter.","DPDK and BESS kernel modules have dependencies on it

This is motivated by to make DPDK and BESS run on my AWS instances as they only support virtual functions (e.g., ixgbevf), which only supports igb_uio driver. So after short discussion with @sangjinhan, I checked if kernel header installed to configure DPDK correctly and also for the BESS kernel module.

I would prefer not to maintain deps/dpdk-*_common_linuxapp file, But I don't have enough history regarding this matter.",True,{}
NetSys/bess,https://github.com/NetSys/bess,639,2017-09-06T22:18:56Z,2017-09-13T18:40:39Z,2017-11-04T00:02:07Z,MERGED,True,22,5,2,https://github.com/shinae-woo,Check if kernel headers installed,3,[],https://github.com/NetSys/bess/pull/639,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/639#issuecomment-327636013,"DPDK and BESS kernel modules have dependencies on it

This is motivated by to make DPDK and BESS run on my AWS instances as they only support virtual functions (e.g., ixgbevf), which only supports igb_uio driver. So after short discussion with @sangjinhan, I checked if kernel header installed to configure DPDK correctly and also for the BESS kernel module.

I would prefer not to maintain deps/dpdk-*_common_linuxapp file, But I don't have enough history regarding this matter.","Codecov Report

Merging #639 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #639      +/-   ##
==========================================
+ Coverage   69.35%   69.36%   +<.01%     
==========================================
  Files         204      204              
  Lines       13148    13148              
==========================================
+ Hits         9119     9120       +1     
+ Misses       4029     4028       -1



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/drivers/unix_socket.cc
80.91% <0%> (+0.76%)
⬆️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e425ff9...bd24f11. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,639,2017-09-06T22:18:56Z,2017-09-13T18:40:39Z,2017-11-04T00:02:07Z,MERGED,True,22,5,2,https://github.com/shinae-woo,Check if kernel headers installed,3,[],https://github.com/NetSys/bess/pull/639,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/639#issuecomment-329259707,"DPDK and BESS kernel modules have dependencies on it

This is motivated by to make DPDK and BESS run on my AWS instances as they only support virtual functions (e.g., ixgbevf), which only supports igb_uio driver. So after short discussion with @sangjinhan, I checked if kernel header installed to configure DPDK correctly and also for the BESS kernel module.

I would prefer not to maintain deps/dpdk-*_common_linuxapp file, But I don't have enough history regarding this matter.","Merged, thanks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,640,2017-09-11T21:50:24Z,2017-09-12T00:10:32Z,2017-10-03T00:30:14Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Run pip install with --user,1,[],https://github.com/NetSys/bess/pull/640,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/640,"Travis stopped working with pip install, as virtualenv is not used for
non-Python repos any longer. This patch runs pip with --user option
explicitly (sudo pip install seemed also working, but it is generally
not recommended).","Travis stopped working with pip install, as virtualenv is not used for
non-Python repos any longer. This patch runs pip with --user option
explicitly (sudo pip install seemed also working, but it is generally
not recommended).",True,{}
NetSys/bess,https://github.com/NetSys/bess,640,2017-09-11T21:50:24Z,2017-09-12T00:10:32Z,2017-10-03T00:30:14Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Run pip install with --user,1,[],https://github.com/NetSys/bess/pull/640,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/640#issuecomment-328679827,"Travis stopped working with pip install, as virtualenv is not used for
non-Python repos any longer. This patch runs pip with --user option
explicitly (sudo pip install seemed also working, but it is generally
not recommended).","Codecov Report

Merging #640 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #640      +/-   ##
==========================================
+ Coverage   69.36%   69.37%   +<.01%     
==========================================
  Files         204      204              
  Lines       13148    13148              
==========================================
+ Hits         9120     9121       +1     
+ Misses       4028     4027       -1



Impacted Files
Coverage Δ





core/drivers/unix_socket.cc
80.91% <0%> (+0.76%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6c110e5...82d43a8. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,640,2017-09-11T21:50:24Z,2017-09-12T00:10:32Z,2017-10-03T00:30:14Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Run pip install with --user,1,[],https://github.com/NetSys/bess/pull/640,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/640#issuecomment-328693790,"Travis stopped working with pip install, as virtualenv is not used for
non-Python repos any longer. This patch runs pip with --user option
explicitly (sudo pip install seemed also working, but it is generally
not recommended).",,True,{}
NetSys/bess,https://github.com/NetSys/bess,641,2017-09-11T23:50:02Z,2017-09-13T17:42:40Z,2017-11-01T17:55:01Z,MERGED,True,2,2,1,https://github.com/melvinw,module: fix RunCommand thread saftey check,1,['bug'],https://github.com/NetSys/bess/pull/641,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/641,"(active_workers_ is a bitmap, not a vector of worker IDs)","(active_workers_ is a bitmap, not a vector of worker IDs)",True,{}
NetSys/bess,https://github.com/NetSys/bess,641,2017-09-11T23:50:02Z,2017-09-13T17:42:40Z,2017-11-01T17:55:01Z,MERGED,True,2,2,1,https://github.com/melvinw,module: fix RunCommand thread saftey check,1,['bug'],https://github.com/NetSys/bess/pull/641,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/641#issuecomment-328733959,"(active_workers_ is a bitmap, not a vector of worker IDs)","Codecov Report

Merging #641 into master will not change coverage.
The diff coverage is 100%.


@@           Coverage Diff           @@
##           master     #641   +/-   ##
=======================================
  Coverage   69.35%   69.35%           
=======================================
  Files         204      204           
  Lines       13148    13148           
=======================================
  Hits         9119     9119           
  Misses       4029     4029



Impacted Files
Coverage Δ





core/module.cc
87.79% <100%> (ø)
⬆️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e425ff9...d19bf0d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,641,2017-09-11T23:50:02Z,2017-09-13T17:42:40Z,2017-11-01T17:55:01Z,MERGED,True,2,2,1,https://github.com/melvinw,module: fix RunCommand thread saftey check,1,['bug'],https://github.com/NetSys/bess/pull/641,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/641#issuecomment-329243553,"(active_workers_ is a bitmap, not a vector of worker IDs)",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/642,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.","The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.",True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/ddiproietto,2,https://github.com/NetSys/bess/pull/642#issuecomment-328935934,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.","The python code is very far from perfect, I appreciate any comments on how to improve it",True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/barath,3,https://github.com/NetSys/bess/pull/642#issuecomment-328941004,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.",Thanks for doing this -- looks very useful.,True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/642#issuecomment-328945317,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.","Codecov Report

Merging #642 into master will decrease coverage by 0.45%.
The diff coverage is 3%.


@@            Coverage Diff            @@
##           master    #642      +/-   ##
=========================================
- Coverage   69.35%   68.9%   -0.46%     
=========================================
  Files         204     205       +1     
  Lines       13148   13266     +118     
=========================================
+ Hits         9119    9141      +22     
- Misses       4029    4125      +96



Impacted Files
Coverage Δ





core/hooks/pcapng.cc
2.1% <2.1%> (ø)



pybess/bess.py
42.82% <20%> (-0.28%)
⬇️


core/module.h
87.73% <0%> (-2.21%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/modules/ip_checksum.cc
73.91% <0%> (+62.8%)
⬆️


core/modules/ip_checksum.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a9ea341...cedeac8. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/642#issuecomment-329239346,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.","I wonder if tshark can be used to print out packets and their metadata for the client side. I remember once @bknuggetsfan worked on metadata-included packet dump, but I am not sure if tshark was usable out of the box...",True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/ddiproietto,6,https://github.com/NetSys/bess/pull/642#issuecomment-329288613,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.","I don't like having that much python code either, that's why I went with pcapng originally, I was hoping that some command line tool would be able to parse the packet and print the metadata.
tshark seems to be able to print the metadata with
tshark -r file.pcapng -T fields -e frame.comment
but it doesn't print anything else from the packet here, unless it's listed explicitly in the command line.
If there was a way to use tshark to display the usual textual representation of each packet and the comment, we should definitely use it",True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/642#issuecomment-329324811,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.","I found that there are two ways you can add frame.comment to the usual output. Unfortunately neither is perfect, but seems somewhat satisfactory for certain scenarios.

tshark -r file.pcapng -z proto,colinfo,frame.comment,frame.comment


The -z proto,colinfo option adds custom fields to the end of each summary line (in ther form of frame.comment == ""..."")

Actually I have tested it with frame.number, not frame.comment... but it should work as well..?


problems: only works with -T text. Also not compatible with -V or -x.


tshark -r file.pcapng -T fields -e _ws.col.Info -e frame.comment


_ws.col.Info looks like the typical one-line summary text.
problems: some columns that are included with -T text are missing, such as frame number and timestamp. I guess we need to add such fields explicitly.

I think it is worth trying to utilize tshark, given that it also enables specifying capture filters. It is too bad that tshark is not as quite flexible as we want it to be...",True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/ddiproietto,8,https://github.com/NetSys/bess/pull/642#issuecomment-329335344,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.","Thanks for your input!
The -z proto,colinfo is exactly what I was looking for.  It it unfortunate that it might not play nicely with other options, so I'm including it only if there are no custom options.  If there are custom options, I think it's the user's job to display what's needed.
I rebased it (since most of the fixes were useless) and pushed a new version",True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/ddiproietto,9,https://github.com/NetSys/bess/pull/642#issuecomment-329614023,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.","As you pointed out, -z proto,colinfo... collides with -V. If I run tshark with both of them I get an error:
localhost:10514 $ tshark wm in 0 -V -z proto,colinfo,frame.comment,frame.comment
  Running: tshark -r /tmp/tmpJrWNoB -V -z proto,colinfo,frame.comment,frame.comment
tshark: the proto,colinfo tap doesn't work if the INFO column isn't being printed.
localhost:10514 $ 

You're right, some options are very simple and compatible (I often want to use -c). Perhaps we can whitelist them?
Or perhaps we can by default to -V, which prints the comment on its own?
I'm fine with any approach :)",True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/sangjinhan,10,https://github.com/NetSys/bess/pull/642#issuecomment-329634060,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.",Thanks for checking. I think then the option should be explicitly given by the user (copypasta should be easy enough since the default option is shown with help) if any other options are given; inspecting the argument list would be not quite reliable...,True,{}
NetSys/bess,https://github.com/NetSys/bess,642,2017-09-12T18:07:02Z,2017-09-14T23:15:21Z,2017-09-28T16:23:53Z,MERGED,True,493,9,7,https://github.com/ddiproietto,Implement a simple bessctl command to capture packet data and metadata,4,[],https://github.com/NetSys/bess/pull/642,https://github.com/sangjinhan,11,https://github.com/NetSys/bess/pull/642#issuecomment-329634149,"The new tcpdump_md command is similar to tcpdump, but:

It displays a textual representation of the metadata
It doesn't call external programs, because they don't support showing additional metadata for each packet.
It doesn't display a human readable representation of the packet data, just a hexdump, since it doesn't rely on external tools.

To implement this new command, a new hook is implemented (pcapng), which is similar to the tcpdump hook, but

Uses the pcapng format, which includes optional metadata.
Adds a textual representation of the metadata info.
Hopefully this hook can be useful beyond the tcpdump_md command.  It has been tested with wireshark and it produces a textual representation of the metadata.",👍,True,{}
NetSys/bess,https://github.com/NetSys/bess,643,2017-09-12T22:38:02Z,2017-09-14T20:24:06Z,2017-09-28T16:23:24Z,MERGED,True,92,1,2,https://github.com/ddiproietto,ip_checksum: Handle VLAN packets.,1,[],https://github.com/NetSys/bess/pull/643,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/643,"trafficgen udp mode now supports generating packet with a vlan tag.
This commit changes the ip_checksum module to correctly handle those
packets.
As a result of this change, ip_checksum is now slower for untagged
packets.  In this very simple benchmark we measure the amount of traffic
generated by trafficgen udp mode with untagged packets before and after the
change on a single core:
BEFORE: 19.919 Mpps
AFTER: 19.645 Mpps","trafficgen udp mode now supports generating packet with a vlan tag.
This commit changes the ip_checksum module to correctly handle those
packets.
As a result of this change, ip_checksum is now slower for untagged
packets.  In this very simple benchmark we measure the amount of traffic
generated by trafficgen udp mode with untagged packets before and after the
change on a single core:
BEFORE: 19.919 Mpps
AFTER: 19.645 Mpps",True,{}
NetSys/bess,https://github.com/NetSys/bess,643,2017-09-12T22:38:02Z,2017-09-14T20:24:06Z,2017-09-28T16:23:24Z,MERGED,True,92,1,2,https://github.com/ddiproietto,ip_checksum: Handle VLAN packets.,1,[],https://github.com/NetSys/bess/pull/643,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/643#issuecomment-329006622,"trafficgen udp mode now supports generating packet with a vlan tag.
This commit changes the ip_checksum module to correctly handle those
packets.
As a result of this change, ip_checksum is now slower for untagged
packets.  In this very simple benchmark we measure the amount of traffic
generated by trafficgen udp mode with untagged packets before and after the
change on a single core:
BEFORE: 19.919 Mpps
AFTER: 19.645 Mpps","Idea for a future change: I bet this sort of logic will crop up in a lot of modules, so it would be nice if bess::utils::Ethernet exposed a function that dealt with all of this and returned a pointer to the L3 header.",True,{}
NetSys/bess,https://github.com/NetSys/bess,643,2017-09-12T22:38:02Z,2017-09-14T20:24:06Z,2017-09-28T16:23:24Z,MERGED,True,92,1,2,https://github.com/ddiproietto,ip_checksum: Handle VLAN packets.,1,[],https://github.com/NetSys/bess/pull/643,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/643#issuecomment-329010387,"trafficgen udp mode now supports generating packet with a vlan tag.
This commit changes the ip_checksum module to correctly handle those
packets.
As a result of this change, ip_checksum is now slower for untagged
packets.  In this very simple benchmark we measure the amount of traffic
generated by trafficgen udp mode with untagged packets before and after the
change on a single core:
BEFORE: 19.919 Mpps
AFTER: 19.645 Mpps","Codecov Report

Merging #643 into master will increase coverage by 0.07%.
The diff coverage is 60%.


@@            Coverage Diff             @@
##           master     #643      +/-   ##
==========================================
+ Coverage   69.35%   69.43%   +0.07%     
==========================================
  Files         204      204              
  Lines       13148    13162      +14     
==========================================
+ Hits         9119     9139      +20     
+ Misses       4029     4023       -6



Impacted Files
Coverage Δ





core/modules/ip_checksum.cc
73.91% <60%> (+62.8%)
⬆️


core/drivers/unix_socket.cc
80.91% <0%> (+0.76%)
⬆️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️


core/modules/ip_checksum.h
100% <0%> (+100%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e425ff9...cf6bd63. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,643,2017-09-12T22:38:02Z,2017-09-14T20:24:06Z,2017-09-28T16:23:24Z,MERGED,True,92,1,2,https://github.com/ddiproietto,ip_checksum: Handle VLAN packets.,1,[],https://github.com/NetSys/bess/pull/643,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/643#issuecomment-329309794,"trafficgen udp mode now supports generating packet with a vlan tag.
This commit changes the ip_checksum module to correctly handle those
packets.
As a result of this change, ip_checksum is now slower for untagged
packets.  In this very simple benchmark we measure the amount of traffic
generated by trafficgen udp mode with untagged packets before and after the
change on a single core:
BEFORE: 19.919 Mpps
AFTER: 19.645 Mpps","Looks good to me as well.
If performance matters, you may also want to consider switch-case with a conditional break. I am not quite sure whether some difference will be made by the compiler, but like personal curious..
switch(eth->ether_type) {
case Ethernet::Type::kQinQ:
        // recalcuate data
	if (next_ether_type is not kVlan)
		break;
case Ethernet::Type::kVlan:	
        // recalcuate data
	if (next_ether_type is not Ipv4)
		break;
case Ethernet::Type::Ipv4:
       ip = reinterpret_cast<Ipv4 *>(data);
       ip->checksum = CalculateIpv4Checksum(*ip);
default:
	break;
}",True,{}
NetSys/bess,https://github.com/NetSys/bess,643,2017-09-12T22:38:02Z,2017-09-14T20:24:06Z,2017-09-28T16:23:24Z,MERGED,True,92,1,2,https://github.com/ddiproietto,ip_checksum: Handle VLAN packets.,1,[],https://github.com/NetSys/bess/pull/643,https://github.com/ddiproietto,5,https://github.com/NetSys/bess/pull/643#issuecomment-329320922,"trafficgen udp mode now supports generating packet with a vlan tag.
This commit changes the ip_checksum module to correctly handle those
packets.
As a result of this change, ip_checksum is now slower for untagged
packets.  In this very simple benchmark we measure the amount of traffic
generated by trafficgen udp mode with untagged packets before and after the
change on a single core:
BEFORE: 19.919 Mpps
AFTER: 19.645 Mpps","I like the switch code!
I tried it, but it appears to be slightly slower (19.37), not sure why
Thanks",True,{}
NetSys/bess,https://github.com/NetSys/bess,643,2017-09-12T22:38:02Z,2017-09-14T20:24:06Z,2017-09-28T16:23:24Z,MERGED,True,92,1,2,https://github.com/ddiproietto,ip_checksum: Handle VLAN packets.,1,[],https://github.com/NetSys/bess/pull/643,https://github.com/shinae-woo,6,https://github.com/NetSys/bess/pull/643#issuecomment-329599017,"trafficgen udp mode now supports generating packet with a vlan tag.
This commit changes the ip_checksum module to correctly handle those
packets.
As a result of this change, ip_checksum is now slower for untagged
packets.  In this very simple benchmark we measure the amount of traffic
generated by trafficgen udp mode with untagged packets before and after the
change on a single core:
BEFORE: 19.919 Mpps
AFTER: 19.645 Mpps",Thank you by Hodoo ><,True,{}
NetSys/bess,https://github.com/NetSys/bess,644,2017-09-19T20:29:02Z,2017-09-23T06:06:04Z,2017-09-23T06:16:16Z,MERGED,True,344,0,4,https://github.com/sangjinhan,"Add a new primitive ""shared object"" to bess core",4,[],https://github.com/NetSys/bess/pull/644,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/644,"Often multiple modules need to share the same ""object"". One straightforward way to do this would be (and its issues):

Module A creates/owns an object (so loading/unloading order matters),
other modules find the module (module lookup by name is not supposed to be used by modules), and
the object is referenced by the modules somehow, e.g., via an A's method (the modules now need to know A's class definition)

To work around these issues, this PR adds a simple primitive to share arbitrary objects among modules (or ports or whatever). It's designed to be minimal with a single API:
shared_ptr<TypeFoo> foo_obj = bess::shared_objects::Get<TypeFoo>(""foo_name"");

Get() takes an arbitrary string as the name of an object, then:

If the object with the specified name already exists, it returns a shared_ptr to the object.
If not, it creates an instance of TypeFoo (of course with its constructor, if any).

Use Lookup() helper function if you don't want this behavior.


Just like any other shared_ptr objects, the returned object is destroyed when none has a reference.
Each type (TypeFoo above) has its own namespace, i.e., another type TypeBar may have a different object also named foo_name. This is to avoid potential type errors.
Get() and Lookup() themselves are thread-safe.

You are still responsible for the thread safety of objects, though.","Often multiple modules need to share the same ""object"". One straightforward way to do this would be (and its issues):

Module A creates/owns an object (so loading/unloading order matters),
other modules find the module (module lookup by name is not supposed to be used by modules), and
the object is referenced by the modules somehow, e.g., via an A's method (the modules now need to know A's class definition)

To work around these issues, this PR adds a simple primitive to share arbitrary objects among modules (or ports or whatever). It's designed to be minimal with a single API:
shared_ptr<TypeFoo> foo_obj = bess::shared_objects::Get<TypeFoo>(""foo_name"");

Get() takes an arbitrary string as the name of an object, then:

If the object with the specified name already exists, it returns a shared_ptr to the object.
If not, it creates an instance of TypeFoo (of course with its constructor, if any).

Use Lookup() helper function if you don't want this behavior.


Just like any other shared_ptr objects, the returned object is destroyed when none has a reference.
Each type (TypeFoo above) has its own namespace, i.e., another type TypeBar may have a different object also named foo_name. This is to avoid potential type errors.
Get() and Lookup() themselves are thread-safe.

You are still responsible for the thread safety of objects, though.",True,{}
NetSys/bess,https://github.com/NetSys/bess,644,2017-09-19T20:29:02Z,2017-09-23T06:06:04Z,2017-09-23T06:16:16Z,MERGED,True,344,0,4,https://github.com/sangjinhan,"Add a new primitive ""shared object"" to bess core",4,[],https://github.com/NetSys/bess/pull/644,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/644#issuecomment-331303519,"Often multiple modules need to share the same ""object"". One straightforward way to do this would be (and its issues):

Module A creates/owns an object (so loading/unloading order matters),
other modules find the module (module lookup by name is not supposed to be used by modules), and
the object is referenced by the modules somehow, e.g., via an A's method (the modules now need to know A's class definition)

To work around these issues, this PR adds a simple primitive to share arbitrary objects among modules (or ports or whatever). It's designed to be minimal with a single API:
shared_ptr<TypeFoo> foo_obj = bess::shared_objects::Get<TypeFoo>(""foo_name"");

Get() takes an arbitrary string as the name of an object, then:

If the object with the specified name already exists, it returns a shared_ptr to the object.
If not, it creates an instance of TypeFoo (of course with its constructor, if any).

Use Lookup() helper function if you don't want this behavior.


Just like any other shared_ptr objects, the returned object is destroyed when none has a reference.
Each type (TypeFoo above) has its own namespace, i.e., another type TypeBar may have a different object also named foo_name. This is to avoid potential type errors.
Get() and Lookup() themselves are thread-safe.

You are still responsible for the thread safety of objects, though.","Codecov Report

Merging #644 into master will increase coverage by 0.24%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #644      +/-   ##
==========================================
+ Coverage    68.9%   69.14%   +0.24%     
==========================================
  Files         205      208       +3     
  Lines       13266    13371     +105     
==========================================
+ Hits         9141     9246     +105     
  Misses       4125     4125



Impacted Files
Coverage Δ





core/shared_obj_test.cc
100% <100%> (ø)



core/utils/common.h
95.23% <100%> (+1.68%)
⬆️


core/shared_obj.cc
100% <100%> (ø)



core/shared_obj.h
100% <100%> (ø)





Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 36d6912...54cd78e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,644,2017-09-19T20:29:02Z,2017-09-23T06:06:04Z,2017-09-23T06:16:16Z,MERGED,True,344,0,4,https://github.com/sangjinhan,"Add a new primitive ""shared object"" to bess core",4,[],https://github.com/NetSys/bess/pull/644,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/644#issuecomment-331613605,"Often multiple modules need to share the same ""object"". One straightforward way to do this would be (and its issues):

Module A creates/owns an object (so loading/unloading order matters),
other modules find the module (module lookup by name is not supposed to be used by modules), and
the object is referenced by the modules somehow, e.g., via an A's method (the modules now need to know A's class definition)

To work around these issues, this PR adds a simple primitive to share arbitrary objects among modules (or ports or whatever). It's designed to be minimal with a single API:
shared_ptr<TypeFoo> foo_obj = bess::shared_objects::Get<TypeFoo>(""foo_name"");

Get() takes an arbitrary string as the name of an object, then:

If the object with the specified name already exists, it returns a shared_ptr to the object.
If not, it creates an instance of TypeFoo (of course with its constructor, if any).

Use Lookup() helper function if you don't want this behavior.


Just like any other shared_ptr objects, the returned object is destroyed when none has a reference.
Each type (TypeFoo above) has its own namespace, i.e., another type TypeBar may have a different object also named foo_name. This is to avoid potential type errors.
Get() and Lookup() themselves are thread-safe.

You are still responsible for the thread safety of objects, though.",TGIF,True,{}
NetSys/bess,https://github.com/NetSys/bess,645,2017-09-21T18:39:13Z,2017-09-21T22:12:43Z,2017-09-26T20:56:05Z,MERGED,True,1,1,1,https://github.com/chris3torek,fix FlowGen documentation typo,1,[],https://github.com/NetSys/bess/pull/645,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/645,"The actual core/modules/flowgen.cc code reads:
if (ip_src_range_ == 0 && ip_dst_range_ == 0 && port_src_range_ == 0 &&
port_dst_range_ == 0) {
/randomize ports anyway/
port_dst_range_ = 20000;
port_src_range_ = 20000;
}
but the comment in module_msg.proto said ""2000"".  On the assumption
that the code is more correct than the documentation, fix the
documentation.","The actual core/modules/flowgen.cc code reads:
if (ip_src_range_ == 0 && ip_dst_range_ == 0 && port_src_range_ == 0 &&
port_dst_range_ == 0) {
/randomize ports anyway/
port_dst_range_ = 20000;
port_src_range_ = 20000;
}
but the comment in module_msg.proto said ""2000"".  On the assumption
that the code is more correct than the documentation, fix the
documentation.",True,{}
NetSys/bess,https://github.com/NetSys/bess,645,2017-09-21T18:39:13Z,2017-09-21T22:12:43Z,2017-09-26T20:56:05Z,MERGED,True,1,1,1,https://github.com/chris3torek,fix FlowGen documentation typo,1,[],https://github.com/NetSys/bess/pull/645,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/645#issuecomment-331254231,"The actual core/modules/flowgen.cc code reads:
if (ip_src_range_ == 0 && ip_dst_range_ == 0 && port_src_range_ == 0 &&
port_dst_range_ == 0) {
/randomize ports anyway/
port_dst_range_ = 20000;
port_src_range_ = 20000;
}
but the comment in module_msg.proto said ""2000"".  On the assumption
that the code is more correct than the documentation, fix the
documentation.","Codecov Report

Merging #645 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #645   +/-   ##
=======================================
  Coverage   68.89%   68.89%           
=======================================
  Files         205      205           
  Lines       13266    13266           
=======================================
  Hits         9140     9140           
  Misses       4126     4126



Impacted Files
Coverage Δ





pybess/bess.py
42.34% <0%> (-0.48%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9331dae...484638f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,645,2017-09-21T18:39:13Z,2017-09-21T22:12:43Z,2017-09-26T20:56:05Z,MERGED,True,1,1,1,https://github.com/chris3torek,fix FlowGen documentation typo,1,[],https://github.com/NetSys/bess/pull/645,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/645#issuecomment-331296430,"The actual core/modules/flowgen.cc code reads:
if (ip_src_range_ == 0 && ip_dst_range_ == 0 && port_src_range_ == 0 &&
port_dst_range_ == 0) {
/randomize ports anyway/
port_dst_range_ = 20000;
port_src_range_ = 20000;
}
but the comment in module_msg.proto said ""2000"".  On the assumption
that the code is more correct than the documentation, fix the
documentation.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,646,2017-09-22T14:50:40Z,2017-09-26T20:32:44Z,2017-09-26T20:33:23Z,MERGED,True,10,3,1,https://github.com/nemethf,bessctl: Report error location when loading a bess script fails,1,[],https://github.com/NetSys/bess/pull/646,https://github.com/nemethf,1,https://github.com/NetSys/bess/pull/646,Location reporting disappeared with commit 4e7c583,Location reporting disappeared with commit 4e7c583,True,{}
NetSys/bess,https://github.com/NetSys/bess,646,2017-09-22T14:50:40Z,2017-09-26T20:32:44Z,2017-09-26T20:33:23Z,MERGED,True,10,3,1,https://github.com/nemethf,bessctl: Report error location when loading a bess script fails,1,[],https://github.com/NetSys/bess/pull/646,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/646#issuecomment-331479484,Location reporting disappeared with commit 4e7c583,"Codecov Report

Merging #646 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #646      +/-   ##
==========================================
+ Coverage    68.9%   68.91%   +<.01%     
==========================================
  Files         205      205              
  Lines       13266    13266              
==========================================
+ Hits         9141     9142       +1     
+ Misses       4125     4124       -1



Impacted Files
Coverage Δ





core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 36d6912...220bb11. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,646,2017-09-22T14:50:40Z,2017-09-26T20:32:44Z,2017-09-26T20:33:23Z,MERGED,True,10,3,1,https://github.com/nemethf,bessctl: Report error location when loading a bess script fails,1,[],https://github.com/NetSys/bess/pull/646,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/646#issuecomment-332326827,Location reporting disappeared with commit 4e7c583,Thank you!,True,{}
NetSys/bess,https://github.com/NetSys/bess,647,2017-09-22T20:35:51Z,2017-09-27T00:54:26Z,2017-09-27T02:38:02Z,MERGED,True,52,56,3,https://github.com/nrdmao,Automatically pause workers on certain commands,4,[],https://github.com/NetSys/bess/pull/647,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/647,"The following changes are being proposed to automatically pause workers when commands requiring that workers be paused are executed.
This change alleviates the application from having to pause/resume workers and the associated maintenance of the worker state. This issue more particularly effects asynchronous clients.
This change is also expected to improve the performance of bessd when configuration changes are made under traffic load as workers are paused only when the message is processed. As is currently implemented, workers are paused from the processing of PauseAll to the subsequent ResumeAll, which could be a significant period of time given the gRPC round trips between controller and bessd.","The following changes are being proposed to automatically pause workers when commands requiring that workers be paused are executed.
This change alleviates the application from having to pause/resume workers and the associated maintenance of the worker state. This issue more particularly effects asynchronous clients.
This change is also expected to improve the performance of bessd when configuration changes are made under traffic load as workers are paused only when the message is processed. As is currently implemented, workers are paused from the processing of PauseAll to the subsequent ResumeAll, which could be a significant period of time given the gRPC round trips between controller and bessd.",True,{}
NetSys/bess,https://github.com/NetSys/bess,647,2017-09-22T20:35:51Z,2017-09-27T00:54:26Z,2017-09-27T02:38:02Z,MERGED,True,52,56,3,https://github.com/nrdmao,Automatically pause workers on certain commands,4,[],https://github.com/NetSys/bess/pull/647,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/647#issuecomment-331561924,"The following changes are being proposed to automatically pause workers when commands requiring that workers be paused are executed.
This change alleviates the application from having to pause/resume workers and the associated maintenance of the worker state. This issue more particularly effects asynchronous clients.
This change is also expected to improve the performance of bessd when configuration changes are made under traffic load as workers are paused only when the message is processed. As is currently implemented, workers are paused from the processing of PauseAll to the subsequent ResumeAll, which could be a significant period of time given the gRPC round trips between controller and bessd.","Codecov Report

Merging #647 into master will increase coverage by 0.29%.
The diff coverage is 48.38%.


@@            Coverage Diff            @@
##           master    #647      +/-   ##
=========================================
+ Coverage    68.9%   69.2%   +0.29%     
=========================================
  Files         205     208       +3     
  Lines       13266   13369     +103     
=========================================
+ Hits         9141    9252     +111     
+ Misses       4125    4117       -8



Impacted Files
Coverage Δ





core/worker.h
95.65% <ø> (ø)
⬆️


core/worker.cc
87.5% <46.15%> (-3.2%)
⬇️


core/bessctl.cc
48.25% <50%> (+0.74%)
⬆️


core/shared_obj.h
100% <0%> (ø)



core/shared_obj_test.cc
100% <0%> (ø)



core/shared_obj.cc
100% <0%> (ø)



core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/utils/common.h
95.23% <0%> (+1.68%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 36d6912...6e96e41. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,647,2017-09-22T20:35:51Z,2017-09-27T00:54:26Z,2017-09-27T02:38:02Z,MERGED,True,52,56,3,https://github.com/nrdmao,Automatically pause workers on certain commands,4,[],https://github.com/NetSys/bess/pull/647,https://github.com/nrdmao,3,https://github.com/NetSys/bess/pull/647#issuecomment-331573940,"The following changes are being proposed to automatically pause workers when commands requiring that workers be paused are executed.
This change alleviates the application from having to pause/resume workers and the associated maintenance of the worker state. This issue more particularly effects asynchronous clients.
This change is also expected to improve the performance of bessd when configuration changes are made under traffic load as workers are paused only when the message is processed. As is currently implemented, workers are paused from the processing of PauseAll to the subsequent ResumeAll, which could be a significant period of time given the gRPC round trips between controller and bessd.","Regarding: before this change, a controller could try to apply some changes without pausing (for example, connect two new modules) and receive an error if this wasn't possible. from @ddiproietto
I am open to suggestion. I was thinking that if this behavior was required we could add a flag to all the affected gRPC messages to indicate if workers should be auto-paused or if an error should be returned indicating that workers are running.",True,{}
NetSys/bess,https://github.com/NetSys/bess,647,2017-09-22T20:35:51Z,2017-09-27T00:54:26Z,2017-09-27T02:38:02Z,MERGED,True,52,56,3,https://github.com/nrdmao,Automatically pause workers on certain commands,4,[],https://github.com/NetSys/bess/pull/647,https://github.com/ddiproietto,4,https://github.com/NetSys/bess/pull/647#issuecomment-331575379,"The following changes are being proposed to automatically pause workers when commands requiring that workers be paused are executed.
This change alleviates the application from having to pause/resume workers and the associated maintenance of the worker state. This issue more particularly effects asynchronous clients.
This change is also expected to improve the performance of bessd when configuration changes are made under traffic load as workers are paused only when the message is processed. As is currently implemented, workers are paused from the processing of PauseAll to the subsequent ResumeAll, which could be a significant period of time given the gRPC round trips between controller and bessd.","You're right, we can always add a flag if we need to support that kind of behavior in the future.",True,{}
NetSys/bess,https://github.com/NetSys/bess,647,2017-09-22T20:35:51Z,2017-09-27T00:54:26Z,2017-09-27T02:38:02Z,MERGED,True,52,56,3,https://github.com/nrdmao,Automatically pause workers on certain commands,4,[],https://github.com/NetSys/bess/pull/647,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/647#issuecomment-331613389,"The following changes are being proposed to automatically pause workers when commands requiring that workers be paused are executed.
This change alleviates the application from having to pause/resume workers and the associated maintenance of the worker state. This issue more particularly effects asynchronous clients.
This change is also expected to improve the performance of bessd when configuration changes are made under traffic load as workers are paused only when the message is processed. As is currently implemented, workers are paused from the processing of PauseAll to the subsequent ResumeAll, which could be a significant period of time given the gRPC round trips between controller and bessd.","A corner case might arise when some workers are already paused at the beginning, while other workers are active (one can selectively pause workers with pause_worker(), instead of using pause_all()). Then in the destructor, only newly paused workers should be woken up.",True,{}
NetSys/bess,https://github.com/NetSys/bess,647,2017-09-22T20:35:51Z,2017-09-27T00:54:26Z,2017-09-27T02:38:02Z,MERGED,True,52,56,3,https://github.com/nrdmao,Automatically pause workers on certain commands,4,[],https://github.com/NetSys/bess/pull/647,https://github.com/nrdmao,6,https://github.com/NetSys/bess/pull/647#issuecomment-331958386,"The following changes are being proposed to automatically pause workers when commands requiring that workers be paused are executed.
This change alleviates the application from having to pause/resume workers and the associated maintenance of the worker state. This issue more particularly effects asynchronous clients.
This change is also expected to improve the performance of bessd when configuration changes are made under traffic load as workers are paused only when the message is processed. As is currently implemented, workers are paused from the processing of PauseAll to the subsequent ResumeAll, which could be a significant period of time given the gRPC round trips between controller and bessd.","@sangjinhan yes, I saw the same issue. I will push another change.",True,{}
NetSys/bess,https://github.com/NetSys/bess,647,2017-09-22T20:35:51Z,2017-09-27T00:54:26Z,2017-09-27T02:38:02Z,MERGED,True,52,56,3,https://github.com/nrdmao,Automatically pause workers on certain commands,4,[],https://github.com/NetSys/bess/pull/647,https://github.com/shinae-woo,7,https://github.com/NetSys/bess/pull/647#issuecomment-332392001,"The following changes are being proposed to automatically pause workers when commands requiring that workers be paused are executed.
This change alleviates the application from having to pause/resume workers and the associated maintenance of the worker state. This issue more particularly effects asynchronous clients.
This change is also expected to improve the performance of bessd when configuration changes are made under traffic load as workers are paused only when the message is processed. As is currently implemented, workers are paused from the processing of PauseAll to the subsequent ResumeAll, which could be a significant period of time given the gRPC round trips between controller and bessd.",Thank you!,True,{}
NetSys/bess,https://github.com/NetSys/bess,648,2017-09-23T01:09:57Z,2017-09-28T06:30:11Z,2017-09-28T06:31:36Z,MERGED,True,305,283,6,https://github.com/sangjinhan,Make the Measure module thread-safe,3,['enhancement'],https://github.com/NetSys/bess/pull/648,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/648,"In the past, the Measure module required all workers to be paused to get latency statistics. This pause time incurred a quite amount of inaccuracy, due to increase of the tail latency, undermining its usefulness. While #632 marked get_summary() thread-safe making bess.pause_all() unnecessary, as a side effect it returns (almost) always zero values for the latency/jitter histogram values. This is due to the internal mechanism of the Histogram class; it clears all cached statistics values (min, avg, max, percentiles, etc.) whenever insert() is called. Therefore get_summary() cannot interleave with insert(), strictly requiring workers to be paused.
This PR makes the Measure module thread-safe, in terms of both (1) between a gRPC thread and a worker thread and (2) among worker threads. It includes the following major changes:

ProcessBatch() is now protected with a spinlock, thus one module can be used by multiple worker threads.

Locking is done per-batch, incurring little overhead as compared to the non-locking version (unless the module is contended).


get_summary() does not perform ""destructive read"" (clears all data points) any longer.

This is useful especially when the module needs to be monitored by multiple controllers.
Data points are only cleared when explicitly asked, i.e., either get_summary(clear=True) or clear().
SInce it is read only, it doesn't hold the lock.


Instead of predefined percentiles (50'th and 99'th), any number of percentiles can be calculated.

This is done with one-pass scanning over the histogram. Additional percentiles add minimal CPU overheads.","In the past, the Measure module required all workers to be paused to get latency statistics. This pause time incurred a quite amount of inaccuracy, due to increase of the tail latency, undermining its usefulness. While #632 marked get_summary() thread-safe making bess.pause_all() unnecessary, as a side effect it returns (almost) always zero values for the latency/jitter histogram values. This is due to the internal mechanism of the Histogram class; it clears all cached statistics values (min, avg, max, percentiles, etc.) whenever insert() is called. Therefore get_summary() cannot interleave with insert(), strictly requiring workers to be paused.
This PR makes the Measure module thread-safe, in terms of both (1) between a gRPC thread and a worker thread and (2) among worker threads. It includes the following major changes:

ProcessBatch() is now protected with a spinlock, thus one module can be used by multiple worker threads.

Locking is done per-batch, incurring little overhead as compared to the non-locking version (unless the module is contended).


get_summary() does not perform ""destructive read"" (clears all data points) any longer.

This is useful especially when the module needs to be monitored by multiple controllers.
Data points are only cleared when explicitly asked, i.e., either get_summary(clear=True) or clear().
SInce it is read only, it doesn't hold the lock.


Instead of predefined percentiles (50'th and 99'th), any number of percentiles can be calculated.

This is done with one-pass scanning over the histogram. Additional percentiles add minimal CPU overheads.",True,{}
NetSys/bess,https://github.com/NetSys/bess,648,2017-09-23T01:09:57Z,2017-09-28T06:30:11Z,2017-09-28T06:31:36Z,MERGED,True,305,283,6,https://github.com/sangjinhan,Make the Measure module thread-safe,3,['enhancement'],https://github.com/NetSys/bess/pull/648,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/648#issuecomment-331595602,"In the past, the Measure module required all workers to be paused to get latency statistics. This pause time incurred a quite amount of inaccuracy, due to increase of the tail latency, undermining its usefulness. While #632 marked get_summary() thread-safe making bess.pause_all() unnecessary, as a side effect it returns (almost) always zero values for the latency/jitter histogram values. This is due to the internal mechanism of the Histogram class; it clears all cached statistics values (min, avg, max, percentiles, etc.) whenever insert() is called. Therefore get_summary() cannot interleave with insert(), strictly requiring workers to be paused.
This PR makes the Measure module thread-safe, in terms of both (1) between a gRPC thread and a worker thread and (2) among worker threads. It includes the following major changes:

ProcessBatch() is now protected with a spinlock, thus one module can be used by multiple worker threads.

Locking is done per-batch, incurring little overhead as compared to the non-locking version (unless the module is contended).


get_summary() does not perform ""destructive read"" (clears all data points) any longer.

This is useful especially when the module needs to be monitored by multiple controllers.
Data points are only cleared when explicitly asked, i.e., either get_summary(clear=True) or clear().
SInce it is read only, it doesn't hold the lock.


Instead of predefined percentiles (50'th and 99'th), any number of percentiles can be calculated.

This is done with one-pass scanning over the histogram. Additional percentiles add minimal CPU overheads.","bessctl/conf/port/latency.bess shows how to use the module.
$ bessctl daemon start -- run port/latency
                                          RTT (us)                                jitter (us)
                                             avg    min    50%    99%      max       avg    min    50%    99%      max
    1.001782: 1.498 Mpps,  934.575 Mbps,  11.723   10.4   11.5   14.9    108.8     0.270    0.0    0.0    3.3     55.2
    2.017251: 1.478 Mpps,  922.529 Mbps,  11.766   10.3   11.5   15.0    128.0     0.278    0.0    0.0    3.5    116.4
    3.028996: 1.484 Mpps,  925.726 Mbps,  11.780    9.7   11.6   15.1     28.2     0.271    0.0    0.0    3.5     15.8
    4.042742: 1.481 Mpps,  923.998 Mbps,  11.781   10.1   11.6   15.0    108.7     0.281    0.0    0.0    3.4     97.5
    5.048047: 1.493 Mpps,  931.875 Mbps,  11.720   10.9   11.5   14.9     86.8     0.271    0.0    0.0    3.4     72.0
    6.053275: 1.492 Mpps,  931.251 Mbps,  11.787    9.5   11.6   14.9    109.3     0.271    0.0    0.0    3.4     98.1
    7.066130: 1.482 Mpps,  924.949 Mbps,  11.769    9.9   11.6   14.9     93.9     0.268    0.0    0.0    3.4     82.4
    8.071344: 1.494 Mpps,  931.979 Mbps,  11.803    9.9   11.6   14.9     97.0     0.268    0.0    0.0    3.4     83.5",True,{}
NetSys/bess,https://github.com/NetSys/bess,648,2017-09-23T01:09:57Z,2017-09-28T06:30:11Z,2017-09-28T06:31:36Z,MERGED,True,305,283,6,https://github.com/sangjinhan,Make the Measure module thread-safe,3,['enhancement'],https://github.com/NetSys/bess/pull/648,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/648#issuecomment-332733737,"In the past, the Measure module required all workers to be paused to get latency statistics. This pause time incurred a quite amount of inaccuracy, due to increase of the tail latency, undermining its usefulness. While #632 marked get_summary() thread-safe making bess.pause_all() unnecessary, as a side effect it returns (almost) always zero values for the latency/jitter histogram values. This is due to the internal mechanism of the Histogram class; it clears all cached statistics values (min, avg, max, percentiles, etc.) whenever insert() is called. Therefore get_summary() cannot interleave with insert(), strictly requiring workers to be paused.
This PR makes the Measure module thread-safe, in terms of both (1) between a gRPC thread and a worker thread and (2) among worker threads. It includes the following major changes:

ProcessBatch() is now protected with a spinlock, thus one module can be used by multiple worker threads.

Locking is done per-batch, incurring little overhead as compared to the non-locking version (unless the module is contended).


get_summary() does not perform ""destructive read"" (clears all data points) any longer.

This is useful especially when the module needs to be monitored by multiple controllers.
Data points are only cleared when explicitly asked, i.e., either get_summary(clear=True) or clear().
SInce it is read only, it doesn't hold the lock.


Instead of predefined percentiles (50'th and 99'th), any number of percentiles can be calculated.

This is done with one-pass scanning over the histogram. Additional percentiles add minimal CPU overheads.","Codecov Report

Merging #648 into master will decrease coverage by 0.15%.
The diff coverage is 78.19%.


@@            Coverage Diff             @@
##           master     #648      +/-   ##
==========================================
- Coverage   69.19%   69.04%   -0.16%     
==========================================
  Files         208      209       +1     
  Lines       13369    13394      +25     
==========================================
- Hits         9251     9248       -3     
- Misses       4118     4146      +28



Impacted Files
Coverage Δ





core/utils/histogram_test.cc
100% <100%> (ø)
⬆️


core/modules/measure.h
100% <100%> (ø)
⬆️


core/utils/histogram.h
100% <100%> (+4.1%)
⬆️


core/modules/measure.cc
60.43% <53.96%> (-7.26%)
⬇️


core/bessctl.cc
47.5% <0%> (-0.75%)
⬇️


core/module.h
87.73% <0%> (-0.23%)
⬇️


core/utils/mcslock.h
57.14% <0%> (ø)



core/packet.h
83.95% <0%> (+0.4%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/worker.cc
90.69% <0%> (+3.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 07e203b...7438f76. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,648,2017-09-23T01:09:57Z,2017-09-28T06:30:11Z,2017-09-28T06:31:36Z,MERGED,True,305,283,6,https://github.com/sangjinhan,Make the Measure module thread-safe,3,['enhancement'],https://github.com/NetSys/bess/pull/648,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/648#issuecomment-332740621,"In the past, the Measure module required all workers to be paused to get latency statistics. This pause time incurred a quite amount of inaccuracy, due to increase of the tail latency, undermining its usefulness. While #632 marked get_summary() thread-safe making bess.pause_all() unnecessary, as a side effect it returns (almost) always zero values for the latency/jitter histogram values. This is due to the internal mechanism of the Histogram class; it clears all cached statistics values (min, avg, max, percentiles, etc.) whenever insert() is called. Therefore get_summary() cannot interleave with insert(), strictly requiring workers to be paused.
This PR makes the Measure module thread-safe, in terms of both (1) between a gRPC thread and a worker thread and (2) among worker threads. It includes the following major changes:

ProcessBatch() is now protected with a spinlock, thus one module can be used by multiple worker threads.

Locking is done per-batch, incurring little overhead as compared to the non-locking version (unless the module is contended).


get_summary() does not perform ""destructive read"" (clears all data points) any longer.

This is useful especially when the module needs to be monitored by multiple controllers.
Data points are only cleared when explicitly asked, i.e., either get_summary(clear=True) or clear().
SInce it is read only, it doesn't hold the lock.


Instead of predefined percentiles (50'th and 99'th), any number of percentiles can be calculated.

This is done with one-pass scanning over the histogram. Additional percentiles add minimal CPU overheads.",Thanks (you too @shinae-woo )!,True,{}
NetSys/bess,https://github.com/NetSys/bess,649,2017-09-23T01:17:07Z,2017-09-26T20:52:34Z,2017-10-03T00:30:12Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Add missing dependency files in Makefile,1,[],https://github.com/NetSys/bess/pull/649,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/649,"In the line in Makefile -include $(wildcard $(DEPDIR)/**/*.d), ** is a shell feature and not supported by Makefile. As a result, this clause won't include $(DEPDIR)/*.d files, missing dependencies for the files in core/ (not in its sub directories). Incremental building behaves incorrectly.","In the line in Makefile -include $(wildcard $(DEPDIR)/**/*.d), ** is a shell feature and not supported by Makefile. As a result, this clause won't include $(DEPDIR)/*.d files, missing dependencies for the files in core/ (not in its sub directories). Incremental building behaves incorrectly.",True,{}
NetSys/bess,https://github.com/NetSys/bess,649,2017-09-23T01:17:07Z,2017-09-26T20:52:34Z,2017-10-03T00:30:12Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Add missing dependency files in Makefile,1,[],https://github.com/NetSys/bess/pull/649,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/649#issuecomment-331602324,"In the line in Makefile -include $(wildcard $(DEPDIR)/**/*.d), ** is a shell feature and not supported by Makefile. As a result, this clause won't include $(DEPDIR)/*.d files, missing dependencies for the files in core/ (not in its sub directories). Incremental building behaves incorrectly.","Codecov Report

Merging #649 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #649      +/-   ##
==========================================
+ Coverage    68.9%   68.91%   +<.01%     
==========================================
  Files         205      205              
  Lines       13266    13266              
==========================================
+ Hits         9141     9142       +1     
+ Misses       4125     4124       -1



Impacted Files
Coverage Δ





core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 36d6912...d3ad2fb. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,649,2017-09-23T01:17:07Z,2017-09-26T20:52:34Z,2017-10-03T00:30:12Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Add missing dependency files in Makefile,1,[],https://github.com/NetSys/bess/pull/649,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/649#issuecomment-332332228,"In the line in Makefile -include $(wildcard $(DEPDIR)/**/*.d), ** is a shell feature and not supported by Makefile. As a result, this clause won't include $(DEPDIR)/*.d files, missing dependencies for the files in core/ (not in its sub directories). Incremental building behaves incorrectly.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,650,2017-09-23T01:22:34Z,2017-09-28T06:37:30Z,2017-09-28T06:44:06Z,MERGED,True,11,24,1,https://github.com/sangjinhan,Do not consume Ethernet headers in loopback mode,1,[],https://github.com/NetSys/bess/pull/650,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/650,"In the kernel module, all received packets are passed to eth_type_trans(). Its side effect is that packet Ethernet headers are decapsulated; not a desired behavior for loopback mode, where one would expect all sent packets return intact.","In the kernel module, all received packets are passed to eth_type_trans(). Its side effect is that packet Ethernet headers are decapsulated; not a desired behavior for loopback mode, where one would expect all sent packets return intact.",True,{}
NetSys/bess,https://github.com/NetSys/bess,650,2017-09-23T01:22:34Z,2017-09-28T06:37:30Z,2017-09-28T06:44:06Z,MERGED,True,11,24,1,https://github.com/sangjinhan,Do not consume Ethernet headers in loopback mode,1,[],https://github.com/NetSys/bess/pull/650,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/650#issuecomment-331597369,"In the kernel module, all received packets are passed to eth_type_trans(). Its side effect is that packet Ethernet headers are decapsulated; not a desired behavior for loopback mode, where one would expect all sent packets return intact.","This bug caused incorrect behavior of the port/latency example (Measure module do not find a marker in packets updated by Timestamp, due to offset shift by 14 bytes).",True,{}
NetSys/bess,https://github.com/NetSys/bess,650,2017-09-23T01:22:34Z,2017-09-28T06:37:30Z,2017-09-28T06:44:06Z,MERGED,True,11,24,1,https://github.com/sangjinhan,Do not consume Ethernet headers in loopback mode,1,[],https://github.com/NetSys/bess/pull/650,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/650#issuecomment-331604524,"In the kernel module, all received packets are passed to eth_type_trans(). Its side effect is that packet Ethernet headers are decapsulated; not a desired behavior for loopback mode, where one would expect all sent packets return intact.","Codecov Report

Merging #650 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master    #650      +/-   ##
=========================================
+ Coverage   69.19%   69.2%   +<.01%     
=========================================
  Files         208     208              
  Lines       13369   13369              
=========================================
+ Hits         9251    9252       +1     
+ Misses       4118    4117       -1



Impacted Files
Coverage Δ





core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9e58a53...61530ae. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,650,2017-09-23T01:22:34Z,2017-09-28T06:37:30Z,2017-09-28T06:44:06Z,MERGED,True,11,24,1,https://github.com/sangjinhan,Do not consume Ethernet headers in loopback mode,1,[],https://github.com/NetSys/bess/pull/650,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/650#issuecomment-332344422,"In the kernel module, all received packets are passed to eth_type_trans(). Its side effect is that packet Ethernet headers are decapsulated; not a desired behavior for loopback mode, where one would expect all sent packets return intact.","LGTM.
One quick question: When is sn_process_rx_metadata() supposed to return rather than zero?",True,{}
NetSys/bess,https://github.com/NetSys/bess,650,2017-09-23T01:22:34Z,2017-09-28T06:37:30Z,2017-09-28T06:44:06Z,MERGED,True,11,24,1,https://github.com/sangjinhan,Do not consume Ethernet headers in loopback mode,1,[],https://github.com/NetSys/bess/pull/650,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/650#issuecomment-332667947,"In the kernel module, all received packets are passed to eth_type_trans(). Its side effect is that packet Ethernet headers are decapsulated; not a desired behavior for loopback mode, where one would expect all sent packets return intact.",I think it used to return error values regarding some offloading features. Thank you for making it void.,True,{}
NetSys/bess,https://github.com/NetSys/bess,650,2017-09-23T01:22:34Z,2017-09-28T06:37:30Z,2017-09-28T06:44:06Z,MERGED,True,11,24,1,https://github.com/sangjinhan,Do not consume Ethernet headers in loopback mode,1,[],https://github.com/NetSys/bess/pull/650,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/650#issuecomment-332741808,"In the kernel module, all received packets are passed to eth_type_trans(). Its side effect is that packet Ethernet headers are decapsulated; not a desired behavior for loopback mode, where one would expect all sent packets return intact.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,651,2017-09-26T00:59:15Z,2017-09-26T20:39:13Z,2017-09-28T16:23:38Z,MERGED,True,33,25,1,https://github.com/ddiproietto,bessctl: Add GRAPHEASY_OPTS to show/monitor pipeline.,1,[],https://github.com/NetSys/bess/pull/651,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/651,"Similar to TCPDUMP_OPTS, this lets the user provide additional options
to the graph-easy invocation (or even pipe the graph-easy output to other
programs).
I find this change useful because sometimes the graph is too complicated to
be shown on the terminal.  With this commit
localhost:10514 $ show pipeline --as dot | dot -Tsvg -o graph.svg

outputs the graph to a file on disk.","Similar to TCPDUMP_OPTS, this lets the user provide additional options
to the graph-easy invocation (or even pipe the graph-easy output to other
programs).
I find this change useful because sometimes the graph is too complicated to
be shown on the terminal.  With this commit
localhost:10514 $ show pipeline --as dot | dot -Tsvg -o graph.svg

outputs the graph to a file on disk.",True,{}
NetSys/bess,https://github.com/NetSys/bess,651,2017-09-26T00:59:15Z,2017-09-26T20:39:13Z,2017-09-28T16:23:38Z,MERGED,True,33,25,1,https://github.com/ddiproietto,bessctl: Add GRAPHEASY_OPTS to show/monitor pipeline.,1,[],https://github.com/NetSys/bess/pull/651,https://github.com/ddiproietto,2,https://github.com/NetSys/bess/pull/651#issuecomment-332055443,"Similar to TCPDUMP_OPTS, this lets the user provide additional options
to the graph-easy invocation (or even pipe the graph-easy output to other
programs).
I find this change useful because sometimes the graph is too complicated to
be shown on the terminal.  With this commit
localhost:10514 $ show pipeline --as dot | dot -Tsvg -o graph.svg

outputs the graph to a file on disk.","If this feels to hacky, we could change the commands to explicitly supports output to an image, but I think keyword arguments would really help in that case (#352)",True,{}
NetSys/bess,https://github.com/NetSys/bess,651,2017-09-26T00:59:15Z,2017-09-26T20:39:13Z,2017-09-28T16:23:38Z,MERGED,True,33,25,1,https://github.com/ddiproietto,bessctl: Add GRAPHEASY_OPTS to show/monitor pipeline.,1,[],https://github.com/NetSys/bess/pull/651,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/651#issuecomment-332265655,"Similar to TCPDUMP_OPTS, this lets the user provide additional options
to the graph-easy invocation (or even pipe the graph-easy output to other
programs).
I find this change useful because sometimes the graph is too complicated to
be shown on the terminal.  With this commit
localhost:10514 $ show pipeline --as dot | dot -Tsvg -o graph.svg

outputs the graph to a file on disk.","Codecov Report

Merging #651 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #651   +/-   ##
=======================================
  Coverage   69.15%   69.15%           
=======================================
  Files         208      208           
  Lines       13371    13371           
=======================================
  Hits         9247     9247           
  Misses       4124     4124

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1b1b4b6...f7c8c59. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,651,2017-09-26T00:59:15Z,2017-09-26T20:39:13Z,2017-09-28T16:23:38Z,MERGED,True,33,25,1,https://github.com/ddiproietto,bessctl: Add GRAPHEASY_OPTS to show/monitor pipeline.,1,[],https://github.com/NetSys/bess/pull/651,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/651#issuecomment-332328557,"Similar to TCPDUMP_OPTS, this lets the user provide additional options
to the graph-easy invocation (or even pipe the graph-easy output to other
programs).
I find this change useful because sometimes the graph is too complicated to
be shown on the terminal.  With this commit
localhost:10514 $ show pipeline --as dot | dot -Tsvg -o graph.svg

outputs the graph to a file on disk.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,653,2017-09-28T03:41:28Z,2017-09-28T05:06:35Z,2017-09-28T06:16:48Z,MERGED,True,10,6,2,https://github.com/shinae-woo,Make module aligned to 64B,1,[],https://github.com/NetSys/bess/pull/653,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/653,"plus, fix a bug operator new() in Packet class
alinged_alloc() is available from C++17, so I use legacy mem_alloc_ex().","plus, fix a bug operator new() in Packet class
alinged_alloc() is available from C++17, so I use legacy mem_alloc_ex().",True,{}
NetSys/bess,https://github.com/NetSys/bess,653,2017-09-28T03:41:28Z,2017-09-28T05:06:35Z,2017-09-28T06:16:48Z,MERGED,True,10,6,2,https://github.com/shinae-woo,Make module aligned to 64B,1,[],https://github.com/NetSys/bess/pull/653,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/653#issuecomment-332723521,"plus, fix a bug operator new() in Packet class
alinged_alloc() is available from C++17, so I use legacy mem_alloc_ex().","Codecov Report

Merging #653 into master will not change coverage.
The diff coverage is 100%.


@@           Coverage Diff           @@
##           master     #653   +/-   ##
=======================================
  Coverage   69.19%   69.19%           
=======================================
  Files         208      208           
  Lines       13369    13369           
=======================================
  Hits         9251     9251           
  Misses       4118     4118



Impacted Files
Coverage Δ





core/module.h
87.95% <100%> (+0.22%)
⬆️


core/packet.h
83.54% <100%> (-0.41%)
⬇️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/packet_avx.h
95.45% <0%> (+1.51%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9e58a53...6a23306. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,653,2017-09-28T03:41:28Z,2017-09-28T05:06:35Z,2017-09-28T06:16:48Z,MERGED,True,10,6,2,https://github.com/shinae-woo,Make module aligned to 64B,1,[],https://github.com/NetSys/bess/pull/653,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/653#issuecomment-332728808,"plus, fix a bug operator new() in Packet class
alinged_alloc() is available from C++17, so I use legacy mem_alloc_ex().",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,654,2017-09-28T17:00:18Z,2017-09-29T18:59:21Z,2017-10-23T21:28:29Z,MERGED,True,34,16,5,https://github.com/ddiproietto,Fill leaf info in `TrafficClass` protobuf From `ListTcs` gRPC,3,[],https://github.com/NetSys/bess/pull/654,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/654,"It makes sense to fill this info, it helps correlating the leaf with a module.
Reported by @nlsun","It makes sense to fill this info, it helps correlating the leaf with a module.
Reported by @nlsun",True,{}
NetSys/bess,https://github.com/NetSys/bess,654,2017-09-28T17:00:18Z,2017-09-29T18:59:21Z,2017-10-23T21:28:29Z,MERGED,True,34,16,5,https://github.com/ddiproietto,Fill leaf info in `TrafficClass` protobuf From `ListTcs` gRPC,3,[],https://github.com/NetSys/bess/pull/654,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/654#issuecomment-332911290,"It makes sense to fill this info, it helps correlating the leaf with a module.
Reported by @nlsun","Codecov Report

Merging #654 into master will decrease coverage by 0.06%.
The diff coverage is 50%.


@@            Coverage Diff             @@
##           master     #654      +/-   ##
==========================================
- Coverage   69.09%   69.02%   -0.07%     
==========================================
  Files         209      209              
  Lines       13393    13406      +13     
==========================================
  Hits         9254     9254              
- Misses       4139     4152      +13



Impacted Files
Coverage Δ





core/traffic_class.h
88.51% <100%> (ø)
⬆️


core/module.cc
87.79% <100%> (ø)
⬆️


core/scheduler.h
66.66% <50%> (ø)
⬆️


core/module.h
86.98% <81.81%> (-0.97%)
⬇️


core/bessctl.cc
47.71% <9.09%> (-0.54%)
⬇️


pybess/bess.py
42.58% <0%> (-0.24%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 64fa3c0...ed7826f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,654,2017-09-28T17:00:18Z,2017-09-29T18:59:21Z,2017-10-23T21:28:29Z,MERGED,True,34,16,5,https://github.com/ddiproietto,Fill leaf info in `TrafficClass` protobuf From `ListTcs` gRPC,3,[],https://github.com/NetSys/bess/pull/654,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/654#issuecomment-333210637,"It makes sense to fill this info, it helps correlating the leaf with a module.
Reported by @nlsun",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,655,2017-09-28T19:09:13Z,2017-10-03T00:22:14Z,2017-10-03T00:30:18Z,MERGED,True,17,16,1,https://github.com/shinae-woo,"Prevent zombie processes of tcpdump, tshark",3,[],https://github.com/NetSys/bess/pull/655,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/655,"tcpdump / tshark becomes zombie processes when bess daemon responses with error codes
handling bess error codes for processing cleanups","tcpdump / tshark becomes zombie processes when bess daemon responses with error codes
handling bess error codes for processing cleanups",True,{}
NetSys/bess,https://github.com/NetSys/bess,655,2017-09-28T19:09:13Z,2017-10-03T00:22:14Z,2017-10-03T00:30:18Z,MERGED,True,17,16,1,https://github.com/shinae-woo,"Prevent zombie processes of tcpdump, tshark",3,[],https://github.com/NetSys/bess/pull/655,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/655#issuecomment-332940986,"tcpdump / tshark becomes zombie processes when bess daemon responses with error codes
handling bess error codes for processing cleanups","I think we could get the close/unlink/system sequence into one place, fairly cleanly ... move the first ""try/finally"" pair inside the second one, so that the second ""finally"" always runs, and use a variable to know whether to call hook_fn(False, module_name, direction, gate), maybe.  (I haven't looked closely at the change yet)",True,{}
NetSys/bess,https://github.com/NetSys/bess,655,2017-09-28T19:09:13Z,2017-10-03T00:22:14Z,2017-10-03T00:30:18Z,MERGED,True,17,16,1,https://github.com/shinae-woo,"Prevent zombie processes of tcpdump, tshark",3,[],https://github.com/NetSys/bess/pull/655,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/655#issuecomment-332944578,"tcpdump / tshark becomes zombie processes when bess daemon responses with error codes
handling bess error codes for processing cleanups","Codecov Report

Merging #655 into master will decrease coverage by 0.06%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #655      +/-   ##
==========================================
- Coverage   69.09%   69.02%   -0.07%     
==========================================
  Files         209      209              
  Lines       13393    13406      +13     
==========================================
  Hits         9254     9254              
- Misses       4139     4152      +13



Impacted Files
Coverage Δ





core/modules/source.cc
73.68% <0%> (-2.64%)
⬇️


core/module.h
86.98% <0%> (-0.97%)
⬇️


core/bessctl.cc
47.71% <0%> (-0.54%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/drivers/unix_socket.cc
80.91% <0%> (+0.76%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 64fa3c0...65c26db. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,655,2017-09-28T19:09:13Z,2017-10-03T00:22:14Z,2017-10-03T00:30:18Z,MERGED,True,17,16,1,https://github.com/shinae-woo,"Prevent zombie processes of tcpdump, tshark",3,[],https://github.com/NetSys/bess/pull/655,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/655#issuecomment-332952494,"tcpdump / tshark becomes zombie processes when bess daemon responses with error codes
handling bess error codes for processing cleanups","@chris3torek @ddiproietto Yeah, I have thought about putting them in one place and I agree with the pros part of it! Meanwhile, having the same behavior (i.e., raise cli.bess.Exception back to the caller to make the error handling consistent with other cli methods) was not straightforward to me and the control flow becomes complex. I am not a python expert. Any help?",True,{}
NetSys/bess,https://github.com/NetSys/bess,655,2017-09-28T19:09:13Z,2017-10-03T00:22:14Z,2017-10-03T00:30:18Z,MERGED,True,17,16,1,https://github.com/shinae-woo,"Prevent zombie processes of tcpdump, tshark",3,[],https://github.com/NetSys/bess/pull/655,https://github.com/chris3torek,5,https://github.com/NetSys/bess/pull/655#issuecomment-332988795,"tcpdump / tshark becomes zombie processes when bess daemon responses with error codes
handling bess error codes for processing cleanups","I have not tested this at all but I pushed an attempt to unify all the cleanup handling under one code path so that it's at least readable (if a bit verbose), to my fork here.  The strategy is to use a bunch of tiny little cleanup functions, and make a list of them to call in a finally clause.  Then we can just write mostly-normal Python code and know that, no matter what else happens, every cleanup will happen in the order they occur in the list.  Each one uses a variable to decide whether to do anything and what to do.
I made use of the fact that cleanup_resume happens towards the end to do lazy pause/resume around the hooks, too.",True,{'THUMBS_UP': ['https://github.com/shinae-woo']}
NetSys/bess,https://github.com/NetSys/bess,655,2017-09-28T19:09:13Z,2017-10-03T00:22:14Z,2017-10-03T00:30:18Z,MERGED,True,17,16,1,https://github.com/shinae-woo,"Prevent zombie processes of tcpdump, tshark",3,[],https://github.com/NetSys/bess/pull/655,https://github.com/shinae-woo,6,https://github.com/NetSys/bess/pull/655#issuecomment-333160656,"tcpdump / tshark becomes zombie processes when bess daemon responses with error codes
handling bess error codes for processing cleanups","Thanks, @chris3torek ! @sangjinhan also pointed out about #647, we don't need to pause/resume as well.
I will push another commit!",True,{}
NetSys/bess,https://github.com/NetSys/bess,655,2017-09-28T19:09:13Z,2017-10-03T00:22:14Z,2017-10-03T00:30:18Z,MERGED,True,17,16,1,https://github.com/shinae-woo,"Prevent zombie processes of tcpdump, tshark",3,[],https://github.com/NetSys/bess/pull/655,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/655#issuecomment-333702506,"tcpdump / tshark becomes zombie processes when bess daemon responses with error codes
handling bess error codes for processing cleanups","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,657,2017-10-02T20:10:49Z,2017-10-03T00:29:38Z,2017-10-03T00:30:18Z,MERGED,True,15,5,1,https://github.com/changlan,Fix kmod builds for 4.11+ kernel versions,1,[],https://github.com/NetSys/bess/pull/657,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/657,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,657,2017-10-02T20:10:49Z,2017-10-03T00:29:38Z,2017-10-03T00:30:18Z,MERGED,True,15,5,1,https://github.com/changlan,Fix kmod builds for 4.11+ kernel versions,1,[],https://github.com/NetSys/bess/pull/657,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/657#issuecomment-333660534,,"Codecov Report

Merging #657 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #657      +/-   ##
==========================================
+ Coverage   69.03%   69.03%   +<.01%     
==========================================
  Files         209      209              
  Lines       13405    13406       +1     
==========================================
+ Hits         9254     9255       +1     
  Misses       4151     4151



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


pybess/bess.py
42.82% <0%> (+0.23%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e11f789...f6272d0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,657,2017-10-02T20:10:49Z,2017-10-03T00:29:38Z,2017-10-03T00:30:18Z,MERGED,True,15,5,1,https://github.com/changlan,Fix kmod builds for 4.11+ kernel versions,1,[],https://github.com/NetSys/bess/pull/657,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/657#issuecomment-333703692,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,658,2017-10-03T00:20:41Z,2017-10-05T17:25:25Z,2017-10-05T17:25:28Z,MERGED,True,13,19,2,https://github.com/sangjinhan,Fix invalid endianness handling in Split,1,[],https://github.com/NetSys/bess/pull/658,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/658,Bug reported by @nemethf (#656),Bug reported by @nemethf (#656),True,{}
NetSys/bess,https://github.com/NetSys/bess,658,2017-10-03T00:20:41Z,2017-10-05T17:25:25Z,2017-10-05T17:25:28Z,MERGED,True,13,19,2,https://github.com/sangjinhan,Fix invalid endianness handling in Split,1,[],https://github.com/NetSys/bess/pull/658,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/658#issuecomment-333707813,Bug reported by @nemethf (#656),"Codecov Report

Merging #658 into master will increase coverage by 0.01%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #658      +/-   ##
==========================================
+ Coverage   69.03%   69.04%   +0.01%     
==========================================
  Files         209      209              
  Lines       13405    13404       -1     
==========================================
+ Hits         9254     9255       +1     
+ Misses       4151     4149       -2



Impacted Files
Coverage Δ





core/modules/split.h
0% <ø> (ø)
⬆️


core/modules/split.cc
2.85% <0%> (+0.15%)
⬆️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


pybess/bess.py
42.82% <0%> (+0.23%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e11f789...04906a2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,660,2017-10-03T19:02:29Z,2017-10-03T19:04:38Z,2018-06-28T22:07:55Z,CLOSED,False,1,0,1,https://github.com/barath,Adds clang 4.0 to packages.,1,[],https://github.com/NetSys/bess/pull/660,https://github.com/barath,1,https://github.com/NetSys/bess/pull/660,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,660,2017-10-03T19:02:29Z,2017-10-03T19:04:38Z,2018-06-28T22:07:55Z,CLOSED,False,1,0,1,https://github.com/barath,Adds clang 4.0 to packages.,1,[],https://github.com/NetSys/bess/pull/660,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/660#issuecomment-333945916,,I am preparing a PR that adds both 4.0 and 5.0. Please hold on...,True,{}
NetSys/bess,https://github.com/NetSys/bess,660,2017-10-03T19:02:29Z,2017-10-03T19:04:38Z,2018-06-28T22:07:55Z,CLOSED,False,1,0,1,https://github.com/barath,Adds clang 4.0 to packages.,1,[],https://github.com/NetSys/bess/pull/660,https://github.com/barath,3,https://github.com/NetSys/bess/pull/660#issuecomment-333946114,,"Ah, great.
…
On Tue, Oct 3, 2017 at 12:04 PM, Sangjin Han ***@***.***> wrote:
 I am preparing a PR that adds both 4.0 and 5.0. Please hold on...

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#660 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7eqFsuV48Hfjy737keqd3KaRQ5X81ks5sooVHgaJpZM4PsnM3>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,660,2017-10-03T19:02:29Z,2017-10-03T19:04:38Z,2018-06-28T22:07:55Z,CLOSED,False,1,0,1,https://github.com/barath,Adds clang 4.0 to packages.,1,[],https://github.com/NetSys/bess/pull/660,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/660#issuecomment-333957643,,"Codecov Report

Merging #660 into master will decrease coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #660      +/-   ##
==========================================
- Coverage   69.03%   69.03%   -0.01%     
==========================================
  Files         209      209              
  Lines       13406    13405       -1     
==========================================
- Hits         9255     9254       -1     
  Misses       4151     4151



Impacted Files
Coverage Δ





core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3d974f2...cfad656. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,661,2017-10-03T23:29:34Z,2017-10-19T21:26:10Z,2017-11-01T17:54:32Z,MERGED,True,605,42,26,https://github.com/melvinw,add resume hooks,5,[],https://github.com/NetSys/bess/pull/661,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/661,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,True,{}
NetSys/bess,https://github.com/NetSys/bess,661,2017-10-03T23:29:34Z,2017-10-19T21:26:10Z,2017-11-01T17:54:32Z,MERGED,True,605,42,26,https://github.com/melvinw,add resume hooks,5,[],https://github.com/NetSys/bess/pull/661,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/661#issuecomment-334012873,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,"Not entirely sure if the interface I came up with for this is the cleanest-- definitely willing to rework it if anyone has an opinion on the matter. The ResumeHookUser stuff is there mostly to avoid having to scan the entire map of modules on resume, as it can grow to be quite large.",True,{}
NetSys/bess,https://github.com/NetSys/bess,661,2017-10-03T23:29:34Z,2017-10-19T21:26:10Z,2017-11-01T17:54:32Z,MERGED,True,605,42,26,https://github.com/melvinw,add resume hooks,5,[],https://github.com/NetSys/bess/pull/661,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/661#issuecomment-334872195,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,"Codecov Report

Merging #661 into master will decrease coverage by <.01%.
The diff coverage is 63.23%.


@@            Coverage Diff             @@
##           master     #661      +/-   ##
==========================================
- Coverage   69.53%   69.53%   -0.01%     
==========================================
  Files         216      218       +2     
  Lines       13781    13876      +95     
==========================================
+ Hits         9582     9648      +66     
- Misses       4199     4228      +29



Impacted Files
Coverage Δ





core/worker.h
95.65% <ø> (ø)
⬆️


core/gate_hooks/pcapng.cc
2.1% <ø> (ø)



core/gate_test.cc
100% <ø> (ø)
⬆️


core/gate_hooks/tcpdump.cc
17.94% <ø> (ø)



core/module.cc
87.55% <ø> (ø)
⬆️


core/gate_hooks/track.cc
66.66% <ø> (ø)



core/gate_hooks/track.h
100% <ø> (ø)



core/gate.cc
93.33% <100%> (+0.47%)
⬆️


core/module.h
89.28% <100%> (+0.15%)
⬆️


core/resume_hooks/metadata.h
96.42% <100%> (ø)



... and 18 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3a70055...949b186. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,661,2017-10-03T23:29:34Z,2017-10-19T21:26:10Z,2017-11-01T17:54:32Z,MERGED,True,605,42,26,https://github.com/melvinw,add resume hooks,5,[],https://github.com/NetSys/bess/pull/661,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/661#issuecomment-334888759,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,Marking this not-ready while I refactor things,True,{}
NetSys/bess,https://github.com/NetSys/bess,661,2017-10-03T23:29:34Z,2017-10-19T21:26:10Z,2017-11-01T17:54:32Z,MERGED,True,605,42,26,https://github.com/melvinw,add resume hooks,5,[],https://github.com/NetSys/bess/pull/661,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/661#issuecomment-334889689,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,Did some offline discussion for higher bandwidth. One reminder for later: resume hooks should be called also when pause/resume is done implicitly (by WorkerPauser),True,{}
NetSys/bess,https://github.com/NetSys/bess,661,2017-10-03T23:29:34Z,2017-10-19T21:26:10Z,2017-11-01T17:54:32Z,MERGED,True,605,42,26,https://github.com/melvinw,add resume hooks,5,[],https://github.com/NetSys/bess/pull/661,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/661#issuecomment-335041455,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,"Rebased and updated to reflect our conversation, @sangjinhan . I also added a possible implementation of a thread-safe PortOut as an example of how to implement pre-resume hooks for modules.",True,{}
NetSys/bess,https://github.com/NetSys/bess,661,2017-10-03T23:29:34Z,2017-10-19T21:26:10Z,2017-11-01T17:54:32Z,MERGED,True,605,42,26,https://github.com/melvinw,add resume hooks,5,[],https://github.com/NetSys/bess/pull/661,https://github.com/melvinw,7,https://github.com/NetSys/bess/pull/661#issuecomment-335653445,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,"Comments addressed. Not sure if this weirdness is okay, though",True,{}
NetSys/bess,https://github.com/NetSys/bess,661,2017-10-03T23:29:34Z,2017-10-19T21:26:10Z,2017-11-01T17:54:32Z,MERGED,True,605,42,26,https://github.com/melvinw,add resume hooks,5,[],https://github.com/NetSys/bess/pull/661,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/661#issuecomment-338028716,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,(rebased),True,{}
NetSys/bess,https://github.com/NetSys/bess,661,2017-10-03T23:29:34Z,2017-10-19T21:26:10Z,2017-11-01T17:54:32Z,MERGED,True,605,42,26,https://github.com/melvinw,add resume hooks,5,[],https://github.com/NetSys/bess/pull/661,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/661#issuecomment-338042950,It would be nice if module writers had a way to perform tasks at resume-time without having to modify the ResumeAll() and ResumeWorker() RPCs. This set of commits introduces ResumeHooks to provide that functionality.,"Merged, thanks! Sorry for the delay.",True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/662,traffic class names with prefix '!',traffic class names with prefix '!',True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/662#issuecomment-334029815,traffic class names with prefix '!',"Codecov Report

Merging #662 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #662      +/-   ##
==========================================
+ Coverage   69.03%   69.04%   +<.01%     
==========================================
  Files         209      209              
  Lines       13406    13403       -3     
==========================================
- Hits         9255     9254       -1     
+ Misses       4151     4149       -2



Impacted Files
Coverage Δ





core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/modules/split.cc
2.85% <0%> (+0.15%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3d974f2...b876bcb. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/662#issuecomment-334277755,traffic class names with prefix '!',"Thanks for the fix!
I've realized that we also need to handle : in the later characters, as the leaf tasks include that in their name.
Do you think we should enhance the exception message to include ! (and eventually :) in the regex displayed to the user?",True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/662#issuecomment-334282055,traffic class names with prefix '!',"Is this exclusive to traffic class names?  If so, should we separate them out into their own tcname+ token type?",True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/shinae-woo,5,https://github.com/NetSys/bess/pull/662#issuecomment-334293763,traffic class names with prefix '!',"@ddiproietto Well, I don't know.  '!' and ':' is not intended for being used by users.
bess daemon uses the character to prevent conflict between user-provided names.",True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/shinae-woo,6,https://github.com/NetSys/bess/pull/662#issuecomment-334297080,traffic class names with prefix '!',"@chris3torek Yes, only for traffic class name. As is, it is only for monitoring, not for creating a new name.",True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/ddiproietto,7,https://github.com/NetSys/bess/pull/662#issuecomment-334298167,traffic class names with prefix '!',@shinae-woo Ok,True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/chris3torek,8,https://github.com/NetSys/bess/pull/662#issuecomment-334310612,traffic class names with prefix '!',"OK, so, we could add a tcname+ and do:
elif var_type in ('name+', 'tcname+'):
    regexp = 'r'^[_a-zA-Z][\w]*$' if var_type == 'name+' else r'^!?[_a-zA-Z][\w:]*$'
    val = sorted(list(set(head.split())))  # collect unique items
    ... same as before except using ""regexp"" instead of a string literal ...

(or similar but change the string passed to cli.BindError if you want to show that ! and : are allowed).",True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/chris3torek,9,https://github.com/NetSys/bess/pull/662#issuecomment-334311092,traffic class names with prefix '!',"(I'll add that I don't feel strongly about this. I think you can simplify the optional ! using !? rather than (!)?, you'd only need the parens here if you wanted to retrieve it as a group later.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/shinae-woo,10,https://github.com/NetSys/bess/pull/662#issuecomment-334653566,traffic class names with prefix '!',"Added traffic_class_name as @chris3torek suggested. This PR would be a just quick fix; a better solution would be refactoring the way of creating traffic class name by daemon to prevent conflict without '!'. One simple way might be, incrementally increasing the postfix indexes (:0, :1, :2) as of now, and check for duplication.",True,{}
NetSys/bess,https://github.com/NetSys/bess,662,2017-10-04T01:01:30Z,2017-10-08T21:30:21Z,2017-10-08T21:31:11Z,MERGED,True,5,4,1,https://github.com/shinae-woo,Support bess daemon generated traffic class name,2,[],https://github.com/NetSys/bess/pull/662,https://github.com/sangjinhan,11,https://github.com/NetSys/bess/pull/662#issuecomment-335040080,traffic class names with prefix '!',"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,663,2017-10-04T03:18:13Z,2017-10-12T01:16:00Z,2017-10-12T01:36:19Z,MERGED,True,1399,959,28,https://github.com/shinae-woo,New module testing framework,6,[],https://github.com/NetSys/bess/pull/663,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/663,"Module testing framework including improvement suggestions in #625.
The major changes are

Adopting python unittest module
Checking module scheduling completion by checking traffic class statistics (No more sleep and blocking system call, shorter test completion time)

I did not heavily fix each module test, but more focusing on porting existing tests into the new framework. It would be great if the tests are gradually improved as modules are updated.
Reporting two issues


To get the benefit of syntactic sugar, the tests are still called by bessctl. Each module test is called as exec(), we can not directly get the return value from unittest.  In the case of test failure, we need to forcibly exit the tests by returning a non-zero value.  This can be further improved by moving sugar semantics (+ more functionality) from bessctl to 'pybess' so that native unittest.py can be directly used. Separate PR required.


All tests in the same file share the same execution environments (by exec()). This may become problematic when we use sugared statements which automatically add global variables. When we use src::Source() multiple times for different test functions in a single file,  the second src::Source() call will fail due to conflict module names, since src variable is global, not local.","Module testing framework including improvement suggestions in #625.
The major changes are

Adopting python unittest module
Checking module scheduling completion by checking traffic class statistics (No more sleep and blocking system call, shorter test completion time)

I did not heavily fix each module test, but more focusing on porting existing tests into the new framework. It would be great if the tests are gradually improved as modules are updated.
Reporting two issues


To get the benefit of syntactic sugar, the tests are still called by bessctl. Each module test is called as exec(), we can not directly get the return value from unittest.  In the case of test failure, we need to forcibly exit the tests by returning a non-zero value.  This can be further improved by moving sugar semantics (+ more functionality) from bessctl to 'pybess' so that native unittest.py can be directly used. Separate PR required.


All tests in the same file share the same execution environments (by exec()). This may become problematic when we use sugared statements which automatically add global variables. When we use src::Source() multiple times for different test functions in a single file,  the second src::Source() call will fail due to conflict module names, since src variable is global, not local.",True,{}
NetSys/bess,https://github.com/NetSys/bess,663,2017-10-04T03:18:13Z,2017-10-12T01:16:00Z,2017-10-12T01:36:19Z,MERGED,True,1399,959,28,https://github.com/shinae-woo,New module testing framework,6,[],https://github.com/NetSys/bess/pull/663,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/663#issuecomment-334039417,"Module testing framework including improvement suggestions in #625.
The major changes are

Adopting python unittest module
Checking module scheduling completion by checking traffic class statistics (No more sleep and blocking system call, shorter test completion time)

I did not heavily fix each module test, but more focusing on porting existing tests into the new framework. It would be great if the tests are gradually improved as modules are updated.
Reporting two issues


To get the benefit of syntactic sugar, the tests are still called by bessctl. Each module test is called as exec(), we can not directly get the return value from unittest.  In the case of test failure, we need to forcibly exit the tests by returning a non-zero value.  This can be further improved by moving sugar semantics (+ more functionality) from bessctl to 'pybess' so that native unittest.py can be directly used. Separate PR required.


All tests in the same file share the same execution environments (by exec()). This may become problematic when we use sugared statements which automatically add global variables. When we use src::Source() multiple times for different test functions in a single file,  the second src::Source() call will fail due to conflict module names, since src variable is global, not local.","Codecov Report

Merging #663 into master will increase coverage by 0.09%.
The diff coverage is 20.12%.


@@            Coverage Diff             @@
##           master     #663      +/-   ##
==========================================
+ Coverage   69.12%   69.22%   +0.09%     
==========================================
  Files         209      210       +1     
  Lines       13380    13563     +183     
==========================================
+ Hits         9249     9389     +140     
- Misses       4131     4174      +43



Impacted Files
Coverage Δ





bessctl/test_utils.py
20.12% <20.12%> (ø)



core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/modules/arp_responder.cc
78.57% <0%> (-4.77%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/drivers/unix_socket.cc
79.38% <0%> (-1.53%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/modules/drr.cc
82.15% <0%> (+0.46%)
⬆️


core/module.h
88.16% <0%> (+1.18%)
⬆️


... and 6 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 68691b3...a280929. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,663,2017-10-04T03:18:13Z,2017-10-12T01:16:00Z,2017-10-12T01:36:19Z,MERGED,True,1399,959,28,https://github.com/shinae-woo,New module testing framework,6,[],https://github.com/NetSys/bess/pull/663,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/663#issuecomment-335891180,"Module testing framework including improvement suggestions in #625.
The major changes are

Adopting python unittest module
Checking module scheduling completion by checking traffic class statistics (No more sleep and blocking system call, shorter test completion time)

I did not heavily fix each module test, but more focusing on porting existing tests into the new framework. It would be great if the tests are gradually improved as modules are updated.
Reporting two issues


To get the benefit of syntactic sugar, the tests are still called by bessctl. Each module test is called as exec(), we can not directly get the return value from unittest.  In the case of test failure, we need to forcibly exit the tests by returning a non-zero value.  This can be further improved by moving sugar semantics (+ more functionality) from bessctl to 'pybess' so that native unittest.py can be directly used. Separate PR required.


All tests in the same file share the same execution environments (by exec()). This may become problematic when we use sugared statements which automatically add global variables. When we use src::Source() multiple times for different test functions in a single file,  the second src::Source() call will fail due to conflict module names, since src variable is global, not local.","@sangjinhan, Of course, I will do it. I see that way is much better for maintenance.",True,{}
NetSys/bess,https://github.com/NetSys/bess,663,2017-10-04T03:18:13Z,2017-10-12T01:16:00Z,2017-10-12T01:36:19Z,MERGED,True,1399,959,28,https://github.com/shinae-woo,New module testing framework,6,[],https://github.com/NetSys/bess/pull/663,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/663#issuecomment-335896419,"Module testing framework including improvement suggestions in #625.
The major changes are

Adopting python unittest module
Checking module scheduling completion by checking traffic class statistics (No more sleep and blocking system call, shorter test completion time)

I did not heavily fix each module test, but more focusing on porting existing tests into the new framework. It would be great if the tests are gradually improved as modules are updated.
Reporting two issues


To get the benefit of syntactic sugar, the tests are still called by bessctl. Each module test is called as exec(), we can not directly get the return value from unittest.  In the case of test failure, we need to forcibly exit the tests by returning a non-zero value.  This can be further improved by moving sugar semantics (+ more functionality) from bessctl to 'pybess' so that native unittest.py can be directly used. Separate PR required.


All tests in the same file share the same execution environments (by exec()). This may become problematic when we use sugared statements which automatically add global variables. When we use src::Source() multiple times for different test functions in a single file,  the second src::Source() call will fail due to conflict module names, since src variable is global, not local.","Reminder for myself, in an offline discussion, @chris3torek pointed out that the current run_module() is not fully equivalent with existing  CRASH_TEST_INPUTS  as now we use random packets, but previously they use predefined (I would say hard-coded) set of packets. Using random packets are more appropriate for the most case for checking crash rather than correct functionality, but I also quite agree that it would be better if there is a way that users can specify a set of packet template to run. I will extend run_module() interface accordingly.",True,{}
NetSys/bess,https://github.com/NetSys/bess,663,2017-10-04T03:18:13Z,2017-10-12T01:16:00Z,2017-10-12T01:36:19Z,MERGED,True,1399,959,28,https://github.com/shinae-woo,New module testing framework,6,[],https://github.com/NetSys/bess/pull/663,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/663#issuecomment-335992258,"Module testing framework including improvement suggestions in #625.
The major changes are

Adopting python unittest module
Checking module scheduling completion by checking traffic class statistics (No more sleep and blocking system call, shorter test completion time)

I did not heavily fix each module test, but more focusing on porting existing tests into the new framework. It would be great if the tests are gradually improved as modules are updated.
Reporting two issues


To get the benefit of syntactic sugar, the tests are still called by bessctl. Each module test is called as exec(), we can not directly get the return value from unittest.  In the case of test failure, we need to forcibly exit the tests by returning a non-zero value.  This can be further improved by moving sugar semantics (+ more functionality) from bessctl to 'pybess' so that native unittest.py can be directly used. Separate PR required.


All tests in the same file share the same execution environments (by exec()). This may become problematic when we use sugared statements which automatically add global variables. When we use src::Source() multiple times for different test functions in a single file,  the second src::Source() call will fail due to conflict module names, since src variable is global, not local.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,664,2017-10-04T23:00:47Z,2017-10-07T04:14:35Z,2017-10-08T21:30:59Z,MERGED,True,19,3,2,https://github.com/sangjinhan,Add clang 4 and 5 to the build container,2,[],https://github.com/NetSys/bess/pull/664,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/664,"Unlike gcc, the clang versions installed in the build container are quite old. This PR adds clang 4.0 and 5.0 to the compiler collection.
A few notes:

clang-4.0 and higher are not directly provided by Ubuntu, so the apt.llvm.org repo was added.
It seems that the apt server returns 404 for clang 5.0 binary for i386 arch at the moment. Because of this issue the 32bit build container does not install clang5 for now.
The 3rd-party ioft/i386-ubuntu:trusty base image does not accept the root certificate (w/ 1024bit key) for the *.googlecode.com any longer, which is necessary to download submodules of gRPC. I am not sure why we were using that image in the first place... but switched to i386/ubuntu, which is managed by Docker.","Unlike gcc, the clang versions installed in the build container are quite old. This PR adds clang 4.0 and 5.0 to the compiler collection.
A few notes:

clang-4.0 and higher are not directly provided by Ubuntu, so the apt.llvm.org repo was added.
It seems that the apt server returns 404 for clang 5.0 binary for i386 arch at the moment. Because of this issue the 32bit build container does not install clang5 for now.
The 3rd-party ioft/i386-ubuntu:trusty base image does not accept the root certificate (w/ 1024bit key) for the *.googlecode.com any longer, which is necessary to download submodules of gRPC. I am not sure why we were using that image in the first place... but switched to i386/ubuntu, which is managed by Docker.",True,{}
NetSys/bess,https://github.com/NetSys/bess,664,2017-10-04T23:00:47Z,2017-10-07T04:14:35Z,2017-10-08T21:30:59Z,MERGED,True,19,3,2,https://github.com/sangjinhan,Add clang 4 and 5 to the build container,2,[],https://github.com/NetSys/bess/pull/664,https://github.com/shinae-woo,2,https://github.com/NetSys/bess/pull/664#issuecomment-334909102,"Unlike gcc, the clang versions installed in the build container are quite old. This PR adds clang 4.0 and 5.0 to the compiler collection.
A few notes:

clang-4.0 and higher are not directly provided by Ubuntu, so the apt.llvm.org repo was added.
It seems that the apt server returns 404 for clang 5.0 binary for i386 arch at the moment. Because of this issue the 32bit build container does not install clang5 for now.
The 3rd-party ioft/i386-ubuntu:trusty base image does not accept the root certificate (w/ 1024bit key) for the *.googlecode.com any longer, which is necessary to download submodules of gRPC. I am not sure why we were using that image in the first place... but switched to i386/ubuntu, which is managed by Docker.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,665,2017-10-06T00:23:54Z,2017-10-19T21:31:55Z,2017-10-21T06:53:24Z,MERGED,True,182,19,7,https://github.com/chris3torek,state saving and restoring prototypes,4,[],https://github.com/NetSys/bess/pull/665,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/665,"Some modules (like ExactMatch) make it difficult to load up a BESS instance with a full state all at once, or to inspect how they were initially constructed.  To help out, we add GetArg and GetMut (get generally-immutable-state from the argument used to construct a module, and get the entire generally-mutable state that can be set piecewise in some module).  A similar SetMut command sets the mutable state all at once.
Wiki documentation is yet to come based on whether this gets taken in this form.  (Left undone here is the notion of saving, or not, any dynamic state, such as internal NAT tables.  The overall idea is that if for whatever reason one must shoot down an existing BESS instance—or this has already happened because one crashed—and use saved state to create a new one, it would be much easier.)  Not all modules need to support these commands; the plan is to add them when they're convenient.
The current test for exact-match mutable state is a bit sloppy and will be full of redundancies with similar tests for other modules, once the test is more comprehensive, but I think it's better right now to wait for the new test framework.","Some modules (like ExactMatch) make it difficult to load up a BESS instance with a full state all at once, or to inspect how they were initially constructed.  To help out, we add GetArg and GetMut (get generally-immutable-state from the argument used to construct a module, and get the entire generally-mutable state that can be set piecewise in some module).  A similar SetMut command sets the mutable state all at once.
Wiki documentation is yet to come based on whether this gets taken in this form.  (Left undone here is the notion of saving, or not, any dynamic state, such as internal NAT tables.  The overall idea is that if for whatever reason one must shoot down an existing BESS instance—or this has already happened because one crashed—and use saved state to create a new one, it would be much easier.)  Not all modules need to support these commands; the plan is to add them when they're convenient.
The current test for exact-match mutable state is a bit sloppy and will be full of redundancies with similar tests for other modules, once the test is more comprehensive, but I think it's better right now to wait for the new test framework.",True,{}
NetSys/bess,https://github.com/NetSys/bess,665,2017-10-06T00:23:54Z,2017-10-19T21:31:55Z,2017-10-21T06:53:24Z,MERGED,True,182,19,7,https://github.com/chris3torek,state saving and restoring prototypes,4,[],https://github.com/NetSys/bess/pull/665,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/665#issuecomment-334805538,"Some modules (like ExactMatch) make it difficult to load up a BESS instance with a full state all at once, or to inspect how they were initially constructed.  To help out, we add GetArg and GetMut (get generally-immutable-state from the argument used to construct a module, and get the entire generally-mutable state that can be set piecewise in some module).  A similar SetMut command sets the mutable state all at once.
Wiki documentation is yet to come based on whether this gets taken in this form.  (Left undone here is the notion of saving, or not, any dynamic state, such as internal NAT tables.  The overall idea is that if for whatever reason one must shoot down an existing BESS instance—or this has already happened because one crashed—and use saved state to create a new one, it would be much easier.)  Not all modules need to support these commands; the plan is to add them when they're convenient.
The current test for exact-match mutable state is a bit sloppy and will be full of redundancies with similar tests for other modules, once the test is more comprehensive, but I think it's better right now to wait for the new test framework.","(copying offline request to comment) ""... e.g. GetMutable instead of GetMut""",True,{}
NetSys/bess,https://github.com/NetSys/bess,665,2017-10-06T00:23:54Z,2017-10-19T21:31:55Z,2017-10-21T06:53:24Z,MERGED,True,182,19,7,https://github.com/chris3torek,state saving and restoring prototypes,4,[],https://github.com/NetSys/bess/pull/665,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/665#issuecomment-335633728,"Some modules (like ExactMatch) make it difficult to load up a BESS instance with a full state all at once, or to inspect how they were initially constructed.  To help out, we add GetArg and GetMut (get generally-immutable-state from the argument used to construct a module, and get the entire generally-mutable state that can be set piecewise in some module).  A similar SetMut command sets the mutable state all at once.
Wiki documentation is yet to come based on whether this gets taken in this form.  (Left undone here is the notion of saving, or not, any dynamic state, such as internal NAT tables.  The overall idea is that if for whatever reason one must shoot down an existing BESS instance—or this has already happened because one crashed—and use saved state to create a new one, it would be much easier.)  Not all modules need to support these commands; the plan is to add them when they're convenient.
The current test for exact-match mutable state is a bit sloppy and will be full of redundancies with similar tests for other modules, once the test is more comprehensive, but I think it's better right now to wait for the new test framework.","Codecov Report

Merging #665 into master will decrease coverage by 0.02%.
The diff coverage is 77.41%.


@@            Coverage Diff             @@
##           master     #665      +/-   ##
==========================================
- Coverage   69.65%   69.62%   -0.03%     
==========================================
  Files         216      216              
  Lines       13740    13819      +79     
==========================================
+ Hits         9570     9621      +51     
- Misses       4170     4198      +28



Impacted Files
Coverage Δ





core/modules/exact_match.h
100% <ø> (ø)
⬆️


pybess/bess.py
42.95% <100%> (+0.13%)
⬆️


core/utils/exact_match_table.h
88.37% <100%> (+0.18%)
⬆️


core/modules/exact_match.cc
81.56% <75.86%> (-3.55%)
⬇️


core/utils/copy.h
63.72% <0%> (-11.28%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/traffic_class.cc
91.46% <0%> (+0.34%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update dee2028...44c7334. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,665,2017-10-06T00:23:54Z,2017-10-19T21:31:55Z,2017-10-21T06:53:24Z,MERGED,True,182,19,7,https://github.com/chris3torek,state saving and restoring prototypes,4,[],https://github.com/NetSys/bess/pull/665,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/665#issuecomment-336598997,"Some modules (like ExactMatch) make it difficult to load up a BESS instance with a full state all at once, or to inspect how they were initially constructed.  To help out, we add GetArg and GetMut (get generally-immutable-state from the argument used to construct a module, and get the entire generally-mutable state that can be set piecewise in some module).  A similar SetMut command sets the mutable state all at once.
Wiki documentation is yet to come based on whether this gets taken in this form.  (Left undone here is the notion of saving, or not, any dynamic state, such as internal NAT tables.  The overall idea is that if for whatever reason one must shoot down an existing BESS instance—or this has already happened because one crashed—and use saved state to create a new one, it would be much easier.)  Not all modules need to support these commands; the plan is to add them when they're convenient.
The current test for exact-match mutable state is a bit sloppy and will be full of redundancies with similar tests for other modules, once the test is more comprehensive, but I think it's better right now to wait for the new test framework.",Oopsie. Could you please rebase the PR? Sorry I shouldn't have been late this much...,True,{}
NetSys/bess,https://github.com/NetSys/bess,665,2017-10-06T00:23:54Z,2017-10-19T21:31:55Z,2017-10-21T06:53:24Z,MERGED,True,182,19,7,https://github.com/chris3torek,state saving and restoring prototypes,4,[],https://github.com/NetSys/bess/pull/665,https://github.com/chris3torek,5,https://github.com/NetSys/bess/pull/665#issuecomment-337777318,"Some modules (like ExactMatch) make it difficult to load up a BESS instance with a full state all at once, or to inspect how they were initially constructed.  To help out, we add GetArg and GetMut (get generally-immutable-state from the argument used to construct a module, and get the entire generally-mutable state that can be set piecewise in some module).  A similar SetMut command sets the mutable state all at once.
Wiki documentation is yet to come based on whether this gets taken in this form.  (Left undone here is the notion of saving, or not, any dynamic state, such as internal NAT tables.  The overall idea is that if for whatever reason one must shoot down an existing BESS instance—or this has already happened because one crashed—and use saved state to create a new one, it would be much easier.)  Not all modules need to support these commands; the plan is to add them when they're convenient.
The current test for exact-match mutable state is a bit sloppy and will be full of redundancies with similar tests for other modules, once the test is more comprehensive, but I think it's better right now to wait for the new test framework.","I've completely rebased this (on the new test framework, with the new exact match table header, etc).  It could use another scan, at least...",True,{}
NetSys/bess,https://github.com/NetSys/bess,665,2017-10-06T00:23:54Z,2017-10-19T21:31:55Z,2017-10-21T06:53:24Z,MERGED,True,182,19,7,https://github.com/chris3torek,state saving and restoring prototypes,4,[],https://github.com/NetSys/bess/pull/665,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/665#issuecomment-338044110,"Some modules (like ExactMatch) make it difficult to load up a BESS instance with a full state all at once, or to inspect how they were initially constructed.  To help out, we add GetArg and GetMut (get generally-immutable-state from the argument used to construct a module, and get the entire generally-mutable state that can be set piecewise in some module).  A similar SetMut command sets the mutable state all at once.
Wiki documentation is yet to come based on whether this gets taken in this form.  (Left undone here is the notion of saving, or not, any dynamic state, such as internal NAT tables.  The overall idea is that if for whatever reason one must shoot down an existing BESS instance—or this has already happened because one crashed—and use saved state to create a new one, it would be much easier.)  Not all modules need to support these commands; the plan is to add them when they're convenient.
The current test for exact-match mutable state is a bit sloppy and will be full of redundancies with similar tests for other modules, once the test is more comprehensive, but I think it's better right now to wait for the new test framework.","Merged, thanks! Sorry for the delay.",True,{}
NetSys/bess,https://github.com/NetSys/bess,666,2017-10-06T18:37:13Z,2017-10-12T21:58:47Z,2017-11-01T17:54:36Z,MERGED,True,657,230,5,https://github.com/melvinw,pull table and key making logic out of ExactMatch,2,[],https://github.com/NetSys/bess/pull/666,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/666,"The way the ExactMatch module builds its table and lookup keys seems like a good tool to have for future use in other modules, so this PR moves much of that code into a new util called ExactMatchTable and reduces the ExactMatch module to an instance of ExactMatchTable<gate_idx_t>.
Using bessctl/conf/samples/exactmatch.bess as a benchmark, the impact on performance seems negligible on my 2.1 GHz Xeon E5-2620 (0.5 Mpps slower)","The way the ExactMatch module builds its table and lookup keys seems like a good tool to have for future use in other modules, so this PR moves much of that code into a new util called ExactMatchTable and reduces the ExactMatch module to an instance of ExactMatchTable<gate_idx_t>.
Using bessctl/conf/samples/exactmatch.bess as a benchmark, the impact on performance seems negligible on my 2.1 GHz Xeon E5-2620 (0.5 Mpps slower)",True,{}
NetSys/bess,https://github.com/NetSys/bess,666,2017-10-06T18:37:13Z,2017-10-12T21:58:47Z,2017-11-01T17:54:36Z,MERGED,True,657,230,5,https://github.com/melvinw,pull table and key making logic out of ExactMatch,2,[],https://github.com/NetSys/bess/pull/666,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/666#issuecomment-334867874,"The way the ExactMatch module builds its table and lookup keys seems like a good tool to have for future use in other modules, so this PR moves much of that code into a new util called ExactMatchTable and reduces the ExactMatch module to an instance of ExactMatchTable<gate_idx_t>.
Using bessctl/conf/samples/exactmatch.bess as a benchmark, the impact on performance seems negligible on my 2.1 GHz Xeon E5-2620 (0.5 Mpps slower)",found a bug in metadata mode. marking not-ready for now,True,{}
NetSys/bess,https://github.com/NetSys/bess,666,2017-10-06T18:37:13Z,2017-10-12T21:58:47Z,2017-11-01T17:54:36Z,MERGED,True,657,230,5,https://github.com/melvinw,pull table and key making logic out of ExactMatch,2,[],https://github.com/NetSys/bess/pull/666,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/666#issuecomment-334891768,"The way the ExactMatch module builds its table and lookup keys seems like a good tool to have for future use in other modules, so this PR moves much of that code into a new util called ExactMatchTable and reduces the ExactMatch module to an instance of ExactMatchTable<gate_idx_t>.
Using bessctl/conf/samples/exactmatch.bess as a benchmark, the impact on performance seems negligible on my 2.1 GHz Xeon E5-2620 (0.5 Mpps slower)",Alrighty. Metadata mode works now,True,{}
NetSys/bess,https://github.com/NetSys/bess,666,2017-10-06T18:37:13Z,2017-10-12T21:58:47Z,2017-11-01T17:54:36Z,MERGED,True,657,230,5,https://github.com/melvinw,pull table and key making logic out of ExactMatch,2,[],https://github.com/NetSys/bess/pull/666,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/666#issuecomment-334966912,"The way the ExactMatch module builds its table and lookup keys seems like a good tool to have for future use in other modules, so this PR moves much of that code into a new util called ExactMatchTable and reduces the ExactMatch module to an instance of ExactMatchTable<gate_idx_t>.
Using bessctl/conf/samples/exactmatch.bess as a benchmark, the impact on performance seems negligible on my 2.1 GHz Xeon E5-2620 (0.5 Mpps slower)","Codecov Report

Merging #666 into master will increase coverage by 0.39%.
The diff coverage is 91.3%.


@@            Coverage Diff             @@
##           master     #666      +/-   ##
==========================================
+ Coverage   69.12%   69.51%   +0.39%     
==========================================
  Files         209      211       +2     
  Lines       13380    13540     +160     
==========================================
+ Hits         9249     9413     +164     
+ Misses       4131     4127       -4



Impacted Files
Coverage Δ





core/modules/exact_match.h
100% <100%> (+4.76%)
⬆️


core/utils/exact_match_table_test.cc
100% <100%> (ø)



core/modules/exact_match.cc
85.1% <84.44%> (+4.15%)
⬆️


core/utils/exact_match_table.h
88.18% <88.18%> (ø)



core/utils/copy.h
75% <0%> (-1.93%)
⬇️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/module.h
89.47% <0%> (+2.49%)
⬆️


core/packet.h
86.07% <0%> (+2.53%)
⬆️


... and 2 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 68691b3...207534c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,666,2017-10-06T18:37:13Z,2017-10-12T21:58:47Z,2017-11-01T17:54:36Z,MERGED,True,657,230,5,https://github.com/melvinw,pull table and key making logic out of ExactMatch,2,[],https://github.com/NetSys/bess/pull/666,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/666#issuecomment-335974264,"The way the ExactMatch module builds its table and lookup keys seems like a good tool to have for future use in other modules, so this PR moves much of that code into a new util called ExactMatchTable and reduces the ExactMatch module to an instance of ExactMatchTable<gate_idx_t>.
Using bessctl/conf/samples/exactmatch.bess as a benchmark, the impact on performance seems negligible on my 2.1 GHz Xeon E5-2620 (0.5 Mpps slower)",All fixed up and rebased,True,{}
NetSys/bess,https://github.com/NetSys/bess,666,2017-10-06T18:37:13Z,2017-10-12T21:58:47Z,2017-11-01T17:54:36Z,MERGED,True,657,230,5,https://github.com/melvinw,pull table and key making logic out of ExactMatch,2,[],https://github.com/NetSys/bess/pull/666,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/666#issuecomment-336286419,"The way the ExactMatch module builds its table and lookup keys seems like a good tool to have for future use in other modules, so this PR moves much of that code into a new util called ExactMatchTable and reduces the ExactMatch module to an instance of ExactMatchTable<gate_idx_t>.
Using bessctl/conf/samples/exactmatch.bess as a benchmark, the impact on performance seems negligible on my 2.1 GHz Xeon E5-2620 (0.5 Mpps slower)","Merged, thanks!
(the Travis error is an unrelated issue)",True,{}
NetSys/bess,https://github.com/NetSys/bess,667,2017-10-06T20:43:13Z,2017-10-07T04:13:23Z,2017-10-08T21:31:00Z,MERGED,True,21,9,2,https://github.com/sangjinhan,Avoid undefined behavior of __builtin_clz(),4,[],https://github.com/NetSys/bess/pull/667,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/667,"The code uint32_t prefix_length() const { return ((32 - __builtin_clz(mask.raw_value()))); } may fail if the value of mask is 0. In this case the behavior of __builtin_clz is undefined. While it does work as intended on newer x86 CPUs with BMI instruction set, the function on older CPUs returns some garbage value. This caused occasional failures on Travis.
Another issue in the same code is that it works only when prefix length is a multiple of 8. Bit reversing should have been done instead of byte reversing. It was fixed by using ctz in place of clz.","The code uint32_t prefix_length() const { return ((32 - __builtin_clz(mask.raw_value()))); } may fail if the value of mask is 0. In this case the behavior of __builtin_clz is undefined. While it does work as intended on newer x86 CPUs with BMI instruction set, the function on older CPUs returns some garbage value. This caused occasional failures on Travis.
Another issue in the same code is that it works only when prefix length is a multiple of 8. Bit reversing should have been done instead of byte reversing. It was fixed by using ctz in place of clz.",True,{}
NetSys/bess,https://github.com/NetSys/bess,667,2017-10-06T20:43:13Z,2017-10-07T04:13:23Z,2017-10-08T21:31:00Z,MERGED,True,21,9,2,https://github.com/sangjinhan,Avoid undefined behavior of __builtin_clz(),4,[],https://github.com/NetSys/bess/pull/667,https://github.com/apanda,2,https://github.com/NetSys/bess/pull/667#issuecomment-334877602,"The code uint32_t prefix_length() const { return ((32 - __builtin_clz(mask.raw_value()))); } may fail if the value of mask is 0. In this case the behavior of __builtin_clz is undefined. While it does work as intended on newer x86 CPUs with BMI instruction set, the function on older CPUs returns some garbage value. This caused occasional failures on Travis.
Another issue in the same code is that it works only when prefix length is a multiple of 8. Bit reversing should have been done instead of byte reversing. It was fixed by using ctz in place of clz.",LGTM,True,{}
NetSys/bess,https://github.com/NetSys/bess,667,2017-10-06T20:43:13Z,2017-10-07T04:13:23Z,2017-10-08T21:31:00Z,MERGED,True,21,9,2,https://github.com/sangjinhan,Avoid undefined behavior of __builtin_clz(),4,[],https://github.com/NetSys/bess/pull/667,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/667#issuecomment-334909050,"The code uint32_t prefix_length() const { return ((32 - __builtin_clz(mask.raw_value()))); } may fail if the value of mask is 0. In this case the behavior of __builtin_clz is undefined. While it does work as intended on newer x86 CPUs with BMI instruction set, the function on older CPUs returns some garbage value. This caused occasional failures on Travis.
Another issue in the same code is that it works only when prefix length is a multiple of 8. Bit reversing should have been done instead of byte reversing. It was fixed by using ctz in place of clz.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/669,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉","This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉",True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/669#issuecomment-335065292,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉","Codecov Report

Merging #669 into master will increase coverage by 0.42%.
The diff coverage is 54.34%.


@@            Coverage Diff             @@
##           master     #669      +/-   ##
==========================================
+ Coverage   69.21%   69.64%   +0.42%     
==========================================
  Files         210      212       +2     
  Lines       13563    13720     +157     
==========================================
+ Hits         9388     9555     +167     
+ Misses       4175     4165      -10



Impacted Files
Coverage Δ





core/modules/random_split.h
100% <100%> (ø)



core/modules/random_split.cc
52.27% <52.27%> (ø)



core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/exact_match_table_test.cc
100% <0%> (ø)



core/utils/exact_match_table.h
88.18% <0%> (ø)



core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


bessctl/test_utils.py
20.64% <0%> (+0.51%)
⬆️


core/module.cc
88.37% <0%> (+0.58%)
⬆️


core/bessctl.cc
55.62% <0%> (+0.66%)
⬆️


... and 8 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 09423a2...29d1675. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/669#issuecomment-335229783,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉","Oh, somehow I missed the link to #298. Although I'm still not sure what the motivation is 😺",True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/669#issuecomment-335237250,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉","This is not for a use case in reality, but for performance benchmarks (i.e., emulating arbitrary branch splitting). A further extension could be adding some burstiness.
Will do the cleanup part!",True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/shinae-woo,5,https://github.com/NetSys/bess/pull/669#issuecomment-335254052,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉","Now there should be no more bogus if a command fails. Thank you so much!
Sharing parameter setting code should be desirable, but now it is not straightforward since each function has different types of arguments. This is not critical but keep tickled. As I follow the rules from legacy code, the arguments are 'RandomSplitArg', 'RandomSplitCommandSetArg'. We don't need to necessarily have them differently??",True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/669#issuecomment-335930121,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉","One minor code cleanup: the old code used kRange, threshold_, and GetRange(). In the new code you may want to replace them with drop_rate_ and GetReal() for simpler (slightly more efficient) code.
Otherwise looks good to me.",True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/shinae-woo,7,https://github.com/NetSys/bess/pull/669#issuecomment-335946737,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉",@sangjinhan simplification done!,True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/shinae-woo,8,https://github.com/NetSys/bess/pull/669#issuecomment-335959348,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉","I prefer merging this PR after we merged PR for new test framework, as I expect conflict between them.",True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/shinae-woo,9,https://github.com/NetSys/bess/pull/669#issuecomment-335994575,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉",Rebased with #663,True,{}
NetSys/bess,https://github.com/NetSys/bess,669,2017-10-07T04:37:16Z,2017-10-16T17:34:12Z,2017-10-16T18:01:16Z,MERGED,True,181,88,6,https://github.com/shinae-woo,Add RandomSplit module by extending RandomDrop,4,[],https://github.com/NetSys/bess/pull/669,https://github.com/sangjinhan,10,https://github.com/NetSys/bess/pull/669#issuecomment-336962723,"This PR addresses the suggestion made in #298, as now I need for my evaluation. 😉",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,670,2017-10-08T02:59:22Z,2017-10-08T22:24:48Z,2017-10-12T22:38:02Z,MERGED,True,9,4,2,https://github.com/sangjinhan,Fix Travis build issues,3,[],https://github.com/NetSys/bess/pull/670,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/670,"It seems that Travis VMs recently are more often run on old systems (SandyBridge or older). We use DPDK binary prebuilt in the build container. Since the binary is built with RDRAND support with -march=native, all apps linked against the DPDK binary fail if Travis VM runs on an old processor. As a hot fix, now DPDK is built locally in the Travis VM.


Also, now the build more frequently fails due to the 10-min timeout. travis_wait is used to extend the timeout to 20mins.


We switched to a 32-bit Ubuntu container image maintained by Docket (#664). Within the new container arch reports x86_64, not i686, causing build errors. I replaced arch with 'gcc -dumpmachine` to work around this issue.","It seems that Travis VMs recently are more often run on old systems (SandyBridge or older). We use DPDK binary prebuilt in the build container. Since the binary is built with RDRAND support with -march=native, all apps linked against the DPDK binary fail if Travis VM runs on an old processor. As a hot fix, now DPDK is built locally in the Travis VM.


Also, now the build more frequently fails due to the 10-min timeout. travis_wait is used to extend the timeout to 20mins.


We switched to a 32-bit Ubuntu container image maintained by Docket (#664). Within the new container arch reports x86_64, not i686, causing build errors. I replaced arch with 'gcc -dumpmachine` to work around this issue.",True,{}
NetSys/bess,https://github.com/NetSys/bess,670,2017-10-08T02:59:22Z,2017-10-08T22:24:48Z,2017-10-12T22:38:02Z,MERGED,True,9,4,2,https://github.com/sangjinhan,Fix Travis build issues,3,[],https://github.com/NetSys/bess/pull/670,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/670#issuecomment-334979428,"It seems that Travis VMs recently are more often run on old systems (SandyBridge or older). We use DPDK binary prebuilt in the build container. Since the binary is built with RDRAND support with -march=native, all apps linked against the DPDK binary fail if Travis VM runs on an old processor. As a hot fix, now DPDK is built locally in the Travis VM.


Also, now the build more frequently fails due to the 10-min timeout. travis_wait is used to extend the timeout to 20mins.


We switched to a 32-bit Ubuntu container image maintained by Docket (#664). Within the new container arch reports x86_64, not i686, causing build errors. I replaced arch with 'gcc -dumpmachine` to work around this issue.","Codecov Report

❗ No coverage uploaded for pull request base (master@95e70ed). Click here to learn what that means.
The diff coverage is n/a.


@@            Coverage Diff            @@
##             master     #670   +/-   ##
=========================================
  Coverage          ?   69.13%           
=========================================
  Files             ?      209           
  Lines             ?    13381           
  Branches          ?        0           
=========================================
  Hits              ?     9251           
  Misses            ?     4130           
  Partials          ?        0

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 95e70ed...40ae6c6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,670,2017-10-08T02:59:22Z,2017-10-08T22:24:48Z,2017-10-12T22:38:02Z,MERGED,True,9,4,2,https://github.com/sangjinhan,Fix Travis build issues,3,[],https://github.com/NetSys/bess/pull/670,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/670#issuecomment-335043144,"It seems that Travis VMs recently are more often run on old systems (SandyBridge or older). We use DPDK binary prebuilt in the build container. Since the binary is built with RDRAND support with -march=native, all apps linked against the DPDK binary fail if Travis VM runs on an old processor. As a hot fix, now DPDK is built locally in the Travis VM.


Also, now the build more frequently fails due to the 10-min timeout. travis_wait is used to extend the timeout to 20mins.


We switched to a 32-bit Ubuntu container image maintained by Docket (#664). Within the new container arch reports x86_64, not i686, causing build errors. I replaced arch with 'gcc -dumpmachine` to work around this issue.",Thanks for doing this!,True,{}
NetSys/bess,https://github.com/NetSys/bess,673,2017-10-11T22:48:23Z,2017-10-16T17:32:02Z,2017-10-16T18:01:18Z,MERGED,True,664,474,12,https://github.com/shinae-woo,Refactoring Module/Task/ModuleBuilder,7,[],https://github.com/NetSys/bess/pull/673,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/673,"This PR doesn't change any functionality, but refactor the existing module.h and module.cc files as they are integrating too much functionality in a file. Once these changes are approved, then I can make change the internal scheduling logic.
Major changes are

Get global info about module_graphs out of ModuleBuilder class
Get Task/ModuleTask out of module.h","This PR doesn't change any functionality, but refactor the existing module.h and module.cc files as they are integrating too much functionality in a file. Once these changes are approved, then I can make change the internal scheduling logic.
Major changes are

Get global info about module_graphs out of ModuleBuilder class
Get Task/ModuleTask out of module.h",True,{}
NetSys/bess,https://github.com/NetSys/bess,673,2017-10-11T22:48:23Z,2017-10-16T17:32:02Z,2017-10-16T18:01:18Z,MERGED,True,664,474,12,https://github.com/shinae-woo,Refactoring Module/Task/ModuleBuilder,7,[],https://github.com/NetSys/bess/pull/673,https://github.com/barath,2,https://github.com/NetSys/bess/pull/673#issuecomment-335981639,"This PR doesn't change any functionality, but refactor the existing module.h and module.cc files as they are integrating too much functionality in a file. Once these changes are approved, then I can make change the internal scheduling logic.
Major changes are

Get global info about module_graphs out of ModuleBuilder class
Get Task/ModuleTask out of module.h",Will look.,True,{}
NetSys/bess,https://github.com/NetSys/bess,673,2017-10-11T22:48:23Z,2017-10-16T17:32:02Z,2017-10-16T18:01:18Z,MERGED,True,664,474,12,https://github.com/shinae-woo,Refactoring Module/Task/ModuleBuilder,7,[],https://github.com/NetSys/bess/pull/673,https://github.com/barath,3,https://github.com/NetSys/bess/pull/673#issuecomment-336013780,"This PR doesn't change any functionality, but refactor the existing module.h and module.cc files as they are integrating too much functionality in a file. Once these changes are approved, then I can make change the internal scheduling logic.
Major changes are

Get global info about module_graphs out of ModuleBuilder class
Get Task/ModuleTask out of module.h",LGTM.  Just a few minor things.,True,{}
NetSys/bess,https://github.com/NetSys/bess,673,2017-10-11T22:48:23Z,2017-10-16T17:32:02Z,2017-10-16T18:01:18Z,MERGED,True,664,474,12,https://github.com/shinae-woo,Refactoring Module/Task/ModuleBuilder,7,[],https://github.com/NetSys/bess/pull/673,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/673#issuecomment-336225212,"This PR doesn't change any functionality, but refactor the existing module.h and module.cc files as they are integrating too much functionality in a file. Once these changes are approved, then I can make change the internal scheduling logic.
Major changes are

Get global info about module_graphs out of ModuleBuilder class
Get Task/ModuleTask out of module.h","Thank you for the review, @barath. Mostly addressed. The ownership parts can be addressed separately so that making changes gradually.
@ddiproietto, Thank you for confirming the performance. I often found that compilers are much smarter and more efficient than myself 😢...",True,{}
NetSys/bess,https://github.com/NetSys/bess,673,2017-10-11T22:48:23Z,2017-10-16T17:32:02Z,2017-10-16T18:01:18Z,MERGED,True,664,474,12,https://github.com/shinae-woo,Refactoring Module/Task/ModuleBuilder,7,[],https://github.com/NetSys/bess/pull/673,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/673#issuecomment-336243075,"This PR doesn't change any functionality, but refactor the existing module.h and module.cc files as they are integrating too much functionality in a file. Once these changes are approved, then I can make change the internal scheduling logic.
Major changes are

Get global info about module_graphs out of ModuleBuilder class
Get Task/ModuleTask out of module.h","Codecov Report

Merging #673 into master will decrease coverage by 0.1%.
The diff coverage is 86.49%.


@@            Coverage Diff             @@
##           master     #673      +/-   ##
==========================================
- Coverage   69.28%   69.18%   -0.11%     
==========================================
  Files         210      214       +4     
  Lines       13535    13598      +63     
==========================================
+ Hits         9378     9408      +30     
- Misses       4157     4190      +33



Impacted Files
Coverage Δ





core/module.h
86.02% <ø> (-2.14%)
⬇️


core/module_test.cc
96.98% <100%> (ø)
⬆️


core/metadata_test.cc
100% <100%> (ø)
⬆️


core/task.h
100% <100%> (ø)



core/module_graph.h
100% <100%> (ø)



core/module.cc
87.38% <100%> (-0.41%)
⬇️


core/worker.cc
87.5% <25%> (ø)
⬆️


core/bessctl.cc
55.62% <57.14%> (+0.66%)
⬆️


core/metadata.cc
84.92% <75%> (ø)
⬆️


core/module_graph.cc
90.47% <90.47%> (ø)



... and 10 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9d265d4...38277f6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,673,2017-10-11T22:48:23Z,2017-10-16T17:32:02Z,2017-10-16T18:01:18Z,MERGED,True,664,474,12,https://github.com/shinae-woo,Refactoring Module/Task/ModuleBuilder,7,[],https://github.com/NetSys/bess/pull/673,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/673#issuecomment-336961972,"This PR doesn't change any functionality, but refactor the existing module.h and module.cc files as they are integrating too much functionality in a file. Once these changes are approved, then I can make change the internal scheduling logic.
Major changes are

Get global info about module_graphs out of ModuleBuilder class
Get Task/ModuleTask out of module.h","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,675,2017-10-12T16:56:20Z,2017-10-12T20:31:11Z,2017-10-12T22:30:49Z,MERGED,True,3,2,1,https://github.com/shinae-woo,Fix bugs - python3.x above doesn't support string encode,1,[],https://github.com/NetSys/bess/pull/675,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/675,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,675,2017-10-12T16:56:20Z,2017-10-12T20:31:11Z,2017-10-12T22:30:49Z,MERGED,True,3,2,1,https://github.com/shinae-woo,Fix bugs - python3.x above doesn't support string encode,1,[],https://github.com/NetSys/bess/pull/675,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/675#issuecomment-336210408,,"Codecov Report

Merging #675 into master will increase coverage by 0.06%.
The diff coverage is 33.33%.


@@            Coverage Diff             @@
##           master     #675      +/-   ##
==========================================
+ Coverage   69.21%   69.28%   +0.06%     
==========================================
  Files         210      210              
  Lines       13563    13535      -28     
==========================================
- Hits         9388     9378      -10     
+ Misses       4175     4157      -18



Impacted Files
Coverage Δ





bessctl/test_utils.py
20.64% <33.33%> (+0.51%)
⬆️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 09423a2...fbde4e3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,675,2017-10-12T16:56:20Z,2017-10-12T20:31:11Z,2017-10-12T22:30:49Z,MERGED,True,3,2,1,https://github.com/shinae-woo,Fix bugs - python3.x above doesn't support string encode,1,[],https://github.com/NetSys/bess/pull/675,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/675#issuecomment-336257229,,"Thanks,",True,{}
NetSys/bess,https://github.com/NetSys/bess,676,2017-10-12T17:04:47Z,2017-10-12T20:48:57Z,2017-10-12T22:30:51Z,MERGED,True,97,102,2,https://github.com/shinae-woo,Placement constraint test,2,[],https://github.com/NetSys/bess/pull/676,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/676,This PR is for porting existing module placement constraint test (but were not checked with Travis) into the new testing framework.,This PR is for porting existing module placement constraint test (but were not checked with Travis) into the new testing framework.,True,{}
NetSys/bess,https://github.com/NetSys/bess,676,2017-10-12T17:04:47Z,2017-10-12T20:48:57Z,2017-10-12T22:30:51Z,MERGED,True,97,102,2,https://github.com/shinae-woo,Placement constraint test,2,[],https://github.com/NetSys/bess/pull/676,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/676#issuecomment-336217902,This PR is for porting existing module placement constraint test (but were not checked with Travis) into the new testing framework.,"Codecov Report

Merging #676 into master will increase coverage by 0.06%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #676      +/-   ##
==========================================
+ Coverage   69.21%   69.28%   +0.06%     
==========================================
  Files         210      210              
  Lines       13563    13563              
==========================================
+ Hits         9388     9397       +9     
+ Misses       4175     4166       -9



Impacted Files
Coverage Δ





core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/module.cc
88.37% <0%> (+0.58%)
⬆️


core/bessctl.cc
55.62% <0%> (+0.66%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 09423a2...a82bf65. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,676,2017-10-12T17:04:47Z,2017-10-12T20:48:57Z,2017-10-12T22:30:51Z,MERGED,True,97,102,2,https://github.com/shinae-woo,Placement constraint test,2,[],https://github.com/NetSys/bess/pull/676,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/676#issuecomment-336262640,This PR is for porting existing module placement constraint test (but were not checked with Travis) into the new testing framework.,👍,True,{}
NetSys/bess,https://github.com/NetSys/bess,677,2017-10-12T23:27:16Z,2017-10-13T18:15:04Z,2017-10-16T07:09:58Z,MERGED,True,4,4,1,https://github.com/shinae-woo,Fix bugs on Raising Assertion Error on Test Module,1,[],https://github.com/NetSys/bess/pull/677,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/677,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,677,2017-10-12T23:27:16Z,2017-10-13T18:15:04Z,2017-10-16T07:09:58Z,MERGED,True,4,4,1,https://github.com/shinae-woo,Fix bugs on Raising Assertion Error on Test Module,1,[],https://github.com/NetSys/bess/pull/677,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/677#issuecomment-336314821,,"Codecov Report

Merging #677 into master will increase coverage by 0.07%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #677      +/-   ##
==========================================
+ Coverage   69.66%   69.73%   +0.07%     
==========================================
  Files         212      212              
  Lines       13725    13695      -30     
==========================================
- Hits         9561     9550      -11     
+ Misses       4164     4145      -19



Impacted Files
Coverage Δ





bessctl/test_utils.py
20.64% <0%> (ø)
⬆️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
75% <0%> (+13.23%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 16295a4...0e2835e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,677,2017-10-12T23:27:16Z,2017-10-13T18:15:04Z,2017-10-16T07:09:58Z,MERGED,True,4,4,1,https://github.com/shinae-woo,Fix bugs on Raising Assertion Error on Test Module,1,[],https://github.com/NetSys/bess/pull/677,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/677#issuecomment-336529013,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,680,2017-10-13T22:21:36Z,2017-10-14T03:07:17Z,2017-10-16T07:10:00Z,MERGED,True,1,1,1,https://github.com/shinae-woo,Fix a bug: Sanitizer logs from bessd can be accessible only as root,1,[],https://github.com/NetSys/bess/pull/680,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/680,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,680,2017-10-13T22:21:36Z,2017-10-14T03:07:17Z,2017-10-16T07:10:00Z,MERGED,True,1,1,1,https://github.com/shinae-woo,Fix a bug: Sanitizer logs from bessd can be accessible only as root,1,[],https://github.com/NetSys/bess/pull/680,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/680#issuecomment-336586642,,"Codecov Report

Merging #680 into master will increase coverage by 0.06%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #680      +/-   ##
==========================================
+ Coverage   69.66%   69.72%   +0.06%     
==========================================
  Files         212      212              
  Lines       13725    13695      -30     
==========================================
- Hits         9561     9549      -12     
+ Misses       4164     4146      -18



Impacted Files
Coverage Δ





core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
75% <0%> (+13.23%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update db6a3e9...9360a20. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,680,2017-10-13T22:21:36Z,2017-10-14T03:07:17Z,2017-10-16T07:10:00Z,MERGED,True,1,1,1,https://github.com/shinae-woo,Fix a bug: Sanitizer logs from bessd can be accessible only as root,1,[],https://github.com/NetSys/bess/pull/680,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/680#issuecomment-336605528,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,681,2017-10-14T00:59:57Z,2017-10-14T19:00:25Z,2017-11-01T17:54:36Z,CLOSED,False,20,6,4,https://github.com/melvinw,experimental_scheduler: fix potential segfault,1,[],https://github.com/NetSys/bess/pull/681,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/681,"Currently the experimental scheduler keeps pointers to the tasks
registered by modules in its WakeUpQueue after they have been deleted.
This could lead to nasty crashes. This commit makes two changes:


Change Scheduler::WakeUpQueue to use utils/extended_priority_queue
instead of stl::priority_queue in order to support deletion in the
middle.


Change Module::DestroyAllTasks() to remove any references to
registered tasks from its scheduler's wake up queue.","Currently the experimental scheduler keeps pointers to the tasks
registered by modules in its WakeUpQueue after they have been deleted.
This could lead to nasty crashes. This commit makes two changes:


Change Scheduler::WakeUpQueue to use utils/extended_priority_queue
instead of stl::priority_queue in order to support deletion in the
middle.


Change Module::DestroyAllTasks() to remove any references to
registered tasks from its scheduler's wake up queue.",True,{}
NetSys/bess,https://github.com/NetSys/bess,681,2017-10-14T00:59:57Z,2017-10-14T19:00:25Z,2017-11-01T17:54:36Z,CLOSED,False,20,6,4,https://github.com/melvinw,experimental_scheduler: fix potential segfault,1,[],https://github.com/NetSys/bess/pull/681,https://github.com/shinae-woo,2,https://github.com/NetSys/bess/pull/681#issuecomment-336600136,"Currently the experimental scheduler keeps pointers to the tasks
registered by modules in its WakeUpQueue after they have been deleted.
This could lead to nasty crashes. This commit makes two changes:


Change Scheduler::WakeUpQueue to use utils/extended_priority_queue
instead of stl::priority_queue in order to support deletion in the
middle.


Change Module::DestroyAllTasks() to remove any references to
registered tasks from its scheduler's wake up queue.","Thanks! I was doing some refactoring on TC and ModuleTask, to ensure that objects are freed where they were allocated. That refactoring and this PR are very likely to conflict though. If this issue is not urgent, let me include this fix (or its equivalent) in my later PR. 😸",True,{}
NetSys/bess,https://github.com/NetSys/bess,681,2017-10-14T00:59:57Z,2017-10-14T19:00:25Z,2017-11-01T17:54:36Z,CLOSED,False,20,6,4,https://github.com/melvinw,experimental_scheduler: fix potential segfault,1,[],https://github.com/NetSys/bess/pull/681,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/681#issuecomment-336600653,"Currently the experimental scheduler keeps pointers to the tasks
registered by modules in its WakeUpQueue after they have been deleted.
This could lead to nasty crashes. This commit makes two changes:


Change Scheduler::WakeUpQueue to use utils/extended_priority_queue
instead of stl::priority_queue in order to support deletion in the
middle.


Change Module::DestroyAllTasks() to remove any references to
registered tasks from its scheduler's wake up queue.","Ah, nice-- please take it! It's not super urgent :)",True,{}
NetSys/bess,https://github.com/NetSys/bess,681,2017-10-14T00:59:57Z,2017-10-14T19:00:25Z,2017-11-01T17:54:36Z,CLOSED,False,20,6,4,https://github.com/melvinw,experimental_scheduler: fix potential segfault,1,[],https://github.com/NetSys/bess/pull/681,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/681#issuecomment-336600990,"Currently the experimental scheduler keeps pointers to the tasks
registered by modules in its WakeUpQueue after they have been deleted.
This could lead to nasty crashes. This commit makes two changes:


Change Scheduler::WakeUpQueue to use utils/extended_priority_queue
instead of stl::priority_queue in order to support deletion in the
middle.


Change Module::DestroyAllTasks() to remove any references to
registered tasks from its scheduler's wake up queue.","Codecov Report

Merging #681 into master will increase coverage by 0.08%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #681      +/-   ##
==========================================
+ Coverage   69.66%   69.75%   +0.08%     
==========================================
  Files         212      212              
  Lines       13725    13703      -22     
==========================================
- Hits         9561     9558       -3     
+ Misses       4164     4145      -19



Impacted Files
Coverage Δ





core/module.h
90.64% <ø> (ø)
⬆️


core/module.cc
88.5% <100%> (+0.13%)
⬆️


core/utils/extended_priority_queue.h
96.55% <100%> (ø)
⬆️


core/scheduler.h
67.62% <100%> (+0.95%)
⬆️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
75% <0%> (+13.23%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update db6a3e9...2931410. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,681,2017-10-14T00:59:57Z,2017-10-14T19:00:25Z,2017-11-01T17:54:36Z,CLOSED,False,20,6,4,https://github.com/melvinw,experimental_scheduler: fix potential segfault,1,[],https://github.com/NetSys/bess/pull/681,https://github.com/barath,5,https://github.com/NetSys/bess/pull/681#issuecomment-336604675,"Currently the experimental scheduler keeps pointers to the tasks
registered by modules in its WakeUpQueue after they have been deleted.
This could lead to nasty crashes. This commit makes two changes:


Change Scheduler::WakeUpQueue to use utils/extended_priority_queue
instead of stl::priority_queue in order to support deletion in the
middle.


Change Module::DestroyAllTasks() to remove any references to
registered tasks from its scheduler's wake up queue.",LGTM,True,{}
NetSys/bess,https://github.com/NetSys/bess,681,2017-10-14T00:59:57Z,2017-10-14T19:00:25Z,2017-11-01T17:54:36Z,CLOSED,False,20,6,4,https://github.com/melvinw,experimental_scheduler: fix potential segfault,1,[],https://github.com/NetSys/bess/pull/681,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/681#issuecomment-336658325,"Currently the experimental scheduler keeps pointers to the tasks
registered by modules in its WakeUpQueue after they have been deleted.
This could lead to nasty crashes. This commit makes two changes:


Change Scheduler::WakeUpQueue to use utils/extended_priority_queue
instead of stl::priority_queue in order to support deletion in the
middle.


Change Module::DestroyAllTasks() to remove any references to
registered tasks from its scheduler's wake up queue.",Will be fixed in #673,True,{}
NetSys/bess,https://github.com/NetSys/bess,682,2017-10-16T18:15:46Z,2017-10-18T00:55:12Z,2017-10-21T06:53:15Z,MERGED,True,116,101,6,https://github.com/shinae-woo,Unify the responsibility of module creation/deletion to the ModuleGraph,2,[],https://github.com/NetSys/bess/pull/682,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/682,"No other class (e.g., bessctl, bessd) should take the ownership","No other class (e.g., bessctl, bessd) should take the ownership",True,{}
NetSys/bess,https://github.com/NetSys/bess,682,2017-10-16T18:15:46Z,2017-10-18T00:55:12Z,2017-10-21T06:53:15Z,MERGED,True,116,101,6,https://github.com/shinae-woo,Unify the responsibility of module creation/deletion to the ModuleGraph,2,[],https://github.com/NetSys/bess/pull/682,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/682#issuecomment-336995330,"No other class (e.g., bessctl, bessd) should take the ownership","Codecov Report

Merging #682 into master will increase coverage by 0.02%.
The diff coverage is 72.36%.


@@            Coverage Diff             @@
##           master     #682      +/-   ##
==========================================
+ Coverage   69.62%   69.65%   +0.02%     
==========================================
  Files         216      216              
  Lines       13724    13734      +10     
==========================================
+ Hits         9556     9567      +11     
+ Misses       4168     4167       -1



Impacted Files
Coverage Δ





core/module_graph.h
100% <ø> (ø)
⬆️


core/metadata_test.cc
100% <100%> (ø)
⬆️


core/bessctl.cc
55.66% <100%> (+0.03%)
⬆️


core/module_graph.cc
81.75% <39.28%> (-8.72%)
⬇️


core/module_test.cc
96.36% <89.74%> (-0.63%)
⬇️


core/modules/source.cc
73.68% <0%> (-2%)
⬇️


core/drivers/unix_socket.cc
78.03% <0%> (-1.36%)
⬇️


core/drivers/unix_socket.h
100% <0%> (ø)
⬆️


pybess/bess.py
42.82% <0%> (+0.23%)
⬆️


core/traffic_class.cc
91.34% <0%> (+0.34%)
⬆️


... and 2 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c3b4c1f...7bd3bfe. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,682,2017-10-16T18:15:46Z,2017-10-18T00:55:12Z,2017-10-21T06:53:15Z,MERGED,True,116,101,6,https://github.com/shinae-woo,Unify the responsibility of module creation/deletion to the ModuleGraph,2,[],https://github.com/NetSys/bess/pull/682,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/682#issuecomment-337427242,"No other class (e.g., bessctl, bessd) should take the ownership",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,683,2017-10-16T19:05:03Z,2017-10-16T20:46:34Z,2017-10-18T00:56:27Z,MERGED,True,34,65,4,https://github.com/sangjinhan,Fix starvation of the RX path in UnixSocketPort,3,[],https://github.com/NetSys/bess/pull/683,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/683,"Due to the cost of system calls, UnixSocketPort had a throttling mechanism for RX busy-wait polling. When the port is idle, recv() is invoked every 256 ticks (in other words, scheduling rounds). This behavior becomes problematic when it is used with the experimental scheduler. Since the scheduler slows down idle tasks, when combined with UnixSocketPort's internal mechanism, recv() is hardly invoked (every 256 * 2^32 cycles, which translates to a few minutes). This PR makes two changes:

The maximum exponential backoff of the experimental scheculer is now 2^20 cycles,  reduced from 2^32 cycles.
UnixSocketPort throttles based on wall-clock time (by default 50us, but configurable), not on tick.

Note: while this throttling feature looks redundant with the role of RateLimit traffic class, it is slightly different. The RX throttling kicks in only when the port is idle. It is rather similar to interrupt coalescing in kernel device drivers.","Due to the cost of system calls, UnixSocketPort had a throttling mechanism for RX busy-wait polling. When the port is idle, recv() is invoked every 256 ticks (in other words, scheduling rounds). This behavior becomes problematic when it is used with the experimental scheduler. Since the scheduler slows down idle tasks, when combined with UnixSocketPort's internal mechanism, recv() is hardly invoked (every 256 * 2^32 cycles, which translates to a few minutes). This PR makes two changes:

The maximum exponential backoff of the experimental scheculer is now 2^20 cycles,  reduced from 2^32 cycles.
UnixSocketPort throttles based on wall-clock time (by default 50us, but configurable), not on tick.

Note: while this throttling feature looks redundant with the role of RateLimit traffic class, it is slightly different. The RX throttling kicks in only when the port is idle. It is rather similar to interrupt coalescing in kernel device drivers.",True,{}
NetSys/bess,https://github.com/NetSys/bess,683,2017-10-16T19:05:03Z,2017-10-16T20:46:34Z,2017-10-18T00:56:27Z,MERGED,True,34,65,4,https://github.com/sangjinhan,Fix starvation of the RX path in UnixSocketPort,3,[],https://github.com/NetSys/bess/pull/683,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/683#issuecomment-337013190,"Due to the cost of system calls, UnixSocketPort had a throttling mechanism for RX busy-wait polling. When the port is idle, recv() is invoked every 256 ticks (in other words, scheduling rounds). This behavior becomes problematic when it is used with the experimental scheduler. Since the scheduler slows down idle tasks, when combined with UnixSocketPort's internal mechanism, recv() is hardly invoked (every 256 * 2^32 cycles, which translates to a few minutes). This PR makes two changes:

The maximum exponential backoff of the experimental scheculer is now 2^20 cycles,  reduced from 2^32 cycles.
UnixSocketPort throttles based on wall-clock time (by default 50us, but configurable), not on tick.

Note: while this throttling feature looks redundant with the role of RateLimit traffic class, it is slightly different. The RX throttling kicks in only when the port is idle. It is rather similar to interrupt coalescing in kernel device drivers.","Codecov Report

Merging #683 into master will increase coverage by <.01%.
The diff coverage is 72.72%.


@@            Coverage Diff             @@
##           master     #683      +/-   ##
==========================================
+ Coverage   69.62%   69.63%   +<.01%     
==========================================
  Files         216      216              
  Lines       13724    13725       +1     
==========================================
+ Hits         9556     9558       +2     
+ Misses       4168     4167       -1



Impacted Files
Coverage Δ





core/drivers/unix_socket.h
100% <ø> (ø)
⬆️


core/scheduler.h
66.66% <0%> (ø)
⬆️


core/drivers/unix_socket.cc
78.03% <80%> (-1.36%)
⬇️


pybess/bess.py
42.82% <0%> (+0.23%)
⬆️


core/traffic_class.cc
91.34% <0%> (+0.34%)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c3b4c1f...f6df68d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,683,2017-10-16T19:05:03Z,2017-10-16T20:46:34Z,2017-10-18T00:56:27Z,MERGED,True,34,65,4,https://github.com/sangjinhan,Fix starvation of the RX path in UnixSocketPort,3,[],https://github.com/NetSys/bess/pull/683,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/683#issuecomment-337036382,"Due to the cost of system calls, UnixSocketPort had a throttling mechanism for RX busy-wait polling. When the port is idle, recv() is invoked every 256 ticks (in other words, scheduling rounds). This behavior becomes problematic when it is used with the experimental scheduler. Since the scheduler slows down idle tasks, when combined with UnixSocketPort's internal mechanism, recv() is hardly invoked (every 256 * 2^32 cycles, which translates to a few minutes). This PR makes two changes:

The maximum exponential backoff of the experimental scheculer is now 2^20 cycles,  reduced from 2^32 cycles.
UnixSocketPort throttles based on wall-clock time (by default 50us, but configurable), not on tick.

Note: while this throttling feature looks redundant with the role of RateLimit traffic class, it is slightly different. The RX throttling kicks in only when the port is idle. It is rather similar to interrupt coalescing in kernel device drivers.",Thanks for doing this!,True,{}
NetSys/bess,https://github.com/NetSys/bess,684,2017-10-16T19:06:15Z,2017-10-18T20:41:44Z,2018-06-28T22:07:37Z,MERGED,True,2,1,1,https://github.com/sangjinhan,Fix endianness for packets at the end of batch,1,[],https://github.com/NetSys/bess/pull/684,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/684,Reported and fix suggested by @nemethf (#678),Reported and fix suggested by @nemethf (#678),True,{}
NetSys/bess,https://github.com/NetSys/bess,684,2017-10-16T19:06:15Z,2017-10-18T20:41:44Z,2018-06-28T22:07:37Z,MERGED,True,2,1,1,https://github.com/sangjinhan,Fix endianness for packets at the end of batch,1,[],https://github.com/NetSys/bess/pull/684,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/684#issuecomment-337021824,Reported and fix suggested by @nemethf (#678),"Codecov Report

Merging #684 into master will increase coverage by 0.01%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #684      +/-   ##
==========================================
+ Coverage   69.62%   69.64%   +0.01%     
==========================================
  Files         216      216              
  Lines       13724    13724              
==========================================
+ Hits         9556     9558       +2     
+ Misses       4168     4166       -2



Impacted Files
Coverage Δ





core/modules/ip_lookup.cc
73.33% <0%> (ø)
⬆️


pybess/bess.py
42.82% <0%> (+0.23%)
⬆️


core/traffic_class.cc
91.34% <0%> (+0.34%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c3b4c1f...2de9cd5. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,684,2017-10-16T19:06:15Z,2017-10-18T20:41:44Z,2018-06-28T22:07:37Z,MERGED,True,2,1,1,https://github.com/sangjinhan,Fix endianness for packets at the end of batch,1,[],https://github.com/NetSys/bess/pull/684,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/684#issuecomment-337721540,Reported and fix suggested by @nemethf (#678),,True,{}
NetSys/bess,https://github.com/NetSys/bess,685,2017-10-16T19:20:49Z,2017-10-18T00:54:02Z,2017-10-21T06:53:15Z,MERGED,True,172,224,18,https://github.com/shinae-woo,"Refactoring task, scheduler",3,[],https://github.com/NetSys/bess/pull/685,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/685,"This PR does not change functionality but simplify the Task and Scheduler.
The main changes are:

Remove ModuleTask
De-templatize scheduler and leaf traffic class
Merge @melvinw's PR #681 for fix potential segfault.","This PR does not change functionality but simplify the Task and Scheduler.
The main changes are:

Remove ModuleTask
De-templatize scheduler and leaf traffic class
Merge @melvinw's PR #681 for fix potential segfault.",True,{}
NetSys/bess,https://github.com/NetSys/bess,685,2017-10-16T19:20:49Z,2017-10-18T00:54:02Z,2017-10-21T06:53:15Z,MERGED,True,172,224,18,https://github.com/shinae-woo,"Refactoring task, scheduler",3,[],https://github.com/NetSys/bess/pull/685,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/685#issuecomment-337028609,"This PR does not change functionality but simplify the Task and Scheduler.
The main changes are:

Remove ModuleTask
De-templatize scheduler and leaf traffic class
Merge @melvinw's PR #681 for fix potential segfault.","Codecov Report

Merging #685 into master will decrease coverage by <.01%.
The diff coverage is 96.11%.


@@            Coverage Diff             @@
##           master     #685      +/-   ##
==========================================
- Coverage   69.62%   69.62%   -0.01%     
==========================================
  Files         216      216              
  Lines       13724    13725       +1     
==========================================
  Hits         9556     9556              
- Misses       4168     4169       +1



Impacted Files
Coverage Δ





core/modules/worker_split.h
100% <ø> (ø)
⬆️


core/module.h
89.13% <100%> (ø)
⬆️


core/module.cc
87.55% <100%> (+0.16%)
⬆️


core/utils/extended_priority_queue.h
96.55% <100%> (ø)
⬆️


core/traffic_class_test.cc
99.41% <100%> (ø)
⬆️


core/module_graph.cc
90.47% <100%> (ø)
⬆️


core/task.cc
94.11% <100%> (-0.62%)
⬇️


core/traffic_class.h
89.58% <100%> (-0.29%)
⬇️


core/debug.cc
56.58% <100%> (ø)
⬆️


core/traffic_class.cc
91.46% <100%> (+0.46%)
⬆️


... and 10 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c3b4c1f...b049b0a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,685,2017-10-16T19:20:49Z,2017-10-18T00:54:02Z,2017-10-21T06:53:15Z,MERGED,True,172,224,18,https://github.com/shinae-woo,"Refactoring task, scheduler",3,[],https://github.com/NetSys/bess/pull/685,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/685#issuecomment-337326821,"This PR does not change functionality but simplify the Task and Scheduler.
The main changes are:

Remove ModuleTask
De-templatize scheduler and leaf traffic class
Merge @melvinw's PR #681 for fix potential segfault.","I scanned through this and the changes look fine to me, assuming there's no reason to keep the complexity of type-generic scheduler.
I did notice that core/utils/extended_priority_queue.h misses a trick: its delete_single_element does the required linear search and then just makes a whole new heap, rather than re-sifting the heap a la its decrease_key_top.  (If this is rare, though, that's probably OK, and of course O(2N) is still O(N)....)",True,{}
NetSys/bess,https://github.com/NetSys/bess,685,2017-10-16T19:20:49Z,2017-10-18T00:54:02Z,2017-10-21T06:53:15Z,MERGED,True,172,224,18,https://github.com/shinae-woo,"Refactoring task, scheduler",3,[],https://github.com/NetSys/bess/pull/685,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/685#issuecomment-337426863,"This PR does not change functionality but simplify the Task and Scheduler.
The main changes are:

Remove ModuleTask
De-templatize scheduler and leaf traffic class
Merge @melvinw's PR #681 for fix potential segfault.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,686,2017-10-17T01:27:25Z,2017-10-18T00:47:24Z,2017-10-21T06:53:19Z,MERGED,True,58,1,4,https://github.com/chris3torek,fix race in unix_socket.cc,1,[],https://github.com/NetSys/bess/pull/686,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/686,"As unlikely as it seems, the Python tests for bessd are triggering
a race between the unix-socket accept() thread and the vlan test
code running in the Python interpreter.
There is a long comment in bessctl/test_utils.py explaining the race.
On the BESS side, we add a new boolean, confirm_connect, to the unix-
socket port, and send a magic number -- the byte-string ""yes\0"" --
across the socket to indicate that the accept thread has set it all up
for use.","As unlikely as it seems, the Python tests for bessd are triggering
a race between the unix-socket accept() thread and the vlan test
code running in the Python interpreter.
There is a long comment in bessctl/test_utils.py explaining the race.
On the BESS side, we add a new boolean, confirm_connect, to the unix-
socket port, and send a magic number -- the byte-string ""yes\0"" --
across the socket to indicate that the accept thread has set it all up
for use.",True,{}
NetSys/bess,https://github.com/NetSys/bess,686,2017-10-17T01:27:25Z,2017-10-18T00:47:24Z,2017-10-21T06:53:19Z,MERGED,True,58,1,4,https://github.com/chris3torek,fix race in unix_socket.cc,1,[],https://github.com/NetSys/bess/pull/686,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/686#issuecomment-337096232,"As unlikely as it seems, the Python tests for bessd are triggering
a race between the unix-socket accept() thread and the vlan test
code running in the Python interpreter.
There is a long comment in bessctl/test_utils.py explaining the race.
On the BESS side, we add a new boolean, confirm_connect, to the unix-
socket port, and send a magic number -- the byte-string ""yes\0"" --
across the socket to indicate that the accept thread has set it all up
for use.","Codecov Report

Merging #686 into master will decrease coverage by 0.01%.
The diff coverage is 50%.


@@            Coverage Diff             @@
##           master     #686      +/-   ##
==========================================
- Coverage   69.63%   69.62%   -0.02%     
==========================================
  Files         216      216              
  Lines       13725    13732       +7     
==========================================
+ Hits         9558     9561       +3     
- Misses       4167     4171       +4



Impacted Files
Coverage Δ





core/drivers/unix_socket.h
100% <ø> (ø)
⬆️


bessctl/test_utils.py
20.25% <0%> (-0.4%)
⬇️


core/drivers/unix_socket.cc
78.51% <100%> (+0.48%)
⬆️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7d0fdc4...4cd38bc. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,686,2017-10-17T01:27:25Z,2017-10-18T00:47:24Z,2017-10-21T06:53:19Z,MERGED,True,58,1,4,https://github.com/chris3torek,fix race in unix_socket.cc,1,[],https://github.com/NetSys/bess/pull/686,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/686#issuecomment-337425445,"As unlikely as it seems, the Python tests for bessd are triggering
a race between the unix-socket accept() thread and the vlan test
code running in the Python interpreter.
There is a long comment in bessctl/test_utils.py explaining the race.
On the BESS side, we add a new boolean, confirm_connect, to the unix-
socket port, and send a magic number -- the byte-string ""yes\0"" --
across the socket to indicate that the accept thread has set it all up
for use.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,687,2017-10-17T22:13:27Z,2017-10-19T19:59:14Z,2017-10-21T06:53:16Z,MERGED,True,63,28,2,https://github.com/chris3torek,clean up unittests a bit,3,[],https://github.com/NetSys/bess/pull/687,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/687,"These three commits should each stand alone - I'm just bundling them together because they happened in sort of reverse order, as part of debugging the vlan race thing.  The first is important, the second doesn't affect any current test, and the third commit has no actual fix in it, it's just some code I had trouble with while debugging, so I rearranged it.
Note that these changes also need the vlan-racy-test fix to be installed for them to work on my laptop. Anyone not hitting the race should be able to run this version without that, though.","These three commits should each stand alone - I'm just bundling them together because they happened in sort of reverse order, as part of debugging the vlan race thing.  The first is important, the second doesn't affect any current test, and the third commit has no actual fix in it, it's just some code I had trouble with while debugging, so I rearranged it.
Note that these changes also need the vlan-racy-test fix to be installed for them to work on my laptop. Anyone not hitting the race should be able to run this version without that, though.",True,{}
NetSys/bess,https://github.com/NetSys/bess,687,2017-10-17T22:13:27Z,2017-10-19T19:59:14Z,2017-10-21T06:53:16Z,MERGED,True,63,28,2,https://github.com/chris3torek,clean up unittests a bit,3,[],https://github.com/NetSys/bess/pull/687,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/687#issuecomment-337399076,"These three commits should each stand alone - I'm just bundling them together because they happened in sort of reverse order, as part of debugging the vlan race thing.  The first is important, the second doesn't affect any current test, and the third commit has no actual fix in it, it's just some code I had trouble with while debugging, so I rearranged it.
Note that these changes also need the vlan-racy-test fix to be installed for them to work on my laptop. Anyone not hitting the race should be able to run this version without that, though.","Codecov Report

Merging #687 into master will decrease coverage by 0.12%.
The diff coverage is 3.22%.


@@            Coverage Diff             @@
##           master     #687      +/-   ##
==========================================
- Coverage   69.63%   69.51%   -0.13%     
==========================================
  Files         216      216              
  Lines       13725    13766      +41     
==========================================
+ Hits         9558     9570      +12     
- Misses       4167     4196      +29



Impacted Files
Coverage Δ





bessctl/test_utils.py
19.76% <3.22%> (-0.89%)
⬇️


core/utils/copy.h
61.76% <0%> (-13.24%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7d0fdc4...04e74c3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,687,2017-10-17T22:13:27Z,2017-10-19T19:59:14Z,2017-10-21T06:53:16Z,MERGED,True,63,28,2,https://github.com/chris3torek,clean up unittests a bit,3,[],https://github.com/NetSys/bess/pull/687,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/687#issuecomment-338020151,"These three commits should each stand alone - I'm just bundling them together because they happened in sort of reverse order, as part of debugging the vlan race thing.  The first is important, the second doesn't affect any current test, and the third commit has no actual fix in it, it's just some code I had trouble with while debugging, so I rearranged it.
Note that these changes also need the vlan-racy-test fix to be installed for them to work on my laptop. Anyone not hitting the race should be able to run this version without that, though.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,688,2017-10-18T23:24:24Z,2017-10-20T20:12:12Z,2017-11-01T17:54:31Z,MERGED,True,13,6,3,https://github.com/melvinw,misc sanitizer fixes,3,[],https://github.com/NetSys/bess/pull/688,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/688,"While building with clang++-3.9 and SANITIZE=1on my machine I found some new complaints from the leak and undefined behavior and leak sanitizers.
undefined behavior:
utils/ip.cc:82:39: runtime error: signed integer overflow: -2147483648 - 1 cannot be represented in type 'int'
    #0 0x185bfd7 in bess::utils::Ipv4Prefix::Ipv4Prefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) utils/ip.cc:82:39
    #1 0xb1d68d in (anonymous namespace)::IPTest_PrefixCalc_Test::TestBody() utils/ip_test.cc:97:16
    #2 0x11a70bf in void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #3 0x11a70bf in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #4 0x116584c in testing::Test::Run() /usr/src/gtest/src/gtest.cc:2150:5
    #5 0x1167a36 in testing::TestInfo::Run() /usr/src/gtest/src/gtest.cc:2326:11
    #6 0x1169c0d in testing::TestCase::Run() /usr/src/gtest/src/gtest.cc:2444:28
    #7 0x1181bd5 in testing::internal::UnitTestImpl::RunAllTests() /usr/src/gtest/src/gtest.cc:4315:43
    #8 0x11adba8 in bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #9 0x11adba8 in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #10 0x1180229 in testing::UnitTest::Run() /usr/src/gtest/src/gtest.cc:3926:10
    #11 0xa683f0 in RUN_ALL_TESTS() /usr/include/gtest/gtest.h:2288:46
    #12 0xa683f0 in main gtest_main.cc:40
    #13 0x7fc30870d82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #14 0x897aa8 in _start (all_test+0x897aa8)

the leak:
Direct leak of 1 byte(s) in 1 object(s) allocated from:
    #0 0x7cd5e0 in __strdup (/home/ubuntu/bess/core/all_test+0x7cd5e0)
    #1 0x17d99f8 in pcap_create_common (/home/ubuntu/bess/core/all_test+0x17d99f8)
    #2 0x7ffbffffffff  (<unknown module>)
    #3 0xf618af in void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.2.0/../../../../include/c++/7.2.0/bits/basic_string.tcc:232:2","While building with clang++-3.9 and SANITIZE=1on my machine I found some new complaints from the leak and undefined behavior and leak sanitizers.
undefined behavior:
utils/ip.cc:82:39: runtime error: signed integer overflow: -2147483648 - 1 cannot be represented in type 'int'
    #0 0x185bfd7 in bess::utils::Ipv4Prefix::Ipv4Prefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) utils/ip.cc:82:39
    #1 0xb1d68d in (anonymous namespace)::IPTest_PrefixCalc_Test::TestBody() utils/ip_test.cc:97:16
    #2 0x11a70bf in void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #3 0x11a70bf in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #4 0x116584c in testing::Test::Run() /usr/src/gtest/src/gtest.cc:2150:5
    #5 0x1167a36 in testing::TestInfo::Run() /usr/src/gtest/src/gtest.cc:2326:11
    #6 0x1169c0d in testing::TestCase::Run() /usr/src/gtest/src/gtest.cc:2444:28
    #7 0x1181bd5 in testing::internal::UnitTestImpl::RunAllTests() /usr/src/gtest/src/gtest.cc:4315:43
    #8 0x11adba8 in bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #9 0x11adba8 in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #10 0x1180229 in testing::UnitTest::Run() /usr/src/gtest/src/gtest.cc:3926:10
    #11 0xa683f0 in RUN_ALL_TESTS() /usr/include/gtest/gtest.h:2288:46
    #12 0xa683f0 in main gtest_main.cc:40
    #13 0x7fc30870d82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #14 0x897aa8 in _start (all_test+0x897aa8)

the leak:
Direct leak of 1 byte(s) in 1 object(s) allocated from:
    #0 0x7cd5e0 in __strdup (/home/ubuntu/bess/core/all_test+0x7cd5e0)
    #1 0x17d99f8 in pcap_create_common (/home/ubuntu/bess/core/all_test+0x17d99f8)
    #2 0x7ffbffffffff  (<unknown module>)
    #3 0xf618af in void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.2.0/../../../../include/c++/7.2.0/bits/basic_string.tcc:232:2",True,{}
NetSys/bess,https://github.com/NetSys/bess,688,2017-10-18T23:24:24Z,2017-10-20T20:12:12Z,2017-11-01T17:54:31Z,MERGED,True,13,6,3,https://github.com/melvinw,misc sanitizer fixes,3,[],https://github.com/NetSys/bess/pull/688,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/688#issuecomment-337761560,"While building with clang++-3.9 and SANITIZE=1on my machine I found some new complaints from the leak and undefined behavior and leak sanitizers.
undefined behavior:
utils/ip.cc:82:39: runtime error: signed integer overflow: -2147483648 - 1 cannot be represented in type 'int'
    #0 0x185bfd7 in bess::utils::Ipv4Prefix::Ipv4Prefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) utils/ip.cc:82:39
    #1 0xb1d68d in (anonymous namespace)::IPTest_PrefixCalc_Test::TestBody() utils/ip_test.cc:97:16
    #2 0x11a70bf in void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #3 0x11a70bf in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #4 0x116584c in testing::Test::Run() /usr/src/gtest/src/gtest.cc:2150:5
    #5 0x1167a36 in testing::TestInfo::Run() /usr/src/gtest/src/gtest.cc:2326:11
    #6 0x1169c0d in testing::TestCase::Run() /usr/src/gtest/src/gtest.cc:2444:28
    #7 0x1181bd5 in testing::internal::UnitTestImpl::RunAllTests() /usr/src/gtest/src/gtest.cc:4315:43
    #8 0x11adba8 in bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #9 0x11adba8 in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #10 0x1180229 in testing::UnitTest::Run() /usr/src/gtest/src/gtest.cc:3926:10
    #11 0xa683f0 in RUN_ALL_TESTS() /usr/include/gtest/gtest.h:2288:46
    #12 0xa683f0 in main gtest_main.cc:40
    #13 0x7fc30870d82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #14 0x897aa8 in _start (all_test+0x897aa8)

the leak:
Direct leak of 1 byte(s) in 1 object(s) allocated from:
    #0 0x7cd5e0 in __strdup (/home/ubuntu/bess/core/all_test+0x7cd5e0)
    #1 0x17d99f8 in pcap_create_common (/home/ubuntu/bess/core/all_test+0x17d99f8)
    #2 0x7ffbffffffff  (<unknown module>)
    #3 0xf618af in void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.2.0/../../../../include/c++/7.2.0/bits/basic_string.tcc:232:2","Codecov Report

Merging #688 into master will increase coverage by 0.01%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #688      +/-   ##
==========================================
+ Coverage   69.53%   69.54%   +0.01%     
==========================================
  Files         216      216              
  Lines       13781    13784       +3     
==========================================
+ Hits         9582     9586       +4     
+ Misses       4199     4198       -1



Impacted Files
Coverage Δ





core/utils/tcp_flow_reconstruct_test.cc
98.33% <100%> (+0.05%)
⬆️


core/utils/ip.cc
100% <100%> (ø)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3a70055...6d1d0e6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,688,2017-10-18T23:24:24Z,2017-10-20T20:12:12Z,2017-11-01T17:54:31Z,MERGED,True,13,6,3,https://github.com/melvinw,misc sanitizer fixes,3,[],https://github.com/NetSys/bess/pull/688,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/688#issuecomment-338061448,"While building with clang++-3.9 and SANITIZE=1on my machine I found some new complaints from the leak and undefined behavior and leak sanitizers.
undefined behavior:
utils/ip.cc:82:39: runtime error: signed integer overflow: -2147483648 - 1 cannot be represented in type 'int'
    #0 0x185bfd7 in bess::utils::Ipv4Prefix::Ipv4Prefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) utils/ip.cc:82:39
    #1 0xb1d68d in (anonymous namespace)::IPTest_PrefixCalc_Test::TestBody() utils/ip_test.cc:97:16
    #2 0x11a70bf in void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #3 0x11a70bf in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #4 0x116584c in testing::Test::Run() /usr/src/gtest/src/gtest.cc:2150:5
    #5 0x1167a36 in testing::TestInfo::Run() /usr/src/gtest/src/gtest.cc:2326:11
    #6 0x1169c0d in testing::TestCase::Run() /usr/src/gtest/src/gtest.cc:2444:28
    #7 0x1181bd5 in testing::internal::UnitTestImpl::RunAllTests() /usr/src/gtest/src/gtest.cc:4315:43
    #8 0x11adba8 in bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #9 0x11adba8 in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #10 0x1180229 in testing::UnitTest::Run() /usr/src/gtest/src/gtest.cc:3926:10
    #11 0xa683f0 in RUN_ALL_TESTS() /usr/include/gtest/gtest.h:2288:46
    #12 0xa683f0 in main gtest_main.cc:40
    #13 0x7fc30870d82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #14 0x897aa8 in _start (all_test+0x897aa8)

the leak:
Direct leak of 1 byte(s) in 1 object(s) allocated from:
    #0 0x7cd5e0 in __strdup (/home/ubuntu/bess/core/all_test+0x7cd5e0)
    #1 0x17d99f8 in pcap_create_common (/home/ubuntu/bess/core/all_test+0x17d99f8)
    #2 0x7ffbffffffff  (<unknown module>)
    #3 0xf618af in void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.2.0/../../../../include/c++/7.2.0/bits/basic_string.tcc:232:2",Weird... I can't reproduce this new leak locally.,True,{}
NetSys/bess,https://github.com/NetSys/bess,688,2017-10-18T23:24:24Z,2017-10-20T20:12:12Z,2017-11-01T17:54:31Z,MERGED,True,13,6,3,https://github.com/melvinw,misc sanitizer fixes,3,[],https://github.com/NetSys/bess/pull/688,https://github.com/ddiproietto,4,https://github.com/NetSys/bess/pull/688#issuecomment-338310906,"While building with clang++-3.9 and SANITIZE=1on my machine I found some new complaints from the leak and undefined behavior and leak sanitizers.
undefined behavior:
utils/ip.cc:82:39: runtime error: signed integer overflow: -2147483648 - 1 cannot be represented in type 'int'
    #0 0x185bfd7 in bess::utils::Ipv4Prefix::Ipv4Prefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) utils/ip.cc:82:39
    #1 0xb1d68d in (anonymous namespace)::IPTest_PrefixCalc_Test::TestBody() utils/ip_test.cc:97:16
    #2 0x11a70bf in void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #3 0x11a70bf in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #4 0x116584c in testing::Test::Run() /usr/src/gtest/src/gtest.cc:2150:5
    #5 0x1167a36 in testing::TestInfo::Run() /usr/src/gtest/src/gtest.cc:2326:11
    #6 0x1169c0d in testing::TestCase::Run() /usr/src/gtest/src/gtest.cc:2444:28
    #7 0x1181bd5 in testing::internal::UnitTestImpl::RunAllTests() /usr/src/gtest/src/gtest.cc:4315:43
    #8 0x11adba8 in bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2078:10
    #9 0x11adba8 in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) /usr/src/gtest/src/gtest.cc:2114
    #10 0x1180229 in testing::UnitTest::Run() /usr/src/gtest/src/gtest.cc:3926:10
    #11 0xa683f0 in RUN_ALL_TESTS() /usr/include/gtest/gtest.h:2288:46
    #12 0xa683f0 in main gtest_main.cc:40
    #13 0x7fc30870d82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #14 0x897aa8 in _start (all_test+0x897aa8)

the leak:
Direct leak of 1 byte(s) in 1 object(s) allocated from:
    #0 0x7cd5e0 in __strdup (/home/ubuntu/bess/core/all_test+0x7cd5e0)
    #1 0x17d99f8 in pcap_create_common (/home/ubuntu/bess/core/all_test+0x17d99f8)
    #2 0x7ffbffffffff  (<unknown module>)
    #3 0xf618af in void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) /usr/bin/../lib/gcc/x86_64-linux-gnu/7.2.0/../../../../include/c++/7.2.0/bits/basic_string.tcc:232:2",,True,{}
NetSys/bess,https://github.com/NetSys/bess,690,2017-10-19T17:31:05Z,2017-10-19T19:45:41Z,2017-11-01T17:54:33Z,MERGED,True,12,8,1,https://github.com/melvinw,modules/ip_lookup: fix alignment warning,2,[],https://github.com/NetSys/bess/pull/690,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/690,"When building with DEBUG=1, clang++-3.9 and g++-6 complain about two
casts in lpm_lookupx4() requiring increased alignment. This commit
changes the function signature/usage slightly to silence the compiler.","When building with DEBUG=1, clang++-3.9 and g++-6 complain about two
casts in lpm_lookupx4() requiring increased alignment. This commit
changes the function signature/usage slightly to silence the compiler.",True,{}
NetSys/bess,https://github.com/NetSys/bess,690,2017-10-19T17:31:05Z,2017-10-19T19:45:41Z,2017-11-01T17:54:33Z,MERGED,True,12,8,1,https://github.com/melvinw,modules/ip_lookup: fix alignment warning,2,[],https://github.com/NetSys/bess/pull/690,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/690#issuecomment-337992122,"When building with DEBUG=1, clang++-3.9 and g++-6 complain about two
casts in lpm_lookupx4() requiring increased alignment. This commit
changes the function signature/usage slightly to silence the compiler.","Codecov Report

Merging #690 into master will increase coverage by <.01%.
The diff coverage is 77.77%.


@@            Coverage Diff             @@
##           master     #690      +/-   ##
==========================================
+ Coverage   69.65%   69.66%   +<.01%     
==========================================
  Files         216      216              
  Lines       13740    13741       +1     
==========================================
+ Hits         9570     9572       +2     
+ Misses       4170     4169       -1



Impacted Files
Coverage Δ





core/modules/ip_lookup.cc
73.55% <77.77%> (+0.22%)
⬆️


core/traffic_class.cc
91.46% <0%> (+0.34%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update dee2028...04f408a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,690,2017-10-19T17:31:05Z,2017-10-19T19:45:41Z,2017-11-01T17:54:33Z,MERGED,True,12,8,1,https://github.com/melvinw,modules/ip_lookup: fix alignment warning,2,[],https://github.com/NetSys/bess/pull/690,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/690#issuecomment-338016329,"When building with DEBUG=1, clang++-3.9 and g++-6 complain about two
casts in lpm_lookupx4() requiring increased alignment. This commit
changes the function signature/usage slightly to silence the compiler.","(for some reason my g++6 didn't complain, but clang++-3.9 did)",True,{}
NetSys/bess,https://github.com/NetSys/bess,690,2017-10-19T17:31:05Z,2017-10-19T19:45:41Z,2017-11-01T17:54:33Z,MERGED,True,12,8,1,https://github.com/melvinw,modules/ip_lookup: fix alignment warning,2,[],https://github.com/NetSys/bess/pull/690,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/690#issuecomment-338016455,"When building with DEBUG=1, clang++-3.9 and g++-6 complain about two
casts in lpm_lookupx4() requiring increased alignment. This commit
changes the function signature/usage slightly to silence the compiler.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,691,2017-10-19T18:50:59Z,2017-10-19T19:53:09Z,2017-10-21T06:53:21Z,MERGED,True,1,0,1,https://github.com/pchaigno,Highlight .bess files as Python,1,[],https://github.com/NetSys/bess/pull/691,https://github.com/pchaigno,1,https://github.com/NetSys/bess/pull/691,"Define a new Linguist override rule to recognize all .bess files as
Python files.
This will, as far as I know, only impact github.com.","Define a new Linguist override rule to recognize all .bess files as
Python files.
This will, as far as I know, only impact github.com.",True,{}
NetSys/bess,https://github.com/NetSys/bess,691,2017-10-19T18:50:59Z,2017-10-19T19:53:09Z,2017-10-21T06:53:21Z,MERGED,True,1,0,1,https://github.com/pchaigno,Highlight .bess files as Python,1,[],https://github.com/NetSys/bess/pull/691,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/691#issuecomment-338016447,"Define a new Linguist override rule to recognize all .bess files as
Python files.
This will, as far as I know, only impact github.com.","Codecov Report

Merging #691 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #691   +/-   ##
=======================================
  Coverage   69.65%   69.65%           
=======================================
  Files         216      216           
  Lines       13740    13740           
=======================================
  Hits         9570     9570           
  Misses       4170     4170



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/traffic_class.cc
91.46% <0%> (+0.34%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update dee2028...f49c531. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,691,2017-10-19T18:50:59Z,2017-10-19T19:53:09Z,2017-10-21T06:53:21Z,MERGED,True,1,0,1,https://github.com/pchaigno,Highlight .bess files as Python,1,[],https://github.com/NetSys/bess/pull/691,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/691#issuecomment-338018477,"Define a new Linguist override rule to recognize all .bess files as
Python files.
This will, as far as I know, only impact github.com.","Great, thanks!
(for future reference for others: vi users can add autocmd BufNewFile,BufRead *.bess set filetype=python for syntax coloring)",True,{}
NetSys/bess,https://github.com/NetSys/bess,691,2017-10-19T18:50:59Z,2017-10-19T19:53:09Z,2017-10-21T06:53:21Z,MERGED,True,1,0,1,https://github.com/pchaigno,Highlight .bess files as Python,1,[],https://github.com/NetSys/bess/pull/691,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/691#issuecomment-338018825,"Define a new Linguist override rule to recognize all .bess files as
Python files.
This will, as far as I know, only impact github.com.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,692,2017-10-19T20:36:45Z,2017-10-23T17:21:20Z,2017-11-01T17:54:26Z,MERGED,True,40,10,4,https://github.com/melvinw,utils/bits: add some mask generation utilities,1,[],https://github.com/NetSys/bess/pull/692,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/692,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,692,2017-10-19T20:36:45Z,2017-10-23T17:21:20Z,2017-11-01T17:54:26Z,MERGED,True,40,10,4,https://github.com/melvinw,utils/bits: add some mask generation utilities,1,[],https://github.com/NetSys/bess/pull/692,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/692#issuecomment-338030656,,I only replaced two occurrences of this pattern. If there are others I missed I'm happy to patch them and append to this PR.,True,{}
NetSys/bess,https://github.com/NetSys/bess,692,2017-10-19T20:36:45Z,2017-10-23T17:21:20Z,2017-11-01T17:54:26Z,MERGED,True,40,10,4,https://github.com/melvinw,utils/bits: add some mask generation utilities,1,[],https://github.com/NetSys/bess/pull/692,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/692#issuecomment-338043572,,"Codecov Report

Merging #692 into master will increase coverage by <.01%.
The diff coverage is 84.61%.


@@            Coverage Diff             @@
##           master     #692      +/-   ##
==========================================
+ Coverage   69.58%   69.59%   +<.01%     
==========================================
  Files         218      218              
  Lines       13928    13933       +5     
==========================================
+ Hits         9692     9696       +4     
- Misses       4236     4237       +1



Impacted Files
Coverage Δ





core/modules/split.cc
2.85% <0%> (ø)
⬆️


core/utils/ip.cc
100% <100%> (ø)
⬆️


core/utils/exact_match_table.h
88.28% <100%> (-0.1%)
⬇️


core/utils/bits.h
98.75% <90%> (-1.25%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 07c08f1...52b74d3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,692,2017-10-19T20:36:45Z,2017-10-23T17:21:20Z,2017-11-01T17:54:26Z,MERGED,True,40,10,4,https://github.com/melvinw,utils/bits: add some mask generation utilities,1,[],https://github.com/NetSys/bess/pull/692,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/692#issuecomment-338048403,,"There's one in core/modules/split.cc:
  mask_ = (size_ == 8) ? 0xffffffffffffffffull : (1ull << (size_ * 8)) - 1;

(line 47).
(There's one more in core/module.h for socket mask but it doesn't really fit the pattern and probably shouldn't be changed.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,692,2017-10-19T20:36:45Z,2017-10-23T17:21:20Z,2017-11-01T17:54:26Z,MERGED,True,40,10,4,https://github.com/melvinw,utils/bits: add some mask generation utilities,1,[],https://github.com/NetSys/bess/pull/692,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/692#issuecomment-338354963,,"Fixed, squashed and rebased",True,{}
NetSys/bess,https://github.com/NetSys/bess,692,2017-10-19T20:36:45Z,2017-10-23T17:21:20Z,2017-11-01T17:54:26Z,MERGED,True,40,10,4,https://github.com/melvinw,utils/bits: add some mask generation utilities,1,[],https://github.com/NetSys/bess/pull/692,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/692#issuecomment-338732750,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,693,2017-10-20T21:46:37Z,2017-10-24T08:08:03Z,2017-11-02T18:49:14Z,MERGED,True,399,159,8,https://github.com/shinae-woo,Module benchmark,4,[],https://github.com/NetSys/bess/pull/693,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/693,"This PR 1) ports module benchmark code from .cc (using google benchmark) to .bess 2) adds some benchmarks to see module split/merge inside a single task. Some reasons behind this refactoring are

Using .bess shows more realistic performance (e.g., using mempool)
Packets on the stack should not be used in other modules such as non-recursive inter-module scheduler.
Add more comprehensive benchmark (split, merge, asymmetric pipeline, etc)","This PR 1) ports module benchmark code from .cc (using google benchmark) to .bess 2) adds some benchmarks to see module split/merge inside a single task. Some reasons behind this refactoring are

Using .bess shows more realistic performance (e.g., using mempool)
Packets on the stack should not be used in other modules such as non-recursive inter-module scheduler.
Add more comprehensive benchmark (split, merge, asymmetric pipeline, etc)",True,{}
NetSys/bess,https://github.com/NetSys/bess,693,2017-10-20T21:46:37Z,2017-10-24T08:08:03Z,2017-11-02T18:49:14Z,MERGED,True,399,159,8,https://github.com/shinae-woo,Module benchmark,4,[],https://github.com/NetSys/bess/pull/693,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/693#issuecomment-338361864,"This PR 1) ports module benchmark code from .cc (using google benchmark) to .bess 2) adds some benchmarks to see module split/merge inside a single task. Some reasons behind this refactoring are

Using .bess shows more realistic performance (e.g., using mempool)
Packets on the stack should not be used in other modules such as non-recursive inter-module scheduler.
Add more comprehensive benchmark (split, merge, asymmetric pipeline, etc)","Codecov Report

Merging #693 into master will decrease coverage by 0.12%.
The diff coverage is 9.09%.


@@            Coverage Diff             @@
##           master     #693      +/-   ##
==========================================
- Coverage   69.55%   69.43%   -0.13%     
==========================================
  Files         219      219              
  Lines       13932    13976      +44     
==========================================
+ Hits         9691     9704      +13     
- Misses       4241     4272      +31



Impacted Files
Coverage Δ





bessctl/test_utils.py
18.81% <9.09%> (-0.6%)
⬇️


core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


pybess/bess.py
42.15% <0%> (-0.24%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/traffic_class.cc
90.78% <0%> (+0.34%)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1ce6c40...33e6435. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,693,2017-10-20T21:46:37Z,2017-10-24T08:08:03Z,2017-11-02T18:49:14Z,MERGED,True,399,159,8,https://github.com/shinae-woo,Module benchmark,4,[],https://github.com/NetSys/bess/pull/693,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/693#issuecomment-338759492,"This PR 1) ports module benchmark code from .cc (using google benchmark) to .bess 2) adds some benchmarks to see module split/merge inside a single task. Some reasons behind this refactoring are

Using .bess shows more realistic performance (e.g., using mempool)
Packets on the stack should not be used in other modules such as non-recursive inter-module scheduler.
Add more comprehensive benchmark (split, merge, asymmetric pipeline, etc)","Not directly related to this PR, but my two cents: the current setup may not signify the overhead of the scheduler (or framework in general) enough since the behavior of Bypass module is oblivious to the packet/batch size. Maybe it's overly simplistic.
It would be interesting to see the impact of batch merging, thus amortized per-batch cost as well. For example, modules declared like this Bypass(cycles_per_batch=100, cycles_per_packet=10, cycles_per_byte=0.1) burn cycles accordingly.",True,{}
NetSys/bess,https://github.com/NetSys/bess,693,2017-10-20T21:46:37Z,2017-10-24T08:08:03Z,2017-11-02T18:49:14Z,MERGED,True,399,159,8,https://github.com/shinae-woo,Module benchmark,4,[],https://github.com/NetSys/bess/pull/693,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/693#issuecomment-338797098,"This PR 1) ports module benchmark code from .cc (using google benchmark) to .bess 2) adds some benchmarks to see module split/merge inside a single task. Some reasons behind this refactoring are

Using .bess shows more realistic performance (e.g., using mempool)
Packets on the stack should not be used in other modules such as non-recursive inter-module scheduler.
Add more comprehensive benchmark (split, merge, asymmetric pipeline, etc)","@sangjinhan I agree, those workloads are not realistic. At lease for Bypass.
I am pretty excited to see the actual benefits, too.",True,{}
NetSys/bess,https://github.com/NetSys/bess,693,2017-10-20T21:46:37Z,2017-10-24T08:08:03Z,2017-11-02T18:49:14Z,MERGED,True,399,159,8,https://github.com/shinae-woo,Module benchmark,4,[],https://github.com/NetSys/bess/pull/693,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/693#issuecomment-338909252,"This PR 1) ports module benchmark code from .cc (using google benchmark) to .bess 2) adds some benchmarks to see module split/merge inside a single task. Some reasons behind this refactoring are

Using .bess shows more realistic performance (e.g., using mempool)
Packets on the stack should not be used in other modules such as non-recursive inter-module scheduler.
Add more comprehensive benchmark (split, merge, asymmetric pipeline, etc)","Merged, thanks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,694,2017-10-20T21:48:36Z,2017-10-23T17:48:39Z,2017-10-24T06:07:46Z,MERGED,True,25,27,5,https://github.com/shinae-woo,Cleanup gate code,3,[],https://github.com/NetSys/bess/pull/694,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/694,"Simplify Gate source code.
At least, 'arg' is too ambiguous for me, but I wonder if there any reason behind.","Simplify Gate source code.
At least, 'arg' is too ambiguous for me, but I wonder if there any reason behind.",True,{}
NetSys/bess,https://github.com/NetSys/bess,694,2017-10-20T21:48:36Z,2017-10-23T17:48:39Z,2017-10-24T06:07:46Z,MERGED,True,25,27,5,https://github.com/shinae-woo,Cleanup gate code,3,[],https://github.com/NetSys/bess/pull/694,https://github.com/barath,2,https://github.com/NetSys/bess/pull/694#issuecomment-338332573,"Simplify Gate source code.
At least, 'arg' is too ambiguous for me, but I wonder if there any reason behind.","LGTM.  Thanks for cleaning this up.  One minor thing: while cleaning this up, could you add comments for the constructors and comments for the member vars in these classes?",True,{}
NetSys/bess,https://github.com/NetSys/bess,694,2017-10-20T21:48:36Z,2017-10-23T17:48:39Z,2017-10-24T06:07:46Z,MERGED,True,25,27,5,https://github.com/shinae-woo,Cleanup gate code,3,[],https://github.com/NetSys/bess/pull/694,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/694#issuecomment-338335272,"Simplify Gate source code.
At least, 'arg' is too ambiguous for me, but I wonder if there any reason behind.","Sure, I will.",True,{}
NetSys/bess,https://github.com/NetSys/bess,694,2017-10-20T21:48:36Z,2017-10-23T17:48:39Z,2017-10-24T06:07:46Z,MERGED,True,25,27,5,https://github.com/shinae-woo,Cleanup gate code,3,[],https://github.com/NetSys/bess/pull/694,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/694#issuecomment-338339526,"Simplify Gate source code.
At least, 'arg' is too ambiguous for me, but I wonder if there any reason behind.","Codecov Report

Merging #694 into master will decrease coverage by 0.01%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #694      +/-   ##
==========================================
- Coverage   69.64%   69.63%   -0.02%     
==========================================
  Files         218      218              
  Lines       13899    13897       -2     
==========================================
- Hits         9680     9677       -3     
- Misses       4219     4220       +1



Impacted Files
Coverage Δ





core/gate_test.cc
100% <100%> (ø)
⬆️


core/gate.h
75.67% <100%> (-1.25%)
⬇️


core/modules/worker_split.cc
100% <100%> (ø)
⬆️


core/module.h
89.28% <100%> (ø)
⬆️


core/module.cc
87.55% <100%> (ø)
⬆️


core/traffic_class.cc
91.12% <0%> (-0.35%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 98f3751...d272da1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,694,2017-10-20T21:48:36Z,2017-10-23T17:48:39Z,2017-10-24T06:07:46Z,MERGED,True,25,27,5,https://github.com/shinae-woo,Cleanup gate code,3,[],https://github.com/NetSys/bess/pull/694,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/694#issuecomment-338741465,"Simplify Gate source code.
At least, 'arg' is too ambiguous for me, but I wonder if there any reason behind.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,695,2017-10-21T02:11:34Z,2017-10-21T03:02:09Z,2017-10-21T03:02:48Z,MERGED,True,3,3,1,https://github.com/melvinw,bessctl: add resume hooks on module init success,1,[],https://github.com/NetSys/bess/pull/695,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/695,Could dereference a nullptr otherwise.,Could dereference a nullptr otherwise.,True,{}
NetSys/bess,https://github.com/NetSys/bess,695,2017-10-21T02:11:34Z,2017-10-21T03:02:09Z,2017-10-21T03:02:48Z,MERGED,True,3,3,1,https://github.com/melvinw,bessctl: add resume hooks on module init success,1,[],https://github.com/NetSys/bess/pull/695,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/695#issuecomment-338359021,Could dereference a nullptr otherwise.,"Codecov Report

Merging #695 into master will not change coverage.
The diff coverage is 100%.


@@           Coverage Diff           @@
##           master     #695   +/-   ##
=======================================
  Coverage   69.58%   69.58%           
=======================================
  Files         218      218           
  Lines       13928    13928           
=======================================
  Hits         9692     9692           
  Misses       4236     4236



Impacted Files
Coverage Δ





core/bessctl.cc
54.27% <100%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 07c08f1...862d2fc. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,695,2017-10-21T02:11:34Z,2017-10-21T03:02:09Z,2017-10-21T03:02:48Z,MERGED,True,3,3,1,https://github.com/melvinw,bessctl: add resume hooks on module init success,1,[],https://github.com/NetSys/bess/pull/695,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/695#issuecomment-338359531,Could dereference a nullptr otherwise.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,696,2017-10-21T02:22:38Z,2017-10-23T22:02:05Z,2017-11-01T17:54:24Z,MERGED,True,114,5,4,https://github.com/melvinw,worker_split: allow custom worker->gate mappings,1,[],https://github.com/NetSys/bess/pull/696,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/696,"It would be nice if WorkerSplit supported mappings other than f(x) = x.
This would be particularly useful in cases when BESS is configured with
a large number of workers and a module graph with a WorkerSplit module
that has only a few downstream modules. With the current implementation
this would require to a lot of edges from the WorkerSplit to the same
place.  For example, you might want to steer packets from workers on the
same CPU socket towrad the same destination.
To make these sorts of mappings a bit more concise, this commit changes
WorkerSplit to operate in one of two modes:


Packets from worker x are mapped to output gate x. This is the
default mode.


When the worker_gates field is set, packets from a worker x are
mapped to worker_gates[x]. In this mode, packet batches from
workers not mapped to an output gate will be dropped.


The default mode(1) is about 2% slower (141Mpps vs 138Mpps) on my 2.1
GHz Xeon E5-2620 v4 after this change.","It would be nice if WorkerSplit supported mappings other than f(x) = x.
This would be particularly useful in cases when BESS is configured with
a large number of workers and a module graph with a WorkerSplit module
that has only a few downstream modules. With the current implementation
this would require to a lot of edges from the WorkerSplit to the same
place.  For example, you might want to steer packets from workers on the
same CPU socket towrad the same destination.
To make these sorts of mappings a bit more concise, this commit changes
WorkerSplit to operate in one of two modes:


Packets from worker x are mapped to output gate x. This is the
default mode.


When the worker_gates field is set, packets from a worker x are
mapped to worker_gates[x]. In this mode, packet batches from
workers not mapped to an output gate will be dropped.


The default mode(1) is about 2% slower (141Mpps vs 138Mpps) on my 2.1
GHz Xeon E5-2620 v4 after this change.",True,{}
NetSys/bess,https://github.com/NetSys/bess,696,2017-10-21T02:22:38Z,2017-10-23T22:02:05Z,2017-11-01T17:54:24Z,MERGED,True,114,5,4,https://github.com/melvinw,worker_split: allow custom worker->gate mappings,1,[],https://github.com/NetSys/bess/pull/696,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/696#issuecomment-338363568,"It would be nice if WorkerSplit supported mappings other than f(x) = x.
This would be particularly useful in cases when BESS is configured with
a large number of workers and a module graph with a WorkerSplit module
that has only a few downstream modules. With the current implementation
this would require to a lot of edges from the WorkerSplit to the same
place.  For example, you might want to steer packets from workers on the
same CPU socket towrad the same destination.
To make these sorts of mappings a bit more concise, this commit changes
WorkerSplit to operate in one of two modes:


Packets from worker x are mapped to output gate x. This is the
default mode.


When the worker_gates field is set, packets from a worker x are
mapped to worker_gates[x]. In this mode, packet batches from
workers not mapped to an output gate will be dropped.


The default mode(1) is about 2% slower (141Mpps vs 138Mpps) on my 2.1
GHz Xeon E5-2620 v4 after this change.","Codecov Report

Merging #696 into master will increase coverage by 0.02%.
The diff coverage is 95.65%.


@@            Coverage Diff            @@
##           master    #696      +/-   ##
=========================================
+ Coverage   69.57%   69.6%   +0.02%     
=========================================
  Files         218     218              
  Lines       13931   13951      +20     
=========================================
+ Hits         9693    9710      +17     
- Misses       4238    4241       +3



Impacted Files
Coverage Δ





core/modules/worker_split.h
100% <100%> (ø)
⬆️


core/modules/worker_split.cc
96.96% <95.45%> (-3.04%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


pybess/bess.py
41.92% <0%> (-0.24%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d120365...cb43226. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,696,2017-10-21T02:22:38Z,2017-10-23T22:02:05Z,2017-11-01T17:54:24Z,MERGED,True,114,5,4,https://github.com/melvinw,worker_split: allow custom worker->gate mappings,1,[],https://github.com/NetSys/bess/pull/696,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/696#issuecomment-338751278,"It would be nice if WorkerSplit supported mappings other than f(x) = x.
This would be particularly useful in cases when BESS is configured with
a large number of workers and a module graph with a WorkerSplit module
that has only a few downstream modules. With the current implementation
this would require to a lot of edges from the WorkerSplit to the same
place.  For example, you might want to steer packets from workers on the
same CPU socket towrad the same destination.
To make these sorts of mappings a bit more concise, this commit changes
WorkerSplit to operate in one of two modes:


Packets from worker x are mapped to output gate x. This is the
default mode.


When the worker_gates field is set, packets from a worker x are
mapped to worker_gates[x]. In this mode, packet batches from
workers not mapped to an output gate will be dropped.


The default mode(1) is about 2% slower (141Mpps vs 138Mpps) on my 2.1
GHz Xeon E5-2620 v4 after this change.","One high-level comment: since we don't allow one worker to be mapped to multiple gates, it would be more straightforward to use a direct map (e.g., gates={4:99, 5:99, 6:99, 7:99} for your example) than using bitmasks?",True,{}
NetSys/bess,https://github.com/NetSys/bess,696,2017-10-21T02:22:38Z,2017-10-23T22:02:05Z,2017-11-01T17:54:24Z,MERGED,True,114,5,4,https://github.com/melvinw,worker_split: allow custom worker->gate mappings,1,[],https://github.com/NetSys/bess/pull/696,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/696#issuecomment-338753716,"It would be nice if WorkerSplit supported mappings other than f(x) = x.
This would be particularly useful in cases when BESS is configured with
a large number of workers and a module graph with a WorkerSplit module
that has only a few downstream modules. With the current implementation
this would require to a lot of edges from the WorkerSplit to the same
place.  For example, you might want to steer packets from workers on the
same CPU socket towrad the same destination.
To make these sorts of mappings a bit more concise, this commit changes
WorkerSplit to operate in one of two modes:


Packets from worker x are mapped to output gate x. This is the
default mode.


When the worker_gates field is set, packets from a worker x are
mapped to worker_gates[x]. In this mode, packet batches from
workers not mapped to an output gate will be dropped.


The default mode(1) is about 2% slower (141Mpps vs 138Mpps) on my 2.1
GHz Xeon E5-2620 v4 after this change.","I chose bitmasks because they seem more compact. Your way is much easier for humans to read and less error prone, though. Will adopt",True,{}
NetSys/bess,https://github.com/NetSys/bess,696,2017-10-21T02:22:38Z,2017-10-23T22:02:05Z,2017-11-01T17:54:24Z,MERGED,True,114,5,4,https://github.com/melvinw,worker_split: allow custom worker->gate mappings,1,[],https://github.com/NetSys/bess/pull/696,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/696#issuecomment-338759715,"It would be nice if WorkerSplit supported mappings other than f(x) = x.
This would be particularly useful in cases when BESS is configured with
a large number of workers and a module graph with a WorkerSplit module
that has only a few downstream modules. With the current implementation
this would require to a lot of edges from the WorkerSplit to the same
place.  For example, you might want to steer packets from workers on the
same CPU socket towrad the same destination.
To make these sorts of mappings a bit more concise, this commit changes
WorkerSplit to operate in one of two modes:


Packets from worker x are mapped to output gate x. This is the
default mode.


When the worker_gates field is set, packets from a worker x are
mapped to worker_gates[x]. In this mode, packet batches from
workers not mapped to an output gate will be dropped.


The default mode(1) is about 2% slower (141Mpps vs 138Mpps) on my 2.1
GHz Xeon E5-2620 v4 after this change.",Updated and squashed,True,{}
NetSys/bess,https://github.com/NetSys/bess,696,2017-10-21T02:22:38Z,2017-10-23T22:02:05Z,2017-11-01T17:54:24Z,MERGED,True,114,5,4,https://github.com/melvinw,worker_split: allow custom worker->gate mappings,1,[],https://github.com/NetSys/bess/pull/696,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/696#issuecomment-338809987,"It would be nice if WorkerSplit supported mappings other than f(x) = x.
This would be particularly useful in cases when BESS is configured with
a large number of workers and a module graph with a WorkerSplit module
that has only a few downstream modules. With the current implementation
this would require to a lot of edges from the WorkerSplit to the same
place.  For example, you might want to steer packets from workers on the
same CPU socket towrad the same destination.
To make these sorts of mappings a bit more concise, this commit changes
WorkerSplit to operate in one of two modes:


Packets from worker x are mapped to output gate x. This is the
default mode.


When the worker_gates field is set, packets from a worker x are
mapped to worker_gates[x]. In this mode, packet batches from
workers not mapped to an output gate will be dropped.


The default mode(1) is about 2% slower (141Mpps vs 138Mpps) on my 2.1
GHz Xeon E5-2620 v4 after this change.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,697,2017-10-21T03:21:27Z,2017-10-23T21:38:17Z,2017-10-23T21:41:14Z,MERGED,True,144,73,16,https://github.com/melvinw,minor resume hook fixes,5,[],https://github.com/NetSys/bess/pull/697,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/697,I realized I forgot to push a bunch of requested changes before #661 was merged.,I realized I forgot to push a bunch of requested changes before #661 was merged.,True,{}
NetSys/bess,https://github.com/NetSys/bess,697,2017-10-21T03:21:27Z,2017-10-23T21:38:17Z,2017-10-23T21:41:14Z,MERGED,True,144,73,16,https://github.com/melvinw,minor resume hook fixes,5,[],https://github.com/NetSys/bess/pull/697,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/697#issuecomment-338761272,I realized I forgot to push a bunch of requested changes before #661 was merged.,"Codecov Report

Merging #697 into master will decrease coverage by 0.17%.
The diff coverage is 72.41%.


@@            Coverage Diff             @@
##           master     #697      +/-   ##
==========================================
- Coverage   69.64%   69.47%   -0.18%     
==========================================
  Files         218      219       +1     
  Lines       13899    13941      +42     
==========================================
+ Hits         9680     9685       +5     
- Misses       4219     4256      +37



Impacted Files
Coverage Δ





core/gate.cc
93.18% <ø> (-0.16%)
⬇️


core/gate_test.cc
100% <ø> (ø)
⬆️


core/worker.h
95.65% <ø> (ø)
⬆️


core/modules/port_out.cc
78.68% <0%> (-4.92%)
⬇️


core/gate.h
76.31% <100%> (-0.61%)
⬇️


core/resume_hook.cc
91.66% <100%> (-1.67%)
⬇️


core/event.cc
100% <100%> (ø)



pybess/bess.py
42.38% <100%> (ø)
⬆️


core/module.h
89.28% <100%> (ø)
⬆️


core/bessctl.cc
54.17% <40%> (-0.11%)
⬇️


... and 19 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 98f3751...70f8253. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,697,2017-10-21T03:21:27Z,2017-10-23T21:38:17Z,2017-10-23T21:41:14Z,MERGED,True,144,73,16,https://github.com/melvinw,minor resume hook fixes,5,[],https://github.com/NetSys/bess/pull/697,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/697#issuecomment-338804561,I realized I forgot to push a bunch of requested changes before #661 was merged.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,700,2017-10-25T00:36:34Z,2017-11-02T00:13:49Z,2017-11-02T18:21:46Z,MERGED,True,269,68,6,https://github.com/chris3torek,add state save/restore code for wildcard match module,1,[],https://github.com/NetSys/bess/pull/700,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/700,"This series of three commits:

adds a Python test for wildcard match
adds the same kind of state save/load for wildcard match as for exact match
removes the old (wildcard-match specific) state-grabber

Commit 3 is entirely optional, and if it is to be done, we can simplify the new code by removing the leftover template-ized internal functions.  I figured I'd put it up in this form first, for reviewing.","This series of three commits:

adds a Python test for wildcard match
adds the same kind of state save/load for wildcard match as for exact match
removes the old (wildcard-match specific) state-grabber

Commit 3 is entirely optional, and if it is to be done, we can simplify the new code by removing the leftover template-ized internal functions.  I figured I'd put it up in this form first, for reviewing.",True,{}
NetSys/bess,https://github.com/NetSys/bess,700,2017-10-25T00:36:34Z,2017-11-02T00:13:49Z,2017-11-02T18:21:46Z,MERGED,True,269,68,6,https://github.com/chris3torek,add state save/restore code for wildcard match module,1,[],https://github.com/NetSys/bess/pull/700,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/700#issuecomment-339435101,"This series of three commits:

adds a Python test for wildcard match
adds the same kind of state save/load for wildcard match as for exact match
removes the old (wildcard-match specific) state-grabber

Commit 3 is entirely optional, and if it is to be done, we can simplify the new code by removing the leftover template-ized internal functions.  I figured I'd put it up in this form first, for reviewing.","Codecov Report

Merging #700 into master will increase coverage by 0.16%.
The diff coverage is 44.44%.


@@            Coverage Diff             @@
##           master     #700      +/-   ##
==========================================
+ Coverage   69.55%   69.72%   +0.16%     
==========================================
  Files         219      219              
  Lines       13968    13980      +12     
==========================================
+ Hits         9716     9748      +32     
+ Misses       4252     4232      -20



Impacted Files
Coverage Δ





core/modules/wildcard_match.h
95.45% <ø> (ø)
⬆️


core/utils/endian.cc
92.3% <ø> (+42.3%)
⬆️


core/utils/endian.h
86.04% <ø> (ø)
⬆️


core/modules/wildcard_match.cc
79.82% <44.44%> (+6.32%)
⬆️


core/traffic_class.cc
90.78% <0%> (+0.34%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6f99582...0294193. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,700,2017-10-25T00:36:34Z,2017-11-02T00:13:49Z,2017-11-02T18:21:46Z,MERGED,True,269,68,6,https://github.com/chris3torek,add state save/restore code for wildcard match module,1,[],https://github.com/NetSys/bess/pull/700,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/700#issuecomment-340604326,"This series of three commits:

adds a Python test for wildcard match
adds the same kind of state save/load for wildcard match as for exact match
removes the old (wildcard-match specific) state-grabber

Commit 3 is entirely optional, and if it is to be done, we can simplify the new code by removing the leftover template-ized internal functions.  I figured I'd put it up in this form first, for reviewing.","I rebased, squashed, de-template-ized, and re-arranged everything a bit to make the diffs as nice as possible.",True,{}
NetSys/bess,https://github.com/NetSys/bess,700,2017-10-25T00:36:34Z,2017-11-02T00:13:49Z,2017-11-02T18:21:46Z,MERGED,True,269,68,6,https://github.com/chris3torek,add state save/restore code for wildcard match module,1,[],https://github.com/NetSys/bess/pull/700,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/700#issuecomment-341237666,"This series of three commits:

adds a Python test for wildcard match
adds the same kind of state save/load for wildcard match as for exact match
removes the old (wildcard-match specific) state-grabber

Commit 3 is entirely optional, and if it is to be done, we can simplify the new code by removing the leftover template-ized internal functions.  I figured I'd put it up in this form first, for reviewing.",(re-rebased/squashed with the comment typo fixed and @ddiproietto's improved python bit),True,{}
NetSys/bess,https://github.com/NetSys/bess,700,2017-10-25T00:36:34Z,2017-11-02T00:13:49Z,2017-11-02T18:21:46Z,MERGED,True,269,68,6,https://github.com/chris3torek,add state save/restore code for wildcard match module,1,[],https://github.com/NetSys/bess/pull/700,https://github.com/ddiproietto,5,https://github.com/NetSys/bess/pull/700#issuecomment-341281001,"This series of three commits:

adds a Python test for wildcard match
adds the same kind of state save/load for wildcard match as for exact match
removes the old (wildcard-match specific) state-grabber

Commit 3 is entirely optional, and if it is to be done, we can simplify the new code by removing the leftover template-ized internal functions.  I figured I'd put it up in this form first, for reviewing.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,701,2017-10-25T20:57:19Z,2017-10-26T01:01:27Z,2017-11-01T17:54:22Z,MERGED,True,5,1,1,https://github.com/melvinw,port_out: properly initialize worker-queue mapping,1,[],https://github.com/NetSys/bess/pull/701,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/701,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,701,2017-10-25T20:57:19Z,2017-10-26T01:01:27Z,2017-11-01T17:54:22Z,MERGED,True,5,1,1,https://github.com/melvinw,port_out: properly initialize worker-queue mapping,1,[],https://github.com/NetSys/bess/pull/701,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/701#issuecomment-339516805,,"Codecov Report

Merging #701 into master will increase coverage by 0.01%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #701      +/-   ##
==========================================
+ Coverage    69.5%   69.52%   +0.01%     
==========================================
  Files         219      219              
  Lines       13948    13950       +2     
==========================================
+ Hits         9695     9699       +4     
+ Misses       4253     4251       -2



Impacted Files
Coverage Δ





core/modules/port_out.cc
82.53% <100%> (+3.85%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7222f50...2724b44. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,704,2017-10-27T17:41:49Z,2017-10-30T17:04:32Z,2017-10-30T22:27:12Z,MERGED,True,35,0,2,https://github.com/chris3torek,Fix em bug,2,[],https://github.com/NetSys/bess/pull/704,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/704,"Two part commit sequence (should be merged as a real merge): unit test that exposes the bug, and the fix.  Fixes #702","Two part commit sequence (should be merged as a real merge): unit test that exposes the bug, and the fix.  Fixes #702",True,{}
NetSys/bess,https://github.com/NetSys/bess,704,2017-10-27T17:41:49Z,2017-10-30T17:04:32Z,2017-10-30T22:27:12Z,MERGED,True,35,0,2,https://github.com/chris3torek,Fix em bug,2,[],https://github.com/NetSys/bess/pull/704,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/704#issuecomment-340046728,"Two part commit sequence (should be merged as a real merge): unit test that exposes the bug, and the fix.  Fixes #702","Codecov Report

Merging #704 into master will increase coverage by 0.03%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #704      +/-   ##
==========================================
+ Coverage   69.45%   69.49%   +0.03%     
==========================================
  Files         219      219              
  Lines       13979    13997      +18     
==========================================
+ Hits         9709     9727      +18     
  Misses       4270     4270



Impacted Files
Coverage Δ





core/utils/exact_match_table_test.cc
100% <100%> (ø)
⬆️


core/utils/exact_match_table.h
88.8% <100%> (+0.52%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9534cd6...fd476aa. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,704,2017-10-27T17:41:49Z,2017-10-30T17:04:32Z,2017-10-30T22:27:12Z,MERGED,True,35,0,2,https://github.com/chris3torek,Fix em bug,2,[],https://github.com/NetSys/bess/pull/704,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/704#issuecomment-340513213,"Two part commit sequence (should be merged as a real merge): unit test that exposes the bug, and the fix.  Fixes #702","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,705,2017-10-27T21:44:02Z,2017-10-31T23:09:27Z,2017-11-01T17:54:20Z,MERGED,True,17,7,2,https://github.com/melvinw,some test framework fixes/improvements,2,[],https://github.com/NetSys/bess/pull/705,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/705,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,705,2017-10-27T21:44:02Z,2017-10-31T23:09:27Z,2017-11-01T17:54:20Z,MERGED,True,17,7,2,https://github.com/melvinw,some test framework fixes/improvements,2,[],https://github.com/NetSys/bess/pull/705,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/705#issuecomment-340111364,,"Codecov Report

Merging #705 into master will increase coverage by 0.05%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #705      +/-   ##
==========================================
+ Coverage   69.48%   69.54%   +0.05%     
==========================================
  Files         219      219              
  Lines       13997    13968      -29     
==========================================
- Hits         9726     9714      -12     
+ Misses       4271     4254      -17



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ced4840...6758871. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,705,2017-10-27T21:44:02Z,2017-10-31T23:09:27Z,2017-11-01T17:54:20Z,MERGED,True,17,7,2,https://github.com/melvinw,some test framework fixes/improvements,2,[],https://github.com/NetSys/bess/pull/705,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/705#issuecomment-340933894,,Thank you 👍,True,{}
NetSys/bess,https://github.com/NetSys/bess,706,2017-10-31T04:32:54Z,2017-11-03T20:41:17Z,2017-11-06T17:49:44Z,MERGED,True,57,58,5,https://github.com/shinae-woo,Make task being pointer than reference for LeafTC,1,[],https://github.com/NetSys/bess/pull/706,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/706,"While doing refactoring for intra-task scheduling, the task can have internally malloc()ed data fields, so shallow copy should not work.
Using pointer would more make sense when we will extend the Task functionality (e.g., Timer).","While doing refactoring for intra-task scheduling, the task can have internally malloc()ed data fields, so shallow copy should not work.
Using pointer would more make sense when we will extend the Task functionality (e.g., Timer).",True,{}
NetSys/bess,https://github.com/NetSys/bess,706,2017-10-31T04:32:54Z,2017-11-03T20:41:17Z,2017-11-06T17:49:44Z,MERGED,True,57,58,5,https://github.com/shinae-woo,Make task being pointer than reference for LeafTC,1,[],https://github.com/NetSys/bess/pull/706,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/706#issuecomment-340663587,"While doing refactoring for intra-task scheduling, the task can have internally malloc()ed data fields, so shallow copy should not work.
Using pointer would more make sense when we will extend the Task functionality (e.g., Timer).","Codecov Report

Merging #706 into master will increase coverage by 0.05%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #706      +/-   ##
==========================================
+ Coverage   69.48%   69.53%   +0.05%     
==========================================
  Files         219      219              
  Lines       13997    13961      -36     
==========================================
- Hits         9726     9708      -18     
+ Misses       4271     4253      -18



Impacted Files
Coverage Δ





core/traffic_class.cc
90.81% <100%> (+0.03%)
⬆️


core/module.cc
87.55% <100%> (ø)
⬆️


core/traffic_class_test.cc
99.4% <100%> (-0.02%)
⬇️


core/traffic_class.h
89.58% <100%> (ø)
⬆️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ced4840...3dc972b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,706,2017-10-31T04:32:54Z,2017-11-03T20:41:17Z,2017-11-06T17:49:44Z,MERGED,True,57,58,5,https://github.com/shinae-woo,Make task being pointer than reference for LeafTC,1,[],https://github.com/NetSys/bess/pull/706,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/706#issuecomment-341821640,"While doing refactoring for intra-task scheduling, the task can have internally malloc()ed data fields, so shallow copy should not work.
Using pointer would more make sense when we will extend the Task functionality (e.g., Timer).",,True,{}
NetSys/bess,https://github.com/NetSys/bess,707,2017-10-31T23:52:51Z,2017-11-04T00:13:34Z,2017-11-04T02:08:27Z,MERGED,True,432,379,12,https://github.com/shinae-woo,Task graph,8,[],https://github.com/NetSys/bess/pull/707,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/707,"This PR partly address the issue on #703, issued by @nemethf.
Now the time to start becomes about 6s from 3min 20s.
$ time bessctl daemon start -- run add_edge
real        0m6.298s
user        0m1.436s
sys        0m0.388s
This includes many changes in source code including

Remove module_graph_ data structure: We don't need to manage multiple module graphs as makes maintenance harder, and higher risks for potential bugs.
Follow up from 1, all the module graphs changes should be maintained at one place - module graphs. No direct module connection/disconnection is not allowed any longer. (and now those are private functions of modules)
Makes the generating a task graph as a default resume hook. It does not update the task graph per-connection updates but updates at once right before resume.
The resume hooks for updating task graph only regenerate task graphs if there are any changes on module connections. So just resume for updating module parameters or measure some statistics will not trigger task graphs update.

More optimizations would be required. I leave these as a future PR or issues to reduce the overhead of single big PR. (current PR is huge enough)

A single module connection changes will trigger the whole task graph regeneration. As @nemethf suggested, subgraph update only regarding changes would improve the performance.
Updating workers per task or checking constraints can also be put as a resume hook. At least, checking constraints and updating workers per task should be managed to the same control flow wherever it is. Now one is contolled by pybess and while the other is controlled by bessd.
It would be better if we limit the role of bessctl.cc not to directly changes the internal of bessd (such as TC), and migrate logics into the separate classes so that a single file takes the responsibility of regarding all related changes. (TC tree is now managed in bessctl.cc, module.cc, worker.cc now)","This PR partly address the issue on #703, issued by @nemethf.
Now the time to start becomes about 6s from 3min 20s.
$ time bessctl daemon start -- run add_edge
real        0m6.298s
user        0m1.436s
sys        0m0.388s
This includes many changes in source code including

Remove module_graph_ data structure: We don't need to manage multiple module graphs as makes maintenance harder, and higher risks for potential bugs.
Follow up from 1, all the module graphs changes should be maintained at one place - module graphs. No direct module connection/disconnection is not allowed any longer. (and now those are private functions of modules)
Makes the generating a task graph as a default resume hook. It does not update the task graph per-connection updates but updates at once right before resume.
The resume hooks for updating task graph only regenerate task graphs if there are any changes on module connections. So just resume for updating module parameters or measure some statistics will not trigger task graphs update.

More optimizations would be required. I leave these as a future PR or issues to reduce the overhead of single big PR. (current PR is huge enough)

A single module connection changes will trigger the whole task graph regeneration. As @nemethf suggested, subgraph update only regarding changes would improve the performance.
Updating workers per task or checking constraints can also be put as a resume hook. At least, checking constraints and updating workers per task should be managed to the same control flow wherever it is. Now one is contolled by pybess and while the other is controlled by bessd.
It would be better if we limit the role of bessctl.cc not to directly changes the internal of bessd (such as TC), and migrate logics into the separate classes so that a single file takes the responsibility of regarding all related changes. (TC tree is now managed in bessctl.cc, module.cc, worker.cc now)",True,{}
NetSys/bess,https://github.com/NetSys/bess,707,2017-10-31T23:52:51Z,2017-11-04T00:13:34Z,2017-11-04T02:08:27Z,MERGED,True,432,379,12,https://github.com/shinae-woo,Task graph,8,[],https://github.com/NetSys/bess/pull/707,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/707#issuecomment-340945447,"This PR partly address the issue on #703, issued by @nemethf.
Now the time to start becomes about 6s from 3min 20s.
$ time bessctl daemon start -- run add_edge
real        0m6.298s
user        0m1.436s
sys        0m0.388s
This includes many changes in source code including

Remove module_graph_ data structure: We don't need to manage multiple module graphs as makes maintenance harder, and higher risks for potential bugs.
Follow up from 1, all the module graphs changes should be maintained at one place - module graphs. No direct module connection/disconnection is not allowed any longer. (and now those are private functions of modules)
Makes the generating a task graph as a default resume hook. It does not update the task graph per-connection updates but updates at once right before resume.
The resume hooks for updating task graph only regenerate task graphs if there are any changes on module connections. So just resume for updating module parameters or measure some statistics will not trigger task graphs update.

More optimizations would be required. I leave these as a future PR or issues to reduce the overhead of single big PR. (current PR is huge enough)

A single module connection changes will trigger the whole task graph regeneration. As @nemethf suggested, subgraph update only regarding changes would improve the performance.
Updating workers per task or checking constraints can also be put as a resume hook. At least, checking constraints and updating workers per task should be managed to the same control flow wherever it is. Now one is contolled by pybess and while the other is controlled by bessd.
It would be better if we limit the role of bessctl.cc not to directly changes the internal of bessd (such as TC), and migrate logics into the separate classes so that a single file takes the responsibility of regarding all related changes. (TC tree is now managed in bessctl.cc, module.cc, worker.cc now)","Codecov Report

Merging #707 into master will increase coverage by 0.22%.
The diff coverage is 93.01%.


@@            Coverage Diff             @@
##           master     #707      +/-   ##
==========================================
+ Coverage   69.55%   69.78%   +0.22%     
==========================================
  Files         219      220       +1     
  Lines       13968    14031      +63     
==========================================
+ Hits         9716     9791      +75     
+ Misses       4252     4240      -12



Impacted Files
Coverage Δ





core/module_test.cc
96.42% <100%> (+0.06%)
⬆️


core/metadata_test.cc
100% <100%> (ø)
⬆️


core/module.h
89.51% <100%> (+0.22%)
⬆️


core/gate.h
74.28% <100%> (-2.04%)
⬇️


core/gate_test.cc
100% <100%> (ø)
⬆️


core/gate.cc
94.11% <100%> (+0.93%)
⬆️


core/resume_hooks/task_graph.h
100% <100%> (ø)



core/bessctl.cc
54.17% <60%> (ø)
⬆️


core/resume_hooks/task_graph.cc
78.57% <78.57%> (ø)



core/module_graph.cc
86.95% <92.18%> (+5.19%)
⬆️


... and 13 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6f99582...01134a7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,707,2017-10-31T23:52:51Z,2017-11-04T00:13:34Z,2017-11-04T02:08:27Z,MERGED,True,432,379,12,https://github.com/shinae-woo,Task graph,8,[],https://github.com/NetSys/bess/pull/707,https://github.com/barath,3,https://github.com/NetSys/bess/pull/707#issuecomment-341234682,"This PR partly address the issue on #703, issued by @nemethf.
Now the time to start becomes about 6s from 3min 20s.
$ time bessctl daemon start -- run add_edge
real        0m6.298s
user        0m1.436s
sys        0m0.388s
This includes many changes in source code including

Remove module_graph_ data structure: We don't need to manage multiple module graphs as makes maintenance harder, and higher risks for potential bugs.
Follow up from 1, all the module graphs changes should be maintained at one place - module graphs. No direct module connection/disconnection is not allowed any longer. (and now those are private functions of modules)
Makes the generating a task graph as a default resume hook. It does not update the task graph per-connection updates but updates at once right before resume.
The resume hooks for updating task graph only regenerate task graphs if there are any changes on module connections. So just resume for updating module parameters or measure some statistics will not trigger task graphs update.

More optimizations would be required. I leave these as a future PR or issues to reduce the overhead of single big PR. (current PR is huge enough)

A single module connection changes will trigger the whole task graph regeneration. As @nemethf suggested, subgraph update only regarding changes would improve the performance.
Updating workers per task or checking constraints can also be put as a resume hook. At least, checking constraints and updating workers per task should be managed to the same control flow wherever it is. Now one is contolled by pybess and while the other is controlled by bessd.
It would be better if we limit the role of bessctl.cc not to directly changes the internal of bessd (such as TC), and migrate logics into the separate classes so that a single file takes the responsibility of regarding all related changes. (TC tree is now managed in bessctl.cc, module.cc, worker.cc now)",LGTM; Panda should also take a look.,True,{}
NetSys/bess,https://github.com/NetSys/bess,707,2017-10-31T23:52:51Z,2017-11-04T00:13:34Z,2017-11-04T02:08:27Z,MERGED,True,432,379,12,https://github.com/shinae-woo,Task graph,8,[],https://github.com/NetSys/bess/pull/707,https://github.com/apanda,4,https://github.com/NetSys/bess/pull/707#issuecomment-341853403,"This PR partly address the issue on #703, issued by @nemethf.
Now the time to start becomes about 6s from 3min 20s.
$ time bessctl daemon start -- run add_edge
real        0m6.298s
user        0m1.436s
sys        0m0.388s
This includes many changes in source code including

Remove module_graph_ data structure: We don't need to manage multiple module graphs as makes maintenance harder, and higher risks for potential bugs.
Follow up from 1, all the module graphs changes should be maintained at one place - module graphs. No direct module connection/disconnection is not allowed any longer. (and now those are private functions of modules)
Makes the generating a task graph as a default resume hook. It does not update the task graph per-connection updates but updates at once right before resume.
The resume hooks for updating task graph only regenerate task graphs if there are any changes on module connections. So just resume for updating module parameters or measure some statistics will not trigger task graphs update.

More optimizations would be required. I leave these as a future PR or issues to reduce the overhead of single big PR. (current PR is huge enough)

A single module connection changes will trigger the whole task graph regeneration. As @nemethf suggested, subgraph update only regarding changes would improve the performance.
Updating workers per task or checking constraints can also be put as a resume hook. At least, checking constraints and updating workers per task should be managed to the same control flow wherever it is. Now one is contolled by pybess and while the other is controlled by bessd.
It would be better if we limit the role of bessctl.cc not to directly changes the internal of bessd (such as TC), and migrate logics into the separate classes so that a single file takes the responsibility of regarding all related changes. (TC tree is now managed in bessctl.cc, module.cc, worker.cc now)",Thank you! Will merge once Travis is done.,True,{}
NetSys/bess,https://github.com/NetSys/bess,707,2017-10-31T23:52:51Z,2017-11-04T00:13:34Z,2017-11-04T02:08:27Z,MERGED,True,432,379,12,https://github.com/shinae-woo,Task graph,8,[],https://github.com/NetSys/bess/pull/707,https://github.com/apanda,5,https://github.com/NetSys/bess/pull/707#issuecomment-341856438,"This PR partly address the issue on #703, issued by @nemethf.
Now the time to start becomes about 6s from 3min 20s.
$ time bessctl daemon start -- run add_edge
real        0m6.298s
user        0m1.436s
sys        0m0.388s
This includes many changes in source code including

Remove module_graph_ data structure: We don't need to manage multiple module graphs as makes maintenance harder, and higher risks for potential bugs.
Follow up from 1, all the module graphs changes should be maintained at one place - module graphs. No direct module connection/disconnection is not allowed any longer. (and now those are private functions of modules)
Makes the generating a task graph as a default resume hook. It does not update the task graph per-connection updates but updates at once right before resume.
The resume hooks for updating task graph only regenerate task graphs if there are any changes on module connections. So just resume for updating module parameters or measure some statistics will not trigger task graphs update.

More optimizations would be required. I leave these as a future PR or issues to reduce the overhead of single big PR. (current PR is huge enough)

A single module connection changes will trigger the whole task graph regeneration. As @nemethf suggested, subgraph update only regarding changes would improve the performance.
Updating workers per task or checking constraints can also be put as a resume hook. At least, checking constraints and updating workers per task should be managed to the same control flow wherever it is. Now one is contolled by pybess and while the other is controlled by bessd.
It would be better if we limit the role of bessctl.cc not to directly changes the internal of bessd (such as TC), and migrate logics into the separate classes so that a single file takes the responsibility of regarding all related changes. (TC tree is now managed in bessctl.cc, module.cc, worker.cc now)",Thanks,True,{}
NetSys/bess,https://github.com/NetSys/bess,709,2017-11-01T19:00:00Z,2017-11-02T16:05:49Z,2017-11-03T20:44:07Z,MERGED,True,53,14,3,https://github.com/shinae-woo,Burn cycles for performance tests,2,[],https://github.com/NetSys/bess/pull/709,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/709,"This PR is following up for #693, module benchmarks.
Now, Bypass burns CPU cycles for per-batch, per-packet, and per-byte. In this way, we can see how much per-batch cost can be amortized by merging back batches after splitting.","This PR is following up for #693, module benchmarks.
Now, Bypass burns CPU cycles for per-batch, per-packet, and per-byte. In this way, we can see how much per-batch cost can be amortized by merging back batches after splitting.",True,{}
NetSys/bess,https://github.com/NetSys/bess,709,2017-11-01T19:00:00Z,2017-11-02T16:05:49Z,2017-11-03T20:44:07Z,MERGED,True,53,14,3,https://github.com/shinae-woo,Burn cycles for performance tests,2,[],https://github.com/NetSys/bess/pull/709,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/709#issuecomment-341214500,"This PR is following up for #693, module benchmarks.
Now, Bypass burns CPU cycles for per-batch, per-packet, and per-byte. In this way, we can see how much per-batch cost can be amortized by merging back batches after splitting.","Codecov Report

Merging #709 into master will increase coverage by 0.15%.
The diff coverage is 60%.


@@            Coverage Diff             @@
##           master     #709      +/-   ##
==========================================
+ Coverage   69.55%   69.71%   +0.15%     
==========================================
  Files         219      219              
  Lines       13968    13995      +27     
==========================================
+ Hits         9716     9757      +41     
+ Misses       4252     4238      -14



Impacted Files
Coverage Δ





core/modules/bypass.h
100% <ø> (ø)
⬆️


core/modules/bypass.cc
68.42% <60%> (-31.58%)
⬇️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/modules/wildcard_match.h
95.45% <0%> (ø)
⬆️


core/traffic_class.cc
90.78% <0%> (+0.34%)
⬆️


core/worker.h
100% <0%> (+4.34%)
⬆️


core/modules/wildcard_match.cc
79.82% <0%> (+6.32%)
⬆️


core/utils/endian.cc
92.3% <0%> (+42.3%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6f99582...d7fa041. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,709,2017-11-01T19:00:00Z,2017-11-02T16:05:49Z,2017-11-03T20:44:07Z,MERGED,True,53,14,3,https://github.com/shinae-woo,Burn cycles for performance tests,2,[],https://github.com/NetSys/bess/pull/709,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/709#issuecomment-341821328,"This PR is following up for #693, module benchmarks.
Now, Bypass burns CPU cycles for per-batch, per-packet, and per-byte. In this way, we can see how much per-batch cost can be amortized by merging back batches after splitting.",cat?!,True,{}
NetSys/bess,https://github.com/NetSys/bess,709,2017-11-01T19:00:00Z,2017-11-02T16:05:49Z,2017-11-03T20:44:07Z,MERGED,True,53,14,3,https://github.com/shinae-woo,Burn cycles for performance tests,2,[],https://github.com/NetSys/bess/pull/709,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/709#issuecomment-341821556,"This PR is following up for #693, module benchmarks.
Now, Bypass burns CPU cycles for per-batch, per-packet, and per-byte. In this way, we can see how much per-batch cost can be amortized by merging back batches after splitting.",AH!,True,{}
NetSys/bess,https://github.com/NetSys/bess,709,2017-11-01T19:00:00Z,2017-11-02T16:05:49Z,2017-11-03T20:44:07Z,MERGED,True,53,14,3,https://github.com/shinae-woo,Burn cycles for performance tests,2,[],https://github.com/NetSys/bess/pull/709,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/709#issuecomment-341821877,"This PR is following up for #693, module benchmarks.
Now, Bypass burns CPU cycles for per-batch, per-packet, and per-byte. In this way, we can see how much per-batch cost can be amortized by merging back batches after splitting.",Thanks! :),True,{'HEART': ['https://github.com/shinae-woo']}
NetSys/bess,https://github.com/NetSys/bess,709,2017-11-01T19:00:00Z,2017-11-02T16:05:49Z,2017-11-03T20:44:07Z,MERGED,True,53,14,3,https://github.com/shinae-woo,Burn cycles for performance tests,2,[],https://github.com/NetSys/bess/pull/709,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/709#issuecomment-341822041,"This PR is following up for #693, module benchmarks.
Now, Bypass burns CPU cycles for per-batch, per-packet, and per-byte. In this way, we can see how much per-batch cost can be amortized by merging back batches after splitting.",Have a second cat since I made you wait!,True,{'HEART': ['https://github.com/shinae-woo']}
NetSys/bess,https://github.com/NetSys/bess,710,2017-11-02T18:11:30Z,2017-11-03T20:43:43Z,2017-11-08T00:38:11Z,MERGED,True,45,0,3,https://github.com/chris3torek,nat: add get/set arg/state,1,[],https://github.com/NetSys/bess/pull/710,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/710,"Here the set of IP addresses being NAT-ed is all arguments,
rather than all state.  So we don't (yet) define a NATConfig.
This may change if necessary.

This PR is mainly for @apanda to look at, as it doesn't have the ""move args to config"" that @ddiproietto and I talked about.  But we can use it in this form if we decide that's not important after all.","Here the set of IP addresses being NAT-ed is all arguments,
rather than all state.  So we don't (yet) define a NATConfig.
This may change if necessary.

This PR is mainly for @apanda to look at, as it doesn't have the ""move args to config"" that @ddiproietto and I talked about.  But we can use it in this form if we decide that's not important after all.",True,{}
NetSys/bess,https://github.com/NetSys/bess,710,2017-11-02T18:11:30Z,2017-11-03T20:43:43Z,2017-11-08T00:38:11Z,MERGED,True,45,0,3,https://github.com/chris3torek,nat: add get/set arg/state,1,[],https://github.com/NetSys/bess/pull/710,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/710#issuecomment-341521951,"Here the set of IP addresses being NAT-ed is all arguments,
rather than all state.  So we don't (yet) define a NATConfig.
This may change if necessary.

This PR is mainly for @apanda to look at, as it doesn't have the ""move args to config"" that @ddiproietto and I talked about.  But we can use it in this form if we decide that's not important after all.","Codecov Report

Merging #710 into master will increase coverage by 0.08%.
The diff coverage is 91.66%.


@@            Coverage Diff             @@
##           master     #710      +/-   ##
==========================================
+ Coverage   69.64%   69.72%   +0.08%     
==========================================
  Files         219      219              
  Lines       14024    14007      -17     
==========================================
  Hits         9767     9767              
+ Misses       4257     4240      -17



Impacted Files
Coverage Δ





core/modules/nat.h
100% <ø> (ø)
⬆️


core/modules/nat.cc
81.81% <91.66%> (+0.13%)
⬆️


core/utils/simd.h
100% <0%> (ø)
⬆️


pybess/bess.py
42.38% <0%> (+0.23%)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6fd7f6a...1910759. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,710,2017-11-02T18:11:30Z,2017-11-03T20:43:43Z,2017-11-08T00:38:11Z,MERGED,True,45,0,3,https://github.com/chris3torek,nat: add get/set arg/state,1,[],https://github.com/NetSys/bess/pull/710,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/710#issuecomment-341822010,"Here the set of IP addresses being NAT-ed is all arguments,
rather than all state.  So we don't (yet) define a NATConfig.
This may change if necessary.

This PR is mainly for @apanda to look at, as it doesn't have the ""move args to config"" that @ddiproietto and I talked about.  But we can use it in this form if we decide that's not important after all.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,711,2017-11-02T18:52:03Z,2017-11-07T01:54:18Z,2018-06-28T22:07:39Z,MERGED,True,168,80,7,https://github.com/apanda,Make NAT configuration more flexible,10,[],https://github.com/NetSys/bess/pull/711,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/711,This PR allows users to decide what ports the NAT should use at any given time. This not ready until merging with PR #710,This PR allows users to decide what ports the NAT should use at any given time. This not ready until merging with PR #710,True,{}
NetSys/bess,https://github.com/NetSys/bess,711,2017-11-02T18:52:03Z,2017-11-07T01:54:18Z,2018-06-28T22:07:39Z,MERGED,True,168,80,7,https://github.com/apanda,Make NAT configuration more flexible,10,[],https://github.com/NetSys/bess/pull/711,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/711#issuecomment-341574073,This PR allows users to decide what ports the NAT should use at any given time. This not ready until merging with PR #710,"Codecov Report

Merging #711 into master will decrease coverage by 0.03%.
The diff coverage is 72.05%.


@@            Coverage Diff             @@
##           master     #711      +/-   ##
==========================================
- Coverage   69.84%   69.81%   -0.04%     
==========================================
  Files         220      220              
  Lines       14007    14065      +58     
==========================================
+ Hits         9783     9819      +36     
- Misses       4224     4246      +22



Impacted Files
Coverage Δ





core/modules/nat.h
100% <ø> (ø)
⬆️


core/modules/nat.cc
82.65% <72.05%> (+0.84%)
⬆️


core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 683f7df...260082e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,711,2017-11-02T18:52:03Z,2017-11-07T01:54:18Z,2018-06-28T22:07:39Z,MERGED,True,168,80,7,https://github.com/apanda,Make NAT configuration more flexible,10,[],https://github.com/NetSys/bess/pull/711,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/711#issuecomment-342350089,This PR allows users to decide what ports the NAT should use at any given time. This not ready until merging with PR #710,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,712,2017-11-03T13:36:44Z,2017-11-07T01:48:06Z,2017-11-07T01:48:43Z,MERGED,True,1,1,1,https://github.com/nemethf,Don't color stderr in case of dumb terminals,1,[],https://github.com/NetSys/bess/pull/712,https://github.com/nemethf,1,https://github.com/NetSys/bess/pull/712,"This behavior mimics gcc and helps running (""compiling"") bess scripts
from Emacs.  See:
https://github.com/gcc-mirror/gcc/blob/7a5024dcd3f8c7a6211f5226f538088ee6126dbc/gcc/diagnostic-color.c#L217","This behavior mimics gcc and helps running (""compiling"") bess scripts
from Emacs.  See:
https://github.com/gcc-mirror/gcc/blob/7a5024dcd3f8c7a6211f5226f538088ee6126dbc/gcc/diagnostic-color.c#L217",True,{}
NetSys/bess,https://github.com/NetSys/bess,712,2017-11-03T13:36:44Z,2017-11-07T01:48:06Z,2017-11-07T01:48:43Z,MERGED,True,1,1,1,https://github.com/nemethf,Don't color stderr in case of dumb terminals,1,[],https://github.com/NetSys/bess/pull/712,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/712#issuecomment-341714604,"This behavior mimics gcc and helps running (""compiling"") bess scripts
from Emacs.  See:
https://github.com/gcc-mirror/gcc/blob/7a5024dcd3f8c7a6211f5226f538088ee6126dbc/gcc/diagnostic-color.c#L217","Codecov Report

Merging #712 into master will increase coverage by 0.06%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #712      +/-   ##
==========================================
+ Coverage   69.64%   69.71%   +0.06%     
==========================================
  Files         219      219              
  Lines       14024    13995      -29     
==========================================
- Hits         9767     9756      -11     
+ Misses       4257     4239      -18



Impacted Files
Coverage Δ





core/traffic_class.cc
90.44% <0%> (-0.35%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


pybess/bess.py
42.38% <0%> (+0.23%)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6fd7f6a...1f44703. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,712,2017-11-03T13:36:44Z,2017-11-07T01:48:06Z,2017-11-07T01:48:43Z,MERGED,True,1,1,1,https://github.com/nemethf,Don't color stderr in case of dumb terminals,1,[],https://github.com/NetSys/bess/pull/712,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/712#issuecomment-342349070,"This behavior mimics gcc and helps running (""compiling"") bess scripts
from Emacs.  See:
https://github.com/gcc-mirror/gcc/blob/7a5024dcd3f8c7a6211f5226f538088ee6126dbc/gcc/diagnostic-color.c#L217",Thanks,True,{}
NetSys/bess,https://github.com/NetSys/bess,715,2017-11-08T00:39:59Z,2017-11-10T21:45:31Z,2017-11-15T19:40:05Z,MERGED,True,332,33,7,https://github.com/chris3torek,URL filter updates,4,[],https://github.com/NetSys/bess/pull/715,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/715,"Two part commit:

first one adds a cheesy trie traversal into vector so that we can do state-dump
second one adds state save/load to url_filter, adds tests, fixes bugs so that tests pass","Two part commit:

first one adds a cheesy trie traversal into vector so that we can do state-dump
second one adds state save/load to url_filter, adds tests, fixes bugs so that tests pass",True,{}
NetSys/bess,https://github.com/NetSys/bess,715,2017-11-08T00:39:59Z,2017-11-10T21:45:31Z,2017-11-15T19:40:05Z,MERGED,True,332,33,7,https://github.com/chris3torek,URL filter updates,4,[],https://github.com/NetSys/bess/pull/715,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/715#issuecomment-342714964,"Two part commit:

first one adds a cheesy trie traversal into vector so that we can do state-dump
second one adds state save/load to url_filter, adds tests, fixes bugs so that tests pass",The address and leak sanitizer is suggesting that the http parser is overrunning buffers.  I haven't dug into that code yet...,True,{}
NetSys/bess,https://github.com/NetSys/bess,715,2017-11-08T00:39:59Z,2017-11-10T21:45:31Z,2017-11-15T19:40:05Z,MERGED,True,332,33,7,https://github.com/chris3torek,URL filter updates,4,[],https://github.com/NetSys/bess/pull/715,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/715#issuecomment-342916891,"Two part commit:

first one adds a cheesy trie traversal into vector so that we can do state-dump
second one adds state save/load to url_filter, adds tests, fixes bugs so that tests pass","ASAN code seems to be complaining about the 16-byte read of variable ranges2:
static const char ALIGNED(16) ranges2[] = ""\000\040\177\177"";
... buf = findchar_fast(buf, buf_end, ranges2, sizeof(ranges2) - 1, &found2); ...
[findchar_fast]
__m128i ranges16 = _mm_loadu_si128((const __m128i *)((const void *)ranges));
...
  __m128i b16 = _mm_loadu_si128((const __m128i *)((const void *)buf));
  int r = _mm_cmpestri(
      ranges16, ranges_size, b16, 16,
      _SIDD_LEAST_SIGNIFICANT | _SIDD_CMP_RANGES | _SIDD_UBYTE_OPS);

The variable is indeed only 5 bytes long, but that's because we want to use pcmpestri instructions to look at 2 pairs of byte sequences (_SIDD_LEAST_SIGNIFICANT | _SIDD_CMP_RANGES | _SIDD_UBYTE_OPS).  In other words this seems to be testing for characters in the 0-040 and 0177-0177 ranges.
The documentation implies that this code has the arguments backwards, that we'll test all characters in a vs the ranges specified in b, which would make the text loaded from buf the ranges; we want a to be the ranges.)  The code itself is apparently from picohttpparser and is probably correct.  There's a similar issue with the next call to findchar_fast for ranges1: to make the leak sanitizer happy, we need to have some pad bytes after the useful bytes.
As long as the variables are aligned and only the leading characters are actually used, the code should be OK.  The variable ranges2 is aligned, but ranges1 is not aligned.  I'll align ranges2 and add pad bytes and change the arguments to findchar_fast to use constants, to keep the sanitizer happy...",True,{}
NetSys/bess,https://github.com/NetSys/bess,715,2017-11-08T00:39:59Z,2017-11-10T21:45:31Z,2017-11-15T19:40:05Z,MERGED,True,332,33,7,https://github.com/chris3torek,URL filter updates,4,[],https://github.com/NetSys/bess/pull/715,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/715#issuecomment-342933161,"Two part commit:

first one adds a cheesy trie traversal into vector so that we can do state-dump
second one adds state save/load to url_filter, adds tests, fixes bugs so that tests pass","Codecov Report

Merging #715 into master will increase coverage by 1.19%.
The diff coverage is 87.01%.


@@            Coverage Diff            @@
##           master    #715      +/-   ##
=========================================
+ Coverage    69.8%     71%   +1.19%     
=========================================
  Files         220     220              
  Lines       14065   14097      +32     
=========================================
+ Hits         9818   10009     +191     
+ Misses       4247    4088     -159



Impacted Files
Coverage Δ





core/utils/http_parser.cc
36.59% <100%> (+31.52%)
⬆️


core/utils/trie.h
98.79% <100%> (+0.24%)
⬆️


core/modules/url_filter.h
100% <100%> (+6.25%)
⬆️


core/utils/trie_test.cc
100% <100%> (ø)
⬆️


core/modules/url_filter.cc
90% <76.74%> (+34.72%)
⬆️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


pybess/bess.py
42.38% <0%> (+0.23%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


... and 3 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update da0343e...14dbf4d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,715,2017-11-08T00:39:59Z,2017-11-10T21:45:31Z,2017-11-15T19:40:05Z,MERGED,True,332,33,7,https://github.com/chris3torek,URL filter updates,4,[],https://github.com/NetSys/bess/pull/715,https://github.com/chris3torek,5,https://github.com/NetSys/bess/pull/715#issuecomment-342955999,"Two part commit:

first one adds a cheesy trie traversal into vector so that we can do state-dump
second one adds state save/load to url_filter, adds tests, fixes bugs so that tests pass","Aha, now it's a complaint about GenerateResetPacket.  Both that and Generate403Packet call Copy with sloppy set to true, which isn't necessary, we can use sizeof instead of strlen to get compile time constant sizes for the packets.",True,{}
NetSys/bess,https://github.com/NetSys/bess,715,2017-11-08T00:39:59Z,2017-11-10T21:45:31Z,2017-11-15T19:40:05Z,MERGED,True,332,33,7,https://github.com/chris3torek,URL filter updates,4,[],https://github.com/NetSys/bess/pull/715,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/715#issuecomment-343595944,"Two part commit:

first one adds a cheesy trie traversal into vector so that we can do state-dump
second one adds state save/load to url_filter, adds tests, fixes bugs so that tests pass",,True,{}
NetSys/bess,https://github.com/NetSys/bess,719,2017-11-10T21:07:48Z,2017-11-14T02:11:29Z,2017-11-14T02:12:44Z,MERGED,True,3,3,1,https://github.com/shinae-woo,Fix bugs on bypass,1,[],https://github.com/NetSys/bess/pull/719,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/719,"Fix types (uint32_t -> uint64_t)
Use rdtsc() than current_tsc() --> in case of multiple bypass modules chained, they'd use quite stale values to calculate tsc.","Fix types (uint32_t -> uint64_t)
Use rdtsc() than current_tsc() --> in case of multiple bypass modules chained, they'd use quite stale values to calculate tsc.",True,{}
NetSys/bess,https://github.com/NetSys/bess,719,2017-11-10T21:07:48Z,2017-11-14T02:11:29Z,2017-11-14T02:12:44Z,MERGED,True,3,3,1,https://github.com/shinae-woo,Fix bugs on bypass,1,[],https://github.com/NetSys/bess/pull/719,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/719#issuecomment-343607513,"Fix types (uint32_t -> uint64_t)
Use rdtsc() than current_tsc() --> in case of multiple bypass modules chained, they'd use quite stale values to calculate tsc.","Codecov Report

Merging #719 into master will increase coverage by <.01%.
The diff coverage is 66.66%.


@@            Coverage Diff            @@
##           master    #719      +/-   ##
=========================================
+ Coverage    69.8%   69.8%   +<.01%     
=========================================
  Files         220     220              
  Lines       14065   14066       +1     
=========================================
+ Hits         9818    9819       +1     
  Misses       4247    4247



Impacted Files
Coverage Δ





core/modules/bypass.cc
68.42% <66.66%> (ø)
⬆️


core/worker.h
95.65% <0%> (-4.35%)
⬇️


pybess/bess.py
42.38% <0%> (+0.23%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update da0343e...85ae9a1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,719,2017-11-10T21:07:48Z,2017-11-14T02:11:29Z,2017-11-14T02:12:44Z,MERGED,True,3,3,1,https://github.com/shinae-woo,Fix bugs on bypass,1,[],https://github.com/NetSys/bess/pull/719,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/719#issuecomment-344123193,"Fix types (uint32_t -> uint64_t)
Use rdtsc() than current_tsc() --> in case of multiple bypass modules chained, they'd use quite stale values to calculate tsc.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,720,2017-11-10T21:10:19Z,2017-11-13T17:25:08Z,2017-11-13T17:25:47Z,MERGED,True,24,5,3,https://github.com/sangjinhan,Add drop counter to Queue module,1,[],https://github.com/NetSys/bess/pull/720,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/720,"... for accountability.
It adds overheads to the data path, but the impact should be minimal since it is per-batch cost.","... for accountability.
It adds overheads to the data path, but the impact should be minimal since it is per-batch cost.",True,{}
NetSys/bess,https://github.com/NetSys/bess,720,2017-11-10T21:10:19Z,2017-11-13T17:25:08Z,2017-11-13T17:25:47Z,MERGED,True,24,5,3,https://github.com/sangjinhan,Add drop counter to Queue module,1,[],https://github.com/NetSys/bess/pull/720,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/720#issuecomment-343599758,"... for accountability.
It adds overheads to the data path, but the impact should be minimal since it is per-batch cost.","Codecov Report

Merging #720 into master will increase coverage by 0.05%.
The diff coverage is 60%.


@@            Coverage Diff             @@
##           master     #720      +/-   ##
==========================================
+ Coverage    69.8%   69.85%   +0.05%     
==========================================
  Files         220      220              
  Lines       14065    14043      -22     
==========================================
- Hits         9818     9810       -8     
+ Misses       4247     4233      -14



Impacted Files
Coverage Δ





core/modules/queue.h
100% <100%> (ø)
⬆️


core/modules/queue.cc
53.27% <55.55%> (+0.23%)
⬆️


pybess/bess.py
41.92% <0%> (-0.24%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update da0343e...930974e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,720,2017-11-10T21:10:19Z,2017-11-13T17:25:08Z,2017-11-13T17:25:47Z,MERGED,True,24,5,3,https://github.com/sangjinhan,Add drop counter to Queue module,1,[],https://github.com/NetSys/bess/pull/720,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/720#issuecomment-343992959,"... for accountability.
It adds overheads to the data path, but the impact should be minimal since it is per-batch cost.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,721,2017-11-10T21:15:54Z,2017-11-14T21:57:15Z,2017-11-14T21:58:49Z,MERGED,True,89,16,6,https://github.com/shinae-woo,Change performance test scenario,2,[],https://github.com/NetSys/bess/pull/721,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/721,"Add some (fake) workload on Bypass()
Do not track module statistics
Run for 3 secs","Add some (fake) workload on Bypass()
Do not track module statistics
Run for 3 secs",True,{}
NetSys/bess,https://github.com/NetSys/bess,721,2017-11-10T21:15:54Z,2017-11-14T21:57:15Z,2017-11-14T21:58:49Z,MERGED,True,89,16,6,https://github.com/shinae-woo,Change performance test scenario,2,[],https://github.com/NetSys/bess/pull/721,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/721#issuecomment-343602090,"Add some (fake) workload on Bypass()
Do not track module statistics
Run for 3 secs","Codecov Report

Merging #721 into master will increase coverage by 1.18%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #721      +/-   ##
==========================================
+ Coverage    69.8%   70.98%   +1.18%     
==========================================
  Files         220      220              
  Lines       14065    14097      +32     
==========================================
+ Hits         9818    10007     +189     
+ Misses       4247     4090     -157



Impacted Files
Coverage Δ





core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️


pybess/bess.py
41.92% <0%> (-0.24%)
⬇️


core/utils/trie_test.cc
100% <0%> (ø)
⬆️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/trie.h
98.79% <0%> (+0.24%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/modules/url_filter.h
100% <0%> (+6.25%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️


core/utils/http_parser.cc
36.59% <0%> (+31.52%)
⬆️


... and 1 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update da0343e...d09af10. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,721,2017-11-10T21:15:54Z,2017-11-14T21:57:15Z,2017-11-14T21:58:49Z,MERGED,True,89,16,6,https://github.com/shinae-woo,Change performance test scenario,2,[],https://github.com/NetSys/bess/pull/721,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/721#issuecomment-344412785,"Add some (fake) workload on Bypass()
Do not track module statistics
Run for 3 secs","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,724,2017-11-14T20:47:35Z,2017-11-16T05:35:52Z,2017-11-16T05:36:30Z,MERGED,True,28,1,2,https://github.com/sangjinhan,utils: add utility functions to BigEndian and Ethernet::Address,4,[],https://github.com/NetSys/bess/pull/724,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/724,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,724,2017-11-14T20:47:35Z,2017-11-16T05:35:52Z,2017-11-16T05:36:30Z,MERGED,True,28,1,2,https://github.com/sangjinhan,utils: add utility functions to BigEndian and Ethernet::Address,4,[],https://github.com/NetSys/bess/pull/724,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/724#issuecomment-344403369,,"Codecov Report

Merging #724 into master will decrease coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #724      +/-   ##
==========================================
- Coverage   70.92%   70.92%   -0.01%     
==========================================
  Files         220      220              
  Lines       14133    14132       -1     
==========================================
- Hits        10024    10023       -1     
  Misses       4109     4109



Impacted Files
Coverage Δ





core/utils/ether.h
83.33% <ø> (ø)
⬆️


core/utils/endian.h
86.04% <ø> (ø)
⬆️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a9991cf...6c57f32. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,724,2017-11-14T20:47:35Z,2017-11-16T05:35:52Z,2017-11-16T05:36:30Z,MERGED,True,28,1,2,https://github.com/sangjinhan,utils: add utility functions to BigEndian and Ethernet::Address,4,[],https://github.com/NetSys/bess/pull/724,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/724#issuecomment-344821040,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,727,2017-11-15T17:44:59Z,2017-11-16T18:55:28Z,2018-02-11T21:22:21Z,MERGED,True,17,10,1,https://github.com/melvinw,bessctl: make `monitor tc` readable with long TCs,1,[],https://github.com/NetSys/bess/pull/727,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/727,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,727,2017-11-15T17:44:59Z,2017-11-16T18:55:28Z,2018-02-11T21:22:21Z,MERGED,True,17,10,1,https://github.com/melvinw,bessctl: make `monitor tc` readable with long TCs,1,[],https://github.com/NetSys/bess/pull/727,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/727#issuecomment-344682836,,"Codecov Report

Merging #727 into master will increase coverage by 0.05%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #727      +/-   ##
==========================================
+ Coverage   70.92%   70.97%   +0.05%     
==========================================
  Files         220      220              
  Lines       14133    14103      -30     
==========================================
- Hits        10024    10010      -14     
+ Misses       4109     4093      -16



Impacted Files
Coverage Δ





core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


pybess/bess.py
41.92% <0%> (-0.47%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a9991cf...19950fe. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,727,2017-11-15T17:44:59Z,2017-11-16T18:55:28Z,2018-02-11T21:22:21Z,MERGED,True,17,10,1,https://github.com/melvinw,bessctl: make `monitor tc` readable with long TCs,1,[],https://github.com/NetSys/bess/pull/727,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/727#issuecomment-345027622,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,728,2017-11-16T00:16:51Z,2017-11-20T20:26:18Z,2018-02-11T21:20:35Z,MERGED,True,383,0,1,https://github.com/melvinw,bessctl: add measurement utilities,3,[],https://github.com/NetSys/bess/pull/728,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/728,"While developing https://github.com/nefeli/trafficgen I realized that a utility like this might be generally useful. As a usage example consider the simple packet generator below.
from measurement_utils import *

import scapy.all as scapy
import time

dst_mac = $DST_MAC!'02:11:22:33:44:55'

def make_pkt(src_mac='02:00:11:22:33:44', dst_mac='02:11:22:33:44:55',
              src_ip='10.0.0.1', dst_ip='11.0.0.1', size=64):
    eth = scapy.Ether(src=src_mac, dst=dst_mac)
    ip = scapy.IP(src=src_ip, dst=dst_ip)
    udp = scapy.UDP(sport=10001, dport=10002, chksum=0)
    payload = ('hello' + '0123456789' * 200)[:size - len(eth / ip / udp)]
    return bytes(eth / ip / udp / payload)

bess.add_worker(wid=1, core=1)
port_cfg = PortConfig('port0', port_id=0)
p = MeasureablePort(tx_port=port_cfg, rx_port=port_cfg, tx_ts_offset=42, rx_ts_offset=42)

templates = [make_pkt(src_mac=p.tx_port.mac_addr, dst_mac=dst_mac)]
src::Source() -> rewrite::Rewrite(templates=templates)
p.connect_tx(rewrite, 0)

sink::Sink()
p.connect_rx(sink, 0)

bess.resume_all()
for stats in p.rate_stats(rtt_percentiles=[50, 99]):
    print(stats)
    print('--')
    time.sleep(2)

$ bessctl run file conf/simple_pktgen.py DST_MAC='""3c:fd:fe:a5:40:58""'
[in / out] pkts: 0.000M / 0.000M, drops: 0.000M / 0.000M, bytes: 0 / 0
rtt_50: 0.000 us, rtt_99: 0.000 us
jit_50: 0.000 us, jit_99: 0.000 us
--
[in / out] pkts: 12.935M / 20.384M, drops: 0.001M / 3.218M, bytes: 827871136 / 1138372254
rtt_50: 8.900 us, rtt_99: 11.250 us
jit_50: 0.000 us, jit_99: 0.900 us
--
[in / out] pkts: 19.013M / 19.019M, drops: 0.001M / 0.001M, bytes: 1216921536 / 1217245004
rtt_50: 17.700 us, rtt_99: 21.750 us
jit_50: 0.000 us, jit_99: 1.800 us
--
[in / out] pkts: 18.971M / 18.979M, drops: 0.001M / 0.001M, bytes: 1214248420 / 1214668440
rtt_50: 17.700 us, rtt_99: 21.100 us
jit_50: 0.000 us, jit_99: 1.800 us","While developing https://github.com/nefeli/trafficgen I realized that a utility like this might be generally useful. As a usage example consider the simple packet generator below.
from measurement_utils import *

import scapy.all as scapy
import time

dst_mac = $DST_MAC!'02:11:22:33:44:55'

def make_pkt(src_mac='02:00:11:22:33:44', dst_mac='02:11:22:33:44:55',
              src_ip='10.0.0.1', dst_ip='11.0.0.1', size=64):
    eth = scapy.Ether(src=src_mac, dst=dst_mac)
    ip = scapy.IP(src=src_ip, dst=dst_ip)
    udp = scapy.UDP(sport=10001, dport=10002, chksum=0)
    payload = ('hello' + '0123456789' * 200)[:size - len(eth / ip / udp)]
    return bytes(eth / ip / udp / payload)

bess.add_worker(wid=1, core=1)
port_cfg = PortConfig('port0', port_id=0)
p = MeasureablePort(tx_port=port_cfg, rx_port=port_cfg, tx_ts_offset=42, rx_ts_offset=42)

templates = [make_pkt(src_mac=p.tx_port.mac_addr, dst_mac=dst_mac)]
src::Source() -> rewrite::Rewrite(templates=templates)
p.connect_tx(rewrite, 0)

sink::Sink()
p.connect_rx(sink, 0)

bess.resume_all()
for stats in p.rate_stats(rtt_percentiles=[50, 99]):
    print(stats)
    print('--')
    time.sleep(2)

$ bessctl run file conf/simple_pktgen.py DST_MAC='""3c:fd:fe:a5:40:58""'
[in / out] pkts: 0.000M / 0.000M, drops: 0.000M / 0.000M, bytes: 0 / 0
rtt_50: 0.000 us, rtt_99: 0.000 us
jit_50: 0.000 us, jit_99: 0.000 us
--
[in / out] pkts: 12.935M / 20.384M, drops: 0.001M / 3.218M, bytes: 827871136 / 1138372254
rtt_50: 8.900 us, rtt_99: 11.250 us
jit_50: 0.000 us, jit_99: 0.900 us
--
[in / out] pkts: 19.013M / 19.019M, drops: 0.001M / 0.001M, bytes: 1216921536 / 1217245004
rtt_50: 17.700 us, rtt_99: 21.750 us
jit_50: 0.000 us, jit_99: 1.800 us
--
[in / out] pkts: 18.971M / 18.979M, drops: 0.001M / 0.001M, bytes: 1214248420 / 1214668440
rtt_50: 17.700 us, rtt_99: 21.100 us
jit_50: 0.000 us, jit_99: 1.800 us",True,{}
NetSys/bess,https://github.com/NetSys/bess,728,2017-11-16T00:16:51Z,2017-11-20T20:26:18Z,2018-02-11T21:20:35Z,MERGED,True,383,0,1,https://github.com/melvinw,bessctl: add measurement utilities,3,[],https://github.com/NetSys/bess/pull/728,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/728#issuecomment-344779493,"While developing https://github.com/nefeli/trafficgen I realized that a utility like this might be generally useful. As a usage example consider the simple packet generator below.
from measurement_utils import *

import scapy.all as scapy
import time

dst_mac = $DST_MAC!'02:11:22:33:44:55'

def make_pkt(src_mac='02:00:11:22:33:44', dst_mac='02:11:22:33:44:55',
              src_ip='10.0.0.1', dst_ip='11.0.0.1', size=64):
    eth = scapy.Ether(src=src_mac, dst=dst_mac)
    ip = scapy.IP(src=src_ip, dst=dst_ip)
    udp = scapy.UDP(sport=10001, dport=10002, chksum=0)
    payload = ('hello' + '0123456789' * 200)[:size - len(eth / ip / udp)]
    return bytes(eth / ip / udp / payload)

bess.add_worker(wid=1, core=1)
port_cfg = PortConfig('port0', port_id=0)
p = MeasureablePort(tx_port=port_cfg, rx_port=port_cfg, tx_ts_offset=42, rx_ts_offset=42)

templates = [make_pkt(src_mac=p.tx_port.mac_addr, dst_mac=dst_mac)]
src::Source() -> rewrite::Rewrite(templates=templates)
p.connect_tx(rewrite, 0)

sink::Sink()
p.connect_rx(sink, 0)

bess.resume_all()
for stats in p.rate_stats(rtt_percentiles=[50, 99]):
    print(stats)
    print('--')
    time.sleep(2)

$ bessctl run file conf/simple_pktgen.py DST_MAC='""3c:fd:fe:a5:40:58""'
[in / out] pkts: 0.000M / 0.000M, drops: 0.000M / 0.000M, bytes: 0 / 0
rtt_50: 0.000 us, rtt_99: 0.000 us
jit_50: 0.000 us, jit_99: 0.000 us
--
[in / out] pkts: 12.935M / 20.384M, drops: 0.001M / 3.218M, bytes: 827871136 / 1138372254
rtt_50: 8.900 us, rtt_99: 11.250 us
jit_50: 0.000 us, jit_99: 0.900 us
--
[in / out] pkts: 19.013M / 19.019M, drops: 0.001M / 0.001M, bytes: 1216921536 / 1217245004
rtt_50: 17.700 us, rtt_99: 21.750 us
jit_50: 0.000 us, jit_99: 1.800 us
--
[in / out] pkts: 18.971M / 18.979M, drops: 0.001M / 0.001M, bytes: 1214248420 / 1214668440
rtt_50: 17.700 us, rtt_99: 21.100 us
jit_50: 0.000 us, jit_99: 1.800 us","Codecov Report

Merging #728 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #728   +/-   ##
=======================================
  Coverage   70.92%   70.92%           
=======================================
  Files         220      220           
  Lines       14133    14133           
=======================================
  Hits        10024    10024           
  Misses       4109     4109



Impacted Files
Coverage Δ





core/utils/endian.h
86.04% <0%> (ø)
⬆️


core/utils/ether.h
83.33% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a9991cf...fc0081b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,728,2017-11-16T00:16:51Z,2017-11-20T20:26:18Z,2018-02-11T21:20:35Z,MERGED,True,383,0,1,https://github.com/melvinw,bessctl: add measurement utilities,3,[],https://github.com/NetSys/bess/pull/728,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/728#issuecomment-344786427,"While developing https://github.com/nefeli/trafficgen I realized that a utility like this might be generally useful. As a usage example consider the simple packet generator below.
from measurement_utils import *

import scapy.all as scapy
import time

dst_mac = $DST_MAC!'02:11:22:33:44:55'

def make_pkt(src_mac='02:00:11:22:33:44', dst_mac='02:11:22:33:44:55',
              src_ip='10.0.0.1', dst_ip='11.0.0.1', size=64):
    eth = scapy.Ether(src=src_mac, dst=dst_mac)
    ip = scapy.IP(src=src_ip, dst=dst_ip)
    udp = scapy.UDP(sport=10001, dport=10002, chksum=0)
    payload = ('hello' + '0123456789' * 200)[:size - len(eth / ip / udp)]
    return bytes(eth / ip / udp / payload)

bess.add_worker(wid=1, core=1)
port_cfg = PortConfig('port0', port_id=0)
p = MeasureablePort(tx_port=port_cfg, rx_port=port_cfg, tx_ts_offset=42, rx_ts_offset=42)

templates = [make_pkt(src_mac=p.tx_port.mac_addr, dst_mac=dst_mac)]
src::Source() -> rewrite::Rewrite(templates=templates)
p.connect_tx(rewrite, 0)

sink::Sink()
p.connect_rx(sink, 0)

bess.resume_all()
for stats in p.rate_stats(rtt_percentiles=[50, 99]):
    print(stats)
    print('--')
    time.sleep(2)

$ bessctl run file conf/simple_pktgen.py DST_MAC='""3c:fd:fe:a5:40:58""'
[in / out] pkts: 0.000M / 0.000M, drops: 0.000M / 0.000M, bytes: 0 / 0
rtt_50: 0.000 us, rtt_99: 0.000 us
jit_50: 0.000 us, jit_99: 0.000 us
--
[in / out] pkts: 12.935M / 20.384M, drops: 0.001M / 3.218M, bytes: 827871136 / 1138372254
rtt_50: 8.900 us, rtt_99: 11.250 us
jit_50: 0.000 us, jit_99: 0.900 us
--
[in / out] pkts: 19.013M / 19.019M, drops: 0.001M / 0.001M, bytes: 1216921536 / 1217245004
rtt_50: 17.700 us, rtt_99: 21.750 us
jit_50: 0.000 us, jit_99: 1.800 us
--
[in / out] pkts: 18.971M / 18.979M, drops: 0.001M / 0.001M, bytes: 1214248420 / 1214668440
rtt_50: 17.700 us, rtt_99: 21.100 us
jit_50: 0.000 us, jit_99: 1.800 us",Thanks for the quick review @chris3torek ! Will address shortly,True,{}
NetSys/bess,https://github.com/NetSys/bess,728,2017-11-16T00:16:51Z,2017-11-20T20:26:18Z,2018-02-11T21:20:35Z,MERGED,True,383,0,1,https://github.com/melvinw,bessctl: add measurement utilities,3,[],https://github.com/NetSys/bess/pull/728,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/728#issuecomment-345820915,"While developing https://github.com/nefeli/trafficgen I realized that a utility like this might be generally useful. As a usage example consider the simple packet generator below.
from measurement_utils import *

import scapy.all as scapy
import time

dst_mac = $DST_MAC!'02:11:22:33:44:55'

def make_pkt(src_mac='02:00:11:22:33:44', dst_mac='02:11:22:33:44:55',
              src_ip='10.0.0.1', dst_ip='11.0.0.1', size=64):
    eth = scapy.Ether(src=src_mac, dst=dst_mac)
    ip = scapy.IP(src=src_ip, dst=dst_ip)
    udp = scapy.UDP(sport=10001, dport=10002, chksum=0)
    payload = ('hello' + '0123456789' * 200)[:size - len(eth / ip / udp)]
    return bytes(eth / ip / udp / payload)

bess.add_worker(wid=1, core=1)
port_cfg = PortConfig('port0', port_id=0)
p = MeasureablePort(tx_port=port_cfg, rx_port=port_cfg, tx_ts_offset=42, rx_ts_offset=42)

templates = [make_pkt(src_mac=p.tx_port.mac_addr, dst_mac=dst_mac)]
src::Source() -> rewrite::Rewrite(templates=templates)
p.connect_tx(rewrite, 0)

sink::Sink()
p.connect_rx(sink, 0)

bess.resume_all()
for stats in p.rate_stats(rtt_percentiles=[50, 99]):
    print(stats)
    print('--')
    time.sleep(2)

$ bessctl run file conf/simple_pktgen.py DST_MAC='""3c:fd:fe:a5:40:58""'
[in / out] pkts: 0.000M / 0.000M, drops: 0.000M / 0.000M, bytes: 0 / 0
rtt_50: 0.000 us, rtt_99: 0.000 us
jit_50: 0.000 us, jit_99: 0.000 us
--
[in / out] pkts: 12.935M / 20.384M, drops: 0.001M / 3.218M, bytes: 827871136 / 1138372254
rtt_50: 8.900 us, rtt_99: 11.250 us
jit_50: 0.000 us, jit_99: 0.900 us
--
[in / out] pkts: 19.013M / 19.019M, drops: 0.001M / 0.001M, bytes: 1216921536 / 1217245004
rtt_50: 17.700 us, rtt_99: 21.750 us
jit_50: 0.000 us, jit_99: 1.800 us
--
[in / out] pkts: 18.971M / 18.979M, drops: 0.001M / 0.001M, bytes: 1214248420 / 1214668440
rtt_50: 17.700 us, rtt_99: 21.100 us
jit_50: 0.000 us, jit_99: 1.800 us",,True,{}
NetSys/bess,https://github.com/NetSys/bess,729,2017-11-16T01:48:04Z,2017-11-29T17:43:01Z,2017-11-29T17:43:54Z,MERGED,True,44,31,3,https://github.com/sangjinhan,Fix a bug that starves all children except an unblocked child in weight_fair TC,3,[],https://github.com/NetSys/bess/pull/729,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/729,"In the current implementation of stride scheduling for weighted fair sharing, the ""pass"" value of unblocked (joined again) child TCs are initialized to 0. Then only that TC will be scheduled until its pass value has caught up with the that of other TCs. This caused scheduling bug reported in #717.
In addition, a minor bug, where frequently blocked TCs are more scheduled than they should be, has also been fixed (client->remain in Fig 3 in the original paper)","In the current implementation of stride scheduling for weighted fair sharing, the ""pass"" value of unblocked (joined again) child TCs are initialized to 0. Then only that TC will be scheduled until its pass value has caught up with the that of other TCs. This caused scheduling bug reported in #717.
In addition, a minor bug, where frequently blocked TCs are more scheduled than they should be, has also been fixed (client->remain in Fig 3 in the original paper)",True,{}
NetSys/bess,https://github.com/NetSys/bess,729,2017-11-16T01:48:04Z,2017-11-29T17:43:01Z,2017-11-29T17:43:54Z,MERGED,True,44,31,3,https://github.com/sangjinhan,Fix a bug that starves all children except an unblocked child in weight_fair TC,3,[],https://github.com/NetSys/bess/pull/729,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/729#issuecomment-344795350,"In the current implementation of stride scheduling for weighted fair sharing, the ""pass"" value of unblocked (joined again) child TCs are initialized to 0. Then only that TC will be scheduled until its pass value has caught up with the that of other TCs. This caused scheduling bug reported in #717.
In addition, a minor bug, where frequently blocked TCs are more scheduled than they should be, has also been fixed (client->remain in Fig 3 in the original paper)","Codecov Report

Merging #729 into master will increase coverage by 0.07%.
The diff coverage is 91.3%.


@@            Coverage Diff             @@
##           master     #729      +/-   ##
==========================================
+ Coverage   70.92%   70.99%   +0.07%     
==========================================
  Files         220      220              
  Lines       14133    14103      -30     
==========================================
- Hits        10024    10013      -11     
+ Misses       4109     4090      -19



Impacted Files
Coverage Δ





core/traffic_class.h
89.86% <100%> (+0.28%)
⬆️


core/traffic_class_test.cc
99.4% <100%> (ø)
⬆️


core/traffic_class.cc
91.03% <87.5%> (+0.21%)
⬆️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a9991cf...963a21d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,729,2017-11-16T01:48:04Z,2017-11-29T17:43:01Z,2017-11-29T17:43:54Z,MERGED,True,44,31,3,https://github.com/sangjinhan,Fix a bug that starves all children except an unblocked child in weight_fair TC,3,[],https://github.com/NetSys/bess/pull/729,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/729#issuecomment-347938881,"In the current implementation of stride scheduling for weighted fair sharing, the ""pass"" value of unblocked (joined again) child TCs are initialized to 0. Then only that TC will be scheduled until its pass value has caught up with the that of other TCs. This caused scheduling bug reported in #717.
In addition, a minor bug, where frequently blocked TCs are more scheduled than they should be, has also been fixed (client->remain in Fig 3 in the original paper)",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,730,2017-11-17T02:09:47Z,2017-11-17T17:32:09Z,2018-06-28T22:07:41Z,MERGED,True,1,0,1,https://github.com/ddiproietto,exact_match_table_test: Fix uninitialized read.,1,[],https://github.com/NetSys/bess/pull/730,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/730,"Reported by @shinae-woo
Fixes #713","Reported by @shinae-woo
Fixes #713",True,{}
NetSys/bess,https://github.com/NetSys/bess,730,2017-11-17T02:09:47Z,2017-11-17T17:32:09Z,2018-06-28T22:07:41Z,MERGED,True,1,0,1,https://github.com/ddiproietto,exact_match_table_test: Fix uninitialized read.,1,[],https://github.com/NetSys/bess/pull/730,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/730#issuecomment-345130057,"Reported by @shinae-woo
Fixes #713","Codecov Report

Merging #730 into master will increase coverage by 0.01%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #730      +/-   ##
==========================================
+ Coverage   70.97%   70.99%   +0.01%     
==========================================
  Files         220      220              
  Lines       14103    14105       +2     
==========================================
+ Hits        10010    10014       +4     
+ Misses       4093     4091       -2



Impacted Files
Coverage Δ





core/utils/exact_match_table_test.cc
100% <100%> (ø)
⬆️


core/utils/ether.h
83.33% <0%> (ø)
⬆️


pybess/bess.py
42.38% <0%> (+0.46%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8130bb4...4a41c06. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,730,2017-11-17T02:09:47Z,2017-11-17T17:32:09Z,2018-06-28T22:07:41Z,MERGED,True,1,0,1,https://github.com/ddiproietto,exact_match_table_test: Fix uninitialized read.,1,[],https://github.com/NetSys/bess/pull/730,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/730#issuecomment-345151885,"Reported by @shinae-woo
Fixes #713",Thank you so much! LGreatTM!,True,{}
NetSys/bess,https://github.com/NetSys/bess,730,2017-11-17T02:09:47Z,2017-11-17T17:32:09Z,2018-06-28T22:07:41Z,MERGED,True,1,0,1,https://github.com/ddiproietto,exact_match_table_test: Fix uninitialized read.,1,[],https://github.com/NetSys/bess/pull/730,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/730#issuecomment-345310272,"Reported by @shinae-woo
Fixes #713",,True,{}
NetSys/bess,https://github.com/NetSys/bess,732,2017-11-20T20:15:45Z,2017-11-23T00:26:06Z,2018-02-11T21:21:44Z,MERGED,True,2,2,1,https://github.com/melvinw,bessctl: destroy modules after bookkeeping/logging,1,[],https://github.com/NetSys/bess/pull/732,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/732,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,732,2017-11-20T20:15:45Z,2017-11-23T00:26:06Z,2018-02-11T21:21:44Z,MERGED,True,2,2,1,https://github.com/melvinw,bessctl: destroy modules after bookkeeping/logging,1,[],https://github.com/NetSys/bess/pull/732,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/732#issuecomment-345829117,,"Codecov Report

Merging #732 into master will decrease coverage by 0.06%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #732      +/-   ##
==========================================
- Coverage   70.99%   70.92%   -0.07%     
==========================================
  Files         220      220              
  Lines       14105    14133      +28     
==========================================
+ Hits        10014    10024      +10     
- Misses       4091     4109      +18



Impacted Files
Coverage Δ





core/bessctl.cc
54.17% <0%> (ø)
⬆️


core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d18b747...3772bd6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,732,2017-11-20T20:15:45Z,2017-11-23T00:26:06Z,2018-02-11T21:21:44Z,MERGED,True,2,2,1,https://github.com/melvinw,bessctl: destroy modules after bookkeeping/logging,1,[],https://github.com/NetSys/bess/pull/732,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/732#issuecomment-346508013,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,733,2017-11-21T06:03:40Z,2017-12-01T19:22:50Z,2017-12-08T03:19:22Z,MERGED,True,126,67,4,https://github.com/melvinw,modules/hash_lb: add configurable n-tuple mode,3,[],https://github.com/NetSys/bess/pull/733,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/733,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,733,2017-11-21T06:03:40Z,2017-12-01T19:22:50Z,2017-12-08T03:19:22Z,MERGED,True,126,67,4,https://github.com/melvinw,modules/hash_lb: add configurable n-tuple mode,3,[],https://github.com/NetSys/bess/pull/733,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/733#issuecomment-345928917,,"It's backwards compatible with the old l2,l3,l4 modes. Using bessctl/samples/conf/samples/hash_lb.bess as a benchmark, it is a bit slower now (33.9 Mpps vs 41.8 Mpps on my machine). I took out the specialized Lb* functions, but I'm happy to put them back if performance is important here.",True,{}
NetSys/bess,https://github.com/NetSys/bess,733,2017-11-21T06:03:40Z,2017-12-01T19:22:50Z,2017-12-08T03:19:22Z,MERGED,True,126,67,4,https://github.com/melvinw,modules/hash_lb: add configurable n-tuple mode,3,[],https://github.com/NetSys/bess/pull/733,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/733#issuecomment-345935981,,"Codecov Report

Merging #733 into master will increase coverage by 0.01%.
The diff coverage is 41.66%.


@@            Coverage Diff             @@
##           master     #733      +/-   ##
==========================================
+ Coverage   70.91%   70.93%   +0.01%     
==========================================
  Files         220      220              
  Lines       14133    14153      +20     
==========================================
+ Hits        10022    10039      +17     
- Misses       4111     4114       +3



Impacted Files
Coverage Δ





core/modules/hash_lb.h
100% <100%> (ø)
⬆️


core/modules/hash_lb.cc
51.92% <39.13%> (+5.41%)
⬆️


core/utils/exact_match_table.h
88.14% <0%> (-0.66%)
⬇️


pybess/bess.py
42.38% <0%> (+0.46%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3789455...7c099e9. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,733,2017-11-21T06:03:40Z,2017-12-01T19:22:50Z,2017-12-08T03:19:22Z,MERGED,True,126,67,4,https://github.com/melvinw,modules/hash_lb: add configurable n-tuple mode,3,[],https://github.com/NetSys/bess/pull/733,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/733#issuecomment-346193571,,Marking not ready while I put back the 'Lb*` functions,True,{}
NetSys/bess,https://github.com/NetSys/bess,733,2017-11-21T06:03:40Z,2017-12-01T19:22:50Z,2017-12-08T03:19:22Z,MERGED,True,126,67,4,https://github.com/melvinw,modules/hash_lb: add configurable n-tuple mode,3,[],https://github.com/NetSys/bess/pull/733,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/733#issuecomment-346493545,,"Ready to go. Impact on l2, l3 and l4 is negligible now.",True,{}
NetSys/bess,https://github.com/NetSys/bess,733,2017-11-21T06:03:40Z,2017-12-01T19:22:50Z,2017-12-08T03:19:22Z,MERGED,True,126,67,4,https://github.com/melvinw,modules/hash_lb: add configurable n-tuple mode,3,[],https://github.com/NetSys/bess/pull/733,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/733#issuecomment-348590374,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,733,2017-11-21T06:03:40Z,2017-12-01T19:22:50Z,2017-12-08T03:19:22Z,MERGED,True,126,67,4,https://github.com/melvinw,modules/hash_lb: add configurable n-tuple mode,3,[],https://github.com/NetSys/bess/pull/733,https://github.com/chris3torek,7,https://github.com/NetSys/bess/pull/733#issuecomment-348593992,,"(I wondered about the template specializations here too, but the only other thing I thought we could do was make this use a function pointer, and that would probably be worse/slower.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,733,2017-11-21T06:03:40Z,2017-12-01T19:22:50Z,2017-12-08T03:19:22Z,MERGED,True,126,67,4,https://github.com/melvinw,modules/hash_lb: add configurable n-tuple mode,3,[],https://github.com/NetSys/bess/pull/733,https://github.com/melvinw,8,https://github.com/NetSys/bess/pull/733#issuecomment-348595487,,"Ah, I agree-- it doesn't really buy us anything-- it just felt slightly cleaner to me.",True,{}
NetSys/bess,https://github.com/NetSys/bess,736,2017-11-29T01:16:20Z,2017-11-29T17:46:52Z,2017-11-29T17:47:35Z,MERGED,True,11,2,1,https://github.com/shinae-woo,Fix a bug on module crash testing,1,[],https://github.com/NetSys/bess/pull/736,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/736,"Previously, bessd crash from a module running detected at the moments
of running tests for next module. As a results, error reporting is
cascaded and incorrect.
This commit adds a check whether bess have been crashed in the same test case.","Previously, bessd crash from a module running detected at the moments
of running tests for next module. As a results, error reporting is
cascaded and incorrect.
This commit adds a check whether bess have been crashed in the same test case.",True,{}
NetSys/bess,https://github.com/NetSys/bess,736,2017-11-29T01:16:20Z,2017-11-29T17:46:52Z,2017-11-29T17:47:35Z,MERGED,True,11,2,1,https://github.com/shinae-woo,Fix a bug on module crash testing,1,[],https://github.com/NetSys/bess/pull/736,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/736#issuecomment-347727512,"Previously, bessd crash from a module running detected at the moments
of running tests for next module. As a results, error reporting is
cascaded and incorrect.
This commit adds a check whether bess have been crashed in the same test case.","Codecov Report

Merging #736 into master will decrease coverage by 0.05%.
The diff coverage is 57.14%.


@@            Coverage Diff             @@
##           master     #736      +/-   ##
==========================================
- Coverage   70.99%   70.94%   -0.06%     
==========================================
  Files         220      220              
  Lines       14105    14111       +6     
==========================================
- Hits        10014    10011       -3     
- Misses       4091     4100       +9



Impacted Files
Coverage Δ





bessctl/test_samples.py
79.59% <57.14%> (-4.13%)
⬇️


core/module_graph.cc
85.5% <0%> (-1.45%)
⬇️


pybess/bess.py
41.92% <0%> (-0.47%)
⬇️


core/module.cc
89.28% <0%> (-0.45%)
⬇️


core/traffic_class.cc
90.47% <0%> (-0.35%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 225499b...9fe31d6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,736,2017-11-29T01:16:20Z,2017-11-29T17:46:52Z,2017-11-29T17:47:35Z,MERGED,True,11,2,1,https://github.com/shinae-woo,Fix a bug on module crash testing,1,[],https://github.com/NetSys/bess/pull/736,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/736#issuecomment-347940027,"Previously, bessd crash from a module running detected at the moments
of running tests for next module. As a results, error reporting is
cascaded and incorrect.
This commit adds a check whether bess have been crashed in the same test case.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,738,2017-11-30T23:48:13Z,2017-12-01T00:39:33Z,2017-12-01T00:40:10Z,MERGED,True,2,1,1,https://github.com/dtnaylor,Initialize byte count in Track gate hook,1,[],https://github.com/NetSys/bess/pull/738,https://github.com/dtnaylor,1,https://github.com/NetSys/bess/pull/738,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,738,2017-11-30T23:48:13Z,2017-12-01T00:39:33Z,2017-12-01T00:40:10Z,MERGED,True,2,1,1,https://github.com/dtnaylor,Initialize byte count in Track gate hook,1,[],https://github.com/NetSys/bess/pull/738,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/738#issuecomment-348364889,,"Codecov Report

Merging #738 into master will decrease coverage by 0.37%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #738      +/-   ##
==========================================
- Coverage   70.97%   70.59%   -0.38%     
==========================================
  Files         220      220              
  Lines       14111    13832     -279     
==========================================
- Hits        10015     9765     -250     
+ Misses       4096     4067      -29



Impacted Files
Coverage Δ





core/gate_hooks/track.cc
66.66% <100%> (ø)
⬆️


core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/resume_hooks/metadata.cc
78.57% <0%> (-5.99%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


pybess/bess.py
41.92% <0%> (-0.47%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/resume_hooks/metadata.h
100% <0%> (+3.57%)
⬆️


core/message.h
100% <0%> (+63.63%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 95d08de...75b6031. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,738,2017-11-30T23:48:13Z,2017-12-01T00:39:33Z,2017-12-01T00:40:10Z,MERGED,True,2,1,1,https://github.com/dtnaylor,Initialize byte count in Track gate hook,1,[],https://github.com/NetSys/bess/pull/738,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/738#issuecomment-348366965,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,739,2017-12-02T00:30:39Z,2018-03-29T20:56:30Z,2018-06-28T22:06:54Z,MERGED,True,1136,768,125,https://github.com/shinae-woo,Iteratively scheduling modules by a task ,28,[],https://github.com/NetSys/bess/pull/739,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/739,"This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.","This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.",True,{}
NetSys/bess,https://github.com/NetSys/bess,739,2017-12-02T00:30:39Z,2018-03-29T20:56:30Z,2018-06-28T22:06:54Z,MERGED,True,1136,768,125,https://github.com/shinae-woo,Iteratively scheduling modules by a task ,28,[],https://github.com/NetSys/bess/pull/739,https://github.com/shinae-woo,2,https://github.com/NetSys/bess/pull/739#issuecomment-348651077,"This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.","Sorry for such huge things, but I can't split out this functional changes. But, the core changes are mostly in task.cc, module.h, which need most efforts of the reviews.",True,{}
NetSys/bess,https://github.com/NetSys/bess,739,2017-12-02T00:30:39Z,2018-03-29T20:56:30Z,2018-06-28T22:06:54Z,MERGED,True,1136,768,125,https://github.com/shinae-woo,Iteratively scheduling modules by a task ,28,[],https://github.com/NetSys/bess/pull/739,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/739#issuecomment-348654764,"This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.","Codecov Report

Merging #739 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #739   +/-   ##
=======================================
  Coverage   55.54%   55.54%           
=======================================
  Files           9        9           
  Lines        1127     1127           
=======================================
  Hits          626      626           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update be03d38...b946864. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,739,2017-12-02T00:30:39Z,2018-03-29T20:56:30Z,2018-06-28T22:06:54Z,MERGED,True,1136,768,125,https://github.com/shinae-woo,Iteratively scheduling modules by a task ,28,[],https://github.com/NetSys/bess/pull/739,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/739#issuecomment-349127076,"This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.","Thank you for the review, I will push an amendment commit for the review, and will push following PRs as I described.",True,{}
NetSys/bess,https://github.com/NetSys/bess,739,2017-12-02T00:30:39Z,2018-03-29T20:56:30Z,2018-06-28T22:06:54Z,MERGED,True,1136,768,125,https://github.com/shinae-woo,Iteratively scheduling modules by a task ,28,[],https://github.com/NetSys/bess/pull/739,https://github.com/shinae-woo,5,https://github.com/NetSys/bess/pull/739#issuecomment-351241662,"This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.",Thank you for your great reviews @barath @chris3torek @sangjinhan. I will push additional commits.,True,{}
NetSys/bess,https://github.com/NetSys/bess,739,2017-12-02T00:30:39Z,2018-03-29T20:56:30Z,2018-06-28T22:06:54Z,MERGED,True,1136,768,125,https://github.com/shinae-woo,Iteratively scheduling modules by a task ,28,[],https://github.com/NetSys/bess/pull/739,https://github.com/shinae-woo,6,https://github.com/NetSys/bess/pull/739#issuecomment-351872257,"This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.","Note: The module-side interface would be changed one more time, to remove access from thread_local storage (currently per-thread Worker *ctx). As a result, modules within a task passing by not only Task *task as an input param, but  Context *context which has all temporary contexts of running a task including worker, task, temporary pkt batches, etc.",True,{}
NetSys/bess,https://github.com/NetSys/bess,739,2017-12-02T00:30:39Z,2018-03-29T20:56:30Z,2018-06-28T22:06:54Z,MERGED,True,1136,768,125,https://github.com/shinae-woo,Iteratively scheduling modules by a task ,28,[],https://github.com/NetSys/bess/pull/739,https://github.com/shinae-woo,7,https://github.com/NetSys/bess/pull/739#issuecomment-353466784,"This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.",@sangjinhan thank you for such detailed comments. Will fix them all.,True,{}
NetSys/bess,https://github.com/NetSys/bess,739,2017-12-02T00:30:39Z,2018-03-29T20:56:30Z,2018-06-28T22:06:54Z,MERGED,True,1136,768,125,https://github.com/shinae-woo,Iteratively scheduling modules by a task ,28,[],https://github.com/NetSys/bess/pull/739,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/739#issuecomment-375572531,"This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.",Rebased to the latest master branch,True,{}
NetSys/bess,https://github.com/NetSys/bess,739,2017-12-02T00:30:39Z,2018-03-29T20:56:30Z,2018-06-28T22:06:54Z,MERGED,True,1136,768,125,https://github.com/shinae-woo,Iteratively scheduling modules by a task ,28,[],https://github.com/NetSys/bess/pull/739,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/739#issuecomment-377369803,"This PR changes a module scheduling within a task from recursive way within scheduler to iterative way. This provides following benefits.


Functionality: Each modules' execution boundary become clear as a Task fully control and know which modules will be being executing. As a result, sharing a module from multiple threads (or Workers in BESS contexts) can be implemented more efficiently as locking cost become smaller, or we can even remove locking. This can enable various future functionality such as do not reject sharing of a module between different workers (currently it is rejected), minimally interrupting a data-plane processing while update per-module configurations, Batching sequentially allocated packets to free at once, etc.


Performance: Get the benefit of packet batching back whenever possible. Previously, once a PacketBatch split into multiple packet batches, they will process separately and not merged back. However, now if the splitted packets paths are merged back together, the scheduler merged back the packet to regain the benefit of packet batching.


There should be following PRs to address more issues very soon,

Make both worker context and tasks arguments from modules as arguments, and move some per-task member variable (such as per-gate batch, PacketBatch pool) into workers.
Adjust the size of packet batch pool for a task before resuming.
Makes the tasks arguments non-const.","Merged (finally), thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,740,2017-12-04T21:31:12Z,2017-12-11T18:31:19Z,2017-12-11T18:31:26Z,CLOSED,False,42,1,1,https://github.com/nlsun,bessctl: Add tcpdump request-only command,1,[],https://github.com/NetSys/bess/pull/740,https://github.com/nlsun,1,https://github.com/NetSys/bess/pull/740,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,740,2017-12-04T21:31:12Z,2017-12-11T18:31:19Z,2017-12-11T18:31:26Z,CLOSED,False,42,1,1,https://github.com/nlsun,bessctl: Add tcpdump request-only command,1,[],https://github.com/NetSys/bess/pull/740,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/740#issuecomment-349120254,,"Codecov Report

Merging #740 into master will decrease coverage by 0.06%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master    #740      +/-   ##
=========================================
- Coverage   70.66%   70.6%   -0.07%     
=========================================
  Files         220     220              
  Lines       13824   13852      +28     
=========================================
+ Hits         9769    9780      +11     
- Misses       4055    4072      +17



Impacted Files
Coverage Δ





core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/modules/source.cc
75.67% <0%> (+1.99%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update df8e875...00949ae. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,740,2017-12-04T21:31:12Z,2017-12-11T18:31:19Z,2017-12-11T18:31:26Z,CLOSED,False,42,1,1,https://github.com/nlsun,bessctl: Add tcpdump request-only command,1,[],https://github.com/NetSys/bess/pull/740,https://github.com/nlsun,3,https://github.com/NetSys/bess/pull/740#issuecomment-350371857,,"Yes, it is if something else has created a pipe and is listening on it. This can then be used to write to such a specified pipe.",True,{}
NetSys/bess,https://github.com/NetSys/bess,740,2017-12-04T21:31:12Z,2017-12-11T18:31:19Z,2017-12-11T18:31:26Z,CLOSED,False,42,1,1,https://github.com/nlsun,bessctl: Add tcpdump request-only command,1,[],https://github.com/NetSys/bess/pull/740,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/740#issuecomment-350392442,,"If #744 PR merged, then it will make your things easier?",True,{}
NetSys/bess,https://github.com/NetSys/bess,740,2017-12-04T21:31:12Z,2017-12-11T18:31:19Z,2017-12-11T18:31:26Z,CLOSED,False,42,1,1,https://github.com/nlsun,bessctl: Add tcpdump request-only command,1,[],https://github.com/NetSys/bess/pull/740,https://github.com/nlsun,5,https://github.com/NetSys/bess/pull/740#issuecomment-350801360,,"Well, this is more for sending bess the message to start/stop the tcpdump. The deferrable/reconnectable tcpdump seems to solve a different issue",True,{}
NetSys/bess,https://github.com/NetSys/bess,740,2017-12-04T21:31:12Z,2017-12-11T18:31:19Z,2017-12-11T18:31:26Z,CLOSED,False,42,1,1,https://github.com/nlsun,bessctl: Add tcpdump request-only command,1,[],https://github.com/NetSys/bess/pull/740,https://github.com/nlsun,6,https://github.com/NetSys/bess/pull/740#issuecomment-350814382,,"Closing, since this seems like this is a rather niche use case",True,{}
NetSys/bess,https://github.com/NetSys/bess,741,2017-12-04T22:05:44Z,2017-12-14T21:32:58Z,2017-12-14T21:33:09Z,MERGED,True,19,8,1,https://github.com/shinae-woo,Bessd binary integrated with default modules,2,[],https://github.com/NetSys/bess/pull/741,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/741,"Modules as a shared library (.so) is available with'MODULE_LINK_DYNAMIC' flag
Plugin modules are compiled as .so library as is

This PR improves performance (chain/split/merge) from 2% ~ 15% based on workload. Complex pipelines get more benefits.","Modules as a shared library (.so) is available with'MODULE_LINK_DYNAMIC' flag
Plugin modules are compiled as .so library as is

This PR improves performance (chain/split/merge) from 2% ~ 15% based on workload. Complex pipelines get more benefits.",True,{}
NetSys/bess,https://github.com/NetSys/bess,741,2017-12-04T22:05:44Z,2017-12-14T21:32:58Z,2017-12-14T21:33:09Z,MERGED,True,19,8,1,https://github.com/shinae-woo,Bessd binary integrated with default modules,2,[],https://github.com/NetSys/bess/pull/741,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/741#issuecomment-349135771,"Modules as a shared library (.so) is available with'MODULE_LINK_DYNAMIC' flag
Plugin modules are compiled as .so library as is

This PR improves performance (chain/split/merge) from 2% ~ 15% based on workload. Complex pipelines get more benefits.","Codecov Report

Merging #741 into master will decrease coverage by 0.14%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #741      +/-   ##
==========================================
- Coverage   70.66%   70.52%   -0.15%     
==========================================
  Files         220      220              
  Lines       13824    13852      +28     
==========================================
  Hits         9769     9769              
- Misses       4055     4083      +28



Impacted Files
Coverage Δ





core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/bessd.cc
63.42% <0%> (-5.56%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/traffic_class.cc
90.68% <0%> (-0.35%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


pybess/bess.py
42.38% <0%> (+0.46%)
⬆️


core/modules/source.cc
75.67% <0%> (+1.99%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update df8e875...c46545b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,742,2017-12-04T23:20:46Z,2017-12-06T01:51:54Z,2017-12-06T01:52:00Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Upgrade from C++11 to C++14,1,[],https://github.com/NetSys/bess/pull/742,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/742,"g++ 5, which is our minimum requirement, supports C++14. So why not?","g++ 5, which is our minimum requirement, supports C++14. So why not?",True,{}
NetSys/bess,https://github.com/NetSys/bess,742,2017-12-04T23:20:46Z,2017-12-06T01:51:54Z,2017-12-06T01:52:00Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Upgrade from C++11 to C++14,1,[],https://github.com/NetSys/bess/pull/742,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/742#issuecomment-349150686,"g++ 5, which is our minimum requirement, supports C++14. So why not?","Codecov Report

Merging #742 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #742      +/-   ##
==========================================
+ Coverage   70.66%   70.67%   +<.01%     
==========================================
  Files         220      220              
  Lines       13824    13827       +3     
==========================================
+ Hits         9769     9772       +3     
  Misses       4055     4055



Impacted Files
Coverage Δ





core/traffic_class.cc
90.68% <0%> (-0.35%)
⬇️


core/modules/vlan_split.cc
100% <0%> (ø)
⬆️


core/modules/vlan_pop.cc
100% <0%> (ø)
⬆️


core/modules/vlan_push.cc
100% <0%> (ø)
⬆️


core/modules/source.cc
76.31% <0%> (+2.63%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update df8e875...a8fc096. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,742,2017-12-04T23:20:46Z,2017-12-06T01:51:54Z,2017-12-06T01:52:00Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Upgrade from C++11 to C++14,1,[],https://github.com/NetSys/bess/pull/742,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/742#issuecomment-349446401,"g++ 5, which is our minimum requirement, supports C++14. So why not?","Looks good, and no side effect detected from CI",True,{}
NetSys/bess,https://github.com/NetSys/bess,742,2017-12-04T23:20:46Z,2017-12-06T01:51:54Z,2017-12-06T01:52:00Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Upgrade from C++11 to C++14,1,[],https://github.com/NetSys/bess/pull/742,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/742#issuecomment-349503915,"g++ 5, which is our minimum requirement, supports C++14. So why not?",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,743,2017-12-05T20:26:37Z,2017-12-08T22:09:45Z,2018-06-28T22:07:43Z,MERGED,True,0,4023,16,https://github.com/shinae-woo,Retire nvport and snbuf,1,[],https://github.com/NetSys/bess/pull/743,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/743,"R.I.P.

It was being stale for a while.
I was the last user of nvport, and my project has been ported into new interfaces (vhost-user).
Maintaining this set of code requires extra efforts without no gain.

BYE!","R.I.P.

It was being stale for a while.
I was the last user of nvport, and my project has been ported into new interfaces (vhost-user).
Maintaining this set of code requires extra efforts without no gain.

BYE!",True,{}
NetSys/bess,https://github.com/NetSys/bess,743,2017-12-05T20:26:37Z,2017-12-08T22:09:45Z,2018-06-28T22:07:43Z,MERGED,True,0,4023,16,https://github.com/shinae-woo,Retire nvport and snbuf,1,[],https://github.com/NetSys/bess/pull/743,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/743#issuecomment-349442202,"R.I.P.

It was being stale for a while.
I was the last user of nvport, and my project has been ported into new interfaces (vhost-user).
Maintaining this set of code requires extra efforts without no gain.

BYE!","Codecov Report

Merging #743 into master will increase coverage by 0.51%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #743      +/-   ##
==========================================
+ Coverage   70.66%   71.18%   +0.51%     
==========================================
  Files         220      218       -2     
  Lines       13824    13725      -99     
==========================================
+ Hits         9769     9770       +1     
+ Misses       4055     3955     -100



Impacted Files
Coverage Δ





pybess/bess.py
42.38% <0%> (+0.46%)
⬆️


core/modules/source.cc
75.67% <0%> (+1.99%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update df8e875...b05b329. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,743,2017-12-05T20:26:37Z,2017-12-08T22:09:45Z,2018-06-28T22:07:43Z,MERGED,True,0,4023,16,https://github.com/shinae-woo,Retire nvport and snbuf,1,[],https://github.com/NetSys/bess/pull/743,https://github.com/apanda,3,https://github.com/NetSys/bess/pull/743#issuecomment-350384708,"R.I.P.

It was being stale for a while.
I was the last user of nvport, and my project has been ported into new interfaces (vhost-user).
Maintaining this set of code requires extra efforts without no gain.

BYE!","LGTM, thanks",True,{}
NetSys/bess,https://github.com/NetSys/bess,743,2017-12-05T20:26:37Z,2017-12-08T22:09:45Z,2018-06-28T22:07:43Z,MERGED,True,0,4023,16,https://github.com/shinae-woo,Retire nvport and snbuf,1,[],https://github.com/NetSys/bess/pull/743,https://github.com/apanda,4,https://github.com/NetSys/bess/pull/743#issuecomment-350384869,"R.I.P.

It was being stale for a while.
I was the last user of nvport, and my project has been ported into new interfaces (vhost-user).
Maintaining this set of code requires extra efforts without no gain.

BYE!",,True,{}
NetSys/bess,https://github.com/NetSys/bess,744,2017-12-05T21:48:08Z,2018-01-12T21:59:49Z,2018-01-12T22:22:04Z,MERGED,True,1900,131,13,https://github.com/chris3torek,"deferrable, reconnect-able fifos",4,[],https://github.com/NetSys/bess/pull/744,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/744,"This has only been lightly tested (I need to make sure it doesn't break tcpdump and pcapng in particular), but I'm putting it up for review before I get stuck on the freeway for hours...","This has only been lightly tested (I need to make sure it doesn't break tcpdump and pcapng in particular), but I'm putting it up for review before I get stuck on the freeway for hours...",True,{}
NetSys/bess,https://github.com/NetSys/bess,744,2017-12-05T21:48:08Z,2018-01-12T21:59:49Z,2018-01-12T22:22:04Z,MERGED,True,1900,131,13,https://github.com/chris3torek,"deferrable, reconnect-able fifos",4,[],https://github.com/NetSys/bess/pull/744,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/744#issuecomment-349506600,"This has only been lightly tested (I need to make sure it doesn't break tcpdump and pcapng in particular), but I'm putting it up for review before I get stuck on the freeway for hours...","Codecov Report

Merging #744 into master will increase coverage by 0.29%.
The diff coverage is 75.25%.


@@            Coverage Diff            @@
##           master    #744      +/-   ##
=========================================
+ Coverage    71.1%   71.4%   +0.29%     
=========================================
  Files         218     225       +7     
  Lines       13783   14294     +511     
=========================================
+ Hits         9800   10206     +406     
- Misses       3983    4088     +105



Impacted Files
Coverage Δ





core/gate_hooks/pcapng.h
0% <0%> (ø)



core/gate_hooks/pcapng.cc
2.24% <0%> (+0.14%)
⬆️


core/gate_hooks/tcpdump.cc
6.45% <0%> (-11.5%)
⬇️


core/gate_hooks/tcpdump.h
100% <100%> (ø)



core/drivers/unix_socket.h
100% <100%> (ø)
⬆️


core/utils/fifo_test.cc
71.62% <71.62%> (ø)



core/utils/fifo_opener.cc
81% <81%> (ø)



core/utils/fifo_opener.h
88.23% <88.23%> (ø)



core/drivers/unix_socket.cc
76.8% <92.85%> (-1.72%)
⬇️


core/utils/syscallthread.h
94.11% <94.11%> (ø)



... and 9 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8128886...bd2f0b1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,744,2017-12-05T21:48:08Z,2018-01-12T21:59:49Z,2018-01-12T22:22:04Z,MERGED,True,1900,131,13,https://github.com/chris3torek,"deferrable, reconnect-able fifos",4,[],https://github.com/NetSys/bess/pull/744,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/744#issuecomment-349734296,"This has only been lightly tested (I need to make sure it doesn't break tcpdump and pcapng in particular), but I'm putting it up for review before I get stuck on the freeway for hours...",(rebased with autosquash),True,{}
NetSys/bess,https://github.com/NetSys/bess,744,2017-12-05T21:48:08Z,2018-01-12T21:59:49Z,2018-01-12T22:22:04Z,MERGED,True,1900,131,13,https://github.com/chris3torek,"deferrable, reconnect-able fifos",4,[],https://github.com/NetSys/bess/pull/744,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/744#issuecomment-352151850,"This has only been lightly tested (I need to make sure it doesn't break tcpdump and pcapng in particular), but I'm putting it up for review before I get stuck on the freeway for hours...","Reworked per @shinae-woo comments, fixing a few minor const issues too; and I tweaked the fifo handler slightly in a new commit.",True,{}
NetSys/bess,https://github.com/NetSys/bess,744,2017-12-05T21:48:08Z,2018-01-12T21:59:49Z,2018-01-12T22:22:04Z,MERGED,True,1900,131,13,https://github.com/chris3torek,"deferrable, reconnect-able fifos",4,[],https://github.com/NetSys/bess/pull/744,https://github.com/chris3torek,5,https://github.com/NetSys/bess/pull/744#issuecomment-352595696,"This has only been lightly tested (I need to make sure it doesn't break tcpdump and pcapng in particular), but I'm putting it up for review before I get stuck on the freeway for hours...","(I missed one override keyword, which clang was strict about - fixed, re-rebased, etc)",True,{}
NetSys/bess,https://github.com/NetSys/bess,744,2017-12-05T21:48:08Z,2018-01-12T21:59:49Z,2018-01-12T22:22:04Z,MERGED,True,1900,131,13,https://github.com/chris3torek,"deferrable, reconnect-able fifos",4,[],https://github.com/NetSys/bess/pull/744,https://github.com/chris3torek,6,https://github.com/NetSys/bess/pull/744#issuecomment-352620351,"This has only been lightly tested (I need to make sure it doesn't break tcpdump and pcapng in particular), but I'm putting it up for review before I get stuck on the freeway for hours...",The remaining failures are because I have run into a somewhat obscure rule about not calling virtual functions from destructors. I will have to re-work this yet again to work around this rule.,True,{}
NetSys/bess,https://github.com/NetSys/bess,744,2017-12-05T21:48:08Z,2018-01-12T21:59:49Z,2018-01-12T22:22:04Z,MERGED,True,1900,131,13,https://github.com/chris3torek,"deferrable, reconnect-able fifos",4,[],https://github.com/NetSys/bess/pull/744,https://github.com/shinae-woo,7,https://github.com/NetSys/bess/pull/744#issuecomment-356785410,"This has only been lightly tested (I need to make sure it doesn't break tcpdump and pcapng in particular), but I'm putting it up for review before I get stuck on the freeway for hours...",Should someone confirm this PR? @sangjinhan @melvinw,True,{}
NetSys/bess,https://github.com/NetSys/bess,744,2017-12-05T21:48:08Z,2018-01-12T21:59:49Z,2018-01-12T22:22:04Z,MERGED,True,1900,131,13,https://github.com/chris3torek,"deferrable, reconnect-able fifos",4,[],https://github.com/NetSys/bess/pull/744,https://github.com/sangjinhan,8,https://github.com/NetSys/bess/pull/744#issuecomment-357366513,"This has only been lightly tested (I need to make sure it doesn't break tcpdump and pcapng in particular), but I'm putting it up for review before I get stuck on the freeway for hours...","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,745,2017-12-05T22:06:07Z,2018-01-13T00:09:02Z,2018-01-14T01:16:42Z,MERGED,True,73,25,5,https://github.com/pxgao,List gate hooks ,3,[],https://github.com/NetSys/bess/pull/745,https://github.com/pxgao,1,https://github.com/NetSys/bess/pull/745,"To know the current BESS gate hook state, I added a grpc called ListGateHooks","To know the current BESS gate hook state, I added a grpc called ListGateHooks",True,{}
NetSys/bess,https://github.com/NetSys/bess,745,2017-12-05T22:06:07Z,2018-01-13T00:09:02Z,2018-01-14T01:16:42Z,MERGED,True,73,25,5,https://github.com/pxgao,List gate hooks ,3,[],https://github.com/NetSys/bess/pull/745,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/745#issuecomment-349467606,"To know the current BESS gate hook state, I added a grpc called ListGateHooks","Codecov Report

Merging #745 into master will decrease coverage by 0.11%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #745      +/-   ##
==========================================
- Coverage   71.39%   71.28%   -0.12%     
==========================================
  Files         225      225              
  Lines       14253    14273      +20     
==========================================
- Hits        10176    10174       -2     
- Misses       4077     4099      +22



Impacted Files
Coverage Δ





core/bessctl.cc
53.11% <0%> (-1.05%)
⬇️


pybess/bess.py
41.92% <0%> (-0.47%)
⬇️


core/gate.h
68.42% <0%> (-5.87%)
⬇️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/traffic_class.cc
91.03% <0%> (+0.34%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5eb975f...e02facb. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,745,2017-12-05T22:06:07Z,2018-01-13T00:09:02Z,2018-01-14T01:16:42Z,MERGED,True,73,25,5,https://github.com/pxgao,List gate hooks ,3,[],https://github.com/NetSys/bess/pull/745,https://github.com/pxgao,3,https://github.com/NetSys/bess/pull/745#issuecomment-350086147,"To know the current BESS gate hook state, I added a grpc called ListGateHooks",Rebased to #744  chris3torek:fifo,True,{}
NetSys/bess,https://github.com/NetSys/bess,745,2017-12-05T22:06:07Z,2018-01-13T00:09:02Z,2018-01-14T01:16:42Z,MERGED,True,73,25,5,https://github.com/pxgao,List gate hooks ,3,[],https://github.com/NetSys/bess/pull/745,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/745#issuecomment-357369245,"To know the current BESS gate hook state, I added a grpc called ListGateHooks",LGTM. Rebased to the master branch.,True,{}
NetSys/bess,https://github.com/NetSys/bess,745,2017-12-05T22:06:07Z,2018-01-13T00:09:02Z,2018-01-14T01:16:42Z,MERGED,True,73,25,5,https://github.com/pxgao,List gate hooks ,3,[],https://github.com/NetSys/bess/pull/745,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/745#issuecomment-357389082,"To know the current BESS gate hook state, I added a grpc called ListGateHooks",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,746,2017-12-08T20:44:03Z,2017-12-08T21:55:37Z,2017-12-08T21:56:30Z,MERGED,True,23,15,4,https://github.com/sangjinhan,Add an option to skip installing default gate hooks when connecting modules,2,[],https://github.com/NetSys/bess/pull/746,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/746,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,746,2017-12-08T20:44:03Z,2017-12-08T21:55:37Z,2017-12-08T21:56:30Z,MERGED,True,23,15,4,https://github.com/sangjinhan,Add an option to skip installing default gate hooks when connecting modules,2,[],https://github.com/NetSys/bess/pull/746,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/746#issuecomment-350375863,,"Codecov Report

Merging #746 into master will decrease coverage by 0.07%.
The diff coverage is 50%.


@@            Coverage Diff             @@
##           master     #746      +/-   ##
==========================================
- Coverage   70.69%   70.62%   -0.08%     
==========================================
  Files         220      220              
  Lines       13827    13858      +31     
==========================================
+ Hits         9775     9787      +12     
- Misses       4052     4071      +19



Impacted Files
Coverage Δ





core/module_graph.cc
85.61% <100%> (+0.1%)
⬆️


core/bessctl.cc
54.16% <40%> (-0.01%)
⬇️


core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1ce969e...27c8e13. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,746,2017-12-08T20:44:03Z,2017-12-08T21:55:37Z,2017-12-08T21:56:30Z,MERGED,True,23,15,4,https://github.com/sangjinhan,Add an option to skip installing default gate hooks when connecting modules,2,[],https://github.com/NetSys/bess/pull/746,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/746#issuecomment-350382229,,,True,{'LAUGH': ['https://github.com/pxgao']}
NetSys/bess,https://github.com/NetSys/bess,747,2017-12-08T23:18:00Z,2017-12-14T23:52:26Z,2017-12-15T00:05:04Z,MERGED,True,9,55,8,https://github.com/shinae-woo,SSE4_2 has become the minimal requirements as with DPDK,2,[],https://github.com/NetSys/bess/pull/747,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/747,SSE4.2 has become the minimal requirements for DPDK. So as to for BESS.,SSE4.2 has become the minimal requirements for DPDK. So as to for BESS.,True,{}
NetSys/bess,https://github.com/NetSys/bess,747,2017-12-08T23:18:00Z,2017-12-14T23:52:26Z,2017-12-15T00:05:04Z,MERGED,True,9,55,8,https://github.com/shinae-woo,SSE4_2 has become the minimal requirements as with DPDK,2,[],https://github.com/NetSys/bess/pull/747,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/747#issuecomment-350403640,SSE4.2 has become the minimal requirements for DPDK. So as to for BESS.,"Codecov Report

Merging #747 into master will increase coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #747      +/-   ##
==========================================
+ Coverage   71.11%   71.12%   +<.01%     
==========================================
  Files         218      218              
  Lines       13760    13761       +1     
==========================================
+ Hits         9786     9787       +1     
  Misses       3974     3974



Impacted Files
Coverage Δ





core/utils/http_parser.cc
36.59% <ø> (ø)
⬆️


core/utils/simd.h
100% <ø> (ø)
⬆️


core/modules/url_filter.h
100% <ø> (ø)
⬆️


core/modules/vlan_push.cc
100% <ø> (ø)
⬆️


core/utils/exact_match_table.h
88.14% <ø> (ø)
⬆️


core/modules/wildcard_match.h
95.45% <ø> (ø)
⬆️


core/modules/hash_lb.cc
51.92% <ø> (ø)
⬆️


core/modules/nat.h
100% <ø> (ø)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7c04717...4b9072c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,747,2017-12-08T23:18:00Z,2017-12-14T23:52:26Z,2017-12-15T00:05:04Z,MERGED,True,9,55,8,https://github.com/shinae-woo,SSE4_2 has become the minimal requirements as with DPDK,2,[],https://github.com/NetSys/bess/pull/747,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/747#issuecomment-350825860,SSE4.2 has become the minimal requirements for DPDK. So as to for BESS.,"Note: the SSE4.2 requirement is not yet strictly required for the current version of BESS, but we are planning to update to DPDK 17.11 soon.",True,{}
NetSys/bess,https://github.com/NetSys/bess,747,2017-12-08T23:18:00Z,2017-12-14T23:52:26Z,2017-12-15T00:05:04Z,MERGED,True,9,55,8,https://github.com/shinae-woo,SSE4_2 has become the minimal requirements as with DPDK,2,[],https://github.com/NetSys/bess/pull/747,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/747#issuecomment-351871750,SSE4.2 has become the minimal requirements for DPDK. So as to for BESS.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,748,2017-12-08T23:19:40Z,2017-12-11T19:04:56Z,2017-12-15T00:05:05Z,MERGED,True,2,2,1,https://github.com/shinae-woo,"BESSD should not exit(), when failed to load modules",1,[],https://github.com/NetSys/bess/pull/748,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/748,Bessd doesn't need to exit when faiedl to load external plugins.,Bessd doesn't need to exit when faiedl to load external plugins.,True,{}
NetSys/bess,https://github.com/NetSys/bess,748,2017-12-08T23:19:40Z,2017-12-11T19:04:56Z,2017-12-15T00:05:05Z,MERGED,True,2,2,1,https://github.com/shinae-woo,"BESSD should not exit(), when failed to load modules",1,[],https://github.com/NetSys/bess/pull/748,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/748#issuecomment-350406369,Bessd doesn't need to exit when faiedl to load external plugins.,"Codecov Report

Merging #748 into master will increase coverage by 0.07%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #748      +/-   ##
==========================================
+ Coverage   71.11%   71.18%   +0.07%     
==========================================
  Files         218      218              
  Lines       13760    13731      -29     
==========================================
- Hits         9786     9775      -11     
+ Misses       3974     3956      -18



Impacted Files
Coverage Δ





core/main.cc
89.74% <0%> (ø)
⬆️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7c04717...ee12730. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,748,2017-12-08T23:19:40Z,2017-12-11T19:04:56Z,2017-12-15T00:05:05Z,MERGED,True,2,2,1,https://github.com/shinae-woo,"BESSD should not exit(), when failed to load modules",1,[],https://github.com/NetSys/bess/pull/748,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/748#issuecomment-350824548,Bessd doesn't need to exit when faiedl to load external plugins.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/749,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes","libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes",True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/shinae-woo,2,https://github.com/NetSys/bess/pull/749#issuecomment-350907247,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes",The container should be re-build. ❓ ❓,True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/749#issuecomment-351191743,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes",@sangjinhan Thank you for building new containers.,True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/749#issuecomment-351192166,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes",@ddiproietto Thank you for the review! I will fix that point!,True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/749#issuecomment-351195077,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes","Codecov Report

Merging #749 into master will increase coverage by <.01%.
The diff coverage is 14.28%.


@@            Coverage Diff             @@
##           master     #749      +/-   ##
==========================================
+ Coverage   71.18%   71.18%   +<.01%     
==========================================
  Files         218      218              
  Lines       13732    13691      -41     
==========================================
- Hits         9775     9746      -29     
+ Misses       3957     3945      -12



Impacted Files
Coverage Δ





core/modules/ip_lookup.cc
77.92% <ø> (+4.36%)
⬆️


core/drivers/pmd.h
42.85% <ø> (ø)
⬆️


core/drivers/vport.cc
4.76% <0%> (ø)
⬆️


core/drivers/pmd.cc
4% <0%> (-0.07%)
⬇️


core/packet.cc
34.64% <100%> (ø)
⬆️


core/traffic_class.cc
90.68% <0%> (-0.35%)
⬇️


core/modules/source.cc
76.31% <0%> (+2.63%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5b9e6fb...22edfaf. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/749#issuecomment-351804511,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes","In core/modules/ip_lookup.cc, there is some temporary code to work around an issue of DPDK 17.02. Given that the issue has gone in the new version, could you clean up the hack I made in the file?",True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/shinae-woo,7,https://github.com/NetSys/bess/pull/749#issuecomment-351816737,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes","@sangjinhan This is a very weird bug on g++ side... Anyway, DPDK 17.11 have the similar workaround codes inside rte_lpm_lookupx4, so I remove the temporary code from the module code.",True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/shinae-woo,8,https://github.com/NetSys/bess/pull/749#issuecomment-351818041,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes","FYI, workaround introduced from dpdk 17.08",True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/749#issuecomment-351834826,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes",That's the code I pushed to the DPDK upstream 😸,True,{}
NetSys/bess,https://github.com/NetSys/bess,749,2017-12-12T00:18:48Z,2017-12-21T00:56:53Z,2017-12-21T00:57:33Z,MERGED,True,31,135,12,https://github.com/shinae-woo,Update DPDK version to 17.11,3,[],https://github.com/NetSys/bess/pull/749,https://github.com/sangjinhan,10,https://github.com/NetSys/bess/pull/749#issuecomment-353226758,"libnuma becomes mandatory
port_id becomes to 16 bits
Extending supports for various RX offloads and associated API changes
A few minior API changes","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,751,2017-12-14T12:58:47Z,2017-12-20T20:49:07Z,2018-06-05T09:58:41Z,MERGED,True,140,18,5,https://github.com/levaitamas,Add delete command for IPLookup module,3,[],https://github.com/NetSys/bess/pull/751,https://github.com/levaitamas,1,https://github.com/NetSys/bess/pull/751,"Mostly done as cargo cult programming, but it works for me.
Comments welcome.","Mostly done as cargo cult programming, but it works for me.
Comments welcome.",True,{}
NetSys/bess,https://github.com/NetSys/bess,751,2017-12-14T12:58:47Z,2017-12-20T20:49:07Z,2018-06-05T09:58:41Z,MERGED,True,140,18,5,https://github.com/levaitamas,Add delete command for IPLookup module,3,[],https://github.com/NetSys/bess/pull/751,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/751#issuecomment-351712593,"Mostly done as cargo cult programming, but it works for me.
Comments welcome.","Codecov Report

Merging #751 into master will decrease coverage by 0.09%.
The diff coverage is 75.75%.


@@            Coverage Diff            @@
##           master     #751     +/-   ##
=========================================
- Coverage   71.18%   71.08%   -0.1%     
=========================================
  Files         218      218             
  Lines       13732    13783     +51     
=========================================
+ Hits         9775     9798     +23     
- Misses       3957     3985     +28



Impacted Files
Coverage Δ





core/modules/ip_lookup.h
100% <ø> (ø)
⬆️


core/modules/ip_lookup.cc
79.72% <75.75%> (+6.16%)
⬆️


core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/bessd.cc
63.42% <0%> (-5.56%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


pybess/bess.py
41.92% <0%> (-0.47%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/http_parser.cc
36.59% <0%> (ø)
⬆️


core/modules/vlan_push.cc
100% <0%> (ø)
⬆️


core/modules/source.cc
76.31% <0%> (+2.63%)
⬆️


... and 1 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5b9e6fb...3a07ba2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,751,2017-12-14T12:58:47Z,2017-12-20T20:49:07Z,2018-06-05T09:58:41Z,MERGED,True,140,18,5,https://github.com/levaitamas,Add delete command for IPLookup module,3,[],https://github.com/NetSys/bess/pull/751,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/751#issuecomment-351873030,"Mostly done as cargo cult programming, but it works for me.
Comments welcome.",LGTM. Perhaps you can refactor the common code in Add and Delete regarding argument processing?,True,{}
NetSys/bess,https://github.com/NetSys/bess,751,2017-12-14T12:58:47Z,2017-12-20T20:49:07Z,2018-06-05T09:58:41Z,MERGED,True,140,18,5,https://github.com/levaitamas,Add delete command for IPLookup module,3,[],https://github.com/NetSys/bess/pull/751,https://github.com/levaitamas,4,https://github.com/NetSys/bess/pull/751#issuecomment-351991807,"Mostly done as cargo cult programming, but it works for me.
Comments welcome.",I tried to address  @melvinw's and @sangjinhan's  comments with a new commit. Thanks.,True,{}
NetSys/bess,https://github.com/NetSys/bess,751,2017-12-14T12:58:47Z,2017-12-20T20:49:07Z,2018-06-05T09:58:41Z,MERGED,True,140,18,5,https://github.com/levaitamas,Add delete command for IPLookup module,3,[],https://github.com/NetSys/bess/pull/751,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/751#issuecomment-353178676,"Mostly done as cargo cult programming, but it works for me.
Comments welcome.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,753,2017-12-21T00:56:35Z,2017-12-22T22:21:42Z,2017-12-22T22:22:08Z,MERGED,True,4,7,2,https://github.com/sangjinhan,Use lookup table in Rewrite to solve unfairness,1,[],https://github.com/NetSys/bess/pull/753,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/753,... among templates. Also see #436,... among templates. Also see #436,True,{}
NetSys/bess,https://github.com/NetSys/bess,753,2017-12-21T00:56:35Z,2017-12-22T22:21:42Z,2017-12-22T22:22:08Z,MERGED,True,4,7,2,https://github.com/sangjinhan,Use lookup table in Rewrite to solve unfairness,1,[],https://github.com/NetSys/bess/pull/753,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/753#issuecomment-353235540,... among templates. Also see #436,"Codecov Report

Merging #753 into master will decrease coverage by 0.01%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #753      +/-   ##
==========================================
- Coverage    71.1%   71.08%   -0.02%     
==========================================
  Files         218      218              
  Lines       13783    13782       -1     
==========================================
- Hits         9800     9797       -3     
- Misses       3983     3985       +2



Impacted Files
Coverage Δ





core/modules/rewrite.h
100% <ø> (ø)
⬆️


core/modules/rewrite.cc
88.52% <100%> (-0.19%)
⬇️


pybess/bess.py
41.92% <0%> (-0.47%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8128886...cff18a0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,753,2017-12-21T00:56:35Z,2017-12-22T22:21:42Z,2017-12-22T22:22:08Z,MERGED,True,4,7,2,https://github.com/sangjinhan,Use lookup table in Rewrite to solve unfairness,1,[],https://github.com/NetSys/bess/pull/753,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/753#issuecomment-353683767,... among templates. Also see #436,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,754,2017-12-27T00:33:19Z,2017-12-28T04:23:23Z,2017-12-28T19:11:02Z,MERGED,True,7,2,1,https://github.com/chris3torek,minor histogram changes,1,[],https://github.com/NetSys/bess/pull/754,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/754,"NB: I originally put in a static assert with is_integral, and
then histogram_test.cc failed.  I'm not sure which one we should fix!

While examining the measure module I noted a few things
to improve slightly in the histogram code:


Comments say that the type must be integral.  It probably should
be but at least one test uses double, and any arithmetic type
will work up to the point where it runs out of bits, at least.
Adjust the comment and assert that the type is arithmetic.  If
we want to constrain the type to integral, we'll need to fix
the test.


The Reset() function constructs an all-new vector of the type,
to reset to all-zero values.  We can just memset() the data now
that we have C++11 which gives us a vector .data() operator,
since we only run on machines with all-zero-bits = 0 (integral)
or 0.0 (float/double).","NB: I originally put in a static assert with is_integral, and
then histogram_test.cc failed.  I'm not sure which one we should fix!

While examining the measure module I noted a few things
to improve slightly in the histogram code:


Comments say that the type must be integral.  It probably should
be but at least one test uses double, and any arithmetic type
will work up to the point where it runs out of bits, at least.
Adjust the comment and assert that the type is arithmetic.  If
we want to constrain the type to integral, we'll need to fix
the test.


The Reset() function constructs an all-new vector of the type,
to reset to all-zero values.  We can just memset() the data now
that we have C++11 which gives us a vector .data() operator,
since we only run on machines with all-zero-bits = 0 (integral)
or 0.0 (float/double).",True,{}
NetSys/bess,https://github.com/NetSys/bess,754,2017-12-27T00:33:19Z,2017-12-28T04:23:23Z,2017-12-28T19:11:02Z,MERGED,True,7,2,1,https://github.com/chris3torek,minor histogram changes,1,[],https://github.com/NetSys/bess/pull/754,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/754#issuecomment-354034905,"NB: I originally put in a static assert with is_integral, and
then histogram_test.cc failed.  I'm not sure which one we should fix!

While examining the measure module I noted a few things
to improve slightly in the histogram code:


Comments say that the type must be integral.  It probably should
be but at least one test uses double, and any arithmetic type
will work up to the point where it runs out of bits, at least.
Adjust the comment and assert that the type is arithmetic.  If
we want to constrain the type to integral, we'll need to fix
the test.


The Reset() function constructs an all-new vector of the type,
to reset to all-zero values.  We can just memset() the data now
that we have C++11 which gives us a vector .data() operator,
since we only run on machines with all-zero-bits = 0 (integral)
or 0.0 (float/double).","Codecov Report

Merging #754 into master will decrease coverage by <.01%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #754      +/-   ##
==========================================
- Coverage   71.17%   71.16%   -0.01%     
==========================================
  Files         218      218              
  Lines       13712    13712              
==========================================
- Hits         9759     9758       -1     
- Misses       3953     3954       +1



Impacted Files
Coverage Δ





core/utils/histogram.h
100% <ø> (ø)
⬆️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1d8088b...bd79735. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,754,2017-12-27T00:33:19Z,2017-12-28T04:23:23Z,2017-12-28T19:11:02Z,MERGED,True,7,2,1,https://github.com/chris3torek,minor histogram changes,1,[],https://github.com/NetSys/bess/pull/754,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/754#issuecomment-354180256,"NB: I originally put in a static assert with is_integral, and
then histogram_test.cc failed.  I'm not sure which one we should fix!

While examining the measure module I noted a few things
to improve slightly in the histogram code:


Comments say that the type must be integral.  It probably should
be but at least one test uses double, and any arithmetic type
will work up to the point where it runs out of bits, at least.
Adjust the comment and assert that the type is arithmetic.  If
we want to constrain the type to integral, we'll need to fix
the test.


The Reset() function constructs an all-new vector of the type,
to reset to all-zero values.  We can just memset() the data now
that we have C++11 which gives us a vector .data() operator,
since we only run on machines with all-zero-bits = 0 (integral)
or 0.0 (float/double).","Switched to std::fill.  Testing shows that both g++ and clang++ emit tail calls to memset here.  Curiously, both of them check for an empty vector first, rather than blindly calling memset, perhaps to allow for the pointer to be invalid if the size is zero.
(I'm still not sure if the test that uses double is OK, or if this really should be restricted to integer types.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,754,2017-12-27T00:33:19Z,2017-12-28T04:23:23Z,2017-12-28T19:11:02Z,MERGED,True,7,2,1,https://github.com/chris3torek,minor histogram changes,1,[],https://github.com/NetSys/bess/pull/754,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/754#issuecomment-354182183,"NB: I originally put in a static assert with is_integral, and
then histogram_test.cc failed.  I'm not sure which one we should fix!

While examining the measure module I noted a few things
to improve slightly in the histogram code:


Comments say that the type must be integral.  It probably should
be but at least one test uses double, and any arithmetic type
will work up to the point where it runs out of bits, at least.
Adjust the comment and assert that the type is arithmetic.  If
we want to constrain the type to integral, we'll need to fix
the test.


The Reset() function constructs an all-new vector of the type,
to reset to all-zero values.  We can just memset() the data now
that we have C++11 which gives us a vector .data() operator,
since we only run on machines with all-zero-bits = 0 (integral)
or 0.0 (float/double).","BTW, if this looks reasonable, the next step is to make a split-up ""prepare reset""/""do reset as fast as possible""/""finish reset"" sequence, so that BESS's internal speed hack using std::move can be hidden away.  BESS is trying to avoid an expensive operation (big allocation or memset) while holding a spinlock, in the Measure module Clear function.  It currently makes a second histogram and then assigns using std::move, which makes the internal vector use a move-and-free.  We could make it use std::swap instead, perhaps (and otherwise be pretty similar to how it's set up now).",True,{}
NetSys/bess,https://github.com/NetSys/bess,754,2017-12-27T00:33:19Z,2017-12-28T04:23:23Z,2017-12-28T19:11:02Z,MERGED,True,7,2,1,https://github.com/chris3torek,minor histogram changes,1,[],https://github.com/NetSys/bess/pull/754,https://github.com/barath,5,https://github.com/NetSys/bess/pull/754#issuecomment-354182345,"NB: I originally put in a static assert with is_integral, and
then histogram_test.cc failed.  I'm not sure which one we should fix!

While examining the measure module I noted a few things
to improve slightly in the histogram code:


Comments say that the type must be integral.  It probably should
be but at least one test uses double, and any arithmetic type
will work up to the point where it runs out of bits, at least.
Adjust the comment and assert that the type is arithmetic.  If
we want to constrain the type to integral, we'll need to fix
the test.


The Reset() function constructs an all-new vector of the type,
to reset to all-zero values.  We can just memset() the data now
that we have C++11 which gives us a vector .data() operator,
since we only run on machines with all-zero-bits = 0 (integral)
or 0.0 (float/double).","That seems good to me, though Melvin or Sangjin may have more to say about
it.
…
On Wed, Dec 27, 2017 at 1:44 PM, Chris Torek ***@***.***> wrote:
 BTW, if this looks reasonable, the next step is to make a split-up
 ""prepare reset""/""do reset as fast as possible""/""finish reset"" sequence, so
 that BESS's internal speed hack using std::move can be hidden away. BESS
 is trying to avoid an expensive operation (big allocation or memset) while
 holding a spinlock, in the Measure module Clear function. It currently
 makes a second histogram and then assigns using std::move, which makes
 the internal vector use a move-and-free. We could make it use std::swap
 instead, perhaps (and otherwise be pretty similar to how it's set up now).

 —
 You are receiving this because you commented.
 Reply to this email directly, view it on GitHub
 <#754 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAk7ehBGfzvP1sju81Y7XGfumwLVfltgks5tErpKgaJpZM4RNFCf>
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,755,2018-01-09T00:35:42Z,2018-03-22T06:18:48Z,2018-06-28T22:07:46Z,MERGED,True,590,561,120,https://github.com/shinae-woo,Task to context,9,[],https://github.com/NetSys/bess/pull/755,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/755,"With this PR, modules do not access directly into the thread-local storage, but modules can access the current execution contexts 'Context *' such as task, worker id,  current cycles/time, etc.
!! This PR should be merged with #739. This requires changing module interface as well. So I would recommend deferring merging #739 until this PR is approved and is ready to merge.","With this PR, modules do not access directly into the thread-local storage, but modules can access the current execution contexts 'Context *' such as task, worker id,  current cycles/time, etc.
!! This PR should be merged with #739. This requires changing module interface as well. So I would recommend deferring merging #739 until this PR is approved and is ready to merge.",True,{}
NetSys/bess,https://github.com/NetSys/bess,755,2018-01-09T00:35:42Z,2018-03-22T06:18:48Z,2018-06-28T22:07:46Z,MERGED,True,590,561,120,https://github.com/shinae-woo,Task to context,9,[],https://github.com/NetSys/bess/pull/755,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/755#issuecomment-375192367,"With this PR, modules do not access directly into the thread-local storage, but modules can access the current execution contexts 'Context *' such as task, worker id,  current cycles/time, etc.
!! This PR should be merged with #739. This requires changing module interface as well. So I would recommend deferring merging #739 until this PR is approved and is ready to merge.",Merged to the scheduler_1103 branch. Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,757,2018-01-10T23:43:50Z,2018-01-12T21:40:32Z,2018-03-18T06:14:25Z,MERGED,True,1,3,1,https://github.com/sangjinhan,Use ucontext_t in place of ucontext,1,[],https://github.com/NetSys/bess/pull/757,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/757,"debug.cc fails to build on Ubuntu 17.10, where its ucontext.h file does not declare struct ucontext any longer. Use typedef'ed ucontext_t instead. Reported by #756.","debug.cc fails to build on Ubuntu 17.10, where its ucontext.h file does not declare struct ucontext any longer. Use typedef'ed ucontext_t instead. Reported by #756.",True,{}
NetSys/bess,https://github.com/NetSys/bess,757,2018-01-10T23:43:50Z,2018-01-12T21:40:32Z,2018-03-18T06:14:25Z,MERGED,True,1,3,1,https://github.com/sangjinhan,Use ucontext_t in place of ucontext,1,[],https://github.com/NetSys/bess/pull/757,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/757#issuecomment-356783509,"debug.cc fails to build on Ubuntu 17.10, where its ucontext.h file does not declare struct ucontext any longer. Use typedef'ed ucontext_t instead. Reported by #756.","Codecov Report

Merging #757 into master will increase coverage by 0.05%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #757      +/-   ##
==========================================
+ Coverage    71.1%   71.15%   +0.05%     
==========================================
  Files         218      218              
  Lines       13741    13712      -29     
==========================================
- Hits         9770     9757      -13     
+ Misses       3971     3955      -16



Impacted Files
Coverage Δ





core/debug.cc
56.58% <0%> (ø)
⬆️


pybess/bess.py
41.92% <0%> (-0.47%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/utils/checksum.h
95.86% <0%> (+2.29%)
⬆️


core/utils/copy.h
76.92% <0%> (+13.19%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 83470fd...264dce6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,757,2018-01-10T23:43:50Z,2018-01-12T21:40:32Z,2018-03-18T06:14:25Z,MERGED,True,1,3,1,https://github.com/sangjinhan,Use ucontext_t in place of ucontext,1,[],https://github.com/NetSys/bess/pull/757,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/757#issuecomment-357361843,"debug.cc fails to build on Ubuntu 17.10, where its ucontext.h file does not declare struct ucontext any longer. Use typedef'ed ucontext_t instead. Reported by #756.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,758,2018-01-14T00:28:02Z,2018-01-14T00:30:25Z,2018-01-14T00:30:31Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Update README.md,1,[],https://github.com/NetSys/bess/pull/758,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/758,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,760,2018-01-19T21:46:04Z,2018-01-26T22:50:40Z,2018-01-26T22:50:49Z,MERGED,True,372,120,16,https://github.com/chris3torek,Gatehookcmds,9,[],https://github.com/NetSys/bess/pull/760,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/760,"This is a fairly complicated series of 9 commits that:

cleans up a few minor bugs here and there
reorganizes the code to instantiate gate hooks
adds the concept of a ""gate hook command""
adds a sample gate hook command (""reset"" to the ""track"" hook)
adds code to invoke the track hook reset from bessctl

(but there is no test for this reset, and I should probably write one).
It may make sense to collapse the last three commits into one, but the rest probably should stay independent since they are a good idea whether or not gate hook commands are also a good idea... 😺","This is a fairly complicated series of 9 commits that:

cleans up a few minor bugs here and there
reorganizes the code to instantiate gate hooks
adds the concept of a ""gate hook command""
adds a sample gate hook command (""reset"" to the ""track"" hook)
adds code to invoke the track hook reset from bessctl

(but there is no test for this reset, and I should probably write one).
It may make sense to collapse the last three commits into one, but the rest probably should stay independent since they are a good idea whether or not gate hook commands are also a good idea... 😺",True,{}
NetSys/bess,https://github.com/NetSys/bess,760,2018-01-19T21:46:04Z,2018-01-26T22:50:40Z,2018-01-26T22:50:49Z,MERGED,True,372,120,16,https://github.com/chris3torek,Gatehookcmds,9,[],https://github.com/NetSys/bess/pull/760,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/760#issuecomment-359106648,"This is a fairly complicated series of 9 commits that:

cleans up a few minor bugs here and there
reorganizes the code to instantiate gate hooks
adds the concept of a ""gate hook command""
adds a sample gate hook command (""reset"" to the ""track"" hook)
adds code to invoke the track hook reset from bessctl

(but there is no test for this reset, and I should probably write one).
It may make sense to collapse the last three commits into one, but the rest probably should stay independent since they are a good idea whether or not gate hook commands are also a good idea... 😺","Codecov Report

Merging #760 into master will decrease coverage by 0.07%.
The diff coverage is 31.94%.


@@            Coverage Diff             @@
##           master     #760      +/-   ##
==========================================
- Coverage   71.34%   71.26%   -0.08%     
==========================================
  Files         225      226       +1     
  Lines       14245    14323      +78     
==========================================
+ Hits        10163    10208      +45     
- Misses       4082     4115      +33



Impacted Files
Coverage Δ





core/gate_hooks/track.h
100% <ø> (ø)
⬆️


core/bessctl.cc
53.57% <0%> (+0.46%)
⬆️


core/modules/acl.cc
82.85% <100%> (ø)
⬆️


core/module.cc
89.14% <100%> (-0.15%)
⬇️


core/commands.h
100% <100%> (ø)



core/modules/worker_split.cc
96.96% <100%> (ø)
⬆️


core/gate_test.cc
100% <100%> (ø)
⬆️


core/module_graph.cc
85.61% <100%> (ø)
⬆️


core/gate_hooks/track.cc
68.18% <28.57%> (+1.51%)
⬆️


pybess/bess.py
39.73% <3.22%> (-2.19%)
⬇️


... and 9 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ed9c016...387f169. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,760,2018-01-19T21:46:04Z,2018-01-26T22:50:40Z,2018-01-26T22:50:49Z,MERGED,True,372,120,16,https://github.com/chris3torek,Gatehookcmds,9,[],https://github.com/NetSys/bess/pull/760,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/760#issuecomment-359562632,"This is a fairly complicated series of 9 commits that:

cleans up a few minor bugs here and there
reorganizes the code to instantiate gate hooks
adds the concept of a ""gate hook command""
adds a sample gate hook command (""reset"" to the ""track"" hook)
adds code to invoke the track hook reset from bessctl

(but there is no test for this reset, and I should probably write one).
It may make sense to collapse the last three commits into one, but the rest probably should stay independent since they are a good idea whether or not gate hook commands are also a good idea... 😺",Updated to use CHECK(0). Using CHECK_NE fails as the map iterator and/or .end() does not support operator<< on an ostream.,True,{}
NetSys/bess,https://github.com/NetSys/bess,761,2018-01-20T02:07:24Z,2018-01-23T22:09:47Z,2018-03-18T06:14:31Z,MERGED,True,1,1,1,https://github.com/ddiproietto,pybess: Fix _configure_gate_hook(),1,[],https://github.com/NetSys/bess/pull/761,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/761,"The ConfigureGateHook protobuf message has changed: update its usage.
This fixes tcpdump in bessctl.
Reported by @gatanu","The ConfigureGateHook protobuf message has changed: update its usage.
This fixes tcpdump in bessctl.
Reported by @gatanu",True,{}
NetSys/bess,https://github.com/NetSys/bess,761,2018-01-20T02:07:24Z,2018-01-23T22:09:47Z,2018-03-18T06:14:31Z,MERGED,True,1,1,1,https://github.com/ddiproietto,pybess: Fix _configure_gate_hook(),1,[],https://github.com/NetSys/bess/pull/761,https://github.com/ddiproietto,2,https://github.com/NetSys/bess/pull/761#issuecomment-359137087,"The ConfigureGateHook protobuf message has changed: update its usage.
This fixes tcpdump in bessctl.
Reported by @gatanu","I should point out that the exception generated by protobuf_to_dict() was not shown because bessctl was stuck here:

  
    
      bess/bessctl/commands.py
    
    
         Line 1880
      in
      ed9c016
    
  
  
    

        
          
           proc.wait()",True,{}
NetSys/bess,https://github.com/NetSys/bess,761,2018-01-20T02:07:24Z,2018-01-23T22:09:47Z,2018-03-18T06:14:31Z,MERGED,True,1,1,1,https://github.com/ddiproietto,pybess: Fix _configure_gate_hook(),1,[],https://github.com/NetSys/bess/pull/761,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/761#issuecomment-359139225,"The ConfigureGateHook protobuf message has changed: update its usage.
This fixes tcpdump in bessctl.
Reported by @gatanu","Codecov Report

Merging #761 into master will increase coverage by 0.02%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #761      +/-   ##
==========================================
+ Coverage   71.34%   71.36%   +0.02%     
==========================================
  Files         225      225              
  Lines       14245    14245              
==========================================
+ Hits        10163    10166       +3     
+ Misses       4082     4079       -3



Impacted Files
Coverage Δ





pybess/bess.py
42.38% <0%> (+0.46%)
⬆️


core/modules/flowgen.cc
74.07% <0%> (+0.37%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ed9c016...730f771. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,762,2018-01-27T00:22:23Z,2018-02-06T18:16:12Z,2018-11-26T19:08:40Z,MERGED,True,53,43,10,https://github.com/ddiproietto,Make BESS easier to test without root,3,[],https://github.com/NetSys/bess/pull/762,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/762,"I'd like to use BESS in a set of tests that could be run in parallel and without root privileges.

As long as there are no PMD devices and hugepages, bessd should work as non root, so this PR adds a command line flags to skip the root check.

To be able to run in parallel, I'd like each BESS instance to listen on a unix domain socket. gRPC makes it easy to do that, so:

This commits adds a --grpc_url option to bessd. the -p and -b options are kept for backward compatibility.
The bessctl daemon connect command is changed: it takes a grpc URL instead of the host and the port, to make it more generic. This is not backward compatible","I'd like to use BESS in a set of tests that could be run in parallel and without root privileges.

As long as there are no PMD devices and hugepages, bessd should work as non root, so this PR adds a command line flags to skip the root check.

To be able to run in parallel, I'd like each BESS instance to listen on a unix domain socket. gRPC makes it easy to do that, so:

This commits adds a --grpc_url option to bessd. the -p and -b options are kept for backward compatibility.
The bessctl daemon connect command is changed: it takes a grpc URL instead of the host and the port, to make it more generic. This is not backward compatible",True,{}
NetSys/bess,https://github.com/NetSys/bess,762,2018-01-27T00:22:23Z,2018-02-06T18:16:12Z,2018-11-26T19:08:40Z,MERGED,True,53,43,10,https://github.com/ddiproietto,Make BESS easier to test without root,3,[],https://github.com/NetSys/bess/pull/762,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/762#issuecomment-360953411,"I'd like to use BESS in a set of tests that could be run in parallel and without root privileges.

As long as there are no PMD devices and hugepages, bessd should work as non root, so this PR adds a command line flags to skip the root check.

To be able to run in parallel, I'd like each BESS instance to listen on a unix domain socket. gRPC makes it easy to do that, so:

This commits adds a --grpc_url option to bessd. the -p and -b options are kept for backward compatibility.
The bessctl daemon connect command is changed: it takes a grpc URL instead of the host and the port, to make it more generic. This is not backward compatible","Codecov Report

Merging #762 into master will decrease coverage by 0.05%.
The diff coverage is 95.65%.


@@            Coverage Diff            @@
##           master    #762      +/-   ##
=========================================
- Coverage   71.25%   71.2%   -0.06%     
=========================================
  Files         226     226              
  Lines       14323   14359      +36     
=========================================
+ Hits        10206   10224      +18     
- Misses       4117    4135      +18



Impacted Files
Coverage Δ





core/bessctl.h
100% <ø> (ø)
⬆️


core/bessd.cc
63.59% <100%> (+0.16%)
⬆️


core/opts.cc
83.33% <100%> (+0.98%)
⬆️


core/bessctl.cc
53.52% <100%> (-0.06%)
⬇️


pybess/test_bess.py
100% <100%> (ø)
⬆️


core/main.cc
90.47% <100%> (+0.73%)
⬆️


pybess/bess.py
39.43% <80%> (+0.13%)
⬆️


core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5252e72...cab4d1f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,762,2018-01-27T00:22:23Z,2018-02-06T18:16:12Z,2018-11-26T19:08:40Z,MERGED,True,53,43,10,https://github.com/ddiproietto,Make BESS easier to test without root,3,[],https://github.com/NetSys/bess/pull/762,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/762#issuecomment-363515084,"I'd like to use BESS in a set of tests that could be run in parallel and without root privileges.

As long as there are no PMD devices and hugepages, bessd should work as non root, so this PR adds a command line flags to skip the root check.

To be able to run in parallel, I'd like each BESS instance to listen on a unix domain socket. gRPC makes it easy to do that, so:

This commits adds a --grpc_url option to bessd. the -p and -b options are kept for backward compatibility.
The bessctl daemon connect command is changed: it takes a grpc URL instead of the host and the port, to make it more generic. This is not backward compatible","Thanks! (sorry, million years late)",True,{}
NetSys/bess,https://github.com/NetSys/bess,763,2018-02-01T01:51:37Z,2018-02-02T22:11:45Z,2018-02-02T22:12:01Z,MERGED,True,58,23,1,https://github.com/ddiproietto,Small fixes to bessd tests,2,[],https://github.com/NetSys/bess/pull/763,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/763,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,763,2018-02-01T01:51:37Z,2018-02-02T22:11:45Z,2018-02-02T22:12:01Z,MERGED,True,58,23,1,https://github.com/ddiproietto,Small fixes to bessd tests,2,[],https://github.com/NetSys/bess/pull/763,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/763#issuecomment-362151239,,"Codecov Report

Merging #763 into master will decrease coverage by 0.02%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #763      +/-   ##
==========================================
- Coverage   71.25%   71.22%   -0.03%     
==========================================
  Files         226      226              
  Lines       14323    14371      +48     
==========================================
+ Hits        10206    10236      +30     
- Misses       4117     4135      +18



Impacted Files
Coverage Δ





core/bessd_test.cc
98.87% <100%> (+0.32%)
⬆️


core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/modules/source.cc
75.67% <0%> (-0.65%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5252e72...e1dc82a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,764,2018-02-01T20:17:15Z,2018-02-07T21:01:11Z,2018-02-07T21:01:36Z,MERGED,True,19,3,4,https://github.com/nrdmao,"Add support for initial buffers to allocate, allocate memory properly with no_huge",3,[],https://github.com/NetSys/bess/pull/764,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/764,"Add a -buffers argument that specifies the initial number of buffers to allocate per
numa socket.
Properly allocate mb_per_socket when specifying -no-huge by passing
-m (mb_per_socket * numa_count) to rte_eal_init().","Add a -buffers argument that specifies the initial number of buffers to allocate per
numa socket.
Properly allocate mb_per_socket when specifying -no-huge by passing
-m (mb_per_socket * numa_count) to rte_eal_init().",True,{}
NetSys/bess,https://github.com/NetSys/bess,764,2018-02-01T20:17:15Z,2018-02-07T21:01:11Z,2018-02-07T21:01:36Z,MERGED,True,19,3,4,https://github.com/nrdmao,"Add support for initial buffers to allocate, allocate memory properly with no_huge",3,[],https://github.com/NetSys/bess/pull/764,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/764#issuecomment-362400189,"Add a -buffers argument that specifies the initial number of buffers to allocate per
numa socket.
Properly allocate mb_per_socket when specifying -no-huge by passing
-m (mb_per_socket * numa_count) to rte_eal_init().","Codecov Report

Merging #764 into master will increase coverage by 0.02%.
The diff coverage is 61.53%.


@@            Coverage Diff             @@
##           master     #764      +/-   ##
==========================================
+ Coverage   71.25%   71.28%   +0.02%     
==========================================
  Files         226      226              
  Lines       14323    14364      +41     
==========================================
+ Hits        10206    10239      +33     
- Misses       4117     4125       +8



Impacted Files
Coverage Δ





core/dpdk.cc
82.55% <0%> (ø)
⬆️


core/packet.cc
34.12% <100%> (-0.52%)
⬇️


core/opts.cc
78.72% <63.63%> (-3.63%)
⬇️


core/bessctl.cc
53.29% <0%> (-0.29%)
⬇️


pybess/test_bess.py
100% <0%> (ø)
⬆️


pybess/bess.py
39.43% <0%> (+0.13%)
⬆️


core/bessd.cc
63.59% <0%> (+0.16%)
⬆️


core/bessd_test.cc
98.87% <0%> (+0.32%)
⬆️


core/main.cc
90.47% <0%> (+0.73%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5252e72...922527e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,764,2018-02-01T20:17:15Z,2018-02-07T21:01:11Z,2018-02-07T21:01:36Z,MERGED,True,19,3,4,https://github.com/nrdmao,"Add support for initial buffers to allocate, allocate memory properly with no_huge",3,[],https://github.com/NetSys/bess/pull/764,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/764#issuecomment-363909097,"Add a -buffers argument that specifies the initial number of buffers to allocate per
numa socket.
Properly allocate mb_per_socket when specifying -no-huge by passing
-m (mb_per_socket * numa_count) to rte_eal_init().",Thank you!,True,{}
NetSys/bess,https://github.com/NetSys/bess,765,2018-02-02T00:54:46Z,2018-02-09T18:27:18Z,2018-02-09T22:57:36Z,MERGED,True,162,16,5,https://github.com/chris3torek,measure module: minor refinements,1,[],https://github.com/NetSys/bess/pull/765,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/765,"Allow more precise control of the measure module histogram.
When returning summaries, include the bucket width (so that
the default width, if you don't specify one, is visible).
Add a module test for timestamp+measure.","Allow more precise control of the measure module histogram.
When returning summaries, include the bucket width (so that
the default width, if you don't specify one, is visible).
Add a module test for timestamp+measure.",True,{}
NetSys/bess,https://github.com/NetSys/bess,765,2018-02-02T00:54:46Z,2018-02-09T18:27:18Z,2018-02-09T22:57:36Z,MERGED,True,162,16,5,https://github.com/chris3torek,measure module: minor refinements,1,[],https://github.com/NetSys/bess/pull/765,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/765#issuecomment-362732493,"Allow more precise control of the measure module histogram.
When returning summaries, include the bucket width (so that
the default width, if you don't specify one, is visible).
Add a module test for timestamp+measure.",(rebased after fixing -O0 issue),True,{}
NetSys/bess,https://github.com/NetSys/bess,765,2018-02-02T00:54:46Z,2018-02-09T18:27:18Z,2018-02-09T22:57:36Z,MERGED,True,162,16,5,https://github.com/chris3torek,measure module: minor refinements,1,[],https://github.com/NetSys/bess/pull/765,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/765#issuecomment-362740816,"Allow more precise control of the measure module histogram.
When returning summaries, include the bucket width (so that
the default width, if you don't specify one, is visible).
Add a module test for timestamp+measure.","Codecov Report

Merging #765 into master will increase coverage by 0.44%.
The diff coverage is 93.54%.


@@            Coverage Diff             @@
##           master     #765      +/-   ##
==========================================
+ Coverage   71.16%   71.61%   +0.44%     
==========================================
  Files         226      226              
  Lines       14406    14433      +27     
==========================================
+ Hits        10252    10336      +84     
+ Misses       4154     4097      -57



Impacted Files
Coverage Δ





core/utils/histogram.h
100% <100%> (ø)
⬆️


core/modules/measure.h
100% <100%> (ø)
⬆️


core/modules/measure.cc
93.39% <89.47%> (+32.95%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/utils/fifo_test.cc
72.29% <0%> (+0.67%)
⬆️


core/packet.h
87.34% <0%> (+1.26%)
⬆️


core/utils/common.h
100% <0%> (+4.76%)
⬆️


core/modules/bypass.cc
78.94% <0%> (+10.52%)
⬆️


core/modules/timestamp.cc
83.33% <0%> (+79.16%)
⬆️


... and 1 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c50cbc1...f516fcc. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,765,2018-02-02T00:54:46Z,2018-02-09T18:27:18Z,2018-02-09T22:57:36Z,MERGED,True,162,16,5,https://github.com/chris3torek,measure module: minor refinements,1,[],https://github.com/NetSys/bess/pull/765,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/765#issuecomment-364302217,"Allow more precise control of the measure module histogram.
When returning summaries, include the bucket width (so that
the default width, if you don't specify one, is visible).
Add a module test for timestamp+measure.","updated per comments, and rebased...",True,{}
NetSys/bess,https://github.com/NetSys/bess,765,2018-02-02T00:54:46Z,2018-02-09T18:27:18Z,2018-02-09T22:57:36Z,MERGED,True,162,16,5,https://github.com/chris3torek,measure module: minor refinements,1,[],https://github.com/NetSys/bess/pull/765,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/765#issuecomment-364517190,"Allow more precise control of the measure module histogram.
When returning summaries, include the bucket width (so that
the default width, if you don't specify one, is visible).
Add a module test for timestamp+measure.",Thanks! Special GIF:,True,{}
NetSys/bess,https://github.com/NetSys/bess,766,2018-02-02T18:53:28Z,2018-02-07T22:13:29Z,2018-02-07T22:13:40Z,MERGED,True,29,9,3,https://github.com/nrdmao,Add a command line option to control core dump generation,4,[],https://github.com/NetSys/bess/pull/766,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/766,"Add a command line option to force bessd to drop a core file on a fatal condition.
When the this option is set, do not generate /tmp/bessd_crash.log.","Add a command line option to force bessd to drop a core file on a fatal condition.
When the this option is set, do not generate /tmp/bessd_crash.log.",True,{}
NetSys/bess,https://github.com/NetSys/bess,766,2018-02-02T18:53:28Z,2018-02-07T22:13:29Z,2018-02-07T22:13:40Z,MERGED,True,29,9,3,https://github.com/nrdmao,Add a command line option to control core dump generation,4,[],https://github.com/NetSys/bess/pull/766,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/766#issuecomment-363259744,"Add a command line option to force bessd to drop a core file on a fatal condition.
When the this option is set, do not generate /tmp/bessd_crash.log.","Codecov Report

Merging #766 into master will decrease coverage by 0.04%.
The diff coverage is 13.33%.


@@            Coverage Diff             @@
##           master     #766      +/-   ##
==========================================
- Coverage   71.28%   71.23%   -0.05%     
==========================================
  Files         226      226              
  Lines       14364    14374      +10     
==========================================
+ Hits        10239    10240       +1     
- Misses       4125     4134       +9



Impacted Files
Coverage Δ





core/debug.cc
54.46% <0%> (-2.13%)
⬇️


core/opts.cc
79.59% <100%> (+0.86%)
⬆️


core/modules/flowgen.cc
73.7% <0%> (-0.38%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b7cf8d0...399d8f0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,766,2018-02-02T18:53:28Z,2018-02-07T22:13:29Z,2018-02-07T22:13:40Z,MERGED,True,29,9,3,https://github.com/nrdmao,Add a command line option to control core dump generation,4,[],https://github.com/NetSys/bess/pull/766,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/766#issuecomment-363928932,"Add a command line option to force bessd to drop a core file on a fatal condition.
When the this option is set, do not generate /tmp/bessd_crash.log.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,768,2018-02-05T20:22:51Z,2018-02-05T21:48:47Z,2018-02-05T21:48:51Z,MERGED,True,6,0,1,https://github.com/ddiproietto,bessctl: Fix gate nullptr dereference in ListGateHooks command.,1,[],https://github.com/NetSys/bess/pull/768,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/768,igates_ and ogates_ might contain nullptr values.,igates_ and ogates_ might contain nullptr values.,True,{}
NetSys/bess,https://github.com/NetSys/bess,768,2018-02-05T20:22:51Z,2018-02-05T21:48:47Z,2018-02-05T21:48:51Z,MERGED,True,6,0,1,https://github.com/ddiproietto,bessctl: Fix gate nullptr dereference in ListGateHooks command.,1,[],https://github.com/NetSys/bess/pull/768,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/768#issuecomment-363232139,igates_ and ogates_ might contain nullptr values.,"Codecov Report

Merging #768 into master will increase coverage by <.01%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #768      +/-   ##
==========================================
+ Coverage   71.28%   71.29%   +<.01%     
==========================================
  Files         226      226              
  Lines       14343    14347       +4     
==========================================
+ Hits        10225    10228       +3     
- Misses       4118     4119       +1



Impacted Files
Coverage Δ





core/bessctl.cc
53.34% <0%> (-0.24%)
⬇️


core/utils/fifo_test.cc
72.29% <0%> (+0.67%)
⬆️


core/modules/source.cc
76.31% <0%> (+2.63%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3893784...5078496. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,769,2018-02-08T04:10:35Z,2018-03-15T22:44:15Z,2018-03-15T22:45:10Z,CLOSED,False,273,97,16,https://github.com/nrdmao,"update PMD port vlan offload, mtu, enable/disable and mac address",7,[],https://github.com/NetSys/bess/pull/769,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/769,"These changes allow PMD ports to be configured with respect to vlan offload, mtu and enable status.
These changes also allow port configuration to be updated without having to destroy and recreate the port. This is nice to have because it allows a port to be updated without having to destroy the port_inc and port_out modules and their associated connections.","These changes allow PMD ports to be configured with respect to vlan offload, mtu and enable status.
These changes also allow port configuration to be updated without having to destroy and recreate the port. This is nice to have because it allows a port to be updated without having to destroy the port_inc and port_out modules and their associated connections.",True,{}
NetSys/bess,https://github.com/NetSys/bess,769,2018-02-08T04:10:35Z,2018-03-15T22:44:15Z,2018-03-15T22:45:10Z,CLOSED,False,273,97,16,https://github.com/nrdmao,"update PMD port vlan offload, mtu, enable/disable and mac address",7,[],https://github.com/NetSys/bess/pull/769,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/769#issuecomment-364198542,"These changes allow PMD ports to be configured with respect to vlan offload, mtu and enable status.
These changes also allow port configuration to be updated without having to destroy and recreate the port. This is nice to have because it allows a port to be updated without having to destroy the port_inc and port_out modules and their associated connections.","Codecov Report

Merging #769 into master will decrease coverage by 15.63%.
The diff coverage is n/a.


@@             Coverage Diff             @@
##           master     #769       +/-   ##
===========================================
- Coverage   71.17%   55.54%   -15.64%     
===========================================
  Files         226        9      -217     
  Lines       14402     1127    -13275     
===========================================
- Hits        10251      626     -9625     
+ Misses       4151      501     -3650



Impacted Files
Coverage Δ





pybess/bess.py
39.3% <ø> (-0.14%)
⬇️


core/module.h




core/utils/copy.h




core/resume_hook.h




core/modules/dump.cc




core/modules/mttest.h




core/utils/queue.h




core/modules/sink.h




core/modules/queue_out.h




core/modules/noop.h




... and 197 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9dfa65d...fedf84a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,769,2018-02-08T04:10:35Z,2018-03-15T22:44:15Z,2018-03-15T22:45:10Z,CLOSED,False,273,97,16,https://github.com/nrdmao,"update PMD port vlan offload, mtu, enable/disable and mac address",7,[],https://github.com/NetSys/bess/pull/769,https://github.com/nrdmao,3,https://github.com/NetSys/bess/pull/769#issuecomment-367534507,"These changes allow PMD ports to be configured with respect to vlan offload, mtu and enable status.
These changes also allow port configuration to be updated without having to destroy and recreate the port. This is nice to have because it allows a port to be updated without having to destroy the port_inc and port_out modules and their associated connections.",Are there any comments or concerns regarding this pull request?,True,{}
NetSys/bess,https://github.com/NetSys/bess,769,2018-02-08T04:10:35Z,2018-03-15T22:44:15Z,2018-03-15T22:45:10Z,CLOSED,False,273,97,16,https://github.com/nrdmao,"update PMD port vlan offload, mtu, enable/disable and mac address",7,[],https://github.com/NetSys/bess/pull/769,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/769#issuecomment-368088865,"These changes allow PMD ports to be configured with respect to vlan offload, mtu and enable status.
These changes also allow port configuration to be updated without having to destroy and recreate the port. This is nice to have because it allows a port to be updated without having to destroy the port_inc and port_out modules and their associated connections.","Apologies, I will come back to this PR in a few days. Sorry for the delay.",True,{}
NetSys/bess,https://github.com/NetSys/bess,769,2018-02-08T04:10:35Z,2018-03-15T22:44:15Z,2018-03-15T22:45:10Z,CLOSED,False,273,97,16,https://github.com/nrdmao,"update PMD port vlan offload, mtu, enable/disable and mac address",7,[],https://github.com/NetSys/bess/pull/769,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/769#issuecomment-369695732,"These changes allow PMD ports to be configured with respect to vlan offload, mtu and enable status.
These changes also allow port configuration to be updated without having to destroy and recreate the port. This is nice to have because it allows a port to be updated without having to destroy the port_inc and port_out modules and their associated connections.",Please check aristanetworks#1 for suggestions I made for this PR.,True,{}
NetSys/bess,https://github.com/NetSys/bess,769,2018-02-08T04:10:35Z,2018-03-15T22:44:15Z,2018-03-15T22:45:10Z,CLOSED,False,273,97,16,https://github.com/nrdmao,"update PMD port vlan offload, mtu, enable/disable and mac address",7,[],https://github.com/NetSys/bess/pull/769,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/769#issuecomment-373546525,"These changes allow PMD ports to be configured with respect to vlan offload, mtu and enable status.
These changes also allow port configuration to be updated without having to destroy and recreate the port. This is nice to have because it allows a port to be updated without having to destroy the port_inc and port_out modules and their associated connections.","Merged (except the last merge commit), thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,769,2018-02-08T04:10:35Z,2018-03-15T22:44:15Z,2018-03-15T22:45:10Z,CLOSED,False,273,97,16,https://github.com/nrdmao,"update PMD port vlan offload, mtu, enable/disable and mac address",7,[],https://github.com/NetSys/bess/pull/769,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/769#issuecomment-373546726,"These changes allow PMD ports to be configured with respect to vlan offload, mtu and enable status.
These changes also allow port configuration to be updated without having to destroy and recreate the port. This is nice to have because it allows a port to be updated without having to destroy the port_inc and port_out modules and their associated connections.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,770,2018-02-08T04:21:08Z,2018-02-08T23:58:57Z,2018-02-08T23:59:33Z,MERGED,True,13,6,2,https://github.com/nrdmao,Only erase members from event_modules PreResume set after iteration done,2,[],https://github.com/NetSys/bess/pull/770,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/770,"It seems that while iterating through a set if you erase a member the iteration may not visit all the
members of the set. Issue found under the following conditions:
$ uname -a
Linux bess-ubuntu16 4.4.0-109-generic #132-Ubuntu SMP Tue Jan 9 19:52:39 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

$ g++ --version
g++ (Ubuntu 5.4.1-2ubuntu1~16.04) 5.4.1 20160904
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.","It seems that while iterating through a set if you erase a member the iteration may not visit all the
members of the set. Issue found under the following conditions:
$ uname -a
Linux bess-ubuntu16 4.4.0-109-generic #132-Ubuntu SMP Tue Jan 9 19:52:39 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

$ g++ --version
g++ (Ubuntu 5.4.1-2ubuntu1~16.04) 5.4.1 20160904
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.",True,{}
NetSys/bess,https://github.com/NetSys/bess,770,2018-02-08T04:21:08Z,2018-02-08T23:58:57Z,2018-02-08T23:59:33Z,MERGED,True,13,6,2,https://github.com/nrdmao,Only erase members from event_modules PreResume set after iteration done,2,[],https://github.com/NetSys/bess/pull/770,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/770#issuecomment-364004622,"It seems that while iterating through a set if you erase a member the iteration may not visit all the
members of the set. Issue found under the following conditions:
$ uname -a
Linux bess-ubuntu16 4.4.0-109-generic #132-Ubuntu SMP Tue Jan 9 19:52:39 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

$ g++ --version
g++ (Ubuntu 5.4.1-2ubuntu1~16.04) 5.4.1 20160904
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.","Codecov Report

Merging #770 into master will decrease coverage by 0.01%.
The diff coverage is 44.44%.


@@            Coverage Diff             @@
##           master     #770      +/-   ##
==========================================
- Coverage   71.17%   71.16%   -0.02%     
==========================================
  Files         226      226              
  Lines       14402    14407       +5     
==========================================
+ Hits        10251    10253       +2     
- Misses       4151     4154       +3



Impacted Files
Coverage Δ





core/worker.cc
82.26% <0%> (-1.24%)
⬇️


core/resume_hook.cc
92% <100%> (+0.33%)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9dfa65d...760c379. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,770,2018-02-08T04:21:08Z,2018-02-08T23:58:57Z,2018-02-08T23:59:33Z,MERGED,True,13,6,2,https://github.com/nrdmao,Only erase members from event_modules PreResume set after iteration done,2,[],https://github.com/NetSys/bess/pull/770,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/770#issuecomment-364290008,"It seems that while iterating through a set if you erase a member the iteration may not visit all the
members of the set. Issue found under the following conditions:
$ uname -a
Linux bess-ubuntu16 4.4.0-109-generic #132-Ubuntu SMP Tue Jan 9 19:52:39 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

$ g++ --version
g++ (Ubuntu 5.4.1-2ubuntu1~16.04) 5.4.1 20160904
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,773,2018-02-20T02:05:50Z,2018-02-21T23:39:18Z,2018-02-21T23:47:14Z,MERGED,True,49,12,3,https://github.com/chris3torek,gate hook fixes,3,[],https://github.com/NetSys/bess/pull/773,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/773,"This has three separate commits for three small bugs:

we couldn't build plugin gate hooks at all
we invoked gate hooks incorrectly when trying to use the ""in"" direction
we caught the wrong error (bad module name) instead of the right one (bad gate hook)

The last error was only triggered by the middle error, but we now have them all fixed.","This has three separate commits for three small bugs:

we couldn't build plugin gate hooks at all
we invoked gate hooks incorrectly when trying to use the ""in"" direction
we caught the wrong error (bad module name) instead of the right one (bad gate hook)

The last error was only triggered by the middle error, but we now have them all fixed.",True,{}
NetSys/bess,https://github.com/NetSys/bess,773,2018-02-20T02:05:50Z,2018-02-21T23:39:18Z,2018-02-21T23:47:14Z,MERGED,True,49,12,3,https://github.com/chris3torek,gate hook fixes,3,[],https://github.com/NetSys/bess/pull/773,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/773#issuecomment-366859171,"This has three separate commits for three small bugs:

we couldn't build plugin gate hooks at all
we invoked gate hooks incorrectly when trying to use the ""in"" direction
we caught the wrong error (bad module name) instead of the right one (bad gate hook)

The last error was only triggered by the middle error, but we now have them all fixed.",Something about the last commit (modifying core/Makefile) breaks the etherencap test.  It's still a mystery exactly what this is.,True,{}
NetSys/bess,https://github.com/NetSys/bess,773,2018-02-20T02:05:50Z,2018-02-21T23:39:18Z,2018-02-21T23:47:14Z,MERGED,True,49,12,3,https://github.com/chris3torek,gate hook fixes,3,[],https://github.com/NetSys/bess/pull/773,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/773#issuecomment-367146198,"This has three separate commits for three small bugs:

we couldn't build plugin gate hooks at all
we invoked gate hooks incorrectly when trying to use the ""in"" direction
we caught the wrong error (bad module name) instead of the right one (bad gate hook)

The last error was only triggered by the middle error, but we now have them all fixed.",Found the problem: two metadata.cc files.  Redid the third commit.,True,{}
NetSys/bess,https://github.com/NetSys/bess,773,2018-02-20T02:05:50Z,2018-02-21T23:39:18Z,2018-02-21T23:47:14Z,MERGED,True,49,12,3,https://github.com/chris3torek,gate hook fixes,3,[],https://github.com/NetSys/bess/pull/773,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/773#issuecomment-367156371,"This has three separate commits for three small bugs:

we couldn't build plugin gate hooks at all
we invoked gate hooks incorrectly when trying to use the ""in"" direction
we caught the wrong error (bad module name) instead of the right one (bad gate hook)

The last error was only triggered by the middle error, but we now have them all fixed.","Codecov Report

Merging #773 into master will decrease coverage by <.01%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #773      +/-   ##
==========================================
- Coverage   71.66%   71.66%   -0.01%     
==========================================
  Files         226      226              
  Lines       14403    14433      +30     
==========================================
+ Hits        10322    10343      +21     
- Misses       4081     4090       +9



Impacted Files
Coverage Δ





pybess/bess.py
39.43% <0%> (ø)
⬆️


core/bessctl.cc
53.29% <0%> (ø)
⬆️


core/utils/copy.h
63.72% <0%> (-13.2%)
⬇️


core/utils/checksum.h
93.56% <0%> (-2.3%)
⬇️


core/utils/simd.h
100% <0%> (ø)
⬆️


core/modules/source.cc
76.31% <0%> (+0.64%)
⬆️


core/utils/mcslock.h
100% <0%> (+42.85%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2294e91...d1816b0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,773,2018-02-20T02:05:50Z,2018-02-21T23:39:18Z,2018-02-21T23:47:14Z,MERGED,True,49,12,3,https://github.com/chris3torek,gate hook fixes,3,[],https://github.com/NetSys/bess/pull/773,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/773#issuecomment-367516143,"This has three separate commits for three small bugs:

we couldn't build plugin gate hooks at all
we invoked gate hooks incorrectly when trying to use the ""in"" direction
we caught the wrong error (bad module name) instead of the right one (bad gate hook)

The last error was only triggered by the middle error, but we now have them all fixed.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,774,2018-02-21T21:36:59Z,2018-02-21T23:41:27Z,2018-02-21T23:41:33Z,MERGED,True,8,6,2,https://github.com/barath,Separate coverage and debug builds.,1,[],https://github.com/NetSys/bess/pull/774,https://github.com/barath,1,https://github.com/NetSys/bess/pull/774,"With this change, DEBUG only sets -O0 and COVERAGE turns on coverage and -O0.","With this change, DEBUG only sets -O0 and COVERAGE turns on coverage and -O0.",True,{}
NetSys/bess,https://github.com/NetSys/bess,774,2018-02-21T21:36:59Z,2018-02-21T23:41:27Z,2018-02-21T23:41:33Z,MERGED,True,8,6,2,https://github.com/barath,Separate coverage and debug builds.,1,[],https://github.com/NetSys/bess/pull/774,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/774#issuecomment-367494977,"With this change, DEBUG only sets -O0 and COVERAGE turns on coverage and -O0.","Codecov Report

Merging #774 into master will decrease coverage by 16.08%.
The diff coverage is n/a.


@@             Coverage Diff             @@
##           master     #774       +/-   ##
===========================================
- Coverage   71.66%   55.58%   -16.09%     
===========================================
  Files         226        9      -217     
  Lines       14403     1128    -13275     
===========================================
- Hits        10322      627     -9695     
+ Misses       4081      501     -3580



Impacted Files
Coverage Δ





core/modules/measure.cc




core/utils/time_test.cc




core/modules/hash_lb.cc




core/utils/ether.cc




core/traffic_class_test.cc




core/utils/extended_priority_queue.h




core/port.h




core/module.h




core/modules/generic_decap.h




core/task.h




... and 207 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2294e91...59baaf9. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,774,2018-02-21T21:36:59Z,2018-02-21T23:41:27Z,2018-02-21T23:41:33Z,MERGED,True,8,6,2,https://github.com/barath,Separate coverage and debug builds.,1,[],https://github.com/NetSys/bess/pull/774,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/774#issuecomment-367516539,"With this change, DEBUG only sets -O0 and COVERAGE turns on coverage and -O0.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,775,2018-03-03T04:38:56Z,2018-03-05T23:45:26Z,2018-03-05T23:46:16Z,MERGED,True,2,2,1,https://github.com/melvinw,"build: allow DPDK_REPO, DPDK_TAG to be overidden",1,[],https://github.com/NetSys/bess/pull/775,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/775,git://dpdk.org/dpdk seems to be less flakey than http://dpdk.org/git/dpdk and it would be nice to be able to use it when the user's network allows for it.,git://dpdk.org/dpdk seems to be less flakey than http://dpdk.org/git/dpdk and it would be nice to be able to use it when the user's network allows for it.,True,{}
NetSys/bess,https://github.com/NetSys/bess,775,2018-03-03T04:38:56Z,2018-03-05T23:45:26Z,2018-03-05T23:46:16Z,MERGED,True,2,2,1,https://github.com/melvinw,"build: allow DPDK_REPO, DPDK_TAG to be overidden",1,[],https://github.com/NetSys/bess/pull/775,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/775#issuecomment-370608588,git://dpdk.org/dpdk seems to be less flakey than http://dpdk.org/git/dpdk and it would be nice to be able to use it when the user's network allows for it.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,776,2018-03-09T22:54:34Z,2018-03-18T06:13:36Z,2018-03-18T06:15:24Z,MERGED,True,50,16,1,https://github.com/chris3torek,histogram: allow atomic and non-atomic usage,2,[],https://github.com/NetSys/bess/pull/776,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/776,"Allow atomic operations so that a histogram can be used
without a lock.
For backwards compatibility, the default is to use non-atomic
operations, requiring that the caller use a lock if the histogram
will be maniuplated in multiple threads.
Note that internally, this changes the counters from the
machine-dependent size_t to uint64_t (which affects 32-bit
implementations).","Allow atomic operations so that a histogram can be used
without a lock.
For backwards compatibility, the default is to use non-atomic
operations, requiring that the caller use a lock if the histogram
will be maniuplated in multiple threads.
Note that internally, this changes the counters from the
machine-dependent size_t to uint64_t (which affects 32-bit
implementations).",True,{}
NetSys/bess,https://github.com/NetSys/bess,776,2018-03-09T22:54:34Z,2018-03-18T06:13:36Z,2018-03-18T06:15:24Z,MERGED,True,50,16,1,https://github.com/chris3torek,histogram: allow atomic and non-atomic usage,2,[],https://github.com/NetSys/bess/pull/776,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/776#issuecomment-371975508,"Allow atomic operations so that a histogram can be used
without a lock.
For backwards compatibility, the default is to use non-atomic
operations, requiring that the caller use a lock if the histogram
will be maniuplated in multiple threads.
Note that internally, this changes the counters from the
machine-dependent size_t to uint64_t (which affects 32-bit
implementations).","Codecov Report

Merging #776 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #776   +/-   ##
=======================================
  Coverage   55.54%   55.54%           
=======================================
  Files           9        9           
  Lines        1127     1127           
=======================================
  Hits          626      626           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b40ba3d...203d331. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,776,2018-03-09T22:54:34Z,2018-03-18T06:13:36Z,2018-03-18T06:15:24Z,MERGED,True,50,16,1,https://github.com/chris3torek,histogram: allow atomic and non-atomic usage,2,[],https://github.com/NetSys/bess/pull/776,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/776#issuecomment-373871627,"Allow atomic operations so that a histogram can be used
without a lock.
For backwards compatibility, the default is to use non-atomic
operations, requiring that the caller use a lock if the histogram
will be maniuplated in multiple threads.
Note that internally, this changes the counters from the
machine-dependent size_t to uint64_t (which affects 32-bit
implementations).","(rebased and added a fixup commit, to be squashed before merging)",True,{}
NetSys/bess,https://github.com/NetSys/bess,776,2018-03-09T22:54:34Z,2018-03-18T06:13:36Z,2018-03-18T06:15:24Z,MERGED,True,50,16,1,https://github.com/chris3torek,histogram: allow atomic and non-atomic usage,2,[],https://github.com/NetSys/bess/pull/776,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/776#issuecomment-373975603,"Allow atomic operations so that a histogram can be used
without a lock.
For backwards compatibility, the default is to use non-atomic
operations, requiring that the caller use a lock if the histogram
will be maniuplated in multiple threads.
Note that internally, this changes the counters from the
machine-dependent size_t to uint64_t (which affects 32-bit
implementations).","Merged, thanks.
(Forgot to squash. Ugh...)",True,{}
NetSys/bess,https://github.com/NetSys/bess,778,2018-03-17T01:46:10Z,2018-03-18T06:16:10Z,2018-03-18T06:17:24Z,MERGED,True,2,2,1,https://github.com/nrdmao,Make protobuf headers prerequisites for modules and tests.,1,[],https://github.com/NetSys/bess/pull/778,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/778,Dependency failures can be seen on massively parallel builds on heavily loaded servers.,Dependency failures can be seen on massively parallel builds on heavily loaded servers.,True,{}
NetSys/bess,https://github.com/NetSys/bess,778,2018-03-17T01:46:10Z,2018-03-18T06:16:10Z,2018-03-18T06:17:24Z,MERGED,True,2,2,1,https://github.com/nrdmao,Make protobuf headers prerequisites for modules and tests.,1,[],https://github.com/NetSys/bess/pull/778,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/778#issuecomment-373888003,Dependency failures can be seen on massively parallel builds on heavily loaded servers.,"Codecov Report

Merging #778 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #778   +/-   ##
=======================================
  Coverage   55.54%   55.54%           
=======================================
  Files           9        9           
  Lines        1127     1127           
=======================================
  Hits          626      626           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b40ba3d...5b03e6a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,778,2018-03-17T01:46:10Z,2018-03-18T06:16:10Z,2018-03-18T06:17:24Z,MERGED,True,2,2,1,https://github.com/nrdmao,Make protobuf headers prerequisites for modules and tests.,1,[],https://github.com/NetSys/bess/pull/778,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/778#issuecomment-373975666,Dependency failures can be seen on massively parallel builds on heavily loaded servers.,"Merged, thanks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,779,2018-03-17T03:55:24Z,2018-03-19T20:51:59Z,2018-03-19T20:52:03Z,CLOSED,False,3,4,1,https://github.com/melvinw,core/Makefile: fix DPDK check indentation,1,[],https://github.com/NetSys/bess/pull/779,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/779,"Make on my machine is really picky and barfs in strange ways because of
the current indentation. Targets like make protobuf will fail, but
make/make all don't.","Make on my machine is really picky and barfs in strange ways because of
the current indentation. Targets like make protobuf will fail, but
make/make all don't.",True,{}
NetSys/bess,https://github.com/NetSys/bess,779,2018-03-17T03:55:24Z,2018-03-19T20:51:59Z,2018-03-19T20:52:03Z,CLOSED,False,3,4,1,https://github.com/melvinw,core/Makefile: fix DPDK check indentation,1,[],https://github.com/NetSys/bess/pull/779,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/779#issuecomment-373892297,"Make on my machine is really picky and barfs in strange ways because of
the current indentation. Targets like make protobuf will fail, but
make/make all don't.","I admit that downgrading the DPDK check might be a bit abusive on my part. I have a strange use case for which this is the quickest/easiest fix.
The proper solution here might be to break the protoc targets into a separate makefile in core/pb.",True,{}
NetSys/bess,https://github.com/NetSys/bess,779,2018-03-17T03:55:24Z,2018-03-19T20:51:59Z,2018-03-19T20:52:03Z,CLOSED,False,3,4,1,https://github.com/melvinw,core/Makefile: fix DPDK check indentation,1,[],https://github.com/NetSys/bess/pull/779,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/779#issuecomment-373893823,"Make on my machine is really picky and barfs in strange ways because of
the current indentation. Targets like make protobuf will fail, but
make/make all don't.","Codecov Report

Merging #779 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #779   +/-   ##
=======================================
  Coverage   55.54%   55.54%           
=======================================
  Files           9        9           
  Lines        1127     1127           
=======================================
  Hits          626      626           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update b40ba3d...0b1c00a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,779,2018-03-17T03:55:24Z,2018-03-19T20:51:59Z,2018-03-19T20:52:03Z,CLOSED,False,3,4,1,https://github.com/melvinw,core/Makefile: fix DPDK check indentation,1,[],https://github.com/NetSys/bess/pull/779,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/779#issuecomment-373963228,"Make on my machine is really picky and barfs in strange ways because of
the current indentation. Targets like make protobuf will fail, but
make/make all don't.",Nevermind the comment above. Fond a cleaner solution for my use case. This just fixes the indentation now.,True,{}
NetSys/bess,https://github.com/NetSys/bess,780,2018-03-19T18:45:38Z,2018-03-19T20:29:51Z,2018-06-28T22:07:44Z,MERGED,True,138,141,1,https://github.com/sangjinhan,Do not use tab characters for conditionals,1,[],https://github.com/NetSys/bess/pull/780,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/780,"This PR replaces tab characters with spaces for all conditionals, as done in #779. Tab characters are supposed to be used only for commands.
@melvinw, could you check if this fixes the build issue you experienced?","This PR replaces tab characters with spaces for all conditionals, as done in #779. Tab characters are supposed to be used only for commands.
@melvinw, could you check if this fixes the build issue you experienced?",True,{}
NetSys/bess,https://github.com/NetSys/bess,780,2018-03-19T18:45:38Z,2018-03-19T20:29:51Z,2018-06-28T22:07:44Z,MERGED,True,138,141,1,https://github.com/sangjinhan,Do not use tab characters for conditionals,1,[],https://github.com/NetSys/bess/pull/780,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/780#issuecomment-374346002,"This PR replaces tab characters with spaces for all conditionals, as done in #779. Tab characters are supposed to be used only for commands.
@melvinw, could you check if this fixes the build issue you experienced?","Codecov Report

Merging #780 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #780   +/-   ##
=======================================
  Coverage   55.54%   55.54%           
=======================================
  Files           9        9           
  Lines        1127     1127           
=======================================
  Hits          626      626           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1c45c26...40ad988. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,780,2018-03-19T18:45:38Z,2018-03-19T20:29:51Z,2018-06-28T22:07:44Z,MERGED,True,138,141,1,https://github.com/sangjinhan,Do not use tab characters for conditionals,1,[],https://github.com/NetSys/bess/pull/780,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/780#issuecomment-374363877,"This PR replaces tab characters with spaces for all conditionals, as done in #779. Tab characters are supposed to be used only for commands.
@melvinw, could you check if this fixes the build issue you experienced?",,True,{}
NetSys/bess,https://github.com/NetSys/bess,782,2018-03-30T18:35:43Z,2018-03-30T22:20:24Z,2018-03-30T22:35:02Z,MERGED,True,51,42,1,https://github.com/sangjinhan,Make build.py Python 3 compatible,1,[],https://github.com/NetSys/bess/pull/782,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/782,"In Python 3, by default subprocess.communicate()/check_output() returns a bytes obejct, not str. Also dict.keys() must not be used for a loop in Python 3 if dict is modified.","In Python 3, by default subprocess.communicate()/check_output() returns a bytes obejct, not str. Also dict.keys() must not be used for a loop in Python 3 if dict is modified.",True,{}
NetSys/bess,https://github.com/NetSys/bess,782,2018-03-30T18:35:43Z,2018-03-30T22:20:24Z,2018-03-30T22:35:02Z,MERGED,True,51,42,1,https://github.com/sangjinhan,Make build.py Python 3 compatible,1,[],https://github.com/NetSys/bess/pull/782,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/782#issuecomment-377602149,"In Python 3, by default subprocess.communicate()/check_output() returns a bytes obejct, not str. Also dict.keys() must not be used for a loop in Python 3 if dict is modified.","Codecov Report

Merging #782 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #782   +/-   ##
=======================================
  Coverage   55.54%   55.54%           
=======================================
  Files           9        9           
  Lines        1127     1127           
=======================================
  Hits          626      626           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 44fac71...839c61e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,782,2018-03-30T18:35:43Z,2018-03-30T22:20:24Z,2018-03-30T22:35:02Z,MERGED,True,51,42,1,https://github.com/sangjinhan,Make build.py Python 3 compatible,1,[],https://github.com/NetSys/bess/pull/782,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/782#issuecomment-377636434,"In Python 3, by default subprocess.communicate()/check_output() returns a bytes obejct, not str. Also dict.keys() must not be used for a loop in Python 3 if dict is modified.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,783,2018-03-30T18:44:37Z,2018-03-30T22:04:58Z,2018-06-28T22:06:46Z,MERGED,True,0,1,1,https://github.com/sangjinhan,Remove unused variable,1,[],https://github.com/NetSys/bess/pull/783,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/783,(clang7 complaints about this),(clang7 complaints about this),True,{}
NetSys/bess,https://github.com/NetSys/bess,783,2018-03-30T18:44:37Z,2018-03-30T22:04:58Z,2018-06-28T22:06:46Z,MERGED,True,0,1,1,https://github.com/sangjinhan,Remove unused variable,1,[],https://github.com/NetSys/bess/pull/783,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/783#issuecomment-377606521,(clang7 complaints about this),"Codecov Report

Merging #783 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #783   +/-   ##
=======================================
  Coverage   55.54%   55.54%           
=======================================
  Files           9        9           
  Lines        1127     1127           
=======================================
  Hits          626      626           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 44fac71...5d6fd41. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,783,2018-03-30T18:44:37Z,2018-03-30T22:04:58Z,2018-06-28T22:06:46Z,MERGED,True,0,1,1,https://github.com/sangjinhan,Remove unused variable,1,[],https://github.com/NetSys/bess/pull/783,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/783#issuecomment-377634517,(clang7 complaints about this),,True,{}
NetSys/bess,https://github.com/NetSys/bess,785,2018-04-03T18:33:56Z,2018-04-13T01:03:15Z,2018-06-28T22:06:45Z,MERGED,True,10,2,1,https://github.com/sangjinhan,pybess: replace basestring with str,1,[],https://github.com/NetSys/bess/pull/785,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/785,"In python3, every string is unicode and basestring does not exist any longer.","In python3, every string is unicode and basestring does not exist any longer.",True,{}
NetSys/bess,https://github.com/NetSys/bess,785,2018-04-03T18:33:56Z,2018-04-13T01:03:15Z,2018-06-28T22:06:45Z,MERGED,True,10,2,1,https://github.com/sangjinhan,pybess: replace basestring with str,1,[],https://github.com/NetSys/bess/pull/785,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/785#issuecomment-378384506,"In python3, every string is unicode and basestring does not exist any longer.","Codecov Report

Merging #785 into master will increase coverage by 0.06%.
The diff coverage is 83.33%.


@@            Coverage Diff             @@
##           master     #785      +/-   ##
==========================================
+ Coverage   55.54%   55.61%   +0.06%     
==========================================
  Files           9        9              
  Lines        1127     1131       +4     
==========================================
+ Hits          626      629       +3     
- Misses        501      502       +1



Impacted Files
Coverage Δ





pybess/protobuf_to_dict.py
59.63% <83.33%> (+0.58%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 18bddfa...6de6b24. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,785,2018-04-03T18:33:56Z,2018-04-13T01:03:15Z,2018-06-28T22:06:45Z,MERGED,True,10,2,1,https://github.com/sangjinhan,pybess: replace basestring with str,1,[],https://github.com/NetSys/bess/pull/785,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/785#issuecomment-380626677,"In python3, every string is unicode and basestring does not exist any longer.",@chris3torek addressed the issue. thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,785,2018-04-03T18:33:56Z,2018-04-13T01:03:15Z,2018-06-28T22:06:45Z,MERGED,True,10,2,1,https://github.com/sangjinhan,pybess: replace basestring with str,1,[],https://github.com/NetSys/bess/pull/785,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/785#issuecomment-380989106,"In python3, every string is unicode and basestring does not exist any longer.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,788,2018-04-10T17:13:50Z,2018-04-18T22:48:46Z,2018-06-28T22:06:43Z,MERGED,True,326,23,7,https://github.com/sangjinhan,Add a static NAT module,5,[],https://github.com/NetSys/bess/pull/788,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/788,"This PR adds a new module StaticNAT, which performs 1-to-1 mapping between internal and external IPv4 address. This is useful when to expose servers in a private network.
Unlike the existing dynamic NAT module, port translation is not done as it is unnecessary.","This PR adds a new module StaticNAT, which performs 1-to-1 mapping between internal and external IPv4 address. This is useful when to expose servers in a private network.
Unlike the existing dynamic NAT module, port translation is not done as it is unnecessary.",True,{}
NetSys/bess,https://github.com/NetSys/bess,788,2018-04-10T17:13:50Z,2018-04-18T22:48:46Z,2018-06-28T22:06:43Z,MERGED,True,326,23,7,https://github.com/sangjinhan,Add a static NAT module,5,[],https://github.com/NetSys/bess/pull/788,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/788#issuecomment-380191540,"This PR adds a new module StaticNAT, which performs 1-to-1 mapping between internal and external IPv4 address. This is useful when to expose servers in a private network.
Unlike the existing dynamic NAT module, port translation is not done as it is unnecessary.","Codecov Report

Merging #788 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #788   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 50d5373...1ce8605. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,788,2018-04-10T17:13:50Z,2018-04-18T22:48:46Z,2018-06-28T22:06:43Z,MERGED,True,326,23,7,https://github.com/sangjinhan,Add a static NAT module,5,[],https://github.com/NetSys/bess/pull/788,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/788#issuecomment-382553470,"This PR adds a new module StaticNAT, which performs 1-to-1 mapping between internal and external IPv4 address. This is useful when to expose servers in a private network.
Unlike the existing dynamic NAT module, port translation is not done as it is unnecessary.",Merged! Here's Alice getting her favorite sinkwater (note pink tongue in reflection),True,{}
NetSys/bess,https://github.com/NetSys/bess,790,2018-04-14T05:10:01Z,2018-04-24T18:10:06Z,2018-06-28T22:06:58Z,MERGED,True,44,13,2,https://github.com/changlan,Add IPv6 address support to VPort,1,[],https://github.com/NetSys/bess/pull/790,https://github.com/changlan,1,https://github.com/NetSys/bess/pull/790,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,790,2018-04-14T05:10:01Z,2018-04-24T18:10:06Z,2018-06-28T22:06:58Z,MERGED,True,44,13,2,https://github.com/changlan,Add IPv6 address support to VPort,1,[],https://github.com/NetSys/bess/pull/790,https://github.com/changlan,2,https://github.com/NetSys/bess/pull/790#issuecomment-383423838,,All fixed!,True,{}
NetSys/bess,https://github.com/NetSys/bess,790,2018-04-14T05:10:01Z,2018-04-24T18:10:06Z,2018-06-28T22:06:58Z,MERGED,True,44,13,2,https://github.com/changlan,Add IPv6 address support to VPort,1,[],https://github.com/NetSys/bess/pull/790,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/790#issuecomment-383427253,,"Codecov Report

Merging #790 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #790   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a9be712...f2b6225. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,790,2018-04-14T05:10:01Z,2018-04-24T18:10:06Z,2018-06-28T22:06:58Z,MERGED,True,44,13,2,https://github.com/changlan,Add IPv6 address support to VPort,1,[],https://github.com/NetSys/bess/pull/790,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/790#issuecomment-384028319,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,791,2018-04-21T01:02:43Z,2018-04-25T18:01:20Z,2018-04-25T18:02:02Z,MERGED,True,1121,1075,4,https://github.com/pxgao,Move BPF functionalities to utils,2,[],https://github.com/NetSys/bess/pull/791,https://github.com/pxgao,1,https://github.com/NetSys/bess/pull/791,"Some functions in core/modules/bpf.h(cc) are moved to
core/utils/bpf.h so that other modules can share these
functions.","Some functions in core/modules/bpf.h(cc) are moved to
core/utils/bpf.h so that other modules can share these
functions.",True,{}
NetSys/bess,https://github.com/NetSys/bess,791,2018-04-21T01:02:43Z,2018-04-25T18:01:20Z,2018-04-25T18:02:02Z,MERGED,True,1121,1075,4,https://github.com/pxgao,Move BPF functionalities to utils,2,[],https://github.com/NetSys/bess/pull/791,https://github.com/pxgao,2,https://github.com/NetSys/bess/pull/791#issuecomment-384124024,"Some functions in core/modules/bpf.h(cc) are moved to
core/utils/bpf.h so that other modules can share these
functions.",@sangjinhan Made the changes.,True,{}
NetSys/bess,https://github.com/NetSys/bess,791,2018-04-21T01:02:43Z,2018-04-25T18:01:20Z,2018-04-25T18:02:02Z,MERGED,True,1121,1075,4,https://github.com/pxgao,Move BPF functionalities to utils,2,[],https://github.com/NetSys/bess/pull/791,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/791#issuecomment-384128988,"Some functions in core/modules/bpf.h(cc) are moved to
core/utils/bpf.h so that other modules can share these
functions.","Codecov Report

Merging #791 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #791   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 76c0ca6...05374e4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,791,2018-04-21T01:02:43Z,2018-04-25T18:01:20Z,2018-04-25T18:02:02Z,MERGED,True,1121,1075,4,https://github.com/pxgao,Move BPF functionalities to utils,2,[],https://github.com/NetSys/bess/pull/791,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/791#issuecomment-384379364,"Some functions in core/modules/bpf.h(cc) are moved to
core/utils/bpf.h so that other modules can share these
functions.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,793,2018-04-26T02:46:58Z,2018-05-05T04:04:50Z,2018-05-09T04:58:13Z,MERGED,True,2,1,1,https://github.com/inhocho89,bug fix in EmitPacket(),1,[],https://github.com/NetSys/bess/pull/793,https://github.com/inhocho89,1,https://github.com/NetSys/bess/pull/793,"In Module::EmitPacket() method, it is possible to add a packet to the packetBatch (batch->add(pkt)) which is already full. batch should be newly created one.","In Module::EmitPacket() method, it is possible to add a packet to the packetBatch (batch->add(pkt)) which is already full. batch should be newly created one.",True,{}
NetSys/bess,https://github.com/NetSys/bess,793,2018-04-26T02:46:58Z,2018-05-05T04:04:50Z,2018-05-09T04:58:13Z,MERGED,True,2,1,1,https://github.com/inhocho89,bug fix in EmitPacket(),1,[],https://github.com/NetSys/bess/pull/793,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/793#issuecomment-384501591,"In Module::EmitPacket() method, it is possible to add a packet to the packetBatch (batch->add(pkt)) which is already full. batch should be newly created one.","Codecov Report

Merging #793 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #793   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6820d02...6e05fc2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,793,2018-04-26T02:46:58Z,2018-05-05T04:04:50Z,2018-05-09T04:58:13Z,MERGED,True,2,1,1,https://github.com/inhocho89,bug fix in EmitPacket(),1,[],https://github.com/NetSys/bess/pull/793,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/793#issuecomment-387620180,"In Module::EmitPacket() method, it is possible to add a packet to the packetBatch (batch->add(pkt)) which is already full. batch should be newly created one.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,796,2018-05-10T00:53:07Z,2018-05-11T22:39:51Z,2018-05-11T22:41:33Z,MERGED,True,56,2,8,https://github.com/mmussomele,Queue histogram stats,2,[],https://github.com/NetSys/bess/pull/796,https://github.com/mmussomele,1,https://github.com/NetSys/bess/pull/796,"A quick performance benchmark (seemingly no performance hits from adding the histograms):
Testing on master:
Machine running perftest/pktgen:
        17:26:19.705492       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14558.3    20.679      1106               13903.6    20.690      3227
        ------------------------------------------------------------------------------------------------

        17:26:20.706779       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14534.3    20.644      1512               13880.3    20.655      2684
        ------------------------------------------------------------------------------------------------

        17:26:21.708050       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14583.5    20.714      1269               13927.7    20.726      3195
        ------------------------------------------------------------------------------------------------

        17:26:22.709342       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14550.1    20.667      1222               13893.7    20.675      2077
        ------------------------------------------------------------------------------------------------

        17:26:23.710611       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14556.3    20.676      1160               13901.8    20.687      3291
        ------------------------------------------------------------------------------------------------

        17:26:24.711895       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14541.4    20.655      1205               13885.5    20.663      2077
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:26:19.815615       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.1    20.679     10193               14557.9    20.679        32
        ------------------------------------------------------------------------------------------------

        17:26:20.816947       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14543.0    20.651      9434               14538.1    20.651        55
        ------------------------------------------------------------------------------------------------

        17:26:21.818216       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14588.7    20.715     10263               14583.4    20.715        27
        ------------------------------------------------------------------------------------------------

        17:26:22.819708       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14552.0    20.665      7095               14548.3    20.665        59
        ------------------------------------------------------------------------------------------------

        17:26:23.821029       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.6    20.679     10334               14558.3    20.679        39
        ------------------------------------------------------------------------------------------------

        17:26:24.822397       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14539.2    20.647      7174               14535.5    20.647        23
        ------------------------------------------------------------------------------------------------

Testing on queue_hist_stats:
Machine running perftest/pktgen:
        17:42:53.764040       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.0    20.762      1068               13959.7    20.773      3419
        ------------------------------------------------------------------------------------------------

        17:42:54.765316       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14632.1    20.783      1253               13972.0    20.792      2205
        ------------------------------------------------------------------------------------------------

        17:42:55.766576       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.1    20.762      1262               13959.8    20.774      3291
        ------------------------------------------------------------------------------------------------

        17:42:56.767844       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.5    20.800      1234               13982.9    20.808      2205
        ------------------------------------------------------------------------------------------------

        17:42:57.769120       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14623.4    20.771      1086               13965.7    20.782      3291
        ------------------------------------------------------------------------------------------------

        17:42:58.770433       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14603.1    20.742      1286               13944.3    20.750      2141
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:42:53.597053       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14614.9    20.752     10200               14609.7    20.752        23
        ------------------------------------------------------------------------------------------------

        17:42:54.598355       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14636.8    20.786      7050               14633.1    20.786        35
        ------------------------------------------------------------------------------------------------

        17:42:55.599692       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14625.3    20.767     10180               14620.1    20.767        23
        ------------------------------------------------------------------------------------------------

        17:42:56.601002       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.9    20.796      7088               14640.2    20.796        43
        ------------------------------------------------------------------------------------------------

        17:42:57.602351       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14631.8    20.776     10123               14626.6    20.776        23
        ------------------------------------------------------------------------------------------------

        17:42:58.603674       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14612.9    20.752      7007               14609.3    20.752        63
        ------------------------------------------------------------------------------------------------","A quick performance benchmark (seemingly no performance hits from adding the histograms):
Testing on master:
Machine running perftest/pktgen:
        17:26:19.705492       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14558.3    20.679      1106               13903.6    20.690      3227
        ------------------------------------------------------------------------------------------------

        17:26:20.706779       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14534.3    20.644      1512               13880.3    20.655      2684
        ------------------------------------------------------------------------------------------------

        17:26:21.708050       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14583.5    20.714      1269               13927.7    20.726      3195
        ------------------------------------------------------------------------------------------------

        17:26:22.709342       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14550.1    20.667      1222               13893.7    20.675      2077
        ------------------------------------------------------------------------------------------------

        17:26:23.710611       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14556.3    20.676      1160               13901.8    20.687      3291
        ------------------------------------------------------------------------------------------------

        17:26:24.711895       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14541.4    20.655      1205               13885.5    20.663      2077
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:26:19.815615       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.1    20.679     10193               14557.9    20.679        32
        ------------------------------------------------------------------------------------------------

        17:26:20.816947       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14543.0    20.651      9434               14538.1    20.651        55
        ------------------------------------------------------------------------------------------------

        17:26:21.818216       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14588.7    20.715     10263               14583.4    20.715        27
        ------------------------------------------------------------------------------------------------

        17:26:22.819708       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14552.0    20.665      7095               14548.3    20.665        59
        ------------------------------------------------------------------------------------------------

        17:26:23.821029       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.6    20.679     10334               14558.3    20.679        39
        ------------------------------------------------------------------------------------------------

        17:26:24.822397       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14539.2    20.647      7174               14535.5    20.647        23
        ------------------------------------------------------------------------------------------------

Testing on queue_hist_stats:
Machine running perftest/pktgen:
        17:42:53.764040       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.0    20.762      1068               13959.7    20.773      3419
        ------------------------------------------------------------------------------------------------

        17:42:54.765316       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14632.1    20.783      1253               13972.0    20.792      2205
        ------------------------------------------------------------------------------------------------

        17:42:55.766576       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.1    20.762      1262               13959.8    20.774      3291
        ------------------------------------------------------------------------------------------------

        17:42:56.767844       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.5    20.800      1234               13982.9    20.808      2205
        ------------------------------------------------------------------------------------------------

        17:42:57.769120       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14623.4    20.771      1086               13965.7    20.782      3291
        ------------------------------------------------------------------------------------------------

        17:42:58.770433       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14603.1    20.742      1286               13944.3    20.750      2141
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:42:53.597053       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14614.9    20.752     10200               14609.7    20.752        23
        ------------------------------------------------------------------------------------------------

        17:42:54.598355       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14636.8    20.786      7050               14633.1    20.786        35
        ------------------------------------------------------------------------------------------------

        17:42:55.599692       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14625.3    20.767     10180               14620.1    20.767        23
        ------------------------------------------------------------------------------------------------

        17:42:56.601002       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.9    20.796      7088               14640.2    20.796        43
        ------------------------------------------------------------------------------------------------

        17:42:57.602351       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14631.8    20.776     10123               14626.6    20.776        23
        ------------------------------------------------------------------------------------------------

        17:42:58.603674       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14612.9    20.752      7007               14609.3    20.752        63
        ------------------------------------------------------------------------------------------------",True,{}
NetSys/bess,https://github.com/NetSys/bess,796,2018-05-10T00:53:07Z,2018-05-11T22:39:51Z,2018-05-11T22:41:33Z,MERGED,True,56,2,8,https://github.com/mmussomele,Queue histogram stats,2,[],https://github.com/NetSys/bess/pull/796,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/796#issuecomment-387924187,"A quick performance benchmark (seemingly no performance hits from adding the histograms):
Testing on master:
Machine running perftest/pktgen:
        17:26:19.705492       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14558.3    20.679      1106               13903.6    20.690      3227
        ------------------------------------------------------------------------------------------------

        17:26:20.706779       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14534.3    20.644      1512               13880.3    20.655      2684
        ------------------------------------------------------------------------------------------------

        17:26:21.708050       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14583.5    20.714      1269               13927.7    20.726      3195
        ------------------------------------------------------------------------------------------------

        17:26:22.709342       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14550.1    20.667      1222               13893.7    20.675      2077
        ------------------------------------------------------------------------------------------------

        17:26:23.710611       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14556.3    20.676      1160               13901.8    20.687      3291
        ------------------------------------------------------------------------------------------------

        17:26:24.711895       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14541.4    20.655      1205               13885.5    20.663      2077
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:26:19.815615       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.1    20.679     10193               14557.9    20.679        32
        ------------------------------------------------------------------------------------------------

        17:26:20.816947       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14543.0    20.651      9434               14538.1    20.651        55
        ------------------------------------------------------------------------------------------------

        17:26:21.818216       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14588.7    20.715     10263               14583.4    20.715        27
        ------------------------------------------------------------------------------------------------

        17:26:22.819708       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14552.0    20.665      7095               14548.3    20.665        59
        ------------------------------------------------------------------------------------------------

        17:26:23.821029       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.6    20.679     10334               14558.3    20.679        39
        ------------------------------------------------------------------------------------------------

        17:26:24.822397       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14539.2    20.647      7174               14535.5    20.647        23
        ------------------------------------------------------------------------------------------------

Testing on queue_hist_stats:
Machine running perftest/pktgen:
        17:42:53.764040       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.0    20.762      1068               13959.7    20.773      3419
        ------------------------------------------------------------------------------------------------

        17:42:54.765316       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14632.1    20.783      1253               13972.0    20.792      2205
        ------------------------------------------------------------------------------------------------

        17:42:55.766576       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.1    20.762      1262               13959.8    20.774      3291
        ------------------------------------------------------------------------------------------------

        17:42:56.767844       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.5    20.800      1234               13982.9    20.808      2205
        ------------------------------------------------------------------------------------------------

        17:42:57.769120       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14623.4    20.771      1086               13965.7    20.782      3291
        ------------------------------------------------------------------------------------------------

        17:42:58.770433       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14603.1    20.742      1286               13944.3    20.750      2141
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:42:53.597053       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14614.9    20.752     10200               14609.7    20.752        23
        ------------------------------------------------------------------------------------------------

        17:42:54.598355       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14636.8    20.786      7050               14633.1    20.786        35
        ------------------------------------------------------------------------------------------------

        17:42:55.599692       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14625.3    20.767     10180               14620.1    20.767        23
        ------------------------------------------------------------------------------------------------

        17:42:56.601002       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.9    20.796      7088               14640.2    20.796        43
        ------------------------------------------------------------------------------------------------

        17:42:57.602351       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14631.8    20.776     10123               14626.6    20.776        23
        ------------------------------------------------------------------------------------------------

        17:42:58.603674       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14612.9    20.752      7007               14609.3    20.752        63
        ------------------------------------------------------------------------------------------------","Codecov Report

Merging #796 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #796   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9964db0...6f4788b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,796,2018-05-10T00:53:07Z,2018-05-11T22:39:51Z,2018-05-11T22:41:33Z,MERGED,True,56,2,8,https://github.com/mmussomele,Queue histogram stats,2,[],https://github.com/NetSys/bess/pull/796,https://github.com/mmussomele,3,https://github.com/NetSys/bess/pull/796#issuecomment-388192013,"A quick performance benchmark (seemingly no performance hits from adding the histograms):
Testing on master:
Machine running perftest/pktgen:
        17:26:19.705492       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14558.3    20.679      1106               13903.6    20.690      3227
        ------------------------------------------------------------------------------------------------

        17:26:20.706779       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14534.3    20.644      1512               13880.3    20.655      2684
        ------------------------------------------------------------------------------------------------

        17:26:21.708050       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14583.5    20.714      1269               13927.7    20.726      3195
        ------------------------------------------------------------------------------------------------

        17:26:22.709342       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14550.1    20.667      1222               13893.7    20.675      2077
        ------------------------------------------------------------------------------------------------

        17:26:23.710611       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14556.3    20.676      1160               13901.8    20.687      3291
        ------------------------------------------------------------------------------------------------

        17:26:24.711895       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14541.4    20.655      1205               13885.5    20.663      2077
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:26:19.815615       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.1    20.679     10193               14557.9    20.679        32
        ------------------------------------------------------------------------------------------------

        17:26:20.816947       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14543.0    20.651      9434               14538.1    20.651        55
        ------------------------------------------------------------------------------------------------

        17:26:21.818216       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14588.7    20.715     10263               14583.4    20.715        27
        ------------------------------------------------------------------------------------------------

        17:26:22.819708       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14552.0    20.665      7095               14548.3    20.665        59
        ------------------------------------------------------------------------------------------------

        17:26:23.821029       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.6    20.679     10334               14558.3    20.679        39
        ------------------------------------------------------------------------------------------------

        17:26:24.822397       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14539.2    20.647      7174               14535.5    20.647        23
        ------------------------------------------------------------------------------------------------

Testing on queue_hist_stats:
Machine running perftest/pktgen:
        17:42:53.764040       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.0    20.762      1068               13959.7    20.773      3419
        ------------------------------------------------------------------------------------------------

        17:42:54.765316       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14632.1    20.783      1253               13972.0    20.792      2205
        ------------------------------------------------------------------------------------------------

        17:42:55.766576       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.1    20.762      1262               13959.8    20.774      3291
        ------------------------------------------------------------------------------------------------

        17:42:56.767844       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.5    20.800      1234               13982.9    20.808      2205
        ------------------------------------------------------------------------------------------------

        17:42:57.769120       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14623.4    20.771      1086               13965.7    20.782      3291
        ------------------------------------------------------------------------------------------------

        17:42:58.770433       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14603.1    20.742      1286               13944.3    20.750      2141
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:42:53.597053       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14614.9    20.752     10200               14609.7    20.752        23
        ------------------------------------------------------------------------------------------------

        17:42:54.598355       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14636.8    20.786      7050               14633.1    20.786        35
        ------------------------------------------------------------------------------------------------

        17:42:55.599692       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14625.3    20.767     10180               14620.1    20.767        23
        ------------------------------------------------------------------------------------------------

        17:42:56.601002       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.9    20.796      7088               14640.2    20.796        43
        ------------------------------------------------------------------------------------------------

        17:42:57.602351       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14631.8    20.776     10123               14626.6    20.776        23
        ------------------------------------------------------------------------------------------------

        17:42:58.603674       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14612.9    20.752      7007               14609.3    20.752        63
        ------------------------------------------------------------------------------------------------","@sangjinhan comments addressed, all changes in the fixup commit. Let me know when you've taken another look and I'll squash it up",True,{}
NetSys/bess,https://github.com/NetSys/bess,796,2018-05-10T00:53:07Z,2018-05-11T22:39:51Z,2018-05-11T22:41:33Z,MERGED,True,56,2,8,https://github.com/mmussomele,Queue histogram stats,2,[],https://github.com/NetSys/bess/pull/796,https://github.com/mmussomele,4,https://github.com/NetSys/bess/pull/796#issuecomment-388192094,"A quick performance benchmark (seemingly no performance hits from adding the histograms):
Testing on master:
Machine running perftest/pktgen:
        17:26:19.705492       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14558.3    20.679      1106               13903.6    20.690      3227
        ------------------------------------------------------------------------------------------------

        17:26:20.706779       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14534.3    20.644      1512               13880.3    20.655      2684
        ------------------------------------------------------------------------------------------------

        17:26:21.708050       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14583.5    20.714      1269               13927.7    20.726      3195
        ------------------------------------------------------------------------------------------------

        17:26:22.709342       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14550.1    20.667      1222               13893.7    20.675      2077
        ------------------------------------------------------------------------------------------------

        17:26:23.710611       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14556.3    20.676      1160               13901.8    20.687      3291
        ------------------------------------------------------------------------------------------------

        17:26:24.711895       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14541.4    20.655      1205               13885.5    20.663      2077
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:26:19.815615       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.1    20.679     10193               14557.9    20.679        32
        ------------------------------------------------------------------------------------------------

        17:26:20.816947       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14543.0    20.651      9434               14538.1    20.651        55
        ------------------------------------------------------------------------------------------------

        17:26:21.818216       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14588.7    20.715     10263               14583.4    20.715        27
        ------------------------------------------------------------------------------------------------

        17:26:22.819708       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14552.0    20.665      7095               14548.3    20.665        59
        ------------------------------------------------------------------------------------------------

        17:26:23.821029       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.6    20.679     10334               14558.3    20.679        39
        ------------------------------------------------------------------------------------------------

        17:26:24.822397       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14539.2    20.647      7174               14535.5    20.647        23
        ------------------------------------------------------------------------------------------------

Testing on queue_hist_stats:
Machine running perftest/pktgen:
        17:42:53.764040       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.0    20.762      1068               13959.7    20.773      3419
        ------------------------------------------------------------------------------------------------

        17:42:54.765316       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14632.1    20.783      1253               13972.0    20.792      2205
        ------------------------------------------------------------------------------------------------

        17:42:55.766576       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.1    20.762      1262               13959.8    20.774      3291
        ------------------------------------------------------------------------------------------------

        17:42:56.767844       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.5    20.800      1234               13982.9    20.808      2205
        ------------------------------------------------------------------------------------------------

        17:42:57.769120       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14623.4    20.771      1086               13965.7    20.782      3291
        ------------------------------------------------------------------------------------------------

        17:42:58.770433       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14603.1    20.742      1286               13944.3    20.750      2141
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:42:53.597053       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14614.9    20.752     10200               14609.7    20.752        23
        ------------------------------------------------------------------------------------------------

        17:42:54.598355       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14636.8    20.786      7050               14633.1    20.786        35
        ------------------------------------------------------------------------------------------------

        17:42:55.599692       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14625.3    20.767     10180               14620.1    20.767        23
        ------------------------------------------------------------------------------------------------

        17:42:56.601002       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.9    20.796      7088               14640.2    20.796        43
        ------------------------------------------------------------------------------------------------

        17:42:57.602351       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14631.8    20.776     10123               14626.6    20.776        23
        ------------------------------------------------------------------------------------------------

        17:42:58.603674       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14612.9    20.752      7007               14609.3    20.752        63
        ------------------------------------------------------------------------------------------------","(also tested, gets identical performance as before)",True,{}
NetSys/bess,https://github.com/NetSys/bess,796,2018-05-10T00:53:07Z,2018-05-11T22:39:51Z,2018-05-11T22:41:33Z,MERGED,True,56,2,8,https://github.com/mmussomele,Queue histogram stats,2,[],https://github.com/NetSys/bess/pull/796,https://github.com/mmussomele,5,https://github.com/NetSys/bess/pull/796#issuecomment-388423604,"A quick performance benchmark (seemingly no performance hits from adding the histograms):
Testing on master:
Machine running perftest/pktgen:
        17:26:19.705492       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14558.3    20.679      1106               13903.6    20.690      3227
        ------------------------------------------------------------------------------------------------

        17:26:20.706779       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14534.3    20.644      1512               13880.3    20.655      2684
        ------------------------------------------------------------------------------------------------

        17:26:21.708050       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14583.5    20.714      1269               13927.7    20.726      3195
        ------------------------------------------------------------------------------------------------

        17:26:22.709342       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14550.1    20.667      1222               13893.7    20.675      2077
        ------------------------------------------------------------------------------------------------

        17:26:23.710611       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14556.3    20.676      1160               13901.8    20.687      3291
        ------------------------------------------------------------------------------------------------

        17:26:24.711895       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14541.4    20.655      1205               13885.5    20.663      2077
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:26:19.815615       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.1    20.679     10193               14557.9    20.679        32
        ------------------------------------------------------------------------------------------------

        17:26:20.816947       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14543.0    20.651      9434               14538.1    20.651        55
        ------------------------------------------------------------------------------------------------

        17:26:21.818216       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14588.7    20.715     10263               14583.4    20.715        27
        ------------------------------------------------------------------------------------------------

        17:26:22.819708       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14552.0    20.665      7095               14548.3    20.665        59
        ------------------------------------------------------------------------------------------------

        17:26:23.821029       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.6    20.679     10334               14558.3    20.679        39
        ------------------------------------------------------------------------------------------------

        17:26:24.822397       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14539.2    20.647      7174               14535.5    20.647        23
        ------------------------------------------------------------------------------------------------

Testing on queue_hist_stats:
Machine running perftest/pktgen:
        17:42:53.764040       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.0    20.762      1068               13959.7    20.773      3419
        ------------------------------------------------------------------------------------------------

        17:42:54.765316       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14632.1    20.783      1253               13972.0    20.792      2205
        ------------------------------------------------------------------------------------------------

        17:42:55.766576       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.1    20.762      1262               13959.8    20.774      3291
        ------------------------------------------------------------------------------------------------

        17:42:56.767844       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.5    20.800      1234               13982.9    20.808      2205
        ------------------------------------------------------------------------------------------------

        17:42:57.769120       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14623.4    20.771      1086               13965.7    20.782      3291
        ------------------------------------------------------------------------------------------------

        17:42:58.770433       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14603.1    20.742      1286               13944.3    20.750      2141
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:42:53.597053       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14614.9    20.752     10200               14609.7    20.752        23
        ------------------------------------------------------------------------------------------------

        17:42:54.598355       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14636.8    20.786      7050               14633.1    20.786        35
        ------------------------------------------------------------------------------------------------

        17:42:55.599692       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14625.3    20.767     10180               14620.1    20.767        23
        ------------------------------------------------------------------------------------------------

        17:42:56.601002       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.9    20.796      7088               14640.2    20.796        43
        ------------------------------------------------------------------------------------------------

        17:42:57.602351       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14631.8    20.776     10123               14626.6    20.776        23
        ------------------------------------------------------------------------------------------------

        17:42:58.603674       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14612.9    20.752      7007               14609.3    20.752        63
        ------------------------------------------------------------------------------------------------",@sangjinhan new changes are in the fixup commit again. Third times the charm 😅,True,{}
NetSys/bess,https://github.com/NetSys/bess,796,2018-05-10T00:53:07Z,2018-05-11T22:39:51Z,2018-05-11T22:41:33Z,MERGED,True,56,2,8,https://github.com/mmussomele,Queue histogram stats,2,[],https://github.com/NetSys/bess/pull/796,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/796#issuecomment-388502918,"A quick performance benchmark (seemingly no performance hits from adding the histograms):
Testing on master:
Machine running perftest/pktgen:
        17:26:19.705492       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14558.3    20.679      1106               13903.6    20.690      3227
        ------------------------------------------------------------------------------------------------

        17:26:20.706779       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14534.3    20.644      1512               13880.3    20.655      2684
        ------------------------------------------------------------------------------------------------

        17:26:21.708050       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14583.5    20.714      1269               13927.7    20.726      3195
        ------------------------------------------------------------------------------------------------

        17:26:22.709342       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14550.1    20.667      1222               13893.7    20.675      2077
        ------------------------------------------------------------------------------------------------

        17:26:23.710611       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14556.3    20.676      1160               13901.8    20.687      3291
        ------------------------------------------------------------------------------------------------

        17:26:24.711895       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14541.4    20.655      1205               13885.5    20.663      2077
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:26:19.815615       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.1    20.679     10193               14557.9    20.679        32
        ------------------------------------------------------------------------------------------------

        17:26:20.816947       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14543.0    20.651      9434               14538.1    20.651        55
        ------------------------------------------------------------------------------------------------

        17:26:21.818216       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14588.7    20.715     10263               14583.4    20.715        27
        ------------------------------------------------------------------------------------------------

        17:26:22.819708       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14552.0    20.665      7095               14548.3    20.665        59
        ------------------------------------------------------------------------------------------------

        17:26:23.821029       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14563.6    20.679     10334               14558.3    20.679        39
        ------------------------------------------------------------------------------------------------

        17:26:24.822397       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14539.2    20.647      7174               14535.5    20.647        23
        ------------------------------------------------------------------------------------------------

Testing on queue_hist_stats:
Machine running perftest/pktgen:
        17:42:53.764040       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.0    20.762      1068               13959.7    20.773      3419
        ------------------------------------------------------------------------------------------------

        17:42:54.765316       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14632.1    20.783      1253               13972.0    20.792      2205
        ------------------------------------------------------------------------------------------------

        17:42:55.766576       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14617.1    20.762      1262               13959.8    20.774      3291
        ------------------------------------------------------------------------------------------------

        17:42:56.767844       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.5    20.800      1234               13982.9    20.808      2205
        ------------------------------------------------------------------------------------------------

        17:42:57.769120       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14623.4    20.771      1086               13965.7    20.782      3291
        ------------------------------------------------------------------------------------------------

        17:42:58.770433       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14603.1    20.742      1286               13944.3    20.750      2141
        ------------------------------------------------------------------------------------------------

Machine running port/macswap:
        17:42:53.597053       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14614.9    20.752     10200               14609.7    20.752        23
        ------------------------------------------------------------------------------------------------

        17:42:54.598355       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14636.8    20.786      7050               14633.1    20.786        35
        ------------------------------------------------------------------------------------------------

        17:42:55.599692       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14625.3    20.767     10180               14620.1    20.767        23
        ------------------------------------------------------------------------------------------------

        17:42:56.601002       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14643.9    20.796      7088               14640.2    20.796        43
        ------------------------------------------------------------------------------------------------

        17:42:57.602351       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14631.8    20.776     10123               14626.6    20.776        23
        ------------------------------------------------------------------------------------------------

        17:42:58.603674       INC     Mbps      Mpps   dropped          OUT     Mbps      Mpps   dropped
        ------------------------------------------------------------------------------------------------
        pmd_port0/PMDPort          14612.9    20.752      7007               14609.3    20.752        63
        ------------------------------------------------------------------------------------------------","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,797,2018-05-10T18:28:02Z,2018-05-16T01:52:43Z,2018-05-16T02:03:08Z,MERGED,True,96,21,2,https://github.com/sangjinhan,grpc: do not use global callbacks to serialize,1,[],https://github.com/NetSys/bess/pull/797,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/797,"BESS gRPC server handlers are not thread-safe, so we use global
callbacks to acquire/release a mutex before/after method invocation.
For whatever reason, modules may want to run their own gRPC server.
This can cause very subtle issues. For example, the module's gRPC server
may terminate while holding the mutex, thus blocking all BESS gRPC
server indefinitely.
The gRPC global callback is an undocumented feature, so it's good
to avoid using it anyway. Unfortunately there is no per-server callback
mechanism provided by gRPC. Instead this patch adds a lock for every
method.
This fix was made and tested by @shinae-woo","BESS gRPC server handlers are not thread-safe, so we use global
callbacks to acquire/release a mutex before/after method invocation.
For whatever reason, modules may want to run their own gRPC server.
This can cause very subtle issues. For example, the module's gRPC server
may terminate while holding the mutex, thus blocking all BESS gRPC
server indefinitely.
The gRPC global callback is an undocumented feature, so it's good
to avoid using it anyway. Unfortunately there is no per-server callback
mechanism provided by gRPC. Instead this patch adds a lock for every
method.
This fix was made and tested by @shinae-woo",True,{}
NetSys/bess,https://github.com/NetSys/bess,797,2018-05-10T18:28:02Z,2018-05-16T01:52:43Z,2018-05-16T02:03:08Z,MERGED,True,96,21,2,https://github.com/sangjinhan,grpc: do not use global callbacks to serialize,1,[],https://github.com/NetSys/bess/pull/797,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/797#issuecomment-388521041,"BESS gRPC server handlers are not thread-safe, so we use global
callbacks to acquire/release a mutex before/after method invocation.
For whatever reason, modules may want to run their own gRPC server.
This can cause very subtle issues. For example, the module's gRPC server
may terminate while holding the mutex, thus blocking all BESS gRPC
server indefinitely.
The gRPC global callback is an undocumented feature, so it's good
to avoid using it anyway. Unfortunately there is no per-server callback
mechanism provided by gRPC. Instead this patch adds a lock for every
method.
This fix was made and tested by @shinae-woo","Codecov Report

Merging #797 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #797   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 523f768...5b4267d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,797,2018-05-10T18:28:02Z,2018-05-16T01:52:43Z,2018-05-16T02:03:08Z,MERGED,True,96,21,2,https://github.com/sangjinhan,grpc: do not use global callbacks to serialize,1,[],https://github.com/NetSys/bess/pull/797,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/797#issuecomment-389369375,"BESS gRPC server handlers are not thread-safe, so we use global
callbacks to acquire/release a mutex before/after method invocation.
For whatever reason, modules may want to run their own gRPC server.
This can cause very subtle issues. For example, the module's gRPC server
may terminate while holding the mutex, thus blocking all BESS gRPC
server indefinitely.
The gRPC global callback is an undocumented feature, so it's good
to avoid using it anyway. Unfortunately there is no per-server callback
mechanism provided by gRPC. Instead this patch adds a lock for every
method.
This fix was made and tested by @shinae-woo",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,799,2018-05-16T00:24:01Z,2018-05-16T02:05:58Z,2018-05-16T16:33:59Z,MERGED,True,1,0,1,https://github.com/chris3torek,ignore *.o.ur-safe files,1,[],https://github.com/NetSys/bess/pull/799,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/799,"Some recent Ubuntu update generates these files when linking
kernel modules.  Since they are build artifacts, ignore them.","Some recent Ubuntu update generates these files when linking
kernel modules.  Since they are build artifacts, ignore them.",True,{}
NetSys/bess,https://github.com/NetSys/bess,799,2018-05-16T00:24:01Z,2018-05-16T02:05:58Z,2018-05-16T16:33:59Z,MERGED,True,1,0,1,https://github.com/chris3torek,ignore *.o.ur-safe files,1,[],https://github.com/NetSys/bess/pull/799,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/799#issuecomment-389362787,"Some recent Ubuntu update generates these files when linking
kernel modules.  Since they are build artifacts, ignore them.","Codecov Report

Merging #799 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #799   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 523f768...58f5958. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,799,2018-05-16T00:24:01Z,2018-05-16T02:05:58Z,2018-05-16T16:33:59Z,MERGED,True,1,0,1,https://github.com/chris3torek,ignore *.o.ur-safe files,1,[],https://github.com/NetSys/bess/pull/799,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/799#issuecomment-389371555,"Some recent Ubuntu update generates these files when linking
kernel modules.  Since they are build artifacts, ignore them.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,799,2018-05-16T00:24:01Z,2018-05-16T02:05:58Z,2018-05-16T16:33:59Z,MERGED,True,1,0,1,https://github.com/chris3torek,ignore *.o.ur-safe files,1,[],https://github.com/NetSys/bess/pull/799,https://github.com/justinemarie,4,https://github.com/NetSys/bess/pull/799#issuecomment-389378079,"Some recent Ubuntu update generates these files when linking
kernel modules.  Since they are build artifacts, ignore them.","What's with the cat with the eye masks???

Sent from my rotary phone.
…
On Tue, May 15, 2018, 22:06 Daniele Di Proietto ***@***.***> wrote:
 [image: gatto]
 <https://camo.githubusercontent.com/411fc385eb6b6498abcfa4b32edd4b00209d93f4/68747470733a2f2f7374617469632e6e616e6f70726573732e69742f6e616e6f70726573732f666f746f67616c6c6572792f3132303058302f3133363234372f6f636368692d64697365676e6174692d7375692d67617474692e6a7067>

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#799 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AAE6FmY3KBWRXaQpt-qkPxhl75FkM6omks5ty4mTgaJpZM4UAdz->
 .",True,{}
NetSys/bess,https://github.com/NetSys/bess,799,2018-05-16T00:24:01Z,2018-05-16T02:05:58Z,2018-05-16T16:33:59Z,MERGED,True,1,0,1,https://github.com/chris3torek,ignore *.o.ur-safe files,1,[],https://github.com/NetSys/bess/pull/799,https://github.com/ddiproietto,5,https://github.com/NetSys/bess/pull/799#issuecomment-389583876,"Some recent Ubuntu update generates these files when linking
kernel modules.  Since they are build artifacts, ignore them.","Alright, I'll reveal my sources:
https://www.nanopress.it/curiosita/foto/gatti-con-occhi-da-cartone-animato_4787_41.html",True,{}
NetSys/bess,https://github.com/NetSys/bess,800,2018-05-16T00:34:51Z,2018-05-16T01:48:07Z,2018-05-16T02:06:32Z,MERGED,True,0,2,1,https://github.com/chris3torek,Stop pausing workers for every gatehook command,1,[],https://github.com/NetSys/bess/pull/800,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/800,"Thread-safe gatehook commands paused workers.  Now we just
don't pause at all; non-thread-safe gate hook commands
will produce an error like non-thread-safe module commands.
Closes #798.","Thread-safe gatehook commands paused workers.  Now we just
don't pause at all; non-thread-safe gate hook commands
will produce an error like non-thread-safe module commands.
Closes #798.",True,{}
NetSys/bess,https://github.com/NetSys/bess,800,2018-05-16T00:34:51Z,2018-05-16T01:48:07Z,2018-05-16T02:06:32Z,MERGED,True,0,2,1,https://github.com/chris3torek,Stop pausing workers for every gatehook command,1,[],https://github.com/NetSys/bess/pull/800,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/800#issuecomment-389366781,"Thread-safe gatehook commands paused workers.  Now we just
don't pause at all; non-thread-safe gate hook commands
will produce an error like non-thread-safe module commands.
Closes #798.","Codecov Report

Merging #800 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #800   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 523f768...4b5d0ee. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,800,2018-05-16T00:34:51Z,2018-05-16T01:48:07Z,2018-05-16T02:06:32Z,MERGED,True,0,2,1,https://github.com/chris3torek,Stop pausing workers for every gatehook command,1,[],https://github.com/NetSys/bess/pull/800,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/800#issuecomment-389368873,"Thread-safe gatehook commands paused workers.  Now we just
don't pause at all; non-thread-safe gate hook commands
will produce an error like non-thread-safe module commands.
Closes #798.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,802,2018-05-18T22:30:26Z,2018-05-18T23:14:09Z,2018-05-18T23:15:30Z,MERGED,True,1,1,1,https://github.com/melvinw,modules/flowgen: fix destination port typo,1,[],https://github.com/NetSys/bess/pull/802,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/802,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,802,2018-05-18T22:30:26Z,2018-05-18T23:14:09Z,2018-05-18T23:15:30Z,MERGED,True,1,1,1,https://github.com/melvinw,modules/flowgen: fix destination port typo,1,[],https://github.com/NetSys/bess/pull/802,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/802#issuecomment-390355477,,"Codecov Report

Merging #802 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #802   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update dc98932...2be5a82. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,802,2018-05-18T22:30:26Z,2018-05-18T23:14:09Z,2018-05-18T23:15:30Z,MERGED,True,1,1,1,https://github.com/melvinw,modules/flowgen: fix destination port typo,1,[],https://github.com/NetSys/bess/pull/802,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/802#issuecomment-390355757,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,804,2018-06-14T17:06:29Z,2018-07-07T23:57:22Z,2018-11-26T19:07:34Z,MERGED,True,1,1,1,https://github.com/ddiproietto,port: Return const reference from conf() accessor,1,[],https://github.com/NetSys/bess/pull/804,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/804,"According to Google C++ Style Guide we should return a const reference here
instead of making a copy.
I fixed this because I noticed that the accessor is used very often in the
fastpath ({Port,Queue}{Inc,Out}::RunTask call that once per batch). I haven't
noticed any performance impact, I suspect the compiler is smart enough to avoid
the copy, but I think it's better to change it.","According to Google C++ Style Guide we should return a const reference here
instead of making a copy.
I fixed this because I noticed that the accessor is used very often in the
fastpath ({Port,Queue}{Inc,Out}::RunTask call that once per batch). I haven't
noticed any performance impact, I suspect the compiler is smart enough to avoid
the copy, but I think it's better to change it.",True,{}
NetSys/bess,https://github.com/NetSys/bess,804,2018-06-14T17:06:29Z,2018-07-07T23:57:22Z,2018-11-26T19:07:34Z,MERGED,True,1,1,1,https://github.com/ddiproietto,port: Return const reference from conf() accessor,1,[],https://github.com/NetSys/bess/pull/804,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/804#issuecomment-397381551,"According to Google C++ Style Guide we should return a const reference here
instead of making a copy.
I fixed this because I noticed that the accessor is used very often in the
fastpath ({Port,Queue}{Inc,Out}::RunTask call that once per batch). I haven't
noticed any performance impact, I suspect the compiler is smart enough to avoid
the copy, but I think it's better to change it.","Codecov Report

Merging #804 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #804   +/-   ##
=======================================
  Coverage   55.61%   55.61%           
=======================================
  Files           9        9           
  Lines        1131     1131           
=======================================
  Hits          629      629           
  Misses        502      502

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a895743...ede8205. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,804,2018-06-14T17:06:29Z,2018-07-07T23:57:22Z,2018-11-26T19:07:34Z,MERGED,True,1,1,1,https://github.com/ddiproietto,port: Return const reference from conf() accessor,1,[],https://github.com/NetSys/bess/pull/804,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/804#issuecomment-403250678,"According to Google C++ Style Guide we should return a const reference here
instead of making a copy.
I fixed this because I noticed that the accessor is used very often in the
fastpath ({Port,Queue}{Inc,Out}::RunTask call that once per batch). I haven't
noticed any performance impact, I suspect the compiler is smart enough to avoid
the copy, but I think it's better to change it.",I am not sure if the style guide mentions which to favor between const ref vs. copy for a return value (please correct me if I am wrong). I do agree const ref makes more sense here.,True,{}
NetSys/bess,https://github.com/NetSys/bess,804,2018-06-14T17:06:29Z,2018-07-07T23:57:22Z,2018-11-26T19:07:34Z,MERGED,True,1,1,1,https://github.com/ddiproietto,port: Return const reference from conf() accessor,1,[],https://github.com/NetSys/bess/pull/804,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/804#issuecomment-403250727,"According to Google C++ Style Guide we should return a const reference here
instead of making a copy.
I fixed this because I noticed that the accessor is used very often in the
fastpath ({Port,Queue}{Inc,Out}::RunTask call that once per batch). I haven't
noticed any performance impact, I suspect the compiler is smart enough to avoid
the copy, but I think it's better to change it.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,805,2018-06-20T05:17:56Z,2018-06-20T22:54:21Z,2018-06-20T22:54:25Z,MERGED,True,10,8,1,https://github.com/melvinw,pybess: add plugib_pb to path,1,[],https://github.com/NetSys/bess/pull/805,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/805,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,805,2018-06-20T05:17:56Z,2018-06-20T22:54:21Z,2018-06-20T22:54:25Z,MERGED,True,10,8,1,https://github.com/melvinw,pybess: add plugib_pb to path,1,[],https://github.com/NetSys/bess/pull/805,https://github.com/melvinw,2,https://github.com/NetSys/bess/pull/805#issuecomment-398627289,,"In python3 not having plugin_pb on path seems to break bessctl. While this change fixes my use case, it does contradict the original comment about a similar import of builtin_pb. @chris3torek have any thoughts?",True,{}
NetSys/bess,https://github.com/NetSys/bess,805,2018-06-20T05:17:56Z,2018-06-20T22:54:21Z,2018-06-20T22:54:25Z,MERGED,True,10,8,1,https://github.com/melvinw,pybess: add plugib_pb to path,1,[],https://github.com/NetSys/bess/pull/805,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/805#issuecomment-398633514,,"Codecov Report

Merging #805 into master will increase coverage by 0.24%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #805      +/-   ##
==========================================
+ Coverage   55.61%   55.85%   +0.24%     
==========================================
  Files           9        9              
  Lines        1131     1135       +4     
==========================================
+ Hits          629      634       +5     
+ Misses        502      501       -1



Impacted Files
Coverage Δ





pybess/bess.py
39.82% <100%> (+0.52%)
⬆️


pybess/test_protobuf_to_dict.py
100% <0%> (+1.85%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a895743...321a498. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,805,2018-06-20T05:17:56Z,2018-06-20T22:54:21Z,2018-06-20T22:54:25Z,MERGED,True,10,8,1,https://github.com/melvinw,pybess: add plugib_pb to path,1,[],https://github.com/NetSys/bess/pull/805,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/805#issuecomment-398902093,,Good point. Pushed a fix with the cleanup,True,{}
NetSys/bess,https://github.com/NetSys/bess,806,2018-07-04T05:07:17Z,2018-07-16T19:39:37Z,2018-07-16T23:25:26Z,MERGED,True,0,8,1,https://github.com/sangjinhan,clang-format: Remove Objective-C related options,2,[],https://github.com/NetSys/bess/pull/806,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/806,"... otherwise it causes ""key errors"" on some clang-format versions.","... otherwise it causes ""key errors"" on some clang-format versions.",True,{}
NetSys/bess,https://github.com/NetSys/bess,806,2018-07-04T05:07:17Z,2018-07-16T19:39:37Z,2018-07-16T23:25:26Z,MERGED,True,0,8,1,https://github.com/sangjinhan,clang-format: Remove Objective-C related options,2,[],https://github.com/NetSys/bess/pull/806,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/806#issuecomment-405126302,"... otherwise it causes ""key errors"" on some clang-format versions.","Codecov Report

Merging #806 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #806   +/-   ##
=======================================
  Coverage   55.85%   55.85%           
=======================================
  Files           9        9           
  Lines        1135     1135           
=======================================
  Hits          634      634           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2516e21...8f28255. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,806,2018-07-04T05:07:17Z,2018-07-16T19:39:37Z,2018-07-16T23:25:26Z,MERGED,True,0,8,1,https://github.com/sangjinhan,clang-format: Remove Objective-C related options,2,[],https://github.com/NetSys/bess/pull/806,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/806#issuecomment-405357572,"... otherwise it causes ""key errors"" on some clang-format versions.","Merged, Thanks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,807,2018-07-07T22:12:25Z,2018-07-11T03:16:36Z,2018-07-11T03:27:08Z,CLOSED,False,59,289,20,https://github.com/sangjinhan,Switch to C++17 / g++7,9,[],https://github.com/NetSys/bess/pull/807,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/807,"Currently BESS is based on C++14, and this PR makes C++17 the minimum compiler requirement. This is to take advantage of ""modern"" features provided by C++17. One example included in this PR is that it removes the custom memory allocator(mem_alloc.cc) for alignment, as C++17 now supports a new feature called over-alignment new. g++5/6 does not fully support C++17 features, so this PR makes BESS require g++-7 at least.
We also drop supporting i386. As recent releases of Ubuntu do not provide i386 version, it has been burdensome to maintain both 32-bit ans 64-bit compatibility. The existing master branch (g++5 and 32bit support) will be archived to c++14-legacy, with only bug patches to be added.
The Travis CI is going to fail since this PR requires some changes in the build container. They will be another PR.","Currently BESS is based on C++14, and this PR makes C++17 the minimum compiler requirement. This is to take advantage of ""modern"" features provided by C++17. One example included in this PR is that it removes the custom memory allocator(mem_alloc.cc) for alignment, as C++17 now supports a new feature called over-alignment new. g++5/6 does not fully support C++17 features, so this PR makes BESS require g++-7 at least.
We also drop supporting i386. As recent releases of Ubuntu do not provide i386 version, it has been burdensome to maintain both 32-bit ans 64-bit compatibility. The existing master branch (g++5 and 32bit support) will be archived to c++14-legacy, with only bug patches to be added.
The Travis CI is going to fail since this PR requires some changes in the build container. They will be another PR.",True,{}
NetSys/bess,https://github.com/NetSys/bess,807,2018-07-07T22:12:25Z,2018-07-11T03:16:36Z,2018-07-11T03:27:08Z,CLOSED,False,59,289,20,https://github.com/sangjinhan,Switch to C++17 / g++7,9,[],https://github.com/NetSys/bess/pull/807,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/807#issuecomment-403246112,"Currently BESS is based on C++14, and this PR makes C++17 the minimum compiler requirement. This is to take advantage of ""modern"" features provided by C++17. One example included in this PR is that it removes the custom memory allocator(mem_alloc.cc) for alignment, as C++17 now supports a new feature called over-alignment new. g++5/6 does not fully support C++17 features, so this PR makes BESS require g++-7 at least.
We also drop supporting i386. As recent releases of Ubuntu do not provide i386 version, it has been burdensome to maintain both 32-bit ans 64-bit compatibility. The existing master branch (g++5 and 32bit support) will be archived to c++14-legacy, with only bug patches to be added.
The Travis CI is going to fail since this PR requires some changes in the build container. They will be another PR.","Codecov Report

Merging #807 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #807   +/-   ##
=======================================
  Coverage   55.85%   55.85%           
=======================================
  Files           9        9           
  Lines        1135     1135           
=======================================
  Hits          634      634           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2516e21...4f87377. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,807,2018-07-07T22:12:25Z,2018-07-11T03:16:36Z,2018-07-11T03:27:08Z,CLOSED,False,59,289,20,https://github.com/sangjinhan,Switch to C++17 / g++7,9,[],https://github.com/NetSys/bess/pull/807,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/807#issuecomment-404031821,"Currently BESS is based on C++14, and this PR makes C++17 the minimum compiler requirement. This is to take advantage of ""modern"" features provided by C++17. One example included in this PR is that it removes the custom memory allocator(mem_alloc.cc) for alignment, as C++17 now supports a new feature called over-alignment new. g++5/6 does not fully support C++17 features, so this PR makes BESS require g++-7 at least.
We also drop supporting i386. As recent releases of Ubuntu do not provide i386 version, it has been burdensome to maintain both 32-bit ans 64-bit compatibility. The existing master branch (g++5 and 32bit support) will be archived to c++14-legacy, with only bug patches to be added.
The Travis CI is going to fail since this PR requires some changes in the build container. They will be another PR.",Merged. Thanks.,True,{}
NetSys/bess,https://github.com/NetSys/bess,808,2018-07-07T23:50:38Z,2018-07-11T03:26:58Z,2018-08-12T07:10:00Z,MERGED,True,320,425,34,https://github.com/sangjinhan,Rework scripts in the env directory,19,[],https://github.com/NetSys/bess/pull/808,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/808,"Use APT to install gRPC on Ubuntu 18.04, instead of building from source.
Reflect the changes in minimum software requirements in the docker container and vagrant VM.
Break the Ansible script into smaller ones, each with a different purpose (runtime, build dependency, dev, etc.)","Use APT to install gRPC on Ubuntu 18.04, instead of building from source.
Reflect the changes in minimum software requirements in the docker container and vagrant VM.
Break the Ansible script into smaller ones, each with a different purpose (runtime, build dependency, dev, etc.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,808,2018-07-07T23:50:38Z,2018-07-11T03:26:58Z,2018-08-12T07:10:00Z,MERGED,True,320,425,34,https://github.com/sangjinhan,Rework scripts in the env directory,19,[],https://github.com/NetSys/bess/pull/808,https://github.com/shinae-woo,2,https://github.com/NetSys/bess/pull/808#issuecomment-404032743,"Use APT to install gRPC on Ubuntu 18.04, instead of building from source.
Reflect the changes in minimum software requirements in the docker container and vagrant VM.
Break the Ansible script into smaller ones, each with a different purpose (runtime, build dependency, dev, etc.)","Thanks, Merged. Let's drink!",True,{}
NetSys/bess,https://github.com/NetSys/bess,809,2018-07-08T23:18:32Z,2018-07-11T17:01:23Z,2018-08-12T07:09:58Z,MERGED,True,0,438,4,https://github.com/sangjinhan,vport_zc: remove ZeroCopyVPort,1,[],https://github.com/NetSys/bess/pull/809,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/809,"ZeroCopyVPort has been provided but never really well tested,
documented, or maintained. Given the security concern caused by zero
copy, perhaps it is time for ZeroCopyVPort to retire.
If you want high-performance packet I/O for kernel-bypassing applications,
you can use PMDPort (with vhost-user in BESS, and virtio-user in client
ports) as an alternative.","ZeroCopyVPort has been provided but never really well tested,
documented, or maintained. Given the security concern caused by zero
copy, perhaps it is time for ZeroCopyVPort to retire.
If you want high-performance packet I/O for kernel-bypassing applications,
you can use PMDPort (with vhost-user in BESS, and virtio-user in client
ports) as an alternative.",True,{}
NetSys/bess,https://github.com/NetSys/bess,809,2018-07-08T23:18:32Z,2018-07-11T17:01:23Z,2018-08-12T07:09:58Z,MERGED,True,0,438,4,https://github.com/sangjinhan,vport_zc: remove ZeroCopyVPort,1,[],https://github.com/NetSys/bess/pull/809,https://github.com/shinae-woo,2,https://github.com/NetSys/bess/pull/809#issuecomment-404032449,"ZeroCopyVPort has been provided but never really well tested,
documented, or maintained. Given the security concern caused by zero
copy, perhaps it is time for ZeroCopyVPort to retire.
If you want high-performance packet I/O for kernel-bypassing applications,
you can use PMDPort (with vhost-user in BESS, and virtio-user in client
ports) as an alternative.",Please rebase so that Travis config updated 👍,True,{}
NetSys/bess,https://github.com/NetSys/bess,809,2018-07-08T23:18:32Z,2018-07-11T17:01:23Z,2018-08-12T07:09:58Z,MERGED,True,0,438,4,https://github.com/sangjinhan,vport_zc: remove ZeroCopyVPort,1,[],https://github.com/NetSys/bess/pull/809,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/809#issuecomment-404040046,"ZeroCopyVPort has been provided but never really well tested,
documented, or maintained. Given the security concern caused by zero
copy, perhaps it is time for ZeroCopyVPort to retire.
If you want high-performance packet I/O for kernel-bypassing applications,
you can use PMDPort (with vhost-user in BESS, and virtio-user in client
ports) as an alternative.","Codecov Report

Merging #809 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #809   +/-   ##
=======================================
  Coverage   55.85%   55.85%           
=======================================
  Files           9        9           
  Lines        1135     1135           
=======================================
  Hits          634      634           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 28831ab...fd17ad2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,809,2018-07-08T23:18:32Z,2018-07-11T17:01:23Z,2018-08-12T07:09:58Z,MERGED,True,0,438,4,https://github.com/sangjinhan,vport_zc: remove ZeroCopyVPort,1,[],https://github.com/NetSys/bess/pull/809,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/809#issuecomment-404241413,"ZeroCopyVPort has been provided but never really well tested,
documented, or maintained. Given the security concern caused by zero
copy, perhaps it is time for ZeroCopyVPort to retire.
If you want high-performance packet I/O for kernel-bypassing applications,
you can use PMDPort (with vhost-user in BESS, and virtio-user in client
ports) as an alternative.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,810,2018-07-10T00:04:42Z,2018-07-11T03:12:45Z,2018-07-11T03:15:31Z,MERGED,True,1,1,1,https://github.com/shinae-woo,Fix broken link,1,[],https://github.com/NetSys/bess/pull/810,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/810,Fixed a broken link in Readme.md,Fixed a broken link in Readme.md,True,{}
NetSys/bess,https://github.com/NetSys/bess,810,2018-07-10T00:04:42Z,2018-07-11T03:12:45Z,2018-07-11T03:15:31Z,MERGED,True,1,1,1,https://github.com/shinae-woo,Fix broken link,1,[],https://github.com/NetSys/bess/pull/810,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/810#issuecomment-404031549,Fixed a broken link in Readme.md,,True,{}
NetSys/bess,https://github.com/NetSys/bess,811,2018-07-13T17:45:43Z,2018-07-14T00:07:35Z,2018-07-14T01:25:14Z,MERGED,True,5,34,3,https://github.com/mukerjee,ansible: fix broken link and missing package,1,[],https://github.com/NetSys/bess/pull/811,https://github.com/mukerjee,1,https://github.com/NetSys/bess/pull/811,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,811,2018-07-13T17:45:43Z,2018-07-14T00:07:35Z,2018-07-14T01:25:14Z,MERGED,True,5,34,3,https://github.com/mukerjee,ansible: fix broken link and missing package,1,[],https://github.com/NetSys/bess/pull/811,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/811#issuecomment-404907393,,"Oh, it's my bad. bess.yml was meant to be removed, but I forgot to do it in my PR. The file should be gone.
The kernel header required to build the vport module (in core/kmod) is now installed by kmod.yml (linux-generic includes linux-headers-generic) build-dep.yml is responsible for building the bess daemon itself, but nothing more.",True,{}
NetSys/bess,https://github.com/NetSys/bess,811,2018-07-13T17:45:43Z,2018-07-14T00:07:35Z,2018-07-14T01:25:14Z,MERGED,True,5,34,3,https://github.com/mukerjee,ansible: fix broken link and missing package,1,[],https://github.com/NetSys/bess/pull/811,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/811#issuecomment-404908089,,"It might be useful to add linux-headers-{{ansible_kernel}} to kmod.yml as you did, in case the running kernel version is different from the installed one (a newer kernel package installed but not rebooted yet).",True,{}
NetSys/bess,https://github.com/NetSys/bess,811,2018-07-13T17:45:43Z,2018-07-14T00:07:35Z,2018-07-14T01:25:14Z,MERGED,True,5,34,3,https://github.com/mukerjee,ansible: fix broken link and missing package,1,[],https://github.com/NetSys/bess/pull/811,https://github.com/mukerjee,4,https://github.com/NetSys/bess/pull/811#issuecomment-404910963,,"Okay-- I can make that fix. If I remove bess.yml, what other ansible playbook should I call to build bess?",True,{}
NetSys/bess,https://github.com/NetSys/bess,811,2018-07-13T17:45:43Z,2018-07-14T00:07:35Z,2018-07-14T01:25:14Z,MERGED,True,5,34,3,https://github.com/mukerjee,ansible: fix broken link and missing package,1,[],https://github.com/NetSys/bess/pull/811,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/811#issuecomment-404911320,,"Codecov Report

Merging #811 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #811   +/-   ##
=======================================
  Coverage   55.85%   55.85%           
=======================================
  Files           9        9           
  Lines        1135     1135           
=======================================
  Hits          634      634           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a92ea20...c24a75d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,811,2018-07-13T17:45:43Z,2018-07-14T00:07:35Z,2018-07-14T01:25:14Z,MERGED,True,5,34,3,https://github.com/mukerjee,ansible: fix broken link and missing package,1,[],https://github.com/NetSys/bess/pull/811,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/811#issuecomment-404922585,,"I deliberately removed the code that clones the repo and runs ./build.py since I felt it somewhat unsolicited/intrusive. Perhaps showing some message like ""now you are ready to build by running build.py script"" at the end of build-dep.yml should be enough...?",True,{}
NetSys/bess,https://github.com/NetSys/bess,811,2018-07-13T17:45:43Z,2018-07-14T00:07:35Z,2018-07-14T01:25:14Z,MERGED,True,5,34,3,https://github.com/mukerjee,ansible: fix broken link and missing package,1,[],https://github.com/NetSys/bess/pull/811,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/811#issuecomment-404983054,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,812,2018-07-13T21:40:04Z,2018-08-23T17:54:50Z,2018-08-23T17:56:52Z,MERGED,True,148,26,2,https://github.com/melvinw,"utils/cuckoo_map: add Emplace, move-based Insert",3,[],https://github.com/NetSys/bess/pull/812,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/812,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,812,2018-07-13T21:40:04Z,2018-08-23T17:54:50Z,2018-08-23T17:56:52Z,MERGED,True,148,26,2,https://github.com/melvinw,"utils/cuckoo_map: add Emplace, move-based Insert",3,[],https://github.com/NetSys/bess/pull/812,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/812#issuecomment-404966730,,"Codecov Report

Merging #812 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #812   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update fc9f723...f9b080c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,812,2018-07-13T21:40:04Z,2018-08-23T17:54:50Z,2018-08-23T17:56:52Z,MERGED,True,148,26,2,https://github.com/melvinw,"utils/cuckoo_map: add Emplace, move-based Insert",3,[],https://github.com/NetSys/bess/pull/812,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/812#issuecomment-407587767,,Added notready label waiting for @melvinw's new copy/move insert & emplace implementation without code redundancy,True,{}
NetSys/bess,https://github.com/NetSys/bess,812,2018-07-13T21:40:04Z,2018-08-23T17:54:50Z,2018-08-23T17:56:52Z,MERGED,True,148,26,2,https://github.com/melvinw,"utils/cuckoo_map: add Emplace, move-based Insert",3,[],https://github.com/NetSys/bess/pull/812,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/812#issuecomment-413360383,,"Ok, finally found some time to polish this up. It now supports copy/move insertion and emplace w/ no code duplication",True,{}
NetSys/bess,https://github.com/NetSys/bess,812,2018-07-13T21:40:04Z,2018-08-23T17:54:50Z,2018-08-23T17:56:52Z,MERGED,True,148,26,2,https://github.com/melvinw,"utils/cuckoo_map: add Emplace, move-based Insert",3,[],https://github.com/NetSys/bess/pull/812,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/812#issuecomment-413745884,,Thanks for the review @chris3torek! Made the adjustments we talked about offline,True,{}
NetSys/bess,https://github.com/NetSys/bess,812,2018-07-13T21:40:04Z,2018-08-23T17:54:50Z,2018-08-23T17:56:52Z,MERGED,True,148,26,2,https://github.com/melvinw,"utils/cuckoo_map: add Emplace, move-based Insert",3,[],https://github.com/NetSys/bess/pull/812,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/812#issuecomment-415423763,,"Thanks for the fixes! If you want to merge this now, go ahead. Otherwise I'd like to fix our dependence on default constructors and add move support for keys, too.",True,{}
NetSys/bess,https://github.com/NetSys/bess,812,2018-07-13T21:40:04Z,2018-08-23T17:54:50Z,2018-08-23T17:56:52Z,MERGED,True,148,26,2,https://github.com/melvinw,"utils/cuckoo_map: add Emplace, move-based Insert",3,[],https://github.com/NetSys/bess/pull/812,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/812#issuecomment-415511543,,"Merged, thanks! And sorry about the default constructor issue; I made a bad choice to use a vector as a backup store in the first place.",True,{}
NetSys/bess,https://github.com/NetSys/bess,813,2018-07-16T03:18:57Z,2018-07-16T20:03:11Z,2018-07-16T23:25:27Z,MERGED,True,1,2,2,https://github.com/sangjinhan,Fix kernel module warnings,2,[],https://github.com/NetSys/bess/pull/813,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/813,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,813,2018-07-16T03:18:57Z,2018-07-16T20:03:11Z,2018-07-16T23:25:27Z,MERGED,True,1,2,2,https://github.com/sangjinhan,Fix kernel module warnings,2,[],https://github.com/NetSys/bess/pull/813,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/813#issuecomment-405143263,,"Codecov Report

Merging #813 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #813   +/-   ##
=======================================
  Coverage   55.85%   55.85%           
=======================================
  Files           9        9           
  Lines        1135     1135           
=======================================
  Hits          634      634           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0d9fbaf...57f5a21. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,813,2018-07-16T03:18:57Z,2018-07-16T20:03:11Z,2018-07-16T23:25:27Z,MERGED,True,1,2,2,https://github.com/sangjinhan,Fix kernel module warnings,2,[],https://github.com/NetSys/bess/pull/813,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/813#issuecomment-405364145,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,814,2018-07-16T03:23:53Z,2018-08-10T21:14:00Z,2018-08-12T07:09:56Z,MERGED,True,2,1,1,https://github.com/sangjinhan,travis: Use prebuilt DPDK when building BESS,1,[],https://github.com/NetSys/bess/pull/814,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/814,"Now DPDK is built with -march=corei7 (Nehalem), not -march=native. Since the minimum CPU requirement for BESS is also Nehalem, we can safely assume that the compiled DPDK can be used on any (including Travis VMs) machines if only they can run BESS.","Now DPDK is built with -march=corei7 (Nehalem), not -march=native. Since the minimum CPU requirement for BESS is also Nehalem, we can safely assume that the compiled DPDK can be used on any (including Travis VMs) machines if only they can run BESS.",True,{}
NetSys/bess,https://github.com/NetSys/bess,814,2018-07-16T03:23:53Z,2018-08-10T21:14:00Z,2018-08-12T07:09:56Z,MERGED,True,2,1,1,https://github.com/sangjinhan,travis: Use prebuilt DPDK when building BESS,1,[],https://github.com/NetSys/bess/pull/814,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/814#issuecomment-412203149,"Now DPDK is built with -march=corei7 (Nehalem), not -march=native. Since the minimum CPU requirement for BESS is also Nehalem, we can safely assume that the compiled DPDK can be used on any (including Travis VMs) machines if only they can run BESS.","Codecov Report

Merging #814 into master will increase coverage by 1.72%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #814      +/-   ##
==========================================
+ Coverage   55.85%   57.58%   +1.72%     
==========================================
  Files           9        9              
  Lines        1135     1273     +138     
==========================================
+ Hits          634      733      +99     
- Misses        501      540      +39



Impacted Files
Coverage Δ





bessctl/test_utils.py
18.71% <0%> (-0.11%)
⬇️


pybess/bess.py
47.24% <0%> (+7.41%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0d9fbaf...9d5a89a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,814,2018-07-16T03:23:53Z,2018-08-10T21:14:00Z,2018-08-12T07:09:56Z,MERGED,True,2,1,1,https://github.com/sangjinhan,travis: Use prebuilt DPDK when building BESS,1,[],https://github.com/NetSys/bess/pull/814,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/814#issuecomment-412207676,"Now DPDK is built with -march=corei7 (Nehalem), not -march=native. Since the minimum CPU requirement for BESS is also Nehalem, we can safely assume that the compiled DPDK can be used on any (including Travis VMs) machines if only they can run BESS.","Removing ""not ready"" label, now DPDK is built for Nehalem indeed (#829).",True,{}
NetSys/bess,https://github.com/NetSys/bess,814,2018-07-16T03:23:53Z,2018-08-10T21:14:00Z,2018-08-12T07:09:56Z,MERGED,True,2,1,1,https://github.com/sangjinhan,travis: Use prebuilt DPDK when building BESS,1,[],https://github.com/NetSys/bess/pull/814,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/814#issuecomment-412208300,"Now DPDK is built with -march=corei7 (Nehalem), not -march=native. Since the minimum CPU requirement for BESS is also Nehalem, we can safely assume that the compiled DPDK can be used on any (including Travis VMs) machines if only they can run BESS.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,815,2018-07-16T18:28:14Z,2018-07-20T00:06:43Z,2018-07-20T01:45:29Z,MERGED,True,40,26,1,https://github.com/shinae-woo,Fix CLI bugs regarding command auto-completion,4,[],https://github.com/NetSys/bess/pull/815,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/815,"flushing fout after matching partial prompted input to possible commands so that bessctl shell is not broken
(somehow, it was fine in Python2, but not anymore in Python3)
Removing command ambiguity when the exact match and partial matches are coexists
In case of following a set of commands

\tcommand
\tcommand_extends

Before,
$ command
--> returns ambiguity

Now,
$ command
--> running the command","flushing fout after matching partial prompted input to possible commands so that bessctl shell is not broken
(somehow, it was fine in Python2, but not anymore in Python3)
Removing command ambiguity when the exact match and partial matches are coexists
In case of following a set of commands

\tcommand
\tcommand_extends

Before,
$ command
--> returns ambiguity

Now,
$ command
--> running the command",True,{}
NetSys/bess,https://github.com/NetSys/bess,815,2018-07-16T18:28:14Z,2018-07-20T00:06:43Z,2018-07-20T01:45:29Z,MERGED,True,40,26,1,https://github.com/shinae-woo,Fix CLI bugs regarding command auto-completion,4,[],https://github.com/NetSys/bess/pull/815,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/815#issuecomment-405344631,"flushing fout after matching partial prompted input to possible commands so that bessctl shell is not broken
(somehow, it was fine in Python2, but not anymore in Python3)
Removing command ambiguity when the exact match and partial matches are coexists
In case of following a set of commands

\tcommand
\tcommand_extends

Before,
$ command
--> returns ambiguity

Now,
$ command
--> running the command","Codecov Report

Merging #815 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #815   +/-   ##
=======================================
  Coverage   55.85%   55.85%           
=======================================
  Files           9        9           
  Lines        1135     1135           
=======================================
  Hits          634      634           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 00daad1...edeebfe. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,815,2018-07-16T18:28:14Z,2018-07-20T00:06:43Z,2018-07-20T01:45:29Z,MERGED,True,40,26,1,https://github.com/shinae-woo,Fix CLI bugs regarding command auto-completion,4,[],https://github.com/NetSys/bess/pull/815,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/815#issuecomment-406069405,"flushing fout after matching partial prompted input to possible commands so that bessctl shell is not broken
(somehow, it was fine in Python2, but not anymore in Python3)
Removing command ambiguity when the exact match and partial matches are coexists
In case of following a set of commands

\tcommand
\tcommand_extends

Before,
$ command
--> returns ambiguity

Now,
$ command
--> running the command","I need additional review, for my last commit, please.
It's for sh gatehook makes running without ambiguity.",True,{}
NetSys/bess,https://github.com/NetSys/bess,815,2018-07-16T18:28:14Z,2018-07-20T00:06:43Z,2018-07-20T01:45:29Z,MERGED,True,40,26,1,https://github.com/shinae-woo,Fix CLI bugs regarding command auto-completion,4,[],https://github.com/NetSys/bess/pull/815,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/815#issuecomment-406361450,"flushing fout after matching partial prompted input to possible commands so that bessctl shell is not broken
(somehow, it was fine in Python2, but not anymore in Python3)
Removing command ambiguity when the exact match and partial matches are coexists
In case of following a set of commands

\tcommand
\tcommand_extends

Before,
$ command
--> returns ambiguity

Now,
$ command
--> running the command",@chris3torek @sangjinhan Fixed! What I am confused a bit is that is bessctl is expected to support both python2/phthon3? Or on the way of moving somewhere?,True,{}
NetSys/bess,https://github.com/NetSys/bess,815,2018-07-16T18:28:14Z,2018-07-20T00:06:43Z,2018-07-20T01:45:29Z,MERGED,True,40,26,1,https://github.com/shinae-woo,Fix CLI bugs regarding command auto-completion,4,[],https://github.com/NetSys/bess/pull/815,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/815#issuecomment-406363222,"flushing fout after matching partial prompted input to possible commands so that bessctl shell is not broken
(somehow, it was fine in Python2, but not anymore in Python3)
Removing command ambiguity when the exact match and partial matches are coexists
In case of following a set of commands

\tcommand
\tcommand_extends

Before,
$ command
--> returns ambiguity

Now,
$ command
--> running the command",It's supposed to support the both versions (not that we are doing it very well at the moment). Travis runs both Python2 and 3 for the same scripts.,True,{}
NetSys/bess,https://github.com/NetSys/bess,815,2018-07-16T18:28:14Z,2018-07-20T00:06:43Z,2018-07-20T01:45:29Z,MERGED,True,40,26,1,https://github.com/shinae-woo,Fix CLI bugs regarding command auto-completion,4,[],https://github.com/NetSys/bess/pull/815,https://github.com/chris3torek,6,https://github.com/NetSys/bess/pull/815#issuecomment-406380551,"flushing fout after matching partial prompted input to possible commands so that bessctl shell is not broken
(somehow, it was fine in Python2, but not anymore in Python3)
Removing command ambiguity when the exact match and partial matches are coexists
In case of following a set of commands

\tcommand
\tcommand_extends

Before,
$ command
--> returns ambiguity

Now,
$ command
--> running the command","Ah, I wasn't sure about py2k vs py3k at this point—I defer to @sangjinhan here...",True,{}
NetSys/bess,https://github.com/NetSys/bess,815,2018-07-16T18:28:14Z,2018-07-20T00:06:43Z,2018-07-20T01:45:29Z,MERGED,True,40,26,1,https://github.com/shinae-woo,Fix CLI bugs regarding command auto-completion,4,[],https://github.com/NetSys/bess/pull/815,https://github.com/chris3torek,7,https://github.com/NetSys/bess/pull/815#issuecomment-406450273,"flushing fout after matching partial prompted input to possible commands so that bessctl shell is not broken
(somehow, it was fine in Python2, but not anymore in Python3)
Removing command ambiguity when the exact match and partial matches are coexists
In case of following a set of commands

\tcommand
\tcommand_extends

Before,
$ command
--> returns ambiguity

Now,
$ command
--> running the command",,True,{}
NetSys/bess,https://github.com/NetSys/bess,816,2018-07-16T19:36:49Z,2018-07-20T00:02:10Z,2018-07-20T01:45:33Z,MERGED,True,192,27,11,https://github.com/shinae-woo,Add/update CLI commands for gatehook,3,[],https://github.com/NetSys/bess/pull/816,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/816,"add command show gatehook
add command show gatehookclass
add per-gate gatehook info with show module
add help message when gatehookclass register
class type shall be in CamelCase","add command show gatehook
add command show gatehookclass
add per-gate gatehook info with show module
add help message when gatehookclass register
class type shall be in CamelCase",True,{}
NetSys/bess,https://github.com/NetSys/bess,816,2018-07-16T19:36:49Z,2018-07-20T00:02:10Z,2018-07-20T01:45:33Z,MERGED,True,192,27,11,https://github.com/shinae-woo,Add/update CLI commands for gatehook,3,[],https://github.com/NetSys/bess/pull/816,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/816#issuecomment-405363966,"add command show gatehook
add command show gatehookclass
add per-gate gatehook info with show module
add help message when gatehookclass register
class type shall be in CamelCase","Codecov Report

Merging #816 into master will decrease coverage by 0.12%.
The diff coverage is 27.27%.


@@            Coverage Diff             @@
##           master     #816      +/-   ##
==========================================
- Coverage   55.85%   55.73%   -0.13%     
==========================================
  Files           9        9              
  Lines        1135     1143       +8     
==========================================
+ Hits          634      637       +3     
- Misses        501      506       +5



Impacted Files
Coverage Δ





pybess/bess.py
39.78% <27.27%> (-0.04%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 00daad1...2160ed3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,816,2018-07-16T19:36:49Z,2018-07-20T00:02:10Z,2018-07-20T01:45:33Z,MERGED,True,192,27,11,https://github.com/shinae-woo,Add/update CLI commands for gatehook,3,[],https://github.com/NetSys/bess/pull/816,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/816#issuecomment-406449689,"add command show gatehook
add command show gatehookclass
add per-gate gatehook info with show module
add help message when gatehookclass register
class type shall be in CamelCase","I might have used this one before, but it's so cute..",True,{}
NetSys/bess,https://github.com/NetSys/bess,817,2018-07-16T21:06:09Z,2018-07-16T23:24:45Z,2018-07-16T23:25:07Z,MERGED,True,2,0,1,https://github.com/shinae-woo,Add cstdlib to correctly locate std::aligned_alloc,1,[],https://github.com/NetSys/bess/pull/817,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/817,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,817,2018-07-16T21:06:09Z,2018-07-16T23:24:45Z,2018-07-16T23:25:07Z,MERGED,True,2,0,1,https://github.com/shinae-woo,Add cstdlib to correctly locate std::aligned_alloc,1,[],https://github.com/NetSys/bess/pull/817,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/817#issuecomment-405388863,,"Codecov Report

Merging #817 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #817   +/-   ##
=======================================
  Coverage   55.85%   55.85%           
=======================================
  Files           9        9           
  Lines        1135     1135           
=======================================
  Hits          634      634           
  Misses        501      501

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7b727f2...c21a795. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,817,2018-07-16T21:06:09Z,2018-07-16T23:24:45Z,2018-07-16T23:25:07Z,MERGED,True,2,0,1,https://github.com/shinae-woo,Add cstdlib to correctly locate std::aligned_alloc,1,[],https://github.com/NetSys/bess/pull/817,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/817#issuecomment-405411188,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,818,2018-07-21T03:38:04Z,2018-07-25T22:48:31Z,2018-08-12T07:09:54Z,MERGED,True,20,9,1,https://github.com/sangjinhan,pybess: handle temporary HTTP2 disconnection,1,[],https://github.com/NetSys/bess/pull/818,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/818,"... during gRPC server launch. This race often happen daemon start; when bessd starts, if gRPC client connection is made prematurely, it is disconnected causing client to block forever.","... during gRPC server launch. This race often happen daemon start; when bessd starts, if gRPC client connection is made prematurely, it is disconnected causing client to block forever.",True,{}
NetSys/bess,https://github.com/NetSys/bess,818,2018-07-21T03:38:04Z,2018-07-25T22:48:31Z,2018-08-12T07:09:54Z,MERGED,True,20,9,1,https://github.com/sangjinhan,pybess: handle temporary HTTP2 disconnection,1,[],https://github.com/NetSys/bess/pull/818,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/818#issuecomment-406768768,"... during gRPC server launch. This race often happen daemon start; when bessd starts, if gRPC client connection is made prematurely, it is disconnected causing client to block forever.","Codecov Report

Merging #818 into master will increase coverage by 0.14%.
The diff coverage is 91.66%.


@@            Coverage Diff             @@
##           master     #818      +/-   ##
==========================================
+ Coverage   55.73%   55.87%   +0.14%     
==========================================
  Files           9        9              
  Lines        1143     1149       +6     
==========================================
+ Hits          637      642       +5     
- Misses        506      507       +1



Impacted Files
Coverage Δ





pybess/bess.py
40.33% <91.66%> (+0.54%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5d9f212...65ef767. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,818,2018-07-21T03:38:04Z,2018-07-25T22:48:31Z,2018-08-12T07:09:54Z,MERGED,True,20,9,1,https://github.com/sangjinhan,pybess: handle temporary HTTP2 disconnection,1,[],https://github.com/NetSys/bess/pull/818,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/818#issuecomment-407884773,"... during gRPC server launch. This race often happen daemon start; when bessd starts, if gRPC client connection is made prematurely, it is disconnected causing client to block forever.",LGTM,True,{}
NetSys/bess,https://github.com/NetSys/bess,818,2018-07-21T03:38:04Z,2018-07-25T22:48:31Z,2018-08-12T07:09:54Z,MERGED,True,20,9,1,https://github.com/sangjinhan,pybess: handle temporary HTTP2 disconnection,1,[],https://github.com/NetSys/bess/pull/818,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/818#issuecomment-407920763,"... during gRPC server launch. This race often happen daemon start; when bessd starts, if gRPC client connection is made prematurely, it is disconnected causing client to block forever.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,819,2018-07-24T17:50:38Z,2018-07-24T18:18:04Z,2018-07-24T18:20:01Z,MERGED,True,30,29,1,https://github.com/mukerjee,documentation: pass through for typos in built-in module documentation,1,[],https://github.com/NetSys/bess/pull/819,https://github.com/mukerjee,1,https://github.com/NetSys/bess/pull/819,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,819,2018-07-24T17:50:38Z,2018-07-24T18:18:04Z,2018-07-24T18:20:01Z,MERGED,True,30,29,1,https://github.com/mukerjee,documentation: pass through for typos in built-in module documentation,1,[],https://github.com/NetSys/bess/pull/819,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/819#issuecomment-407502697,,"Codecov Report

Merging #819 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #819   +/-   ##
=======================================
  Coverage   55.73%   55.73%           
=======================================
  Files           9        9           
  Lines        1143     1143           
=======================================
  Hits          637      637           
  Misses        506      506

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5bcf118...71b03ae. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,819,2018-07-24T17:50:38Z,2018-07-24T18:18:04Z,2018-07-24T18:20:01Z,MERGED,True,30,29,1,https://github.com/mukerjee,documentation: pass through for typos in built-in module documentation,1,[],https://github.com/NetSys/bess/pull/819,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/819#issuecomment-407503829,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,820,2018-07-24T18:12:07Z,2018-08-10T18:17:43Z,2018-08-12T07:09:09Z,MERGED,True,1396,503,28,https://github.com/sangjinhan,Introduce PacketPool & BESS-managed hugepages,17,[],https://github.com/NetSys/bess/pull/820,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/820,"PacketPool is a C++ class that abstracts rte_mempool. It supports 3 different memory backends:


normal memory (4kB pages): useful when no hugepage is readily available or strictly necessary, e.g., unit test or microbenchmark. Packet is no longer needed to be manually crafted even when DPDK is not being used. Since this memory is not DMA-able, PMD drivers cannot be used.


BESS hugepages (2MB/1GB pages): implemented on top of System V shared memory, which does not require a hugetlbfs mounted directory. Also, if hugepages are not reserved, it will automatically try to reserve some. DPDK is initialized with --no-huge option and BESS directly allocates hugepages.


DPDK hugepages (2MB/1GB pages): hugepages are allocated and managed by DPDK. Thus the same configuration (nr_hugepages and hugetlbfs) as other DPDK applications is required.



Note: some PMD drivers (and depending on VFIO environments) do not correctly support non-DPDK hugepages in DPDK 17.11 version. Until we upgrade to a latest version (18.05 or 18.08), DPDK-based hugepages are used by default. BESS-based hugepages can be enabled with -nodpdk option.","PacketPool is a C++ class that abstracts rte_mempool. It supports 3 different memory backends:


normal memory (4kB pages): useful when no hugepage is readily available or strictly necessary, e.g., unit test or microbenchmark. Packet is no longer needed to be manually crafted even when DPDK is not being used. Since this memory is not DMA-able, PMD drivers cannot be used.


BESS hugepages (2MB/1GB pages): implemented on top of System V shared memory, which does not require a hugetlbfs mounted directory. Also, if hugepages are not reserved, it will automatically try to reserve some. DPDK is initialized with --no-huge option and BESS directly allocates hugepages.


DPDK hugepages (2MB/1GB pages): hugepages are allocated and managed by DPDK. Thus the same configuration (nr_hugepages and hugetlbfs) as other DPDK applications is required.



Note: some PMD drivers (and depending on VFIO environments) do not correctly support non-DPDK hugepages in DPDK 17.11 version. Until we upgrade to a latest version (18.05 or 18.08), DPDK-based hugepages are used by default. BESS-based hugepages can be enabled with -nodpdk option.",True,{}
NetSys/bess,https://github.com/NetSys/bess,820,2018-07-24T18:12:07Z,2018-08-10T18:17:43Z,2018-08-12T07:09:09Z,MERGED,True,1396,503,28,https://github.com/sangjinhan,Introduce PacketPool & BESS-managed hugepages,17,[],https://github.com/NetSys/bess/pull/820,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/820#issuecomment-407510223,"PacketPool is a C++ class that abstracts rte_mempool. It supports 3 different memory backends:


normal memory (4kB pages): useful when no hugepage is readily available or strictly necessary, e.g., unit test or microbenchmark. Packet is no longer needed to be manually crafted even when DPDK is not being used. Since this memory is not DMA-able, PMD drivers cannot be used.


BESS hugepages (2MB/1GB pages): implemented on top of System V shared memory, which does not require a hugetlbfs mounted directory. Also, if hugepages are not reserved, it will automatically try to reserve some. DPDK is initialized with --no-huge option and BESS directly allocates hugepages.


DPDK hugepages (2MB/1GB pages): hugepages are allocated and managed by DPDK. Thus the same configuration (nr_hugepages and hugetlbfs) as other DPDK applications is required.



Note: some PMD drivers (and depending on VFIO environments) do not correctly support non-DPDK hugepages in DPDK 17.11 version. Until we upgrade to a latest version (18.05 or 18.08), DPDK-based hugepages are used by default. BESS-based hugepages can be enabled with -nodpdk option.","Codecov Report

Merging #820 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #820   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 60b7eb4...dafb81b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,820,2018-07-24T18:12:07Z,2018-08-10T18:17:43Z,2018-08-12T07:09:09Z,MERGED,True,1396,503,28,https://github.com/sangjinhan,Introduce PacketPool & BESS-managed hugepages,17,[],https://github.com/NetSys/bess/pull/820,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/820#issuecomment-412152059,"PacketPool is a C++ class that abstracts rte_mempool. It supports 3 different memory backends:


normal memory (4kB pages): useful when no hugepage is readily available or strictly necessary, e.g., unit test or microbenchmark. Packet is no longer needed to be manually crafted even when DPDK is not being used. Since this memory is not DMA-able, PMD drivers cannot be used.


BESS hugepages (2MB/1GB pages): implemented on top of System V shared memory, which does not require a hugetlbfs mounted directory. Also, if hugepages are not reserved, it will automatically try to reserve some. DPDK is initialized with --no-huge option and BESS directly allocates hugepages.


DPDK hugepages (2MB/1GB pages): hugepages are allocated and managed by DPDK. Thus the same configuration (nr_hugepages and hugetlbfs) as other DPDK applications is required.



Note: some PMD drivers (and depending on VFIO environments) do not correctly support non-DPDK hugepages in DPDK 17.11 version. Until we upgrade to a latest version (18.05 or 18.08), DPDK-based hugepages are used by default. BESS-based hugepages can be enabled with -nodpdk option.",The travis failure (caused by an unrelated issue) was addressed with dafb81b. Can someone hit the merge button? 🐈,True,{}
NetSys/bess,https://github.com/NetSys/bess,820,2018-07-24T18:12:07Z,2018-08-10T18:17:43Z,2018-08-12T07:09:09Z,MERGED,True,1396,503,28,https://github.com/sangjinhan,Introduce PacketPool & BESS-managed hugepages,17,[],https://github.com/NetSys/bess/pull/820,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/820#issuecomment-412164926,"PacketPool is a C++ class that abstracts rte_mempool. It supports 3 different memory backends:


normal memory (4kB pages): useful when no hugepage is readily available or strictly necessary, e.g., unit test or microbenchmark. Packet is no longer needed to be manually crafted even when DPDK is not being used. Since this memory is not DMA-able, PMD drivers cannot be used.


BESS hugepages (2MB/1GB pages): implemented on top of System V shared memory, which does not require a hugetlbfs mounted directory. Also, if hugepages are not reserved, it will automatically try to reserve some. DPDK is initialized with --no-huge option and BESS directly allocates hugepages.


DPDK hugepages (2MB/1GB pages): hugepages are allocated and managed by DPDK. Thus the same configuration (nr_hugepages and hugetlbfs) as other DPDK applications is required.



Note: some PMD drivers (and depending on VFIO environments) do not correctly support non-DPDK hugepages in DPDK 17.11 version. Until we upgrade to a latest version (18.05 or 18.08), DPDK-based hugepages are used by default. BESS-based hugepages can be enabled with -nodpdk option.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,821,2018-07-25T17:14:50Z,2018-08-01T04:41:10Z,2018-08-01T04:46:52Z,MERGED,True,388,237,15,https://github.com/shinae-woo,Support multiple gatehooks of the same type installed per gate,9,[],https://github.com/NetSys/bess/pull/821,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/821,"This PR is for support of installing multiple gatehooks of the same class type for a single gate.

Now gatehooks also have it's own name with class name
If gatehook name is not given with creation request, the default name using name template is assigned
Multiple gatehooks for the same class type can be installed now
Necessary changes for gatehook request/response are made accordingly","This PR is for support of installing multiple gatehooks of the same class type for a single gate.

Now gatehooks also have it's own name with class name
If gatehook name is not given with creation request, the default name using name template is assigned
Multiple gatehooks for the same class type can be installed now
Necessary changes for gatehook request/response are made accordingly",True,{}
NetSys/bess,https://github.com/NetSys/bess,821,2018-07-25T17:14:50Z,2018-08-01T04:41:10Z,2018-08-01T04:46:52Z,MERGED,True,388,237,15,https://github.com/shinae-woo,Support multiple gatehooks of the same type installed per gate,9,[],https://github.com/NetSys/bess/pull/821,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/821#issuecomment-407934728,"This PR is for support of installing multiple gatehooks of the same class type for a single gate.

Now gatehooks also have it's own name with class name
If gatehook name is not given with creation request, the default name using name template is assigned
Multiple gatehooks for the same class type can be installed now
Necessary changes for gatehook request/response are made accordingly","Codecov Report

Merging #821 into master will decrease coverage by 0.04%.
The diff coverage is 42.85%.


@@            Coverage Diff             @@
##           master     #821      +/-   ##
==========================================
- Coverage   55.87%   55.82%   -0.05%     
==========================================
  Files           9        9              
  Lines        1149     1150       +1     
==========================================
  Hits          642      642              
- Misses        507      508       +1



Impacted Files
Coverage Δ





pybess/bess.py
40.25% <42.85%> (-0.09%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9da090f...7945b52. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,821,2018-07-25T17:14:50Z,2018-08-01T04:41:10Z,2018-08-01T04:46:52Z,MERGED,True,388,237,15,https://github.com/shinae-woo,Support multiple gatehooks of the same type installed per gate,9,[],https://github.com/NetSys/bess/pull/821,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/821#issuecomment-409447352,"This PR is for support of installing multiple gatehooks of the same class type for a single gate.

Now gatehooks also have it's own name with class name
If gatehook name is not given with creation request, the default name using name template is assigned
Multiple gatehooks for the same class type can be installed now
Necessary changes for gatehook request/response are made accordingly","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,822,2018-07-25T22:27:44Z,2018-07-26T19:58:43Z,2018-07-26T20:06:49Z,MERGED,True,38,15,2,https://github.com/shinae-woo,Thread-safe track gatehook having per-worker statistics,2,[],https://github.com/NetSys/bess/pull/822,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/822,"Track data-path can be accessed from multiple threads. With this PR, track has a per-thread storage to update and aggregate them when requesting the actual number.","Track data-path can be accessed from multiple threads. With this PR, track has a per-thread storage to update and aggregate them when requesting the actual number.",True,{}
NetSys/bess,https://github.com/NetSys/bess,822,2018-07-25T22:27:44Z,2018-07-26T19:58:43Z,2018-07-26T20:06:49Z,MERGED,True,38,15,2,https://github.com/shinae-woo,Thread-safe track gatehook having per-worker statistics,2,[],https://github.com/NetSys/bess/pull/822,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/822#issuecomment-407921508,"Track data-path can be accessed from multiple threads. With this PR, track has a per-thread storage to update and aggregate them when requesting the actual number.","Codecov Report

Merging #822 into master will increase coverage by 0.14%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #822      +/-   ##
==========================================
+ Coverage   55.73%   55.87%   +0.14%     
==========================================
  Files           9        9              
  Lines        1143     1149       +6     
==========================================
+ Hits          637      642       +5     
- Misses        506      507       +1



Impacted Files
Coverage Δ





pybess/bess.py
40.33% <0%> (+0.54%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5d9f212...b456ca5. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,822,2018-07-25T22:27:44Z,2018-07-26T19:58:43Z,2018-07-26T20:06:49Z,MERGED,True,38,15,2,https://github.com/shinae-woo,Thread-safe track gatehook having per-worker statistics,2,[],https://github.com/NetSys/bess/pull/822,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/822#issuecomment-408217994,"Track data-path can be accessed from multiple threads. With this PR, track has a per-thread storage to update and aggregate them when requesting the actual number.",@chris3torek 🐱  May I get a picture of your cat? 🐈,True,{}
NetSys/bess,https://github.com/NetSys/bess,822,2018-07-25T22:27:44Z,2018-07-26T19:58:43Z,2018-07-26T20:06:49Z,MERGED,True,38,15,2,https://github.com/shinae-woo,Thread-safe track gatehook having per-worker statistics,2,[],https://github.com/NetSys/bess/pull/822,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/822#issuecomment-408218195,"Track data-path can be accessed from multiple threads. With this PR, track has a per-thread storage to update and aggregate them when requesting the actual number.","64 worker kittens (well, I didn't count - also, not my kittens...)",True,{}
NetSys/bess,https://github.com/NetSys/bess,824,2018-07-29T19:15:01Z,2018-07-30T22:53:41Z,2018-08-12T07:09:52Z,MERGED,True,2,0,1,https://github.com/sangjinhan,utils: add IP protocol numbers for IPsec,1,[],https://github.com/NetSys/bess/pull/824,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/824,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,824,2018-07-29T19:15:01Z,2018-07-30T22:53:41Z,2018-08-12T07:09:52Z,MERGED,True,2,0,1,https://github.com/sangjinhan,utils: add IP protocol numbers for IPsec,1,[],https://github.com/NetSys/bess/pull/824,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/824#issuecomment-408700717,,"Codecov Report

Merging #824 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #824   +/-   ##
=======================================
  Coverage   55.87%   55.87%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          642      642           
  Misses        507      507

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9da090f...ce8e759. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,824,2018-07-29T19:15:01Z,2018-07-30T22:53:41Z,2018-08-12T07:09:52Z,MERGED,True,2,0,1,https://github.com/sangjinhan,utils: add IP protocol numbers for IPsec,1,[],https://github.com/NetSys/bess/pull/824,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/824#issuecomment-409038181,,"Quimera, a chimera cat (not sure which side of the kitty is the secure one)",True,{}
NetSys/bess,https://github.com/NetSys/bess,826,2018-08-03T03:06:52Z,2018-08-06T17:37:35Z,2018-08-12T07:10:13Z,MERGED,True,22,7,1,https://github.com/shinae-woo,Fix bugs for removing gatehook by classname,1,[],https://github.com/NetSys/bess/pull/826,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/826,This PR allows removing gate hook by class name. Reported by @levaitamas #825,This PR allows removing gate hook by class name. Reported by @levaitamas #825,True,{}
NetSys/bess,https://github.com/NetSys/bess,826,2018-08-03T03:06:52Z,2018-08-06T17:37:35Z,2018-08-12T07:10:13Z,MERGED,True,22,7,1,https://github.com/shinae-woo,Fix bugs for removing gatehook by classname,1,[],https://github.com/NetSys/bess/pull/826,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/826#issuecomment-410134402,This PR allows removing gate hook by class name. Reported by @levaitamas #825,"Codecov Report

Merging #826 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #826   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update bc55bb3...794c05d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,826,2018-08-03T03:06:52Z,2018-08-06T17:37:35Z,2018-08-12T07:10:13Z,MERGED,True,22,7,1,https://github.com/shinae-woo,Fix bugs for removing gatehook by classname,1,[],https://github.com/NetSys/bess/pull/826,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/826#issuecomment-410792567,This PR allows removing gate hook by class name. Reported by @levaitamas #825,,True,{}
NetSys/bess,https://github.com/NetSys/bess,827,2018-08-06T17:34:17Z,2018-08-06T20:43:21Z,2018-08-12T07:09:11Z,MERGED,True,8,6,1,https://github.com/sangjinhan,module_test: support non-Ethernet packet capture,1,[],https://github.com/NetSys/bess/pull/827,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/827,"In the module_test framework, run_module and run_pipeline implicitly assumes the output packets are always Ethernet frames. This doesn't always hold since some modules may produce IP datagrams (or any other L3/L4 protocols), not L2 Ethernet frame. This patch is to accommodate such modules.","In the module_test framework, run_module and run_pipeline implicitly assumes the output packets are always Ethernet frames. This doesn't always hold since some modules may produce IP datagrams (or any other L3/L4 protocols), not L2 Ethernet frame. This patch is to accommodate such modules.",True,{}
NetSys/bess,https://github.com/NetSys/bess,827,2018-08-06T17:34:17Z,2018-08-06T20:43:21Z,2018-08-12T07:09:11Z,MERGED,True,8,6,1,https://github.com/sangjinhan,module_test: support non-Ethernet packet capture,1,[],https://github.com/NetSys/bess/pull/827,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/827#issuecomment-410797257,"In the module_test framework, run_module and run_pipeline implicitly assumes the output packets are always Ethernet frames. This doesn't always hold since some modules may produce IP datagrams (or any other L3/L4 protocols), not L2 Ethernet frame. This patch is to accommodate such modules.","Codecov Report

Merging #827 into master will not change coverage.
The diff coverage is 40%.


@@           Coverage Diff           @@
##           master     #827   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508



Impacted Files
Coverage Δ





bessctl/test_utils.py
18.81% <40%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update bc55bb3...91796ca. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,827,2018-08-06T17:34:17Z,2018-08-06T20:43:21Z,2018-08-12T07:09:11Z,MERGED,True,8,6,1,https://github.com/sangjinhan,module_test: support non-Ethernet packet capture,1,[],https://github.com/NetSys/bess/pull/827,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/827#issuecomment-410846823,"In the module_test framework, run_module and run_pipeline implicitly assumes the output packets are always Ethernet frames. This doesn't always hold since some modules may produce IP datagrams (or any other L3/L4 protocols), not L2 Ethernet frame. This patch is to accommodate such modules.","Merged, Thanks!
(p.s. We keep losing coverage... TT)",True,{}
NetSys/bess,https://github.com/NetSys/bess,827,2018-08-06T17:34:17Z,2018-08-06T20:43:21Z,2018-08-12T07:09:11Z,MERGED,True,8,6,1,https://github.com/sangjinhan,module_test: support non-Ethernet packet capture,1,[],https://github.com/NetSys/bess/pull/827,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/827#issuecomment-410865200,"In the module_test framework, run_module and run_pipeline implicitly assumes the output packets are always Ethernet frames. This doesn't always hold since some modules may produce IP datagrams (or any other L3/L4 protocols), not L2 Ethernet frame. This patch is to accommodate such modules.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,827,2018-08-06T17:34:17Z,2018-08-06T20:43:21Z,2018-08-12T07:09:11Z,MERGED,True,8,6,1,https://github.com/sangjinhan,module_test: support non-Ethernet packet capture,1,[],https://github.com/NetSys/bess/pull/827,https://github.com/chris3torek,5,https://github.com/NetSys/bess/pull/827#issuecomment-410865400,"In the module_test framework, run_module and run_pipeline implicitly assumes the output packets are always Ethernet frames. This doesn't always hold since some modules may produce IP datagrams (or any other L3/L4 protocols), not L2 Ethernet frame. This patch is to accommodate such modules.","Oops, didn't see that @shinae-woo had already merged it. I guess you get TWO kitties!",True,{}
NetSys/bess,https://github.com/NetSys/bess,829,2018-08-09T17:28:54Z,2018-08-09T18:32:31Z,2018-08-09T22:08:58Z,MERGED,True,2,0,1,https://github.com/mukerjee,make: correctly compile dpdk for nehalem,1,[],https://github.com/NetSys/bess/pull/829,https://github.com/mukerjee,1,https://github.com/NetSys/bess/pull/829,"While RTE_MACHINE is set to ""nhm"" (nehalem) in deps/dpdk-17.11_common_linuxapp,
it is overridden by deps/dpdk-17.11/config/defconfig_x86_64-native-linuxapp-gcc
(as RTE_MACHINE=native). This causes issues if you compile BESS on a machine
with a newer microarchitecture than the machine that will run it (e.g.,
compiling on newer skylake-based machines for a haswell-based machine). This
changes comments out RTE_MACHINE=native before configuring DPDK. DPDK is now
forced to compile for nehalem.","While RTE_MACHINE is set to ""nhm"" (nehalem) in deps/dpdk-17.11_common_linuxapp,
it is overridden by deps/dpdk-17.11/config/defconfig_x86_64-native-linuxapp-gcc
(as RTE_MACHINE=native). This causes issues if you compile BESS on a machine
with a newer microarchitecture than the machine that will run it (e.g.,
compiling on newer skylake-based machines for a haswell-based machine). This
changes comments out RTE_MACHINE=native before configuring DPDK. DPDK is now
forced to compile for nehalem.",True,{}
NetSys/bess,https://github.com/NetSys/bess,829,2018-08-09T17:28:54Z,2018-08-09T18:32:31Z,2018-08-09T22:08:58Z,MERGED,True,2,0,1,https://github.com/mukerjee,make: correctly compile dpdk for nehalem,1,[],https://github.com/NetSys/bess/pull/829,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/829#issuecomment-411843438,"While RTE_MACHINE is set to ""nhm"" (nehalem) in deps/dpdk-17.11_common_linuxapp,
it is overridden by deps/dpdk-17.11/config/defconfig_x86_64-native-linuxapp-gcc
(as RTE_MACHINE=native). This causes issues if you compile BESS on a machine
with a newer microarchitecture than the machine that will run it (e.g.,
compiling on newer skylake-based machines for a haswell-based machine). This
changes comments out RTE_MACHINE=native before configuring DPDK. DPDK is now
forced to compile for nehalem.","Codecov Report

Merging #829 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #829   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 60b7eb4...6fa1e87. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,829,2018-08-09T17:28:54Z,2018-08-09T18:32:31Z,2018-08-09T22:08:58Z,MERGED,True,2,0,1,https://github.com/mukerjee,make: correctly compile dpdk for nehalem,1,[],https://github.com/NetSys/bess/pull/829,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/829#issuecomment-411854243,"While RTE_MACHINE is set to ""nhm"" (nehalem) in deps/dpdk-17.11_common_linuxapp,
it is overridden by deps/dpdk-17.11/config/defconfig_x86_64-native-linuxapp-gcc
(as RTE_MACHINE=native). This causes issues if you compile BESS on a machine
with a newer microarchitecture than the machine that will run it (e.g.,
compiling on newer skylake-based machines for a haswell-based machine). This
changes comments out RTE_MACHINE=native before configuring DPDK. DPDK is now
forced to compile for nehalem.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,829,2018-08-09T17:28:54Z,2018-08-09T18:32:31Z,2018-08-09T22:08:58Z,MERGED,True,2,0,1,https://github.com/mukerjee,make: correctly compile dpdk for nehalem,1,[],https://github.com/NetSys/bess/pull/829,https://github.com/mukerjee,4,https://github.com/NetSys/bess/pull/829#issuecomment-411854879,"While RTE_MACHINE is set to ""nhm"" (nehalem) in deps/dpdk-17.11_common_linuxapp,
it is overridden by deps/dpdk-17.11/config/defconfig_x86_64-native-linuxapp-gcc
(as RTE_MACHINE=native). This causes issues if you compile BESS on a machine
with a newer microarchitecture than the machine that will run it (e.g.,
compiling on newer skylake-based machines for a haswell-based machine). This
changes comments out RTE_MACHINE=native before configuring DPDK. DPDK is now
forced to compile for nehalem.","Yes. I agree that this is pretty hacky. TBH it's very strange to me that DPDK doesn't allow you to set a target of x86_64-nhm-linuxapp-gcc... only ""native, power8, armv8a"" can be used there, it seems (https://doc.dpdk.org/guides/linux_gsg/build_dpdk.html).",True,{}
NetSys/bess,https://github.com/NetSys/bess,829,2018-08-09T17:28:54Z,2018-08-09T18:32:31Z,2018-08-09T22:08:58Z,MERGED,True,2,0,1,https://github.com/mukerjee,make: correctly compile dpdk for nehalem,1,[],https://github.com/NetSys/bess/pull/829,https://github.com/krsna1729,5,https://github.com/NetSys/bess/pull/829#issuecomment-411871775,"While RTE_MACHINE is set to ""nhm"" (nehalem) in deps/dpdk-17.11_common_linuxapp,
it is overridden by deps/dpdk-17.11/config/defconfig_x86_64-native-linuxapp-gcc
(as RTE_MACHINE=native). This causes issues if you compile BESS on a machine
with a newer microarchitecture than the machine that will run it (e.g.,
compiling on newer skylake-based machines for a haswell-based machine). This
changes comments out RTE_MACHINE=native before configuring DPDK. DPDK is now
forced to compile for nehalem.","Don't know if I should be commenting on close PR, but the way I built for different models was
git clone http://dpdk.org/git/dpdk -b v17.11 && cd dpdk
make config T=x86_64-native-linuxapp-gcc

make -j
#  native BDW
# -march=native -DRTE_MACHINE_CPUFLAG_SSE -DRTE_MACHINE_CPUFLAG_SSE2 \
# -DRTE_MACHINE_CPUFLAG_SSE3 -DRTE_MACHINE_CPUFLAG_SSSE3 -DRTE_MACHINE_CPUFLAG_SSE4_1 \
# -DRTE_MACHINE_CPUFLAG_SSE4_2 -DRTE_MACHINE_CPUFLAG_AES -DRTE_MACHINE_CPUFLAG_PCLMULQDQ \
# -DRTE_MACHINE_CPUFLAG_AVX -DRTE_MACHINE_CPUFLAG_RDRAND -DRTE_MACHINE_CPUFLAG_FSGSBASE \
# -DRTE_MACHINE_CPUFLAG_F16C -DRTE_MACHINE_CPUFLAG_AVX2

make -j RTE_MACHINE=nhm
# -march=corei7 -DRTE_MACHINE_CPUFLAG_SSE -DRTE_MACHINE_CPUFLAG_SSE2 -DRTE_MACHINE_CPUFLAG_SSE3 \
# -DRTE_MACHINE_CPUFLAG_SSSE3 -DRTE_MACHINE_CPUFLAG_SSE4_1 -DRTE_MACHINE_CPUFLAG_SSE4_2

Is this what you were looking for?",True,{}
NetSys/bess,https://github.com/NetSys/bess,829,2018-08-09T17:28:54Z,2018-08-09T18:32:31Z,2018-08-09T22:08:58Z,MERGED,True,2,0,1,https://github.com/mukerjee,make: correctly compile dpdk for nehalem,1,[],https://github.com/NetSys/bess/pull/829,https://github.com/mukerjee,6,https://github.com/NetSys/bess/pull/829#issuecomment-411876256,"While RTE_MACHINE is set to ""nhm"" (nehalem) in deps/dpdk-17.11_common_linuxapp,
it is overridden by deps/dpdk-17.11/config/defconfig_x86_64-native-linuxapp-gcc
(as RTE_MACHINE=native). This causes issues if you compile BESS on a machine
with a newer microarchitecture than the machine that will run it (e.g.,
compiling on newer skylake-based machines for a haswell-based machine). This
changes comments out RTE_MACHINE=native before configuring DPDK. DPDK is now
forced to compile for nehalem.",Thanks @krsna1729 -- this is a reasonable way to do it. We could get rid of deps/dpdk-17.11_common_linuxapp and just add the four CONFIG_RTE_* (at the bottom of the file) as extra arguments to make as we do with DPDK_CFLAGS in build.py.,True,{}
NetSys/bess,https://github.com/NetSys/bess,829,2018-08-09T17:28:54Z,2018-08-09T18:32:31Z,2018-08-09T22:08:58Z,MERGED,True,2,0,1,https://github.com/mukerjee,make: correctly compile dpdk for nehalem,1,[],https://github.com/NetSys/bess/pull/829,https://github.com/chris3torek,7,https://github.com/NetSys/bess/pull/829#issuecomment-411913882,"While RTE_MACHINE is set to ""nhm"" (nehalem) in deps/dpdk-17.11_common_linuxapp,
it is overridden by deps/dpdk-17.11/config/defconfig_x86_64-native-linuxapp-gcc
(as RTE_MACHINE=native). This causes issues if you compile BESS on a machine
with a newer microarchitecture than the machine that will run it (e.g.,
compiling on newer skylake-based machines for a haswell-based machine). This
changes comments out RTE_MACHINE=native before configuring DPDK. DPDK is now
forced to compile for nehalem.",I wouldn't mind getting rid of the deps/dpdk-17.11_common_linuxapp file either. Maybe next round. 😺,True,{}
NetSys/bess,https://github.com/NetSys/bess,830,2018-08-11T05:02:25Z,2018-08-15T00:15:29Z,2018-09-28T18:46:23Z,MERGED,True,38,24,6,https://github.com/sangjinhan,Enable ccache for Travis CI,3,[],https://github.com/NetSys/bess/pull/830,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/830,"Combined with #814, the turnaround time was reduced by about 50%.","Combined with #814, the turnaround time was reduced by about 50%.",True,{}
NetSys/bess,https://github.com/NetSys/bess,830,2018-08-11T05:02:25Z,2018-08-15T00:15:29Z,2018-09-28T18:46:23Z,MERGED,True,38,24,6,https://github.com/sangjinhan,Enable ccache for Travis CI,3,[],https://github.com/NetSys/bess/pull/830,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/830#issuecomment-412251187,"Combined with #814, the turnaround time was reduced by about 50%.","Codecov Report

Merging #830 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #830   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 3f1a50c...10e1935. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,830,2018-08-11T05:02:25Z,2018-08-15T00:15:29Z,2018-09-28T18:46:23Z,MERGED,True,38,24,6,https://github.com/sangjinhan,Enable ccache for Travis CI,3,[],https://github.com/NetSys/bess/pull/830,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/830#issuecomment-413055826,"Combined with #814, the turnaround time was reduced by about 50%.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,831,2018-08-12T07:07:21Z,2018-08-16T22:43:18Z,2018-09-28T18:46:21Z,MERGED,True,29,65,6,https://github.com/sangjinhan,Optimize the size of build container.,5,[],https://github.com/NetSys/bess/pull/831,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/831,"This PR reduces the size of Docker build container from 2.9GB down to 0.9GB, reducing ~1.5 mins for downloading the image from Travis CI. The changes include:

eliminate the use of git in the container (git has lots of dependencies)
purge temporary files
remove non-essential directories of prebuilt DPDK
use non-ppa packages for g++-8 and clang-6.0","This PR reduces the size of Docker build container from 2.9GB down to 0.9GB, reducing ~1.5 mins for downloading the image from Travis CI. The changes include:

eliminate the use of git in the container (git has lots of dependencies)
purge temporary files
remove non-essential directories of prebuilt DPDK
use non-ppa packages for g++-8 and clang-6.0",True,{}
NetSys/bess,https://github.com/NetSys/bess,831,2018-08-12T07:07:21Z,2018-08-16T22:43:18Z,2018-09-28T18:46:21Z,MERGED,True,29,65,6,https://github.com/sangjinhan,Optimize the size of build container.,5,[],https://github.com/NetSys/bess/pull/831,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/831#issuecomment-412325092,"This PR reduces the size of Docker build container from 2.9GB down to 0.9GB, reducing ~1.5 mins for downloading the image from Travis CI. The changes include:

eliminate the use of git in the container (git has lots of dependencies)
purge temporary files
remove non-essential directories of prebuilt DPDK
use non-ppa packages for g++-8 and clang-6.0","Codecov Report

Merging #831 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #831   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update eb21d00...6ee20cb. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,831,2018-08-12T07:07:21Z,2018-08-16T22:43:18Z,2018-09-28T18:46:21Z,MERGED,True,29,65,6,https://github.com/sangjinhan,Optimize the size of build container.,5,[],https://github.com/NetSys/bess/pull/831,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/831#issuecomment-413706332,"This PR reduces the size of Docker build container from 2.9GB down to 0.9GB, reducing ~1.5 mins for downloading the image from Travis CI. The changes include:

eliminate the use of git in the container (git has lots of dependencies)
purge temporary files
remove non-essential directories of prebuilt DPDK
use non-ppa packages for g++-8 and clang-6.0",,True,{}
NetSys/bess,https://github.com/NetSys/bess,833,2018-08-14T18:39:44Z,2018-08-16T16:52:55Z,2018-08-16T22:45:49Z,MERGED,True,29,31,4,https://github.com/sangjinhan,Cleanup .gitignore file,3,[],https://github.com/NetSys/bess/pull/833,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/833,"Ignore all dot files by default
Add compile_commands.json
Separate core/.gitignore from the main one","Ignore all dot files by default
Add compile_commands.json
Separate core/.gitignore from the main one",True,{}
NetSys/bess,https://github.com/NetSys/bess,833,2018-08-14T18:39:44Z,2018-08-16T16:52:55Z,2018-08-16T22:45:49Z,MERGED,True,29,31,4,https://github.com/sangjinhan,Cleanup .gitignore file,3,[],https://github.com/NetSys/bess/pull/833,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/833#issuecomment-412980653,"Ignore all dot files by default
Add compile_commands.json
Separate core/.gitignore from the main one","Codecov Report

Merging #833 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #833   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update eb21d00...fb98bbc. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,833,2018-08-14T18:39:44Z,2018-08-16T16:52:55Z,2018-08-16T22:45:49Z,MERGED,True,29,31,4,https://github.com/sangjinhan,Cleanup .gitignore file,3,[],https://github.com/NetSys/bess/pull/833,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/833#issuecomment-413612747,"Ignore all dot files by default
Add compile_commands.json
Separate core/.gitignore from the main one",,True,{}
NetSys/bess,https://github.com/NetSys/bess,834,2018-08-16T21:19:12Z,2018-08-16T21:43:55Z,2018-08-16T22:12:20Z,MERGED,True,0,1,1,https://github.com/ddiproietto,build.py: Do not delete bess symlink,1,[],https://github.com/NetSys/bess/pull/834,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/834,"Since commit 8293a9f(""build: do not create bessd symlink at compile
time""), the symlink is committed to the repo.","Since commit 8293a9f(""build: do not create bessd symlink at compile
time""), the symlink is committed to the repo.",True,{}
NetSys/bess,https://github.com/NetSys/bess,834,2018-08-16T21:19:12Z,2018-08-16T21:43:55Z,2018-08-16T22:12:20Z,MERGED,True,0,1,1,https://github.com/ddiproietto,build.py: Do not delete bess symlink,1,[],https://github.com/NetSys/bess/pull/834,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/834#issuecomment-413690531,"Since commit 8293a9f(""build: do not create bessd symlink at compile
time""), the symlink is committed to the repo.","Still waiting for Travis before merging, but here, have a kitty 🐈",True,{}
NetSys/bess,https://github.com/NetSys/bess,834,2018-08-16T21:19:12Z,2018-08-16T21:43:55Z,2018-08-16T22:12:20Z,MERGED,True,0,1,1,https://github.com/ddiproietto,build.py: Do not delete bess symlink,1,[],https://github.com/NetSys/bess/pull/834,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/834#issuecomment-413691406,"Since commit 8293a9f(""build: do not create bessd symlink at compile
time""), the symlink is committed to the repo.","Codecov Report

Merging #834 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #834   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 8293a9f...4ce2a75. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,835,2018-08-17T00:00:18Z,2018-08-17T00:17:28Z,2018-09-28T18:46:20Z,MERGED,True,4,0,1,https://github.com/sangjinhan,"makefile: make ""all"" be the default target",1,[],https://github.com/NetSys/bess/pull/835,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/835,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,835,2018-08-17T00:00:18Z,2018-08-17T00:17:28Z,2018-09-28T18:46:20Z,MERGED,True,4,0,1,https://github.com/sangjinhan,"makefile: make ""all"" be the default target",1,[],https://github.com/NetSys/bess/pull/835,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/835#issuecomment-413720785,,"Codecov Report

Merging #835 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #835   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 94a849f...4fc0d95. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,835,2018-08-17T00:00:18Z,2018-08-17T00:17:28Z,2018-09-28T18:46:20Z,MERGED,True,4,0,1,https://github.com/sangjinhan,"makefile: make ""all"" be the default target",1,[],https://github.com/NetSys/bess/pull/835,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/835#issuecomment-413721379,,"(need to take some better kitty pictures, here's an old one that's a little blown out)",True,{}
NetSys/bess,https://github.com/NetSys/bess,837,2018-08-17T21:00:45Z,2018-08-17T23:57:50Z,2018-08-17T23:58:02Z,MERGED,True,5,1,1,https://github.com/chris3torek,tests: raise FIFO test default delay,1,[],https://github.com/NetSys/bess/pull/837,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/837,"On at least some Ubuntu 18.04 systems, the FIFO test sometimes
fails when a 20 ms thread-sleep does not allow the parent process
to run to the point of having data ready in the test-control socket.
Raising the default delay to 100 ms seems reliable (70 ms suffices
in my tests).
Fixes issue #836.","On at least some Ubuntu 18.04 systems, the FIFO test sometimes
fails when a 20 ms thread-sleep does not allow the parent process
to run to the point of having data ready in the test-control socket.
Raising the default delay to 100 ms seems reliable (70 ms suffices
in my tests).
Fixes issue #836.",True,{}
NetSys/bess,https://github.com/NetSys/bess,837,2018-08-17T21:00:45Z,2018-08-17T23:57:50Z,2018-08-17T23:58:02Z,MERGED,True,5,1,1,https://github.com/chris3torek,tests: raise FIFO test default delay,1,[],https://github.com/NetSys/bess/pull/837,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/837#issuecomment-413989937,"On at least some Ubuntu 18.04 systems, the FIFO test sometimes
fails when a 20 ms thread-sleep does not allow the parent process
to run to the point of having data ready in the test-control socket.
Raising the default delay to 100 ms seems reliable (70 ms suffices
in my tests).
Fixes issue #836.","Codecov Report

Merging #837 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #837   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 80bfb94...c2cd1c8. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,837,2018-08-17T21:00:45Z,2018-08-17T23:57:50Z,2018-08-17T23:58:02Z,MERGED,True,5,1,1,https://github.com/chris3torek,tests: raise FIFO test default delay,1,[],https://github.com/NetSys/bess/pull/837,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/837#issuecomment-414015321,"On at least some Ubuntu 18.04 systems, the FIFO test sometimes
fails when a 20 ms thread-sleep does not allow the parent process
to run to the point of having data ready in the test-control socket.
Raising the default delay to 100 ms seems reliable (70 ms suffices
in my tests).
Fixes issue #836.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,838,2018-08-18T00:14:58Z,2018-08-18T00:30:34Z,2018-08-18T00:30:37Z,CLOSED,False,5,2,1,https://github.com/ddiproietto,vport: Fix strncpy warning,1,[],https://github.com/NetSys/bess/pull/838,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/838,"g++-8.2.0 complains about strncpy with the following warning:
drivers/vport.cc: In member function ‘CommandResponse VPort::Init(const bess::pb::VPortArg&)’:
drivers/vport.cc:508:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, name().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
drivers/vport.cc:506:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, arg.ifname().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1plus: all warnings being treated as errors
Error: drivers/vport.o

Fix the usage of strncpy with an explicit null termination. This was not
a problem for arg.ifname(), because the code checks the length
immediately above, but the compiler is not smart enough to understand
that.","g++-8.2.0 complains about strncpy with the following warning:
drivers/vport.cc: In member function ‘CommandResponse VPort::Init(const bess::pb::VPortArg&)’:
drivers/vport.cc:508:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, name().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
drivers/vport.cc:506:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, arg.ifname().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1plus: all warnings being treated as errors
Error: drivers/vport.o

Fix the usage of strncpy with an explicit null termination. This was not
a problem for arg.ifname(), because the code checks the length
immediately above, but the compiler is not smart enough to understand
that.",True,{}
NetSys/bess,https://github.com/NetSys/bess,838,2018-08-18T00:14:58Z,2018-08-18T00:30:34Z,2018-08-18T00:30:37Z,CLOSED,False,5,2,1,https://github.com/ddiproietto,vport: Fix strncpy warning,1,[],https://github.com/NetSys/bess/pull/838,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/838#issuecomment-414018293,"g++-8.2.0 complains about strncpy with the following warning:
drivers/vport.cc: In member function ‘CommandResponse VPort::Init(const bess::pb::VPortArg&)’:
drivers/vport.cc:508:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, name().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
drivers/vport.cc:506:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, arg.ifname().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1plus: all warnings being treated as errors
Error: drivers/vport.o

Fix the usage of strncpy with an explicit null termination. This was not
a problem for arg.ifname(), because the code checks the length
immediately above, but the compiler is not smart enough to understand
that.","Codecov Report

Merging #838 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #838      +/-   ##
==========================================
- Coverage   55.82%   55.73%   -0.09%     
==========================================
  Files           9        9              
  Lines        1150     1150              
==========================================
- Hits          642      641       -1     
- Misses        508      509       +1



Impacted Files
Coverage Δ





pybess/bess.py
40.04% <0%> (-0.21%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update fc9f723...f6ad66a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,840,2018-08-18T21:16:46Z,2018-08-20T22:15:22Z,2018-09-28T18:46:18Z,MERGED,True,3,0,1,https://github.com/sangjinhan,makefile: allow plugins to inject .mk files,1,[],https://github.com/NetSys/bess/pull/840,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/840,"Plugins may require some special software prerequisites, target dependencies, or compiler flags to build their own modules. Since it would be impractical to provide generic mechanisms to meet such plugin-specific requirements without some heavy lifting, this PR instead introduces a hacky way; it enables plugins to implant their extra*.mk files into the main Makefile.","Plugins may require some special software prerequisites, target dependencies, or compiler flags to build their own modules. Since it would be impractical to provide generic mechanisms to meet such plugin-specific requirements without some heavy lifting, this PR instead introduces a hacky way; it enables plugins to implant their extra*.mk files into the main Makefile.",True,{}
NetSys/bess,https://github.com/NetSys/bess,840,2018-08-18T21:16:46Z,2018-08-20T22:15:22Z,2018-09-28T18:46:18Z,MERGED,True,3,0,1,https://github.com/sangjinhan,makefile: allow plugins to inject .mk files,1,[],https://github.com/NetSys/bess/pull/840,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/840#issuecomment-414087362,"Plugins may require some special software prerequisites, target dependencies, or compiler flags to build their own modules. Since it would be impractical to provide generic mechanisms to meet such plugin-specific requirements without some heavy lifting, this PR instead introduces a hacky way; it enables plugins to implant their extra*.mk files into the main Makefile.","Codecov Report

Merging #840 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #840   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update fc9f723...218bb0b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,840,2018-08-18T21:16:46Z,2018-08-20T22:15:22Z,2018-09-28T18:46:18Z,MERGED,True,3,0,1,https://github.com/sangjinhan,makefile: allow plugins to inject .mk files,1,[],https://github.com/NetSys/bess/pull/840,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/840#issuecomment-414481273,"Plugins may require some special software prerequisites, target dependencies, or compiler flags to build their own modules. Since it would be impractical to provide generic mechanisms to meet such plugin-specific requirements without some heavy lifting, this PR instead introduces a hacky way; it enables plugins to implant their extra*.mk files into the main Makefile.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,841,2018-08-23T20:51:37Z,2018-08-23T21:09:27Z,2018-08-23T21:17:44Z,MERGED,True,6,6,1,https://github.com/ddiproietto,vport: Fix strncpy warning,1,[],https://github.com/NetSys/bess/pull/841,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/841,"g++-8.2.0 complains about strncpy with the following warning:
drivers/vport.cc: In member function ‘CommandResponse VPort::Init(const bess::pb::VPortArg&)’:
drivers/vport.cc:508:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, name().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
drivers/vport.cc:506:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, arg.ifname().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1plus: all warnings being treated as errors
Error: drivers/vport.o

This was not a problem for arg.ifname(), but could have been a problem
for name().
Fix it by:

Checking the length of name() as well (suggested by Chris Torek
chris.torek@gmail.com)
Put the terminating byte in any case","g++-8.2.0 complains about strncpy with the following warning:
drivers/vport.cc: In member function ‘CommandResponse VPort::Init(const bess::pb::VPortArg&)’:
drivers/vport.cc:508:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, name().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
drivers/vport.cc:506:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, arg.ifname().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1plus: all warnings being treated as errors
Error: drivers/vport.o

This was not a problem for arg.ifname(), but could have been a problem
for name().
Fix it by:

Checking the length of name() as well (suggested by Chris Torek
chris.torek@gmail.com)
Put the terminating byte in any case",True,{}
NetSys/bess,https://github.com/NetSys/bess,841,2018-08-23T20:51:37Z,2018-08-23T21:09:27Z,2018-08-23T21:17:44Z,MERGED,True,6,6,1,https://github.com/ddiproietto,vport: Fix strncpy warning,1,[],https://github.com/NetSys/bess/pull/841,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/841#issuecomment-415570660,"g++-8.2.0 complains about strncpy with the following warning:
drivers/vport.cc: In member function ‘CommandResponse VPort::Init(const bess::pb::VPortArg&)’:
drivers/vport.cc:508:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, name().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
drivers/vport.cc:506:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, arg.ifname().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1plus: all warnings being treated as errors
Error: drivers/vport.o

This was not a problem for arg.ifname(), but could have been a problem
for name().
Fix it by:

Checking the length of name() as well (suggested by Chris Torek
chris.torek@gmail.com)
Put the terminating byte in any case","Codecov Report

Merging #841 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #841   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 36cdfed...a89c61e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,841,2018-08-23T20:51:37Z,2018-08-23T21:09:27Z,2018-08-23T21:17:44Z,MERGED,True,6,6,1,https://github.com/ddiproietto,vport: Fix strncpy warning,1,[],https://github.com/NetSys/bess/pull/841,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/841#issuecomment-415572033,"g++-8.2.0 complains about strncpy with the following warning:
drivers/vport.cc: In member function ‘CommandResponse VPort::Init(const bess::pb::VPortArg&)’:
drivers/vport.cc:508:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, name().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
drivers/vport.cc:506:12: error: ‘char* strncpy(char*, const char*, size_t)’ specified bound 16 equals destination size [-Werror=stringop-truncation]
     strncpy(ifname_, arg.ifname().c_str(), IFNAMSIZ);
     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1plus: all warnings being treated as errors
Error: drivers/vport.o

This was not a problem for arg.ifname(), but could have been a problem
for name().
Fix it by:

Checking the length of name() as well (suggested by Chris Torek
chris.torek@gmail.com)
Put the terminating byte in any case","Wow, I'm not used to Travis finishing that fast! 😺",True,{}
NetSys/bess,https://github.com/NetSys/bess,842,2018-08-27T17:51:57Z,2018-08-27T19:13:07Z,2018-09-28T18:46:16Z,MERGED,True,7,3,1,https://github.com/sangjinhan,cuckoo_map: allow template argument deduction,1,[],https://github.com/NetSys/bess/pull/842,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/842,"The forwarding reference VV&& cannot be directly deduced from a braced-init-list function parameter. This limitation makes c.Insert(key, {2, 3, 4}); fail, although it looks completely benign (C++ standard 14.8.2.5 (5.6)). Instead one must specify the type of the value like c.Insert<std::vector<int>>(key, {2, 3, 4});. It is unnecessarily verbose since the value type is already known to be V, but the compiler does not know about the relationship between V and VV.
This patch replaces the use of forwarding reference VV&& with two separate copy/move references. It does make the code a bit more verbose on the library side, but not on the user side.","The forwarding reference VV&& cannot be directly deduced from a braced-init-list function parameter. This limitation makes c.Insert(key, {2, 3, 4}); fail, although it looks completely benign (C++ standard 14.8.2.5 (5.6)). Instead one must specify the type of the value like c.Insert<std::vector<int>>(key, {2, 3, 4});. It is unnecessarily verbose since the value type is already known to be V, but the compiler does not know about the relationship between V and VV.
This patch replaces the use of forwarding reference VV&& with two separate copy/move references. It does make the code a bit more verbose on the library side, but not on the user side.",True,{}
NetSys/bess,https://github.com/NetSys/bess,842,2018-08-27T17:51:57Z,2018-08-27T19:13:07Z,2018-09-28T18:46:16Z,MERGED,True,7,3,1,https://github.com/sangjinhan,cuckoo_map: allow template argument deduction,1,[],https://github.com/NetSys/bess/pull/842,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/842#issuecomment-416314755,"The forwarding reference VV&& cannot be directly deduced from a braced-init-list function parameter. This limitation makes c.Insert(key, {2, 3, 4}); fail, although it looks completely benign (C++ standard 14.8.2.5 (5.6)). Instead one must specify the type of the value like c.Insert<std::vector<int>>(key, {2, 3, 4});. It is unnecessarily verbose since the value type is already known to be V, but the compiler does not know about the relationship between V and VV.
This patch replaces the use of forwarding reference VV&& with two separate copy/move references. It does make the code a bit more verbose on the library side, but not on the user side.","Codecov Report

Merging #842 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #842   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ee7e574...399be4a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,842,2018-08-27T17:51:57Z,2018-08-27T19:13:07Z,2018-09-28T18:46:16Z,MERGED,True,7,3,1,https://github.com/sangjinhan,cuckoo_map: allow template argument deduction,1,[],https://github.com/NetSys/bess/pull/842,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/842#issuecomment-416334203,"The forwarding reference VV&& cannot be directly deduced from a braced-init-list function parameter. This limitation makes c.Insert(key, {2, 3, 4}); fail, although it looks completely benign (C++ standard 14.8.2.5 (5.6)). Instead one must specify the type of the value like c.Insert<std::vector<int>>(key, {2, 3, 4});. It is unnecessarily verbose since the value type is already known to be V, but the compiler does not know about the relationship between V and VV.
This patch replaces the use of forwarding reference VV&& with two separate copy/move references. It does make the code a bit more verbose on the library side, but not on the user side.",(merge please),True,{}
NetSys/bess,https://github.com/NetSys/bess,842,2018-08-27T17:51:57Z,2018-08-27T19:13:07Z,2018-09-28T18:46:16Z,MERGED,True,7,3,1,https://github.com/sangjinhan,cuckoo_map: allow template argument deduction,1,[],https://github.com/NetSys/bess/pull/842,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/842#issuecomment-416335866,"The forwarding reference VV&& cannot be directly deduced from a braced-init-list function parameter. This limitation makes c.Insert(key, {2, 3, 4}); fail, although it looks completely benign (C++ standard 14.8.2.5 (5.6)). Instead one must specify the type of the value like c.Insert<std::vector<int>>(key, {2, 3, 4});. It is unnecessarily verbose since the value type is already known to be V, but the compiler does not know about the relationship between V and VV.
This patch replaces the use of forwarding reference VV&& with two separate copy/move references. It does make the code a bit more verbose on the library side, but not on the user side.",Thanks! (Cat soon),True,{}
NetSys/bess,https://github.com/NetSys/bess,842,2018-08-27T17:51:57Z,2018-08-27T19:13:07Z,2018-09-28T18:46:16Z,MERGED,True,7,3,1,https://github.com/sangjinhan,cuckoo_map: allow template argument deduction,1,[],https://github.com/NetSys/bess/pull/842,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/842#issuecomment-416344617,"The forwarding reference VV&& cannot be directly deduced from a braced-init-list function parameter. This limitation makes c.Insert(key, {2, 3, 4}); fail, although it looks completely benign (C++ standard 14.8.2.5 (5.6)). Instead one must specify the type of the value like c.Insert<std::vector<int>>(key, {2, 3, 4});. It is unnecessarily verbose since the value type is already known to be V, but the compiler does not know about the relationship between V and VV.
This patch replaces the use of forwarding reference VV&& with two separate copy/move references. It does make the code a bit more verbose on the library side, but not on the user side.",,True,{'LAUGH': ['https://github.com/sangjinhan']}
NetSys/bess,https://github.com/NetSys/bess,844,2018-08-29T04:29:36Z,2018-08-29T05:32:16Z,2018-08-29T07:27:21Z,MERGED,True,4,0,1,https://github.com/melvinw,utils/cuckoo_map_test: add missing imports,1,[],https://github.com/NetSys/bess/pull/844,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/844,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,844,2018-08-29T04:29:36Z,2018-08-29T05:32:16Z,2018-08-29T07:27:21Z,MERGED,True,4,0,1,https://github.com/melvinw,utils/cuckoo_map_test: add missing imports,1,[],https://github.com/NetSys/bess/pull/844,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/844#issuecomment-416822172,,"Codecov Report

Merging #844 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #844   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a74bdc1...d2ac878. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,844,2018-08-29T04:29:36Z,2018-08-29T05:32:16Z,2018-08-29T07:27:21Z,MERGED,True,4,0,1,https://github.com/melvinw,utils/cuckoo_map_test: add missing imports,1,[],https://github.com/NetSys/bess/pull/844,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/844#issuecomment-416853374,,Almost forgot a kitty,True,{}
NetSys/bess,https://github.com/NetSys/bess,848,2018-09-07T16:18:05Z,2018-09-27T18:35:15Z,2018-09-27T18:50:16Z,MERGED,True,1,1,1,https://github.com/mukerjee,deps: properly pass RTE_MACHINE to .h file,1,[],https://github.com/NetSys/bess/pull/848,https://github.com/mukerjee,1,https://github.com/NetSys/bess/pull/848,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,848,2018-09-07T16:18:05Z,2018-09-27T18:35:15Z,2018-09-27T18:50:16Z,MERGED,True,1,1,1,https://github.com/mukerjee,deps: properly pass RTE_MACHINE to .h file,1,[],https://github.com/NetSys/bess/pull/848,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/848#issuecomment-419494717,,"Codecov Report

Merging #848 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #848   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4fc4a3a...5fe35cd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,848,2018-09-07T16:18:05Z,2018-09-27T18:35:15Z,2018-09-27T18:50:16Z,MERGED,True,1,1,1,https://github.com/mukerjee,deps: properly pass RTE_MACHINE to .h file,1,[],https://github.com/NetSys/bess/pull/848,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/848#issuecomment-425198576,,Merged! Thank you!,True,{}
NetSys/bess,https://github.com/NetSys/bess,851,2018-09-26T20:09:28Z,2018-09-28T19:25:30Z,2018-09-28T19:25:33Z,CLOSED,False,6,1,1,https://github.com/dburnham2000,Modified core/Makefile to check for installed g++7 on Ubuntu 16.04,1,[],https://github.com/NetSys/bess/pull/851,https://github.com/dburnham2000,1,https://github.com/NetSys/bess/pull/851,"This is the quick and dirty modification that allows compiling of bess on a new Ubuntu 16.04 installation by checking if g++7 is installed separate from the default g++ on the system.
Per 17 USC § 105 this code is public domain. For additional details see the DoD CIO Open Source Software FAQ","This is the quick and dirty modification that allows compiling of bess on a new Ubuntu 16.04 installation by checking if g++7 is installed separate from the default g++ on the system.
Per 17 USC § 105 this code is public domain. For additional details see the DoD CIO Open Source Software FAQ",True,{}
NetSys/bess,https://github.com/NetSys/bess,851,2018-09-26T20:09:28Z,2018-09-28T19:25:30Z,2018-09-28T19:25:33Z,CLOSED,False,6,1,1,https://github.com/dburnham2000,Modified core/Makefile to check for installed g++7 on Ubuntu 16.04,1,[],https://github.com/NetSys/bess/pull/851,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/851#issuecomment-424858857,"This is the quick and dirty modification that allows compiling of bess on a new Ubuntu 16.04 installation by checking if g++7 is installed separate from the default g++ on the system.
Per 17 USC § 105 this code is public domain. For additional details see the DoD CIO Open Source Software FAQ","Codecov Report

Merging #851 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #851      +/-   ##
==========================================
- Coverage   55.82%   55.73%   -0.09%     
==========================================
  Files           9        9              
  Lines        1150     1150              
==========================================
- Hits          642      641       -1     
- Misses        508      509       +1



Impacted Files
Coverage Δ





pybess/bess.py
40.04% <0%> (-0.21%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4fc4a3a...71f8628. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,851,2018-09-26T20:09:28Z,2018-09-28T19:25:30Z,2018-09-28T19:25:33Z,CLOSED,False,6,1,1,https://github.com/dburnham2000,Modified core/Makefile to check for installed g++7 on Ubuntu 16.04,1,[],https://github.com/NetSys/bess/pull/851,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/851#issuecomment-425541017,"This is the quick and dirty modification that allows compiling of bess on a new Ubuntu 16.04 installation by checking if g++7 is installed separate from the default g++ on the system.
Per 17 USC § 105 this code is public domain. For additional details see the DoD CIO Open Source Software FAQ",One can specify which version of g++ to be used with CXX=g++-7 make (#850),True,{}
NetSys/bess,https://github.com/NetSys/bess,852,2018-09-27T05:46:28Z,2018-09-29T03:50:13Z,2018-09-29T03:50:53Z,MERGED,True,140,115,2,https://github.com/shinae-woo,Support UDP flows and Fill L3/L4 checksums,4,[],https://github.com/NetSys/bess/pull/852,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/852,"With this PR, Flowgen supports UDP flows along with existing TCP flows, and also fill L3/L4 checksums appropriately.","With this PR, Flowgen supports UDP flows along with existing TCP flows, and also fill L3/L4 checksums appropriately.",True,{}
NetSys/bess,https://github.com/NetSys/bess,852,2018-09-27T05:46:28Z,2018-09-29T03:50:13Z,2018-09-29T03:50:53Z,MERGED,True,140,115,2,https://github.com/shinae-woo,Support UDP flows and Fill L3/L4 checksums,4,[],https://github.com/NetSys/bess/pull/852,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/852#issuecomment-425184672,"With this PR, Flowgen supports UDP flows along with existing TCP flows, and also fill L3/L4 checksums appropriately.","Codecov Report

Merging #852 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #852   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 15d608d...703ec97. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,852,2018-09-27T05:46:28Z,2018-09-29T03:50:13Z,2018-09-29T03:50:53Z,MERGED,True,140,115,2,https://github.com/shinae-woo,Support UDP flows and Fill L3/L4 checksums,4,[],https://github.com/NetSys/bess/pull/852,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/852#issuecomment-425613152,"With this PR, Flowgen supports UDP flows along with existing TCP flows, and also fill L3/L4 checksums appropriately.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,854,2018-09-28T19:21:29Z,2018-09-28T21:36:43Z,2018-09-28T21:36:53Z,MERGED,True,1,0,1,https://github.com/sangjinhan,Add protobuf package to pip installation list,1,[],https://github.com/NetSys/bess/pull/854,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/854,"Somewhat surprisingly, protobuf is not a prerequisite of grpcio, so we have to list it explicitly.","Somewhat surprisingly, protobuf is not a prerequisite of grpcio, so we have to list it explicitly.",True,{}
NetSys/bess,https://github.com/NetSys/bess,854,2018-09-28T19:21:29Z,2018-09-28T21:36:43Z,2018-09-28T21:36:53Z,MERGED,True,1,0,1,https://github.com/sangjinhan,Add protobuf package to pip installation list,1,[],https://github.com/NetSys/bess/pull/854,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/854#issuecomment-425542962,"Somewhat surprisingly, protobuf is not a prerequisite of grpcio, so we have to list it explicitly.","Codecov Report

Merging #854 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #854   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 905527c...b010872. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,854,2018-09-28T19:21:29Z,2018-09-28T21:36:43Z,2018-09-28T21:36:53Z,MERGED,True,1,0,1,https://github.com/sangjinhan,Add protobuf package to pip installation list,1,[],https://github.com/NetSys/bess/pull/854,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/854#issuecomment-425573139,"Somewhat surprisingly, protobuf is not a prerequisite of grpcio, so we have to list it explicitly.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,855,2018-09-28T19:28:01Z,2018-09-28T21:37:58Z,2018-09-28T21:38:03Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Update README.md,1,[],https://github.com/NetSys/bess/pull/855,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/855,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,855,2018-09-28T19:28:01Z,2018-09-28T21:37:58Z,2018-09-28T21:38:03Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Update README.md,1,[],https://github.com/NetSys/bess/pull/855,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/855#issuecomment-425544886,,"Codecov Report

Merging #855 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #855      +/-   ##
==========================================
- Coverage   55.82%   55.73%   -0.09%     
==========================================
  Files           9        9              
  Lines        1150     1150              
==========================================
- Hits          642      641       -1     
- Misses        508      509       +1



Impacted Files
Coverage Δ





pybess/bess.py
40.04% <0%> (-0.21%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 905527c...943543c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,855,2018-09-28T19:28:01Z,2018-09-28T21:37:58Z,2018-09-28T21:38:03Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Update README.md,1,[],https://github.com/NetSys/bess/pull/855,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/855#issuecomment-425573373,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,858,2018-10-08T18:13:34Z,2018-10-09T04:12:29Z,2018-10-09T04:12:36Z,MERGED,True,3,2,1,https://github.com/melvinw,core/drivers/pmd: fix stats for net_bonding vdevs,1,[],https://github.com/NetSys/bess/pull/858,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/858,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,858,2018-10-08T18:13:34Z,2018-10-09T04:12:29Z,2018-10-09T04:12:36Z,MERGED,True,3,2,1,https://github.com/melvinw,core/drivers/pmd: fix stats for net_bonding vdevs,1,[],https://github.com/NetSys/bess/pull/858,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/858#issuecomment-427934231,,"Codecov Report

Merging #858 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #858   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1535dd9...2abd521. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,858,2018-10-08T18:13:34Z,2018-10-09T04:12:29Z,2018-10-09T04:12:36Z,MERGED,True,3,2,1,https://github.com/melvinw,core/drivers/pmd: fix stats for net_bonding vdevs,1,[],https://github.com/NetSys/bess/pull/858,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/858#issuecomment-428053533,,"Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,859,2018-10-08T22:29:19Z,2018-10-10T22:41:08Z,2018-10-10T22:41:45Z,MERGED,True,93,77,1,https://github.com/melvinw,"add csv output to `monitor port`, `monitor tc`",3,[],https://github.com/NetSys/bess/pull/859,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/859,This should make benchmarking stuff a bit easier by removing the need to scrape the screen. I'm also smuggling in some formatting clean up/bug fixes,This should make benchmarking stuff a bit easier by removing the need to scrape the screen. I'm also smuggling in some formatting clean up/bug fixes,True,{}
NetSys/bess,https://github.com/NetSys/bess,859,2018-10-08T22:29:19Z,2018-10-10T22:41:08Z,2018-10-10T22:41:45Z,MERGED,True,93,77,1,https://github.com/melvinw,"add csv output to `monitor port`, `monitor tc`",3,[],https://github.com/NetSys/bess/pull/859,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/859#issuecomment-428002294,This should make benchmarking stuff a bit easier by removing the need to scrape the screen. I'm also smuggling in some formatting clean up/bug fixes,"Codecov Report

Merging #859 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #859      +/-   ##
==========================================
- Coverage   55.82%   55.73%   -0.09%     
==========================================
  Files           9        9              
  Lines        1150     1150              
==========================================
- Hits          642      641       -1     
- Misses        508      509       +1



Impacted Files
Coverage Δ





pybess/bess.py
40.04% <0%> (-0.21%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 88b9d2b...cd33fbd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,859,2018-10-08T22:29:19Z,2018-10-10T22:41:08Z,2018-10-10T22:41:45Z,MERGED,True,93,77,1,https://github.com/melvinw,"add csv output to `monitor port`, `monitor tc`",3,[],https://github.com/NetSys/bess/pull/859,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/859#issuecomment-428757886,This should make benchmarking stuff a bit easier by removing the need to scrape the screen. I'm also smuggling in some formatting clean up/bug fixes,,True,{}
NetSys/bess,https://github.com/NetSys/bess,860,2018-10-08T23:16:27Z,2018-10-11T20:33:47Z,2018-10-12T21:10:54Z,MERGED,True,4,2,1,https://github.com/sangjinhan,dpdk: support newer versions of Mellanox OFED,1,[],https://github.com/NetSys/bess/pull/860,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/860,"Newer versions of OFED do not seem to have verbs_exp.h any longer, so it should not be used to detect whether OFED is installed. Also, libibverbs does not reference libmlx4 or libmlx5 now, so we should explicitly include them when linking bessd.","Newer versions of OFED do not seem to have verbs_exp.h any longer, so it should not be used to detect whether OFED is installed. Also, libibverbs does not reference libmlx4 or libmlx5 now, so we should explicitly include them when linking bessd.",True,{}
NetSys/bess,https://github.com/NetSys/bess,860,2018-10-08T23:16:27Z,2018-10-11T20:33:47Z,2018-10-12T21:10:54Z,MERGED,True,4,2,1,https://github.com/sangjinhan,dpdk: support newer versions of Mellanox OFED,1,[],https://github.com/NetSys/bess/pull/860,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/860#issuecomment-428010959,"Newer versions of OFED do not seem to have verbs_exp.h any longer, so it should not be used to detect whether OFED is installed. Also, libibverbs does not reference libmlx4 or libmlx5 now, so we should explicitly include them when linking bessd.","Codecov Report

Merging #860 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #860   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1535dd9...bbe6094. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,860,2018-10-08T23:16:27Z,2018-10-11T20:33:47Z,2018-10-12T21:10:54Z,MERGED,True,4,2,1,https://github.com/sangjinhan,dpdk: support newer versions of Mellanox OFED,1,[],https://github.com/NetSys/bess/pull/860,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/860#issuecomment-428338003,"Newer versions of OFED do not seem to have verbs_exp.h any longer, so it should not be used to detect whether OFED is installed. Also, libibverbs does not reference libmlx4 or libmlx5 now, so we should explicitly include them when linking bessd.",🐱 🐈 😹 😸 😼,True,{}
NetSys/bess,https://github.com/NetSys/bess,860,2018-10-08T23:16:27Z,2018-10-11T20:33:47Z,2018-10-12T21:10:54Z,MERGED,True,4,2,1,https://github.com/sangjinhan,dpdk: support newer versions of Mellanox OFED,1,[],https://github.com/NetSys/bess/pull/860,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/860#issuecomment-429109172,"Newer versions of OFED do not seem to have verbs_exp.h any longer, so it should not be used to detect whether OFED is installed. Also, libibverbs does not reference libmlx4 or libmlx5 now, so we should explicitly include them when linking bessd.",Merged.,True,{}
NetSys/bess,https://github.com/NetSys/bess,861,2018-10-09T00:42:22Z,2018-10-09T19:19:49Z,2018-10-09T20:23:15Z,MERGED,True,2,2,1,https://github.com/sangjinhan,pybess: use *_pb2_grpc.py for ..Stub clases,1,[],https://github.com/NetSys/bess/pull/861,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/861,"use of _pb2.py for gRPC stubs has been deprecated.
This should fix #857","use of _pb2.py for gRPC stubs has been deprecated.
This should fix #857",True,{}
NetSys/bess,https://github.com/NetSys/bess,861,2018-10-09T00:42:22Z,2018-10-09T19:19:49Z,2018-10-09T20:23:15Z,MERGED,True,2,2,1,https://github.com/sangjinhan,pybess: use *_pb2_grpc.py for ..Stub clases,1,[],https://github.com/NetSys/bess/pull/861,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/861#issuecomment-428024671,"use of _pb2.py for gRPC stubs has been deprecated.
This should fix #857","Codecov Report

Merging #861 into master will not change coverage.
The diff coverage is 100%.


@@           Coverage Diff           @@
##           master     #861   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508



Impacted Files
Coverage Δ





pybess/bess.py
40.25% <100%> (ø)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1535dd9...d7cc5c7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,861,2018-10-09T00:42:22Z,2018-10-09T19:19:49Z,2018-10-09T20:23:15Z,MERGED,True,2,2,1,https://github.com/sangjinhan,pybess: use *_pb2_grpc.py for ..Stub clases,1,[],https://github.com/NetSys/bess/pull/861,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/861#issuecomment-428314358,"use of _pb2.py for gRPC stubs has been deprecated.
This should fix #857","Yeah, right, I couldn't find it either. I decided not to bother with ImportError or something like that as both apt (for >= Ubuntu 18.04) and build-dep.yml install versions with the new behavior.
(kitty please..?)",True,{}
NetSys/bess,https://github.com/NetSys/bess,861,2018-10-09T00:42:22Z,2018-10-09T19:19:49Z,2018-10-09T20:23:15Z,MERGED,True,2,2,1,https://github.com/sangjinhan,pybess: use *_pb2_grpc.py for ..Stub clases,1,[],https://github.com/NetSys/bess/pull/861,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/861#issuecomment-428318449,"use of _pb2.py for gRPC stubs has been deprecated.
This should fix #857",,True,{}
NetSys/bess,https://github.com/NetSys/bess,864,2018-10-22T02:03:05Z,2018-10-26T20:51:39Z,2018-11-27T21:23:23Z,MERGED,True,24,1,1,https://github.com/shinae-woo,gatehook: add interface for  gatehook commands in bessctl,1,[],https://github.com/NetSys/bess/pull/864,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/864,"$ command gatehook measuretshook out_outmod out 258 get_summary \
  MeasureCommandGetSummaryArg {'clear': False, 'latency_percentiles': [50, 99]}

Sorry, it's not having fancy auto-completion of commands at now.","$ command gatehook measuretshook out_outmod out 258 get_summary \
  MeasureCommandGetSummaryArg {'clear': False, 'latency_percentiles': [50, 99]}

Sorry, it's not having fancy auto-completion of commands at now.",True,{}
NetSys/bess,https://github.com/NetSys/bess,864,2018-10-22T02:03:05Z,2018-10-26T20:51:39Z,2018-11-27T21:23:23Z,MERGED,True,24,1,1,https://github.com/shinae-woo,gatehook: add interface for  gatehook commands in bessctl,1,[],https://github.com/NetSys/bess/pull/864,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/864#issuecomment-433539860,"$ command gatehook measuretshook out_outmod out 258 get_summary \
  MeasureCommandGetSummaryArg {'clear': False, 'latency_percentiles': [50, 99]}

Sorry, it's not having fancy auto-completion of commands at now.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,866,2018-11-08T20:28:20Z,2018-12-18T19:16:42Z,2020-09-15T08:02:07Z,MERGED,True,1,0,1,https://github.com/levaitamas,bessctl: Set __file__ of .bess scripts,1,[],https://github.com/NetSys/bess/pull/866,https://github.com/levaitamas,1,https://github.com/NetSys/bess/pull/866,"With this PR, bess conifg scripts can get their exact location.","With this PR, bess conifg scripts can get their exact location.",True,{}
NetSys/bess,https://github.com/NetSys/bess,866,2018-11-08T20:28:20Z,2018-12-18T19:16:42Z,2020-09-15T08:02:07Z,MERGED,True,1,0,1,https://github.com/levaitamas,bessctl: Set __file__ of .bess scripts,1,[],https://github.com/NetSys/bess/pull/866,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/866#issuecomment-443367190,"With this PR, bess conifg scripts can get their exact location.","This looks fine; I don't understand why Travis crashed. I've restarted the one test, let's see what happens.",True,{}
NetSys/bess,https://github.com/NetSys/bess,866,2018-11-08T20:28:20Z,2018-12-18T19:16:42Z,2020-09-15T08:02:07Z,MERGED,True,1,0,1,https://github.com/levaitamas,bessctl: Set __file__ of .bess scripts,1,[],https://github.com/NetSys/bess/pull/866,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/866#issuecomment-443369263,"With this PR, bess conifg scripts can get their exact location.","Codecov Report

Merging #866 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #866   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9aeba92...da54d34. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,866,2018-11-08T20:28:20Z,2018-12-18T19:16:42Z,2020-09-15T08:02:07Z,MERGED,True,1,0,1,https://github.com/levaitamas,bessctl: Set __file__ of .bess scripts,1,[],https://github.com/NetSys/bess/pull/866,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/866#issuecomment-448337092,"With this PR, bess conifg scripts can get their exact location.","Ouch, sorry I was a million years late... Thank you!",True,{}
NetSys/bess,https://github.com/NetSys/bess,866,2018-11-08T20:28:20Z,2018-12-18T19:16:42Z,2020-09-15T08:02:07Z,MERGED,True,1,0,1,https://github.com/levaitamas,bessctl: Set __file__ of .bess scripts,1,[],https://github.com/NetSys/bess/pull/866,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/866#issuecomment-448337480,"With this PR, bess conifg scripts can get their exact location.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,868,2018-11-13T09:22:30Z,2018-11-13T14:34:37Z,2018-11-27T22:19:51Z,MERGED,True,4,4,1,https://github.com/levaitamas,conf/samples/qtest: Fix tc priorities,1,[],https://github.com/NetSys/bess/pull/868,https://github.com/levaitamas,1,https://github.com/NetSys/bess/pull/868,Fixes #865.,Fixes #865.,True,{}
NetSys/bess,https://github.com/NetSys/bess,868,2018-11-13T09:22:30Z,2018-11-13T14:34:37Z,2018-11-27T22:19:51Z,MERGED,True,4,4,1,https://github.com/levaitamas,conf/samples/qtest: Fix tc priorities,1,[],https://github.com/NetSys/bess/pull/868,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/868#issuecomment-438198622,Fixes #865.,"Codecov Report

Merging #868 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #868   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9aeba92...6f76b43. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,869,2018-11-26T19:05:16Z,2018-11-26T19:46:49Z,2018-11-26T23:13:01Z,MERGED,True,1,1,1,https://github.com/ddiproietto,copy_bench: Fix compilation with libbenchmark 1.4.1,1,[],https://github.com/NetSys/bess/pull/869,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/869,"With libbenchmark 1.4.1 the semicolon is required.
google/benchmark#495","With libbenchmark 1.4.1 the semicolon is required.
google/benchmark#495",True,{}
NetSys/bess,https://github.com/NetSys/bess,869,2018-11-26T19:05:16Z,2018-11-26T19:46:49Z,2018-11-26T23:13:01Z,MERGED,True,1,1,1,https://github.com/ddiproietto,copy_bench: Fix compilation with libbenchmark 1.4.1,1,[],https://github.com/NetSys/bess/pull/869,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/869#issuecomment-441762139,"With libbenchmark 1.4.1 the semicolon is required.
google/benchmark#495","Codecov Report

Merging #869 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #869   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 566a38b...eb6178c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,869,2018-11-26T19:05:16Z,2018-11-26T19:46:49Z,2018-11-26T23:13:01Z,MERGED,True,1,1,1,https://github.com/ddiproietto,copy_bench: Fix compilation with libbenchmark 1.4.1,1,[],https://github.com/NetSys/bess/pull/869,https://github.com/ddiproietto,3,https://github.com/NetSys/bess/pull/869#issuecomment-441766985,"With libbenchmark 1.4.1 the semicolon is required.
google/benchmark#495","Oh, I see what you're worried about, I didn't even think about problems with libbenchmark < 1.4.0.
Turns out we should be good to go, since we were using it with the semicolon in other places: 
  
    
      bess/core/traffic_class_bench.cc
    
    
         Line 237
      in
      566a38b
    
  
  
    

        
          
           BENCHMARK_MAIN();",True,{}
NetSys/bess,https://github.com/NetSys/bess,869,2018-11-26T19:05:16Z,2018-11-26T19:46:49Z,2018-11-26T23:13:01Z,MERGED,True,1,1,1,https://github.com/ddiproietto,copy_bench: Fix compilation with libbenchmark 1.4.1,1,[],https://github.com/NetSys/bess/pull/869,https://github.com/chris3torek,4,https://github.com/NetSys/bess/pull/869#issuecomment-441774347,"With libbenchmark 1.4.1 the semicolon is required.
google/benchmark#495",,True,{}
NetSys/bess,https://github.com/NetSys/bess,870,2018-11-27T18:45:03Z,2018-11-27T21:57:07Z,2018-12-07T18:45:47Z,MERGED,True,1,0,1,https://github.com/ddiproietto,scheduler: Reset silent_drops in context before running task,1,[],https://github.com/NetSys/bess/pull/870,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/870,"silent_drops were not reset, causing a constant increase of deadend
packets even if no packets were processed:
localhost:10514 $ show worker
   Worker ID    Status  CPU core  # of TCs    Deadend pkts
           0   RUNNING         0         6     14946328395

This commit fixes it for the DefaultScheduler.
The ExperimentalScheduler doesn't appear to account for those at all.","silent_drops were not reset, causing a constant increase of deadend
packets even if no packets were processed:
localhost:10514 $ show worker
   Worker ID    Status  CPU core  # of TCs    Deadend pkts
           0   RUNNING         0         6     14946328395

This commit fixes it for the DefaultScheduler.
The ExperimentalScheduler doesn't appear to account for those at all.",True,{}
NetSys/bess,https://github.com/NetSys/bess,870,2018-11-27T18:45:03Z,2018-11-27T21:57:07Z,2018-12-07T18:45:47Z,MERGED,True,1,0,1,https://github.com/ddiproietto,scheduler: Reset silent_drops in context before running task,1,[],https://github.com/NetSys/bess/pull/870,https://github.com/ddiproietto,2,https://github.com/NetSys/bess/pull/870#issuecomment-442171648,"silent_drops were not reset, causing a constant increase of deadend
packets even if no packets were processed:
localhost:10514 $ show worker
   Worker ID    Status  CPU core  # of TCs    Deadend pkts
           0   RUNNING         0         6     14946328395

This commit fixes it for the DefaultScheduler.
The ExperimentalScheduler doesn't appear to account for those at all.","I haven't benchmarked this, I hope it's not too expensive",True,{}
NetSys/bess,https://github.com/NetSys/bess,870,2018-11-27T18:45:03Z,2018-11-27T21:57:07Z,2018-12-07T18:45:47Z,MERGED,True,1,0,1,https://github.com/ddiproietto,scheduler: Reset silent_drops in context before running task,1,[],https://github.com/NetSys/bess/pull/870,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/870#issuecomment-442175743,"silent_drops were not reset, causing a constant increase of deadend
packets even if no packets were processed:
localhost:10514 $ show worker
   Worker ID    Status  CPU core  # of TCs    Deadend pkts
           0   RUNNING         0         6     14946328395

This commit fixes it for the DefaultScheduler.
The ExperimentalScheduler doesn't appear to account for those at all.","Codecov Report

Merging #870 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #870   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a321b98...a61af1c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,870,2018-11-27T18:45:03Z,2018-11-27T21:57:07Z,2018-12-07T18:45:47Z,MERGED,True,1,0,1,https://github.com/ddiproietto,scheduler: Reset silent_drops in context before running task,1,[],https://github.com/NetSys/bess/pull/870,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/870#issuecomment-445327392,"silent_drops were not reset, causing a constant increase of deadend
packets even if no packets were processed:
localhost:10514 $ show worker
   Worker ID    Status  CPU core  # of TCs    Deadend pkts
           0   RUNNING         0         6     14946328395

This commit fixes it for the DefaultScheduler.
The ExperimentalScheduler doesn't appear to account for those at all.",Merged!,True,{}
NetSys/bess,https://github.com/NetSys/bess,871,2018-12-07T18:11:16Z,2018-12-07T18:39:12Z,2018-12-08T01:16:42Z,MERGED,True,2,1,1,https://github.com/ddiproietto,bessctl.cc: Expand error message in DestroyWorker(),1,[],https://github.com/NetSys/bess/pull/871,https://github.com/ddiproietto,1,https://github.com/NetSys/bess/pull/871,To make debugging easier.,To make debugging easier.,True,{}
NetSys/bess,https://github.com/NetSys/bess,871,2018-12-07T18:11:16Z,2018-12-07T18:39:12Z,2018-12-08T01:16:42Z,MERGED,True,2,1,1,https://github.com/ddiproietto,bessctl.cc: Expand error message in DestroyWorker(),1,[],https://github.com/NetSys/bess/pull/871,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/871#issuecomment-445320581,To make debugging easier.,"Codecov Report

Merging #871 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #871   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 639e6e3...9154376. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,871,2018-12-07T18:11:16Z,2018-12-07T18:39:12Z,2018-12-08T01:16:42Z,MERGED,True,2,1,1,https://github.com/ddiproietto,bessctl.cc: Expand error message in DestroyWorker(),1,[],https://github.com/NetSys/bess/pull/871,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/871#issuecomment-445326139,To make debugging easier.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,872,2018-12-13T00:04:13Z,2019-07-09T07:34:05Z,2019-07-09T07:34:09Z,CLOSED,False,7,1,2,https://github.com/kevmitch, kmod: fix ndo_select_queue prototype for linux-4.19 ,2,[],https://github.com/NetSys/bess/pull/872,https://github.com/kevmitch,1,https://github.com/NetSys/bess/pull/872,"Just add a branch to the existing #ifdef. There is no use of the changed
argument inside the function, so there are no substantive changes
required.
I verified it now builds on 4.9, 4.18 and 4.19","Just add a branch to the existing #ifdef. There is no use of the changed
argument inside the function, so there are no substantive changes
required.
I verified it now builds on 4.9, 4.18 and 4.19",True,{}
NetSys/bess,https://github.com/NetSys/bess,872,2018-12-13T00:04:13Z,2019-07-09T07:34:05Z,2019-07-09T07:34:09Z,CLOSED,False,7,1,2,https://github.com/kevmitch, kmod: fix ndo_select_queue prototype for linux-4.19 ,2,[],https://github.com/NetSys/bess/pull/872,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/872#issuecomment-446793871,"Just add a branch to the existing #ifdef. There is no use of the changed
argument inside the function, so there are no substantive changes
required.
I verified it now builds on 4.9, 4.18 and 4.19","Codecov Report

Merging #872 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #872   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 32b642d...717313b. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,872,2018-12-13T00:04:13Z,2019-07-09T07:34:05Z,2019-07-09T07:34:09Z,CLOSED,False,7,1,2,https://github.com/kevmitch, kmod: fix ndo_select_queue prototype for linux-4.19 ,2,[],https://github.com/NetSys/bess/pull/872,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/872#issuecomment-448336656,"Just add a branch to the existing #ifdef. There is no use of the changed
argument inside the function, so there are no substantive changes
required.
I verified it now builds on 4.9, 4.18 and 4.19","Thank you very much for this patch. If you don't mind, could you sign up for the CLA? (no secret strings attached)",True,{}
NetSys/bess,https://github.com/NetSys/bess,872,2018-12-13T00:04:13Z,2019-07-09T07:34:05Z,2019-07-09T07:34:09Z,CLOSED,False,7,1,2,https://github.com/kevmitch, kmod: fix ndo_select_queue prototype for linux-4.19 ,2,[],https://github.com/NetSys/bess/pull/872,https://github.com/kevmitch,4,https://github.com/NetSys/bess/pull/872#issuecomment-451214422,"Just add a branch to the existing #ifdef. There is no use of the changed
argument inside the function, so there are no substantive changes
required.
I verified it now builds on 4.9, 4.18 and 4.19",Sorry for the delay. Was on vacation. Working on the CLA. Need to get clearance from higher up.,True,{}
NetSys/bess,https://github.com/NetSys/bess,872,2018-12-13T00:04:13Z,2019-07-09T07:34:05Z,2019-07-09T07:34:09Z,CLOSED,False,7,1,2,https://github.com/kevmitch, kmod: fix ndo_select_queue prototype for linux-4.19 ,2,[],https://github.com/NetSys/bess/pull/872,https://github.com/kevmitch,5,https://github.com/NetSys/bess/pull/872#issuecomment-509526623,"Just add a branch to the existing #ifdef. There is no use of the changed
argument inside the function, so there are no substantive changes
required.
I verified it now builds on 4.9, 4.18 and 4.19","I see it's already fixed. Sorry, I couldn't make this work.",True,{}
NetSys/bess,https://github.com/NetSys/bess,876,2019-01-07T16:07:21Z,2019-01-11T21:11:11Z,2019-01-11T21:14:34Z,MERGED,True,1,1,1,https://github.com/nemethf,packet.h: Use refcnt_ when AVX isn't available (fixes #853),1,[],https://github.com/NetSys/bess/pull/876,https://github.com/nemethf,1,https://github.com/NetSys/bess/pull/876,"I'd like to regularly compile bess on an old machine without AVX.  I'd also like to use the upstream code without any local modification.  So, I propose this PR, which is what @sangjinhan suggested as a quick fix in the discussion of issue #853.
Thank you.","I'd like to regularly compile bess on an old machine without AVX.  I'd also like to use the upstream code without any local modification.  So, I propose this PR, which is what @sangjinhan suggested as a quick fix in the discussion of issue #853.
Thank you.",True,{}
NetSys/bess,https://github.com/NetSys/bess,876,2019-01-07T16:07:21Z,2019-01-11T21:11:11Z,2019-01-11T21:14:34Z,MERGED,True,1,1,1,https://github.com/nemethf,packet.h: Use refcnt_ when AVX isn't available (fixes #853),1,[],https://github.com/NetSys/bess/pull/876,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/876#issuecomment-451991778,"I'd like to regularly compile bess on an old machine without AVX.  I'd also like to use the upstream code without any local modification.  So, I propose this PR, which is what @sangjinhan suggested as a quick fix in the discussion of issue #853.
Thank you.","Codecov Report

Merging #876 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #876   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4d83edc...254aa0a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,876,2019-01-07T16:07:21Z,2019-01-11T21:11:11Z,2019-01-11T21:14:34Z,MERGED,True,1,1,1,https://github.com/nemethf,packet.h: Use refcnt_ when AVX isn't available (fixes #853),1,[],https://github.com/NetSys/bess/pull/876,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/876#issuecomment-453658572,"I'd like to regularly compile bess on an old machine without AVX.  I'd also like to use the upstream code without any local modification.  So, I propose this PR, which is what @sangjinhan suggested as a quick fix in the discussion of issue #853.
Thank you.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,877,2019-01-09T12:46:40Z,2019-01-11T23:08:53Z,2019-01-12T07:13:56Z,MERGED,True,1,2,1,https://github.com/levaitamas,queue: Set watermarks correctly,1,[],https://github.com/NetSys/bess/pull/877,https://github.com/levaitamas,1,https://github.com/NetSys/bess/pull/877,"size_ must be set before adjusting waterlevels
Co-authored-by: Felician Nemeth nemethf@tmit.bme.hu","size_ must be set before adjusting waterlevels
Co-authored-by: Felician Nemeth nemethf@tmit.bme.hu",True,{}
NetSys/bess,https://github.com/NetSys/bess,877,2019-01-09T12:46:40Z,2019-01-11T23:08:53Z,2019-01-12T07:13:56Z,MERGED,True,1,2,1,https://github.com/levaitamas,queue: Set watermarks correctly,1,[],https://github.com/NetSys/bess/pull/877,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/877#issuecomment-452687770,"size_ must be set before adjusting waterlevels
Co-authored-by: Felician Nemeth nemethf@tmit.bme.hu","Codecov Report

Merging #877 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #877   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4d83edc...3642bc5. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,878,2019-01-11T20:04:07Z,2019-01-11T21:30:17Z,2019-01-11T23:00:33Z,CLOSED,False,1,1,1,https://github.com/sunghew,moduletests: Force run bessd,1,[],https://github.com/NetSys/bess/pull/878,https://github.com/sunghew,1,https://github.com/NetSys/bess/pull/878,Thanks to @shinae-woo for the proposed fix :),Thanks to @shinae-woo for the proposed fix :),True,{}
NetSys/bess,https://github.com/NetSys/bess,878,2019-01-11T20:04:07Z,2019-01-11T21:30:17Z,2019-01-11T23:00:33Z,CLOSED,False,1,1,1,https://github.com/sunghew,moduletests: Force run bessd,1,[],https://github.com/NetSys/bess/pull/878,https://github.com/sunghew,2,https://github.com/NetSys/bess/pull/878#issuecomment-453662869,Thanks to @shinae-woo for the proposed fix :),Oops.-k is the default.,True,{}
NetSys/bess,https://github.com/NetSys/bess,878,2019-01-11T20:04:07Z,2019-01-11T21:30:17Z,2019-01-11T23:00:33Z,CLOSED,False,1,1,1,https://github.com/sunghew,moduletests: Force run bessd,1,[],https://github.com/NetSys/bess/pull/878,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/878#issuecomment-453684099,Thanks to @shinae-woo for the proposed fix :),Sorry about it! But you definitely deserve a cat!,True,{}
NetSys/bess,https://github.com/NetSys/bess,879,2019-01-11T21:44:55Z,2019-01-12T00:37:57Z,2019-01-12T02:02:08Z,MERGED,True,16,10,4,https://github.com/sangjinhan,bessctl: add reconnection to 'daemon start',2,[],https://github.com/NetSys/bess/pull/879,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/879,"When bessctl tries to connects to the bessd gRPC server, it may be rejected with TCP RST if it is not fully up yet. Retry for 3 seconds in case of this transient failure. Since the time window of this race condition is very short (might happen only for a few milliseconds), 3 seconds should be enough.","When bessctl tries to connects to the bessd gRPC server, it may be rejected with TCP RST if it is not fully up yet. Retry for 3 seconds in case of this transient failure. Since the time window of this race condition is very short (might happen only for a few milliseconds), 3 seconds should be enough.",True,{}
NetSys/bess,https://github.com/NetSys/bess,879,2019-01-11T21:44:55Z,2019-01-12T00:37:57Z,2019-01-12T02:02:08Z,MERGED,True,16,10,4,https://github.com/sangjinhan,bessctl: add reconnection to 'daemon start',2,[],https://github.com/NetSys/bess/pull/879,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/879#issuecomment-453693456,"When bessctl tries to connects to the bessd gRPC server, it may be rejected with TCP RST if it is not fully up yet. Retry for 3 seconds in case of this transient failure. Since the time window of this race condition is very short (might happen only for a few milliseconds), 3 seconds should be enough.",@chris3torek Thank you for the review! Addressed the issues.,True,{}
NetSys/bess,https://github.com/NetSys/bess,879,2019-01-11T21:44:55Z,2019-01-12T00:37:57Z,2019-01-12T02:02:08Z,MERGED,True,16,10,4,https://github.com/sangjinhan,bessctl: add reconnection to 'daemon start',2,[],https://github.com/NetSys/bess/pull/879,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/879#issuecomment-453699705,"When bessctl tries to connects to the bessd gRPC server, it may be rejected with TCP RST if it is not fully up yet. Retry for 3 seconds in case of this transient failure. Since the time window of this race condition is very short (might happen only for a few milliseconds), 3 seconds should be enough.","Codecov Report

Merging #879 into master will increase coverage by 0.08%.
The diff coverage is 0%.


@@            Coverage Diff             @@
##           master     #879      +/-   ##
==========================================
+ Coverage   55.73%   55.82%   +0.08%     
==========================================
  Files           9        9              
  Lines        1150     1150              
==========================================
+ Hits          641      642       +1     
+ Misses        509      508       -1



Impacted Files
Coverage Δ





pybess/bess.py
40.25% <0%> (+0.2%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update fdaec0a...78ec39d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,879,2019-01-11T21:44:55Z,2019-01-12T00:37:57Z,2019-01-12T02:02:08Z,MERGED,True,16,10,4,https://github.com/sangjinhan,bessctl: add reconnection to 'daemon start',2,[],https://github.com/NetSys/bess/pull/879,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/879#issuecomment-453703068,"When bessctl tries to connects to the bessd gRPC server, it may be rejected with TCP RST if it is not fully up yet. Retry for 3 seconds in case of this transient failure. Since the time window of this race condition is very short (might happen only for a few milliseconds), 3 seconds should be enough.",where is my cat..?,True,{}
NetSys/bess,https://github.com/NetSys/bess,879,2019-01-11T21:44:55Z,2019-01-12T00:37:57Z,2019-01-12T02:02:08Z,MERGED,True,16,10,4,https://github.com/sangjinhan,bessctl: add reconnection to 'daemon start',2,[],https://github.com/NetSys/bess/pull/879,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/879#issuecomment-453710247,"When bessctl tries to connects to the bessd gRPC server, it may be rejected with TCP RST if it is not fully up yet. Retry for 3 seconds in case of this transient failure. Since the time window of this race condition is very short (might happen only for a few milliseconds), 3 seconds should be enough.",@sunghew,True,{}
NetSys/bess,https://github.com/NetSys/bess,880,2019-01-11T22:33:40Z,2019-01-11T23:03:33Z,2020-06-24T06:15:19Z,MERGED,True,10,10,2,https://github.com/sangjinhan,module_test: fix invalid IPv4 address format,1,[],https://github.com/NetSys/bess/pull/880,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/880,"recent versions of scapy seem to use libc inet_pton whenever possible
in place of inet_aton. inet_pton is much stricter when it comes to
formatting; ""65.43.21.00"" is illegal because of two 0s.","recent versions of scapy seem to use libc inet_pton whenever possible
in place of inet_aton. inet_pton is much stricter when it comes to
formatting; ""65.43.21.00"" is illegal because of two 0s.",True,{}
NetSys/bess,https://github.com/NetSys/bess,880,2019-01-11T22:33:40Z,2019-01-11T23:03:33Z,2020-06-24T06:15:19Z,MERGED,True,10,10,2,https://github.com/sangjinhan,module_test: fix invalid IPv4 address format,1,[],https://github.com/NetSys/bess/pull/880,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/880#issuecomment-453680849,"recent versions of scapy seem to use libc inet_pton whenever possible
in place of inet_aton. inet_pton is much stricter when it comes to
formatting; ""65.43.21.00"" is illegal because of two 0s.","Codecov Report

Merging #880 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #880   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 712035d...38bb77f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,880,2019-01-11T22:33:40Z,2019-01-11T23:03:33Z,2020-06-24T06:15:19Z,MERGED,True,10,10,2,https://github.com/sangjinhan,module_test: fix invalid IPv4 address format,1,[],https://github.com/NetSys/bess/pull/880,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/880#issuecomment-453684665,"recent versions of scapy seem to use libc inet_pton whenever possible
in place of inet_aton. inet_pton is much stricter when it comes to
formatting; ""65.43.21.00"" is illegal because of two 0s.","Merged, Thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,880,2019-01-11T22:33:40Z,2019-01-11T23:03:33Z,2020-06-24T06:15:19Z,MERGED,True,10,10,2,https://github.com/sangjinhan,module_test: fix invalid IPv4 address format,1,[],https://github.com/NetSys/bess/pull/880,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/880#issuecomment-453685316,"recent versions of scapy seem to use libc inet_pton whenever possible
in place of inet_aton. inet_pton is much stricter when it comes to
formatting; ""65.43.21.00"" is illegal because of two 0s.",My guess is that pip is now fetching a newer version of scapy...,True,{}
NetSys/bess,https://github.com/NetSys/bess,882,2019-01-17T23:53:11Z,2019-01-18T00:08:07Z,2019-01-18T00:08:12Z,MERGED,True,3,3,1,https://github.com/sangjinhan,mempool: Alloc hugepages from any socket,1,[],https://github.com/NetSys/bess/pull/882,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/882,"... when it is being done for unittest. For test purposes it doesn't matter which node the hugepage came from. Unittest sometimes fails especially when memory is being highly utilized, even if hugepages are available from NUMA nodes other than node 0.","... when it is being done for unittest. For test purposes it doesn't matter which node the hugepage came from. Unittest sometimes fails especially when memory is being highly utilized, even if hugepages are available from NUMA nodes other than node 0.",True,{}
NetSys/bess,https://github.com/NetSys/bess,882,2019-01-17T23:53:11Z,2019-01-18T00:08:07Z,2019-01-18T00:08:12Z,MERGED,True,3,3,1,https://github.com/sangjinhan,mempool: Alloc hugepages from any socket,1,[],https://github.com/NetSys/bess/pull/882,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/882#issuecomment-455378118,"... when it is being done for unittest. For test purposes it doesn't matter which node the hugepage came from. Unittest sometimes fails especially when memory is being highly utilized, even if hugepages are available from NUMA nodes other than node 0.","Codecov Report

Merging #882 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #882   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 11a2d72...8b567bc. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,883,2019-01-22T04:44:58Z,2019-01-22T06:04:02Z,2020-06-24T06:15:07Z,MERGED,True,28,32,2,https://github.com/sangjinhan,unittest: adjust unittest timeout,1,[],https://github.com/NetSys/bess/pull/883,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/883,"Some default timeouts (about 2 seconds) turn out to be too short, especially when the system is highly overloaded.","Some default timeouts (about 2 seconds) turn out to be too short, especially when the system is highly overloaded.",True,{}
NetSys/bess,https://github.com/NetSys/bess,883,2019-01-22T04:44:58Z,2019-01-22T06:04:02Z,2020-06-24T06:15:07Z,MERGED,True,28,32,2,https://github.com/sangjinhan,unittest: adjust unittest timeout,1,[],https://github.com/NetSys/bess/pull/883,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/883#issuecomment-456271120,"Some default timeouts (about 2 seconds) turn out to be too short, especially when the system is highly overloaded.","Codecov Report

Merging #883 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #883   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 82d948e...2da18ad. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,883,2019-01-22T04:44:58Z,2019-01-22T06:04:02Z,2020-06-24T06:15:07Z,MERGED,True,28,32,2,https://github.com/sangjinhan,unittest: adjust unittest timeout,1,[],https://github.com/NetSys/bess/pull/883,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/883#issuecomment-456288276,"Some default timeouts (about 2 seconds) turn out to be too short, especially when the system is highly overloaded.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,884,2019-01-22T05:33:45Z,2019-01-22T06:05:38Z,2020-06-24T06:15:09Z,MERGED,True,5,3,1,https://github.com/sangjinhan,module_test: do not use hugepage for module test,1,[],https://github.com/NetSys/bess/pull/884,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/884,hugepage is irrelevant since no physical NIC port is involved,hugepage is irrelevant since no physical NIC port is involved,True,{}
NetSys/bess,https://github.com/NetSys/bess,884,2019-01-22T05:33:45Z,2019-01-22T06:05:38Z,2020-06-24T06:15:09Z,MERGED,True,5,3,1,https://github.com/sangjinhan,module_test: do not use hugepage for module test,1,[],https://github.com/NetSys/bess/pull/884,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/884#issuecomment-456278587,hugepage is irrelevant since no physical NIC port is involved,"Codecov Report

Merging #884 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #884   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 82d948e...1f557c7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,884,2019-01-22T05:33:45Z,2019-01-22T06:05:38Z,2020-06-24T06:15:09Z,MERGED,True,5,3,1,https://github.com/sangjinhan,module_test: do not use hugepage for module test,1,[],https://github.com/NetSys/bess/pull/884,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/884#issuecomment-456288394,hugepage is irrelevant since no physical NIC port is involved,,True,{}
NetSys/bess,https://github.com/NetSys/bess,885,2019-01-25T19:22:52Z,2019-01-25T19:56:06Z,2019-01-25T20:07:52Z,MERGED,True,5,2,1,https://github.com/sangjinhan,build: Use a make jobserver if available,1,[],https://github.com/NetSys/bess/pull/885,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/885,"build.py launches make to build DPDK and BESS. If build.py is launched
from a parent make process, the -jN option (along a few others) given
to the parent would not propagate to the submake processes.
This commit checks if build.py script was invoked from parent make,
and if so, propagates make options to submake processes.","build.py launches make to build DPDK and BESS. If build.py is launched
from a parent make process, the -jN option (along a few others) given
to the parent would not propagate to the submake processes.
This commit checks if build.py script was invoked from parent make,
and if so, propagates make options to submake processes.",True,{}
NetSys/bess,https://github.com/NetSys/bess,885,2019-01-25T19:22:52Z,2019-01-25T19:56:06Z,2019-01-25T20:07:52Z,MERGED,True,5,2,1,https://github.com/sangjinhan,build: Use a make jobserver if available,1,[],https://github.com/NetSys/bess/pull/885,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/885#issuecomment-457697956,"build.py launches make to build DPDK and BESS. If build.py is launched
from a parent make process, the -jN option (along a few others) given
to the parent would not propagate to the submake processes.
This commit checks if build.py script was invoked from parent make,
and if so, propagates make options to submake processes.","Codecov Report

Merging #885 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #885      +/-   ##
==========================================
+ Coverage   55.73%   55.82%   +0.08%     
==========================================
  Files           9        9              
  Lines        1150     1150              
==========================================
+ Hits          641      642       +1     
+ Misses        509      508       -1



Impacted Files
Coverage Δ





pybess/bess.py
40.25% <0%> (+0.2%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 40787d8...7db5526. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,885,2019-01-25T19:22:52Z,2019-01-25T19:56:06Z,2019-01-25T20:07:52Z,MERGED,True,5,2,1,https://github.com/sangjinhan,build: Use a make jobserver if available,1,[],https://github.com/NetSys/bess/pull/885,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/885#issuecomment-457705839,"build.py launches make to build DPDK and BESS. If build.py is launched
from a parent make process, the -jN option (along a few others) given
to the parent would not propagate to the submake processes.
This commit checks if build.py script was invoked from parent make,
and if so, propagates make options to submake processes.","oh, yikes-- I didn't refresh before I merged and missed your comment, @chris3torek. sorry about that",True,{}
NetSys/bess,https://github.com/NetSys/bess,885,2019-01-25T19:22:52Z,2019-01-25T19:56:06Z,2019-01-25T20:07:52Z,MERGED,True,5,2,1,https://github.com/sangjinhan,build: Use a make jobserver if available,1,[],https://github.com/NetSys/bess/pull/885,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/885#issuecomment-457706092,"build.py launches make to build DPDK and BESS. If build.py is launched
from a parent make process, the -jN option (along a few others) given
to the parent would not propagate to the submake processes.
This commit checks if build.py script was invoked from parent make,
and if so, propagates make options to submake processes.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,886,2019-01-26T01:11:30Z,2019-01-26T20:58:39Z,2019-01-26T20:59:11Z,MERGED,True,26,3,1,https://github.com/chris3torek,build: handle GNU make $MAKEFLAGS oddity,1,[],https://github.com/NetSys/bess/pull/886,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/886,"It turns out that $MAKEFLAGS is sometimes spelled, e.g.,
""w -j4 --jobserver..."" rather than ""-w -j4 --jobserver..."".
Check for this case and handle it.
Cache the result of the first makeflags() call in subsequent
calls.","It turns out that $MAKEFLAGS is sometimes spelled, e.g.,
""w -j4 --jobserver..."" rather than ""-w -j4 --jobserver..."".
Check for this case and handle it.
Cache the result of the first makeflags() call in subsequent
calls.",True,{}
NetSys/bess,https://github.com/NetSys/bess,886,2019-01-26T01:11:30Z,2019-01-26T20:58:39Z,2019-01-26T20:59:11Z,MERGED,True,26,3,1,https://github.com/chris3torek,build: handle GNU make $MAKEFLAGS oddity,1,[],https://github.com/NetSys/bess/pull/886,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/886#issuecomment-457787757,"It turns out that $MAKEFLAGS is sometimes spelled, e.g.,
""w -j4 --jobserver..."" rather than ""-w -j4 --jobserver..."".
Check for this case and handle it.
Cache the result of the first makeflags() call in subsequent
calls.","Codecov Report

Merging #886 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #886   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f3bbf90...ea9165e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,886,2019-01-26T01:11:30Z,2019-01-26T20:58:39Z,2019-01-26T20:59:11Z,MERGED,True,26,3,1,https://github.com/chris3torek,build: handle GNU make $MAKEFLAGS oddity,1,[],https://github.com/NetSys/bess/pull/886,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/886#issuecomment-457865517,"It turns out that $MAKEFLAGS is sometimes spelled, e.g.,
""w -j4 --jobserver..."" rather than ""-w -j4 --jobserver..."".
Check for this case and handle it.
Cache the result of the first makeflags() call in subsequent
calls.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,887,2019-01-26T04:02:16Z,2019-01-26T21:03:14Z,2019-01-26T21:03:30Z,MERGED,True,3,0,1,https://github.com/gomesj,kmod: defer free_netdev() call to kernel on teardown for versions 4.11+,1,[],https://github.com/NetSys/bess/pull/887,https://github.com/gomesj,1,https://github.com/NetSys/bess/pull/887,"According to https://www.spinics.net/lists/netdev/msg439014.html,
priv_destructor should not perform free_netdev(), needs_free_netdev
should be set instead.","According to https://www.spinics.net/lists/netdev/msg439014.html,
priv_destructor should not perform free_netdev(), needs_free_netdev
should be set instead.",True,{}
NetSys/bess,https://github.com/NetSys/bess,887,2019-01-26T04:02:16Z,2019-01-26T21:03:14Z,2019-01-26T21:03:30Z,MERGED,True,3,0,1,https://github.com/gomesj,kmod: defer free_netdev() call to kernel on teardown for versions 4.11+,1,[],https://github.com/NetSys/bess/pull/887,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/887#issuecomment-457800228,"According to https://www.spinics.net/lists/netdev/msg439014.html,
priv_destructor should not perform free_netdev(), needs_free_netdev
should be set instead.","Codecov Report

Merging #887 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #887   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f3bbf90...0a2bb6d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,887,2019-01-26T04:02:16Z,2019-01-26T21:03:14Z,2019-01-26T21:03:30Z,MERGED,True,3,0,1,https://github.com/gomesj,kmod: defer free_netdev() call to kernel on teardown for versions 4.11+,1,[],https://github.com/NetSys/bess/pull/887,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/887#issuecomment-457865793,"According to https://www.spinics.net/lists/netdev/msg439014.html,
priv_destructor should not perform free_netdev(), needs_free_netdev
should be set instead.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,888,2019-01-26T21:37:14Z,2019-01-26T22:11:18Z,2020-06-24T06:15:05Z,MERGED,True,5,2,1,https://github.com/sangjinhan, build: disable `close_fds` for submake call,2,[],https://github.com/NetSys/bess/pull/888,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/888,"Unlike Python 2, the default value for the close_fds argument for Popen is true. This is problematic in case we want to use the GNU make jobserver, since it requires that file descriptors (pipe fds to jobserver) remain open in the submake process.","Unlike Python 2, the default value for the close_fds argument for Popen is true. This is problematic in case we want to use the GNU make jobserver, since it requires that file descriptors (pipe fds to jobserver) remain open in the submake process.",True,{}
NetSys/bess,https://github.com/NetSys/bess,888,2019-01-26T21:37:14Z,2019-01-26T22:11:18Z,2020-06-24T06:15:05Z,MERGED,True,5,2,1,https://github.com/sangjinhan, build: disable `close_fds` for submake call,2,[],https://github.com/NetSys/bess/pull/888,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/888#issuecomment-457868744,"Unlike Python 2, the default value for the close_fds argument for Popen is true. This is problematic in case we want to use the GNU make jobserver, since it requires that file descriptors (pipe fds to jobserver) remain open in the submake process.","Codecov Report

Merging #888 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #888   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d400ebe...6d4b01a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,888,2019-01-26T21:37:14Z,2019-01-26T22:11:18Z,2020-06-24T06:15:05Z,MERGED,True,5,2,1,https://github.com/sangjinhan, build: disable `close_fds` for submake call,2,[],https://github.com/NetSys/bess/pull/888,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/888#issuecomment-457870236,"Unlike Python 2, the default value for the close_fds argument for Popen is true. This is problematic in case we want to use the GNU make jobserver, since it requires that file descriptors (pipe fds to jobserver) remain open in the submake process.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,891,2019-02-01T23:01:04Z,2019-02-10T07:41:32Z,2019-02-10T07:53:54Z,MERGED,True,8,0,1,https://github.com/chris3torek,CreateModule: call Destroy on early failures,1,[],https://github.com/NetSys/bess/pull/891,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/891,"If we are not going to insert a just-created module
into the module graph after all, be sure to call its
m->Destroy() to ditch any internal tasks that depend
on the module's existence.
Fixes #890.","If we are not going to insert a just-created module
into the module graph after all, be sure to call its
m->Destroy() to ditch any internal tasks that depend
on the module's existence.
Fixes #890.",True,{}
NetSys/bess,https://github.com/NetSys/bess,891,2019-02-01T23:01:04Z,2019-02-10T07:41:32Z,2019-02-10T07:53:54Z,MERGED,True,8,0,1,https://github.com/chris3torek,CreateModule: call Destroy on early failures,1,[],https://github.com/NetSys/bess/pull/891,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/891#issuecomment-459900245,"If we are not going to insert a just-created module
into the module graph after all, be sure to call its
m->Destroy() to ditch any internal tasks that depend
on the module's existence.
Fixes #890.","Codecov Report

Merging #891 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #891   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6ad065c...9af8f59. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,891,2019-02-01T23:01:04Z,2019-02-10T07:41:32Z,2019-02-10T07:53:54Z,MERGED,True,8,0,1,https://github.com/chris3torek,CreateModule: call Destroy on early failures,1,[],https://github.com/NetSys/bess/pull/891,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/891#issuecomment-462111562,"If we are not going to insert a just-created module
into the module graph after all, be sure to call its
m->Destroy() to ditch any internal tasks that depend
on the module's existence.
Fixes #890.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,892,2019-02-06T19:05:45Z,2019-02-10T07:58:27Z,2019-02-15T17:46:46Z,MERGED,True,4,3,1,https://github.com/melvinw,drivers/pmd: fix stats reporting for net_e1000_igb,1,[],https://github.com/NetSys/bess/pull/892,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/892,"I've been testing against I350 and I354 and they appear to not report per-queue stats. I'm not sure about 82575, 82576, 82580, I210, I211, and DH89xx though.","I've been testing against I350 and I354 and they appear to not report per-queue stats. I'm not sure about 82575, 82576, 82580, I210, I211, and DH89xx though.",True,{}
NetSys/bess,https://github.com/NetSys/bess,892,2019-02-06T19:05:45Z,2019-02-10T07:58:27Z,2019-02-15T17:46:46Z,MERGED,True,4,3,1,https://github.com/melvinw,drivers/pmd: fix stats reporting for net_e1000_igb,1,[],https://github.com/NetSys/bess/pull/892,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/892#issuecomment-461153783,"I've been testing against I350 and I354 and they appear to not report per-queue stats. I'm not sure about 82575, 82576, 82580, I210, I211, and DH89xx though.","Codecov Report

Merging #892 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #892   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6ad065c...1600a3a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,892,2019-02-06T19:05:45Z,2019-02-10T07:58:27Z,2019-02-15T17:46:46Z,MERGED,True,4,3,1,https://github.com/melvinw,drivers/pmd: fix stats reporting for net_e1000_igb,1,[],https://github.com/NetSys/bess/pull/892,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/892#issuecomment-462111812,"I've been testing against I350 and I354 and they appear to not report per-queue stats. I'm not sure about 82575, 82576, 82580, I210, I211, and DH89xx though.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,893,2019-02-11T17:15:06Z,2019-03-07T19:30:14Z,2019-03-07T19:32:54Z,MERGED,True,3,3,2,https://github.com/nemethf,sample_plugin: Follow recent API changes,1,[],https://github.com/NetSys/bess/pull/893,https://github.com/nemethf,1,https://github.com/NetSys/bess/pull/893,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,893,2019-02-11T17:15:06Z,2019-03-07T19:30:14Z,2019-03-07T19:32:54Z,MERGED,True,3,3,2,https://github.com/nemethf,sample_plugin: Follow recent API changes,1,[],https://github.com/NetSys/bess/pull/893,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/893#issuecomment-462419340,,"Codecov Report

Merging #893 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #893      +/-   ##
==========================================
- Coverage   55.82%   55.73%   -0.09%     
==========================================
  Files           9        9              
  Lines        1150     1150              
==========================================
- Hits          642      641       -1     
- Misses        508      509       +1



Impacted Files
Coverage Δ





pybess/bess.py
40.04% <0%> (-0.21%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 43bebd3...d398a37. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,893,2019-02-11T17:15:06Z,2019-03-07T19:30:14Z,2019-03-07T19:32:54Z,MERGED,True,3,3,2,https://github.com/nemethf,sample_plugin: Follow recent API changes,1,[],https://github.com/NetSys/bess/pull/893,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/893#issuecomment-470662891,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,894,2019-02-22T19:47:03Z,2019-02-22T21:12:46Z,2020-06-24T06:15:04Z,MERGED,True,1,1,1,https://github.com/sangjinhan,mem: do not test zero-byte allocation,1,[],https://github.com/NetSys/bess/pull/894,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/894,The allocator is supposed to reject memory block allocation with size 0. The unittest used to often try it when rand() % 1048576 == 0.,The allocator is supposed to reject memory block allocation with size 0. The unittest used to often try it when rand() % 1048576 == 0.,True,{}
NetSys/bess,https://github.com/NetSys/bess,894,2019-02-22T19:47:03Z,2019-02-22T21:12:46Z,2020-06-24T06:15:04Z,MERGED,True,1,1,1,https://github.com/sangjinhan,mem: do not test zero-byte allocation,1,[],https://github.com/NetSys/bess/pull/894,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/894#issuecomment-466527786,The allocator is supposed to reject memory block allocation with size 0. The unittest used to often try it when rand() % 1048576 == 0.,"Codecov Report

Merging #894 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #894   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 43bebd3...29271bf. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,894,2019-02-22T19:47:03Z,2019-02-22T21:12:46Z,2020-06-24T06:15:04Z,MERGED,True,1,1,1,https://github.com/sangjinhan,mem: do not test zero-byte allocation,1,[],https://github.com/NetSys/bess/pull/894,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/894#issuecomment-466549788,The allocator is supposed to reject memory block allocation with size 0. The unittest used to often try it when rand() % 1048576 == 0.,,True,{}
NetSys/bess,https://github.com/NetSys/bess,896,2019-02-26T02:56:45Z,,2020-04-10T20:13:16Z,OPEN,False,6,1,1,https://github.com/nrdmao,kmod: adapt ndo_select_queue prototype to linux-4.19,1,[],https://github.com/NetSys/bess/pull/896,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/896,"Resubmitting this patch with since I have a signed CLA.
There is no use of the changed argument in the function, so there are no
substantive changes required.","Resubmitting this patch with since I have a signed CLA.
There is no use of the changed argument in the function, so there are no
substantive changes required.",True,{}
NetSys/bess,https://github.com/NetSys/bess,896,2019-02-26T02:56:45Z,,2020-04-10T20:13:16Z,OPEN,False,6,1,1,https://github.com/nrdmao,kmod: adapt ndo_select_queue prototype to linux-4.19,1,[],https://github.com/NetSys/bess/pull/896,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/896#issuecomment-467275831,"Resubmitting this patch with since I have a signed CLA.
There is no use of the changed argument in the function, so there are no
substantive changes required.","Codecov Report

Merging #896 into master will not change coverage by %.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #896   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f9e27e6...cdcbf18. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,896,2019-02-26T02:56:45Z,,2020-04-10T20:13:16Z,OPEN,False,6,1,1,https://github.com/nrdmao,kmod: adapt ndo_select_queue prototype to linux-4.19,1,[],https://github.com/NetSys/bess/pull/896,https://github.com/nrdmao,3,https://github.com/NetSys/bess/pull/896#issuecomment-472563280,"Resubmitting this patch with since I have a signed CLA.
There is no use of the changed argument in the function, so there are no
substantive changes required.",Any reason why this patch can't merge now?,True,{}
NetSys/bess,https://github.com/NetSys/bess,896,2019-02-26T02:56:45Z,,2020-04-10T20:13:16Z,OPEN,False,6,1,1,https://github.com/nrdmao,kmod: adapt ndo_select_queue prototype to linux-4.19,1,[],https://github.com/NetSys/bess/pull/896,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/896#issuecomment-472590556,"Resubmitting this patch with since I have a signed CLA.
There is no use of the changed argument in the function, so there are no
substantive changes required.","Oh sorry. It seems that the CLA thing requires ""all contributors"" have singed it, as indicated by the error message below.",True,{}
NetSys/bess,https://github.com/NetSys/bess,897,2019-02-27T23:52:26Z,2019-03-06T19:57:12Z,2019-03-06T19:58:06Z,MERGED,True,4,4,1,https://github.com/nrdmao,Set proper dependencies on protobuf header files for some targets.,1,[],https://github.com/NetSys/bess/pull/897,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/897,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,897,2019-02-27T23:52:26Z,2019-03-06T19:57:12Z,2019-03-06T19:58:06Z,MERGED,True,4,4,1,https://github.com/nrdmao,Set proper dependencies on protobuf header files for some targets.,1,[],https://github.com/NetSys/bess/pull/897,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/897#issuecomment-468080995,,"Codecov Report

Merging #897 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #897   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f9e27e6...1fe94c1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,897,2019-02-27T23:52:26Z,2019-03-06T19:57:12Z,2019-03-06T19:58:06Z,MERGED,True,4,4,1,https://github.com/nrdmao,Set proper dependencies on protobuf header files for some targets.,1,[],https://github.com/NetSys/bess/pull/897,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/897#issuecomment-470253544,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,898,2019-03-05T20:21:52Z,2019-03-08T18:04:55Z,2019-03-08T18:09:03Z,MERGED,True,48,52,5,https://github.com/nrdmao,Support from_paddr() for PacketPools. Fix up vport.cc,1,[],https://github.com/NetSys/bess/pull/898,https://github.com/nrdmao,1,https://github.com/NetSys/bess/pull/898,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,898,2019-03-05T20:21:52Z,2019-03-08T18:04:55Z,2019-03-08T18:09:03Z,MERGED,True,48,52,5,https://github.com/nrdmao,Support from_paddr() for PacketPools. Fix up vport.cc,1,[],https://github.com/NetSys/bess/pull/898,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/898#issuecomment-469848617,,"Codecov Report

Merging #898 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #898   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f9e27e6...b75e94c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,898,2019-03-05T20:21:52Z,2019-03-08T18:04:55Z,2019-03-08T18:09:03Z,MERGED,True,48,52,5,https://github.com/nrdmao,Support from_paddr() for PacketPools. Fix up vport.cc,1,[],https://github.com/NetSys/bess/pull/898,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/898#issuecomment-471022351,,"tested on my machine and worked well, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,899,2019-03-09T01:46:38Z,2019-03-12T05:41:47Z,2020-06-24T06:15:02Z,MERGED,True,13,9,2,https://github.com/sangjinhan,Fix vport kernel panic when network namespace is closed,3,[],https://github.com/NetSys/bess/pull/899,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/899,"The network interface may be terminated involuntarily (i.e., other than calling SN_IOC_RELEASE_HOSTNIC). If that has happened, filp->private_data ends up pointing to freed memory space. When it is accessed by SN_IOC_RELEASE_HOSTNIC later, kernel may crash due to page fault. The problem can be easily reproduced when a network namespace is closed. VPort belonging to that namespace are also forcibly closed, thus ioctl(SN_IOC_RELEASE_HOSTNIC) later causes kernel panic.
This patch defers the memory space until its associated file/inode is released. One can test it by running bessctl run port/vport_latency.","The network interface may be terminated involuntarily (i.e., other than calling SN_IOC_RELEASE_HOSTNIC). If that has happened, filp->private_data ends up pointing to freed memory space. When it is accessed by SN_IOC_RELEASE_HOSTNIC later, kernel may crash due to page fault. The problem can be easily reproduced when a network namespace is closed. VPort belonging to that namespace are also forcibly closed, thus ioctl(SN_IOC_RELEASE_HOSTNIC) later causes kernel panic.
This patch defers the memory space until its associated file/inode is released. One can test it by running bessctl run port/vport_latency.",True,{}
NetSys/bess,https://github.com/NetSys/bess,899,2019-03-09T01:46:38Z,2019-03-12T05:41:47Z,2020-06-24T06:15:02Z,MERGED,True,13,9,2,https://github.com/sangjinhan,Fix vport kernel panic when network namespace is closed,3,[],https://github.com/NetSys/bess/pull/899,https://github.com/sangjinhan,2,https://github.com/NetSys/bess/pull/899#issuecomment-471134512,"The network interface may be terminated involuntarily (i.e., other than calling SN_IOC_RELEASE_HOSTNIC). If that has happened, filp->private_data ends up pointing to freed memory space. When it is accessed by SN_IOC_RELEASE_HOSTNIC later, kernel may crash due to page fault. The problem can be easily reproduced when a network namespace is closed. VPort belonging to that namespace are also forcibly closed, thus ioctl(SN_IOC_RELEASE_HOSTNIC) later causes kernel panic.
This patch defers the memory space until its associated file/inode is released. One can test it by running bessctl run port/vport_latency.",This should fix #845,True,{}
NetSys/bess,https://github.com/NetSys/bess,899,2019-03-09T01:46:38Z,2019-03-12T05:41:47Z,2020-06-24T06:15:02Z,MERGED,True,13,9,2,https://github.com/sangjinhan,Fix vport kernel panic when network namespace is closed,3,[],https://github.com/NetSys/bess/pull/899,https://github.com/apps/codecov,3,https://github.com/NetSys/bess/pull/899#issuecomment-471135256,"The network interface may be terminated involuntarily (i.e., other than calling SN_IOC_RELEASE_HOSTNIC). If that has happened, filp->private_data ends up pointing to freed memory space. When it is accessed by SN_IOC_RELEASE_HOSTNIC later, kernel may crash due to page fault. The problem can be easily reproduced when a network namespace is closed. VPort belonging to that namespace are also forcibly closed, thus ioctl(SN_IOC_RELEASE_HOSTNIC) later causes kernel panic.
This patch defers the memory space until its associated file/inode is released. One can test it by running bessctl run port/vport_latency.","Codecov Report

Merging #899 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #899   +/-   ##
=======================================
  Coverage   55.82%   55.82%           
=======================================
  Files           9        9           
  Lines        1150     1150           
=======================================
  Hits          642      642           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a91da7a...b851fb0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,899,2019-03-09T01:46:38Z,2019-03-12T05:41:47Z,2020-06-24T06:15:02Z,MERGED,True,13,9,2,https://github.com/sangjinhan,Fix vport kernel panic when network namespace is closed,3,[],https://github.com/NetSys/bess/pull/899,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/899#issuecomment-471865194,"The network interface may be terminated involuntarily (i.e., other than calling SN_IOC_RELEASE_HOSTNIC). If that has happened, filp->private_data ends up pointing to freed memory space. When it is accessed by SN_IOC_RELEASE_HOSTNIC later, kernel may crash due to page fault. The problem can be easily reproduced when a network namespace is closed. VPort belonging to that namespace are also forcibly closed, thus ioctl(SN_IOC_RELEASE_HOSTNIC) later causes kernel panic.
This patch defers the memory space until its associated file/inode is released. One can test it by running bessctl run port/vport_latency.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,900,2019-03-12T05:35:47Z,2019-03-21T21:04:43Z,2020-06-24T06:15:01Z,MERGED,True,417,7,6,https://github.com/sangjinhan,Add an HTTP server for pipeline monitoring,5,[],https://github.com/NetSys/bess/pull/900,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/900,"show pipeline / monitor pipeline is a useful tool to monitor the BESS dataflow graph. However, the ascii diagram quickly becomes illegible as the graph grows in a non-trivial manner. One can generate an SVG file in the bessctl CLI, but it is cumbersome and not capable of real-time monitoring.
This PR creates a new bessctl command, bessctl http [address] [port], which runs an HTTP server to show the current dataflow graph. Other features, such as port/TC monitoring, may be added later.","show pipeline / monitor pipeline is a useful tool to monitor the BESS dataflow graph. However, the ascii diagram quickly becomes illegible as the graph grows in a non-trivial manner. One can generate an SVG file in the bessctl CLI, but it is cumbersome and not capable of real-time monitoring.
This PR creates a new bessctl command, bessctl http [address] [port], which runs an HTTP server to show the current dataflow graph. Other features, such as port/TC monitoring, may be added later.",True,{'ROCKET': ['https://github.com/changlan']}
NetSys/bess,https://github.com/NetSys/bess,900,2019-03-12T05:35:47Z,2019-03-21T21:04:43Z,2020-06-24T06:15:01Z,MERGED,True,417,7,6,https://github.com/sangjinhan,Add an HTTP server for pipeline monitoring,5,[],https://github.com/NetSys/bess/pull/900,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/900#issuecomment-471865899,"show pipeline / monitor pipeline is a useful tool to monitor the BESS dataflow graph. However, the ascii diagram quickly becomes illegible as the graph grows in a non-trivial manner. One can generate an SVG file in the bessctl CLI, but it is cumbersome and not capable of real-time monitoring.
This PR creates a new bessctl command, bessctl http [address] [port], which runs an HTTP server to show the current dataflow graph. Other features, such as port/TC monitoring, may be added later.","Codecov Report

Merging #900 into master will increase coverage by 0.04%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #900      +/-   ##
==========================================
+ Coverage   55.73%   55.78%   +0.04%     
==========================================
  Files           9        9              
  Lines        1150     1149       -1     
==========================================
  Hits          641      641              
+ Misses        509      508       -1



Impacted Files
Coverage Δ





pybess/bess.py
40.12% <100%> (+0.08%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 98a936d...60ef7c4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,900,2019-03-12T05:35:47Z,2019-03-21T21:04:43Z,2020-06-24T06:15:01Z,MERGED,True,417,7,6,https://github.com/sangjinhan,Add an HTTP server for pipeline monitoring,5,[],https://github.com/NetSys/bess/pull/900,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/900#issuecomment-475018560,"show pipeline / monitor pipeline is a useful tool to monitor the BESS dataflow graph. However, the ascii diagram quickly becomes illegible as the graph grows in a non-trivial manner. One can generate an SVG file in the bessctl CLI, but it is cumbersome and not capable of real-time monitoring.
This PR creates a new bessctl command, bessctl http [address] [port], which runs an HTTP server to show the current dataflow graph. Other features, such as port/TC monitoring, may be added later.",@ericcarino Could you please take a quick look at the javascript code to see if anything is (terribly) broken?,True,{}
NetSys/bess,https://github.com/NetSys/bess,900,2019-03-12T05:35:47Z,2019-03-21T21:04:43Z,2020-06-24T06:15:01Z,MERGED,True,417,7,6,https://github.com/sangjinhan,Add an HTTP server for pipeline monitoring,5,[],https://github.com/NetSys/bess/pull/900,https://github.com/shinae-woo,4,https://github.com/NetSys/bess/pull/900#issuecomment-475401842,"show pipeline / monitor pipeline is a useful tool to monitor the BESS dataflow graph. However, the ascii diagram quickly becomes illegible as the graph grows in a non-trivial manner. One can generate an SVG file in the bessctl CLI, but it is cumbersome and not capable of real-time monitoring.
This PR creates a new bessctl command, bessctl http [address] [port], which runs an HTTP server to show the current dataflow graph. Other features, such as port/TC monitoring, may be added later.",Thank you for doing this!,True,{}
NetSys/bess,https://github.com/NetSys/bess,904,2019-03-29T18:44:12Z,,2020-07-06T09:10:14Z,OPEN,False,15,1,4,https://github.com/trozet,Adds L2 mac-learning to L2Forward module,1,[],https://github.com/NetSys/bess/pull/904,https://github.com/trozet,1,https://github.com/NetSys/bess/pull/904,"New learn mode for the L2Forward module allows MAC address learning. The
incoming packets are added to the L2 FIB with the source MAC address and
incoming gate. Therefore multiple input gates are now allowed for this
module, and should be used when using learn mode. The output gates used
should mirror the same ID used for input gates for learn to work
correctly. For example:
tcam::L2Forward(learn=True)
inaf = PortInc(port=p0)
in86 = PortInc(port=p1)
inaf -> 1:tcam
in86 -> 2:tcam
outaf = PortOut(port=p0)
out86 = PortOut(port=p1)
tcam:2 -> out86
tcam:1 -> outaf","New learn mode for the L2Forward module allows MAC address learning. The
incoming packets are added to the L2 FIB with the source MAC address and
incoming gate. Therefore multiple input gates are now allowed for this
module, and should be used when using learn mode. The output gates used
should mirror the same ID used for input gates for learn to work
correctly. For example:
tcam::L2Forward(learn=True)
inaf = PortInc(port=p0)
in86 = PortInc(port=p1)
inaf -> 1:tcam
in86 -> 2:tcam
outaf = PortOut(port=p0)
out86 = PortOut(port=p1)
tcam:2 -> out86
tcam:1 -> outaf",True,{}
NetSys/bess,https://github.com/NetSys/bess,904,2019-03-29T18:44:12Z,,2020-07-06T09:10:14Z,OPEN,False,15,1,4,https://github.com/trozet,Adds L2 mac-learning to L2Forward module,1,[],https://github.com/NetSys/bess/pull/904,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/904#issuecomment-478114346,"New learn mode for the L2Forward module allows MAC address learning. The
incoming packets are added to the L2 FIB with the source MAC address and
incoming gate. Therefore multiple input gates are now allowed for this
module, and should be used when using learn mode. The output gates used
should mirror the same ID used for input gates for learn to work
correctly. For example:
tcam::L2Forward(learn=True)
inaf = PortInc(port=p0)
in86 = PortInc(port=p1)
inaf -> 1:tcam
in86 -> 2:tcam
outaf = PortOut(port=p0)
out86 = PortOut(port=p1)
tcam:2 -> out86
tcam:1 -> outaf","Codecov Report

Merging #904 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #904      +/-   ##
==========================================
+ Coverage   55.70%   55.78%   +0.08%     
==========================================
  Files           9        9              
  Lines        1149     1149              
==========================================
+ Hits          640      641       +1     
+ Misses        509      508       -1     



Impacted Files
Coverage Δ





pybess/bess.py
40.12% <0.00%> (+0.21%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update bb5aec9...139c821. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,904,2019-03-29T18:44:12Z,,2020-07-06T09:10:14Z,OPEN,False,15,1,4,https://github.com/trozet,Adds L2 mac-learning to L2Forward module,1,[],https://github.com/NetSys/bess/pull/904,https://github.com/fshahinfar1,3,https://github.com/NetSys/bess/pull/904#issuecomment-653608220,"New learn mode for the L2Forward module allows MAC address learning. The
incoming packets are added to the L2 FIB with the source MAC address and
incoming gate. Therefore multiple input gates are now allowed for this
module, and should be used when using learn mode. The output gates used
should mirror the same ID used for input gates for learn to work
correctly. For example:
tcam::L2Forward(learn=True)
inaf = PortInc(port=p0)
in86 = PortInc(port=p1)
inaf -> 1:tcam
in86 -> 2:tcam
outaf = PortOut(port=p0)
out86 = PortOut(port=p1)
tcam:2 -> out86
tcam:1 -> outaf",Is this branch going to be merged or it is abandoned?,True,{}
NetSys/bess,https://github.com/NetSys/bess,904,2019-03-29T18:44:12Z,,2020-07-06T09:10:14Z,OPEN,False,15,1,4,https://github.com/trozet,Adds L2 mac-learning to L2Forward module,1,[],https://github.com/NetSys/bess/pull/904,https://github.com/kot-begemot-uk,4,https://github.com/NetSys/bess/pull/904#issuecomment-653612443,"New learn mode for the L2Forward module allows MAC address learning. The
incoming packets are added to the L2 FIB with the source MAC address and
incoming gate. Therefore multiple input gates are now allowed for this
module, and should be used when using learn mode. The output gates used
should mirror the same ID used for input gates for learn to work
correctly. For example:
tcam::L2Forward(learn=True)
inaf = PortInc(port=p0)
in86 = PortInc(port=p1)
inaf -> 1:tcam
in86 -> 2:tcam
outaf = PortOut(port=p0)
out86 = PortOut(port=p1)
tcam:2 -> out86
tcam:1 -> outaf","I can have a look if it is still applicable and update/rebase it.
I have not looked at this for a while. If memory serves me right the discussion on this and other transactional changes uncovered a couple of possible issues.",True,{}
NetSys/bess,https://github.com/NetSys/bess,904,2019-03-29T18:44:12Z,,2020-07-06T09:10:14Z,OPEN,False,15,1,4,https://github.com/trozet,Adds L2 mac-learning to L2Forward module,1,[],https://github.com/NetSys/bess/pull/904,https://github.com/fshahinfar1,5,https://github.com/NetSys/bess/pull/904#issuecomment-653623356,"New learn mode for the L2Forward module allows MAC address learning. The
incoming packets are added to the L2 FIB with the source MAC address and
incoming gate. Therefore multiple input gates are now allowed for this
module, and should be used when using learn mode. The output gates used
should mirror the same ID used for input gates for learn to work
correctly. For example:
tcam::L2Forward(learn=True)
inaf = PortInc(port=p0)
in86 = PortInc(port=p1)
inaf -> 1:tcam
in86 -> 2:tcam
outaf = PortOut(port=p0)
out86 = PortOut(port=p1)
tcam:2 -> out86
tcam:1 -> outaf","That would be great. I was think about implementing learning capability for L2Forward before I stumbled upon this pull request. I would be happy to help.
About the discussion relating to the transactions and thread safety, I guess using the suggested active/backup table would help with transactional part of the problem, but, the thread safety is still an issue unless there would be a separate table for each concurrent transaction and they merged to the active table. Which is a complicated solution. I guess locking mechanism is inevitable in this situation.",True,{}
NetSys/bess,https://github.com/NetSys/bess,904,2019-03-29T18:44:12Z,,2020-07-06T09:10:14Z,OPEN,False,15,1,4,https://github.com/trozet,Adds L2 mac-learning to L2Forward module,1,[],https://github.com/NetSys/bess/pull/904,https://github.com/kot-begemot-uk,6,https://github.com/NetSys/bess/pull/904#issuecomment-654113431,"New learn mode for the L2Forward module allows MAC address learning. The
incoming packets are added to the L2 FIB with the source MAC address and
incoming gate. Therefore multiple input gates are now allowed for this
module, and should be used when using learn mode. The output gates used
should mirror the same ID used for input gates for learn to work
correctly. For example:
tcam::L2Forward(learn=True)
inaf = PortInc(port=p0)
in86 = PortInc(port=p1)
inaf -> 1:tcam
in86 -> 2:tcam
outaf = PortOut(port=p0)
out86 = PortOut(port=p1)
tcam:2 -> out86
tcam:1 -> outaf","I have looked through my notes and what I worked on at the time and the executive summary is ""no, you cannot and this is a design limitation"".
As @sangjinhan noted, the changes to the forwarding table should be thread safe. While this is possible to be done using my transactional changes PR, it cannot be done out of a dataplane call sequence. The swap between active and backup table in that PR must be done from the control plane. That PR is also stale and I have to look at it, if it is still relevant.
The right BESS-specific approach here would be to use the default rule feature in the L2Forward module and punt the packet which has no forwarding entry to userspace using the Unix Port module. That has vector IO now and can support substantial data rates (in the GB/s range). You then make the learning decision and you program it into the L2Forward module.
If we want to have a learning module that is entirely in-dataplane, that will require it to be separate from the L2Forwarding module and have some facility in BESS to run module tasks periodically.
Example:


You have fast forwarding rules in L2Forward which are processed multi-threaded as today. You drop packets to a L2Learn module as a default fallback.


The L2Learn does L2Learn and forwards and can be run single-thread (Bess has the facility to declare a module to be run this way)


L2Learn periodically updates the L2Forward instance with rule changes.


Basically - a standard fast/slow path design. That will require periodic tasks for modules, something it did not have last time I looked at it.",True,{}
NetSys/bess,https://github.com/NetSys/bess,905,2019-03-30T19:16:53Z,2019-04-19T22:06:38Z,2019-04-19T22:06:43Z,MERGED,True,1,1,1,https://github.com/mukerjee,Update create_image.sh,1,[],https://github.com/NetSys/bess/pull/905,https://github.com/mukerjee,1,https://github.com/NetSys/bess/pull/905,atlas.hashicorp.com is now vagrantcloud.com,atlas.hashicorp.com is now vagrantcloud.com,True,{}
NetSys/bess,https://github.com/NetSys/bess,905,2019-03-30T19:16:53Z,2019-04-19T22:06:38Z,2019-04-19T22:06:43Z,MERGED,True,1,1,1,https://github.com/mukerjee,Update create_image.sh,1,[],https://github.com/NetSys/bess/pull/905,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/905#issuecomment-478281408,atlas.hashicorp.com is now vagrantcloud.com,"Codecov Report

Merging #905 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #905      +/-   ##
==========================================
+ Coverage    55.7%   55.78%   +0.08%     
==========================================
  Files           9        9              
  Lines        1149     1149              
==========================================
+ Hits          640      641       +1     
+ Misses        509      508       -1



Impacted Files
Coverage Δ





pybess/bess.py
40.12% <0%> (+0.21%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update bb5aec9...5b8a84a. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,907,2019-04-16T20:49:23Z,2019-05-08T03:14:56Z,2020-01-22T22:40:53Z,MERGED,True,14,14,6,https://github.com/shinae-woo,Mapping a logical internal/external ports to actual bess gates in nat,1,[],https://github.com/NetSys/bess/pull/907,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/907,"In nat module, packet flows are looks like
internal --> 0:nat:0 --> external (forward direction)
external --> 1:nat:1 --> internal (reverse direction)
This PR makes the bess gates are correspondint with the logical nat
ports, 0 for internal, and 1 for external, so the new packet flows will
looks like
internal --> 0:nat:1 --> external (forward direction)
external --> 1:nat:0 --> internal (reverse direction)","In nat module, packet flows are looks like
internal --> 0:nat:0 --> external (forward direction)
external --> 1:nat:1 --> internal (reverse direction)
This PR makes the bess gates are correspondint with the logical nat
ports, 0 for internal, and 1 for external, so the new packet flows will
looks like
internal --> 0:nat:1 --> external (forward direction)
external --> 1:nat:0 --> internal (reverse direction)",True,{}
NetSys/bess,https://github.com/NetSys/bess,907,2019-04-16T20:49:23Z,2019-05-08T03:14:56Z,2020-01-22T22:40:53Z,MERGED,True,14,14,6,https://github.com/shinae-woo,Mapping a logical internal/external ports to actual bess gates in nat,1,[],https://github.com/NetSys/bess/pull/907,https://github.com/nemethf,2,https://github.com/NetSys/bess/pull/907#issuecomment-483848959,"In nat module, packet flows are looks like
internal --> 0:nat:0 --> external (forward direction)
external --> 1:nat:1 --> internal (reverse direction)
This PR makes the bess gates are correspondint with the logical nat
ports, 0 for internal, and 1 for external, so the new packet flows will
looks like
internal --> 0:nat:1 --> external (forward direction)
external --> 1:nat:0 --> internal (reverse direction)","I think the examples in bessctl/conf will be outdated when this is merged.  Can you, please, update them as well?  Thank you.",True,{}
NetSys/bess,https://github.com/NetSys/bess,907,2019-04-16T20:49:23Z,2019-05-08T03:14:56Z,2020-01-22T22:40:53Z,MERGED,True,14,14,6,https://github.com/shinae-woo,Mapping a logical internal/external ports to actual bess gates in nat,1,[],https://github.com/NetSys/bess/pull/907,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/907#issuecomment-483855575,"In nat module, packet flows are looks like
internal --> 0:nat:0 --> external (forward direction)
external --> 1:nat:1 --> internal (reverse direction)
This PR makes the bess gates are correspondint with the logical nat
ports, 0 for internal, and 1 for external, so the new packet flows will
looks like
internal --> 0:nat:1 --> external (forward direction)
external --> 1:nat:0 --> internal (reverse direction)","@nemethf Ohh, thank you for catching this. Will update!",True,{}
NetSys/bess,https://github.com/NetSys/bess,907,2019-04-16T20:49:23Z,2019-05-08T03:14:56Z,2020-01-22T22:40:53Z,MERGED,True,14,14,6,https://github.com/shinae-woo,Mapping a logical internal/external ports to actual bess gates in nat,1,[],https://github.com/NetSys/bess/pull/907,https://github.com/apps/codecov,4,https://github.com/NetSys/bess/pull/907#issuecomment-483871393,"In nat module, packet flows are looks like
internal --> 0:nat:0 --> external (forward direction)
external --> 1:nat:1 --> internal (reverse direction)
This PR makes the bess gates are correspondint with the logical nat
ports, 0 for internal, and 1 for external, so the new packet flows will
looks like
internal --> 0:nat:1 --> external (forward direction)
external --> 1:nat:0 --> internal (reverse direction)","Codecov Report

Merging #907 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #907      +/-   ##
==========================================
+ Coverage    55.7%   55.78%   +0.08%     
==========================================
  Files           9        9              
  Lines        1149     1149              
==========================================
+ Hits          640      641       +1     
+ Misses        509      508       -1



Impacted Files
Coverage Δ





pybess/bess.py
40.12% <0%> (+0.21%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e5f1ff4...e795c35. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,907,2019-04-16T20:49:23Z,2019-05-08T03:14:56Z,2020-01-22T22:40:53Z,MERGED,True,14,14,6,https://github.com/shinae-woo,Mapping a logical internal/external ports to actual bess gates in nat,1,[],https://github.com/NetSys/bess/pull/907,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/907#issuecomment-490330985,"In nat module, packet flows are looks like
internal --> 0:nat:0 --> external (forward direction)
external --> 1:nat:1 --> internal (reverse direction)
This PR makes the bess gates are correspondint with the logical nat
ports, 0 for internal, and 1 for external, so the new packet flows will
looks like
internal --> 0:nat:1 --> external (forward direction)
external --> 1:nat:0 --> internal (reverse direction)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,908,2019-05-01T09:16:38Z,2019-05-08T03:14:12Z,2019-05-08T03:14:40Z,MERGED,True,9,2,2,https://github.com/kot-begemot-uk,Fixes to kernel module,2,[],https://github.com/NetSys/bess/pull/908,https://github.com/kot-begemot-uk,1,https://github.com/NetSys/bess/pull/908,"Minor performance optimization in the queue selection
Fix to make BESS build on 4.18+ kernels.","Minor performance optimization in the queue selection
Fix to make BESS build on 4.18+ kernels.",True,{}
NetSys/bess,https://github.com/NetSys/bess,908,2019-05-01T09:16:38Z,2019-05-08T03:14:12Z,2019-05-08T03:14:40Z,MERGED,True,9,2,2,https://github.com/kot-begemot-uk,Fixes to kernel module,2,[],https://github.com/NetSys/bess/pull/908,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/908#issuecomment-488243321,"Minor performance optimization in the queue selection
Fix to make BESS build on 4.18+ kernels.","Codecov Report

Merging #908 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #908      +/-   ##
==========================================
+ Coverage    55.7%   55.78%   +0.08%     
==========================================
  Files           9        9              
  Lines        1149     1149              
==========================================
+ Hits          640      641       +1     
+ Misses        509      508       -1



Impacted Files
Coverage Δ





pybess/bess.py
40.12% <0%> (+0.21%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update e5f1ff4...7df1d23. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,908,2019-05-01T09:16:38Z,2019-05-08T03:14:12Z,2019-05-08T03:14:40Z,MERGED,True,9,2,2,https://github.com/kot-begemot-uk,Fixes to kernel module,2,[],https://github.com/NetSys/bess/pull/908,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/908#issuecomment-490330891,"Minor performance optimization in the queue selection
Fix to make BESS build on 4.18+ kernels.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,910,2019-05-13T12:30:59Z,2019-05-21T22:46:24Z,2019-05-21T22:46:48Z,MERGED,True,12,4,1,https://github.com/kot-begemot-uk,Fix vport initialization on recent kernels,2,[],https://github.com/NetSys/bess/pull/910,https://github.com/kot-begemot-uk,1,https://github.com/NetSys/bess/pull/910,"The default queue discipline on Linux is pfifo. It will fail
to initialize rendering the device unusable on recent kernels
if the device queue depth is zero. All devices with queue depth
of zero must also specify that they are IFF_NO_QUEUE in order
to select the noop scheduler.
This is from some point in 4.x onwards (I have not had the time
to trace the exact kernel revision).
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","The default queue discipline on Linux is pfifo. It will fail
to initialize rendering the device unusable on recent kernels
if the device queue depth is zero. All devices with queue depth
of zero must also specify that they are IFF_NO_QUEUE in order
to select the noop scheduler.
This is from some point in 4.x onwards (I have not had the time
to trace the exact kernel revision).
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,910,2019-05-13T12:30:59Z,2019-05-21T22:46:24Z,2019-05-21T22:46:48Z,MERGED,True,12,4,1,https://github.com/kot-begemot-uk,Fix vport initialization on recent kernels,2,[],https://github.com/NetSys/bess/pull/910,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/910#issuecomment-491806562,"The default queue discipline on Linux is pfifo. It will fail
to initialize rendering the device unusable on recent kernels
if the device queue depth is zero. All devices with queue depth
of zero must also specify that they are IFF_NO_QUEUE in order
to select the noop scheduler.
This is from some point in 4.x onwards (I have not had the time
to trace the exact kernel revision).
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","Codecov Report

Merging #910 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #910   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 455b4c6...6be8374. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,910,2019-05-13T12:30:59Z,2019-05-21T22:46:24Z,2019-05-21T22:46:48Z,MERGED,True,12,4,1,https://github.com/kot-begemot-uk,Fix vport initialization on recent kernels,2,[],https://github.com/NetSys/bess/pull/910,https://github.com/kot-begemot-uk,3,https://github.com/NetSys/bess/pull/910#issuecomment-494292613,"The default queue discipline on Linux is pfifo. It will fail
to initialize rendering the device unusable on recent kernels
if the device queue depth is zero. All devices with queue depth
of zero must also specify that they are IFF_NO_QUEUE in order
to select the noop scheduler.
This is from some point in 4.x onwards (I have not had the time
to trace the exact kernel revision).
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com",I have updated it accordingly.,True,{}
NetSys/bess,https://github.com/NetSys/bess,910,2019-05-13T12:30:59Z,2019-05-21T22:46:24Z,2019-05-21T22:46:48Z,MERGED,True,12,4,1,https://github.com/kot-begemot-uk,Fix vport initialization on recent kernels,2,[],https://github.com/NetSys/bess/pull/910,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/910#issuecomment-494586822,"The default queue discipline on Linux is pfifo. It will fail
to initialize rendering the device unusable on recent kernels
if the device queue depth is zero. All devices with queue depth
of zero must also specify that they are IFF_NO_QUEUE in order
to select the noop scheduler.
This is from some point in 4.x onwards (I have not had the time
to trace the exact kernel revision).
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","Great, thank you very much.",True,{}
NetSys/bess,https://github.com/NetSys/bess,911,2019-05-13T20:46:59Z,2019-05-20T17:50:27Z,2019-05-20T17:51:17Z,MERGED,True,1,1,1,https://github.com/apanda,Fix gtest include path,1,[],https://github.com/NetSys/bess/pull/911,https://github.com/apanda,1,https://github.com/NetSys/bess/pull/911,"We currently pass $(GTEST_DIR) as an include path using -isystem.
This should really be $(GTEST_DIR)/include (see
https://github.com/google/googletest/tree/master/googletest), since the
header files live inside the include directory. This doesn't show up as
an issue for many people since the files are also in /usr/include when
installed using the system path but is a problem when this is not the
case.","We currently pass $(GTEST_DIR) as an include path using -isystem.
This should really be $(GTEST_DIR)/include (see
https://github.com/google/googletest/tree/master/googletest), since the
header files live inside the include directory. This doesn't show up as
an issue for many people since the files are also in /usr/include when
installed using the system path but is a problem when this is not the
case.",True,{}
NetSys/bess,https://github.com/NetSys/bess,911,2019-05-13T20:46:59Z,2019-05-20T17:50:27Z,2019-05-20T17:51:17Z,MERGED,True,1,1,1,https://github.com/apanda,Fix gtest include path,1,[],https://github.com/NetSys/bess/pull/911,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/911#issuecomment-491984454,"We currently pass $(GTEST_DIR) as an include path using -isystem.
This should really be $(GTEST_DIR)/include (see
https://github.com/google/googletest/tree/master/googletest), since the
header files live inside the include directory. This doesn't show up as
an issue for many people since the files are also in /usr/include when
installed using the system path but is a problem when this is not the
case.","Codecov Report

Merging #911 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #911   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 455b4c6...74d72f3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,911,2019-05-13T20:46:59Z,2019-05-20T17:50:27Z,2019-05-20T17:51:17Z,MERGED,True,1,1,1,https://github.com/apanda,Fix gtest include path,1,[],https://github.com/NetSys/bess/pull/911,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/911#issuecomment-494087097,"We currently pass $(GTEST_DIR) as an include path using -isystem.
This should really be $(GTEST_DIR)/include (see
https://github.com/google/googletest/tree/master/googletest), since the
header files live inside the include directory. This doesn't show up as
an issue for many people since the files are also in /usr/include when
installed using the system path but is a problem when this is not the
case.",👍,True,{}
NetSys/bess,https://github.com/NetSys/bess,912,2019-05-15T01:30:00Z,,2019-05-15T23:20:04Z,OPEN,False,272,21,9,https://github.com/dtnaylor,Queue occupancy histogram,4,['notready'],https://github.com/NetSys/bess/pull/912,https://github.com/dtnaylor,1,https://github.com/NetSys/bess/pull/912,Adds a histogram to the queue module which can be enabled to track statistics about queue occupancy.,Adds a histogram to the queue module which can be enabled to track statistics about queue occupancy.,True,{}
NetSys/bess,https://github.com/NetSys/bess,914,2019-05-18T00:10:01Z,2019-05-20T17:53:48Z,2019-05-20T17:54:19Z,MERGED,True,21,5,1,https://github.com/mukerjee,tests: skip unit tests that require extra capabilities,1,[],https://github.com/NetSys/bess/pull/914,https://github.com/mukerjee,1,https://github.com/NetSys/bess/pull/914,"5 unit tests require more capabilities than are available in docker build. Let's
skip them if they don't work.","5 unit tests require more capabilities than are available in docker build. Let's
skip them if they don't work.",True,{}
NetSys/bess,https://github.com/NetSys/bess,914,2019-05-18T00:10:01Z,2019-05-20T17:53:48Z,2019-05-20T17:54:19Z,MERGED,True,21,5,1,https://github.com/mukerjee,tests: skip unit tests that require extra capabilities,1,[],https://github.com/NetSys/bess/pull/914,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/914#issuecomment-493632682,"5 unit tests require more capabilities than are available in docker build. Let's
skip them if they don't work.","Codecov Report

Merging #914 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #914   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 455b4c6...ac4cc78. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,914,2019-05-18T00:10:01Z,2019-05-20T17:53:48Z,2019-05-20T17:54:19Z,MERGED,True,21,5,1,https://github.com/mukerjee,tests: skip unit tests that require extra capabilities,1,[],https://github.com/NetSys/bess/pull/914,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/914#issuecomment-494088175,"5 unit tests require more capabilities than are available in docker build. Let's
skip them if they don't work.",thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,916,2019-05-21T00:48:40Z,2019-05-21T22:44:48Z,2019-05-21T22:45:44Z,MERGED,True,5,1,1,https://github.com/shague,Fix kmod in 5.0+ kernels,1,[],https://github.com/NetSys/bess/pull/916,https://github.com/shague,1,https://github.com/NetSys/bess/pull/916,"5.0 kernels included a new parameter in the dev_open()
function. Fixed by adding a #if/#else block for the
newer kernel and pass new parameter as NULL.
Signed-off-by: Sam Hague shague@gmail.com","5.0 kernels included a new parameter in the dev_open()
function. Fixed by adding a #if/#else block for the
newer kernel and pass new parameter as NULL.
Signed-off-by: Sam Hague shague@gmail.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,916,2019-05-21T00:48:40Z,2019-05-21T22:44:48Z,2019-05-21T22:45:44Z,MERGED,True,5,1,1,https://github.com/shague,Fix kmod in 5.0+ kernels,1,[],https://github.com/NetSys/bess/pull/916,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/916#issuecomment-494200693,"5.0 kernels included a new parameter in the dev_open()
function. Fixed by adding a #if/#else block for the
newer kernel and pass new parameter as NULL.
Signed-off-by: Sam Hague shague@gmail.com","Codecov Report

Merging #916 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #916   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 20fa484...3f2d0de. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,916,2019-05-21T00:48:40Z,2019-05-21T22:44:48Z,2019-05-21T22:45:44Z,MERGED,True,5,1,1,https://github.com/shague,Fix kmod in 5.0+ kernels,1,[],https://github.com/NetSys/bess/pull/916,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/916#issuecomment-494586541,"5.0 kernels included a new parameter in the dev_open()
function. Fixed by adding a #if/#else block for the
newer kernel and pass new parameter as NULL.
Signed-off-by: Sam Hague shague@gmail.com",,True,{}
NetSys/bess,https://github.com/NetSys/bess,922,2019-06-16T15:47:31Z,2019-06-25T21:00:27Z,2019-06-25T21:01:20Z,MERGED,True,16,3,1,https://github.com/melvinw,modules/vxlan_encap: introduce more entropy,1,[],https://github.com/NetSys/bess/pull/922,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/922,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,922,2019-06-16T15:47:31Z,2019-06-25T21:00:27Z,2019-06-25T21:01:20Z,MERGED,True,16,3,1,https://github.com/melvinw,modules/vxlan_encap: introduce more entropy,1,[],https://github.com/NetSys/bess/pull/922,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/922#issuecomment-502464261,,"Codecov Report

Merging #922 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #922   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a9fde63...5d00946. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,922,2019-06-16T15:47:31Z,2019-06-25T21:00:27Z,2019-06-25T21:01:20Z,MERGED,True,16,3,1,https://github.com/melvinw,modules/vxlan_encap: introduce more entropy,1,[],https://github.com/NetSys/bess/pull/922,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/922#issuecomment-505621134,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,924,2019-06-20T21:47:32Z,2019-06-21T01:59:02Z,2020-06-24T06:14:59Z,MERGED,True,31,12,1,https://github.com/sangjinhan,do not consolidate non-worker threads in one core,1,[],https://github.com/NetSys/bess/pull/924,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/924,"At the moment, all non-worker threads are isolated within a single core, typically in the last core. This is not what the user asked for. Instead, non-worker threads should be able to run on any cores, or some particular set of cores explicitly set by the user (via taskset, etc.)","At the moment, all non-worker threads are isolated within a single core, typically in the last core. This is not what the user asked for. Instead, non-worker threads should be able to run on any cores, or some particular set of cores explicitly set by the user (via taskset, etc.)",True,{}
NetSys/bess,https://github.com/NetSys/bess,924,2019-06-20T21:47:32Z,2019-06-21T01:59:02Z,2020-06-24T06:14:59Z,MERGED,True,31,12,1,https://github.com/sangjinhan,do not consolidate non-worker threads in one core,1,[],https://github.com/NetSys/bess/pull/924,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/924#issuecomment-504218995,"At the moment, all non-worker threads are isolated within a single core, typically in the last core. This is not what the user asked for. Instead, non-worker threads should be able to run on any cores, or some particular set of cores explicitly set by the user (via taskset, etc.)","Codecov Report

Merging #924 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #924   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update dbe18fa...08e15cb. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,924,2019-06-20T21:47:32Z,2019-06-21T01:59:02Z,2020-06-24T06:14:59Z,MERGED,True,31,12,1,https://github.com/sangjinhan,do not consolidate non-worker threads in one core,1,[],https://github.com/NetSys/bess/pull/924,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/924#issuecomment-504260250,"At the moment, all non-worker threads are isolated within a single core, typically in the last core. This is not what the user asked for. Instead, non-worker threads should be able to run on any cores, or some particular set of cores explicitly set by the user (via taskset, etc.)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,924,2019-06-20T21:47:32Z,2019-06-21T01:59:02Z,2020-06-24T06:14:59Z,MERGED,True,31,12,1,https://github.com/sangjinhan,do not consolidate non-worker threads in one core,1,[],https://github.com/NetSys/bess/pull/924,https://github.com/krsna1729,4,https://github.com/NetSys/bess/pull/924#issuecomment-504775219,"At the moment, all non-worker threads are isolated within a single core, typically in the last core. This is not what the user asked for. Instead, non-worker threads should be able to run on any cores, or some particular set of cores explicitly set by the user (via taskset, etc.)",Nice. This allows me to get rid of the entrypoint script I had just to preserve the task affinity that was set.,True,{}
NetSys/bess,https://github.com/NetSys/bess,924,2019-06-20T21:47:32Z,2019-06-21T01:59:02Z,2020-06-24T06:14:59Z,MERGED,True,31,12,1,https://github.com/sangjinhan,do not consolidate non-worker threads in one core,1,[],https://github.com/NetSys/bess/pull/924,https://github.com/krsna1729,5,https://github.com/NetSys/bess/pull/924#issuecomment-504780217,"At the moment, all non-worker threads are isolated within a single core, typically in the last core. This is not what the user asked for. Instead, non-worker threads should be able to run on any cores, or some particular set of cores explicitly set by the user (via taskset, etc.)","But seems adding a worker pinned to one from the tasket, does not move all the other threads away from the core selected for the worker. Wondering the performance affects
root@144b99d9fcd8:/opt/bess/bessctl# ps -T -p 1
  PID  SPID TTY          TIME CMD
    1     1 pts/0    00:00:06 bessd
    1     7 pts/0    00:00:00 vfio-sync
    1    52 pts/0    00:00:00 eal-intr-thread
    1    54 pts/0    00:00:00 bessd
    1    83 pts/0    00:00:00 bessd
    1    88 pts/0    00:05:55 bessd

pid 1's current affinity mask: 3000
pid 7's current affinity mask: 3000
pid 52's current affinity mask: 3000
pid 54's current affinity mask: 3000
pid 83's current affinity mask: 3000
pid 88's current affinity mask: 1000 # worker",True,{}
NetSys/bess,https://github.com/NetSys/bess,925,2019-06-25T22:48:29Z,2019-06-28T22:17:42Z,2019-06-28T22:38:23Z,MERGED,True,14,0,2,https://github.com/sunghew,bpf: Recover initial state,1,[],https://github.com/NetSys/bess/pull/925,https://github.com/sunghew,1,https://github.com/NetSys/bess/pull/925,Add GetInitialArg to BPF to recover its initial configuration.,Add GetInitialArg to BPF to recover its initial configuration.,True,{}
NetSys/bess,https://github.com/NetSys/bess,925,2019-06-25T22:48:29Z,2019-06-28T22:17:42Z,2019-06-28T22:38:23Z,MERGED,True,14,0,2,https://github.com/sunghew,bpf: Recover initial state,1,[],https://github.com/NetSys/bess/pull/925,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/925#issuecomment-505653179,Add GetInitialArg to BPF to recover its initial configuration.,"Codecov Report

Merging #925 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #925   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 816511b...d9b02c7. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,925,2019-06-25T22:48:29Z,2019-06-28T22:17:42Z,2019-06-28T22:38:23Z,MERGED,True,14,0,2,https://github.com/sunghew,bpf: Recover initial state,1,[],https://github.com/NetSys/bess/pull/925,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/925#issuecomment-506893119,Add GetInitialArg to BPF to recover its initial configuration.,"Merged, thanks!",True,{'HOORAY': ['https://github.com/sunghew']}
NetSys/bess,https://github.com/NetSys/bess,927,2019-06-28T07:09:04Z,2019-11-04T10:23:08Z,2019-11-04T10:33:45Z,CLOSED,False,242,36,6,https://github.com/kot-begemot-uk,Make L2Forward and Replicate changes thread safe and transactional,18,[],https://github.com/NetSys/bess/pull/927,https://github.com/kot-begemot-uk,1,https://github.com/NetSys/bess/pull/927,"Fixes #920 for L2Forward and Replicate, demonstrates a pattern applicable as a fix to most other modules.
Introduces a very common check for ""port hopping"" into the L2Forward module and defines it as an option
Adds the clear command to the L2Forward module so it is functionally similar to the IPForward module.","Fixes #920 for L2Forward and Replicate, demonstrates a pattern applicable as a fix to most other modules.
Introduces a very common check for ""port hopping"" into the L2Forward module and defines it as an option
Adds the clear command to the L2Forward module so it is functionally similar to the IPForward module.",True,{}
NetSys/bess,https://github.com/NetSys/bess,927,2019-06-28T07:09:04Z,2019-11-04T10:23:08Z,2019-11-04T10:33:45Z,CLOSED,False,242,36,6,https://github.com/kot-begemot-uk,Make L2Forward and Replicate changes thread safe and transactional,18,[],https://github.com/NetSys/bess/pull/927,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/927#issuecomment-506633317,"Fixes #920 for L2Forward and Replicate, demonstrates a pattern applicable as a fix to most other modules.
Introduces a very common check for ""port hopping"" into the L2Forward module and defines it as an option
Adds the clear command to the L2Forward module so it is functionally similar to the IPForward module.","Codecov Report

Merging #927 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #927   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4918df4...5fa367f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,927,2019-06-28T07:09:04Z,2019-11-04T10:23:08Z,2019-11-04T10:33:45Z,CLOSED,False,242,36,6,https://github.com/kot-begemot-uk,Make L2Forward and Replicate changes thread safe and transactional,18,[],https://github.com/NetSys/bess/pull/927,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/927#issuecomment-506894569,"Fixes #920 for L2Forward and Replicate, demonstrates a pattern applicable as a fix to most other modules.
Introduces a very common check for ""port hopping"" into the L2Forward module and defines it as an option
Adds the clear command to the L2Forward module so it is functionally similar to the IPForward module.",Thank you very much! At the moment I am quite busy; will soon come back and review the code.,True,{}
NetSys/bess,https://github.com/NetSys/bess,927,2019-06-28T07:09:04Z,2019-11-04T10:23:08Z,2019-11-04T10:33:45Z,CLOSED,False,242,36,6,https://github.com/kot-begemot-uk,Make L2Forward and Replicate changes thread safe and transactional,18,[],https://github.com/NetSys/bess/pull/927,https://github.com/krsna1729,4,https://github.com/NetSys/bess/pull/927#issuecomment-511853879,"Fixes #920 for L2Forward and Replicate, demonstrates a pattern applicable as a fix to most other modules.
Introduces a very common check for ""port hopping"" into the L2Forward module and defines it as an option
Adds the clear command to the L2Forward module so it is functionally similar to the IPForward module.","I have wondered if BESS framework itself could handle THREAD_UNSAFE commands in a safe way, since it implements the scheduler in every worker thread. Today I think the master thread receives the commands and executes them. Instead could it queue them to individual worker threads? The scheduler code after every round or num rounds, can dequeue and run the commands? This way we need not stop? This should be good enough if only one worker is accessing the module instance, right?",True,{}
NetSys/bess,https://github.com/NetSys/bess,927,2019-06-28T07:09:04Z,2019-11-04T10:23:08Z,2019-11-04T10:33:45Z,CLOSED,False,242,36,6,https://github.com/kot-begemot-uk,Make L2Forward and Replicate changes thread safe and transactional,18,[],https://github.com/NetSys/bess/pull/927,https://github.com/kot-begemot-uk,5,https://github.com/NetSys/bess/pull/927#issuecomment-511870033,"Fixes #920 for L2Forward and Replicate, demonstrates a pattern applicable as a fix to most other modules.
Introduces a very common check for ""port hopping"" into the L2Forward module and defines it as an option
Adds the clear command to the L2Forward module so it is functionally similar to the IPForward module.","That is possible, but that does not solve transactional configuration changes. For that you need to support it at config level. In the absence of a global config framework each module has to support these individually.
There are also issues in a multi-worker environment. If a worker has finished its batch and there is a config change pending it needs to stop, because the scheduler can allow the config thread to do changes only once all workers have finished using the module.
All in all, it will be very nice if the scheduler does that by default for all UNSAFE commands as a workaround.
It is however a workaround - some stuff like route changes in L2 and L3 should have no stops as they are happening many times a second under normal operating conditions.",True,{}
NetSys/bess,https://github.com/NetSys/bess,927,2019-06-28T07:09:04Z,2019-11-04T10:23:08Z,2019-11-04T10:33:45Z,CLOSED,False,242,36,6,https://github.com/kot-begemot-uk,Make L2Forward and Replicate changes thread safe and transactional,18,[],https://github.com/NetSys/bess/pull/927,https://github.com/krsna1729,6,https://github.com/NetSys/bess/pull/927#issuecomment-511911184,"Fixes #920 for L2Forward and Replicate, demonstrates a pattern applicable as a fix to most other modules.
Introduces a very common check for ""port hopping"" into the L2Forward module and defines it as an option
Adds the clear command to the L2Forward module so it is functionally similar to the IPForward module.","I think this loop would be tens of million times a second so should be ok?

  
    
      bess/core/scheduler.h
    
    
        Lines 326 to 339
      in
      7c368cf
    
  
  
    

        
          
             // The main scheduling, running, accounting loop. 
        

        
          
             for (uint64_t round = 0;; ++round) { 
        

        
          
               // Periodic check, to mitigate expensive operations. 
        

        
          
               if ((round & accounting_mask) == 0) { 
        

        
          
                 if (current_worker.is_pause_requested()) { 
        

        
          
                   if (current_worker.BlockWorker()) { 
        

        
          
                     break; 
        

        
          
                   } 
        

        
          
                 } 
        

        
          
               } 
        

        
          
            
        

        
          
               ScheduleOnce(&ctx); 
        

        
          
             } 
        

        
          
           }",True,{}
NetSys/bess,https://github.com/NetSys/bess,927,2019-06-28T07:09:04Z,2019-11-04T10:23:08Z,2019-11-04T10:33:45Z,CLOSED,False,242,36,6,https://github.com/kot-begemot-uk,Make L2Forward and Replicate changes thread safe and transactional,18,[],https://github.com/NetSys/bess/pull/927,https://github.com/kot-begemot-uk,7,https://github.com/NetSys/bess/pull/927#issuecomment-511973950,"Fixes #920 for L2Forward and Replicate, demonstrates a pattern applicable as a fix to most other modules.
Introduces a very common check for ""port hopping"" into the L2Forward module and defines it as an option
Adds the clear command to the L2Forward module so it is functionally similar to the IPForward module.","Stopping workers this way and automatically restarting them without a restart request as a default action for UNSAFE is OK as a default behaviour. In fact, we should do it, but it is something orthogonal to this change.

Turning workers on/off does not make changes transactional. The proposed changes do.

If bulked configuration changes are allowed they have to be transactional especially for a module which does not have any means to read its current state like L2Forward.
At present if you try to change and one of the entries fails, you have no idea which one failed, you have absolutely no idea what is the state of the module, you have no means to read it back and no means to clear it short of destroying the module and rewiring the whole pipeline to a new instance.

The changes are still significantly faster and with lower impact than a default worker stop/worker start. As I said - we should do that as a default, but that does not mean that individual modules should not mark particular changes as SAFE and use faster methods.",True,{}
NetSys/bess,https://github.com/NetSys/bess,927,2019-06-28T07:09:04Z,2019-11-04T10:23:08Z,2019-11-04T10:33:45Z,CLOSED,False,242,36,6,https://github.com/kot-begemot-uk,Make L2Forward and Replicate changes thread safe and transactional,18,[],https://github.com/NetSys/bess/pull/927,https://github.com/krsna1729,8,https://github.com/NetSys/bess/pull/927#issuecomment-512066999,"Fixes #920 for L2Forward and Replicate, demonstrates a pattern applicable as a fix to most other modules.
Introduces a very common check for ""port hopping"" into the L2Forward module and defines it as an option
Adds the clear command to the L2Forward module so it is functionally similar to the IPForward module.",Agreed :),True,{}
NetSys/bess,https://github.com/NetSys/bess,928,2019-07-10T11:21:43Z,2019-08-20T23:04:26Z,2020-09-15T08:02:13Z,MERGED,True,0,1,1,https://github.com/levaitamas,Remove obsolete -s option,1,[],https://github.com/NetSys/bess/pull/928,https://github.com/levaitamas,1,https://github.com/NetSys/bess/pull/928,Obsoleted by 5951edf.,Obsoleted by 5951edf.,True,{}
NetSys/bess,https://github.com/NetSys/bess,928,2019-07-10T11:21:43Z,2019-08-20T23:04:26Z,2020-09-15T08:02:13Z,MERGED,True,0,1,1,https://github.com/levaitamas,Remove obsolete -s option,1,[],https://github.com/NetSys/bess/pull/928,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/928#issuecomment-510023766,Obsoleted by 5951edf.,"Codecov Report

Merging #928 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #928   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7c368cf...12e28a8. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,928,2019-07-10T11:21:43Z,2019-08-20T23:04:26Z,2020-09-15T08:02:13Z,MERGED,True,0,1,1,https://github.com/levaitamas,Remove obsolete -s option,1,[],https://github.com/NetSys/bess/pull/928,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/928#issuecomment-523229165,Obsoleted by 5951edf.,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,929,2019-07-12T20:31:39Z,2019-08-10T00:41:36Z,2019-08-10T00:41:39Z,MERGED,True,34,17,2,https://github.com/rstandt,Fixed hash_lb.cc to make flow hashing bidirectional,1,[],https://github.com/NetSys/bess/pull/929,https://github.com/rstandt,1,https://github.com/NetSys/bess/pull/929,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,929,2019-07-12T20:31:39Z,2019-08-10T00:41:36Z,2019-08-10T00:41:39Z,MERGED,True,34,17,2,https://github.com/rstandt,Fixed hash_lb.cc to make flow hashing bidirectional,1,[],https://github.com/NetSys/bess/pull/929,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/929#issuecomment-511871825,,"Codecov Report

Merging #929 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #929   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7c368cf...21e96da. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,930,2019-07-15T11:10:15Z,2019-11-02T02:05:30Z,2019-11-02T02:06:44Z,MERGED,True,3,10,1,https://github.com/kot-begemot-uk,Fix driver scatter gather and kernel driver flags,1,[],https://github.com/NetSys/bess/pull/930,https://github.com/kot-begemot-uk,1,https://github.com/NetSys/bess/pull/930,"The driver was being initialized incorrecttly.


Any setting of gso_max_size also implicitly turns on GSO
which is not supported resulting in transfer speeds as low as
85MBit for TCP


The code for Scatter Gather is correct, just suboptimal
(extra copy). There is no reason not to enable it.


Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","The driver was being initialized incorrecttly.


Any setting of gso_max_size also implicitly turns on GSO
which is not supported resulting in transfer speeds as low as
85MBit for TCP


The code for Scatter Gather is correct, just suboptimal
(extra copy). There is no reason not to enable it.


Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,930,2019-07-15T11:10:15Z,2019-11-02T02:05:30Z,2019-11-02T02:06:44Z,MERGED,True,3,10,1,https://github.com/kot-begemot-uk,Fix driver scatter gather and kernel driver flags,1,[],https://github.com/NetSys/bess/pull/930,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/930#issuecomment-511363109,"The driver was being initialized incorrecttly.


Any setting of gso_max_size also implicitly turns on GSO
which is not supported resulting in transfer speeds as low as
85MBit for TCP


The code for Scatter Gather is correct, just suboptimal
(extra copy). There is no reason not to enable it.


Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","Codecov Report

Merging #930 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #930   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7c368cf...fa25e99. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,930,2019-07-15T11:10:15Z,2019-11-02T02:05:30Z,2019-11-02T02:06:44Z,MERGED,True,3,10,1,https://github.com/kot-begemot-uk,Fix driver scatter gather and kernel driver flags,1,[],https://github.com/NetSys/bess/pull/930,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/930#issuecomment-549000594,"The driver was being initialized incorrecttly.


Any setting of gso_max_size also implicitly turns on GSO
which is not supported resulting in transfer speeds as low as
85MBit for TCP


The code for Scatter Gather is correct, just suboptimal
(extra copy). There is no reason not to enable it.


Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,932,2019-07-15T16:52:59Z,2019-11-02T18:55:42Z,2019-11-02T18:59:21Z,MERGED,True,85,44,3,https://github.com/kot-begemot-uk,Add Vector TX Support,7,[],https://github.com/NetSys/bess/pull/932,https://github.com/kot-begemot-uk,1,https://github.com/NetSys/bess/pull/932,"Add support for vector/batched TX.
RX to be done separately as it requires packet pre-allocation.
Increases packet throughput > 10 times under normal conditions, more in some cases.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","Add support for vector/batched TX.
RX to be done separately as it requires packet pre-allocation.
Increases packet throughput > 10 times under normal conditions, more in some cases.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,932,2019-07-15T16:52:59Z,2019-11-02T18:55:42Z,2019-11-02T18:59:21Z,MERGED,True,85,44,3,https://github.com/kot-begemot-uk,Add Vector TX Support,7,[],https://github.com/NetSys/bess/pull/932,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/932#issuecomment-511485820,"Add support for vector/batched TX.
RX to be done separately as it requires packet pre-allocation.
Increases packet throughput > 10 times under normal conditions, more in some cases.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","Codecov Report

Merging #932 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master    #932      +/-   ##
=========================================
- Coverage   55.78%   55.7%   -0.09%     
=========================================
  Files           9       9              
  Lines        1149    1149              
=========================================
- Hits          641     640       -1     
- Misses        508     509       +1



Impacted Files
Coverage Δ





pybess/bess.py
39.91% <0%> (-0.22%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0aab409...bb225b9. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,932,2019-07-15T16:52:59Z,2019-11-02T18:55:42Z,2019-11-02T18:59:21Z,MERGED,True,85,44,3,https://github.com/kot-begemot-uk,Add Vector TX Support,7,[],https://github.com/NetSys/bess/pull/932,https://github.com/kot-begemot-uk,3,https://github.com/NetSys/bess/pull/932#issuecomment-512192804,"Add support for vector/batched TX.
RX to be done separately as it requires packet pre-allocation.
Increases packet throughput > 10 times under normal conditions, more in some cases.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com",I just pushed the second half - the RX portion.,True,{}
NetSys/bess,https://github.com/NetSys/bess,932,2019-07-15T16:52:59Z,2019-11-02T18:55:42Z,2019-11-02T18:59:21Z,MERGED,True,85,44,3,https://github.com/kot-begemot-uk,Add Vector TX Support,7,[],https://github.com/NetSys/bess/pull/932,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/932#issuecomment-523633053,"Add support for vector/batched TX.
RX to be done separately as it requires packet pre-allocation.
Increases packet throughput > 10 times under normal conditions, more in some cases.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","Sorry for this late response. Could you check kot-begemot-uk#4 ?
(also, please check the CLA agreement)",True,{}
NetSys/bess,https://github.com/NetSys/bess,932,2019-07-15T16:52:59Z,2019-11-02T18:55:42Z,2019-11-02T18:59:21Z,MERGED,True,85,44,3,https://github.com/kot-begemot-uk,Add Vector TX Support,7,[],https://github.com/NetSys/bess/pull/932,https://github.com/kot-begemot-uk,5,https://github.com/NetSys/bess/pull/932#issuecomment-533834372,"Add support for vector/batched TX.
RX to be done separately as it requires packet pre-allocation.
Increases packet throughput > 10 times under normal conditions, more in some cases.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","The corresponding part for User Mode Linux just went into 5.4-rc1. It already had vector paravirtual nic so I only needed to add the protocol.
It is can now talk the bess unix domain socket protocol at similar speeds (a few Gbit).",True,{}
NetSys/bess,https://github.com/NetSys/bess,932,2019-07-15T16:52:59Z,2019-11-02T18:55:42Z,2019-11-02T18:59:21Z,MERGED,True,85,44,3,https://github.com/kot-begemot-uk,Add Vector TX Support,7,[],https://github.com/NetSys/bess/pull/932,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/932#issuecomment-549071390,"Add support for vector/batched TX.
RX to be done separately as it requires packet pre-allocation.
Increases packet throughput > 10 times under normal conditions, more in some cases.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,935,2019-08-22T19:43:48Z,2019-08-22T22:47:15Z,2019-08-22T22:47:19Z,MERGED,True,1,2,1,https://github.com/mukerjee,Fix incorrect file path in module tests,1,[],https://github.com/NetSys/bess/pull/935,https://github.com/mukerjee,1,https://github.com/NetSys/bess/pull/935,"file_name already starts with args.test_dir, so prepending it with args.test_dir
again is incorrect. This worked before if args.test_dir was an absolute
path. This fix works for both absolute and relative paths.","file_name already starts with args.test_dir, so prepending it with args.test_dir
again is incorrect. This worked before if args.test_dir was an absolute
path. This fix works for both absolute and relative paths.",True,{}
NetSys/bess,https://github.com/NetSys/bess,935,2019-08-22T19:43:48Z,2019-08-22T22:47:15Z,2019-08-22T22:47:19Z,MERGED,True,1,2,1,https://github.com/mukerjee,Fix incorrect file path in module tests,1,[],https://github.com/NetSys/bess/pull/935,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/935#issuecomment-524052919,"file_name already starts with args.test_dir, so prepending it with args.test_dir
again is incorrect. This worked before if args.test_dir was an absolute
path. This fix works for both absolute and relative paths.","Codecov Report

Merging #935 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #935      +/-   ##
==========================================
+ Coverage    55.7%   55.78%   +0.08%     
==========================================
  Files           9        9              
  Lines        1149     1149              
==========================================
+ Hits          640      641       +1     
+ Misses        509      508       -1



Impacted Files
Coverage Δ





pybess/bess.py
40.12% <0%> (+0.21%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f0ea18f...a8b7ac9. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,936,2019-08-23T19:14:52Z,2019-08-23T22:25:42Z,2020-06-24T06:14:56Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Makefile: fix missing protobuf dependency,1,[],https://github.com/NetSys/bess/pull/936,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/936,"Two dependencies are added:


Since protobuf files can reference each other, their corresponding
C++ header files should reflect that dependency


Files in utils/ do not (and should not) include protobuf headers.
However this rule may not apply to utils/ files in plugins, so we
need to generate pb.h/.cc files before compiling utils/","Two dependencies are added:


Since protobuf files can reference each other, their corresponding
C++ header files should reflect that dependency


Files in utils/ do not (and should not) include protobuf headers.
However this rule may not apply to utils/ files in plugins, so we
need to generate pb.h/.cc files before compiling utils/",True,{}
NetSys/bess,https://github.com/NetSys/bess,936,2019-08-23T19:14:52Z,2019-08-23T22:25:42Z,2020-06-24T06:14:56Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Makefile: fix missing protobuf dependency,1,[],https://github.com/NetSys/bess/pull/936,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/936#issuecomment-524434391,"Two dependencies are added:


Since protobuf files can reference each other, their corresponding
C++ header files should reflect that dependency


Files in utils/ do not (and should not) include protobuf headers.
However this rule may not apply to utils/ files in plugins, so we
need to generate pb.h/.cc files before compiling utils/","Codecov Report

Merging #936 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff            @@
##           master    #936      +/-   ##
=========================================
- Coverage   55.78%   55.7%   -0.09%     
=========================================
  Files           9       9              
  Lines        1149    1149              
=========================================
- Hits          641     640       -1     
- Misses        508     509       +1



Impacted Files
Coverage Δ





pybess/bess.py
39.91% <0%> (-0.22%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ab58d36...42827b0. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,936,2019-08-23T19:14:52Z,2019-08-23T22:25:42Z,2020-06-24T06:14:56Z,MERGED,True,2,2,1,https://github.com/sangjinhan,Makefile: fix missing protobuf dependency,1,[],https://github.com/NetSys/bess/pull/936,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/936#issuecomment-524484164,"Two dependencies are added:


Since protobuf files can reference each other, their corresponding
C++ header files should reflect that dependency


Files in utils/ do not (and should not) include protobuf headers.
However this rule may not apply to utils/ files in plugins, so we
need to generate pb.h/.cc files before compiling utils/",,True,{}
NetSys/bess,https://github.com/NetSys/bess,937,2019-08-23T22:20:20Z,2019-08-23T22:38:53Z,2020-06-24T06:14:55Z,MERGED,True,8,1,1,https://github.com/sangjinhan,do not crash even if rte_socket_id() fails,1,[],https://github.com/NetSys/bess/pull/937,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/937,"In some container scenario, it was observed that rte_socket_id() may return -1 (SOCKET_ID_ANY)","In some container scenario, it was observed that rte_socket_id() may return -1 (SOCKET_ID_ANY)",True,{}
NetSys/bess,https://github.com/NetSys/bess,937,2019-08-23T22:20:20Z,2019-08-23T22:38:53Z,2020-06-24T06:14:55Z,MERGED,True,8,1,1,https://github.com/sangjinhan,do not crash even if rte_socket_id() fails,1,[],https://github.com/NetSys/bess/pull/937,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/937#issuecomment-524482096,"In some container scenario, it was observed that rte_socket_id() may return -1 (SOCKET_ID_ANY)","Codecov Report

Merging #937 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #937   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ab58d36...e887d7c. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,937,2019-08-23T22:20:20Z,2019-08-23T22:38:53Z,2020-06-24T06:14:55Z,MERGED,True,8,1,1,https://github.com/sangjinhan,do not crash even if rte_socket_id() fails,1,[],https://github.com/NetSys/bess/pull/937,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/937#issuecomment-524483690,"In some container scenario, it was observed that rte_socket_id() may return -1 (SOCKET_ID_ANY)",,True,{}
NetSys/bess,https://github.com/NetSys/bess,938,2019-08-28T18:55:19Z,2019-09-03T16:38:21Z,2019-09-03T17:11:55Z,MERGED,True,53,33,3,https://github.com/melvinw,improve PortOut thread safety,2,[],https://github.com/NetSys/bess/pull/938,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/938,"This is kind of an RFC. The included commits replace the ResumeHook based thread saftey introduced by #661 with per-queue locks and minimal transmit load balancing (modular division seems fast enough for now since it only happens once per-batch).
Using the benchmark below on an XXV710 and a 2.1GHz E5-2620 v4. The overhead is fairly low when there's no contention.
dpdk_ports = int($BESS_PORTS!'1')
qsize = int($BESS_QSIZE!'128')
num_queues = int($BESS_QUEUES!'1')
num_workers = int($BESS_WORKERS!'1')

for i in range(num_workers):
        bess.add_worker(wid=i, core=i)

sources = [Source() for _ in range(num_workers)]

print('Using %d DPDK ports... (envvar ""BESS_PORTS"")' % dpdk_ports)
print('RX/TX queue size: %d packets per queue' % qsize)
print('NOTE: not all DPDK ports support lookback mode')

for i in range(dpdk_ports):
                p = PMDPort(port_id=i,
                                        loopback=1,
                                        size_inc_q=qsize,
                                        size_out_q=qsize,
                                        num_inc_q=num_queues,
                                        num_out_q=num_queues)
                pout = PortOut(port=p.name)
                for src in sources:
                        src -> pout
                PortInc(port=p.name) -> Sink()

Before the change
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

23:40:57.602144            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.319     2916951      93.342   62726.114      32.000      17.048
W0 !leaf_port_inc0:0       508.692     2916953       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5833900      93.342   62726.101      16.000      22.498
----------------------------------------------------------------------------------------------

23:40:58.603888            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.227     2917414      93.357   62736.085      32.000      17.044
W0 !leaf_port_inc0:0       508.782     2917415       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5834832      93.357   62736.134      16.000      22.494
----------------------------------------------------------------------------------------------

23:40:59.605590            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.124     2917842      93.371   62745.284      32.000      17.041
W0 !leaf_port_inc0:0       508.888     2917839       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5835684      93.371   62745.266      16.000      22.491
----------------------------------------------------------------------------------------------

After the change (no contention)
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

11:25:40.671544            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1711.045     2787092      89.187   59933.630      32.000      19.185
W0 !leaf_port_inc0:0       388.966     2787089       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574184      89.187   59933.632      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:41.673333            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.686     2787090      89.187   59933.589      32.000      19.181
W0 !leaf_port_inc0:0       389.323     2787091       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574181      89.187   59933.597      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:42.675116            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.680     2786947      89.182   59930.517      32.000      19.182
W0 !leaf_port_inc0:0       389.332     2786949       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5573882      89.182   59930.383      16.000      23.547
----------------------------------------------------------------------------------------------

11:25:43.676848            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.586     2787311      89.194   59938.350      32.000      19.178
W0 !leaf_port_inc0:0       389.425     2787308       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5574638      89.194   59938.509      16.000      23.544
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=4
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source3:0, !leaf_port_inc0:3, !default_rr_3, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source2:0, !leaf_port_inc0:2, !default_rr_2, !leaf_source1:0, !leaf_port_inc0:1, !default_rr_1

11:51:18.562539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.168     2246245      71.880   48303.264      32.000      22.874
W3 !leaf_port_inc0:3       455.840     2246246       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     4492483      71.880   48303.185      16.000      29.216
W0 !leaf_source0:0        1759.595     2421178      77.478   52065.008      32.000      22.711
W0 !leaf_port_inc0:0       340.417     2421177       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     4842355      77.478   52065.022      16.000      27.105
W2 !leaf_source2:0        1677.910     2049957      65.599   44082.291      32.000      25.578
W2 !leaf_port_inc0:2       422.102     2049957       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.009     4099907      65.599   44082.193      16.000      32.013
W1 !leaf_source1:0        1778.794     2299321      73.578   49444.605      32.000      24.176
W1 !leaf_port_inc0:1       321.217     2299321       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4598638      73.578   49444.557      16.000      28.541
----------------------------------------------------------------------------------------------

11:51:19.566015            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.678     2242692      71.766   48226.860      32.000      22.917
W3 !leaf_port_inc0:3       455.336     2242695       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.009     4485387      71.766   48226.883      16.000      29.262
W0 !leaf_source0:0        1758.153     2428862      77.724   52230.271      32.000      22.621
W0 !leaf_port_inc0:0       341.858     2428864       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     4857731      77.724   52230.322      16.000      27.019
W2 !leaf_source2:0        1677.433     2052020      65.665   44126.650      32.000      25.545
W2 !leaf_port_inc0:2       422.576     2052016       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     4104024      65.664   44126.467      16.000      31.981
W1 !leaf_source1:0        1778.937     2297444      73.518   49404.248      32.000      24.197
W1 !leaf_port_inc0:1       321.074     2297443       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594896      73.518   49404.328      16.000      28.564
----------------------------------------------------------------------------------------------

11:51:20.569463            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.265     2246325      71.882   48304.983      32.000      22.874
W3 !leaf_port_inc0:3       455.745     2246321       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.011     4492637      71.882   48304.840      16.000      29.215
W0 !leaf_source0:0        1759.063     2423398      77.549   52112.759      32.000      22.683
W0 !leaf_port_inc0:0       340.947     2423397       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     4846797      77.549   52112.764      16.000      27.080
W2 !leaf_source2:0        1677.791     2050621      65.620   44096.571      32.000      25.568
W2 !leaf_port_inc0:2       422.221     2050627       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     4101267      65.620   44096.829      16.000      32.002
W1 !leaf_source1:0        1779.016     2297325      73.514   49401.694      32.000      24.200
W1 !leaf_port_inc0:1       320.994     2297325       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594649      73.514   49401.673      16.000      28.566
----------------------------------------------------------------------------------------------

After the change (with contention)
localhost:10514 $ run port/loopback BESS_WORKERS=2, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source1:0

11:52:09.327137            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.301     1542957      49.375   33179.761      32.000      36.482
W0 !leaf_port_inc0:0       298.710     1542960       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     3085915      49.375   33179.761      16.000      42.532
W1 !leaf_source1:0        2100.010     1585577      50.738   34096.254      32.000      41.389
----------------------------------------------------------------------------------------------

11:52:10.329061            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1811.010     1512715      48.407   32529.433      32.000      37.412
W0 !leaf_port_inc0:0       289.008     1512731       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     3025478      48.408   32529.951      16.000      43.382
W1 !leaf_source1:0        2100.011     1557923      49.854   33501.597      32.000      42.124
----------------------------------------------------------------------------------------------

11:52:11.330955            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.704     1539172      49.254   33098.357      32.000      36.580
W0 !leaf_port_inc0:0       298.299     1539155       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     3078307      49.253   33097.952      16.000      42.637
W1 !leaf_source1:0        2100.008     1582169      50.629   34022.970      32.000      41.478
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_1, !leaf_source3:0, !leaf_source2:0, !leaf_source1:0

11:52:31.857821            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.620      756914      24.221   16276.694      32.000      79.543
W1 !leaf_port_inc0:0       173.395      756919       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1513841      24.221   16276.836      16.000      86.700
W0 !leaf_source3:0        2100.009      756908      24.221   16276.569      32.000      86.702
W3 !leaf_source2:0        2100.013      756924      24.222   16276.910      32.000      86.700
W2 !leaf_source1:0        2100.009      756928      24.222   16276.996      32.000      86.699
----------------------------------------------------------------------------------------------

11:52:32.860110            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1927.922      753979      24.127   16213.578      32.000      79.906
W1 !leaf_port_inc0:0       172.086      753979       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.009     1507961      24.127   16213.589      16.000      87.038
W0 !leaf_source3:0        2100.011      753979      24.127   16213.586      32.000      87.039
W3 !leaf_source2:0        2100.009      753974      24.127   16213.473      32.000      87.039
W2 !leaf_source1:0        2100.014      753961      24.127   16213.180      32.000      87.041
----------------------------------------------------------------------------------------------

11:52:33.862335            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.752      756427      24.206   16266.217      32.000      79.599
W1 !leaf_port_inc0:0       173.257      756428       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1512853      24.206   16266.199      16.000      86.757
W0 !leaf_source3:0        2100.010      756436      24.206   16266.401      32.000      86.756
W3 !leaf_source2:0        2100.011      756427      24.206   16266.214      32.000      86.757
W2 !leaf_source1:0        2100.010      756434      24.206   16266.378      32.000      86.756
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=2
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source1:0, !leaf_port_inc0:1, !default_rr_3, !leaf_source3:0, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_2, !leaf_source2:0

11:52:49.475850            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1815.817     1727556      55.282   37149.383      32.000      32.847
W3 !leaf_port_inc0:1       284.195     1727568       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3455127      55.282   37149.524      16.000      37.987
W1 !leaf_source3:0        2100.010     1737003      55.584   37352.520      32.000      37.781
W2 !leaf_source0:0        1807.784     1748746      55.960   37605.045      32.000      32.305
W2 !leaf_port_inc0:0       292.228     1748752       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.011     3497535      55.961   37605.499      16.000      37.527
W0 !leaf_source2:0        2100.009     1761224      56.359   37873.381      32.000      37.261
----------------------------------------------------------------------------------------------

11:52:50.478539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.976     1722015      55.105   37030.231      32.000      32.973
W3 !leaf_port_inc0:1       283.036     1722009       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.012     3444034      55.105   37030.262      16.000      38.110
W1 !leaf_source3:0        2100.012     1731360      55.404   37231.185      32.000      37.904
W2 !leaf_source0:0        1807.551     1750589      56.019   37644.668      32.000      32.267
W2 !leaf_port_inc0:0       292.456     1750575       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     3501133      56.018   37644.189      16.000      37.488
W0 !leaf_source2:0        2100.012     1762233      56.391   37895.077      32.000      37.240
----------------------------------------------------------------------------------------------

11:52:51.481211            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.926     1725320      55.210   37101.286      32.000      32.909
W3 !leaf_port_inc0:1       283.085     1725327       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3450656      55.211   37101.460      16.000      38.036
W1 !leaf_source3:0        2100.010     1734715      55.511   37303.323      32.000      37.831
W2 !leaf_source0:0        1807.861     1748639      55.956   37602.743      32.000      32.308
W2 !leaf_port_inc0:0       292.152     1748649       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     3497296      55.957   37602.929      16.000      37.529
W0 !leaf_source2:0        2100.010     1760004      56.320   37847.133      32.000      37.287
----------------------------------------------------------------------------------------------","This is kind of an RFC. The included commits replace the ResumeHook based thread saftey introduced by #661 with per-queue locks and minimal transmit load balancing (modular division seems fast enough for now since it only happens once per-batch).
Using the benchmark below on an XXV710 and a 2.1GHz E5-2620 v4. The overhead is fairly low when there's no contention.
dpdk_ports = int($BESS_PORTS!'1')
qsize = int($BESS_QSIZE!'128')
num_queues = int($BESS_QUEUES!'1')
num_workers = int($BESS_WORKERS!'1')

for i in range(num_workers):
        bess.add_worker(wid=i, core=i)

sources = [Source() for _ in range(num_workers)]

print('Using %d DPDK ports... (envvar ""BESS_PORTS"")' % dpdk_ports)
print('RX/TX queue size: %d packets per queue' % qsize)
print('NOTE: not all DPDK ports support lookback mode')

for i in range(dpdk_ports):
                p = PMDPort(port_id=i,
                                        loopback=1,
                                        size_inc_q=qsize,
                                        size_out_q=qsize,
                                        num_inc_q=num_queues,
                                        num_out_q=num_queues)
                pout = PortOut(port=p.name)
                for src in sources:
                        src -> pout
                PortInc(port=p.name) -> Sink()

Before the change
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

23:40:57.602144            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.319     2916951      93.342   62726.114      32.000      17.048
W0 !leaf_port_inc0:0       508.692     2916953       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5833900      93.342   62726.101      16.000      22.498
----------------------------------------------------------------------------------------------

23:40:58.603888            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.227     2917414      93.357   62736.085      32.000      17.044
W0 !leaf_port_inc0:0       508.782     2917415       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5834832      93.357   62736.134      16.000      22.494
----------------------------------------------------------------------------------------------

23:40:59.605590            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.124     2917842      93.371   62745.284      32.000      17.041
W0 !leaf_port_inc0:0       508.888     2917839       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5835684      93.371   62745.266      16.000      22.491
----------------------------------------------------------------------------------------------

After the change (no contention)
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

11:25:40.671544            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1711.045     2787092      89.187   59933.630      32.000      19.185
W0 !leaf_port_inc0:0       388.966     2787089       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574184      89.187   59933.632      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:41.673333            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.686     2787090      89.187   59933.589      32.000      19.181
W0 !leaf_port_inc0:0       389.323     2787091       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574181      89.187   59933.597      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:42.675116            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.680     2786947      89.182   59930.517      32.000      19.182
W0 !leaf_port_inc0:0       389.332     2786949       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5573882      89.182   59930.383      16.000      23.547
----------------------------------------------------------------------------------------------

11:25:43.676848            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.586     2787311      89.194   59938.350      32.000      19.178
W0 !leaf_port_inc0:0       389.425     2787308       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5574638      89.194   59938.509      16.000      23.544
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=4
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source3:0, !leaf_port_inc0:3, !default_rr_3, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source2:0, !leaf_port_inc0:2, !default_rr_2, !leaf_source1:0, !leaf_port_inc0:1, !default_rr_1

11:51:18.562539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.168     2246245      71.880   48303.264      32.000      22.874
W3 !leaf_port_inc0:3       455.840     2246246       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     4492483      71.880   48303.185      16.000      29.216
W0 !leaf_source0:0        1759.595     2421178      77.478   52065.008      32.000      22.711
W0 !leaf_port_inc0:0       340.417     2421177       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     4842355      77.478   52065.022      16.000      27.105
W2 !leaf_source2:0        1677.910     2049957      65.599   44082.291      32.000      25.578
W2 !leaf_port_inc0:2       422.102     2049957       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.009     4099907      65.599   44082.193      16.000      32.013
W1 !leaf_source1:0        1778.794     2299321      73.578   49444.605      32.000      24.176
W1 !leaf_port_inc0:1       321.217     2299321       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4598638      73.578   49444.557      16.000      28.541
----------------------------------------------------------------------------------------------

11:51:19.566015            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.678     2242692      71.766   48226.860      32.000      22.917
W3 !leaf_port_inc0:3       455.336     2242695       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.009     4485387      71.766   48226.883      16.000      29.262
W0 !leaf_source0:0        1758.153     2428862      77.724   52230.271      32.000      22.621
W0 !leaf_port_inc0:0       341.858     2428864       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     4857731      77.724   52230.322      16.000      27.019
W2 !leaf_source2:0        1677.433     2052020      65.665   44126.650      32.000      25.545
W2 !leaf_port_inc0:2       422.576     2052016       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     4104024      65.664   44126.467      16.000      31.981
W1 !leaf_source1:0        1778.937     2297444      73.518   49404.248      32.000      24.197
W1 !leaf_port_inc0:1       321.074     2297443       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594896      73.518   49404.328      16.000      28.564
----------------------------------------------------------------------------------------------

11:51:20.569463            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.265     2246325      71.882   48304.983      32.000      22.874
W3 !leaf_port_inc0:3       455.745     2246321       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.011     4492637      71.882   48304.840      16.000      29.215
W0 !leaf_source0:0        1759.063     2423398      77.549   52112.759      32.000      22.683
W0 !leaf_port_inc0:0       340.947     2423397       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     4846797      77.549   52112.764      16.000      27.080
W2 !leaf_source2:0        1677.791     2050621      65.620   44096.571      32.000      25.568
W2 !leaf_port_inc0:2       422.221     2050627       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     4101267      65.620   44096.829      16.000      32.002
W1 !leaf_source1:0        1779.016     2297325      73.514   49401.694      32.000      24.200
W1 !leaf_port_inc0:1       320.994     2297325       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594649      73.514   49401.673      16.000      28.566
----------------------------------------------------------------------------------------------

After the change (with contention)
localhost:10514 $ run port/loopback BESS_WORKERS=2, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source1:0

11:52:09.327137            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.301     1542957      49.375   33179.761      32.000      36.482
W0 !leaf_port_inc0:0       298.710     1542960       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     3085915      49.375   33179.761      16.000      42.532
W1 !leaf_source1:0        2100.010     1585577      50.738   34096.254      32.000      41.389
----------------------------------------------------------------------------------------------

11:52:10.329061            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1811.010     1512715      48.407   32529.433      32.000      37.412
W0 !leaf_port_inc0:0       289.008     1512731       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     3025478      48.408   32529.951      16.000      43.382
W1 !leaf_source1:0        2100.011     1557923      49.854   33501.597      32.000      42.124
----------------------------------------------------------------------------------------------

11:52:11.330955            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.704     1539172      49.254   33098.357      32.000      36.580
W0 !leaf_port_inc0:0       298.299     1539155       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     3078307      49.253   33097.952      16.000      42.637
W1 !leaf_source1:0        2100.008     1582169      50.629   34022.970      32.000      41.478
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_1, !leaf_source3:0, !leaf_source2:0, !leaf_source1:0

11:52:31.857821            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.620      756914      24.221   16276.694      32.000      79.543
W1 !leaf_port_inc0:0       173.395      756919       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1513841      24.221   16276.836      16.000      86.700
W0 !leaf_source3:0        2100.009      756908      24.221   16276.569      32.000      86.702
W3 !leaf_source2:0        2100.013      756924      24.222   16276.910      32.000      86.700
W2 !leaf_source1:0        2100.009      756928      24.222   16276.996      32.000      86.699
----------------------------------------------------------------------------------------------

11:52:32.860110            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1927.922      753979      24.127   16213.578      32.000      79.906
W1 !leaf_port_inc0:0       172.086      753979       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.009     1507961      24.127   16213.589      16.000      87.038
W0 !leaf_source3:0        2100.011      753979      24.127   16213.586      32.000      87.039
W3 !leaf_source2:0        2100.009      753974      24.127   16213.473      32.000      87.039
W2 !leaf_source1:0        2100.014      753961      24.127   16213.180      32.000      87.041
----------------------------------------------------------------------------------------------

11:52:33.862335            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.752      756427      24.206   16266.217      32.000      79.599
W1 !leaf_port_inc0:0       173.257      756428       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1512853      24.206   16266.199      16.000      86.757
W0 !leaf_source3:0        2100.010      756436      24.206   16266.401      32.000      86.756
W3 !leaf_source2:0        2100.011      756427      24.206   16266.214      32.000      86.757
W2 !leaf_source1:0        2100.010      756434      24.206   16266.378      32.000      86.756
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=2
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source1:0, !leaf_port_inc0:1, !default_rr_3, !leaf_source3:0, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_2, !leaf_source2:0

11:52:49.475850            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1815.817     1727556      55.282   37149.383      32.000      32.847
W3 !leaf_port_inc0:1       284.195     1727568       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3455127      55.282   37149.524      16.000      37.987
W1 !leaf_source3:0        2100.010     1737003      55.584   37352.520      32.000      37.781
W2 !leaf_source0:0        1807.784     1748746      55.960   37605.045      32.000      32.305
W2 !leaf_port_inc0:0       292.228     1748752       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.011     3497535      55.961   37605.499      16.000      37.527
W0 !leaf_source2:0        2100.009     1761224      56.359   37873.381      32.000      37.261
----------------------------------------------------------------------------------------------

11:52:50.478539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.976     1722015      55.105   37030.231      32.000      32.973
W3 !leaf_port_inc0:1       283.036     1722009       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.012     3444034      55.105   37030.262      16.000      38.110
W1 !leaf_source3:0        2100.012     1731360      55.404   37231.185      32.000      37.904
W2 !leaf_source0:0        1807.551     1750589      56.019   37644.668      32.000      32.267
W2 !leaf_port_inc0:0       292.456     1750575       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     3501133      56.018   37644.189      16.000      37.488
W0 !leaf_source2:0        2100.012     1762233      56.391   37895.077      32.000      37.240
----------------------------------------------------------------------------------------------

11:52:51.481211            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.926     1725320      55.210   37101.286      32.000      32.909
W3 !leaf_port_inc0:1       283.085     1725327       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3450656      55.211   37101.460      16.000      38.036
W1 !leaf_source3:0        2100.010     1734715      55.511   37303.323      32.000      37.831
W2 !leaf_source0:0        1807.861     1748639      55.956   37602.743      32.000      32.308
W2 !leaf_port_inc0:0       292.152     1748649       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     3497296      55.957   37602.929      16.000      37.529
W0 !leaf_source2:0        2100.010     1760004      56.320   37847.133      32.000      37.287
----------------------------------------------------------------------------------------------",True,{}
NetSys/bess,https://github.com/NetSys/bess,938,2019-08-28T18:55:19Z,2019-09-03T16:38:21Z,2019-09-03T17:11:55Z,MERGED,True,53,33,3,https://github.com/melvinw,improve PortOut thread safety,2,[],https://github.com/NetSys/bess/pull/938,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/938#issuecomment-525882948,"This is kind of an RFC. The included commits replace the ResumeHook based thread saftey introduced by #661 with per-queue locks and minimal transmit load balancing (modular division seems fast enough for now since it only happens once per-batch).
Using the benchmark below on an XXV710 and a 2.1GHz E5-2620 v4. The overhead is fairly low when there's no contention.
dpdk_ports = int($BESS_PORTS!'1')
qsize = int($BESS_QSIZE!'128')
num_queues = int($BESS_QUEUES!'1')
num_workers = int($BESS_WORKERS!'1')

for i in range(num_workers):
        bess.add_worker(wid=i, core=i)

sources = [Source() for _ in range(num_workers)]

print('Using %d DPDK ports... (envvar ""BESS_PORTS"")' % dpdk_ports)
print('RX/TX queue size: %d packets per queue' % qsize)
print('NOTE: not all DPDK ports support lookback mode')

for i in range(dpdk_ports):
                p = PMDPort(port_id=i,
                                        loopback=1,
                                        size_inc_q=qsize,
                                        size_out_q=qsize,
                                        num_inc_q=num_queues,
                                        num_out_q=num_queues)
                pout = PortOut(port=p.name)
                for src in sources:
                        src -> pout
                PortInc(port=p.name) -> Sink()

Before the change
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

23:40:57.602144            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.319     2916951      93.342   62726.114      32.000      17.048
W0 !leaf_port_inc0:0       508.692     2916953       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5833900      93.342   62726.101      16.000      22.498
----------------------------------------------------------------------------------------------

23:40:58.603888            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.227     2917414      93.357   62736.085      32.000      17.044
W0 !leaf_port_inc0:0       508.782     2917415       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5834832      93.357   62736.134      16.000      22.494
----------------------------------------------------------------------------------------------

23:40:59.605590            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.124     2917842      93.371   62745.284      32.000      17.041
W0 !leaf_port_inc0:0       508.888     2917839       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5835684      93.371   62745.266      16.000      22.491
----------------------------------------------------------------------------------------------

After the change (no contention)
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

11:25:40.671544            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1711.045     2787092      89.187   59933.630      32.000      19.185
W0 !leaf_port_inc0:0       388.966     2787089       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574184      89.187   59933.632      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:41.673333            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.686     2787090      89.187   59933.589      32.000      19.181
W0 !leaf_port_inc0:0       389.323     2787091       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574181      89.187   59933.597      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:42.675116            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.680     2786947      89.182   59930.517      32.000      19.182
W0 !leaf_port_inc0:0       389.332     2786949       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5573882      89.182   59930.383      16.000      23.547
----------------------------------------------------------------------------------------------

11:25:43.676848            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.586     2787311      89.194   59938.350      32.000      19.178
W0 !leaf_port_inc0:0       389.425     2787308       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5574638      89.194   59938.509      16.000      23.544
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=4
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source3:0, !leaf_port_inc0:3, !default_rr_3, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source2:0, !leaf_port_inc0:2, !default_rr_2, !leaf_source1:0, !leaf_port_inc0:1, !default_rr_1

11:51:18.562539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.168     2246245      71.880   48303.264      32.000      22.874
W3 !leaf_port_inc0:3       455.840     2246246       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     4492483      71.880   48303.185      16.000      29.216
W0 !leaf_source0:0        1759.595     2421178      77.478   52065.008      32.000      22.711
W0 !leaf_port_inc0:0       340.417     2421177       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     4842355      77.478   52065.022      16.000      27.105
W2 !leaf_source2:0        1677.910     2049957      65.599   44082.291      32.000      25.578
W2 !leaf_port_inc0:2       422.102     2049957       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.009     4099907      65.599   44082.193      16.000      32.013
W1 !leaf_source1:0        1778.794     2299321      73.578   49444.605      32.000      24.176
W1 !leaf_port_inc0:1       321.217     2299321       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4598638      73.578   49444.557      16.000      28.541
----------------------------------------------------------------------------------------------

11:51:19.566015            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.678     2242692      71.766   48226.860      32.000      22.917
W3 !leaf_port_inc0:3       455.336     2242695       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.009     4485387      71.766   48226.883      16.000      29.262
W0 !leaf_source0:0        1758.153     2428862      77.724   52230.271      32.000      22.621
W0 !leaf_port_inc0:0       341.858     2428864       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     4857731      77.724   52230.322      16.000      27.019
W2 !leaf_source2:0        1677.433     2052020      65.665   44126.650      32.000      25.545
W2 !leaf_port_inc0:2       422.576     2052016       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     4104024      65.664   44126.467      16.000      31.981
W1 !leaf_source1:0        1778.937     2297444      73.518   49404.248      32.000      24.197
W1 !leaf_port_inc0:1       321.074     2297443       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594896      73.518   49404.328      16.000      28.564
----------------------------------------------------------------------------------------------

11:51:20.569463            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.265     2246325      71.882   48304.983      32.000      22.874
W3 !leaf_port_inc0:3       455.745     2246321       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.011     4492637      71.882   48304.840      16.000      29.215
W0 !leaf_source0:0        1759.063     2423398      77.549   52112.759      32.000      22.683
W0 !leaf_port_inc0:0       340.947     2423397       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     4846797      77.549   52112.764      16.000      27.080
W2 !leaf_source2:0        1677.791     2050621      65.620   44096.571      32.000      25.568
W2 !leaf_port_inc0:2       422.221     2050627       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     4101267      65.620   44096.829      16.000      32.002
W1 !leaf_source1:0        1779.016     2297325      73.514   49401.694      32.000      24.200
W1 !leaf_port_inc0:1       320.994     2297325       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594649      73.514   49401.673      16.000      28.566
----------------------------------------------------------------------------------------------

After the change (with contention)
localhost:10514 $ run port/loopback BESS_WORKERS=2, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source1:0

11:52:09.327137            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.301     1542957      49.375   33179.761      32.000      36.482
W0 !leaf_port_inc0:0       298.710     1542960       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     3085915      49.375   33179.761      16.000      42.532
W1 !leaf_source1:0        2100.010     1585577      50.738   34096.254      32.000      41.389
----------------------------------------------------------------------------------------------

11:52:10.329061            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1811.010     1512715      48.407   32529.433      32.000      37.412
W0 !leaf_port_inc0:0       289.008     1512731       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     3025478      48.408   32529.951      16.000      43.382
W1 !leaf_source1:0        2100.011     1557923      49.854   33501.597      32.000      42.124
----------------------------------------------------------------------------------------------

11:52:11.330955            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.704     1539172      49.254   33098.357      32.000      36.580
W0 !leaf_port_inc0:0       298.299     1539155       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     3078307      49.253   33097.952      16.000      42.637
W1 !leaf_source1:0        2100.008     1582169      50.629   34022.970      32.000      41.478
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_1, !leaf_source3:0, !leaf_source2:0, !leaf_source1:0

11:52:31.857821            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.620      756914      24.221   16276.694      32.000      79.543
W1 !leaf_port_inc0:0       173.395      756919       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1513841      24.221   16276.836      16.000      86.700
W0 !leaf_source3:0        2100.009      756908      24.221   16276.569      32.000      86.702
W3 !leaf_source2:0        2100.013      756924      24.222   16276.910      32.000      86.700
W2 !leaf_source1:0        2100.009      756928      24.222   16276.996      32.000      86.699
----------------------------------------------------------------------------------------------

11:52:32.860110            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1927.922      753979      24.127   16213.578      32.000      79.906
W1 !leaf_port_inc0:0       172.086      753979       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.009     1507961      24.127   16213.589      16.000      87.038
W0 !leaf_source3:0        2100.011      753979      24.127   16213.586      32.000      87.039
W3 !leaf_source2:0        2100.009      753974      24.127   16213.473      32.000      87.039
W2 !leaf_source1:0        2100.014      753961      24.127   16213.180      32.000      87.041
----------------------------------------------------------------------------------------------

11:52:33.862335            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.752      756427      24.206   16266.217      32.000      79.599
W1 !leaf_port_inc0:0       173.257      756428       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1512853      24.206   16266.199      16.000      86.757
W0 !leaf_source3:0        2100.010      756436      24.206   16266.401      32.000      86.756
W3 !leaf_source2:0        2100.011      756427      24.206   16266.214      32.000      86.757
W2 !leaf_source1:0        2100.010      756434      24.206   16266.378      32.000      86.756
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=2
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source1:0, !leaf_port_inc0:1, !default_rr_3, !leaf_source3:0, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_2, !leaf_source2:0

11:52:49.475850            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1815.817     1727556      55.282   37149.383      32.000      32.847
W3 !leaf_port_inc0:1       284.195     1727568       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3455127      55.282   37149.524      16.000      37.987
W1 !leaf_source3:0        2100.010     1737003      55.584   37352.520      32.000      37.781
W2 !leaf_source0:0        1807.784     1748746      55.960   37605.045      32.000      32.305
W2 !leaf_port_inc0:0       292.228     1748752       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.011     3497535      55.961   37605.499      16.000      37.527
W0 !leaf_source2:0        2100.009     1761224      56.359   37873.381      32.000      37.261
----------------------------------------------------------------------------------------------

11:52:50.478539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.976     1722015      55.105   37030.231      32.000      32.973
W3 !leaf_port_inc0:1       283.036     1722009       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.012     3444034      55.105   37030.262      16.000      38.110
W1 !leaf_source3:0        2100.012     1731360      55.404   37231.185      32.000      37.904
W2 !leaf_source0:0        1807.551     1750589      56.019   37644.668      32.000      32.267
W2 !leaf_port_inc0:0       292.456     1750575       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     3501133      56.018   37644.189      16.000      37.488
W0 !leaf_source2:0        2100.012     1762233      56.391   37895.077      32.000      37.240
----------------------------------------------------------------------------------------------

11:52:51.481211            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.926     1725320      55.210   37101.286      32.000      32.909
W3 !leaf_port_inc0:1       283.085     1725327       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3450656      55.211   37101.460      16.000      38.036
W1 !leaf_source3:0        2100.010     1734715      55.511   37303.323      32.000      37.831
W2 !leaf_source0:0        1807.861     1748639      55.956   37602.743      32.000      32.308
W2 !leaf_port_inc0:0       292.152     1748649       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     3497296      55.957   37602.929      16.000      37.529
W0 !leaf_source2:0        2100.010     1760004      56.320   37847.133      32.000      37.287
----------------------------------------------------------------------------------------------","Codecov Report

Merging #938 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #938   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update bff2b01...d76b505. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,938,2019-08-28T18:55:19Z,2019-09-03T16:38:21Z,2019-09-03T17:11:55Z,MERGED,True,53,33,3,https://github.com/melvinw,improve PortOut thread safety,2,[],https://github.com/NetSys/bess/pull/938,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/938#issuecomment-526409954,"This is kind of an RFC. The included commits replace the ResumeHook based thread saftey introduced by #661 with per-queue locks and minimal transmit load balancing (modular division seems fast enough for now since it only happens once per-batch).
Using the benchmark below on an XXV710 and a 2.1GHz E5-2620 v4. The overhead is fairly low when there's no contention.
dpdk_ports = int($BESS_PORTS!'1')
qsize = int($BESS_QSIZE!'128')
num_queues = int($BESS_QUEUES!'1')
num_workers = int($BESS_WORKERS!'1')

for i in range(num_workers):
        bess.add_worker(wid=i, core=i)

sources = [Source() for _ in range(num_workers)]

print('Using %d DPDK ports... (envvar ""BESS_PORTS"")' % dpdk_ports)
print('RX/TX queue size: %d packets per queue' % qsize)
print('NOTE: not all DPDK ports support lookback mode')

for i in range(dpdk_ports):
                p = PMDPort(port_id=i,
                                        loopback=1,
                                        size_inc_q=qsize,
                                        size_out_q=qsize,
                                        num_inc_q=num_queues,
                                        num_out_q=num_queues)
                pout = PortOut(port=p.name)
                for src in sources:
                        src -> pout
                PortInc(port=p.name) -> Sink()

Before the change
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

23:40:57.602144            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.319     2916951      93.342   62726.114      32.000      17.048
W0 !leaf_port_inc0:0       508.692     2916953       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5833900      93.342   62726.101      16.000      22.498
----------------------------------------------------------------------------------------------

23:40:58.603888            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.227     2917414      93.357   62736.085      32.000      17.044
W0 !leaf_port_inc0:0       508.782     2917415       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5834832      93.357   62736.134      16.000      22.494
----------------------------------------------------------------------------------------------

23:40:59.605590            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.124     2917842      93.371   62745.284      32.000      17.041
W0 !leaf_port_inc0:0       508.888     2917839       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5835684      93.371   62745.266      16.000      22.491
----------------------------------------------------------------------------------------------

After the change (no contention)
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

11:25:40.671544            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1711.045     2787092      89.187   59933.630      32.000      19.185
W0 !leaf_port_inc0:0       388.966     2787089       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574184      89.187   59933.632      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:41.673333            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.686     2787090      89.187   59933.589      32.000      19.181
W0 !leaf_port_inc0:0       389.323     2787091       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574181      89.187   59933.597      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:42.675116            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.680     2786947      89.182   59930.517      32.000      19.182
W0 !leaf_port_inc0:0       389.332     2786949       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5573882      89.182   59930.383      16.000      23.547
----------------------------------------------------------------------------------------------

11:25:43.676848            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.586     2787311      89.194   59938.350      32.000      19.178
W0 !leaf_port_inc0:0       389.425     2787308       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5574638      89.194   59938.509      16.000      23.544
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=4
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source3:0, !leaf_port_inc0:3, !default_rr_3, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source2:0, !leaf_port_inc0:2, !default_rr_2, !leaf_source1:0, !leaf_port_inc0:1, !default_rr_1

11:51:18.562539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.168     2246245      71.880   48303.264      32.000      22.874
W3 !leaf_port_inc0:3       455.840     2246246       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     4492483      71.880   48303.185      16.000      29.216
W0 !leaf_source0:0        1759.595     2421178      77.478   52065.008      32.000      22.711
W0 !leaf_port_inc0:0       340.417     2421177       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     4842355      77.478   52065.022      16.000      27.105
W2 !leaf_source2:0        1677.910     2049957      65.599   44082.291      32.000      25.578
W2 !leaf_port_inc0:2       422.102     2049957       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.009     4099907      65.599   44082.193      16.000      32.013
W1 !leaf_source1:0        1778.794     2299321      73.578   49444.605      32.000      24.176
W1 !leaf_port_inc0:1       321.217     2299321       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4598638      73.578   49444.557      16.000      28.541
----------------------------------------------------------------------------------------------

11:51:19.566015            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.678     2242692      71.766   48226.860      32.000      22.917
W3 !leaf_port_inc0:3       455.336     2242695       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.009     4485387      71.766   48226.883      16.000      29.262
W0 !leaf_source0:0        1758.153     2428862      77.724   52230.271      32.000      22.621
W0 !leaf_port_inc0:0       341.858     2428864       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     4857731      77.724   52230.322      16.000      27.019
W2 !leaf_source2:0        1677.433     2052020      65.665   44126.650      32.000      25.545
W2 !leaf_port_inc0:2       422.576     2052016       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     4104024      65.664   44126.467      16.000      31.981
W1 !leaf_source1:0        1778.937     2297444      73.518   49404.248      32.000      24.197
W1 !leaf_port_inc0:1       321.074     2297443       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594896      73.518   49404.328      16.000      28.564
----------------------------------------------------------------------------------------------

11:51:20.569463            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.265     2246325      71.882   48304.983      32.000      22.874
W3 !leaf_port_inc0:3       455.745     2246321       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.011     4492637      71.882   48304.840      16.000      29.215
W0 !leaf_source0:0        1759.063     2423398      77.549   52112.759      32.000      22.683
W0 !leaf_port_inc0:0       340.947     2423397       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     4846797      77.549   52112.764      16.000      27.080
W2 !leaf_source2:0        1677.791     2050621      65.620   44096.571      32.000      25.568
W2 !leaf_port_inc0:2       422.221     2050627       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     4101267      65.620   44096.829      16.000      32.002
W1 !leaf_source1:0        1779.016     2297325      73.514   49401.694      32.000      24.200
W1 !leaf_port_inc0:1       320.994     2297325       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594649      73.514   49401.673      16.000      28.566
----------------------------------------------------------------------------------------------

After the change (with contention)
localhost:10514 $ run port/loopback BESS_WORKERS=2, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source1:0

11:52:09.327137            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.301     1542957      49.375   33179.761      32.000      36.482
W0 !leaf_port_inc0:0       298.710     1542960       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     3085915      49.375   33179.761      16.000      42.532
W1 !leaf_source1:0        2100.010     1585577      50.738   34096.254      32.000      41.389
----------------------------------------------------------------------------------------------

11:52:10.329061            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1811.010     1512715      48.407   32529.433      32.000      37.412
W0 !leaf_port_inc0:0       289.008     1512731       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     3025478      48.408   32529.951      16.000      43.382
W1 !leaf_source1:0        2100.011     1557923      49.854   33501.597      32.000      42.124
----------------------------------------------------------------------------------------------

11:52:11.330955            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.704     1539172      49.254   33098.357      32.000      36.580
W0 !leaf_port_inc0:0       298.299     1539155       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     3078307      49.253   33097.952      16.000      42.637
W1 !leaf_source1:0        2100.008     1582169      50.629   34022.970      32.000      41.478
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_1, !leaf_source3:0, !leaf_source2:0, !leaf_source1:0

11:52:31.857821            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.620      756914      24.221   16276.694      32.000      79.543
W1 !leaf_port_inc0:0       173.395      756919       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1513841      24.221   16276.836      16.000      86.700
W0 !leaf_source3:0        2100.009      756908      24.221   16276.569      32.000      86.702
W3 !leaf_source2:0        2100.013      756924      24.222   16276.910      32.000      86.700
W2 !leaf_source1:0        2100.009      756928      24.222   16276.996      32.000      86.699
----------------------------------------------------------------------------------------------

11:52:32.860110            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1927.922      753979      24.127   16213.578      32.000      79.906
W1 !leaf_port_inc0:0       172.086      753979       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.009     1507961      24.127   16213.589      16.000      87.038
W0 !leaf_source3:0        2100.011      753979      24.127   16213.586      32.000      87.039
W3 !leaf_source2:0        2100.009      753974      24.127   16213.473      32.000      87.039
W2 !leaf_source1:0        2100.014      753961      24.127   16213.180      32.000      87.041
----------------------------------------------------------------------------------------------

11:52:33.862335            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.752      756427      24.206   16266.217      32.000      79.599
W1 !leaf_port_inc0:0       173.257      756428       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1512853      24.206   16266.199      16.000      86.757
W0 !leaf_source3:0        2100.010      756436      24.206   16266.401      32.000      86.756
W3 !leaf_source2:0        2100.011      756427      24.206   16266.214      32.000      86.757
W2 !leaf_source1:0        2100.010      756434      24.206   16266.378      32.000      86.756
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=2
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source1:0, !leaf_port_inc0:1, !default_rr_3, !leaf_source3:0, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_2, !leaf_source2:0

11:52:49.475850            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1815.817     1727556      55.282   37149.383      32.000      32.847
W3 !leaf_port_inc0:1       284.195     1727568       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3455127      55.282   37149.524      16.000      37.987
W1 !leaf_source3:0        2100.010     1737003      55.584   37352.520      32.000      37.781
W2 !leaf_source0:0        1807.784     1748746      55.960   37605.045      32.000      32.305
W2 !leaf_port_inc0:0       292.228     1748752       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.011     3497535      55.961   37605.499      16.000      37.527
W0 !leaf_source2:0        2100.009     1761224      56.359   37873.381      32.000      37.261
----------------------------------------------------------------------------------------------

11:52:50.478539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.976     1722015      55.105   37030.231      32.000      32.973
W3 !leaf_port_inc0:1       283.036     1722009       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.012     3444034      55.105   37030.262      16.000      38.110
W1 !leaf_source3:0        2100.012     1731360      55.404   37231.185      32.000      37.904
W2 !leaf_source0:0        1807.551     1750589      56.019   37644.668      32.000      32.267
W2 !leaf_port_inc0:0       292.456     1750575       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     3501133      56.018   37644.189      16.000      37.488
W0 !leaf_source2:0        2100.012     1762233      56.391   37895.077      32.000      37.240
----------------------------------------------------------------------------------------------

11:52:51.481211            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.926     1725320      55.210   37101.286      32.000      32.909
W3 !leaf_port_inc0:1       283.085     1725327       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3450656      55.211   37101.460      16.000      38.036
W1 !leaf_source3:0        2100.010     1734715      55.511   37303.323      32.000      37.831
W2 !leaf_source0:0        1807.861     1748639      55.956   37602.743      32.000      32.308
W2 !leaf_port_inc0:0       292.152     1748649       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     3497296      55.957   37602.929      16.000      37.529
W0 !leaf_source2:0        2100.010     1760004      56.320   37847.133      32.000      37.287
----------------------------------------------------------------------------------------------","2 cycles per packet is about an 11% penalty, but overall I guess that's OK.  The code itself seems fine. Let's see if @sangjinhan has any tricks up his sleeves for more go-fast 😺",True,{}
NetSys/bess,https://github.com/NetSys/bess,938,2019-08-28T18:55:19Z,2019-09-03T16:38:21Z,2019-09-03T17:11:55Z,MERGED,True,53,33,3,https://github.com/melvinw,improve PortOut thread safety,2,[],https://github.com/NetSys/bess/pull/938,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/938#issuecomment-526708681,"This is kind of an RFC. The included commits replace the ResumeHook based thread saftey introduced by #661 with per-queue locks and minimal transmit load balancing (modular division seems fast enough for now since it only happens once per-batch).
Using the benchmark below on an XXV710 and a 2.1GHz E5-2620 v4. The overhead is fairly low when there's no contention.
dpdk_ports = int($BESS_PORTS!'1')
qsize = int($BESS_QSIZE!'128')
num_queues = int($BESS_QUEUES!'1')
num_workers = int($BESS_WORKERS!'1')

for i in range(num_workers):
        bess.add_worker(wid=i, core=i)

sources = [Source() for _ in range(num_workers)]

print('Using %d DPDK ports... (envvar ""BESS_PORTS"")' % dpdk_ports)
print('RX/TX queue size: %d packets per queue' % qsize)
print('NOTE: not all DPDK ports support lookback mode')

for i in range(dpdk_ports):
                p = PMDPort(port_id=i,
                                        loopback=1,
                                        size_inc_q=qsize,
                                        size_out_q=qsize,
                                        num_inc_q=num_queues,
                                        num_out_q=num_queues)
                pout = PortOut(port=p.name)
                for src in sources:
                        src -> pout
                PortInc(port=p.name) -> Sink()

Before the change
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

23:40:57.602144            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.319     2916951      93.342   62726.114      32.000      17.048
W0 !leaf_port_inc0:0       508.692     2916953       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5833900      93.342   62726.101      16.000      22.498
----------------------------------------------------------------------------------------------

23:40:58.603888            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.227     2917414      93.357   62736.085      32.000      17.044
W0 !leaf_port_inc0:0       508.782     2917415       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5834832      93.357   62736.134      16.000      22.494
----------------------------------------------------------------------------------------------

23:40:59.605590            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.124     2917842      93.371   62745.284      32.000      17.041
W0 !leaf_port_inc0:0       508.888     2917839       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5835684      93.371   62745.266      16.000      22.491
----------------------------------------------------------------------------------------------

After the change (no contention)
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

11:25:40.671544            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1711.045     2787092      89.187   59933.630      32.000      19.185
W0 !leaf_port_inc0:0       388.966     2787089       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574184      89.187   59933.632      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:41.673333            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.686     2787090      89.187   59933.589      32.000      19.181
W0 !leaf_port_inc0:0       389.323     2787091       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574181      89.187   59933.597      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:42.675116            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.680     2786947      89.182   59930.517      32.000      19.182
W0 !leaf_port_inc0:0       389.332     2786949       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5573882      89.182   59930.383      16.000      23.547
----------------------------------------------------------------------------------------------

11:25:43.676848            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.586     2787311      89.194   59938.350      32.000      19.178
W0 !leaf_port_inc0:0       389.425     2787308       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5574638      89.194   59938.509      16.000      23.544
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=4
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source3:0, !leaf_port_inc0:3, !default_rr_3, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source2:0, !leaf_port_inc0:2, !default_rr_2, !leaf_source1:0, !leaf_port_inc0:1, !default_rr_1

11:51:18.562539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.168     2246245      71.880   48303.264      32.000      22.874
W3 !leaf_port_inc0:3       455.840     2246246       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     4492483      71.880   48303.185      16.000      29.216
W0 !leaf_source0:0        1759.595     2421178      77.478   52065.008      32.000      22.711
W0 !leaf_port_inc0:0       340.417     2421177       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     4842355      77.478   52065.022      16.000      27.105
W2 !leaf_source2:0        1677.910     2049957      65.599   44082.291      32.000      25.578
W2 !leaf_port_inc0:2       422.102     2049957       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.009     4099907      65.599   44082.193      16.000      32.013
W1 !leaf_source1:0        1778.794     2299321      73.578   49444.605      32.000      24.176
W1 !leaf_port_inc0:1       321.217     2299321       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4598638      73.578   49444.557      16.000      28.541
----------------------------------------------------------------------------------------------

11:51:19.566015            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.678     2242692      71.766   48226.860      32.000      22.917
W3 !leaf_port_inc0:3       455.336     2242695       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.009     4485387      71.766   48226.883      16.000      29.262
W0 !leaf_source0:0        1758.153     2428862      77.724   52230.271      32.000      22.621
W0 !leaf_port_inc0:0       341.858     2428864       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     4857731      77.724   52230.322      16.000      27.019
W2 !leaf_source2:0        1677.433     2052020      65.665   44126.650      32.000      25.545
W2 !leaf_port_inc0:2       422.576     2052016       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     4104024      65.664   44126.467      16.000      31.981
W1 !leaf_source1:0        1778.937     2297444      73.518   49404.248      32.000      24.197
W1 !leaf_port_inc0:1       321.074     2297443       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594896      73.518   49404.328      16.000      28.564
----------------------------------------------------------------------------------------------

11:51:20.569463            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.265     2246325      71.882   48304.983      32.000      22.874
W3 !leaf_port_inc0:3       455.745     2246321       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.011     4492637      71.882   48304.840      16.000      29.215
W0 !leaf_source0:0        1759.063     2423398      77.549   52112.759      32.000      22.683
W0 !leaf_port_inc0:0       340.947     2423397       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     4846797      77.549   52112.764      16.000      27.080
W2 !leaf_source2:0        1677.791     2050621      65.620   44096.571      32.000      25.568
W2 !leaf_port_inc0:2       422.221     2050627       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     4101267      65.620   44096.829      16.000      32.002
W1 !leaf_source1:0        1779.016     2297325      73.514   49401.694      32.000      24.200
W1 !leaf_port_inc0:1       320.994     2297325       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594649      73.514   49401.673      16.000      28.566
----------------------------------------------------------------------------------------------

After the change (with contention)
localhost:10514 $ run port/loopback BESS_WORKERS=2, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source1:0

11:52:09.327137            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.301     1542957      49.375   33179.761      32.000      36.482
W0 !leaf_port_inc0:0       298.710     1542960       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     3085915      49.375   33179.761      16.000      42.532
W1 !leaf_source1:0        2100.010     1585577      50.738   34096.254      32.000      41.389
----------------------------------------------------------------------------------------------

11:52:10.329061            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1811.010     1512715      48.407   32529.433      32.000      37.412
W0 !leaf_port_inc0:0       289.008     1512731       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     3025478      48.408   32529.951      16.000      43.382
W1 !leaf_source1:0        2100.011     1557923      49.854   33501.597      32.000      42.124
----------------------------------------------------------------------------------------------

11:52:11.330955            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.704     1539172      49.254   33098.357      32.000      36.580
W0 !leaf_port_inc0:0       298.299     1539155       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     3078307      49.253   33097.952      16.000      42.637
W1 !leaf_source1:0        2100.008     1582169      50.629   34022.970      32.000      41.478
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_1, !leaf_source3:0, !leaf_source2:0, !leaf_source1:0

11:52:31.857821            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.620      756914      24.221   16276.694      32.000      79.543
W1 !leaf_port_inc0:0       173.395      756919       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1513841      24.221   16276.836      16.000      86.700
W0 !leaf_source3:0        2100.009      756908      24.221   16276.569      32.000      86.702
W3 !leaf_source2:0        2100.013      756924      24.222   16276.910      32.000      86.700
W2 !leaf_source1:0        2100.009      756928      24.222   16276.996      32.000      86.699
----------------------------------------------------------------------------------------------

11:52:32.860110            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1927.922      753979      24.127   16213.578      32.000      79.906
W1 !leaf_port_inc0:0       172.086      753979       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.009     1507961      24.127   16213.589      16.000      87.038
W0 !leaf_source3:0        2100.011      753979      24.127   16213.586      32.000      87.039
W3 !leaf_source2:0        2100.009      753974      24.127   16213.473      32.000      87.039
W2 !leaf_source1:0        2100.014      753961      24.127   16213.180      32.000      87.041
----------------------------------------------------------------------------------------------

11:52:33.862335            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.752      756427      24.206   16266.217      32.000      79.599
W1 !leaf_port_inc0:0       173.257      756428       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1512853      24.206   16266.199      16.000      86.757
W0 !leaf_source3:0        2100.010      756436      24.206   16266.401      32.000      86.756
W3 !leaf_source2:0        2100.011      756427      24.206   16266.214      32.000      86.757
W2 !leaf_source1:0        2100.010      756434      24.206   16266.378      32.000      86.756
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=2
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source1:0, !leaf_port_inc0:1, !default_rr_3, !leaf_source3:0, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_2, !leaf_source2:0

11:52:49.475850            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1815.817     1727556      55.282   37149.383      32.000      32.847
W3 !leaf_port_inc0:1       284.195     1727568       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3455127      55.282   37149.524      16.000      37.987
W1 !leaf_source3:0        2100.010     1737003      55.584   37352.520      32.000      37.781
W2 !leaf_source0:0        1807.784     1748746      55.960   37605.045      32.000      32.305
W2 !leaf_port_inc0:0       292.228     1748752       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.011     3497535      55.961   37605.499      16.000      37.527
W0 !leaf_source2:0        2100.009     1761224      56.359   37873.381      32.000      37.261
----------------------------------------------------------------------------------------------

11:52:50.478539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.976     1722015      55.105   37030.231      32.000      32.973
W3 !leaf_port_inc0:1       283.036     1722009       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.012     3444034      55.105   37030.262      16.000      38.110
W1 !leaf_source3:0        2100.012     1731360      55.404   37231.185      32.000      37.904
W2 !leaf_source0:0        1807.551     1750589      56.019   37644.668      32.000      32.267
W2 !leaf_port_inc0:0       292.456     1750575       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     3501133      56.018   37644.189      16.000      37.488
W0 !leaf_source2:0        2100.012     1762233      56.391   37895.077      32.000      37.240
----------------------------------------------------------------------------------------------

11:52:51.481211            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.926     1725320      55.210   37101.286      32.000      32.909
W3 !leaf_port_inc0:1       283.085     1725327       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3450656      55.211   37101.460      16.000      38.036
W1 !leaf_source3:0        2100.010     1734715      55.511   37303.323      32.000      37.831
W2 !leaf_source0:0        1807.861     1748639      55.956   37602.743      32.000      32.308
W2 !leaf_port_inc0:0       292.152     1748649       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     3497296      55.957   37602.929      16.000      37.529
W0 !leaf_source2:0        2100.010     1760004      56.320   37847.133      32.000      37.287
----------------------------------------------------------------------------------------------","Looks good to me overall. A few minor comments:

IIRC Intel X710 does not support loopback mode, thus there would be no return (RX) traffic. For more accurate measurement of TX overhead, probably using (modified version of) s2p.bess
For common case optimization, where #TXQ >= #workers, it would be ideal bypass spinlocks completely. Even if there are more workers than queues, it might be still possible for some workers to skip locking (e.g., 2 queues & 3 workers, suppose Q0 is shared by W0,W2 and Q1 is used by W1 only (thus no spinlock).

This is easily doable only with wid-baased queue selection. So, Q: Is there particular use case of igate-based queue selection you have in mind?


Please include your BESS script used for measurement? (loopback.bess in this case?)",True,{}
NetSys/bess,https://github.com/NetSys/bess,938,2019-08-28T18:55:19Z,2019-09-03T16:38:21Z,2019-09-03T17:11:55Z,MERGED,True,53,33,3,https://github.com/melvinw,improve PortOut thread safety,2,[],https://github.com/NetSys/bess/pull/938,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/938#issuecomment-526749836,"This is kind of an RFC. The included commits replace the ResumeHook based thread saftey introduced by #661 with per-queue locks and minimal transmit load balancing (modular division seems fast enough for now since it only happens once per-batch).
Using the benchmark below on an XXV710 and a 2.1GHz E5-2620 v4. The overhead is fairly low when there's no contention.
dpdk_ports = int($BESS_PORTS!'1')
qsize = int($BESS_QSIZE!'128')
num_queues = int($BESS_QUEUES!'1')
num_workers = int($BESS_WORKERS!'1')

for i in range(num_workers):
        bess.add_worker(wid=i, core=i)

sources = [Source() for _ in range(num_workers)]

print('Using %d DPDK ports... (envvar ""BESS_PORTS"")' % dpdk_ports)
print('RX/TX queue size: %d packets per queue' % qsize)
print('NOTE: not all DPDK ports support lookback mode')

for i in range(dpdk_ports):
                p = PMDPort(port_id=i,
                                        loopback=1,
                                        size_inc_q=qsize,
                                        size_out_q=qsize,
                                        num_inc_q=num_queues,
                                        num_out_q=num_queues)
                pout = PortOut(port=p.name)
                for src in sources:
                        src -> pout
                PortInc(port=p.name) -> Sink()

Before the change
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

23:40:57.602144            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.319     2916951      93.342   62726.114      32.000      17.048
W0 !leaf_port_inc0:0       508.692     2916953       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5833900      93.342   62726.101      16.000      22.498
----------------------------------------------------------------------------------------------

23:40:58.603888            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.227     2917414      93.357   62736.085      32.000      17.044
W0 !leaf_port_inc0:0       508.782     2917415       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5834832      93.357   62736.134      16.000      22.494
----------------------------------------------------------------------------------------------

23:40:59.605590            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.124     2917842      93.371   62745.284      32.000      17.041
W0 !leaf_port_inc0:0       508.888     2917839       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5835684      93.371   62745.266      16.000      22.491
----------------------------------------------------------------------------------------------

After the change (no contention)
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

11:25:40.671544            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1711.045     2787092      89.187   59933.630      32.000      19.185
W0 !leaf_port_inc0:0       388.966     2787089       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574184      89.187   59933.632      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:41.673333            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.686     2787090      89.187   59933.589      32.000      19.181
W0 !leaf_port_inc0:0       389.323     2787091       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574181      89.187   59933.597      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:42.675116            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.680     2786947      89.182   59930.517      32.000      19.182
W0 !leaf_port_inc0:0       389.332     2786949       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5573882      89.182   59930.383      16.000      23.547
----------------------------------------------------------------------------------------------

11:25:43.676848            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.586     2787311      89.194   59938.350      32.000      19.178
W0 !leaf_port_inc0:0       389.425     2787308       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5574638      89.194   59938.509      16.000      23.544
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=4
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source3:0, !leaf_port_inc0:3, !default_rr_3, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source2:0, !leaf_port_inc0:2, !default_rr_2, !leaf_source1:0, !leaf_port_inc0:1, !default_rr_1

11:51:18.562539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.168     2246245      71.880   48303.264      32.000      22.874
W3 !leaf_port_inc0:3       455.840     2246246       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     4492483      71.880   48303.185      16.000      29.216
W0 !leaf_source0:0        1759.595     2421178      77.478   52065.008      32.000      22.711
W0 !leaf_port_inc0:0       340.417     2421177       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     4842355      77.478   52065.022      16.000      27.105
W2 !leaf_source2:0        1677.910     2049957      65.599   44082.291      32.000      25.578
W2 !leaf_port_inc0:2       422.102     2049957       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.009     4099907      65.599   44082.193      16.000      32.013
W1 !leaf_source1:0        1778.794     2299321      73.578   49444.605      32.000      24.176
W1 !leaf_port_inc0:1       321.217     2299321       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4598638      73.578   49444.557      16.000      28.541
----------------------------------------------------------------------------------------------

11:51:19.566015            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.678     2242692      71.766   48226.860      32.000      22.917
W3 !leaf_port_inc0:3       455.336     2242695       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.009     4485387      71.766   48226.883      16.000      29.262
W0 !leaf_source0:0        1758.153     2428862      77.724   52230.271      32.000      22.621
W0 !leaf_port_inc0:0       341.858     2428864       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     4857731      77.724   52230.322      16.000      27.019
W2 !leaf_source2:0        1677.433     2052020      65.665   44126.650      32.000      25.545
W2 !leaf_port_inc0:2       422.576     2052016       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     4104024      65.664   44126.467      16.000      31.981
W1 !leaf_source1:0        1778.937     2297444      73.518   49404.248      32.000      24.197
W1 !leaf_port_inc0:1       321.074     2297443       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594896      73.518   49404.328      16.000      28.564
----------------------------------------------------------------------------------------------

11:51:20.569463            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.265     2246325      71.882   48304.983      32.000      22.874
W3 !leaf_port_inc0:3       455.745     2246321       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.011     4492637      71.882   48304.840      16.000      29.215
W0 !leaf_source0:0        1759.063     2423398      77.549   52112.759      32.000      22.683
W0 !leaf_port_inc0:0       340.947     2423397       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     4846797      77.549   52112.764      16.000      27.080
W2 !leaf_source2:0        1677.791     2050621      65.620   44096.571      32.000      25.568
W2 !leaf_port_inc0:2       422.221     2050627       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     4101267      65.620   44096.829      16.000      32.002
W1 !leaf_source1:0        1779.016     2297325      73.514   49401.694      32.000      24.200
W1 !leaf_port_inc0:1       320.994     2297325       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594649      73.514   49401.673      16.000      28.566
----------------------------------------------------------------------------------------------

After the change (with contention)
localhost:10514 $ run port/loopback BESS_WORKERS=2, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source1:0

11:52:09.327137            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.301     1542957      49.375   33179.761      32.000      36.482
W0 !leaf_port_inc0:0       298.710     1542960       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     3085915      49.375   33179.761      16.000      42.532
W1 !leaf_source1:0        2100.010     1585577      50.738   34096.254      32.000      41.389
----------------------------------------------------------------------------------------------

11:52:10.329061            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1811.010     1512715      48.407   32529.433      32.000      37.412
W0 !leaf_port_inc0:0       289.008     1512731       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     3025478      48.408   32529.951      16.000      43.382
W1 !leaf_source1:0        2100.011     1557923      49.854   33501.597      32.000      42.124
----------------------------------------------------------------------------------------------

11:52:11.330955            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.704     1539172      49.254   33098.357      32.000      36.580
W0 !leaf_port_inc0:0       298.299     1539155       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     3078307      49.253   33097.952      16.000      42.637
W1 !leaf_source1:0        2100.008     1582169      50.629   34022.970      32.000      41.478
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_1, !leaf_source3:0, !leaf_source2:0, !leaf_source1:0

11:52:31.857821            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.620      756914      24.221   16276.694      32.000      79.543
W1 !leaf_port_inc0:0       173.395      756919       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1513841      24.221   16276.836      16.000      86.700
W0 !leaf_source3:0        2100.009      756908      24.221   16276.569      32.000      86.702
W3 !leaf_source2:0        2100.013      756924      24.222   16276.910      32.000      86.700
W2 !leaf_source1:0        2100.009      756928      24.222   16276.996      32.000      86.699
----------------------------------------------------------------------------------------------

11:52:32.860110            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1927.922      753979      24.127   16213.578      32.000      79.906
W1 !leaf_port_inc0:0       172.086      753979       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.009     1507961      24.127   16213.589      16.000      87.038
W0 !leaf_source3:0        2100.011      753979      24.127   16213.586      32.000      87.039
W3 !leaf_source2:0        2100.009      753974      24.127   16213.473      32.000      87.039
W2 !leaf_source1:0        2100.014      753961      24.127   16213.180      32.000      87.041
----------------------------------------------------------------------------------------------

11:52:33.862335            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.752      756427      24.206   16266.217      32.000      79.599
W1 !leaf_port_inc0:0       173.257      756428       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1512853      24.206   16266.199      16.000      86.757
W0 !leaf_source3:0        2100.010      756436      24.206   16266.401      32.000      86.756
W3 !leaf_source2:0        2100.011      756427      24.206   16266.214      32.000      86.757
W2 !leaf_source1:0        2100.010      756434      24.206   16266.378      32.000      86.756
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=2
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source1:0, !leaf_port_inc0:1, !default_rr_3, !leaf_source3:0, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_2, !leaf_source2:0

11:52:49.475850            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1815.817     1727556      55.282   37149.383      32.000      32.847
W3 !leaf_port_inc0:1       284.195     1727568       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3455127      55.282   37149.524      16.000      37.987
W1 !leaf_source3:0        2100.010     1737003      55.584   37352.520      32.000      37.781
W2 !leaf_source0:0        1807.784     1748746      55.960   37605.045      32.000      32.305
W2 !leaf_port_inc0:0       292.228     1748752       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.011     3497535      55.961   37605.499      16.000      37.527
W0 !leaf_source2:0        2100.009     1761224      56.359   37873.381      32.000      37.261
----------------------------------------------------------------------------------------------

11:52:50.478539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.976     1722015      55.105   37030.231      32.000      32.973
W3 !leaf_port_inc0:1       283.036     1722009       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.012     3444034      55.105   37030.262      16.000      38.110
W1 !leaf_source3:0        2100.012     1731360      55.404   37231.185      32.000      37.904
W2 !leaf_source0:0        1807.551     1750589      56.019   37644.668      32.000      32.267
W2 !leaf_port_inc0:0       292.456     1750575       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     3501133      56.018   37644.189      16.000      37.488
W0 !leaf_source2:0        2100.012     1762233      56.391   37895.077      32.000      37.240
----------------------------------------------------------------------------------------------

11:52:51.481211            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.926     1725320      55.210   37101.286      32.000      32.909
W3 !leaf_port_inc0:1       283.085     1725327       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3450656      55.211   37101.460      16.000      38.036
W1 !leaf_source3:0        2100.010     1734715      55.511   37303.323      32.000      37.831
W2 !leaf_source0:0        1807.861     1748639      55.956   37602.743      32.000      32.308
W2 !leaf_port_inc0:0       292.152     1748649       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     3497296      55.957   37602.929      16.000      37.529
W0 !leaf_source2:0        2100.010     1760004      56.320   37847.133      32.000      37.287
----------------------------------------------------------------------------------------------","Thanks @sangjinhan! Cleaned up and checked in the benchmark script. New results below.
Before
$ BESS_WORKERS=1 BESS_QUEUES=1 bin/bessctl daemon start -- run port/s2p -- monitor tc
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
Monitoring traffic classes: !leaf_source0:0

12:36:12.558757          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !leaf_source0:0      2100.011     3898500     124.752   83833.348      32.000      16.833
--------------------------------------------------------------------------------------------

12:36:13.560111          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !leaf_source0:0      2100.010     3905207     124.967   83977.581      32.000      16.805
--------------------------------------------------------------------------------------------

12:36:14.561424          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !leaf_source0:0      2100.012     3901830     124.859   83904.959      32.000      16.819
--------------------------------------------------------------------------------------------

After (w/o contention)
$ BESS_WORKERS=1 BESS_QUEUES=1 bin/bessctl daemon start -- run port/s2p -- monitor tc
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
Monitoring traffic classes: !leaf_source0:0

13:44:14.300635          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !leaf_source0:0      2100.011     3818578     122.195   82114.722      32.000      17.186
--------------------------------------------------------------------------------------------

13:44:15.302004          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !leaf_source0:0      2100.010     3814724     122.071   82031.839      32.000      17.203
--------------------------------------------------------------------------------------------

13:44:16.303339          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W0 !leaf_source0:0      2100.011     3811088     121.955   81953.656      32.000      17.220
--------------------------------------------------------------------------------------------

$ BESS_WORKERS=2 BESS_QUEUES=2 bin/bessctl daemon start -- run port/s2p -- monitor tc
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
Monitoring traffic classes: !leaf_source1:0, !leaf_source0:0

13:44:57.834161          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W1 !leaf_source1:0      2100.011     3641251     116.520   78301.466      32.000      18.023
W0 !leaf_source0:0      2100.011     3643326     116.586   78346.100      32.000      18.012
--------------------------------------------------------------------------------------------

13:44:58.835741          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W1 !leaf_source1:0      2100.009     3647734     116.727   78440.878      32.000      17.991
W0 !leaf_source0:0      2100.010     3646166     116.677   78407.155      32.000      17.998
--------------------------------------------------------------------------------------------

13:44:59.837272          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W1 !leaf_source1:0      2100.012     3647205     116.711   78429.498      32.000      17.993
W0 !leaf_source0:0      2100.010     3647170     116.709   78428.746      32.000      17.993
--------------------------------------------------------------------------------------------

$ BESS_WORKERS=4 BESS_QUEUES=4 bin/bessctl daemon start -- run port/s2p -- monitor tc
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
Monitoring traffic classes: !leaf_source3:0, !leaf_source2:0, !leaf_source0:0, !leaf_source1:0

13:45:17.452483          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W3 !leaf_source3:0      2100.010     3358374     107.468   72218.494      32.000      19.541
W2 !leaf_source2:0      2100.011     3096680      99.094   66591.008      32.000      21.192
W0 !leaf_source0:0      2100.012     4181622     133.812   89921.612      32.000      15.694
W1 !leaf_source1:0      2100.010     3804449     121.742   81810.879      32.000      17.250
--------------------------------------------------------------------------------------------

13:45:18.454504          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W3 !leaf_source3:0      2100.011     3351086     107.235   72061.772      32.000      19.583
W2 !leaf_source2:0      2100.009     3100655      99.221   66676.506      32.000      21.165
W0 !leaf_source0:0      2100.010     4180364     133.772   89894.551      32.000      15.698
W1 !leaf_source1:0      2100.010     3805486     121.776   81833.181      32.000      17.245
--------------------------------------------------------------------------------------------

13:45:19.456435          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W3 !leaf_source3:0      2100.012     3353832     107.323   72120.815      32.000      19.567
W2 !leaf_source2:0      2100.012     3104156      99.333   66751.787      32.000      21.141
W0 !leaf_source0:0      2100.011     4182393     133.837   89938.181      32.000      15.691
W1 !leaf_source1:0      2100.013     3804978     121.759   81822.250      32.000      17.247
--------------------------------------------------------------------------------------------

$ BESS_WORKERS=6 BESS_QUEUES=6 bin/bessctl daemon start -- run port/s2p -- monitor tc
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
Monitoring traffic classes: !leaf_source5:0, !leaf_source4:0, !leaf_source3:0, !leaf_source2:0, !leaf_source0:0, !leaf_source1:0

13:46:55.167737          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W5 !leaf_source5:0      2100.013     3782918     121.053   81347.883      32.000      17.348
W4 !leaf_source4:0      2100.010     3347537     107.121   71985.438      32.000      19.604
W3 !leaf_source3:0      2100.011     3309054     105.890   71157.918      32.000      19.832
W2 !leaf_source2:0      2100.011     3538082     113.219   76082.922      32.000      18.548
W0 !leaf_source0:0      2100.011     3732933     119.454   80273.004      32.000      17.580
W1 !leaf_source1:0      2100.011     3505540     112.177   75383.152      32.000      18.720
--------------------------------------------------------------------------------------------

13:46:56.170233          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W5 !leaf_source5:0      2100.010     3782738     121.048   81344.006      32.000      17.349
W4 !leaf_source4:0      2100.009     3347525     107.121   71985.178      32.000      19.604
W3 !leaf_source3:0      2100.011     3304511     105.744   71060.216      32.000      19.859
W2 !leaf_source2:0      2100.010     3532386     113.036   75960.445      32.000      18.578
W0 !leaf_source0:0      2100.010     3732662     119.445   80267.169      32.000      17.581
W1 !leaf_source1:0      2100.009     3504375     112.140   75358.081      32.000      18.727
--------------------------------------------------------------------------------------------

13:46:57.172687          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W5 !leaf_source5:0      2100.009     3779999     120.960   81285.099      32.000      17.361
W4 !leaf_source4:0      2100.011     3348648     107.157   72009.338      32.000      19.598
W3 !leaf_source3:0      2100.012     3302642     105.685   71020.031      32.000      19.871
W2 !leaf_source2:0      2100.010     3536845     113.179   76056.325      32.000      18.555
W0 !leaf_source0:0      2100.009     3730429     119.374   80219.163      32.000      17.592
W1 !leaf_source1:0      2100.012     3503387     112.108   75336.846      32.000      18.732
--------------------------------------------------------------------------------------------

After (w/ contention)
$ BESS_WORKERS=2 BESS_QUEUES=1 bin/bessctl daemon start -- run port/s2p -- monitor tc
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
Monitoring traffic classes: !leaf_source1:0, !leaf_source0:0

13:58:35.653585          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W1 !leaf_source1:0      2100.009     1340777      42.905   28832.074      32.000      48.946
W0 !leaf_source0:0      2100.010     1357836      43.451   29198.922      32.000      48.331
--------------------------------------------------------------------------------------------

13:58:36.655191          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W1 !leaf_source1:0      2100.011     1350957      43.231   29050.992      32.000      48.577
W0 !leaf_source0:0      2100.011     1367842      43.771   29414.080      32.000      47.977
--------------------------------------------------------------------------------------------

13:58:37.656740          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W1 !leaf_source1:0      2100.012     1349581      43.187   29021.402      32.000      48.626
W0 !leaf_source0:0      2100.011     1366735      43.736   29390.289      32.000      48.016
--------------------------------------------------------------------------------------------

$ BESS_WORKERS=4 BESS_QUEUES=1 bin/bessctl daemon start -- run port/s2p -- monitor tc
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
Monitoring traffic classes: !leaf_source3:0, !leaf_source2:0, !leaf_source0:0, !leaf_source1:0

13:58:48.559053          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W3 !leaf_source3:0      2100.011      740813      23.706   15930.448      32.000      88.586
W2 !leaf_source2:0      2100.008      741191      23.718   15938.575      32.000      88.540
W0 !leaf_source0:0      2100.009      737840      23.611   15866.522      32.000      88.942
W1 !leaf_source1:0      2100.012     3182243     101.832   68430.959      32.000      20.622
--------------------------------------------------------------------------------------------

13:58:49.561037          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W3 !leaf_source3:0      2100.010      743583      23.795   15990.020      32.000      88.255
W2 !leaf_source2:0      2100.015      743801      23.802   15994.711      32.000      88.230
W0 !leaf_source0:0      2100.013      740824      23.706   15930.683      32.000      88.584
W1 !leaf_source1:0      2100.009     3183345     101.867   68454.670      32.000      20.615
--------------------------------------------------------------------------------------------

13:58:50.562962          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W3 !leaf_source3:0      2100.013      743481      23.791   15987.830      32.000      88.268
W2 !leaf_source2:0      2100.008      743834      23.803   15995.424      32.000      88.226
W0 !leaf_source0:0      2100.011      741256      23.720   15939.974      32.000      88.533
W1 !leaf_source1:0      2100.010     3182896     101.853   68445.016      32.000      20.618
--------------------------------------------------------------------------------------------

$ BESS_WORKERS=6 BESS_QUEUES=1 bin/bessctl daemon start -- run port/s2p -- monitor tc
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
Monitoring traffic classes: !leaf_source5:0, !leaf_source4:0, !leaf_source3:0, !leaf_source2:0, !leaf_source0:0, !leaf_source1:0

14:01:18.896122          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W5 !leaf_source5:0      2100.011     2735193      87.526   58817.596      32.000      23.993
W4 !leaf_source4:0      2100.012      603359      19.308   12974.646      32.000     108.767
W3 !leaf_source3:0      2100.011      584015      18.688   12558.659      32.000     112.369
W2 !leaf_source2:0      2100.012      582186      18.630   12519.332      32.000     112.722
W0 !leaf_source0:0      2100.010     2746449      87.886   59059.641      32.000      23.895
W1 !leaf_source1:0      2100.018      601206      19.239   12928.345      32.000     109.156
--------------------------------------------------------------------------------------------

14:01:19.898598          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W5 !leaf_source5:0      2100.009     2726435      87.246   58629.277      32.000      24.070
W4 !leaf_source4:0      2100.010      606378      19.404   13039.568      32.000     108.225
W3 !leaf_source3:0      2100.012      585806      18.746   12597.176      32.000     112.026
W2 !leaf_source2:0      2100.012      583324      18.666   12543.818      32.000     112.502
W0 !leaf_source0:0      2100.010     2719845      87.035   58487.562      32.000      24.128
W1 !leaf_source1:0      2100.008      602189      19.270   12949.494      32.000     108.978
--------------------------------------------------------------------------------------------

14:01:20.901010          CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
--------------------------------------------------------------------------------------------
W5 !leaf_source5:0      2100.012     2740024      87.681   58921.486      32.000      23.951
W4 !leaf_source4:0      2100.010      607428      19.438   13062.148      32.000     108.038
W3 !leaf_source3:0      2100.011      586703      18.774   12616.462      32.000     111.854
W2 !leaf_source2:0      2100.009      584121      18.692   12560.949      32.000     112.349
W0 !leaf_source0:0      2100.012     2759309      88.298   59336.194      32.000      23.783
W1 !leaf_source1:0      2100.013      602332      19.275   12952.562      32.000     108.952
--------------------------------------------------------------------------------------------",True,{}
NetSys/bess,https://github.com/NetSys/bess,938,2019-08-28T18:55:19Z,2019-09-03T16:38:21Z,2019-09-03T17:11:55Z,MERGED,True,53,33,3,https://github.com/melvinw,improve PortOut thread safety,2,[],https://github.com/NetSys/bess/pull/938,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/938#issuecomment-527539308,"This is kind of an RFC. The included commits replace the ResumeHook based thread saftey introduced by #661 with per-queue locks and minimal transmit load balancing (modular division seems fast enough for now since it only happens once per-batch).
Using the benchmark below on an XXV710 and a 2.1GHz E5-2620 v4. The overhead is fairly low when there's no contention.
dpdk_ports = int($BESS_PORTS!'1')
qsize = int($BESS_QSIZE!'128')
num_queues = int($BESS_QUEUES!'1')
num_workers = int($BESS_WORKERS!'1')

for i in range(num_workers):
        bess.add_worker(wid=i, core=i)

sources = [Source() for _ in range(num_workers)]

print('Using %d DPDK ports... (envvar ""BESS_PORTS"")' % dpdk_ports)
print('RX/TX queue size: %d packets per queue' % qsize)
print('NOTE: not all DPDK ports support lookback mode')

for i in range(dpdk_ports):
                p = PMDPort(port_id=i,
                                        loopback=1,
                                        size_inc_q=qsize,
                                        size_out_q=qsize,
                                        num_inc_q=num_queues,
                                        num_out_q=num_queues)
                pout = PortOut(port=p.name)
                for src in sources:
                        src -> pout
                PortInc(port=p.name) -> Sink()

Before the change
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

23:40:57.602144            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.319     2916951      93.342   62726.114      32.000      17.048
W0 !leaf_port_inc0:0       508.692     2916953       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5833900      93.342   62726.101      16.000      22.498
----------------------------------------------------------------------------------------------

23:40:58.603888            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.227     2917414      93.357   62736.085      32.000      17.044
W0 !leaf_port_inc0:0       508.782     2917415       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5834832      93.357   62736.134      16.000      22.494
----------------------------------------------------------------------------------------------

23:40:59.605590            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1591.124     2917842      93.371   62745.284      32.000      17.041
W0 !leaf_port_inc0:0       508.888     2917839       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5835684      93.371   62745.266      16.000      22.491
----------------------------------------------------------------------------------------------

After the change (no contention)
localhost:10514 $ run port/loopback BESS_WORKERS=1
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Environment variable ""BESS_QUEUES"" is not set. Using default value ""1""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0

11:25:40.671544            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1711.045     2787092      89.187   59933.630      32.000      19.185
W0 !leaf_port_inc0:0       388.966     2787089       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574184      89.187   59933.632      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:41.673333            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.686     2787090      89.187   59933.589      32.000      19.181
W0 !leaf_port_inc0:0       389.323     2787091       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5574181      89.187   59933.597      16.000      23.546
----------------------------------------------------------------------------------------------

11:25:42.675116            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.680     2786947      89.182   59930.517      32.000      19.182
W0 !leaf_port_inc0:0       389.332     2786949       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     5573882      89.182   59930.383      16.000      23.547
----------------------------------------------------------------------------------------------

11:25:43.676848            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1710.586     2787311      89.194   59938.350      32.000      19.178
W0 !leaf_port_inc0:0       389.425     2787308       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     5574638      89.194   59938.509      16.000      23.544
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=4
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source3:0, !leaf_port_inc0:3, !default_rr_3, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source2:0, !leaf_port_inc0:2, !default_rr_2, !leaf_source1:0, !leaf_port_inc0:1, !default_rr_1

11:51:18.562539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.168     2246245      71.880   48303.264      32.000      22.874
W3 !leaf_port_inc0:3       455.840     2246246       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     4492483      71.880   48303.185      16.000      29.216
W0 !leaf_source0:0        1759.595     2421178      77.478   52065.008      32.000      22.711
W0 !leaf_port_inc0:0       340.417     2421177       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     4842355      77.478   52065.022      16.000      27.105
W2 !leaf_source2:0        1677.910     2049957      65.599   44082.291      32.000      25.578
W2 !leaf_port_inc0:2       422.102     2049957       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.009     4099907      65.599   44082.193      16.000      32.013
W1 !leaf_source1:0        1778.794     2299321      73.578   49444.605      32.000      24.176
W1 !leaf_port_inc0:1       321.217     2299321       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4598638      73.578   49444.557      16.000      28.541
----------------------------------------------------------------------------------------------

11:51:19.566015            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.678     2242692      71.766   48226.860      32.000      22.917
W3 !leaf_port_inc0:3       455.336     2242695       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.009     4485387      71.766   48226.883      16.000      29.262
W0 !leaf_source0:0        1758.153     2428862      77.724   52230.271      32.000      22.621
W0 !leaf_port_inc0:0       341.858     2428864       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     4857731      77.724   52230.322      16.000      27.019
W2 !leaf_source2:0        1677.433     2052020      65.665   44126.650      32.000      25.545
W2 !leaf_port_inc0:2       422.576     2052016       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     4104024      65.664   44126.467      16.000      31.981
W1 !leaf_source1:0        1778.937     2297444      73.518   49404.248      32.000      24.197
W1 !leaf_port_inc0:1       321.074     2297443       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594896      73.518   49404.328      16.000      28.564
----------------------------------------------------------------------------------------------

11:51:20.569463            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source3:0        1644.265     2246325      71.882   48304.983      32.000      22.874
W3 !leaf_port_inc0:3       455.745     2246321       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.011     4492637      71.882   48304.840      16.000      29.215
W0 !leaf_source0:0        1759.063     2423398      77.549   52112.759      32.000      22.683
W0 !leaf_port_inc0:0       340.947     2423397       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     4846797      77.549   52112.764      16.000      27.080
W2 !leaf_source2:0        1677.791     2050621      65.620   44096.571      32.000      25.568
W2 !leaf_port_inc0:2       422.221     2050627       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     4101267      65.620   44096.829      16.000      32.002
W1 !leaf_source1:0        1779.016     2297325      73.514   49401.694      32.000      24.200
W1 !leaf_port_inc0:1       320.994     2297325       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.010     4594649      73.514   49401.673      16.000      28.566
----------------------------------------------------------------------------------------------

After the change (with contention)
localhost:10514 $ run port/loopback BESS_WORKERS=2, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_0, !leaf_source1:0

11:52:09.327137            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.301     1542957      49.375   33179.761      32.000      36.482
W0 !leaf_port_inc0:0       298.710     1542960       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.011     3085915      49.375   33179.761      16.000      42.532
W1 !leaf_source1:0        2100.010     1585577      50.738   34096.254      32.000      41.389
----------------------------------------------------------------------------------------------

11:52:10.329061            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1811.010     1512715      48.407   32529.433      32.000      37.412
W0 !leaf_port_inc0:0       289.008     1512731       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.012     3025478      48.408   32529.951      16.000      43.382
W1 !leaf_source1:0        2100.011     1557923      49.854   33501.597      32.000      42.124
----------------------------------------------------------------------------------------------

11:52:11.330955            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W0 !leaf_source0:0        1801.704     1539172      49.254   33098.357      32.000      36.580
W0 !leaf_port_inc0:0       298.299     1539155       0.000       0.000       0.000       0.000
W0 !default_rr_0          2100.010     3078307      49.253   33097.952      16.000      42.637
W1 !leaf_source1:0        2100.008     1582169      50.629   34022.970      32.000      41.478
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=1
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source0:0, !leaf_port_inc0:0, !default_rr_1, !leaf_source3:0, !leaf_source2:0, !leaf_source1:0

11:52:31.857821            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.620      756914      24.221   16276.694      32.000      79.543
W1 !leaf_port_inc0:0       173.395      756919       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1513841      24.221   16276.836      16.000      86.700
W0 !leaf_source3:0        2100.009      756908      24.221   16276.569      32.000      86.702
W3 !leaf_source2:0        2100.013      756924      24.222   16276.910      32.000      86.700
W2 !leaf_source1:0        2100.009      756928      24.222   16276.996      32.000      86.699
----------------------------------------------------------------------------------------------

11:52:32.860110            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1927.922      753979      24.127   16213.578      32.000      79.906
W1 !leaf_port_inc0:0       172.086      753979       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.009     1507961      24.127   16213.589      16.000      87.038
W0 !leaf_source3:0        2100.011      753979      24.127   16213.586      32.000      87.039
W3 !leaf_source2:0        2100.009      753974      24.127   16213.473      32.000      87.039
W2 !leaf_source1:0        2100.014      753961      24.127   16213.180      32.000      87.041
----------------------------------------------------------------------------------------------

11:52:33.862335            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W1 !leaf_source0:0        1926.752      756427      24.206   16266.217      32.000      79.599
W1 !leaf_port_inc0:0       173.257      756428       0.000       0.000       0.000       0.000
W1 !default_rr_1          2100.011     1512853      24.206   16266.199      16.000      86.757
W0 !leaf_source3:0        2100.010      756436      24.206   16266.401      32.000      86.756
W3 !leaf_source2:0        2100.011      756427      24.206   16266.214      32.000      86.757
W2 !leaf_source1:0        2100.010      756434      24.206   16266.378      32.000      86.756
----------------------------------------------------------------------------------------------

localhost:10514 $ run port/loopback BESS_WORKERS=4, BESS_QUEUES=2
WARNING: The current pipeline will be reset. Are you sure? (type ""yes"") yes
Environment variable ""BESS_PORTS"" is not set. Using default value ""1""
Environment variable ""BESS_QSIZE"" is not set. Using default value ""128""
Using 1 DPDK ports... (envvar ""BESS_PORTS"")
RX/TX queue size: 128 packets per queue
NOTE: not all DPDK ports support lookback mode
Done.
localhost:10514 $ monitor tc
Monitoring traffic classes: !leaf_source1:0, !leaf_port_inc0:1, !default_rr_3, !leaf_source3:0, !leaf_source0:0, !leaf_port_inc0:0, !default_rr_2, !leaf_source2:0

11:52:49.475850            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1815.817     1727556      55.282   37149.383      32.000      32.847
W3 !leaf_port_inc0:1       284.195     1727568       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3455127      55.282   37149.524      16.000      37.987
W1 !leaf_source3:0        2100.010     1737003      55.584   37352.520      32.000      37.781
W2 !leaf_source0:0        1807.784     1748746      55.960   37605.045      32.000      32.305
W2 !leaf_port_inc0:0       292.228     1748752       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.011     3497535      55.961   37605.499      16.000      37.527
W0 !leaf_source2:0        2100.009     1761224      56.359   37873.381      32.000      37.261
----------------------------------------------------------------------------------------------

11:52:50.478539            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.976     1722015      55.105   37030.231      32.000      32.973
W3 !leaf_port_inc0:1       283.036     1722009       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.012     3444034      55.105   37030.262      16.000      38.110
W1 !leaf_source3:0        2100.012     1731360      55.404   37231.185      32.000      37.904
W2 !leaf_source0:0        1807.551     1750589      56.019   37644.668      32.000      32.267
W2 !leaf_port_inc0:0       292.456     1750575       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.012     3501133      56.018   37644.189      16.000      37.488
W0 !leaf_source2:0        2100.012     1762233      56.391   37895.077      32.000      37.240
----------------------------------------------------------------------------------------------

11:52:51.481211            CPU MHz   scheduled        Mpps        Mbps  pkts/sched    cycles/p
----------------------------------------------------------------------------------------------
W3 !leaf_source1:0        1816.926     1725320      55.210   37101.286      32.000      32.909
W3 !leaf_port_inc0:1       283.085     1725327       0.000       0.000       0.000       0.000
W3 !default_rr_3          2100.010     3450656      55.211   37101.460      16.000      38.036
W1 !leaf_source3:0        2100.010     1734715      55.511   37303.323      32.000      37.831
W2 !leaf_source0:0        1807.861     1748639      55.956   37602.743      32.000      32.308
W2 !leaf_port_inc0:0       292.152     1748649       0.000       0.000       0.000       0.000
W2 !default_rr_2          2100.010     3497296      55.957   37602.929      16.000      37.529
W0 !leaf_source2:0        2100.010     1760004      56.320   37847.133      32.000      37.287
----------------------------------------------------------------------------------------------","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,940,2019-09-17T22:00:10Z,2019-11-02T19:01:23Z,2019-11-02T19:03:22Z,MERGED,True,1,1,1,https://github.com/kot-begemot-uk,There are more than 64 Core/Thread CPUs nowdays,1,[],https://github.com/NetSys/bess/pull/940,https://github.com/kot-begemot-uk,1,https://github.com/NetSys/bess/pull/940,"Rather obvious one. Without it bess crashes on a two socket Xeon which claims to have 36 Cores/72 threads.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","Rather obvious one. Without it bess crashes on a two socket Xeon which claims to have 36 Cores/72 threads.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,940,2019-09-17T22:00:10Z,2019-11-02T19:01:23Z,2019-11-02T19:03:22Z,MERGED,True,1,1,1,https://github.com/kot-begemot-uk,There are more than 64 Core/Thread CPUs nowdays,1,[],https://github.com/NetSys/bess/pull/940,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/940#issuecomment-532424340,"Rather obvious one. Without it bess crashes on a two socket Xeon which claims to have 36 Cores/72 threads.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com","Codecov Report

Merging #940 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #940      +/-   ##
==========================================
+ Coverage    55.7%   55.78%   +0.08%     
==========================================
  Files           9        9              
  Lines        1149     1149              
==========================================
+ Hits          640      641       +1     
+ Misses        509      508       -1



Impacted Files
Coverage Δ





pybess/bess.py
40.12% <0%> (+0.21%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 1327868...24f6d72. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,940,2019-09-17T22:00:10Z,2019-11-02T19:01:23Z,2019-11-02T19:03:22Z,MERGED,True,1,1,1,https://github.com/kot-begemot-uk,There are more than 64 Core/Thread CPUs nowdays,1,[],https://github.com/NetSys/bess/pull/940,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/940#issuecomment-549071697,"Rather obvious one. Without it bess crashes on a two socket Xeon which claims to have 36 Cores/72 threads.
Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,941,2019-10-04T02:15:55Z,2019-10-04T04:58:11Z,2019-10-04T04:58:11Z,CLOSED,False,134,25,5,https://github.com/ravikush11,Bess upgrade dpdk 18.11.2,2,[],https://github.com/NetSys/bess/pull/941,https://github.com/ravikush11,1,https://github.com/NetSys/bess/pull/941,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,941,2019-10-04T02:15:55Z,2019-10-04T04:58:11Z,2019-10-04T04:58:11Z,CLOSED,False,134,25,5,https://github.com/ravikush11,Bess upgrade dpdk 18.11.2,2,[],https://github.com/NetSys/bess/pull/941,https://github.com/ravikush11,2,https://github.com/NetSys/bess/pull/941#issuecomment-538234074,,Will raise this PR in forked repo.,True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/trozet,1,https://github.com/NetSys/bess/pull/943,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com","Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/trozet,2,https://github.com/NetSys/bess/pull/943#issuecomment-547535791,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com","Adding PCI based PMDPort works, need to test vdev and traffic.",True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/trozet,3,https://github.com/NetSys/bess/pull/943#issuecomment-548136113,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com","tcp_flow_reconstruct_test is failing because PacketPool is segfaulting during call to : rte_mempool_op_calc_mem_size_default
https://gist.githubusercontent.com/trozet/d7a35edac02e6b29881d5907f8c03c8b/raw/b930c42f18f758546196fa3faad63dc529f8ac46/gistfile1.txt
@sangjinhan  do you mind taking a look at the above please?",True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/trozet,4,https://github.com/NetSys/bess/pull/943#issuecomment-548177075,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com","@sangjinhan nvm it should be fixed now. New error that I will look at tmrw:
/usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/libpcap.a(bpf_filter.o): In function bpf_validate': (.text+0x520): multiple definition of bpf_validate'
/build/bess/deps/dpdk-19.08/build/lib/librte_bpf.a(bpf_validate.o):/build/bess/deps/dpdk-19.08/lib/librte_bpf/bpf_validate.c:2213: first defined here",True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/apps/codecov,5,https://github.com/NetSys/bess/pull/943#issuecomment-552011665,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com","Codecov Report

Merging #943 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #943   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4918df4...066903f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/krsna1729,6,https://github.com/NetSys/bess/pull/943#issuecomment-559647057,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com","DPDK LTS 19.11 released today. Tried this PR (DPDK compiled separately). Needed minor changes shown below
https://doc.dpdk.org/guides/rel_notes/release_19_11.html#api-changes
https://doc.dpdk.org/guides/rel_notes/release_19_11.html#new-features
diff --git a/core/drivers/pmd.cc b/core/drivers/pmd.cc
index 3ed68315..1c31efdc 100644
--- a/core/drivers/pmd.cc
+++ b/core/drivers/pmd.cc
@@ -126,8 +126,7 @@ static CommandResponse find_dpdk_port_by_pci_addr(const std::string &pci,
     return CommandFailure(EINVAL, ""No PCI address specified"");
   }
 
-  if (eal_parse_pci_DomBDF(pci.c_str(), &addr) != 0 &&
-      eal_parse_pci_BDF(pci.c_str(), &addr) != 0) {
+  if (rte_pci_addr_parse(pci.c_str(), &addr) != 0) {
     return CommandFailure(EINVAL,
                           ""PCI address must be like ""
                           ""dddd:bb:dd.ff or bb:dd.ff"");
@@ -139,7 +138,7 @@ static CommandResponse find_dpdk_port_by_pci_addr(const std::string &pci,
     rte_eth_dev_info_get(i, &dev_info);
 
     if (dev_info.pci_dev) {
-      if (rte_eal_compare_pci_addr(&addr, &dev_info.pci_dev->addr) == 0) {
+      if (rte_pci_addr_cmp(&addr, &dev_info.pci_dev->addr) == 0) {
         port_id = i;
         break;
       }
diff --git a/core/packet_pool.cc b/core/packet_pool.cc
index 7318cee6..e08c99cc 100644
--- a/core/packet_pool.cc
+++ b/core/packet_pool.cc
@@ -147,7 +147,8 @@ bool PacketPool::AllocBulk(Packet **pkts, size_t count, size_t len) {
 void PacketPool::PostPopulate() {
   PoolPrivate priv = {
       .dpdk_priv = {.mbuf_data_room_size = SNBUF_HEADROOM + SNBUF_DATA,
-                    .mbuf_priv_size = SNBUF_RESERVE},
+                    .mbuf_priv_size = SNBUF_RESERVE,
+                    .flags = 0},
       .owner = this};
 
   rte_pktmbuf_pool_init(pool_, &priv.dpdk_priv);",True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/trozet,7,https://github.com/NetSys/bess/pull/943#issuecomment-561222339,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com",Thanks @krsna1729! Will update the PR to 19.11 with your changes.,True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/trozet,8,https://github.com/NetSys/bess/pull/943#issuecomment-561371093,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com","1 case failed on clang 6. It might be transient. Worth re-running travis I think
[----------] 1 test from ProcessCommandLineArgs
[ RUN      ] ProcessCommandLineArgs.DumpTypes
bessd_test.cc:148: Failure
Death test: ProcessCommandLineArgs()
Result: died but not with expected exit code:
Exited with exit status 1
Actual msg:
[  DEATH   ] AddressSanitizer:DEADLYSIGNAL
[  DEATH   ]
[  FAILED  ] ProcessCommandLineArgs.DumpTypes (92 ms)",True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/943#issuecomment-564274386,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com",Thank you very much for doing this. Please don't worry about the address sanitizer error. It seems to have nothing to do with this PR (other PRs are having the same problem). I am looking into the issue.,True,{'THUMBS_UP': ['https://github.com/krsna1729']}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/krsna1729,10,https://github.com/NetSys/bess/pull/943#issuecomment-589839110,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com",@sangjinhan,True,{}
NetSys/bess,https://github.com/NetSys/bess,943,2019-10-29T17:19:44Z,2020-04-03T20:17:09Z,2020-04-03T20:17:10Z,CLOSED,False,180,161,9,https://github.com/trozet,Updates DPDK to 19.11,13,[],https://github.com/NetSys/bess/pull/943,https://github.com/melvinw,11,https://github.com/NetSys/bess/pull/943#issuecomment-608638592,"Also sets RSS HW offload flags based on device info and RX queues
configured rather than assuming all flags are supported. This fixes an
issue with setting invalid flags on XL710 NICs.
Closes #921
Signed-off-by: Tim Rozet trozet@redhat.com",Superseded by #965. Thanks again for doing this!,True,{}
NetSys/bess,https://github.com/NetSys/bess,944,2019-11-02T00:13:59Z,2019-11-02T20:06:20Z,2019-11-23T21:33:34Z,MERGED,True,30,2,2,https://github.com/melvinw,"modules/queue: implement {G,S}etRuntimeConfig()",1,[],https://github.com/NetSys/bess/pull/944,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/944,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,944,2019-11-02T00:13:59Z,2019-11-02T20:06:20Z,2019-11-23T21:33:34Z,MERGED,True,30,2,2,https://github.com/melvinw,"modules/queue: implement {G,S}etRuntimeConfig()",1,[],https://github.com/NetSys/bess/pull/944,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/944#issuecomment-548993861,,"Codecov Report

Merging #944 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #944   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5682295...a9d2d77. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,944,2019-11-02T00:13:59Z,2019-11-02T20:06:20Z,2019-11-23T21:33:34Z,MERGED,True,30,2,2,https://github.com/melvinw,"modules/queue: implement {G,S}etRuntimeConfig()",1,[],https://github.com/NetSys/bess/pull/944,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/944#issuecomment-549076518,,Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,945,2019-11-04T10:30:19Z,2019-12-16T19:06:02Z,2019-12-16T19:06:16Z,MERGED,True,5,1,1,https://github.com/kot-begemot-uk,Fix kernel module build for kernels >= 5.2.0,2,[],https://github.com/NetSys/bess/pull/945,https://github.com/kot-begemot-uk,1,https://github.com/NetSys/bess/pull/945,Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com,Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com,True,{}
NetSys/bess,https://github.com/NetSys/bess,945,2019-11-04T10:30:19Z,2019-12-16T19:06:02Z,2019-12-16T19:06:16Z,MERGED,True,5,1,1,https://github.com/kot-begemot-uk,Fix kernel module build for kernels >= 5.2.0,2,[],https://github.com/NetSys/bess/pull/945,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/945#issuecomment-549299030,Signed-off-by: Anton Ivanov anton.ivanov@cambridgegreys.com,"Codecov Report

Merging #945 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #945   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4918df4...9bc3fd6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,946,2019-11-04T22:41:39Z,,2020-06-16T04:18:50Z,OPEN,False,72,40,8,https://github.com/trozet,Allows specifying socket/numa node for BESS,2,[],https://github.com/NetSys/bess/pull/946,https://github.com/trozet,1,https://github.com/NetSys/bess/pull/946,"Using ""-n"" flag a user may now specify the desired socket to allocate
huge pages from when using BESS.
Also includes a check for worker core existing on the correct socket
before trying to launch a worker. If worker is launched on a core on an
unused socket GetDefaultPool will crash bessd.
Signed-off-by: Tim Rozet trozet@redhat.com","Using ""-n"" flag a user may now specify the desired socket to allocate
huge pages from when using BESS.
Also includes a check for worker core existing on the correct socket
before trying to launch a worker. If worker is launched on a core on an
unused socket GetDefaultPool will crash bessd.
Signed-off-by: Tim Rozet trozet@redhat.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,946,2019-11-04T22:41:39Z,,2020-06-16T04:18:50Z,OPEN,False,72,40,8,https://github.com/trozet,Allows specifying socket/numa node for BESS,2,[],https://github.com/NetSys/bess/pull/946,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/946#issuecomment-549585965,"Using ""-n"" flag a user may now specify the desired socket to allocate
huge pages from when using BESS.
Also includes a check for worker core existing on the correct socket
before trying to launch a worker. If worker is launched on a core on an
unused socket GetDefaultPool will crash bessd.
Signed-off-by: Tim Rozet trozet@redhat.com","Codecov Report

Merging #946 into master will not change coverage by %.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #946   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4918df4...105f2bb. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,948,2019-12-02T23:57:13Z,2019-12-12T20:12:33Z,2019-12-12T20:12:39Z,CLOSED,False,7,5,2,https://github.com/mukerjee,bessctl: allow running module tests as fakeroot,1,[],https://github.com/NetSys/bess/pull/948,https://github.com/mukerjee,1,https://github.com/NetSys/bess/pull/948,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,948,2019-12-02T23:57:13Z,2019-12-12T20:12:33Z,2019-12-12T20:12:39Z,CLOSED,False,7,5,2,https://github.com/mukerjee,bessctl: allow running module tests as fakeroot,1,[],https://github.com/NetSys/bess/pull/948,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/948#issuecomment-561406513,,"The Travis failure is odd, as there is no change to bessd arguments and types.  Investigating...",True,{}
NetSys/bess,https://github.com/NetSys/bess,948,2019-12-02T23:57:13Z,2019-12-12T20:12:33Z,2019-12-12T20:12:39Z,CLOSED,False,7,5,2,https://github.com/mukerjee,bessctl: allow running module tests as fakeroot,1,[],https://github.com/NetSys/bess/pull/948,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/948#issuecomment-561420202,,"I can't reproduce the Travis failure. I hate to suggest ""try it again"" but ... try it again? 😛",True,{}
NetSys/bess,https://github.com/NetSys/bess,948,2019-12-02T23:57:13Z,2019-12-12T20:12:33Z,2019-12-12T20:12:39Z,CLOSED,False,7,5,2,https://github.com/mukerjee,bessctl: allow running module tests as fakeroot,1,[],https://github.com/NetSys/bess/pull/948,https://github.com/mukerjee,4,https://github.com/NetSys/bess/pull/948#issuecomment-561423615,,"Thanks @chris3torek ! I don't know how to do a re-run for travis (or I don't have permission, maybe).",True,{}
NetSys/bess,https://github.com/NetSys/bess,948,2019-12-02T23:57:13Z,2019-12-12T20:12:33Z,2019-12-12T20:12:39Z,CLOSED,False,7,5,2,https://github.com/mukerjee,bessctl: allow running module tests as fakeroot,1,[],https://github.com/NetSys/bess/pull/948,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/948#issuecomment-562656863,,re-running travis for this,True,{}
NetSys/bess,https://github.com/NetSys/bess,948,2019-12-02T23:57:13Z,2019-12-12T20:12:33Z,2019-12-12T20:12:39Z,CLOSED,False,7,5,2,https://github.com/mukerjee,bessctl: allow running module tests as fakeroot,1,[],https://github.com/NetSys/bess/pull/948,https://github.com/apps/codecov,6,https://github.com/NetSys/bess/pull/948#issuecomment-564301425,,"Codecov Report

Merging #948 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #948   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4918df4...c66526f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,948,2019-12-02T23:57:13Z,2019-12-12T20:12:33Z,2019-12-12T20:12:39Z,CLOSED,False,7,5,2,https://github.com/mukerjee,bessctl: allow running module tests as fakeroot,1,[],https://github.com/NetSys/bess/pull/948,https://github.com/mukerjee,7,https://github.com/NetSys/bess/pull/948#issuecomment-565167084,,closing in favor of #952,True,{}
NetSys/bess,https://github.com/NetSys/bess,949,2019-12-06T02:53:42Z,2020-01-14T22:22:31Z,2020-01-14T22:22:40Z,MERGED,True,17,0,4,https://github.com/melvinw,bessctl: expose deadend packets per module,1,[],https://github.com/NetSys/bess/pull/949,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/949,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,949,2019-12-06T02:53:42Z,2020-01-14T22:22:31Z,2020-01-14T22:22:40Z,MERGED,True,17,0,4,https://github.com/melvinw,bessctl: expose deadend packets per module,1,[],https://github.com/NetSys/bess/pull/949,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/949#issuecomment-562414286,,"Codecov Report

Merging #949 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #949   +/-   ##
=======================================
  Coverage   55.89%   55.89%           
=======================================
  Files           9        9           
  Lines        1154     1154           
=======================================
  Hits          645      645           
  Misses        509      509

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9bdf69d...c21f9df. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,949,2019-12-06T02:53:42Z,2020-01-14T22:22:31Z,2020-01-14T22:22:40Z,MERGED,True,17,0,4,https://github.com/melvinw,bessctl: expose deadend packets per module,1,[],https://github.com/NetSys/bess/pull/949,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/949#issuecomment-566232989,,Thanks @sangjinhan! Updated,True,{}
NetSys/bess,https://github.com/NetSys/bess,949,2019-12-06T02:53:42Z,2020-01-14T22:22:31Z,2020-01-14T22:22:40Z,MERGED,True,17,0,4,https://github.com/melvinw,bessctl: expose deadend packets per module,1,[],https://github.com/NetSys/bess/pull/949,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/949#issuecomment-571742922,,Nice catch @shinae-woo! Pushed changes to RunSplit() and ResetActiveWorkers(),True,{}
NetSys/bess,https://github.com/NetSys/bess,949,2019-12-06T02:53:42Z,2020-01-14T22:22:31Z,2020-01-14T22:22:40Z,MERGED,True,17,0,4,https://github.com/melvinw,bessctl: expose deadend packets per module,1,[],https://github.com/NetSys/bess/pull/949,https://github.com/shinae-woo,5,https://github.com/NetSys/bess/pull/949#issuecomment-574396411,,Thank you! LGTM for the part I commented on. @sangjinhan Do you wanna take a look again and merge this?,True,{}
NetSys/bess,https://github.com/NetSys/bess,950,2019-12-10T09:46:42Z,2019-12-16T19:04:01Z,2019-12-16T21:44:45Z,MERGED,True,1,1,1,https://github.com/ravens,Bumping up queue size to support higher-end adapters,1,[],https://github.com/NetSys/bess/pull/950,https://github.com/ravens,1,https://github.com/NetSys/bess/pull/950,"Some high-end machines might have DPDK adapters with larger queues, typically 128 for the x552 in TX. As well, some servers are equipped with dual 28-core xeon, which results into 56 cores available, so more than 32 cores could be used to process traffic. Therefore, we should bump up the current 32 limit.","Some high-end machines might have DPDK adapters with larger queues, typically 128 for the x552 in TX. As well, some servers are equipped with dual 28-core xeon, which results into 56 cores available, so more than 32 cores could be used to process traffic. Therefore, we should bump up the current 32 limit.",True,{}
NetSys/bess,https://github.com/NetSys/bess,950,2019-12-10T09:46:42Z,2019-12-16T19:04:01Z,2019-12-16T21:44:45Z,MERGED,True,1,1,1,https://github.com/ravens,Bumping up queue size to support higher-end adapters,1,[],https://github.com/NetSys/bess/pull/950,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/950#issuecomment-563960782,"Some high-end machines might have DPDK adapters with larger queues, typically 128 for the x552 in TX. As well, some servers are equipped with dual 28-core xeon, which results into 56 cores available, so more than 32 cores could be used to process traffic. Therefore, we should bump up the current 32 limit.","Codecov Report

Merging #950 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #950   +/-   ##
=======================================
  Coverage   55.78%   55.78%           
=======================================
  Files           9        9           
  Lines        1149     1149           
=======================================
  Hits          641      641           
  Misses        508      508

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4918df4...51b8c4f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,952,2019-12-12T19:46:29Z,2019-12-16T19:02:53Z,2019-12-16T19:30:38Z,MERGED,True,26,20,3,https://github.com/mukerjee,Fix relative imports,2,[],https://github.com/NetSys/bess/pull/952,https://github.com/mukerjee,1,https://github.com/NetSys/bess/pull/952,"allow module_tests and bessctl to use relative paths even when those files are in symlink'd directories
re-work how auto-generated protobuf files are imported so that they're treated as external modules

These commits together fix situations where the source tree for bess and the autogenerated protobuf files don't live in the same directory, but are instead symlinked into a third directory. Build systems like bazel do this sort of symlink madness.
tested by running the module test and having bessctl use python2 and python3","allow module_tests and bessctl to use relative paths even when those files are in symlink'd directories
re-work how auto-generated protobuf files are imported so that they're treated as external modules

These commits together fix situations where the source tree for bess and the autogenerated protobuf files don't live in the same directory, but are instead symlinked into a third directory. Build systems like bazel do this sort of symlink madness.
tested by running the module test and having bessctl use python2 and python3",True,{}
NetSys/bess,https://github.com/NetSys/bess,952,2019-12-12T19:46:29Z,2019-12-16T19:02:53Z,2019-12-16T19:30:38Z,MERGED,True,26,20,3,https://github.com/mukerjee,Fix relative imports,2,[],https://github.com/NetSys/bess/pull/952,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/952#issuecomment-565165639,"allow module_tests and bessctl to use relative paths even when those files are in symlink'd directories
re-work how auto-generated protobuf files are imported so that they're treated as external modules

These commits together fix situations where the source tree for bess and the autogenerated protobuf files don't live in the same directory, but are instead symlinked into a third directory. Build systems like bazel do this sort of symlink madness.
tested by running the module test and having bessctl use python2 and python3","Codecov Report

Merging #952 into master will increase coverage by 0.19%.
The diff coverage is 100%.


@@            Coverage Diff             @@
##           master     #952      +/-   ##
==========================================
+ Coverage   55.78%   55.97%   +0.19%     
==========================================
  Files           9        9              
  Lines        1149     1154       +5     
==========================================
+ Hits          641      646       +5     
  Misses        508      508



Impacted Files
Coverage Δ





pybess/bess.py
40.74% <100%> (+0.62%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4918df4...002c2b4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,952,2019-12-12T19:46:29Z,2019-12-16T19:02:53Z,2019-12-16T19:30:38Z,MERGED,True,26,20,3,https://github.com/mukerjee,Fix relative imports,2,[],https://github.com/NetSys/bess/pull/952,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/952#issuecomment-565180721,"allow module_tests and bessctl to use relative paths even when those files are in symlink'd directories
re-work how auto-generated protobuf files are imported so that they're treated as external modules

These commits together fix situations where the source tree for bess and the autogenerated protobuf files don't live in the same directory, but are instead symlinked into a third directory. Build systems like bazel do this sort of symlink madness.
tested by running the module test and having bessctl use python2 and python3","Thanks for the patch. Certainly this is my original sin w/ writing the related code without fully understanding Python module/package/subpackage/etc., especially when it comes to protobuf auto generation. Admittedly I still don't fully understand them.
#1 (realpath -> abspath) sounds very straightforward to me.
#2 is something I am trying to understand. Could you elaborate on why relative imports now need to be absolute? Also, I am curious whether lines 54-57 are still relevant after the change.",True,{}
NetSys/bess,https://github.com/NetSys/bess,952,2019-12-12T19:46:29Z,2019-12-16T19:02:53Z,2019-12-16T19:30:38Z,MERGED,True,26,20,3,https://github.com/mukerjee,Fix relative imports,2,[],https://github.com/NetSys/bess/pull/952,https://github.com/mukerjee,4,https://github.com/NetSys/bess/pull/952#issuecomment-565219020,"allow module_tests and bessctl to use relative paths even when those files are in symlink'd directories
re-work how auto-generated protobuf files are imported so that they're treated as external modules

These commits together fix situations where the source tree for bess and the autogenerated protobuf files don't live in the same directory, but are instead symlinked into a third directory. Build systems like bazel do this sort of symlink madness.
tested by running the module test and having bessctl use python2 and python3","Thanks for taking a look at this guys. I also can't say I'm an expert on python package management.
@sangjinhan
re L54-57: This aren't necessary for python2 but it looks like import statements are handled differently in python3. Removing these lines breaks from builtin_pb import service_pb2_grpc for python3.
In general using absolute imports here allows a user of bessctl to provide additional paths (by means of PYTHONPATH) where the generated protobuf python files might live. This makes bessctl more compatible with other build systems that may place the protobufs in a different folder than the bess source e.g., bazel.
By the time we get to bess.py , __file__ has already become a real path (i.e., it's resolved the symlink), so relative imports here (I think) will look in the bess source tree rather than using sys.path. It seems that the behavior of __file__ is notoriously complex: https://stackoverflow.com/questions/7116889/is-module-file-attribute-absolute-or-relative
using absolute imports imho is the way to go here, since it makes it overridable.",True,{}
NetSys/bess,https://github.com/NetSys/bess,953,2019-12-23T21:21:02Z,2019-12-23T21:44:46Z,2019-12-23T21:44:54Z,MERGED,True,0,7,1,https://github.com/sangjinhan,remove `bessd -t` test,1,[],https://github.com/NetSys/bess/pull/953,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/953,"While the test is nearly pointless, it is causing a mysterious failure
on Travis CI. Just removing the test to sweep the issue under the rug.","While the test is nearly pointless, it is causing a mysterious failure
on Travis CI. Just removing the test to sweep the issue under the rug.",True,{}
NetSys/bess,https://github.com/NetSys/bess,953,2019-12-23T21:21:02Z,2019-12-23T21:44:46Z,2019-12-23T21:44:54Z,MERGED,True,0,7,1,https://github.com/sangjinhan,remove `bessd -t` test,1,[],https://github.com/NetSys/bess/pull/953,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/953#issuecomment-568588061,"While the test is nearly pointless, it is causing a mysterious failure
on Travis CI. Just removing the test to sweep the issue under the rug.","Codecov Report

Merging #953 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #953   +/-   ##
=======================================
  Coverage   55.89%   55.89%           
=======================================
  Files           9        9           
  Lines        1154     1154           
=======================================
  Hits          645      645           
  Misses        509      509

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7b2d0e0...1ecc5c6. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,955,2020-01-03T22:31:43Z,2020-05-20T18:02:45Z,2020-05-20T19:13:42Z,MERGED,True,60,6,3,https://github.com/levaitamas,WeightedFairScheduler: double or nothing,2,[],https://github.com/NetSys/bess/pull/955,https://github.com/levaitamas,1,https://github.com/NetSys/bess/pull/955,"WeightedFairScheduler is not able to keep up with shares set in 'count' aka batch domain.
tl;dr: The wf scheduler is inaccurate with non-extreme shares. Representing internal values as doubles solves this inaccuracy.
As an example, take a simple tree pipeline with a single 'root' node and two 'leaf' nodes. These are  connected by a RandomSplit. Root and leaf modules are put into separate tasks (see config at the bottom). Suppose, we want to schedule in batch domain ('count') and share ratios (leaf:root) are set as 1:1.71 and 1:1.7. To achieve that, shares are set to 100 (leaf), and 171 or 170 (root).
We expect to see a small difference in measured latency in the two scenarios. Actually, we see a large performance gap:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1064.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 42947.000
  90th_ns: 71700.000
  95th_ns: 74500.000
  99th_ns: 100700.000

FLOW1:
   avg_ns: 35842.000
  90th_ns: 69900.000
  95th_ns: 73200.000
  99th_ns: 96200.000

To solve this issue, the important code section is in WeightedFairTrafficClass::FinishAndAccountTowardsRoot(); where pass_delta is calculated. The pass_delta is important for the underlying stride scheduling, since the scheduler takes the task with the smallest pass value at each iteration.
If we calculate pass_delta values by hand, we see a small difference between pass_delta values corresponding to share 170 and 171:
| share | pass_delta |
|-------+------------+
|   100 |    10.2400 |
|   170 |     6.0235 |
|   171 |     5.9883 |

But, pass_delta is represented as an integer and BESS is writen in C++, so pass_delta will be 6 for share 170 and 5 for 171. That is a game changing difference in this situation, the ratio of pass_delta values in the later case is not 1.71:1, but 2:1!
Floating-point representation of weighted-fair scheduler internal values solved the performance issue:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1060.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 1086.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1087.000
  90th_ns: 1600.000
  95th_ns: 2400.000
  99th_ns: 3100.000

WDYT?

A BESS script to reproduce results:
import time

root_share  = float($root_share!'1.7')

shares = {'leaf': 100,
          'root': int(root_share * 100)}

src = Source()
rr = RandomSplit(gates=[0,1], drop_rate=0.0)
q1 = Queue()
q2 = Queue()
m1 = Measure()
m2 = Measure()

src -> Timestamp() -> rr
rr:0 -> q1 -> m1 -> Sink()
rr:1 -> q2 -> m2 -> Sink()

bess.add_tc('root', policy='weighted_fair', resource='count')
src.attach_task(parent='root', share=shares['root'])
q1.attach_task(parent='root', share=shares['leaf'])
q2.attach_task(parent='root', share=shares['leaf'])

bess.resume_all()

time.sleep(2)

bess.pause_all()

for i,m in enumerate((m1,m2)):
    percentiles = [90, 95, 99]
    res = m.get_summary(latency_percentiles=percentiles)
    print('FLOW%d:' % i)
    print('   avg_ns: %.3f' % res.latency.avg_ns)
    for i,p in enumerate(percentiles):
        print('  %dth_ns: %.3f' % (
            p,
            res.latency.percentile_values_ns[i]))
    print()","WeightedFairScheduler is not able to keep up with shares set in 'count' aka batch domain.
tl;dr: The wf scheduler is inaccurate with non-extreme shares. Representing internal values as doubles solves this inaccuracy.
As an example, take a simple tree pipeline with a single 'root' node and two 'leaf' nodes. These are  connected by a RandomSplit. Root and leaf modules are put into separate tasks (see config at the bottom). Suppose, we want to schedule in batch domain ('count') and share ratios (leaf:root) are set as 1:1.71 and 1:1.7. To achieve that, shares are set to 100 (leaf), and 171 or 170 (root).
We expect to see a small difference in measured latency in the two scenarios. Actually, we see a large performance gap:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1064.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 42947.000
  90th_ns: 71700.000
  95th_ns: 74500.000
  99th_ns: 100700.000

FLOW1:
   avg_ns: 35842.000
  90th_ns: 69900.000
  95th_ns: 73200.000
  99th_ns: 96200.000

To solve this issue, the important code section is in WeightedFairTrafficClass::FinishAndAccountTowardsRoot(); where pass_delta is calculated. The pass_delta is important for the underlying stride scheduling, since the scheduler takes the task with the smallest pass value at each iteration.
If we calculate pass_delta values by hand, we see a small difference between pass_delta values corresponding to share 170 and 171:
| share | pass_delta |
|-------+------------+
|   100 |    10.2400 |
|   170 |     6.0235 |
|   171 |     5.9883 |

But, pass_delta is represented as an integer and BESS is writen in C++, so pass_delta will be 6 for share 170 and 5 for 171. That is a game changing difference in this situation, the ratio of pass_delta values in the later case is not 1.71:1, but 2:1!
Floating-point representation of weighted-fair scheduler internal values solved the performance issue:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1060.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 1086.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1087.000
  90th_ns: 1600.000
  95th_ns: 2400.000
  99th_ns: 3100.000

WDYT?

A BESS script to reproduce results:
import time

root_share  = float($root_share!'1.7')

shares = {'leaf': 100,
          'root': int(root_share * 100)}

src = Source()
rr = RandomSplit(gates=[0,1], drop_rate=0.0)
q1 = Queue()
q2 = Queue()
m1 = Measure()
m2 = Measure()

src -> Timestamp() -> rr
rr:0 -> q1 -> m1 -> Sink()
rr:1 -> q2 -> m2 -> Sink()

bess.add_tc('root', policy='weighted_fair', resource='count')
src.attach_task(parent='root', share=shares['root'])
q1.attach_task(parent='root', share=shares['leaf'])
q2.attach_task(parent='root', share=shares['leaf'])

bess.resume_all()

time.sleep(2)

bess.pause_all()

for i,m in enumerate((m1,m2)):
    percentiles = [90, 95, 99]
    res = m.get_summary(latency_percentiles=percentiles)
    print('FLOW%d:' % i)
    print('   avg_ns: %.3f' % res.latency.avg_ns)
    for i,p in enumerate(percentiles):
        print('  %dth_ns: %.3f' % (
            p,
            res.latency.percentile_values_ns[i]))
    print()",True,{}
NetSys/bess,https://github.com/NetSys/bess,955,2020-01-03T22:31:43Z,2020-05-20T18:02:45Z,2020-05-20T19:13:42Z,MERGED,True,60,6,3,https://github.com/levaitamas,WeightedFairScheduler: double or nothing,2,[],https://github.com/NetSys/bess/pull/955,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/955#issuecomment-570721033,"WeightedFairScheduler is not able to keep up with shares set in 'count' aka batch domain.
tl;dr: The wf scheduler is inaccurate with non-extreme shares. Representing internal values as doubles solves this inaccuracy.
As an example, take a simple tree pipeline with a single 'root' node and two 'leaf' nodes. These are  connected by a RandomSplit. Root and leaf modules are put into separate tasks (see config at the bottom). Suppose, we want to schedule in batch domain ('count') and share ratios (leaf:root) are set as 1:1.71 and 1:1.7. To achieve that, shares are set to 100 (leaf), and 171 or 170 (root).
We expect to see a small difference in measured latency in the two scenarios. Actually, we see a large performance gap:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1064.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 42947.000
  90th_ns: 71700.000
  95th_ns: 74500.000
  99th_ns: 100700.000

FLOW1:
   avg_ns: 35842.000
  90th_ns: 69900.000
  95th_ns: 73200.000
  99th_ns: 96200.000

To solve this issue, the important code section is in WeightedFairTrafficClass::FinishAndAccountTowardsRoot(); where pass_delta is calculated. The pass_delta is important for the underlying stride scheduling, since the scheduler takes the task with the smallest pass value at each iteration.
If we calculate pass_delta values by hand, we see a small difference between pass_delta values corresponding to share 170 and 171:
| share | pass_delta |
|-------+------------+
|   100 |    10.2400 |
|   170 |     6.0235 |
|   171 |     5.9883 |

But, pass_delta is represented as an integer and BESS is writen in C++, so pass_delta will be 6 for share 170 and 5 for 171. That is a game changing difference in this situation, the ratio of pass_delta values in the later case is not 1.71:1, but 2:1!
Floating-point representation of weighted-fair scheduler internal values solved the performance issue:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1060.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 1086.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1087.000
  90th_ns: 1600.000
  95th_ns: 2400.000
  99th_ns: 3100.000

WDYT?

A BESS script to reproduce results:
import time

root_share  = float($root_share!'1.7')

shares = {'leaf': 100,
          'root': int(root_share * 100)}

src = Source()
rr = RandomSplit(gates=[0,1], drop_rate=0.0)
q1 = Queue()
q2 = Queue()
m1 = Measure()
m2 = Measure()

src -> Timestamp() -> rr
rr:0 -> q1 -> m1 -> Sink()
rr:1 -> q2 -> m2 -> Sink()

bess.add_tc('root', policy='weighted_fair', resource='count')
src.attach_task(parent='root', share=shares['root'])
q1.attach_task(parent='root', share=shares['leaf'])
q2.attach_task(parent='root', share=shares['leaf'])

bess.resume_all()

time.sleep(2)

bess.pause_all()

for i,m in enumerate((m1,m2)):
    percentiles = [90, 95, 99]
    res = m.get_summary(latency_percentiles=percentiles)
    print('FLOW%d:' % i)
    print('   avg_ns: %.3f' % res.latency.avg_ns)
    for i,p in enumerate(percentiles):
        print('  %dth_ns: %.3f' % (
            p,
            res.latency.percentile_values_ns[i]))
    print()","Codecov Report

Merging #955 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #955   +/-   ##
=======================================
  Coverage   55.89%   55.89%           
=======================================
  Files           9        9           
  Lines        1154     1154           
=======================================
  Hits          645      645           
  Misses        509      509           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9bdf69d...be087fd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,955,2020-01-03T22:31:43Z,2020-05-20T18:02:45Z,2020-05-20T19:13:42Z,MERGED,True,60,6,3,https://github.com/levaitamas,WeightedFairScheduler: double or nothing,2,[],https://github.com/NetSys/bess/pull/955,https://github.com/barath,3,https://github.com/NetSys/bess/pull/955#issuecomment-570746937,"WeightedFairScheduler is not able to keep up with shares set in 'count' aka batch domain.
tl;dr: The wf scheduler is inaccurate with non-extreme shares. Representing internal values as doubles solves this inaccuracy.
As an example, take a simple tree pipeline with a single 'root' node and two 'leaf' nodes. These are  connected by a RandomSplit. Root and leaf modules are put into separate tasks (see config at the bottom). Suppose, we want to schedule in batch domain ('count') and share ratios (leaf:root) are set as 1:1.71 and 1:1.7. To achieve that, shares are set to 100 (leaf), and 171 or 170 (root).
We expect to see a small difference in measured latency in the two scenarios. Actually, we see a large performance gap:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1064.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 42947.000
  90th_ns: 71700.000
  95th_ns: 74500.000
  99th_ns: 100700.000

FLOW1:
   avg_ns: 35842.000
  90th_ns: 69900.000
  95th_ns: 73200.000
  99th_ns: 96200.000

To solve this issue, the important code section is in WeightedFairTrafficClass::FinishAndAccountTowardsRoot(); where pass_delta is calculated. The pass_delta is important for the underlying stride scheduling, since the scheduler takes the task with the smallest pass value at each iteration.
If we calculate pass_delta values by hand, we see a small difference between pass_delta values corresponding to share 170 and 171:
| share | pass_delta |
|-------+------------+
|   100 |    10.2400 |
|   170 |     6.0235 |
|   171 |     5.9883 |

But, pass_delta is represented as an integer and BESS is writen in C++, so pass_delta will be 6 for share 170 and 5 for 171. That is a game changing difference in this situation, the ratio of pass_delta values in the later case is not 1.71:1, but 2:1!
Floating-point representation of weighted-fair scheduler internal values solved the performance issue:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1060.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 1086.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1087.000
  90th_ns: 1600.000
  95th_ns: 2400.000
  99th_ns: 3100.000

WDYT?

A BESS script to reproduce results:
import time

root_share  = float($root_share!'1.7')

shares = {'leaf': 100,
          'root': int(root_share * 100)}

src = Source()
rr = RandomSplit(gates=[0,1], drop_rate=0.0)
q1 = Queue()
q2 = Queue()
m1 = Measure()
m2 = Measure()

src -> Timestamp() -> rr
rr:0 -> q1 -> m1 -> Sink()
rr:1 -> q2 -> m2 -> Sink()

bess.add_tc('root', policy='weighted_fair', resource='count')
src.attach_task(parent='root', share=shares['root'])
q1.attach_task(parent='root', share=shares['leaf'])
q2.attach_task(parent='root', share=shares['leaf'])

bess.resume_all()

time.sleep(2)

bess.pause_all()

for i,m in enumerate((m1,m2)):
    percentiles = [90, 95, 99]
    res = m.get_summary(latency_percentiles=percentiles)
    print('FLOW%d:' % i)
    print('   avg_ns: %.3f' % res.latency.avg_ns)
    for i,p in enumerate(percentiles):
        print('  %dth_ns: %.3f' % (
            p,
            res.latency.percentile_values_ns[i]))
    print()","Nice catch.  Could you run traffic_class_bench (suitably modified, if needed) to see what difference the switch to double might have made to scheduler overhead?",True,{}
NetSys/bess,https://github.com/NetSys/bess,955,2020-01-03T22:31:43Z,2020-05-20T18:02:45Z,2020-05-20T19:13:42Z,MERGED,True,60,6,3,https://github.com/levaitamas,WeightedFairScheduler: double or nothing,2,[],https://github.com/NetSys/bess/pull/955,https://github.com/levaitamas,4,https://github.com/NetSys/bess/pull/955#issuecomment-570836863,"WeightedFairScheduler is not able to keep up with shares set in 'count' aka batch domain.
tl;dr: The wf scheduler is inaccurate with non-extreme shares. Representing internal values as doubles solves this inaccuracy.
As an example, take a simple tree pipeline with a single 'root' node and two 'leaf' nodes. These are  connected by a RandomSplit. Root and leaf modules are put into separate tasks (see config at the bottom). Suppose, we want to schedule in batch domain ('count') and share ratios (leaf:root) are set as 1:1.71 and 1:1.7. To achieve that, shares are set to 100 (leaf), and 171 or 170 (root).
We expect to see a small difference in measured latency in the two scenarios. Actually, we see a large performance gap:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1064.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 42947.000
  90th_ns: 71700.000
  95th_ns: 74500.000
  99th_ns: 100700.000

FLOW1:
   avg_ns: 35842.000
  90th_ns: 69900.000
  95th_ns: 73200.000
  99th_ns: 96200.000

To solve this issue, the important code section is in WeightedFairTrafficClass::FinishAndAccountTowardsRoot(); where pass_delta is calculated. The pass_delta is important for the underlying stride scheduling, since the scheduler takes the task with the smallest pass value at each iteration.
If we calculate pass_delta values by hand, we see a small difference between pass_delta values corresponding to share 170 and 171:
| share | pass_delta |
|-------+------------+
|   100 |    10.2400 |
|   170 |     6.0235 |
|   171 |     5.9883 |

But, pass_delta is represented as an integer and BESS is writen in C++, so pass_delta will be 6 for share 170 and 5 for 171. That is a game changing difference in this situation, the ratio of pass_delta values in the later case is not 1.71:1, but 2:1!
Floating-point representation of weighted-fair scheduler internal values solved the performance issue:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1060.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 1086.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1087.000
  90th_ns: 1600.000
  95th_ns: 2400.000
  99th_ns: 3100.000

WDYT?

A BESS script to reproduce results:
import time

root_share  = float($root_share!'1.7')

shares = {'leaf': 100,
          'root': int(root_share * 100)}

src = Source()
rr = RandomSplit(gates=[0,1], drop_rate=0.0)
q1 = Queue()
q2 = Queue()
m1 = Measure()
m2 = Measure()

src -> Timestamp() -> rr
rr:0 -> q1 -> m1 -> Sink()
rr:1 -> q2 -> m2 -> Sink()

bess.add_tc('root', policy='weighted_fair', resource='count')
src.attach_task(parent='root', share=shares['root'])
q1.attach_task(parent='root', share=shares['leaf'])
q2.attach_task(parent='root', share=shares['leaf'])

bess.resume_all()

time.sleep(2)

bess.pause_all()

for i,m in enumerate((m1,m2)):
    percentiles = [90, 95, 99]
    res = m.get_summary(latency_percentiles=percentiles)
    print('FLOW%d:' % i)
    print('   avg_ns: %.3f' % res.latency.avg_ns)
    for i,p in enumerate(percentiles):
        print('  %dth_ns: %.3f' % (
            p,
            res.latency.percentile_values_ns[i]))
    print()","Thanks! Means of 10 measurements on the dev VM running on server CPUs are the following.
uint64_t
-----------------------------------------------------------------------------------------
Benchmark                                                  Time           CPU Iterations
-----------------------------------------------------------------------------------------
TCWeightedFair/TCScheduleOnceCount/4/0_mean               63 ns         63 ns   11118153
TCWeightedFair/TCScheduleOnceCount/8/0_mean               66 ns         66 ns   10630055
TCWeightedFair/TCScheduleOnceCount/16/0_mean              69 ns         69 ns   10214932
TCWeightedFair/TCScheduleOnceCount/32/0_mean              72 ns         72 ns    9555621
TCWeightedFair/TCScheduleOnceCount/64/0_mean              78 ns         78 ns    8824669
TCWeightedFair/TCScheduleOnceCount/128/0_mean             90 ns         90 ns    7897144
TCWeightedFair/TCScheduleOnceCount/256/0_mean            109 ns        109 ns    6551838
TCWeightedFair/TCScheduleOnceCount/512/0_mean            130 ns        130 ns    5297849
TCWeightedFair/TCScheduleOnceCount/1024/0_mean           159 ns        159 ns    4365361
TCWeightedFair/TCScheduleOnceCount/2048/0_mean           190 ns        190 ns    3724089
TCWeightedFair/TCScheduleOnceCount/4096/0_mean           202 ns        202 ns    3529551
TCWeightedFair/TCScheduleOnceCount/8192/0_mean           206 ns        206 ns    3405542
TCWeightedFair/TCScheduleOnceCount/16384/0_mean          215 ns        215 ns    3295705
TCWeightedFair/TCScheduleOnceCount/32768/0_mean          290 ns        290 ns    2348607
TCWeightedFair/TCScheduleOnceCount/65536/0_mean          405 ns        404 ns    1750586
TCWeightedFair_BigO                                    17.88 lgN      17.86 lgN
TCWeightedFair_RMS                                        25 %         25 %
TCWeightedFair/TCScheduleOnceCycle/4/1_mean               66 ns         66 ns   10537643
TCWeightedFair/TCScheduleOnceCycle/8/1_mean               68 ns         68 ns   10249466
TCWeightedFair/TCScheduleOnceCycle/16/1_mean              76 ns         76 ns    9261521
TCWeightedFair/TCScheduleOnceCycle/32/1_mean              85 ns         84 ns    8282332
TCWeightedFair/TCScheduleOnceCycle/64/1_mean              97 ns         97 ns    7214514
TCWeightedFair/TCScheduleOnceCycle/128/1_mean            114 ns        114 ns    6146597
TCWeightedFair/TCScheduleOnceCycle/256/1_mean            133 ns        133 ns    5171720
TCWeightedFair/TCScheduleOnceCycle/512/1_mean            152 ns        152 ns    4680950
TCWeightedFair/TCScheduleOnceCycle/1024/1_mean           173 ns        173 ns    4145995
TCWeightedFair/TCScheduleOnceCycle/2048/1_mean           213 ns        213 ns    3215277
TCWeightedFair/TCScheduleOnceCycle/4096/1_mean           247 ns        247 ns    2787794
TCWeightedFair/TCScheduleOnceCycle/8192/1_mean           270 ns        270 ns    2532794
TCWeightedFair/TCScheduleOnceCycle/16384/1_mean          287 ns        286 ns    2443331
TCWeightedFair/TCScheduleOnceCycle/32768/1_mean          368 ns        367 ns    1916091
TCWeightedFair/TCScheduleOnceCycle/65536/1_mean          596 ns        522 ns    1000000
TCWeightedFair_BigO                                    23.07 lgN      22.26 lgN
TCWeightedFair_RMS                                        46 %         28 %

double
----------------------------------------------------------------------------------------
Benchmark                                                  Time           CPU Iterations
----------------------------------------------------------------------------------------
TCWeightedFair/TCScheduleOnceCount/4/0_mean               63 ns         63 ns   11126742
TCWeightedFair/TCScheduleOnceCount/8/0_mean               66 ns         66 ns   10660545
TCWeightedFair/TCScheduleOnceCount/16/0_mean              68 ns         68 ns   10238280
TCWeightedFair/TCScheduleOnceCount/32/0_mean              74 ns         74 ns    9747640
TCWeightedFair/TCScheduleOnceCount/64/0_mean              79 ns         79 ns    8977111
TCWeightedFair/TCScheduleOnceCount/128/0_mean             93 ns         93 ns    7653888
TCWeightedFair/TCScheduleOnceCount/256/0_mean            119 ns        119 ns    5547388
TCWeightedFair/TCScheduleOnceCount/512/0_mean            141 ns        141 ns    4637043
TCWeightedFair/TCScheduleOnceCount/1024/0_mean           168 ns        168 ns    3997264
TCWeightedFair/TCScheduleOnceCount/2048/0_mean           192 ns        192 ns    3586653
TCWeightedFair/TCScheduleOnceCount/4096/0_mean           211 ns        211 ns    3389813
TCWeightedFair/TCScheduleOnceCount/8192/0_mean           218 ns        217 ns    3349284
TCWeightedFair/TCScheduleOnceCount/16384/0_mean          221 ns        221 ns    3203967
TCWeightedFair/TCScheduleOnceCount/32768/0_mean          297 ns        297 ns    2387625
TCWeightedFair/TCScheduleOnceCount/65536/0_mean          413 ns        412 ns    1764310
TCWeightedFair_BigO                                    18.48 lgN      18.47 lgN
TCWeightedFair_RMS                                        24 %         24 %
TCWeightedFair/TCScheduleOnceCycle/4/1_mean               67 ns         67 ns   10399510
TCWeightedFair/TCScheduleOnceCycle/8/1_mean               70 ns         70 ns    9854923
TCWeightedFair/TCScheduleOnceCycle/16/1_mean              78 ns         78 ns    9168463
TCWeightedFair/TCScheduleOnceCycle/32/1_mean              87 ns         87 ns    8099838
TCWeightedFair/TCScheduleOnceCycle/64/1_mean              99 ns         99 ns    7123087
TCWeightedFair/TCScheduleOnceCycle/128/1_mean            120 ns        120 ns    5270220
TCWeightedFair/TCScheduleOnceCycle/256/1_mean            138 ns        138 ns    5078838
TCWeightedFair/TCScheduleOnceCycle/512/1_mean            164 ns        163 ns    4398370
TCWeightedFair/TCScheduleOnceCycle/1024/1_mean           189 ns        189 ns    3567482
TCWeightedFair/TCScheduleOnceCycle/2048/1_mean           227 ns        227 ns    3125388
TCWeightedFair/TCScheduleOnceCycle/4096/1_mean           257 ns        257 ns    2681737
TCWeightedFair/TCScheduleOnceCycle/8192/1_mean           281 ns        280 ns    2499371
TCWeightedFair/TCScheduleOnceCycle/16384/1_mean          297 ns        297 ns    2370191
TCWeightedFair/TCScheduleOnceCycle/32768/1_mean          381 ns        381 ns    1813489
TCWeightedFair/TCScheduleOnceCycle/65536/1_mean          566 ns        562 ns    1000000
TCWeightedFair_BigO                                    23.51 lgN      23.46 lgN
TCWeightedFair_RMS                                        31 %         30 %",True,{}
NetSys/bess,https://github.com/NetSys/bess,955,2020-01-03T22:31:43Z,2020-05-20T18:02:45Z,2020-05-20T19:13:42Z,MERGED,True,60,6,3,https://github.com/levaitamas,WeightedFairScheduler: double or nothing,2,[],https://github.com/NetSys/bess/pull/955,https://github.com/levaitamas,5,https://github.com/NetSys/bess/pull/955#issuecomment-592093423,"WeightedFairScheduler is not able to keep up with shares set in 'count' aka batch domain.
tl;dr: The wf scheduler is inaccurate with non-extreme shares. Representing internal values as doubles solves this inaccuracy.
As an example, take a simple tree pipeline with a single 'root' node and two 'leaf' nodes. These are  connected by a RandomSplit. Root and leaf modules are put into separate tasks (see config at the bottom). Suppose, we want to schedule in batch domain ('count') and share ratios (leaf:root) are set as 1:1.71 and 1:1.7. To achieve that, shares are set to 100 (leaf), and 171 or 170 (root).
We expect to see a small difference in measured latency in the two scenarios. Actually, we see a large performance gap:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1064.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 42947.000
  90th_ns: 71700.000
  95th_ns: 74500.000
  99th_ns: 100700.000

FLOW1:
   avg_ns: 35842.000
  90th_ns: 69900.000
  95th_ns: 73200.000
  99th_ns: 96200.000

To solve this issue, the important code section is in WeightedFairTrafficClass::FinishAndAccountTowardsRoot(); where pass_delta is calculated. The pass_delta is important for the underlying stride scheduling, since the scheduler takes the task with the smallest pass value at each iteration.
If we calculate pass_delta values by hand, we see a small difference between pass_delta values corresponding to share 170 and 171:
| share | pass_delta |
|-------+------------+
|   100 |    10.2400 |
|   170 |     6.0235 |
|   171 |     5.9883 |

But, pass_delta is represented as an integer and BESS is writen in C++, so pass_delta will be 6 for share 170 and 5 for 171. That is a game changing difference in this situation, the ratio of pass_delta values in the later case is not 1.71:1, but 2:1!
Floating-point representation of weighted-fair scheduler internal values solved the performance issue:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1060.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 1086.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1087.000
  90th_ns: 1600.000
  95th_ns: 2400.000
  99th_ns: 3100.000

WDYT?

A BESS script to reproduce results:
import time

root_share  = float($root_share!'1.7')

shares = {'leaf': 100,
          'root': int(root_share * 100)}

src = Source()
rr = RandomSplit(gates=[0,1], drop_rate=0.0)
q1 = Queue()
q2 = Queue()
m1 = Measure()
m2 = Measure()

src -> Timestamp() -> rr
rr:0 -> q1 -> m1 -> Sink()
rr:1 -> q2 -> m2 -> Sink()

bess.add_tc('root', policy='weighted_fair', resource='count')
src.attach_task(parent='root', share=shares['root'])
q1.attach_task(parent='root', share=shares['leaf'])
q2.attach_task(parent='root', share=shares['leaf'])

bess.resume_all()

time.sleep(2)

bess.pause_all()

for i,m in enumerate((m1,m2)):
    percentiles = [90, 95, 99]
    res = m.get_summary(latency_percentiles=percentiles)
    print('FLOW%d:' % i)
    print('   avg_ns: %.3f' % res.latency.avg_ns)
    for i,p in enumerate(percentiles):
        print('  %dth_ns: %.3f' % (
            p,
            res.latency.percentile_values_ns[i]))
    print()",@sangjinhan and @chris3torek could you please take a look at this PR?,True,{}
NetSys/bess,https://github.com/NetSys/bess,955,2020-01-03T22:31:43Z,2020-05-20T18:02:45Z,2020-05-20T19:13:42Z,MERGED,True,60,6,3,https://github.com/levaitamas,WeightedFairScheduler: double or nothing,2,[],https://github.com/NetSys/bess/pull/955,https://github.com/melvinw,6,https://github.com/NetSys/bess/pull/955#issuecomment-631634512,"WeightedFairScheduler is not able to keep up with shares set in 'count' aka batch domain.
tl;dr: The wf scheduler is inaccurate with non-extreme shares. Representing internal values as doubles solves this inaccuracy.
As an example, take a simple tree pipeline with a single 'root' node and two 'leaf' nodes. These are  connected by a RandomSplit. Root and leaf modules are put into separate tasks (see config at the bottom). Suppose, we want to schedule in batch domain ('count') and share ratios (leaf:root) are set as 1:1.71 and 1:1.7. To achieve that, shares are set to 100 (leaf), and 171 or 170 (root).
We expect to see a small difference in measured latency in the two scenarios. Actually, we see a large performance gap:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1064.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2200.000
  99th_ns: 3200.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 42947.000
  90th_ns: 71700.000
  95th_ns: 74500.000
  99th_ns: 100700.000

FLOW1:
   avg_ns: 35842.000
  90th_ns: 69900.000
  95th_ns: 73200.000
  99th_ns: 96200.000

To solve this issue, the important code section is in WeightedFairTrafficClass::FinishAndAccountTowardsRoot(); where pass_delta is calculated. The pass_delta is important for the underlying stride scheduling, since the scheduler takes the task with the smallest pass value at each iteration.
If we calculate pass_delta values by hand, we see a small difference between pass_delta values corresponding to share 170 and 171:
| share | pass_delta |
|-------+------------+
|   100 |    10.2400 |
|   170 |     6.0235 |
|   171 |     5.9883 |

But, pass_delta is represented as an integer and BESS is writen in C++, so pass_delta will be 6 for share 170 and 5 for 171. That is a game changing difference in this situation, the ratio of pass_delta values in the later case is not 1.71:1, but 2:1!
Floating-point representation of weighted-fair scheduler internal values solved the performance issue:
$ ./bessctl run local/wfq-test root_share=1.7
FLOW0:
   avg_ns: 1060.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1063.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

$ ./bessctl run local/wfq-test root_share=1.71
FLOW0:
   avg_ns: 1086.000
  90th_ns: 1600.000
  95th_ns: 2300.000
  99th_ns: 3100.000

FLOW1:
   avg_ns: 1087.000
  90th_ns: 1600.000
  95th_ns: 2400.000
  99th_ns: 3100.000

WDYT?

A BESS script to reproduce results:
import time

root_share  = float($root_share!'1.7')

shares = {'leaf': 100,
          'root': int(root_share * 100)}

src = Source()
rr = RandomSplit(gates=[0,1], drop_rate=0.0)
q1 = Queue()
q2 = Queue()
m1 = Measure()
m2 = Measure()

src -> Timestamp() -> rr
rr:0 -> q1 -> m1 -> Sink()
rr:1 -> q2 -> m2 -> Sink()

bess.add_tc('root', policy='weighted_fair', resource='count')
src.attach_task(parent='root', share=shares['root'])
q1.attach_task(parent='root', share=shares['leaf'])
q2.attach_task(parent='root', share=shares['leaf'])

bess.resume_all()

time.sleep(2)

bess.pause_all()

for i,m in enumerate((m1,m2)):
    percentiles = [90, 95, 99]
    res = m.get_summary(latency_percentiles=percentiles)
    print('FLOW%d:' % i)
    print('   avg_ns: %.3f' % res.latency.avg_ns)
    for i,p in enumerate(percentiles):
        print('  %dth_ns: %.3f' % (
            p,
            res.latency.percentile_values_ns[i]))
    print()",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,957,2020-01-20T15:48:34Z,2020-01-20T23:38:20Z,2020-01-20T23:38:34Z,MERGED,True,104,9,18,https://github.com/melvinw,a few config inspection patches,3,[],https://github.com/NetSys/bess/pull/957,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/957,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,957,2020-01-20T15:48:34Z,2020-01-20T23:38:20Z,2020-01-20T23:38:34Z,MERGED,True,104,9,18,https://github.com/melvinw,a few config inspection patches,3,[],https://github.com/NetSys/bess/pull/957,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/957#issuecomment-576337868,,"Codecov Report

Merging #957 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #957   +/-   ##
=======================================
  Coverage   55.89%   55.89%           
=======================================
  Files           9        9           
  Lines        1154     1154           
=======================================
  Hits          645      645           
  Misses        509      509

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 86077a5...d6314ce. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,958,2020-01-23T00:23:33Z,2020-01-28T23:47:02Z,2020-01-28T23:51:14Z,MERGED,True,54,17,8,https://github.com/shinae-woo,Add pybess API to configure port,3,[],https://github.com/NetSys/bess/pull/958,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/958,"This commit

verifies a MTU input ranges and add responses, and
adds a pybess API to call SetPortConfRequest() which configure a port by name for mac_address, MTU, and enable/disable the port.","This commit

verifies a MTU input ranges and add responses, and
adds a pybess API to call SetPortConfRequest() which configure a port by name for mac_address, MTU, and enable/disable the port.",True,{}
NetSys/bess,https://github.com/NetSys/bess,958,2020-01-23T00:23:33Z,2020-01-28T23:47:02Z,2020-01-28T23:51:14Z,MERGED,True,54,17,8,https://github.com/shinae-woo,Add pybess API to configure port,3,[],https://github.com/NetSys/bess/pull/958,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/958#issuecomment-577452663,"This commit

verifies a MTU input ranges and add responses, and
adds a pybess API to call SetPortConfRequest() which configure a port by name for mac_address, MTU, and enable/disable the port.","Codecov Report

Merging #958 into master will decrease coverage by 0.35%.
The diff coverage is 18.18%.


@@            Coverage Diff             @@
##           master     #958      +/-   ##
==========================================
- Coverage   55.89%   55.53%   -0.36%     
==========================================
  Files           9        9              
  Lines        1154     1165      +11     
==========================================
+ Hits          645      647       +2     
- Misses        509      518       +9



Impacted Files
Coverage Δ





pybess/bess.py
40.04% <18.18%> (-0.5%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 9cfa4bb...4bb8853. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,958,2020-01-23T00:23:33Z,2020-01-28T23:47:02Z,2020-01-28T23:51:14Z,MERGED,True,54,17,8,https://github.com/shinae-woo,Add pybess API to configure port,3,[],https://github.com/NetSys/bess/pull/958,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/958#issuecomment-579528401,"This commit

verifies a MTU input ranges and add responses, and
adds a pybess API to call SetPortConfRequest() which configure a port by name for mac_address, MTU, and enable/disable the port.",Thanks,True,{}
NetSys/bess,https://github.com/NetSys/bess,959,2020-01-28T23:31:06Z,2020-01-28T23:42:32Z,2020-01-28T23:51:24Z,CLOSED,False,0,0,0,https://github.com/barath,Lecture,2,[],https://github.com/NetSys/bess/pull/959,https://github.com/barath,1,https://github.com/NetSys/bess/pull/959,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,959,2020-01-28T23:31:06Z,2020-01-28T23:42:32Z,2020-01-28T23:51:24Z,CLOSED,False,0,0,0,https://github.com/barath,Lecture,2,[],https://github.com/NetSys/bess/pull/959,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/959#issuecomment-579528432,,"Codecov Report

Merging #959 into master will increase coverage by 0.06%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #959      +/-   ##
==========================================
+ Coverage   55.82%   55.89%   +0.06%     
==========================================
  Files           9        9              
  Lines        1150     1154       +4     
==========================================
+ Hits          642      645       +3     
- Misses        508      509       +1



Impacted Files
Coverage Δ





pybess/bess.py
40.54% <0%> (+0.28%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4d83edc...2c2c716. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,960,2020-01-29T13:17:14Z,2020-03-15T19:05:10Z,2020-03-15T19:05:17Z,MERGED,True,7,8,1,https://github.com/nemethf,documentation: fix formatting to support protoc-gen-doc,1,[],https://github.com/NetSys/bess/pull/960,https://github.com/nemethf,1,https://github.com/NetSys/bess/pull/960,"The most recent version of protoc-gen-doc seems to be more strict
about the acceptable documentation format.

Here is a markdown version of the (partially fixed) documentation:
https://github.com/nemethf/bess/wiki/Built-In-Modules-and-Ports","The most recent version of protoc-gen-doc seems to be more strict
about the acceptable documentation format.

Here is a markdown version of the (partially fixed) documentation:
https://github.com/nemethf/bess/wiki/Built-In-Modules-and-Ports",True,{}
NetSys/bess,https://github.com/NetSys/bess,960,2020-01-29T13:17:14Z,2020-03-15T19:05:10Z,2020-03-15T19:05:17Z,MERGED,True,7,8,1,https://github.com/nemethf,documentation: fix formatting to support protoc-gen-doc,1,[],https://github.com/NetSys/bess/pull/960,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/960#issuecomment-579754517,"The most recent version of protoc-gen-doc seems to be more strict
about the acceptable documentation format.

Here is a markdown version of the (partially fixed) documentation:
https://github.com/nemethf/bess/wiki/Built-In-Modules-and-Ports","Codecov Report

Merging #960 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #960   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 609d90a...2e13849. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,961,2020-01-30T00:25:26Z,2020-01-30T00:38:30Z,2020-01-30T04:29:42Z,MERGED,True,1,1,1,https://github.com/shinae-woo,fix a function name `ser_` --> `set_`,1,[],https://github.com/NetSys/bess/pull/961,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/961,A bug introduced by https://github.com/NetSys/bess/pull/958,A bug introduced by https://github.com/NetSys/bess/pull/958,True,{}
NetSys/bess,https://github.com/NetSys/bess,961,2020-01-30T00:25:26Z,2020-01-30T00:38:30Z,2020-01-30T04:29:42Z,MERGED,True,1,1,1,https://github.com/shinae-woo,fix a function name `ser_` --> `set_`,1,[],https://github.com/NetSys/bess/pull/961,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/961#issuecomment-580030187,A bug introduced by https://github.com/NetSys/bess/pull/958,"Codecov Report

Merging #961 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #961      +/-   ##
==========================================
- Coverage   55.53%   55.45%   -0.09%     
==========================================
  Files           9        9              
  Lines        1165     1165              
==========================================
- Hits          647      646       -1     
- Misses        518      519       +1



Impacted Files
Coverage Δ





pybess/bess.py
39.83% <0%> (-0.21%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 609d90a...8afe5b3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,961,2020-01-30T00:25:26Z,2020-01-30T00:38:30Z,2020-01-30T04:29:42Z,MERGED,True,1,1,1,https://github.com/shinae-woo,fix a function name `ser_` --> `set_`,1,[],https://github.com/NetSys/bess/pull/961,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/961#issuecomment-580033249,A bug introduced by https://github.com/NetSys/bess/pull/958,,True,{'LAUGH': ['https://github.com/shinae-woo']}
NetSys/bess,https://github.com/NetSys/bess,963,2020-03-06T07:30:21Z,2020-03-06T23:01:58Z,2020-03-06T23:02:06Z,MERGED,True,1,1,1,https://github.com/shinae-woo,BPF module: `get_initial_args()` is a thread safe function,1,[],https://github.com/NetSys/bess/pull/963,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/963,"While the function is thread-safe, we marked the function differently.","While the function is thread-safe, we marked the function differently.",True,{}
NetSys/bess,https://github.com/NetSys/bess,963,2020-03-06T07:30:21Z,2020-03-06T23:01:58Z,2020-03-06T23:02:06Z,MERGED,True,1,1,1,https://github.com/shinae-woo,BPF module: `get_initial_args()` is a thread safe function,1,[],https://github.com/NetSys/bess/pull/963,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/963#issuecomment-595645160,"While the function is thread-safe, we marked the function differently.","Codecov Report

Merging #963 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #963      +/-   ##
==========================================
- Coverage   55.53%   55.45%   -0.09%     
==========================================
  Files           9        9              
  Lines        1165     1165              
==========================================
- Hits          647      646       -1     
- Misses        518      519       +1



Impacted Files
Coverage Δ





pybess/bess.py
39.83% <0%> (-0.21%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update bf17211...e7837ac. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,965,2020-03-30T01:01:02Z,2020-04-03T20:06:58Z,2020-04-03T20:07:42Z,MERGED,True,185,166,10,https://github.com/sangjinhan,Update to DPDK 19.11.1,15,[],https://github.com/NetSys/bess/pull/965,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/965,"built on top of #943, plus a DPDK minor version update 19.11.1
Perhaps we should switch to a git submodule, rather than downloading, in the future.","built on top of #943, plus a DPDK minor version update 19.11.1
Perhaps we should switch to a git submodule, rather than downloading, in the future.",True,{'THUMBS_UP': ['https://github.com/krsna1729']}
NetSys/bess,https://github.com/NetSys/bess,965,2020-03-30T01:01:02Z,2020-04-03T20:06:58Z,2020-04-03T20:07:42Z,MERGED,True,185,166,10,https://github.com/sangjinhan,Update to DPDK 19.11.1,15,[],https://github.com/NetSys/bess/pull/965,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/965#issuecomment-605737940,"built on top of #943, plus a DPDK minor version update 19.11.1
Perhaps we should switch to a git submodule, rather than downloading, in the future.","Codecov Report

Merging #965 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #965      +/-   ##
==========================================
- Coverage   55.53%   55.45%   -0.09%     
==========================================
  Files           9        9              
  Lines        1165     1165              
==========================================
- Hits          647      646       -1     
- Misses        518      519       +1



Impacted Files
Coverage Δ





pybess/bess.py
39.83% <0%> (-0.21%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 10161bb...0928ecc. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,965,2020-03-30T01:01:02Z,2020-04-03T20:06:58Z,2020-04-03T20:07:42Z,MERGED,True,185,166,10,https://github.com/sangjinhan,Update to DPDK 19.11.1,15,[],https://github.com/NetSys/bess/pull/965,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/965#issuecomment-608634436,"built on top of #943, plus a DPDK minor version update 19.11.1
Perhaps we should switch to a git submodule, rather than downloading, in the future.",Merged. Thanks!,True,"{'HOORAY': ['https://github.com/krsna1729'], 'THUMBS_UP': ['https://github.com/krsna1729']}"
NetSys/bess,https://github.com/NetSys/bess,966,2020-03-30T23:19:59Z,2020-03-30T23:37:59Z,2020-03-30T23:40:13Z,MERGED,True,4,4,1,https://github.com/chris3torek,build.py: fix make invocations,1,[],https://github.com/NetSys/bess/pull/966,https://github.com/chris3torek,1,https://github.com/NetSys/bess/pull/966,"The MAKEFLAGS environment variable may hold -- inside it, so be
sure to put our own -C and variable-setting arguments earlier.","The MAKEFLAGS environment variable may hold -- inside it, so be
sure to put our own -C and variable-setting arguments earlier.",True,{}
NetSys/bess,https://github.com/NetSys/bess,966,2020-03-30T23:19:59Z,2020-03-30T23:37:59Z,2020-03-30T23:40:13Z,MERGED,True,4,4,1,https://github.com/chris3torek,build.py: fix make invocations,1,[],https://github.com/NetSys/bess/pull/966,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/966#issuecomment-606305747,"The MAKEFLAGS environment variable may hold -- inside it, so be
sure to put our own -C and variable-setting arguments earlier.","Codecov Report

❗ No coverage uploaded for pull request base (master@60bad41). Click here to learn what that means.
The diff coverage is n/a.


@@            Coverage Diff            @@
##             master     #966   +/-   ##
=========================================
  Coverage          ?   55.53%           
=========================================
  Files             ?        9           
  Lines             ?     1165           
  Branches          ?        0           
=========================================
  Hits              ?      647           
  Misses            ?      518           
  Partials          ?        0           



Impacted Files
Coverage Δ





bessctl/sugar.py
91.53% <0.00%> (ø)



pybess/test_bess.py
100.00% <0.00%> (ø)



pybess/test_protobuf_to_dict.py
100.00% <0.00%> (ø)



bessctl/test_utils.py
18.81% <0.00%> (ø)



pybess/protobuf_to_dict.py
59.63% <0.00%> (ø)



pybess/pm_import.py
84.21% <0.00%> (ø)



pybess/bess.py
40.04% <0.00%> (ø)



bessctl/test_sugar.py
97.05% <0.00%> (ø)



bessctl/test_samples.py
79.59% <0.00%> (ø)





Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 60bad41...858827d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,966,2020-03-30T23:19:59Z,2020-03-30T23:37:59Z,2020-03-30T23:40:13Z,MERGED,True,4,4,1,https://github.com/chris3torek,build.py: fix make invocations,1,[],https://github.com/NetSys/bess/pull/966,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/966#issuecomment-606308753,"The MAKEFLAGS environment variable may hold -- inside it, so be
sure to put our own -C and variable-setting arguments earlier.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/968,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.","... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.",True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/968#issuecomment-608907281,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.","Codecov Report

Merging #968 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #968      +/-   ##
==========================================
+ Coverage   55.45%   55.53%   +0.08%     
==========================================
  Files           9        9              
  Lines        1165     1165              
==========================================
+ Hits          646      647       +1     
+ Misses        519      518       -1     



Impacted Files
Coverage Δ





pybess/bess.py
40.04% <0.00%> (+0.20%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d95abe7...9b08d2f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/krsna1729,3,https://github.com/NetSys/bess/pull/968#issuecomment-608931552,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.","i have had similar issues before, never dug deep, but as a workaround was using --legacy-mem. In the ONF environment we are currently using bess with

hugepages
vfio-pci
VFs (sriov-device-plugin)
no privileged *

* had to change this to privileged due to below error
I0318 22:01:20.146325    18 dpdk.cc:65] EAL: Getting a vfio_dev_fd for 0000:86:0e.4 failed
I0318 22:01:20.146338    18 dpdk.cc:65] EAL: Requested device 0000:86:0e.4 cannot be used

which happens only on VFs not PFs and when all VFs are not bound to same bessd container
without legacy-mem one needs CAP_SYS_NICE today
p.s: updated hugepages",True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/krsna1729,4,https://github.com/NetSys/bess/pull/968#issuecomment-608949848,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.","does not seem to be working in our setup
I0404 01:10:36.868716     1 dpdk.cc:166] Initializing DPDK EAL with options: [""bessd"", ""--master-lcore"", ""127"", ""--lcore"", ""127@12-13"", ""--no-shconf"", ""--legacy-mem"", ""--iova"", ""pa"", ""--socket-mem"", ""1024,1024"", ""--huge-unlink""]
EAL: Detected 88 lcore(s)
EAL: Detected 2 NUMA nodes
EAL: FATAL: Cannot use IOVA as 'PA' since physical addresses are not available
EAL: Cannot use IOVA as 'PA' since physical addresses are not available
F0404 01:10:36.908143     1 dpdk.cc:169] rte_eal_init() failed: ret = -1 rte_errno = 22 (Invalid argument)
*** Check failure stack trace: ***
F0404 01:10:36.924130     1 debug.cc:405] Backtrace (recent calls first) ---
(0): bessd(+0x4db57c) [0x55b7c364257c]
(1): bessd(_ZN4bess8InitDpdkEi+0x6b) [0x55b7c36425fb]
(2): bessd(_ZN4bess10PacketPool18CreateDefaultPoolsEm+0x36) [0x55b7c3636946]
(3): bessd(main+0x239) [0x55b7c353e289]
(4): /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xea) [0x7f1c148be09a]
(5): bessd(_start+0x29) [0x55b7c362fab9]
*** Check failure stack trace: ***

Needed CAP_SYS_ADMIN
with -m 0 works without any capabilities",True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/sangjinhan,5,https://github.com/NetSys/bess/pull/968#issuecomment-614830619,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.","@krsna1729

does not seem to be working in our setup
...
Needed CAP_SYS_ADMIN
with -m 0 works without any capabilities

Let me clarify, is your use case like this?

IOMMU is fully turned on, not just passthrough
want to use a physical NIC (which model?)
non-privileged user

Are you able to do the above with vanilla DPDK, let's say, testpmd? If so, did you use VA? PA?
Maybe I should let the user specify which IOVA mode to use, rather than (often incorrectly) guessing it? Want to hear your thoughts.",True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/krsna1729,6,https://github.com/NetSys/bess/pull/968#issuecomment-614867404,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.","IOMMU is fully turned on, not just passthrough


Yes


want to use a physical NIC (which model?)


X710 VFs (PFs too)


non-privileged user


from capabilities perspective yes. root user in a container, still not using userns.

Are you able to do the above with vanilla DPDK, let's say, testpmd? If so, did you use VA? PA?

$ docker run --rm -it \
--ulimit memlock=-1 -v /dev/hugepages:/dev/hugepages \
--device=/dev/vfio/82 --device=/dev/vfio/83 --device=/dev/vfio/vfio \
dpdk-app-testpmd testpmd --legacy-mem
...
EAL: Selected IOVA mode 'VA'
....

$ docker run --rm -it \
--ulimit memlock=-1 -v /dev/hugepages:/dev/hugepages \
--device=/dev/vfio/82 --device=/dev/vfio/83 --device=/dev/vfio/vfio \
--cap-add SYS_NICE \
dpdk-app-testpmd testpmd
...
EAL: Selected IOVA mode 'VA'
...


Maybe I should let the user specify which IOVA mode to use, rather than (often incorrectly) guessing it? Want to hear your thoughts.

https://doc.dpdk.org/guides/rel_notes/known_issues.html#unsuitable-iova-mode-may-be-picked-as-the-default
Yes we can leave it for DPDK to figure out (not passing anything) and allow user to freely append EAL args that wont have an impact on BESS. Whitelisting PCI is one thing I wanted to pass.",True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/sangjinhan,7,https://github.com/NetSys/bess/pull/968#issuecomment-625640292,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.","@krsna1729 added --iova <pa|va> option to force an iova mode. If unspecified, va is used for -m 0, or pa otherwise.",True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/krsna1729,8,https://github.com/NetSys/bess/pull/968#issuecomment-625645459,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.","Can we add the arg only if the user passes? If no, that's fine.
if (FLAGS_iova != """")
    rte_args.Append({""--iova"", FLAGS_iova});",True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/sangjinhan,9,https://github.com/NetSys/bess/pull/968#issuecomment-625788080,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.","@krsna1729 that would be my preference, but DPDK often trying pa even if it runs without the required capability, resulting in a crash :( I wish its heuristic to decide default iova mode also considered the current capability.",True,{}
NetSys/bess,https://github.com/NetSys/bess,968,2020-04-04T00:16:00Z,2020-05-08T15:06:53Z,2020-05-08T21:45:51Z,MERGED,True,25,1,3,https://github.com/sangjinhan,Set IOVA mode explicitly,3,[],https://github.com/NetSys/bess/pull/968,https://github.com/melvinw,10,https://github.com/NetSys/bess/pull/968#issuecomment-625860906,"... to PA or VA, based on whether hugepages are being used or not.
Otherwise, what mode is used heuristically depends on the current
current configuration of the system, sometimes ends up with not
what we want (e.g., PA mode is used even when run by non-root users)
https://software.intel.com/en-us/articles/memory-in-dpdk-part-2-deep-dive-into-iova

Without this patch, bessd (or unit tests) may crash if

some NICs are bound to vfio-pci,
/sys/module/vfio/parameters/enable_unsafe_noiommu_mode is set,
bessd is run by non-privileged user without hugepages.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,969,2020-04-04T04:18:39Z,2020-04-05T18:36:46Z,2020-06-24T06:14:46Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Build *.so files for plugin modules,1,[],https://github.com/NetSys/bess/pull/969,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/969,"Modules in plugins are built as *.so dynamic loadable library, ratherthan being embedded in the bessd executable. Commit 0928ecc accidentally broke this, not building *.so files.","Modules in plugins are built as *.so dynamic loadable library, ratherthan being embedded in the bessd executable. Commit 0928ecc accidentally broke this, not building *.so files.",True,{}
NetSys/bess,https://github.com/NetSys/bess,969,2020-04-04T04:18:39Z,2020-04-05T18:36:46Z,2020-06-24T06:14:46Z,MERGED,True,1,1,1,https://github.com/sangjinhan,Build *.so files for plugin modules,1,[],https://github.com/NetSys/bess/pull/969,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/969#issuecomment-608972316,"Modules in plugins are built as *.so dynamic loadable library, ratherthan being embedded in the bessd executable. Commit 0928ecc accidentally broke this, not building *.so files.","Codecov Report

Merging #969 into master will not change coverage by %.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #969   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d8c985d...b44a319. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,970,2020-04-06T08:28:09Z,,2020-04-16T22:18:16Z,OPEN,False,142,0,5,https://github.com/rvichery,WIP: add python packaging for pybess,1,[],https://github.com/NetSys/bess/pull/970,https://github.com/rvichery,1,https://github.com/NetSys/bess/pull/970,"This PR adds the necessary files to create a complete Python package for pybess as described in #967 . The PR is still missing the update to the travis-ci job to automatically push the package. For the time being the package has been manually uploaded to pypi and can be tested with:
pip3 install pybess_grpc","This PR adds the necessary files to create a complete Python package for pybess as described in #967 . The PR is still missing the update to the travis-ci job to automatically push the package. For the time being the package has been manually uploaded to pypi and can be tested with:
pip3 install pybess_grpc",True,{}
NetSys/bess,https://github.com/NetSys/bess,970,2020-04-06T08:28:09Z,,2020-04-16T22:18:16Z,OPEN,False,142,0,5,https://github.com/rvichery,WIP: add python packaging for pybess,1,[],https://github.com/NetSys/bess/pull/970,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/970#issuecomment-614925789,"This PR adds the necessary files to create a complete Python package for pybess as described in #967 . The PR is still missing the update to the travis-ci job to automatically push the package. For the time being the package has been manually uploaded to pypi and can be tested with:
pip3 install pybess_grpc","Codecov Report

❗ No coverage uploaded for pull request base (master@60bad41). Click here to learn what that means.
The diff coverage is n/a.


@@            Coverage Diff            @@
##             master     #970   +/-   ##
=========================================
  Coverage          ?   55.53%           
=========================================
  Files             ?        9           
  Lines             ?     1165           
  Branches          ?        0           
=========================================
  Hits              ?      647           
  Misses            ?      518           
  Partials          ?        0           



Impacted Files
Coverage Δ





bessctl/test_samples.py
79.59% <0.00%> (ø)



bessctl/sugar.py
91.53% <0.00%> (ø)



pybess/test_bess.py
100.00% <0.00%> (ø)



pybess/protobuf_to_dict.py
59.63% <0.00%> (ø)



bessctl/test_sugar.py
97.05% <0.00%> (ø)



pybess/pm_import.py
84.21% <0.00%> (ø)



pybess/bess.py
40.04% <0.00%> (ø)



bessctl/test_utils.py
18.81% <0.00%> (ø)



pybess/test_protobuf_to_dict.py
100.00% <0.00%> (ø)





Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 60bad41...85bc6ba. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,971,2020-04-10T20:05:38Z,2020-05-05T05:18:36Z,2020-05-05T05:19:14Z,MERGED,True,7,5,2,https://github.com/sarsanaee,Resolving the invalid RSS configuration problem for vhost PMD ports.,2,[],https://github.com/NetSys/bess/pull/971,https://github.com/sarsanaee,1,https://github.com/NetSys/bess/pull/971,"There is a flow_type_rss_offloads condition added to the PMD port driver
which makes issues for vhost ports requiring more than one queue. Given
that there is no RSS support for vhost ports yet, it should be considered
in that condition.
Before this commit, we weren't able to have a vhost PMD port with more
than one queue, and even the example bess script in conf/port/vhost/vhost.bess
with more than one queue --which isn't the default config-- used to have errors.
Signed-off-by: Alireza Sanaee sarsanaee@gmail.com","There is a flow_type_rss_offloads condition added to the PMD port driver
which makes issues for vhost ports requiring more than one queue. Given
that there is no RSS support for vhost ports yet, it should be considered
in that condition.
Before this commit, we weren't able to have a vhost PMD port with more
than one queue, and even the example bess script in conf/port/vhost/vhost.bess
with more than one queue --which isn't the default config-- used to have errors.
Signed-off-by: Alireza Sanaee sarsanaee@gmail.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,971,2020-04-10T20:05:38Z,2020-05-05T05:18:36Z,2020-05-05T05:19:14Z,MERGED,True,7,5,2,https://github.com/sarsanaee,Resolving the invalid RSS configuration problem for vhost PMD ports.,2,[],https://github.com/NetSys/bess/pull/971,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/971#issuecomment-612201245,"There is a flow_type_rss_offloads condition added to the PMD port driver
which makes issues for vhost ports requiring more than one queue. Given
that there is no RSS support for vhost ports yet, it should be considered
in that condition.
Before this commit, we weren't able to have a vhost PMD port with more
than one queue, and even the example bess script in conf/port/vhost/vhost.bess
with more than one queue --which isn't the default config-- used to have errors.
Signed-off-by: Alireza Sanaee sarsanaee@gmail.com","Codecov Report

Merging #971 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #971   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 855c1c1...39b2240. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,971,2020-04-10T20:05:38Z,2020-05-05T05:18:36Z,2020-05-05T05:19:14Z,MERGED,True,7,5,2,https://github.com/sarsanaee,Resolving the invalid RSS configuration problem for vhost PMD ports.,2,[],https://github.com/NetSys/bess/pull/971,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/971#issuecomment-623861247,"There is a flow_type_rss_offloads condition added to the PMD port driver
which makes issues for vhost ports requiring more than one queue. Given
that there is no RSS support for vhost ports yet, it should be considered
in that condition.
Before this commit, we weren't able to have a vhost PMD port with more
than one queue, and even the example bess script in conf/port/vhost/vhost.bess
with more than one queue --which isn't the default config-- used to have errors.
Signed-off-by: Alireza Sanaee sarsanaee@gmail.com",,True,{'LAUGH': ['https://github.com/sarsanaee']}
NetSys/bess,https://github.com/NetSys/bess,973,2020-05-04T19:32:57Z,2020-05-06T19:45:00Z,2020-05-06T19:45:25Z,MERGED,True,220,11,8,https://github.com/ajamshed,Add support for IP/L4 checksum verification.,1,[],https://github.com/NetSys/bess/pull/973,https://github.com/ajamshed,1,https://github.com/NetSys/bess/pull/973,"L4Checksum and IPCheckum verification support is enabled once the
argument 'verify=True' is passed during module initialization.
Default value is set to False. Gate 0 gets all packets that pass
the verification test. Gate 1 gets all the packets that have
incorrect checksums.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","L4Checksum and IPCheckum verification support is enabled once the
argument 'verify=True' is passed during module initialization.
Default value is set to False. Gate 0 gets all packets that pass
the verification test. Gate 1 gets all the packets that have
incorrect checksums.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,973,2020-05-04T19:32:57Z,2020-05-06T19:45:00Z,2020-05-06T19:45:25Z,MERGED,True,220,11,8,https://github.com/ajamshed,Add support for IP/L4 checksum verification.,1,[],https://github.com/NetSys/bess/pull/973,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/973#issuecomment-623714089,"L4Checksum and IPCheckum verification support is enabled once the
argument 'verify=True' is passed during module initialization.
Default value is set to False. Gate 0 gets all packets that pass
the verification test. Gate 1 gets all the packets that have
incorrect checksums.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","Codecov Report

Merging #973 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #973   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 7407e43...ec75040. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,973,2020-05-04T19:32:57Z,2020-05-06T19:45:00Z,2020-05-06T19:45:25Z,MERGED,True,220,11,8,https://github.com/ajamshed,Add support for IP/L4 checksum verification.,1,[],https://github.com/NetSys/bess/pull/973,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/973#issuecomment-624799590,"L4Checksum and IPCheckum verification support is enabled once the
argument 'verify=True' is passed during module initialization.
Default value is set to False. Gate 0 gets all packets that pass
the verification test. Gate 1 gets all the packets that have
incorrect checksums.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","Oh and @ajamshed, add yourself to the contributors list if you like :)",True,{}
NetSys/bess,https://github.com/NetSys/bess,973,2020-05-04T19:32:57Z,2020-05-06T19:45:00Z,2020-05-06T19:45:25Z,MERGED,True,220,11,8,https://github.com/ajamshed,Add support for IP/L4 checksum verification.,1,[],https://github.com/NetSys/bess/pull/973,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/973#issuecomment-624831519,"L4Checksum and IPCheckum verification support is enabled once the
argument 'verify=True' is passed during module initialization.
Default value is set to False. Gate 0 gets all packets that pass
the verification test. Gate 1 gets all the packets that have
incorrect checksums.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",@ajamshed can you pull the latest master and rebase your branch onto it? Github can't automatically resolve the conflict on the contributors list for some reason...,True,{}
NetSys/bess,https://github.com/NetSys/bess,973,2020-05-04T19:32:57Z,2020-05-06T19:45:00Z,2020-05-06T19:45:25Z,MERGED,True,220,11,8,https://github.com/ajamshed,Add support for IP/L4 checksum verification.,1,[],https://github.com/NetSys/bess/pull/973,https://github.com/melvinw,5,https://github.com/NetSys/bess/pull/973#issuecomment-624852211,"L4Checksum and IPCheckum verification support is enabled once the
argument 'verify=True' is passed during module initialization.
Default value is set to False. Gate 0 gets all packets that pass
the verification test. Gate 1 gets all the packets that have
incorrect checksums.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,974,2020-05-05T08:10:24Z,2020-05-05T23:24:19Z,2020-05-05T23:24:57Z,MERGED,True,126,276,8,https://github.com/sangjinhan,Fix the vhost-user initialization issue and its examples.,6,[],https://github.com/NetSys/bess/pull/974,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/974,"It has been recently observed that the PMD driver may often fail to initialize vhost-user ports correctly; in the guest DPDK-based applications (such as testpmd) cannot receive packets from some ports for no apparent reason.

guest -> host works fine
host -> guest works fine only if the virtio port in the guest is managed by Linux TCP/IP
when guest is a container, not a vm, it works

While the root cause of the problem is unclear (just guessing some random bug of the DPDK vhost-user implementation, as it had in 17.02), adjusting the port initialization sequence somehow fixed the problem.
This PR also updates the outdated launch_vm.py and launch_container.py examples for the latest DPDK version, with some minor tweaks.","It has been recently observed that the PMD driver may often fail to initialize vhost-user ports correctly; in the guest DPDK-based applications (such as testpmd) cannot receive packets from some ports for no apparent reason.

guest -> host works fine
host -> guest works fine only if the virtio port in the guest is managed by Linux TCP/IP
when guest is a container, not a vm, it works

While the root cause of the problem is unclear (just guessing some random bug of the DPDK vhost-user implementation, as it had in 17.02), adjusting the port initialization sequence somehow fixed the problem.
This PR also updates the outdated launch_vm.py and launch_container.py examples for the latest DPDK version, with some minor tweaks.",True,{}
NetSys/bess,https://github.com/NetSys/bess,974,2020-05-05T08:10:24Z,2020-05-05T23:24:19Z,2020-05-05T23:24:57Z,MERGED,True,126,276,8,https://github.com/sangjinhan,Fix the vhost-user initialization issue and its examples.,6,[],https://github.com/NetSys/bess/pull/974,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/974#issuecomment-623924865,"It has been recently observed that the PMD driver may often fail to initialize vhost-user ports correctly; in the guest DPDK-based applications (such as testpmd) cannot receive packets from some ports for no apparent reason.

guest -> host works fine
host -> guest works fine only if the virtio port in the guest is managed by Linux TCP/IP
when guest is a container, not a vm, it works

While the root cause of the problem is unclear (just guessing some random bug of the DPDK vhost-user implementation, as it had in 17.02), adjusting the port initialization sequence somehow fixed the problem.
This PR also updates the outdated launch_vm.py and launch_container.py examples for the latest DPDK version, with some minor tweaks.","Codecov Report

Merging #974 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #974   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update a33039d...c84898d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,974,2020-05-05T08:10:24Z,2020-05-05T23:24:19Z,2020-05-05T23:24:57Z,MERGED,True,126,276,8,https://github.com/sangjinhan,Fix the vhost-user initialization issue and its examples.,6,[],https://github.com/NetSys/bess/pull/974,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/974#issuecomment-624357615,"It has been recently observed that the PMD driver may often fail to initialize vhost-user ports correctly; in the guest DPDK-based applications (such as testpmd) cannot receive packets from some ports for no apparent reason.

guest -> host works fine
host -> guest works fine only if the virtio port in the guest is managed by Linux TCP/IP
when guest is a container, not a vm, it works

While the root cause of the problem is unclear (just guessing some random bug of the DPDK vhost-user implementation, as it had in 17.02), adjusting the port initialization sequence somehow fixed the problem.
This PR also updates the outdated launch_vm.py and launch_container.py examples for the latest DPDK version, with some minor tweaks.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,975,2020-05-07T08:49:15Z,2020-05-25T06:15:49Z,2020-05-25T06:15:50Z,CLOSED,False,14,5,2,https://github.com/ajamshed,Add metadata with attribute to the Timestamp module.,1,[],https://github.com/NetSys/bess/pull/975,https://github.com/ajamshed,1,https://github.com/NetSys/bess/pull/975,"This patch is useful when Timestamp and Measure modules are used
in tandem. In current version, the default location to store the
metadata in Timestamp module is at Eth/IP4/Udp offset. This may
lead to bugs if the pipeline uses encap/decap operations (header
sizes are changed, and timestamp value can get corrupted).
We propose using attribute option to store timestamp value as
default.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","This patch is useful when Timestamp and Measure modules are used
in tandem. In current version, the default location to store the
metadata in Timestamp module is at Eth/IP4/Udp offset. This may
lead to bugs if the pipeline uses encap/decap operations (header
sizes are changed, and timestamp value can get corrupted).
We propose using attribute option to store timestamp value as
default.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,975,2020-05-07T08:49:15Z,2020-05-25T06:15:49Z,2020-05-25T06:15:50Z,CLOSED,False,14,5,2,https://github.com/ajamshed,Add metadata with attribute to the Timestamp module.,1,[],https://github.com/NetSys/bess/pull/975,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/975#issuecomment-625128921,"This patch is useful when Timestamp and Measure modules are used
in tandem. In current version, the default location to store the
metadata in Timestamp module is at Eth/IP4/Udp offset. This may
lead to bugs if the pipeline uses encap/decap operations (header
sizes are changed, and timestamp value can get corrupted).
We propose using attribute option to store timestamp value as
default.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","Codecov Report

Merging #975 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #975      +/-   ##
==========================================
+ Coverage   55.45%   55.53%   +0.08%     
==========================================
  Files           9        9              
  Lines        1165     1165              
==========================================
+ Hits          646      647       +1     
+ Misses        519      518       -1     



Impacted Files
Coverage Δ





pybess/bess.py
40.04% <0.00%> (+0.20%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d95abe7...dce3a4e. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,975,2020-05-07T08:49:15Z,2020-05-25T06:15:49Z,2020-05-25T06:15:50Z,CLOSED,False,14,5,2,https://github.com/ajamshed,Add metadata with attribute to the Timestamp module.,1,[],https://github.com/NetSys/bess/pull/975,https://github.com/ajamshed,3,https://github.com/NetSys/bess/pull/975#issuecomment-633397430,"This patch is useful when Timestamp and Measure modules are used
in tandem. In current version, the default location to store the
metadata in Timestamp module is at Eth/IP4/Udp offset. This may
lead to bugs if the pipeline uses encap/decap operations (header
sizes are changed, and timestamp value can get corrupted).
We propose using attribute option to store timestamp value as
default.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",Okay sure. I will send in a new PR. Closing this one.,True,{}
NetSys/bess,https://github.com/NetSys/bess,976,2020-05-08T04:13:17Z,2020-06-14T21:01:47Z,2020-06-14T21:01:54Z,MERGED,True,1,1,1,https://github.com/shinae-woo,Allow 'Debian' to use ansible dependency build script,1,[],https://github.com/NetSys/bess/pull/976,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/976,"The ansible script assumes 'Ubuntu' only for the logic to check distro and it's version to add ppa source and build from source appropriately as needed. This PR allows 'Debian' to add build dependencies.
(Tested on Debian10+)","The ansible script assumes 'Ubuntu' only for the logic to check distro and it's version to add ppa source and build from source appropriately as needed. This PR allows 'Debian' to add build dependencies.
(Tested on Debian10+)",True,{}
NetSys/bess,https://github.com/NetSys/bess,976,2020-05-08T04:13:17Z,2020-06-14T21:01:47Z,2020-06-14T21:01:54Z,MERGED,True,1,1,1,https://github.com/shinae-woo,Allow 'Debian' to use ansible dependency build script,1,[],https://github.com/NetSys/bess/pull/976,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/976#issuecomment-625624075,"The ansible script assumes 'Ubuntu' only for the logic to check distro and it's version to add ppa source and build from source appropriately as needed. This PR allows 'Debian' to add build dependencies.
(Tested on Debian10+)","Codecov Report

Merging #976 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #976   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0145a1c...bd722e3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,977,2020-05-08T05:09:38Z,2020-08-13T18:26:58Z,2020-08-13T18:27:03Z,MERGED,True,1,1,1,https://github.com/shinae-woo,Do not build dpdk with fPIC options,1,[],https://github.com/NetSys/bess/pull/977,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/977,"This option added before to resolve the issues from older version of
gcc (gcc-5, gcc-6), which defaultly enable pie mode. This bug had been
fixed on the newer version of gcc.


If stack protector option enabled on kernel (CC_STACKPROTECTOR_STRONG,
or STACKPROTECTOR_STRONG), pie is not allowed. This is defaultly
enabled on many of recent Debian-family distros, so The option -fPIC
triggers an build error for some driver modules (e.g., kmoe, igb_uio)


To support default kernel option for stack protector, and as a fact
that PIE is not default for recent version of gcc anymore, we can
remove fPIC from the option.


Still build with old gcc versions on newer kernel have a chance to
failure, in that case, multiple options may available
(though, I didn't test those options by myself)

upgrade gcc to newer version
override DPDK_CFLAGS to set -fPIC
disable STACKPROTECTOR_STRONG from kernel config
disable PIE option on KBUILD_CFLAGS (--no-pie)","This option added before to resolve the issues from older version of
gcc (gcc-5, gcc-6), which defaultly enable pie mode. This bug had been
fixed on the newer version of gcc.


If stack protector option enabled on kernel (CC_STACKPROTECTOR_STRONG,
or STACKPROTECTOR_STRONG), pie is not allowed. This is defaultly
enabled on many of recent Debian-family distros, so The option -fPIC
triggers an build error for some driver modules (e.g., kmoe, igb_uio)


To support default kernel option for stack protector, and as a fact
that PIE is not default for recent version of gcc anymore, we can
remove fPIC from the option.


Still build with old gcc versions on newer kernel have a chance to
failure, in that case, multiple options may available
(though, I didn't test those options by myself)

upgrade gcc to newer version
override DPDK_CFLAGS to set -fPIC
disable STACKPROTECTOR_STRONG from kernel config
disable PIE option on KBUILD_CFLAGS (--no-pie)",True,{}
NetSys/bess,https://github.com/NetSys/bess,977,2020-05-08T05:09:38Z,2020-08-13T18:26:58Z,2020-08-13T18:27:03Z,MERGED,True,1,1,1,https://github.com/shinae-woo,Do not build dpdk with fPIC options,1,[],https://github.com/NetSys/bess/pull/977,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/977#issuecomment-625641124,"This option added before to resolve the issues from older version of
gcc (gcc-5, gcc-6), which defaultly enable pie mode. This bug had been
fixed on the newer version of gcc.


If stack protector option enabled on kernel (CC_STACKPROTECTOR_STRONG,
or STACKPROTECTOR_STRONG), pie is not allowed. This is defaultly
enabled on many of recent Debian-family distros, so The option -fPIC
triggers an build error for some driver modules (e.g., kmoe, igb_uio)


To support default kernel option for stack protector, and as a fact
that PIE is not default for recent version of gcc anymore, we can
remove fPIC from the option.


Still build with old gcc versions on newer kernel have a chance to
failure, in that case, multiple options may available
(though, I didn't test those options by myself)

upgrade gcc to newer version
override DPDK_CFLAGS to set -fPIC
disable STACKPROTECTOR_STRONG from kernel config
disable PIE option on KBUILD_CFLAGS (--no-pie)","Codecov Report

Merging #977 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #977   +/-   ##
=======================================
  Coverage   55.96%   55.96%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          652      652           
  Misses        513      513           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ea848dd...cd591a4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,978,2020-05-08T10:32:37Z,2020-05-09T03:33:04Z,2020-05-09T03:33:09Z,MERGED,True,21,15,2,https://github.com/sangjinhan,Add CPU flag to customize the `-march` build option,3,[],https://github.com/NetSys/bess/pull/978,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/978,"BESS versions with DPDK 17.11:

DPDK was always built with -march=nehalem
BESS was built with CXXARCHFLAGS

BESS versions with DPDK 19.11.1:

DPDK was always built with -march=native
BESS was built with CXXARCHFLAGS environment variable

After this PR:

both DPDK and BESS are built with CPU environment variable (native if not specified)","BESS versions with DPDK 17.11:

DPDK was always built with -march=nehalem
BESS was built with CXXARCHFLAGS

BESS versions with DPDK 19.11.1:

DPDK was always built with -march=native
BESS was built with CXXARCHFLAGS environment variable

After this PR:

both DPDK and BESS are built with CPU environment variable (native if not specified)",True,{}
NetSys/bess,https://github.com/NetSys/bess,978,2020-05-08T10:32:37Z,2020-05-09T03:33:04Z,2020-05-09T03:33:09Z,MERGED,True,21,15,2,https://github.com/sangjinhan,Add CPU flag to customize the `-march` build option,3,[],https://github.com/NetSys/bess/pull/978,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/978#issuecomment-625757986,"BESS versions with DPDK 17.11:

DPDK was always built with -march=nehalem
BESS was built with CXXARCHFLAGS

BESS versions with DPDK 19.11.1:

DPDK was always built with -march=native
BESS was built with CXXARCHFLAGS environment variable

After this PR:

both DPDK and BESS are built with CPU environment variable (native if not specified)","Codecov Report

Merging #978 into master will increase coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #978      +/-   ##
==========================================
+ Coverage   55.45%   55.53%   +0.08%     
==========================================
  Files           9        9              
  Lines        1165     1165              
==========================================
+ Hits          646      647       +1     
+ Misses        519      518       -1     



Impacted Files
Coverage Δ





pybess/bess.py
40.04% <0.00%> (+0.20%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d95abe7...5573c8d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,978,2020-05-08T10:32:37Z,2020-05-09T03:33:04Z,2020-05-09T03:33:09Z,MERGED,True,21,15,2,https://github.com/sangjinhan,Add CPU flag to customize the `-march` build option,3,[],https://github.com/NetSys/bess/pull/978,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/978#issuecomment-626098569,"BESS versions with DPDK 17.11:

DPDK was always built with -march=nehalem
BESS was built with CXXARCHFLAGS

BESS versions with DPDK 19.11.1:

DPDK was always built with -march=native
BESS was built with CXXARCHFLAGS environment variable

After this PR:

both DPDK and BESS are built with CPU environment variable (native if not specified)",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,979,2020-05-13T07:22:19Z,2020-05-21T18:42:36Z,2020-05-21T18:43:05Z,MERGED,True,36,3,3,https://github.com/ravens,port.h: bump kDefault*QueueSize,1,[],https://github.com/NetSys/bess/pull/979,https://github.com/ravens,1,https://github.com/NetSys/bess/pull/979,"The current value of kDefaultOutQueueSize is too small for some
paravirtualized adapters such as vmxnet3, and as a result those PMDports
fail during attachment. Bumping up the default value.","The current value of kDefaultOutQueueSize is too small for some
paravirtualized adapters such as vmxnet3, and as a result those PMDports
fail during attachment. Bumping up the default value.",True,{}
NetSys/bess,https://github.com/NetSys/bess,979,2020-05-13T07:22:19Z,2020-05-21T18:42:36Z,2020-05-21T18:43:05Z,MERGED,True,36,3,3,https://github.com/ravens,port.h: bump kDefault*QueueSize,1,[],https://github.com/NetSys/bess/pull/979,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/979#issuecomment-627808321,"The current value of kDefaultOutQueueSize is too small for some
paravirtualized adapters such as vmxnet3, and as a result those PMDports
fail during attachment. Bumping up the default value.","Codecov Report

Merging #979 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #979   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ee38618...f315317. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,979,2020-05-13T07:22:19Z,2020-05-21T18:42:36Z,2020-05-21T18:43:05Z,MERGED,True,36,3,3,https://github.com/ravens,port.h: bump kDefault*QueueSize,1,[],https://github.com/NetSys/bess/pull/979,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/979#issuecomment-628257424,"The current value of kDefaultOutQueueSize is too small for some
paravirtualized adapters such as vmxnet3, and as a result those PMDports
fail during attachment. Bumping up the default value.","Thank you for the patch! One potential issue with default queue sizing is that some QEMU (and other old virtio implementations) versions used to have the queue size limited (hardcoded) to 256.
How about this?

We set the default queue size to 1,024 for both inc (rx) and out (tx). 1,024 is just an arbitrary number I chose (many Linux device drivers for hardware NICs have 1k as their default)
In pmd.cc, we cap the default or user-configured queue size with the rte_eth_dev_info.*_desc_lim (with some warning messages when it was out of range)",True,{}
NetSys/bess,https://github.com/NetSys/bess,979,2020-05-13T07:22:19Z,2020-05-21T18:42:36Z,2020-05-21T18:43:05Z,MERGED,True,36,3,3,https://github.com/ravens,port.h: bump kDefault*QueueSize,1,[],https://github.com/NetSys/bess/pull/979,https://github.com/ravens,4,https://github.com/NetSys/bess/pull/979#issuecomment-630088415,"The current value of kDefaultOutQueueSize is too small for some
paravirtualized adapters such as vmxnet3, and as a result those PMDports
fail during attachment. Bumping up the default value.",@sangjinhan I fixed the PR with the elements you proposed.,True,{}
NetSys/bess,https://github.com/NetSys/bess,979,2020-05-13T07:22:19Z,2020-05-21T18:42:36Z,2020-05-21T18:43:05Z,MERGED,True,36,3,3,https://github.com/ravens,port.h: bump kDefault*QueueSize,1,[],https://github.com/NetSys/bess/pull/979,https://github.com/ravens,5,https://github.com/NetSys/bess/pull/979#issuecomment-631563458,"The current value of kDefaultOutQueueSize is too small for some
paravirtualized adapters such as vmxnet3, and as a result those PMDports
fail during attachment. Bumping up the default value.",@sangjinhan just did another pass today to address your comments. Thanks !,True,{}
NetSys/bess,https://github.com/NetSys/bess,979,2020-05-13T07:22:19Z,2020-05-21T18:42:36Z,2020-05-21T18:43:05Z,MERGED,True,36,3,3,https://github.com/ravens,port.h: bump kDefault*QueueSize,1,[],https://github.com/NetSys/bess/pull/979,https://github.com/sangjinhan,6,https://github.com/NetSys/bess/pull/979#issuecomment-632276185,"The current value of kDefaultOutQueueSize is too small for some
paravirtualized adapters such as vmxnet3, and as a result those PMDports
fail during attachment. Bumping up the default value.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,980,2020-05-13T13:25:38Z,2020-05-18T17:36:13Z,2020-05-18T17:38:50Z,MERGED,True,4,3,1,https://github.com/ravens,pmd.cc: add back support for PMD virtio devices,1,[],https://github.com/NetSys/bess/pull/980,https://github.com/ravens,1,https://github.com/NetSys/bess/pull/980,"Virtio devices are using a unique queue so the current default config
cannot work and return 22 when user attempts to add port to bess. We
fix that by using the number of RX queues to configure the device.","Virtio devices are using a unique queue so the current default config
cannot work and return 22 when user attempts to add port to bess. We
fix that by using the number of RX queues to configure the device.",True,{}
NetSys/bess,https://github.com/NetSys/bess,980,2020-05-13T13:25:38Z,2020-05-18T17:36:13Z,2020-05-18T17:38:50Z,MERGED,True,4,3,1,https://github.com/ravens,pmd.cc: add back support for PMD virtio devices,1,[],https://github.com/NetSys/bess/pull/980,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/980#issuecomment-627995149,"Virtio devices are using a unique queue so the current default config
cannot work and return 22 when user attempts to add port to bess. We
fix that by using the number of RX queues to configure the device.","Codecov Report

Merging #980 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #980   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 0145a1c...c08f5a3. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,980,2020-05-13T13:25:38Z,2020-05-18T17:36:13Z,2020-05-18T17:38:50Z,MERGED,True,4,3,1,https://github.com/ravens,pmd.cc: add back support for PMD virtio devices,1,[],https://github.com/NetSys/bess/pull/980,https://github.com/ravens,3,https://github.com/NetSys/bess/pull/980#issuecomment-630088789,"Virtio devices are using a unique queue so the current default config
cannot work and return 22 when user attempts to add port to bess. We
fix that by using the number of RX queues to configure the device.",@sangjinhan I fixed the PR with the elements you proposed.,True,{}
NetSys/bess,https://github.com/NetSys/bess,980,2020-05-13T13:25:38Z,2020-05-18T17:36:13Z,2020-05-18T17:38:50Z,MERGED,True,4,3,1,https://github.com/ravens,pmd.cc: add back support for PMD virtio devices,1,[],https://github.com/NetSys/bess/pull/980,https://github.com/sangjinhan,4,https://github.com/NetSys/bess/pull/980#issuecomment-630334138,"Virtio devices are using a unique queue so the current default config
cannot work and return 22 when user attempts to add port to bess. We
fix that by using the number of RX queues to configure the device.","Merged, thanks!",True,{}
NetSys/bess,https://github.com/NetSys/bess,982,2020-05-20T04:41:05Z,2020-05-20T17:44:01Z,2020-05-20T17:44:08Z,MERGED,True,29,3,2,https://github.com/sangjinhan,Apply a hotfix for flakey DPDK parallel build,1,[],https://github.com/NetSys/bess/pull/982,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/982,"DPDK has a race between building C files and creating symbolic links (lib/librte_ethdev/*.h -> build/include/*.h) for their dependency headers. This race may cause a build failure on make -j. While it is fairly rare, it tends to happen more often on busy machines.
The easiest way to reproduce the bug is to add an artificial delay in the Makefile:
--- a/mk/internal/rte.install-post.mk
+++ b/mk/internal/rte.install-post.mk
@@ -31,6 +31,7 @@ define symlink_rule
 $(addprefix $(RTE_OUTPUT)/$(1)/,$(notdir $(2))): $(2)
        @echo ""  SYMLINK-FILE $(addprefix $(1)/,$(notdir $(2)))""
        @[ -d $(RTE_OUTPUT)/$(1) ] || mkdir -p $(RTE_OUTPUT)/$(1)
+       sleep 10
        $(Q)ln -nsf `$(RTE_SDK)/buildtools/relpath.sh $$(<) $(RTE_OUTPUT)/$(1)` \
                $(RTE_OUTPUT)/$(1)
 endef

the the error looks like:
== Build lib/librte_ethdev
[2020-05-13T19:07:26.450Z]   SYMLINK-FILE include/rte_ethdev.h
[2020-05-13T19:07:26.450Z] gcc -Wp,-MD,./.ethdev_private.o.d.tmp  -m64 -pthread -I/var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_eal/linux/eal/include  -march=nehalem -DRTE_MACHINE_CPUFLAG_SSE -DRTE_MACHINE_CPUFLAG_SSE2 -DRTE_MACHINE_CPUFLAG_SSE3 -DRTE_MACHINE_CPUFLAG_SSSE3 -DRTE_MACHINE_CPUFLAG_SSE4_1 -DRTE_MACHINE_CPUFLAG_SSE4_2  -I/var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/build/include -DRTE_USE_FUNCTION_VERSIONING -include /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/build/include/rte_config.h -D_GNU_SOURCE -DALLOW_EXPERIMENTAL_API -O3 -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wold-style-definition -Wpointer-arith -Wcast-align -Wnested-externs -Wcast-qual -Wformat-nonliteral -Wformat-security -Wundef -Wwrite-strings -Wdeprecated -Wimplicit-fallthrough=2 -Wno-format-truncation -Wno-address-of-packed-member   -g -w -fPIC -o ethdev_private.o -c /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/ethdev_private.c 

[2020-05-13T19:07:27.012Z] In file included from /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/ethdev_private.c:5:0:
[2020-05-13T19:07:27.012Z] /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/rte_ethdev.h:4287:10: fatal error: rte_ethdev_core.h: No such file or directory
[2020-05-13T19:07:27.012Z]  #include <rte_ethdev_core.h>
[2020-05-13T19:07:27.012Z]           ^~~~~~~~~~~~~~~~~~~
[2020-05-13T19:07:27.012Z] compilation terminated.
[2020-05-13T19:07:27.012Z] /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/mk/internal/rte.compile-pre.mk:114: recipe for target 'ethdev_private.o' failed

I am going to send a patch to the DPDK upstream, after figurng out what the root cause of the race is. Until then, we work around the problem with a patch.","DPDK has a race between building C files and creating symbolic links (lib/librte_ethdev/*.h -> build/include/*.h) for their dependency headers. This race may cause a build failure on make -j. While it is fairly rare, it tends to happen more often on busy machines.
The easiest way to reproduce the bug is to add an artificial delay in the Makefile:
--- a/mk/internal/rte.install-post.mk
+++ b/mk/internal/rte.install-post.mk
@@ -31,6 +31,7 @@ define symlink_rule
 $(addprefix $(RTE_OUTPUT)/$(1)/,$(notdir $(2))): $(2)
        @echo ""  SYMLINK-FILE $(addprefix $(1)/,$(notdir $(2)))""
        @[ -d $(RTE_OUTPUT)/$(1) ] || mkdir -p $(RTE_OUTPUT)/$(1)
+       sleep 10
        $(Q)ln -nsf `$(RTE_SDK)/buildtools/relpath.sh $$(<) $(RTE_OUTPUT)/$(1)` \
                $(RTE_OUTPUT)/$(1)
 endef

the the error looks like:
== Build lib/librte_ethdev
[2020-05-13T19:07:26.450Z]   SYMLINK-FILE include/rte_ethdev.h
[2020-05-13T19:07:26.450Z] gcc -Wp,-MD,./.ethdev_private.o.d.tmp  -m64 -pthread -I/var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_eal/linux/eal/include  -march=nehalem -DRTE_MACHINE_CPUFLAG_SSE -DRTE_MACHINE_CPUFLAG_SSE2 -DRTE_MACHINE_CPUFLAG_SSE3 -DRTE_MACHINE_CPUFLAG_SSSE3 -DRTE_MACHINE_CPUFLAG_SSE4_1 -DRTE_MACHINE_CPUFLAG_SSE4_2  -I/var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/build/include -DRTE_USE_FUNCTION_VERSIONING -include /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/build/include/rte_config.h -D_GNU_SOURCE -DALLOW_EXPERIMENTAL_API -O3 -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wold-style-definition -Wpointer-arith -Wcast-align -Wnested-externs -Wcast-qual -Wformat-nonliteral -Wformat-security -Wundef -Wwrite-strings -Wdeprecated -Wimplicit-fallthrough=2 -Wno-format-truncation -Wno-address-of-packed-member   -g -w -fPIC -o ethdev_private.o -c /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/ethdev_private.c 

[2020-05-13T19:07:27.012Z] In file included from /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/ethdev_private.c:5:0:
[2020-05-13T19:07:27.012Z] /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/rte_ethdev.h:4287:10: fatal error: rte_ethdev_core.h: No such file or directory
[2020-05-13T19:07:27.012Z]  #include <rte_ethdev_core.h>
[2020-05-13T19:07:27.012Z]           ^~~~~~~~~~~~~~~~~~~
[2020-05-13T19:07:27.012Z] compilation terminated.
[2020-05-13T19:07:27.012Z] /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/mk/internal/rte.compile-pre.mk:114: recipe for target 'ethdev_private.o' failed

I am going to send a patch to the DPDK upstream, after figurng out what the root cause of the race is. Until then, we work around the problem with a patch.",True,{}
NetSys/bess,https://github.com/NetSys/bess,982,2020-05-20T04:41:05Z,2020-05-20T17:44:01Z,2020-05-20T17:44:08Z,MERGED,True,29,3,2,https://github.com/sangjinhan,Apply a hotfix for flakey DPDK parallel build,1,[],https://github.com/NetSys/bess/pull/982,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/982#issuecomment-631236645,"DPDK has a race between building C files and creating symbolic links (lib/librte_ethdev/*.h -> build/include/*.h) for their dependency headers. This race may cause a build failure on make -j. While it is fairly rare, it tends to happen more often on busy machines.
The easiest way to reproduce the bug is to add an artificial delay in the Makefile:
--- a/mk/internal/rte.install-post.mk
+++ b/mk/internal/rte.install-post.mk
@@ -31,6 +31,7 @@ define symlink_rule
 $(addprefix $(RTE_OUTPUT)/$(1)/,$(notdir $(2))): $(2)
        @echo ""  SYMLINK-FILE $(addprefix $(1)/,$(notdir $(2)))""
        @[ -d $(RTE_OUTPUT)/$(1) ] || mkdir -p $(RTE_OUTPUT)/$(1)
+       sleep 10
        $(Q)ln -nsf `$(RTE_SDK)/buildtools/relpath.sh $$(<) $(RTE_OUTPUT)/$(1)` \
                $(RTE_OUTPUT)/$(1)
 endef

the the error looks like:
== Build lib/librte_ethdev
[2020-05-13T19:07:26.450Z]   SYMLINK-FILE include/rte_ethdev.h
[2020-05-13T19:07:26.450Z] gcc -Wp,-MD,./.ethdev_private.o.d.tmp  -m64 -pthread -I/var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_eal/linux/eal/include  -march=nehalem -DRTE_MACHINE_CPUFLAG_SSE -DRTE_MACHINE_CPUFLAG_SSE2 -DRTE_MACHINE_CPUFLAG_SSE3 -DRTE_MACHINE_CPUFLAG_SSSE3 -DRTE_MACHINE_CPUFLAG_SSE4_1 -DRTE_MACHINE_CPUFLAG_SSE4_2  -I/var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/build/include -DRTE_USE_FUNCTION_VERSIONING -include /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/build/include/rte_config.h -D_GNU_SOURCE -DALLOW_EXPERIMENTAL_API -O3 -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wold-style-definition -Wpointer-arith -Wcast-align -Wnested-externs -Wcast-qual -Wformat-nonliteral -Wformat-security -Wundef -Wwrite-strings -Wdeprecated -Wimplicit-fallthrough=2 -Wno-format-truncation -Wno-address-of-packed-member   -g -w -fPIC -o ethdev_private.o -c /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/ethdev_private.c 

[2020-05-13T19:07:27.012Z] In file included from /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/ethdev_private.c:5:0:
[2020-05-13T19:07:27.012Z] /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/rte_ethdev.h:4287:10: fatal error: rte_ethdev_core.h: No such file or directory
[2020-05-13T19:07:27.012Z]  #include <rte_ethdev_core.h>
[2020-05-13T19:07:27.012Z]           ^~~~~~~~~~~~~~~~~~~
[2020-05-13T19:07:27.012Z] compilation terminated.
[2020-05-13T19:07:27.012Z] /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/mk/internal/rte.compile-pre.mk:114: recipe for target 'ethdev_private.o' failed

I am going to send a patch to the DPDK upstream, after figurng out what the root cause of the race is. Until then, we work around the problem with a patch.","Codecov Report

Merging #982 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #982   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ee38618...5450d34. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,982,2020-05-20T04:41:05Z,2020-05-20T17:44:01Z,2020-05-20T17:44:08Z,MERGED,True,29,3,2,https://github.com/sangjinhan,Apply a hotfix for flakey DPDK parallel build,1,[],https://github.com/NetSys/bess/pull/982,https://github.com/melvinw,3,https://github.com/NetSys/bess/pull/982#issuecomment-631624793,"DPDK has a race between building C files and creating symbolic links (lib/librte_ethdev/*.h -> build/include/*.h) for their dependency headers. This race may cause a build failure on make -j. While it is fairly rare, it tends to happen more often on busy machines.
The easiest way to reproduce the bug is to add an artificial delay in the Makefile:
--- a/mk/internal/rte.install-post.mk
+++ b/mk/internal/rte.install-post.mk
@@ -31,6 +31,7 @@ define symlink_rule
 $(addprefix $(RTE_OUTPUT)/$(1)/,$(notdir $(2))): $(2)
        @echo ""  SYMLINK-FILE $(addprefix $(1)/,$(notdir $(2)))""
        @[ -d $(RTE_OUTPUT)/$(1) ] || mkdir -p $(RTE_OUTPUT)/$(1)
+       sleep 10
        $(Q)ln -nsf `$(RTE_SDK)/buildtools/relpath.sh $$(<) $(RTE_OUTPUT)/$(1)` \
                $(RTE_OUTPUT)/$(1)
 endef

the the error looks like:
== Build lib/librte_ethdev
[2020-05-13T19:07:26.450Z]   SYMLINK-FILE include/rte_ethdev.h
[2020-05-13T19:07:26.450Z] gcc -Wp,-MD,./.ethdev_private.o.d.tmp  -m64 -pthread -I/var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_eal/linux/eal/include  -march=nehalem -DRTE_MACHINE_CPUFLAG_SSE -DRTE_MACHINE_CPUFLAG_SSE2 -DRTE_MACHINE_CPUFLAG_SSE3 -DRTE_MACHINE_CPUFLAG_SSSE3 -DRTE_MACHINE_CPUFLAG_SSE4_1 -DRTE_MACHINE_CPUFLAG_SSE4_2  -I/var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/build/include -DRTE_USE_FUNCTION_VERSIONING -include /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/build/include/rte_config.h -D_GNU_SOURCE -DALLOW_EXPERIMENTAL_API -O3 -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wold-style-definition -Wpointer-arith -Wcast-align -Wnested-externs -Wcast-qual -Wformat-nonliteral -Wformat-security -Wundef -Wwrite-strings -Wdeprecated -Wimplicit-fallthrough=2 -Wno-format-truncation -Wno-address-of-packed-member   -g -w -fPIC -o ethdev_private.o -c /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/ethdev_private.c 

[2020-05-13T19:07:27.012Z] In file included from /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/ethdev_private.c:5:0:
[2020-05-13T19:07:27.012Z] /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/lib/librte_ethdev/rte_ethdev.h:4287:10: fatal error: rte_ethdev_core.h: No such file or directory
[2020-05-13T19:07:27.012Z]  #include <rte_ethdev_core.h>
[2020-05-13T19:07:27.012Z]           ^~~~~~~~~~~~~~~~~~~
[2020-05-13T19:07:27.012Z] compilation terminated.
[2020-05-13T19:07:27.012Z] /var/lib/docker/volumes/jenkins_home/_data/workspace/Deploy/bess-internal/bess/deps/dpdk-19.11.1/mk/internal/rte.compile-pre.mk:114: recipe for target 'ethdev_private.o' failed

I am going to send a patch to the DPDK upstream, after figurng out what the root cause of the race is. Until then, we work around the problem with a patch.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,983,2020-05-24T10:08:34Z,,2020-05-25T23:53:27Z,OPEN,False,8,8,2,https://github.com/ajamshed,DelEntry() fix in WildcardMatch module.,1,[],https://github.com/NetSys/bess/pull/983,https://github.com/ajamshed,1,https://github.com/NetSys/bess/pull/983,"This small patch fixes DelEntry routine that is invoked by
CommandDelete() function. Hashtable's Remove function returns
false on failure. The conditional expression that captures this
event is incorrect (if condition in line 306 fails). This patch
uses boolean variables to fix this issue.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com","This small patch fixes DelEntry routine that is invoked by
CommandDelete() function. Hashtable's Remove function returns
false on failure. The conditional expression that captures this
event is incorrect (if condition in line 306 fails). This patch
uses boolean variables to fix this issue.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,983,2020-05-24T10:08:34Z,,2020-05-25T23:53:27Z,OPEN,False,8,8,2,https://github.com/ajamshed,DelEntry() fix in WildcardMatch module.,1,[],https://github.com/NetSys/bess/pull/983,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/983#issuecomment-633209935,"This small patch fixes DelEntry routine that is invoked by
CommandDelete() function. Hashtable's Remove function returns
false on failure. The conditional expression that captures this
event is incorrect (if condition in line 306 fails). This patch
uses boolean variables to fix this issue.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com","Codecov Report

Merging #983 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #983   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6786d37...04975b4. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,984,2020-05-25T06:17:42Z,2020-06-06T22:57:44Z,2020-06-06T23:11:49Z,MERGED,True,32,8,5,https://github.com/ajamshed,Add metadata with attribute to the Timestamp module.,1,[],https://github.com/NetSys/bess/pull/984,https://github.com/ajamshed,1,https://github.com/NetSys/bess/pull/984,"This patch is useful when Timestamp and Measure modules are used
in tandem. In current version, the default location to store the
metadata in Timestamp module is at Eth/IP4/Udp offset. This may
lead to bugs if the pipeline uses encap/decap operations (header
sizes are changed, and timestamp value can get corrupted).
We propose using attribute option to store timestamp value as
default. Refer to #975 for background.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","This patch is useful when Timestamp and Measure modules are used
in tandem. In current version, the default location to store the
metadata in Timestamp module is at Eth/IP4/Udp offset. This may
lead to bugs if the pipeline uses encap/decap operations (header
sizes are changed, and timestamp value can get corrupted).
We propose using attribute option to store timestamp value as
default. Refer to #975 for background.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,984,2020-05-25T06:17:42Z,2020-06-06T22:57:44Z,2020-06-06T23:11:49Z,MERGED,True,32,8,5,https://github.com/ajamshed,Add metadata with attribute to the Timestamp module.,1,[],https://github.com/NetSys/bess/pull/984,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/984#issuecomment-640126452,"This patch is useful when Timestamp and Measure modules are used
in tandem. In current version, the default location to store the
metadata in Timestamp module is at Eth/IP4/Udp offset. This may
lead to bugs if the pipeline uses encap/decap operations (header
sizes are changed, and timestamp value can get corrupted).
We propose using attribute option to store timestamp value as
default. Refer to #975 for background.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","Codecov Report

Merging #984 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #984   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6786d37...a49108d. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,984,2020-05-25T06:17:42Z,2020-06-06T22:57:44Z,2020-06-06T23:11:49Z,MERGED,True,32,8,5,https://github.com/ajamshed,Add metadata with attribute to the Timestamp module.,1,[],https://github.com/NetSys/bess/pull/984,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/984#issuecomment-640130224,"This patch is useful when Timestamp and Measure modules are used
in tandem. In current version, the default location to store the
metadata in Timestamp module is at Eth/IP4/Udp offset. This may
lead to bugs if the pipeline uses encap/decap operations (header
sizes are changed, and timestamp value can get corrupted).
We propose using attribute option to store timestamp value as
default. Refer to #975 for background.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",,True,{}
NetSys/bess,https://github.com/NetSys/bess,985,2020-05-27T12:22:50Z,2020-06-15T22:56:36Z,2020-06-15T22:58:00Z,MERGED,True,3,1,1,https://github.com/ajamshed,Make `interval' argument optional as documented.,1,[],https://github.com/NetSys/bess/pull/985,https://github.com/ajamshed,1,https://github.com/NetSys/bess/pull/985,"The wiki page (https://github.com/NetSys/bess/wiki/Built-In-Modules-and-Ports)
mentions that the argument is optional. However the module fails to get
instantiated without adding this argument. This patch fixes this.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","The wiki page (https://github.com/NetSys/bess/wiki/Built-In-Modules-and-Ports)
mentions that the argument is optional. However the module fails to get
instantiated without adding this argument. This patch fixes this.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,985,2020-05-27T12:22:50Z,2020-06-15T22:56:36Z,2020-06-15T22:58:00Z,MERGED,True,3,1,1,https://github.com/ajamshed,Make `interval' argument optional as documented.,1,[],https://github.com/NetSys/bess/pull/985,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/985#issuecomment-635618077,"The wiki page (https://github.com/NetSys/bess/wiki/Built-In-Modules-and-Ports)
mentions that the argument is optional. However the module fails to get
instantiated without adding this argument. This patch fixes this.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","Codecov Report

Merging #985 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #985   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 6786d37...28feeb2. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,985,2020-05-27T12:22:50Z,2020-06-15T22:56:36Z,2020-06-15T22:58:00Z,MERGED,True,3,1,1,https://github.com/ajamshed,Make `interval' argument optional as documented.,1,[],https://github.com/NetSys/bess/pull/985,https://github.com/chris3torek,3,https://github.com/NetSys/bess/pull/985#issuecomment-644432061,"The wiki page (https://github.com/NetSys/bess/wiki/Built-In-Modules-and-Ports)
mentions that the argument is optional. However the module fails to get
instantiated without adding this argument. This patch fixes this.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",,True,{}
NetSys/bess,https://github.com/NetSys/bess,986,2020-05-28T21:19:24Z,,2020-08-13T17:21:47Z,OPEN,False,5,1,1,https://github.com/ajamshed,Fix: Bypass l4/ip4 csum compute/validate for !tcp/!udp,1,[],https://github.com/NetSys/bess/pull/986,https://github.com/ajamshed,1,https://github.com/NetSys/bess/pull/986,"This patch ensures that ping messages goes through the dataplane pipeline which includes verify checksum module.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com
Signed-off-by: Hyunsun Moon hyunsun@opennetworking.org","This patch ensures that ping messages goes through the dataplane pipeline which includes verify checksum module.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com
Signed-off-by: Hyunsun Moon hyunsun@opennetworking.org",True,{}
NetSys/bess,https://github.com/NetSys/bess,986,2020-05-28T21:19:24Z,,2020-08-13T17:21:47Z,OPEN,False,5,1,1,https://github.com/ajamshed,Fix: Bypass l4/ip4 csum compute/validate for !tcp/!udp,1,[],https://github.com/NetSys/bess/pull/986,https://github.com/chris3torek,2,https://github.com/NetSys/bess/pull/986#issuecomment-673604479,"This patch ensures that ping messages goes through the dataplane pipeline which includes verify checksum module.
Signed-off-by: Muhammad Asim Jamshed muhammad.jamshed@intel.com
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com
Signed-off-by: Hyunsun Moon hyunsun@opennetworking.org",Just a note: I'm in the middle of moving to Washington (state) and won't be able to look at this for a while yet.,True,{}
NetSys/bess,https://github.com/NetSys/bess,994,2020-06-18T21:09:46Z,2020-06-24T06:12:42Z,2020-06-24T06:13:47Z,MERGED,True,4,4,4,https://github.com/krsna1729,Update DPDK version to 19.11.3,1,[],https://github.com/NetSys/bess/pull/994,https://github.com/krsna1729,1,https://github.com/NetSys/bess/pull/994,"This release has vfio related fixes necessary to run unprivileged
Fixes: #989","This release has vfio related fixes necessary to run unprivileged
Fixes: #989",True,{}
NetSys/bess,https://github.com/NetSys/bess,994,2020-06-18T21:09:46Z,2020-06-24T06:12:42Z,2020-06-24T06:13:47Z,MERGED,True,4,4,4,https://github.com/krsna1729,Update DPDK version to 19.11.3,1,[],https://github.com/NetSys/bess/pull/994,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/994#issuecomment-646329537,"This release has vfio related fixes necessary to run unprivileged
Fixes: #989","Codecov Report

Merging #994 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #994   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c648ea8...ce06d18. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,994,2020-06-18T21:09:46Z,2020-06-24T06:12:42Z,2020-06-24T06:13:47Z,MERGED,True,4,4,4,https://github.com/krsna1729,Update DPDK version to 19.11.3,1,[],https://github.com/NetSys/bess/pull/994,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/994#issuecomment-648613913,"This release has vfio related fixes necessary to run unprivileged
Fixes: #989","Merged, thanks!",True,{'LAUGH': ['https://github.com/krsna1729']}
NetSys/bess,https://github.com/NetSys/bess,996,2020-06-24T06:03:04Z,2020-07-28T21:56:53Z,2020-07-28T21:59:12Z,MERGED,True,16,14,4,https://github.com/sangjinhan,Fix Python 3.7/3.8 incompatibility,1,[],https://github.com/NetSys/bess/pull/996,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/996,"This patch fixes miscellaneous compatibility issues of bessctl and its sample scripts for Python 3.7 & Python 3.8.
See #917.","This patch fixes miscellaneous compatibility issues of bessctl and its sample scripts for Python 3.7 & Python 3.8.
See #917.",True,"{'HOORAY': ['https://github.com/krsna1729'], 'EYES': ['https://github.com/krsna1729']}"
NetSys/bess,https://github.com/NetSys/bess,996,2020-06-24T06:03:04Z,2020-07-28T21:56:53Z,2020-07-28T21:59:12Z,MERGED,True,16,14,4,https://github.com/sangjinhan,Fix Python 3.7/3.8 incompatibility,1,[],https://github.com/NetSys/bess/pull/996,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/996#issuecomment-648616633,"This patch fixes miscellaneous compatibility issues of bessctl and its sample scripts for Python 3.7 & Python 3.8.
See #917.","Codecov Report

Merging #996 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #996   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c648ea8...6a8a597. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,996,2020-06-24T06:03:04Z,2020-07-28T21:56:53Z,2020-07-28T21:59:12Z,MERGED,True,16,14,4,https://github.com/sangjinhan,Fix Python 3.7/3.8 incompatibility,1,[],https://github.com/NetSys/bess/pull/996,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/996#issuecomment-665305097,"This patch fixes miscellaneous compatibility issues of bessctl and its sample scripts for Python 3.7 & Python 3.8.
See #917.",,True,{}
NetSys/bess,https://github.com/NetSys/bess,997,2020-06-24T06:08:22Z,2020-06-26T21:56:20Z,2020-06-26T21:56:26Z,MERGED,True,1,1,1,https://github.com/sangjinhan,use realpath() to get the dir of bessctl,1,[],https://github.com/NetSys/bess/pull/997,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/997,"Use of abspath() breaks ""bessctl run"" command, which depends on the current directory of bessctl script. This PR partially rollbacks #952.","Use of abspath() breaks ""bessctl run"" command, which depends on the current directory of bessctl script. This PR partially rollbacks #952.",True,{}
NetSys/bess,https://github.com/NetSys/bess,997,2020-06-24T06:08:22Z,2020-06-26T21:56:20Z,2020-06-26T21:56:26Z,MERGED,True,1,1,1,https://github.com/sangjinhan,use realpath() to get the dir of bessctl,1,[],https://github.com/NetSys/bess/pull/997,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/997#issuecomment-649152727,"Use of abspath() breaks ""bessctl run"" command, which depends on the current directory of bessctl script. This PR partially rollbacks #952.","Codecov Report

Merging #997 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #997   +/-   ##
=======================================
  Coverage   55.53%   55.53%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          647      647           
  Misses        518      518           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c648ea8...c6c85a8. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,998,2020-06-25T05:27:09Z,2020-08-27T18:29:47Z,2020-08-27T18:29:51Z,MERGED,True,8,2,3,https://github.com/sangjinhan,add requirements.txt for pip & virtualenv,1,[],https://github.com/NetSys/bess/pull/998,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/998,,,True,{}
NetSys/bess,https://github.com/NetSys/bess,999,2020-06-25T08:04:05Z,2020-06-26T21:47:53Z,2020-06-26T21:47:58Z,MERGED,True,15,17,3,https://github.com/sangjinhan,Relax naming restrictions in bessctl commands,2,[],https://github.com/NetSys/bess/pull/999,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/999,"Currently, in bessctl, names of modules, traffic classes, etc. have to
be compliant to Python identifier: [_a-zA-Z][_a-zA-Z0-9]*
This design was due to the plan for tight integration (one to one
mapping) between Python variable names and BESS module names, but this
has never been implemented.
Instead, this commit eliminates the naming restrictions in bessctl
commands. For example, now module names can be specified as a number,
URL, unicode string, etc. Whitespaces are still not allowed (this is
partly because of a parsing issue; bessctl commands do not support
escape characters at the moment), but it may change in the future.
Note that there still are limitations regarding names defined in bessctl
script with ""syntax sugar"", e.g., foo::Bar(), where foo must be a
legal Python variable name.","Currently, in bessctl, names of modules, traffic classes, etc. have to
be compliant to Python identifier: [_a-zA-Z][_a-zA-Z0-9]*
This design was due to the plan for tight integration (one to one
mapping) between Python variable names and BESS module names, but this
has never been implemented.
Instead, this commit eliminates the naming restrictions in bessctl
commands. For example, now module names can be specified as a number,
URL, unicode string, etc. Whitespaces are still not allowed (this is
partly because of a parsing issue; bessctl commands do not support
escape characters at the moment), but it may change in the future.
Note that there still are limitations regarding names defined in bessctl
script with ""syntax sugar"", e.g., foo::Bar(), where foo must be a
legal Python variable name.",True,{}
NetSys/bess,https://github.com/NetSys/bess,999,2020-06-25T08:04:05Z,2020-06-26T21:47:53Z,2020-06-26T21:47:58Z,MERGED,True,15,17,3,https://github.com/sangjinhan,Relax naming restrictions in bessctl commands,2,[],https://github.com/NetSys/bess/pull/999,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/999#issuecomment-649360171,"Currently, in bessctl, names of modules, traffic classes, etc. have to
be compliant to Python identifier: [_a-zA-Z][_a-zA-Z0-9]*
This design was due to the plan for tight integration (one to one
mapping) between Python variable names and BESS module names, but this
has never been implemented.
Instead, this commit eliminates the naming restrictions in bessctl
commands. For example, now module names can be specified as a number,
URL, unicode string, etc. Whitespaces are still not allowed (this is
partly because of a parsing issue; bessctl commands do not support
escape characters at the moment), but it may change in the future.
Note that there still are limitations regarding names defined in bessctl
script with ""syntax sugar"", e.g., foo::Bar(), where foo must be a
legal Python variable name.","Codecov Report

Merging #999 into master will increase coverage by 0.42%.
The diff coverage is 100.00%.


@@            Coverage Diff             @@
##           master     #999      +/-   ##
==========================================
+ Coverage   55.53%   55.96%   +0.42%     
==========================================
  Files           9        9              
  Lines        1165     1165              
==========================================
+ Hits          647      652       +5     
+ Misses        518      513       -5     



Impacted Files
Coverage Δ





bessctl/test_sugar.py
97.05% <ø> (ø)



bessctl/sugar.py
95.38% <100.00%> (+3.84%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c648ea8...1bfe710. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1000,2020-06-26T19:24:56Z,2020-06-27T03:25:46Z,2020-06-27T03:25:50Z,MERGED,True,21,0,2,https://github.com/shinae-woo,BPF: commands for removing a BPF rule,1,[],https://github.com/NetSys/bess/pull/1000,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/1000,Add delete command taking the same input as add,Add delete command taking the same input as add,True,{}
NetSys/bess,https://github.com/NetSys/bess,1000,2020-06-26T19:24:56Z,2020-06-27T03:25:46Z,2020-06-27T03:25:50Z,MERGED,True,21,0,2,https://github.com/shinae-woo,BPF: commands for removing a BPF rule,1,[],https://github.com/NetSys/bess/pull/1000,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/1000#issuecomment-650363987,Add delete command taking the same input as add,"Codecov Report

Merging #1000 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #1000   +/-   ##
=======================================
  Coverage   55.96%   55.96%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          652      652           
  Misses        513      513           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update bd438ce...14c532f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1006,2020-07-25T01:21:44Z,2020-07-28T02:24:34Z,2020-07-28T02:25:04Z,MERGED,True,7,0,1,https://github.com/shinae-woo,Do not send log to stdio when run as daemon,1,[],https://github.com/NetSys/bess/pull/1006,https://github.com/shinae-woo,1,https://github.com/NetSys/bess/pull/1006,The combination of running BESS as a daemon and forward the log to stderr break the process.,The combination of running BESS as a daemon and forward the log to stderr break the process.,True,{}
NetSys/bess,https://github.com/NetSys/bess,1006,2020-07-25T01:21:44Z,2020-07-28T02:24:34Z,2020-07-28T02:25:04Z,MERGED,True,7,0,1,https://github.com/shinae-woo,Do not send log to stdio when run as daemon,1,[],https://github.com/NetSys/bess/pull/1006,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/1006#issuecomment-663791589,The combination of running BESS as a daemon and forward the log to stderr break the process.,"Codecov Report

Merging #1006 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #1006   +/-   ##
=======================================
  Coverage   55.96%   55.96%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          652      652           
  Misses        513      513           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5250185...d8c8444. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1006,2020-07-25T01:21:44Z,2020-07-28T02:24:34Z,2020-07-28T02:25:04Z,MERGED,True,7,0,1,https://github.com/shinae-woo,Do not send log to stdio when run as daemon,1,[],https://github.com/NetSys/bess/pull/1006,https://github.com/sangjinhan,3,https://github.com/NetSys/bess/pull/1006#issuecomment-664737983,The combination of running BESS as a daemon and forward the log to stderr break the process.,"Merged, thanks",True,{}
NetSys/bess,https://github.com/NetSys/bess,1007,2020-07-28T02:27:33Z,,2020-08-27T18:34:40Z,OPEN,False,317,242,11,https://github.com/sangjinhan,Add per-queue stats to bessctl,9,[],https://github.com/NetSys/bess/pull/1007,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/1007,"... w/ some code polishing around it. From bessctl:

show port command now shows counters for each queue, rather than aggregated ones only.
a new command monitor queue has been added.","... w/ some code polishing around it. From bessctl:

show port command now shows counters for each queue, rather than aggregated ones only.
a new command monitor queue has been added.",True,{'THUMBS_UP': ['https://github.com/shinae-woo']}
NetSys/bess,https://github.com/NetSys/bess,1007,2020-07-28T02:27:33Z,,2020-08-27T18:34:40Z,OPEN,False,317,242,11,https://github.com/sangjinhan,Add per-queue stats to bessctl,9,[],https://github.com/NetSys/bess/pull/1007,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/1007#issuecomment-664749536,"... w/ some code polishing around it. From bessctl:

show port command now shows counters for each queue, rather than aggregated ones only.
a new command monitor queue has been added.","Codecov Report

Merging #1007 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #1007   +/-   ##
=======================================
  Coverage   55.96%   55.96%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          652      652           
  Misses        513      513           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5250185...22c9c09. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1009,2020-08-01T06:11:30Z,2020-08-13T17:52:27Z,2020-08-13T18:25:49Z,MERGED,True,4,0,1,https://github.com/wjuni,Fix compilation issue on Ubuntu 20.04,1,[],https://github.com/NetSys/bess/pull/1009,https://github.com/wjuni,1,https://github.com/NetSys/bess/pull/1009,"Ubuntu 20.04 ships with a recent kernel >= 5.4 by default.
Unfortunately, BESS fails to compile on the system, due to the fallthrough pseudo keyword added on recent versions of the kernel.
torvalds/linux@294f69e shows the change on the kernel, which is applied since kernel >= 5.4.
For the successful compilation on Ubuntu 20.04, it seems that core/kmod/llring.h should use __attribute__((__fallthrough__))  instead of __attribute__((fallthrough)) as a definition of FALLTHROUGH, along with removing fPIC options as suggested by shinae-woo/bess@e39efb7.","Ubuntu 20.04 ships with a recent kernel >= 5.4 by default.
Unfortunately, BESS fails to compile on the system, due to the fallthrough pseudo keyword added on recent versions of the kernel.
torvalds/linux@294f69e shows the change on the kernel, which is applied since kernel >= 5.4.
For the successful compilation on Ubuntu 20.04, it seems that core/kmod/llring.h should use __attribute__((__fallthrough__))  instead of __attribute__((fallthrough)) as a definition of FALLTHROUGH, along with removing fPIC options as suggested by shinae-woo/bess@e39efb7.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1009,2020-08-01T06:11:30Z,2020-08-13T17:52:27Z,2020-08-13T18:25:49Z,MERGED,True,4,0,1,https://github.com/wjuni,Fix compilation issue on Ubuntu 20.04,1,[],https://github.com/NetSys/bess/pull/1009,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/1009#issuecomment-668768581,"Ubuntu 20.04 ships with a recent kernel >= 5.4 by default.
Unfortunately, BESS fails to compile on the system, due to the fallthrough pseudo keyword added on recent versions of the kernel.
torvalds/linux@294f69e shows the change on the kernel, which is applied since kernel >= 5.4.
For the successful compilation on Ubuntu 20.04, it seems that core/kmod/llring.h should use __attribute__((__fallthrough__))  instead of __attribute__((fallthrough)) as a definition of FALLTHROUGH, along with removing fPIC options as suggested by shinae-woo/bess@e39efb7.","Codecov Report

Merging #1009 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #1009   +/-   ##
=======================================
  Coverage   55.96%   55.96%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          652      652           
  Misses        513      513           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update f99bff5...69820e9. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1009,2020-08-01T06:11:30Z,2020-08-13T17:52:27Z,2020-08-13T18:25:49Z,MERGED,True,4,0,1,https://github.com/wjuni,Fix compilation issue on Ubuntu 20.04,1,[],https://github.com/NetSys/bess/pull/1009,https://github.com/shinae-woo,3,https://github.com/NetSys/bess/pull/1009#issuecomment-673601292,"Ubuntu 20.04 ships with a recent kernel >= 5.4 by default.
Unfortunately, BESS fails to compile on the system, due to the fallthrough pseudo keyword added on recent versions of the kernel.
torvalds/linux@294f69e shows the change on the kernel, which is applied since kernel >= 5.4.
For the successful compilation on Ubuntu 20.04, it seems that core/kmod/llring.h should use __attribute__((__fallthrough__))  instead of __attribute__((fallthrough)) as a definition of FALLTHROUGH, along with removing fPIC options as suggested by shinae-woo/bess@e39efb7.","Hi @wjuni, thank you for your fix. Could you please rebase your PR again so that it only has a single commit 68e7edf?",True,{}
NetSys/bess,https://github.com/NetSys/bess,1009,2020-08-01T06:11:30Z,2020-08-13T17:52:27Z,2020-08-13T18:25:49Z,MERGED,True,4,0,1,https://github.com/wjuni,Fix compilation issue on Ubuntu 20.04,1,[],https://github.com/NetSys/bess/pull/1009,https://github.com/melvinw,4,https://github.com/NetSys/bess/pull/1009#issuecomment-673622417,"Ubuntu 20.04 ships with a recent kernel >= 5.4 by default.
Unfortunately, BESS fails to compile on the system, due to the fallthrough pseudo keyword added on recent versions of the kernel.
torvalds/linux@294f69e shows the change on the kernel, which is applied since kernel >= 5.4.
For the successful compilation on Ubuntu 20.04, it seems that core/kmod/llring.h should use __attribute__((__fallthrough__))  instead of __attribute__((fallthrough)) as a definition of FALLTHROUGH, along with removing fPIC options as suggested by shinae-woo/bess@e39efb7.",Thanks!,True,{}
NetSys/bess,https://github.com/NetSys/bess,1009,2020-08-01T06:11:30Z,2020-08-13T17:52:27Z,2020-08-13T18:25:49Z,MERGED,True,4,0,1,https://github.com/wjuni,Fix compilation issue on Ubuntu 20.04,1,[],https://github.com/NetSys/bess/pull/1009,https://github.com/justinemarie,5,https://github.com/NetSys/bess/pull/1009#issuecomment-673638427,"Ubuntu 20.04 ships with a recent kernel >= 5.4 by default.
Unfortunately, BESS fails to compile on the system, due to the fallthrough pseudo keyword added on recent versions of the kernel.
torvalds/linux@294f69e shows the change on the kernel, which is applied since kernel >= 5.4.
For the successful compilation on Ubuntu 20.04, it seems that core/kmod/llring.h should use __attribute__((__fallthrough__))  instead of __attribute__((fallthrough)) as a definition of FALLTHROUGH, along with removing fPIC options as suggested by shinae-woo/bess@e39efb7.","This is an exceptionally good cat.
On Thu, Aug 13, 2020 at 1:53 PM Melvin Walls ***@***.***> wrote:
 Merged #1009 <#1009> into master.

 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub
 <#1009 (comment)>, or
 unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AAATUFXX7ITVUQCPQGEWDC3SAQSCJANCNFSM4PRO5Z3Q>
 .

-- 
(Sent from my rotary phone.)",True,{'THUMBS_UP': ['https://github.com/sarsanaee']}
NetSys/bess,https://github.com/NetSys/bess,1010,2020-08-11T09:12:59Z,2020-08-12T22:58:38Z,2020-08-13T06:35:24Z,MERGED,True,1,1,1,https://github.com/levaitamas,Fix missing column header in 'monitor tc' csv output,1,[],https://github.com/NetSys/bess/pull/1010,https://github.com/levaitamas,1,https://github.com/NetSys/bess/pull/1010,"I have just started to use the CSV output of monitor tc. That is a really cool feature, thanks!
Unfortunately, the headers are skewed due to a missing TC column header.
The PR fixes this issue.

Demo:
$ CSV=/tmp/bess.csv ./bessctl run samples/update -- monitor tc

Before:
csv file
Timestamp,CPU MHz,scheduled,Mpps,Mbps,pkts/sched,cycles/p
08:50:57,W0 !leaf_source0:0,2400.050,2491609.000,79.732,53579.580,32.000,30.102
08:50:58,W0 !leaf_source0:0,2400.048,2490410.000,79.693,53553.796,32.000,30.116

as org table
| Timestamp | CPU MHz            | scheduled |        Mpps |   Mbps | pkts/sched | cycles/p |        |
|  08:50:57 | W0 !leaf_source0:0 |  2400.050 | 2491609.000 | 79.732 |  53579.580 |   32.000 | 30.102 |
|  08:50:58 | W0 !leaf_source0:0 |  2400.048 | 2490410.000 | 79.693 |  53553.796 |   32.000 | 30.116 |

After:
Timestamp,traffic class,CPU MHz,scheduled,Mpps,Mbps,pkts/sched,cycles/p
08:51:41,W0 !leaf_source0:0,2400.064,2491320.000,79.722,53573.349,32.000,30.105
08:51:42,W0 !leaf_source0:0,2400.049,2493994.000,79.808,53630.849,32.000,30.073

| Timestamp | traffic class      |  CPU MHz |   scheduled |   Mpps |      Mbps | pkts/sched | cycles/p |
|  08:51:41 | W0 !leaf_source0:0 | 2400.064 | 2491320.000 | 79.722 | 53573.349 |     32.000 |   30.105 |
|  08:51:42 | W0 !leaf_source0:0 | 2400.049 | 2493994.000 | 79.808 | 53630.849 |     32.000 |   30.073 |","I have just started to use the CSV output of monitor tc. That is a really cool feature, thanks!
Unfortunately, the headers are skewed due to a missing TC column header.
The PR fixes this issue.

Demo:
$ CSV=/tmp/bess.csv ./bessctl run samples/update -- monitor tc

Before:
csv file
Timestamp,CPU MHz,scheduled,Mpps,Mbps,pkts/sched,cycles/p
08:50:57,W0 !leaf_source0:0,2400.050,2491609.000,79.732,53579.580,32.000,30.102
08:50:58,W0 !leaf_source0:0,2400.048,2490410.000,79.693,53553.796,32.000,30.116

as org table
| Timestamp | CPU MHz            | scheduled |        Mpps |   Mbps | pkts/sched | cycles/p |        |
|  08:50:57 | W0 !leaf_source0:0 |  2400.050 | 2491609.000 | 79.732 |  53579.580 |   32.000 | 30.102 |
|  08:50:58 | W0 !leaf_source0:0 |  2400.048 | 2490410.000 | 79.693 |  53553.796 |   32.000 | 30.116 |

After:
Timestamp,traffic class,CPU MHz,scheduled,Mpps,Mbps,pkts/sched,cycles/p
08:51:41,W0 !leaf_source0:0,2400.064,2491320.000,79.722,53573.349,32.000,30.105
08:51:42,W0 !leaf_source0:0,2400.049,2493994.000,79.808,53630.849,32.000,30.073

| Timestamp | traffic class      |  CPU MHz |   scheduled |   Mpps |      Mbps | pkts/sched | cycles/p |
|  08:51:41 | W0 !leaf_source0:0 | 2400.064 | 2491320.000 | 79.722 | 53573.349 |     32.000 |   30.105 |
|  08:51:42 | W0 !leaf_source0:0 | 2400.049 | 2493994.000 | 79.808 | 53630.849 |     32.000 |   30.073 |",True,{}
NetSys/bess,https://github.com/NetSys/bess,1010,2020-08-11T09:12:59Z,2020-08-12T22:58:38Z,2020-08-13T06:35:24Z,MERGED,True,1,1,1,https://github.com/levaitamas,Fix missing column header in 'monitor tc' csv output,1,[],https://github.com/NetSys/bess/pull/1010,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/1010#issuecomment-671839022,"I have just started to use the CSV output of monitor tc. That is a really cool feature, thanks!
Unfortunately, the headers are skewed due to a missing TC column header.
The PR fixes this issue.

Demo:
$ CSV=/tmp/bess.csv ./bessctl run samples/update -- monitor tc

Before:
csv file
Timestamp,CPU MHz,scheduled,Mpps,Mbps,pkts/sched,cycles/p
08:50:57,W0 !leaf_source0:0,2400.050,2491609.000,79.732,53579.580,32.000,30.102
08:50:58,W0 !leaf_source0:0,2400.048,2490410.000,79.693,53553.796,32.000,30.116

as org table
| Timestamp | CPU MHz            | scheduled |        Mpps |   Mbps | pkts/sched | cycles/p |        |
|  08:50:57 | W0 !leaf_source0:0 |  2400.050 | 2491609.000 | 79.732 |  53579.580 |   32.000 | 30.102 |
|  08:50:58 | W0 !leaf_source0:0 |  2400.048 | 2490410.000 | 79.693 |  53553.796 |   32.000 | 30.116 |

After:
Timestamp,traffic class,CPU MHz,scheduled,Mpps,Mbps,pkts/sched,cycles/p
08:51:41,W0 !leaf_source0:0,2400.064,2491320.000,79.722,53573.349,32.000,30.105
08:51:42,W0 !leaf_source0:0,2400.049,2493994.000,79.808,53630.849,32.000,30.073

| Timestamp | traffic class      |  CPU MHz |   scheduled |   Mpps |      Mbps | pkts/sched | cycles/p |
|  08:51:41 | W0 !leaf_source0:0 | 2400.064 | 2491320.000 | 79.722 | 53573.349 |     32.000 |   30.105 |
|  08:51:42 | W0 !leaf_source0:0 | 2400.049 | 2493994.000 | 79.808 | 53630.849 |     32.000 |   30.073 |","Codecov Report

Merging #1010 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #1010   +/-   ##
=======================================
  Coverage   55.96%   55.96%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          652      652           
  Misses        513      513           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update c5bba2f...0a5b574. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1012,2020-08-13T00:18:35Z,,2020-08-14T16:46:38Z,OPEN,False,346,210,45,https://github.com/melvinw,bessctl: add init/cmd argument introspection,2,[],https://github.com/NetSys/bess/pull/1012,https://github.com/melvinw,1,https://github.com/NetSys/bess/pull/1012,"This has been useful for a project I've been working on. Might be worth including a version upstream.
This change is backwards compatible with modules that elect to keep exposing their argument/init types as strings","This has been useful for a project I've been working on. Might be worth including a version upstream.
This change is backwards compatible with modules that elect to keep exposing their argument/init types as strings",True,{}
NetSys/bess,https://github.com/NetSys/bess,1012,2020-08-13T00:18:35Z,,2020-08-14T16:46:38Z,OPEN,False,346,210,45,https://github.com/melvinw,bessctl: add init/cmd argument introspection,2,[],https://github.com/NetSys/bess/pull/1012,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/1012#issuecomment-673182360,"This has been useful for a project I've been working on. Might be worth including a version upstream.
This change is backwards compatible with modules that elect to keep exposing their argument/init types as strings","Codecov Report

Merging #1012 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #1012   +/-   ##
=======================================
  Coverage   55.96%   55.96%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          652      652           
  Misses        513      513           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 5250185...af1b6fd. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1013,2020-08-26T04:54:23Z,2020-08-27T18:28:38Z,2020-08-27T18:28:42Z,MERGED,True,10,5,1,https://github.com/sangjinhan,"Do not leave PMD interface ""stopped""",1,[],https://github.com/NetSys/bess/pull/1013,https://github.com/sangjinhan,1,https://github.com/NetSys/bess/pull/1013,"If updating MTU or MAC address fails, the interface ends up remaining in""stopped"" mode in the current code. Instead we must call rte_eth_dev_start() before returning to recover from failure.","If updating MTU or MAC address fails, the interface ends up remaining in""stopped"" mode in the current code. Instead we must call rte_eth_dev_start() before returning to recover from failure.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1013,2020-08-26T04:54:23Z,2020-08-27T18:28:38Z,2020-08-27T18:28:42Z,MERGED,True,10,5,1,https://github.com/sangjinhan,"Do not leave PMD interface ""stopped""",1,[],https://github.com/NetSys/bess/pull/1013,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/1013#issuecomment-680647979,"If updating MTU or MAC address fails, the interface ends up remaining in""stopped"" mode in the current code. Instead we must call rte_eth_dev_start() before returning to recover from failure.","Codecov Report

Merging #1013 into master will decrease coverage by 0.08%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master    #1013      +/-   ##
==========================================
- Coverage   55.96%   55.87%   -0.09%     
==========================================
  Files           9        9              
  Lines        1165     1165              
==========================================
- Hits          652      651       -1     
- Misses        513      514       +1     



Impacted Files
Coverage Δ





pybess/bess.py
39.83% <0.00%> (-0.21%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ab8773c...c1e23b1. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1014,2020-08-27T17:56:09Z,,2020-08-27T18:15:53Z,OPEN,False,2,1,2,https://github.com/fshahinfar1,fix replicate first index gate issue,1,[],https://github.com/NetSys/bess/pull/1014,https://github.com/fshahinfar1,1,https://github.com/NetSys/bess/pull/1014,"when the first gate of the replicate gates array is not zero the
behavior of the code was unexpected. it was emiting packets on
gate zero instead of using the gate in the array with zero index.","when the first gate of the replicate gates array is not zero the
behavior of the code was unexpected. it was emiting packets on
gate zero instead of using the gate in the array with zero index.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1014,2020-08-27T17:56:09Z,,2020-08-27T18:15:53Z,OPEN,False,2,1,2,https://github.com/fshahinfar1,fix replicate first index gate issue,1,[],https://github.com/NetSys/bess/pull/1014,https://github.com/apps/codecov,2,https://github.com/NetSys/bess/pull/1014#issuecomment-682111172,"when the first gate of the replicate gates array is not zero the
behavior of the code was unexpected. it was emiting packets on
gate zero instead of using the gate in the array with zero index.","Codecov Report

Merging #1014 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master    #1014   +/-   ##
=======================================
  Coverage   55.96%   55.96%           
=======================================
  Files           9        9           
  Lines        1165     1165           
=======================================
  Hits          652      652           
  Misses        513      513           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update ab8773c...f1dff7f. Read the comment docs.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1015,2020-09-01T04:45:17Z,,2021-12-24T15:39:52Z,OPEN,False,22,11,1,https://github.com/adithyaphilip,Fix Mellanox PMDs Not Being Enabled,1,[],https://github.com/NetSys/bess/pull/1015,https://github.com/adithyaphilip,1,https://github.com/NetSys/bess/pull/1015,"Hi! I'm a PhD student advised by @justinemarie , and I was having trouble getting BESS to work with a Mellanox NIC. I believe I was able to rectify the issue with the changes in this PR. The fix is two-fold:

Allow the MLX4 and MLX5 PMDs to be enabled individually, we don't require both to be present.
Enable the the PMDs explicitly while configuring DPDK (DPDK disables them by default).

Tested on Ubuntu 18.04 with a ConnectX-4 Lx NIC running at 25 Gbps, using the latest MLX5 PMD (5.1-0.6.6.0).","Hi! I'm a PhD student advised by @justinemarie , and I was having trouble getting BESS to work with a Mellanox NIC. I believe I was able to rectify the issue with the changes in this PR. The fix is two-fold:

Allow the MLX4 and MLX5 PMDs to be enabled individually, we don't require both to be present.
Enable the the PMDs explicitly while configuring DPDK (DPDK disables them by default).

Tested on Ubuntu 18.04 with a ConnectX-4 Lx NIC running at 25 Gbps, using the latest MLX5 PMD (5.1-0.6.6.0).",True,"{'THUMBS_UP': ['https://github.com/fshahinfar1', 'https://github.com/tbarbette', 'https://github.com/hello0x00'], 'HEART': ['https://github.com/hello0x00']}"
NetSys/bess,https://github.com/NetSys/bess,1015,2020-09-01T04:45:17Z,,2021-12-24T15:39:52Z,OPEN,False,22,11,1,https://github.com/adithyaphilip,Fix Mellanox PMDs Not Being Enabled,1,[],https://github.com/NetSys/bess/pull/1015,https://github.com/tbarbette,2,https://github.com/NetSys/bess/pull/1015#issuecomment-757117622,"Hi! I'm a PhD student advised by @justinemarie , and I was having trouble getting BESS to work with a Mellanox NIC. I believe I was able to rectify the issue with the changes in this PR. The fix is two-fold:

Allow the MLX4 and MLX5 PMDs to be enabled individually, we don't require both to be present.
Enable the the PMDs explicitly while configuring DPDK (DPDK disables them by default).

Tested on Ubuntu 18.04 with a ConnectX-4 Lx NIC running at 25 Gbps, using the latest MLX5 PMD (5.1-0.6.6.0).","This patch was needed for me. My OFED is installed, but it would tell me it's not without this patch, because I don't have mlx4. I think with recent OFED only what you need is installed. Thanks!",True,{'HEART': ['https://github.com/adithyaphilip']}
NetSys/bess,https://github.com/NetSys/bess,1015,2020-09-01T04:45:17Z,,2021-12-24T15:39:52Z,OPEN,False,22,11,1,https://github.com/adithyaphilip,Fix Mellanox PMDs Not Being Enabled,1,[],https://github.com/NetSys/bess/pull/1015,https://github.com/hello0x00,3,https://github.com/NetSys/bess/pull/1015#issuecomment-970000901,"Hi! I'm a PhD student advised by @justinemarie , and I was having trouble getting BESS to work with a Mellanox NIC. I believe I was able to rectify the issue with the changes in this PR. The fix is two-fold:

Allow the MLX4 and MLX5 PMDs to be enabled individually, we don't require both to be present.
Enable the the PMDs explicitly while configuring DPDK (DPDK disables them by default).

Tested on Ubuntu 18.04 with a ConnectX-4 Lx NIC running at 25 Gbps, using the latest MLX5 PMD (5.1-0.6.6.0).","Thanks for your code, it is very helpful to me",True,{}
NetSys/bess,https://github.com/NetSys/bess,1015,2020-09-01T04:45:17Z,,2021-12-24T15:39:52Z,OPEN,False,22,11,1,https://github.com/adithyaphilip,Fix Mellanox PMDs Not Being Enabled,1,[],https://github.com/NetSys/bess/pull/1015,https://github.com/MrWLeo,4,https://github.com/NetSys/bess/pull/1015#issuecomment-1000814683,"Hi! I'm a PhD student advised by @justinemarie , and I was having trouble getting BESS to work with a Mellanox NIC. I believe I was able to rectify the issue with the changes in this PR. The fix is two-fold:

Allow the MLX4 and MLX5 PMDs to be enabled individually, we don't require both to be present.
Enable the the PMDs explicitly while configuring DPDK (DPDK disables them by default).

Tested on Ubuntu 18.04 with a ConnectX-4 Lx NIC running at 25 Gbps, using the latest MLX5 PMD (5.1-0.6.6.0).","Sorry to bother you. I have tried the solution but it still failed. It dropped an error : ""Cannot attach PCI device""
And the log writes:
I1224 19:56:38.874467 686 dpdk.cc:72] EAL: Driver cannot attach the device (00000000:af:00.01)
I1224 19:56:38.874562 686 dpdk.cc:72] EAL: Failed to attach device on primary process",True,{}
NetSys/bess,https://github.com/NetSys/bess,1015,2020-09-01T04:45:17Z,,2021-12-24T15:39:52Z,OPEN,False,22,11,1,https://github.com/adithyaphilip,Fix Mellanox PMDs Not Being Enabled,1,[],https://github.com/NetSys/bess/pull/1015,https://github.com/hello0x00,5,https://github.com/NetSys/bess/pull/1015#issuecomment-1000879426,"Hi! I'm a PhD student advised by @justinemarie , and I was having trouble getting BESS to work with a Mellanox NIC. I believe I was able to rectify the issue with the changes in this PR. The fix is two-fold:

Allow the MLX4 and MLX5 PMDs to be enabled individually, we don't require both to be present.
Enable the the PMDs explicitly while configuring DPDK (DPDK disables them by default).

Tested on Ubuntu 18.04 with a ConnectX-4 Lx NIC running at 25 Gbps, using the latest MLX5 PMD (5.1-0.6.6.0).","Sorry to bother you. I have tried the solution but it still failed. It dropped an error : ""Cannot attach PCI device"" And the log writes: I1224 19:56:38.874467 686 dpdk.cc:72] EAL: Driver cannot attach the device (00000000:af:00.01) I1224 19:56:38.874562 686 dpdk.cc:72] EAL: Failed to attach device on primary process

Check the NIC dmesg information to make sure that the NIC starts correctly. Upgrade bess to the latest version, used with dpdk20.11. Install the latest mlx driver  for your operating system version according to the contents of this document
http://doc.dpdk.org/guides/nics/mlx5.html",True,{}
NetSys/bess,https://github.com/NetSys/bess,1017,2020-09-24T08:20:57Z,2020-09-29T04:00:02Z,2020-09-29T04:00:02Z,MERGED,True,4,4,4,https://github.com/hyunsun,Update DPDK version to 19.11.4,1,[],https://github.com/NetSys/bess/pull/1017,https://github.com/hyunsun,1,https://github.com/NetSys/bess/pull/1017,"This release has vfio related fixes required to run on the latest
LTS kernel. Fixes #1016","This release has vfio related fixes required to run on the latest
LTS kernel. Fixes #1016",True,{}
NetSys/bess,https://github.com/NetSys/bess,1017,2020-09-24T08:20:57Z,2020-09-29T04:00:02Z,2020-09-29T04:00:02Z,MERGED,True,4,4,4,https://github.com/hyunsun,Update DPDK version to 19.11.4,1,[],https://github.com/NetSys/bess/pull/1017,https://github.com/krsna1729,2,https://github.com/NetSys/bess/pull/1017#issuecomment-698211863,"This release has vfio related fixes required to run on the latest
LTS kernel. Fixes #1016","@melvinw @shinae-woo any idea why the CI is failing?
Same behavior in the latest commit too -
https://travis-ci.org/github/NetSys/bess/jobs/721786418#L2301
This seems to be failing
pip3 install --user -r requirements.txt coverage",True,{}
NetSys/bess,https://github.com/NetSys/bess,1017,2020-09-24T08:20:57Z,2020-09-29T04:00:02Z,2020-09-29T04:00:02Z,MERGED,True,4,4,4,https://github.com/hyunsun,Update DPDK version to 19.11.4,1,[],https://github.com/NetSys/bess/pull/1017,https://github.com/hyunsun,3,https://github.com/NetSys/bess/pull/1017#issuecomment-700297867,"This release has vfio related fixes required to run on the latest
LTS kernel. Fixes #1016",Can someone help with the CI failing?,True,{}
NetSys/bess,https://github.com/NetSys/bess,1018,2020-09-24T09:14:43Z,2020-09-24T10:28:41Z,2020-09-24T10:28:49Z,CLOSED,False,1,1,1,https://github.com/krsna1729,Add python3-wheel,1,[],https://github.com/NetSys/bess/pull/1018,https://github.com/krsna1729,1,https://github.com/NetSys/bess/pull/1018,"To solve below error add dependency python3-wheel
error: invalid command 'bdist_wheel'","To solve below error add dependency python3-wheel
error: invalid command 'bdist_wheel'",True,{}
NetSys/bess,https://github.com/NetSys/bess,1021,2020-10-07T07:22:39Z,,2020-10-07T07:22:39Z,OPEN,False,3,1,1,https://github.com/kot-begemot-uk,Copy metadata when making a packet copy,1,[],https://github.com/NetSys/bess/pull/1021,https://github.com/kot-begemot-uk,1,https://github.com/NetSys/bess/pull/1021,"Copy was copying only data, losing all metadata in the process.
This resulted in very erratic behaviour of Replicate in a pipeline
which relies on metadata to identify packets.","Copy was copying only data, losing all metadata in the process.
This resulted in very erratic behaviour of Replicate in a pipeline
which relies on metadata to identify packets.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1022,2020-10-07T11:39:36Z,,2020-10-07T11:39:36Z,OPEN,False,155,26,8,https://github.com/kot-begemot-uk,Add ifIndex and RPF checks,2,[],https://github.com/NetSys/bess/pull/1022,https://github.com/kot-begemot-uk,1,https://github.com/NetSys/bess/pull/1022,"This is a basic requirement for most switching/routing algorithms.
Example - most trivial possible ""hub"" - two ports wired to a replicator and two Linux instances off them:
UnixSocketPort(name='u0', path=""/var/tmp/uml-test-0"")
UnixSocketPort(name='u1', path=""/var/tmp/uml-test-1"")
PortInc(port=""u0"") -> repl::Replicate(gates=[0,1])
PortInc(port=""u1"") -> repl
repl:0 -> PortOut(port=""u0"")
repl:1 -> PortOut(port=""u1"")
This behaves pretty badly with BESS as is because the packets sent out of port 0 are also received on port 0 and vice versa.
Adding this change and enabling it results in the correct expected behaviour and correct high throughput.
UnixSocketPort(name='u0', path=""/var/tmp/uml-test-0"")
UnixSocketPort(name='u1', path=""/var/tmp/uml-test-1"")
PortInc(port=""u0"") -> repl::Replicate(gates=[0,1])
PortInc(port=""u1"") -> repl
repl:0 -> PortOut(port=""u0"", rpfcheck=1)
repl:1 -> PortOut(port=""u1"", rpfcheck=1)
I have tried to preserve packet batching to the extent possible for packets being sent. As a result of the ""drops"" the batches may now be a bit smaller, but it will still batch.
A.","This is a basic requirement for most switching/routing algorithms.
Example - most trivial possible ""hub"" - two ports wired to a replicator and two Linux instances off them:
UnixSocketPort(name='u0', path=""/var/tmp/uml-test-0"")
UnixSocketPort(name='u1', path=""/var/tmp/uml-test-1"")
PortInc(port=""u0"") -> repl::Replicate(gates=[0,1])
PortInc(port=""u1"") -> repl
repl:0 -> PortOut(port=""u0"")
repl:1 -> PortOut(port=""u1"")
This behaves pretty badly with BESS as is because the packets sent out of port 0 are also received on port 0 and vice versa.
Adding this change and enabling it results in the correct expected behaviour and correct high throughput.
UnixSocketPort(name='u0', path=""/var/tmp/uml-test-0"")
UnixSocketPort(name='u1', path=""/var/tmp/uml-test-1"")
PortInc(port=""u0"") -> repl::Replicate(gates=[0,1])
PortInc(port=""u1"") -> repl
repl:0 -> PortOut(port=""u0"", rpfcheck=1)
repl:1 -> PortOut(port=""u1"", rpfcheck=1)
I have tried to preserve packet batching to the extent possible for packets being sent. As a result of the ""drops"" the batches may now be a bit smaller, but it will still batch.
A.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1027,2021-02-03T08:48:30Z,,2021-09-27T17:39:02Z,OPEN,False,29,87,8,https://github.com/krsna1729,Upgrade DPDK to 20.11,3,[],https://github.com/NetSys/bess/pull/1027,https://github.com/krsna1729,1,https://github.com/NetSys/bess/pull/1027,"address memseg and mbuf changes
move to meson/ninja build system

Fixes: #1026
Fixes: #987
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com","address memseg and mbuf changes
move to meson/ninja build system

Fixes: #1026
Fixes: #987
Signed-off-by: Saikrishna Edupuganti saikrishna.edupuganti@intel.com",True,{}
NetSys/bess,https://github.com/NetSys/bess,1029,2021-03-19T21:47:35Z,,2021-03-19T21:48:31Z,OPEN,False,4,2,1,https://github.com/nevelis,Emit the packet after calculating TCP checksum,1,[],https://github.com/NetSys/bess/pull/1029,https://github.com/nevelis,1,https://github.com/NetSys/bess/pull/1029,"This should be the same as the UDP checksum, otherwise calculating the TCP
checksum results in all packets being discarded.","This should be the same as the UDP checksum, otherwise calculating the TCP
checksum results in all packets being discarded.",True,{}
NetSys/bess,https://github.com/NetSys/bess,1039,2022-02-07T18:22:06Z,2022-03-08T00:29:04Z,2022-03-08T00:29:04Z,MERGED,True,1,1,1,https://github.com/natexornate,Ensure that kMaxBurst is explicitly defined,1,[],https://github.com/NetSys/bess/pull/1039,https://github.com/natexornate,1,https://github.com/NetSys/bess/pull/1039,"kMaxBurst was declared and assigned a value, but not explicitly defined. This can cause issues when linking in cases where a reference
may be taken of kMaxBurst (say, passing it to std::min()) and the constant can't be fully optimized out.
This was actually fixed years ago in #522 but ended up being reverted accidentally during a refactor in #820.
With C++17 now, we don't have to put the definition in a source file, we can just add inline and that takes care of it.","kMaxBurst was declared and assigned a value, but not explicitly defined. This can cause issues when linking in cases where a reference
may be taken of kMaxBurst (say, passing it to std::min()) and the constant can't be fully optimized out.
This was actually fixed years ago in #522 but ended up being reverted accidentally during a refactor in #820.
With C++17 now, we don't have to put the definition in a source file, we can just add inline and that takes care of it.",True,{}
