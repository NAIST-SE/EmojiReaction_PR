NEAT-project/neat,https://github.com/NEAT-project/neat,41,2016-02-22T13:19:59Z,2016-04-04T09:14:06Z,2016-04-07T09:13:19Z,MERGED,True,200,152,6,https://github.com/karlgrin,Karlgrin/he/feat,19,[],https://github.com/NEAT-project/neat/pull/41,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/41,First prototype version of Happy Eyeballs. Is it ok to merge it with master branch?,First prototype version of Happy Eyeballs. Is it ok to merge it with master branch?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,41,2016-02-22T13:19:59Z,2016-04-04T09:14:06Z,2016-04-07T09:13:19Z,MERGED,True,200,152,6,https://github.com/karlgrin,Karlgrin/he/feat,19,[],https://github.com/NEAT-project/neat/pull/41,https://github.com/karlgrin,2,https://github.com/NEAT-project/neat/pull/41#issuecomment-191689883,First prototype version of Happy Eyeballs. Is it ok to merge it with master branch?,Have implemented a first version of HE that uses libuv (no threads). Would it be possible to merge this version with the master branch?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,41,2016-02-22T13:19:59Z,2016-04-04T09:14:06Z,2016-04-07T09:13:19Z,MERGED,True,200,152,6,https://github.com/karlgrin,Karlgrin/he/feat,19,[],https://github.com/NEAT-project/neat/pull/41,https://github.com/weinrank,3,https://github.com/NEAT-project/neat/pull/41#issuecomment-191709836,First prototype version of Happy Eyeballs. Is it ok to merge it with master branch?,"Valgrind reports memory leaks, can you fix them before merging?
http://buildbot.nplab.de:28010/waterfall",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,41,2016-02-22T13:19:59Z,2016-04-04T09:14:06Z,2016-04-07T09:13:19Z,MERGED,True,200,152,6,https://github.com/karlgrin,Karlgrin/he/feat,19,[],https://github.com/NEAT-project/neat/pull/41,https://github.com/kristrev,4,https://github.com/NEAT-project/neat/pull/41#issuecomment-193473857,First prototype version of Happy Eyeballs. Is it ok to merge it with master branch?,"I have gone through the logic and even though I had some comments, but most of it is OK as a first version. However, there is one potential critical issue that should be fixed. It seems you always use the first successful connection. I guess this will in most cases make HE redundant, as the first connection to return will be v4/TCP. So that part should be redesigned a bit (see my comments in the code).
The other comment I have might be broader (and please bear in mind that I have lost a bit track of the callbacks). But I think a clearer split between server/client might be needed. For example, why do we call accept() in uvpollable_cb()? I guess a server will never do happy eyeballs (why should it?) and it looks weird to have an accept() check in a function called exclusively from a client. Maybe @tuexen can explain this better and tell me that I am completely lost.
Perhaps the easiest would be if we could all sit down tomorrow, and @karlgrin can give a quick overview of the current HE implementation and then we discuss it. Unfortunately, the most fit breakout session (topic 1) overlaps with the policy manager sessions (which I have to attend), but maybe we can find some time during the day anyway. There is the Wednesday WP2 slot, but then I guess you want to discuss the paper.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,41,2016-02-22T13:19:59Z,2016-04-04T09:14:06Z,2016-04-07T09:13:19Z,MERGED,True,200,152,6,https://github.com/karlgrin,Karlgrin/he/feat,19,[],https://github.com/NEAT-project/neat/pull/41,https://github.com/karlgrin,5,https://github.com/NEAT-project/neat/pull/41#issuecomment-205206295,First prototype version of Happy Eyeballs. Is it ok to merge it with master branch?,Merged HE after approval from Michael Tüxen.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,47,2016-04-11T09:05:56Z,2016-04-11T21:18:01Z,2016-04-25T14:16:24Z,MERGED,True,61,14,3,https://github.com/karlgrin,Issue #46 fixed. Put pack previously removed registration of poll han…,1,[],https://github.com/NEAT-project/neat/pull/47,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/47,…dler routine and modified client application.,…dler routine and modified client application.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,47,2016-04-11T09:05:56Z,2016-04-11T21:18:01Z,2016-04-25T14:16:24Z,MERGED,True,61,14,3,https://github.com/karlgrin,Issue #46 fixed. Put pack previously removed registration of poll han…,1,[],https://github.com/NEAT-project/neat/pull/47,https://github.com/karlgrin,2,https://github.com/NEAT-project/neat/pull/47#issuecomment-208242189,…dler routine and modified client application.,Tried to fix issue #46.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,47,2016-04-11T09:05:56Z,2016-04-11T21:18:01Z,2016-04-25T14:16:24Z,MERGED,True,61,14,3,https://github.com/karlgrin,Issue #46 fixed. Put pack previously removed registration of poll han…,1,[],https://github.com/NEAT-project/neat/pull/47,https://github.com/karlgrin,3,https://github.com/NEAT-project/neat/pull/47#issuecomment-208360874,…dler routine and modified client application.,Sorry for the inconvenience.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,47,2016-04-11T09:05:56Z,2016-04-11T21:18:01Z,2016-04-25T14:16:24Z,MERGED,True,61,14,3,https://github.com/karlgrin,Issue #46 fixed. Put pack previously removed registration of poll han…,1,[],https://github.com/NEAT-project/neat/pull/47,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/47#issuecomment-208565930,…dler routine and modified client application.,lgtm,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,48,2016-04-11T14:44:28Z,2016-04-19T15:13:17Z,2016-04-25T14:16:24Z,MERGED,True,29,2,3,https://github.com/karlgrin,Karlgrin/he/feat eh,3,[],https://github.com/NEAT-project/neat/pull/48,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/48,Added some rudimentary error handling for Happy Eyeballs. Maybe this will suffice until NEAT Logic etc. have been implemented.,Added some rudimentary error handling for Happy Eyeballs. Maybe this will suffice until NEAT Logic etc. have been implemented.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,49,2016-04-12T12:57:12Z,2016-04-12T12:57:15Z,2016-04-12T12:57:15Z,MERGED,True,34,2,9,https://github.com/weinrank,Adobt callback semantic from 94aec76 to all other samples,1,[],https://github.com/NEAT-project/neat/pull/49,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/49,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,50,2016-04-12T13:36:47Z,2016-04-12T14:10:06Z,2016-04-12T14:10:06Z,MERGED,True,232,29,6,https://github.com/weinrank,Add basic logging functionality,7,[],https://github.com/NEAT-project/neat/pull/50,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/50,"Introduce basic logging functionality, controllable via environment variables","Introduce basic logging functionality, controllable via environment variables",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,51,2016-04-12T13:42:19Z,2016-04-12T13:42:36Z,2016-04-27T12:57:20Z,MERGED,True,826,39,10,https://github.com/ruengeler,Add usrSCTP support,1,[],https://github.com/NEAT-project/neat/pull/51,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/51,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,51,2016-04-12T13:42:19Z,2016-04-12T13:42:36Z,2016-04-27T12:57:20Z,MERGED,True,826,39,10,https://github.com/ruengeler,Add usrSCTP support,1,[],https://github.com/NEAT-project/neat/pull/51,https://github.com/tuexen,2,https://github.com/NEAT-project/neat/pull/51#issuecomment-208972265,,Hmm. I would expect that all the neat examples just work. Without anything special related the the usrsctp stack. This should be covered completely within the neat library.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,52,2016-04-13T10:36:25Z,2016-04-13T10:40:34Z,2016-04-13T10:40:35Z,MERGED,True,323,25,8,https://github.com/kristrev,Read resolv conf,6,[],https://github.com/NEAT-project/neat/pull/52,https://github.com/kristrev,1,https://github.com/NEAT-project/neat/pull/52,"Read DNS servers from resolv.conf. Supplement with some public DNS servers. Async monitoring of resolv.conf in case interfaces are connected/disconnected.
I see build-bot failures, but they seem not to be connected to this code (rather bug in HE + Felix' no resolv error report).","Read DNS servers from resolv.conf. Supplement with some public DNS servers. Async monitoring of resolv.conf in case interfaces are connected/disconnected.
I see build-bot failures, but they seem not to be connected to this code (rather bug in HE + Felix' no resolv error report).",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,53,2016-04-13T12:38:51Z,2016-04-13T14:43:52Z,2016-04-13T14:43:52Z,MERGED,True,227,367,17,https://github.com/weinrank,Extend debug functionality,10,[],https://github.com/NEAT-project/neat/pull/53,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/53,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,54,2016-04-13T14:48:09Z,2016-04-13T14:48:14Z,2016-04-13T14:48:14Z,MERGED,True,33,0,1,https://github.com/kristrev,Bind socket to iface,5,[],https://github.com/NEAT-project/neat/pull/54,https://github.com/kristrev,1,https://github.com/NEAT-project/neat/pull/54,"We need to bind socket to address/interface in neat_connect_via_kernel(), otherwise everything is void wrt multihoming. The approach probably needs to be refined for SCTP/MPTCP, since I don't quite know how they react to explicit bind.","We need to bind socket to address/interface in neat_connect_via_kernel(), otherwise everything is void wrt multihoming. The approach probably needs to be refined for SCTP/MPTCP, since I don't quite know how they react to explicit bind.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,55,2016-04-13T16:15:56Z,2016-04-13T16:15:59Z,2016-04-28T11:51:07Z,MERGED,True,4,6,2,https://github.com/weinrank,Add debug output and revert a temporary change in neat_he,2,[],https://github.com/NEAT-project/neat/pull/55,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/55,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,56,2016-04-18T09:33:34Z,2016-04-27T12:56:46Z,2016-04-27T12:57:16Z,CLOSED,False,379,518,9,https://github.com/ruengeler,Use upcall callback for usrsctp,1,[],https://github.com/NEAT-project/neat/pull/56,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/56,Changed callback from receive/send cb to upcalls to get on_readable and on_writable.,Changed callback from receive/send cb to upcalls to get on_readable and on_writable.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,57,2016-04-18T14:46:06Z,2016-04-18T15:06:52Z,2016-04-18T15:06:52Z,MERGED,True,358,237,10,https://github.com/weinrank,samples refactoring,10,[],https://github.com/NEAT-project/neat/pull/57,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/57,@ruengeler @tuexen,@ruengeler @tuexen,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,60,2016-04-21T15:04:19Z,2016-04-21T15:04:44Z,2016-04-28T11:51:19Z,MERGED,True,414,371,16,https://github.com/weinrank,Samples refactoring,9,[],https://github.com/NEAT-project/neat/pull/60,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/60,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,61,2016-04-21T23:43:57Z,2016-04-23T08:37:29Z,2016-04-28T11:51:26Z,MERGED,True,44,54,17,https://github.com/weinrank,neat_open + neat_accept : use integer instead of string ,2,[],https://github.com/NEAT-project/neat/pull/61,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/61,neat_open + neat_accept : use integer instead of string as port/service parameter,neat_open + neat_accept : use integer instead of string as port/service parameter,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,62,2016-04-22T08:25:15Z,2016-04-25T15:17:16Z,2016-04-25T15:17:16Z,CLOSED,False,122,58,7,https://github.com/weinrank,Fix sa_len + sin_len errors for *BSD - RFC,12,[],https://github.com/NEAT-project/neat/pull/62,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/62,@tuexen ?,@tuexen ?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,62,2016-04-22T08:25:15Z,2016-04-25T15:17:16Z,2016-04-25T15:17:16Z,CLOSED,False,122,58,7,https://github.com/weinrank,Fix sa_len + sin_len errors for *BSD - RFC,12,[],https://github.com/NEAT-project/neat/pull/62,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/62#issuecomment-214281839,@tuexen ?,"push
I also added the ""-pedantic"" flag to the compiler options and fixed related compile errors.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,63,2016-04-25T12:43:30Z,2016-04-25T13:50:35Z,2016-04-25T13:50:35Z,MERGED,True,301,54,23,https://github.com/weinrank,Updated README.md and first api documentation draft,24,[],https://github.com/NEAT-project/neat/pull/63,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/63,,,True,{'THUMBS_UP': ['https://github.com/NTag']}
NEAT-project/neat,https://github.com/NEAT-project/neat,64,2016-04-25T14:14:16Z,2016-04-25T15:17:00Z,2016-05-01T10:02:42Z,MERGED,True,11,2,1,https://github.com/karlgrin,"Fixed issue #59 - SIGSEGV, segmentation fault.",1,[],https://github.com/NEAT-project/neat/pull/64,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/64,"Fixed issue #59 - ""When running neat_http_get with an unresolvable DNS name, there is an segfault error.""","Fixed issue #59 - ""When running neat_http_get with an unresolvable DNS name, there is an segfault error.""",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,65,2016-04-25T15:27:50Z,2016-04-25T15:33:08Z,2016-04-28T11:50:30Z,MERGED,True,104,45,4,https://github.com/weinrank,Set sin_len + sa_len on BSD-like systems,8,[],https://github.com/NEAT-project/neat/pull/65,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/65,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,66,2016-04-25T16:56:01Z,2016-04-25T17:05:03Z,2016-04-28T11:50:40Z,CLOSED,False,139,88,10,https://github.com/weinrank,"C-Flags: use c99 std and add ""-pedantic""",8,[],https://github.com/NEAT-project/neat/pull/66,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/66,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,66,2016-04-25T16:56:01Z,2016-04-25T17:05:03Z,2016-04-28T11:50:40Z,CLOSED,False,139,88,10,https://github.com/weinrank,"C-Flags: use c99 std and add ""-pedantic""",8,[],https://github.com/NEAT-project/neat/pull/66,https://github.com/tuexen,2,https://github.com/NEAT-project/neat/pull/66#issuecomment-214442655,,Doesn't this patch mixes the stricter compilation options with the handling of the sin_len fields?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,66,2016-04-25T16:56:01Z,2016-04-25T17:05:03Z,2016-04-28T11:50:40Z,CLOSED,False,139,88,10,https://github.com/weinrank,"C-Flags: use c99 std and add ""-pedantic""",8,[],https://github.com/NEAT-project/neat/pull/66,https://github.com/weinrank,3,https://github.com/NEAT-project/neat/pull/66#issuecomment-214443311,,"Yeah, sorry...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,67,2016-04-25T17:14:22Z,2016-04-25T21:36:32Z,2016-04-28T11:50:51Z,MERGED,True,41,49,10,https://github.com/weinrank,"C-Flags: use c99 std and add ""-pedantic""",10,[],https://github.com/NEAT-project/neat/pull/67,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/67,"@tuexen This is a ""clean"" version of the patch without the previously merged branch","@tuexen This is a ""clean"" version of the patch without the previously merged branch",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,67,2016-04-25T17:14:22Z,2016-04-25T21:36:32Z,2016-04-28T11:50:51Z,MERGED,True,41,49,10,https://github.com/weinrank,"C-Flags: use c99 std and add ""-pedantic""",10,[],https://github.com/NEAT-project/neat/pull/67,https://github.com/tuexen,2,https://github.com/NEAT-project/neat/pull/67#issuecomment-214449936,"@tuexen This is a ""clean"" version of the patch without the previously merged branch",Address the nits and merge it.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,68,2016-04-28T22:19:23Z,2016-04-28T22:19:28Z,2016-04-28T22:19:28Z,MERGED,True,7,2,2,https://github.com/weinrank,fix valgrind errors,3,[],https://github.com/NEAT-project/neat/pull/68,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/68,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,69,2016-05-02T07:52:56Z,2016-05-02T07:53:46Z,2016-06-16T15:49:26Z,MERGED,True,448,289,10,https://github.com/ruengeler,With usrsctp,7,[],https://github.com/NEAT-project/neat/pull/69,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/69,Support for usrsctp.,Support for usrsctp.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,69,2016-05-02T07:52:56Z,2016-05-02T07:53:46Z,2016-06-16T15:49:26Z,MERGED,True,448,289,10,https://github.com/ruengeler,With usrsctp,7,[],https://github.com/NEAT-project/neat/pull/69,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/69#issuecomment-216128176,Support for usrsctp.,"FYI: I changed the CMake file to not include usrsctp support by default -  c394c55
We have compile errors on netbsd and ubuntu:
http://buildbot.nplab.de:28010/builders/netbsd/builds/14/steps/compile/logs/stdio
http://buildbot.nplab.de:28010/builders/ubuntu-16.04/builds/17/steps/compile/logs/stdio",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,70,2016-05-02T08:58:02Z,2016-05-02T08:58:10Z,2016-05-02T09:29:48Z,MERGED,True,10,8,3,https://github.com/ruengeler,Fix compiler warnings and address Michael's comments,1,[],https://github.com/NEAT-project/neat/pull/70,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/70,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,71,2016-05-02T12:00:46Z,2016-05-02T12:01:05Z,2016-06-16T15:49:30Z,MERGED,True,15,15,2,https://github.com/ruengeler,Do not define IPPROTO_SCTP,1,[],https://github.com/NEAT-project/neat/pull/71,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/71,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,72,2016-05-02T13:36:11Z,2016-05-02T13:36:19Z,2016-05-02T13:36:19Z,MERGED,True,11,3,1,https://github.com/weinrank,http_client: GET URI via argument,2,[],https://github.com/NEAT-project/neat/pull/72,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/72,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,73,2016-05-02T13:55:58Z,2016-05-02T13:56:01Z,2016-06-07T11:19:16Z,MERGED,True,1,1,1,https://github.com/weinrank,fix netbsd compile error,1,[],https://github.com/NEAT-project/neat/pull/73,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/73,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,74,2016-05-02T14:35:51Z,2016-05-02T17:40:28Z,2016-06-07T11:19:06Z,MERGED,True,10,3,2,https://github.com/weinrank,fix valgrind issues for ipv6,4,[],https://github.com/NEAT-project/neat/pull/74,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/74,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,76,2016-05-03T15:46:27Z,2016-05-04T14:42:08Z,2016-05-27T06:43:57Z,CLOSED,False,61,65,5,https://github.com/karlgrin,Karlgrin/issue #58,2,[],https://github.com/NEAT-project/neat/pull/76,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/76,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,76,2016-05-03T15:46:27Z,2016-05-04T14:42:08Z,2016-05-27T06:43:57Z,CLOSED,False,61,65,5,https://github.com/karlgrin,Karlgrin/issue #58,2,[],https://github.com/NEAT-project/neat/pull/76,https://github.com/karlgrin,2,https://github.com/NEAT-project/neat/pull/76#issuecomment-216572518,,Maybe #75 is still outstanding. Need to check this more thoroughly.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,76,2016-05-03T15:46:27Z,2016-05-04T14:42:08Z,2016-05-27T06:43:57Z,CLOSED,False,61,65,5,https://github.com/karlgrin,Karlgrin/issue #58,2,[],https://github.com/NEAT-project/neat/pull/76,https://github.com/weinrank,3,https://github.com/NEAT-project/neat/pull/76#issuecomment-216572889,,"PR isn't mergeable, please resolve conflicts before merge",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,76,2016-05-03T15:46:27Z,2016-05-04T14:42:08Z,2016-05-27T06:43:57Z,CLOSED,False,61,65,5,https://github.com/karlgrin,Karlgrin/issue #58,2,[],https://github.com/NEAT-project/neat/pull/76,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/76#issuecomment-216701538,,"I tried to integrate your changes into the current master branch which caused some problems especially with use-after-free errors.
I suggest that you fix the issues in two steps within a branch of the current master to get a clean solution.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,76,2016-05-03T15:46:27Z,2016-05-04T14:42:08Z,2016-05-27T06:43:57Z,CLOSED,False,61,65,5,https://github.com/karlgrin,Karlgrin/issue #58,2,[],https://github.com/NEAT-project/neat/pull/76,https://github.com/karlgrin,5,https://github.com/NEAT-project/neat/pull/76#issuecomment-216758908,,BTW did HE between SCTP and TCP work (Issue #75)?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,76,2016-05-03T15:46:27Z,2016-05-04T14:42:08Z,2016-05-27T06:43:57Z,CLOSED,False,61,65,5,https://github.com/karlgrin,Karlgrin/issue #58,2,[],https://github.com/NEAT-project/neat/pull/76,https://github.com/weinrank,6,https://github.com/NEAT-project/neat/pull/76#issuecomment-216766516,,"Regardless of errors: Yes!
http://buildbot.nplab.de:28010/waterfall?branch=weinrank/he_fix
There you see three runs - the second one corresponds to your changes.
FreeBSD-ARM fails and also Ubuntu with IPv6 but it's better than before.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,77,2016-05-04T14:45:30Z,2016-05-26T08:10:52Z,2016-05-27T06:44:09Z,MERGED,True,62,51,4,https://github.com/karlgrin,Issue #58: New attempt to fix memory leaks due to HE.,1,[],https://github.com/NEAT-project/neat/pull/77,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/77,"Have tried to fix memory leak due to HE. Think it should work with TCP and kernel SCTP, however, usrsctp probably needs some code in function neat_socket_2().","Have tried to fix memory leak due to HE. Think it should work with TCP and kernel SCTP, however, usrsctp probably needs some code in function neat_socket_2().",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,77,2016-05-04T14:45:30Z,2016-05-26T08:10:52Z,2016-05-27T06:44:09Z,MERGED,True,62,51,4,https://github.com/karlgrin,Issue #58: New attempt to fix memory leaks due to HE.,1,[],https://github.com/NEAT-project/neat/pull/77,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/77#issuecomment-216890374,"Have tried to fix memory leak due to HE. Think it should work with TCP and kernel SCTP, however, usrsctp probably needs some code in function neat_socket_2().","No, still leaks and Failures, see Buildbots...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,77,2016-05-04T14:45:30Z,2016-05-26T08:10:52Z,2016-05-27T06:44:09Z,MERGED,True,62,51,4,https://github.com/karlgrin,Issue #58: New attempt to fix memory leaks due to HE.,1,[],https://github.com/NEAT-project/neat/pull/77,https://github.com/weinrank,3,https://github.com/NEAT-project/neat/pull/77#issuecomment-216891984,"Have tried to fix memory leak due to HE. Think it should work with TCP and kernel SCTP, however, usrsctp probably needs some code in function neat_socket_2().",http://buildbot.nplab.de:28010/waterfall?branch=karlgrin%2Fissue_%2358_2,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,77,2016-05-04T14:45:30Z,2016-05-26T08:10:52Z,2016-05-27T06:44:09Z,MERGED,True,62,51,4,https://github.com/karlgrin,Issue #58: New attempt to fix memory leaks due to HE.,1,[],https://github.com/NEAT-project/neat/pull/77,https://github.com/karlgrin,4,https://github.com/NEAT-project/neat/pull/77#issuecomment-216896655,"Have tried to fix memory leak due to HE. Think it should work with TCP and kernel SCTP, however, usrsctp probably needs some code in function neat_socket_2().","It seems that it behaves quite differently on different platforms. Maybe it would be easier if I could ge access to some of these systems so that I could run them locally. The thing is that it neat_http_get seems
to be working ok on Ubuntu 15.10 (the version used on my test machine).",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,79,2016-05-10T12:40:27Z,2016-05-10T13:54:18Z,2016-06-07T11:18:52Z,MERGED,True,232,722,19,https://github.com/weinrank,Samples refactoring,21,[],https://github.com/NEAT-project/neat/pull/79,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/79,"divide samples into examples and tests
CMAKE refactoring
samples documentation
cleanup","divide samples into examples and tests
CMAKE refactoring
samples documentation
cleanup",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,1,https://github.com/NEAT-project/neat/pull/80,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/kristrev,2,https://github.com/NEAT-project/neat/pull/80#issuecomment-220336036,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Great! I will take a look at this code tomorrow. I will not be able to test it though, but I guess you have done that ;)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/tuexen,3,https://github.com/NEAT-project/neat/pull/80#issuecomment-220337407,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Thanks. We can't use the buildbots for checking right now, since they are still red due to HE issues. I hope that this get cleared up soon.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,4,https://github.com/NEAT-project/neat/pull/80#issuecomment-220343668,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","@kristrev Yes, I build and run the examples, I did not encounter any problems, but of course this did not cover every case.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/kristrev,5,https://github.com/NEAT-project/neat/pull/80#issuecomment-220351870,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","That should not be an issue. I will focus on the integration part then.
On Thursday, 19 May 2016, Basile Bruneau notifications@github.com wrote:

@kristrev https://github.com/kristrev Yes, I build and run the
examples, I did not encounter any problems, but of course this did not
cover every case.
—
You are receiving this because you were mentioned.
Reply to this email directly or view it on GitHub
#80 (comment)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/kristrev,6,https://github.com/NEAT-project/neat/pull/80#issuecomment-220434255,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","I had a look now and the logic itself looks fine. However, the code is not asynchronous, which is a requirement for the code to be merged into NEAT. Also, I am unsure if it will compile/work on BSD, so that will have to be tested as well. I also have some comments here and there.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/weinrank,7,https://github.com/NEAT-project/neat/pull/80#issuecomment-220551444,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","The code only compiles on Linux - OSX, FreeBSD and NetBSD fail.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/tuexen,8,https://github.com/NEAT-project/neat/pull/80#issuecomment-220555097,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24",... as you can see from http://buildbot.nplab.de:28010/waterfall?branch=ntag/pvds. Please note that other test steps might be failing right now. This is not related to your code.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,9,https://github.com/NEAT-project/neat/pull/80#issuecomment-220608633,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Thank you very much for your valuable comments!
I still have to rewrite the code in an asynchronous way, and there are still some memory problems; but I think I addressed the other remarks.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,10,https://github.com/NEAT-project/neat/pull/80#issuecomment-223979210,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","I did a few commits and tried to fulfill your comments. The code should now be asynchronous and compile under BSD.
As you can see in the build bots, there are just a few memory leaks left, which I am trying to correct.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/kristrev,11,https://github.com/NEAT-project/neat/pull/80#issuecomment-227795876,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","I just went through the code. Since I am not able to test PvD itself (no supported equipment) I can't validate the functionality, but the code looks ok now (and is async). I see some style issues, but no point fixing them before we have the final coding style locked down.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/evyncke,12,https://github.com/NEAT-project/neat/pull/80#issuecomment-227961586,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24",Working code is good but working code with style is better ;-),True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,13,https://github.com/NEAT-project/neat/pull/80#issuecomment-229093199,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","I am sorry @oystedal, your comments left with by rebase, but I addressed it with 8933be0 ;-) .",True,{'THUMBS_UP': ['https://github.com/oystedal']}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,14,https://github.com/NEAT-project/neat/pull/80#issuecomment-229289708,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Something has changed with buildbots, hasn't? Yesterday they were launching ./client_http_get bsd10.nplab.de /cgi-bin/he and today they try ./client_http_get -u /cgi-bin/he bsd10.nplab.de which fail with usage: neat_http_get HOST [URI].",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,15,https://github.com/NEAT-project/neat/pull/80#issuecomment-229308573,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Ok, finally buildbots are green :) !",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,16,https://github.com/NEAT-project/neat/pull/80#issuecomment-230312848,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","So, @kristrev @tuexen, can we merge it, or is there still something I have to do?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/kristrev,17,https://github.com/NEAT-project/neat/pull/80#issuecomment-230318095,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24",I have no objections.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/kristrev,18,https://github.com/NEAT-project/neat/pull/80#issuecomment-230325130,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Or, you might want to postpone this a bit. We are currently reworking the resolver, so it could be that there will be some minor changes in PvD. Hopefully, they should be minor and only affect the callback signature.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/kristrev,19,https://github.com/NEAT-project/neat/pull/80#issuecomment-231132210,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Resolver rework is merged to master, so feel free to fix conflicts, adapt changes and merge. The most major changes are (from the top of my head).

New signature for resolve callback.
getaddrinfo() has been renamed (to neat_resolve) and changed slightly. For example, you pass a void pointer that is returned to the callback.

The rest should be more or less the same.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,20,https://github.com/NEAT-project/neat/pull/80#issuecomment-231356719,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Ok @kristrev, it's done (I just had to add a new inclusion). valgrind shows still no leaks, but maybe we should wait for the return of the buildbots to be sure everything is ok, and I think we will be able to merge it :) !",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/oystedal,21,https://github.com/NEAT-project/neat/pull/80#issuecomment-231363468,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Had another read through the code. Looks great, I could only find very minor things to be picky about :)
That being said, I do not know much about PvD, so I haven't looked much at the correctness of the implementation. I assume you have tested this.
Great work! :)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,22,https://github.com/NEAT-project/neat/pull/80#issuecomment-231382183,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","Thank you @oystedal, I think I have addressed your comments.
I am almost sure I have correctly implemented the protocol (and I have tested it of course), but if it wasn't the case I would fix it ;-) .",True,{'THUMBS_UP': ['https://github.com/oystedal']}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,23,https://github.com/NEAT-project/neat/pull/80#issuecomment-232077270,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24",Fixed @oystedal. I think this time I have removed all remaining leaks :-) .,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/oystedal,24,https://github.com/NEAT-project/neat/pull/80#issuecomment-232109921,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","The buildbots seem happy now, so I think the code is ready to be merged. :)",True,{'THUMBS_UP': ['https://github.com/NTag']}
NEAT-project/neat,https://github.com/NEAT-project/neat,80,2016-05-12T14:38:51Z,2016-07-18T09:47:22Z,2016-07-18T09:47:22Z,MERGED,True,726,13,10,https://github.com/NTag,Add PvD over DNS support,19,[],https://github.com/NEAT-project/neat/pull/80,https://github.com/NTag,25,https://github.com/NEAT-project/neat/pull/80#issuecomment-233282455,"Here is my proposition to add PvD over DNS support to NEAT, according to draft-stenberg-mif-mpvd-dns-00.
I had to store the prefix_length of an address, and PvD information in struct neat_addr.
When a new address becomes available, neat_pvd.c:neat_pvd_handle_newaddr(...) is called. It sends a PTR request to every DNS server, and for each answer sends a request for TXT records matching the answer. As specified in draft-stenberg-mif-mpvd-dns-00 each TXT record is a piece of information (format is key=value) which is added to a struct pvd_infos which at the end is added to the list of PvDs attached to an address (neat_addr.pvds).
It is my first contribution to the project, so don't hesitate to make comments.
Here is an example of output in debug mode:
[INF] Available src-addresses:
[INF]   IPv6: fd17:625d:a138:2:a00:27ff::86b6/64 pref 4294967295 valid 4294967295
[INF]   IPv6: 2001:db8:bad:a55::198/64 pref 0 valid 4294967295
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           z => cisco.com,mail.cisco.com
[INF]           6 => 2001:db8:bad:a55::/64
[INF]   IPv4: 192.168.55.198/24
[INF]       PVD:
[INF]           r => 2001:db8:bad:a55::2
[INF]           z => neat.eu
[INF]       PVD:
[INF]           s => (null)
[INF]   IPv4: 10.0.2.15/24","I am going to fix the new conflicts, verify the buildbots and merge it so :)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,83,2016-05-27T11:00:53Z,2016-06-02T14:28:24Z,2016-06-03T08:34:14Z,MERGED,True,12,3,2,https://github.com/oystedal,Added jansson dependency,3,['enhancement'],https://github.com/NEAT-project/neat/pull/83,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/83,"Hi.
I am publishing this pull request as a heads up to everyone that jansson should be installed since this will, following the positive feedback from #82, be a dependency in the future. The latest release, version 2.7 may be downloaded from: http://www.digip.org/jansson/releases/jansson-2.7.tar.gz. The latest development version may be fetched from: https://github.com/akheron/jansson. This library may also be present in various package managers.
I advise everyone to install jansson and to checkout the jansson-dependency branch and try to compile NEAT to ensure that merging this change into the master branch will go smoothly.
My suggestion is to keep this pull request open for a week or two such that everyone is given due notice about the new dependency and given sufficient opportunity to install it and ensure that NEAT still compiles for them. I feel it should not be merged into the master branch before the buildbots are updated to include this dependency. @weinrank, can you eventually take care of this?

Øystein","Hi.
I am publishing this pull request as a heads up to everyone that jansson should be installed since this will, following the positive feedback from #82, be a dependency in the future. The latest release, version 2.7 may be downloaded from: http://www.digip.org/jansson/releases/jansson-2.7.tar.gz. The latest development version may be fetched from: https://github.com/akheron/jansson. This library may also be present in various package managers.
I advise everyone to install jansson and to checkout the jansson-dependency branch and try to compile NEAT to ensure that merging this change into the master branch will go smoothly.
My suggestion is to keep this pull request open for a week or two such that everyone is given due notice about the new dependency and given sufficient opportunity to install it and ensure that NEAT still compiles for them. I feel it should not be merged into the master branch before the buildbots are updated to include this dependency. @weinrank, can you eventually take care of this?

Øystein",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,83,2016-05-27T11:00:53Z,2016-06-02T14:28:24Z,2016-06-03T08:34:14Z,MERGED,True,12,3,2,https://github.com/oystedal,Added jansson dependency,3,['enhancement'],https://github.com/NEAT-project/neat/pull/83,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/83#issuecomment-222120009,"Hi.
I am publishing this pull request as a heads up to everyone that jansson should be installed since this will, following the positive feedback from #82, be a dependency in the future. The latest release, version 2.7 may be downloaded from: http://www.digip.org/jansson/releases/jansson-2.7.tar.gz. The latest development version may be fetched from: https://github.com/akheron/jansson. This library may also be present in various package managers.
I advise everyone to install jansson and to checkout the jansson-dependency branch and try to compile NEAT to ensure that merging this change into the master branch will go smoothly.
My suggestion is to keep this pull request open for a week or two such that everyone is given due notice about the new dependency and given sufficient opportunity to install it and ensure that NEAT still compiles for them. I feel it should not be merged into the master branch before the buildbots are updated to include this dependency. @weinrank, can you eventually take care of this?

Øystein","Hey,
yeah i will update the buildbots soon (today?) and tell you when i'm done. 👍",True,{'THUMBS_UP': ['https://github.com/oystedal']}
NEAT-project/neat,https://github.com/NEAT-project/neat,83,2016-05-27T11:00:53Z,2016-06-02T14:28:24Z,2016-06-03T08:34:14Z,MERGED,True,12,3,2,https://github.com/oystedal,Added jansson dependency,3,['enhancement'],https://github.com/NEAT-project/neat/pull/83,https://github.com/kristahi,3,https://github.com/NEAT-project/neat/pull/83#issuecomment-222125026,"Hi.
I am publishing this pull request as a heads up to everyone that jansson should be installed since this will, following the positive feedback from #82, be a dependency in the future. The latest release, version 2.7 may be downloaded from: http://www.digip.org/jansson/releases/jansson-2.7.tar.gz. The latest development version may be fetched from: https://github.com/akheron/jansson. This library may also be present in various package managers.
I advise everyone to install jansson and to checkout the jansson-dependency branch and try to compile NEAT to ensure that merging this change into the master branch will go smoothly.
My suggestion is to keep this pull request open for a week or two such that everyone is given due notice about the new dependency and given sufficient opportunity to install it and ensure that NEAT still compiles for them. I feel it should not be merged into the master branch before the buildbots are updated to include this dependency. @weinrank, can you eventually take care of this?

Øystein","Ubuntu/Debian package: libjansson-dev
FreeBSD port: jansson
NetBSD package: jansson-2.7",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,83,2016-05-27T11:00:53Z,2016-06-02T14:28:24Z,2016-06-03T08:34:14Z,MERGED,True,12,3,2,https://github.com/oystedal,Added jansson dependency,3,['enhancement'],https://github.com/NEAT-project/neat/pull/83,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/83#issuecomment-222128834,"Hi.
I am publishing this pull request as a heads up to everyone that jansson should be installed since this will, following the positive feedback from #82, be a dependency in the future. The latest release, version 2.7 may be downloaded from: http://www.digip.org/jansson/releases/jansson-2.7.tar.gz. The latest development version may be fetched from: https://github.com/akheron/jansson. This library may also be present in various package managers.
I advise everyone to install jansson and to checkout the jansson-dependency branch and try to compile NEAT to ensure that merging this change into the master branch will go smoothly.
My suggestion is to keep this pull request open for a week or two such that everyone is given due notice about the new dependency and given sufficient opportunity to install it and ensure that NEAT still compiles for them. I feel it should not be merged into the master branch before the buildbots are updated to include this dependency. @weinrank, can you eventually take care of this?

Øystein","All BBs have jansson installed.
After updating some binaries i have dependency issues on the FreeBSD ARM BB - this is not related to jansson. I will fix this till monday.
greetings",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,83,2016-05-27T11:00:53Z,2016-06-02T14:28:24Z,2016-06-03T08:34:14Z,MERGED,True,12,3,2,https://github.com/oystedal,Added jansson dependency,3,['enhancement'],https://github.com/NEAT-project/neat/pull/83,https://github.com/weinrank,5,https://github.com/NEAT-project/neat/pull/83#issuecomment-222276234,"Hi.
I am publishing this pull request as a heads up to everyone that jansson should be installed since this will, following the positive feedback from #82, be a dependency in the future. The latest release, version 2.7 may be downloaded from: http://www.digip.org/jansson/releases/jansson-2.7.tar.gz. The latest development version may be fetched from: https://github.com/akheron/jansson. This library may also be present in various package managers.
I advise everyone to install jansson and to checkout the jansson-dependency branch and try to compile NEAT to ensure that merging this change into the master branch will go smoothly.
My suggestion is to keep this pull request open for a week or two such that everyone is given due notice about the new dependency and given sufficient opportunity to install it and ensure that NEAT still compiles for them. I feel it should not be merged into the master branch before the buildbots are updated to include this dependency. @weinrank, can you eventually take care of this?

Øystein",FreeBSD ARM is fixed,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,83,2016-05-27T11:00:53Z,2016-06-02T14:28:24Z,2016-06-03T08:34:14Z,MERGED,True,12,3,2,https://github.com/oystedal,Added jansson dependency,3,['enhancement'],https://github.com/NEAT-project/neat/pull/83,https://github.com/kristahi,6,https://github.com/NEAT-project/neat/pull/83#issuecomment-222662737,"Hi.
I am publishing this pull request as a heads up to everyone that jansson should be installed since this will, following the positive feedback from #82, be a dependency in the future. The latest release, version 2.7 may be downloaded from: http://www.digip.org/jansson/releases/jansson-2.7.tar.gz. The latest development version may be fetched from: https://github.com/akheron/jansson. This library may also be present in various package managers.
I advise everyone to install jansson and to checkout the jansson-dependency branch and try to compile NEAT to ensure that merging this change into the master branch will go smoothly.
My suggestion is to keep this pull request open for a week or two such that everyone is given due notice about the new dependency and given sufficient opportunity to install it and ensure that NEAT still compiles for them. I feel it should not be merged into the master branch before the buildbots are updated to include this dependency. @weinrank, can you eventually take care of this?

Øystein",Any objections to merging this? Upcoming NEAT logic BB PR will depend on it.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,83,2016-05-27T11:00:53Z,2016-06-02T14:28:24Z,2016-06-03T08:34:14Z,MERGED,True,12,3,2,https://github.com/oystedal,Added jansson dependency,3,['enhancement'],https://github.com/NEAT-project/neat/pull/83,https://github.com/weinrank,7,https://github.com/NEAT-project/neat/pull/83#issuecomment-222672614,"Hi.
I am publishing this pull request as a heads up to everyone that jansson should be installed since this will, following the positive feedback from #82, be a dependency in the future. The latest release, version 2.7 may be downloaded from: http://www.digip.org/jansson/releases/jansson-2.7.tar.gz. The latest development version may be fetched from: https://github.com/akheron/jansson. This library may also be present in various package managers.
I advise everyone to install jansson and to checkout the jansson-dependency branch and try to compile NEAT to ensure that merging this change into the master branch will go smoothly.
My suggestion is to keep this pull request open for a week or two such that everyone is given due notice about the new dependency and given sufficient opportunity to install it and ensure that NEAT still compiles for them. I feel it should not be merged into the master branch before the buildbots are updated to include this dependency. @weinrank, can you eventually take care of this?

Øystein",@kristahi For me it's fine,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/kristahi,1,https://github.com/NEAT-project/neat/pull/85,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/tuexen,2,https://github.com/NEAT-project/neat/pull/85#issuecomment-223137025,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).",I tried to look for SCTP related issues and provided comments. This patch does a lot of things. It should have been splitted in several smaller patches. That would allow for a much simpler review.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/oystedal,3,https://github.com/NEAT-project/neat/pull/85#issuecomment-223379892,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","I agree that a patch like this is too large. In this case we're making additions and modifications that are mostly connected to each other, and all of it is related to conforming with the API as defined in D1.2 section 3.2 and 3.3, which is why we've submitted it as a single patch. We will aim for smaller patches in the future.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/oystedal,4,https://github.com/NEAT-project/neat/pull/85#issuecomment-224049660,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","I believe we have addressed all issues brought forward by your comments @tuexen, the feedback is appreciated.
Github does not mark all of the diffs above as out of date, but if you look at the files themselves and the commit history on this page, they should all have been fixed now.
If there are no further objections, I suggest that these changes are merged into the master branch.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/tuexen,5,https://github.com/NEAT-project/neat/pull/85#issuecomment-224063301,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","The patch is too big to allow me to say if things are addressed or not. I have to trust you. However, at least the one with setting the primary address seems to be open. It doesn't make sense to provide a name there. It must be a IP-address. I think this should be enforced by the API, which isn't currently the case.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/kristahi,6,https://github.com/NEAT-project/neat/pull/85#issuecomment-224257239,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","However, at least the one with setting the primary address seems to be open. It doesn't make sense to provide a name there. It must be a IP-address. I think this should be enforced by the API, which isn't currently the case.

Fixed this now.
In the process I moved the function neat_resolver_check_for_literal in neat_resolver.c from internal to global linkage, hope nobody minds.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/kristahi,7,https://github.com/NEAT-project/neat/pull/85#issuecomment-224257789,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","Having addressed SCTP service in the absense of netinet/sctp.h (see #86 and rev 30f7cc6)  as well as the problem in neat_set_primary_addr, I think we have fixed all outstanding issues.
OK to merge?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/tuexen,8,https://github.com/NEAT-project/neat/pull/85#issuecomment-224259785,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","If you have addressed all issues I raised, you have an OK from my side. But my review focussed mainly on the SCTP aspects...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/kristahi,9,https://github.com/NEAT-project/neat/pull/85#issuecomment-224273566,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","If you have addressed all issues I raised, you have an OK from my side. But my review focussed mainly on the SCTP aspects...

Thank you so much for your time, by the way! Definitely improved the quality of our code significantly.
The SCTP parts you reviewed really form a large part of the patch, anyway. If nobody raises their hand until noon tomorrow (Wednesday) and commit to reviewing more, I will merge at that time.",True,{'THUMBS_UP': ['https://github.com/weinrank']}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/tuexen,10,https://github.com/NEAT-project/neat/pull/85#issuecomment-224274247,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","Makes sense. Assuming that the buildbots are happy (or at least don't complain about issue in your code), go ahead. We can improve the code in the repository...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,85,2016-06-01T11:43:12Z,2016-06-08T10:04:35Z,2016-06-08T10:08:57Z,MERGED,True,1127,23,24,https://github.com/kristahi,"NEAT Logic BB, first merge",152,[],https://github.com/NEAT-project/neat/pull/85,https://github.com/kristahi,11,https://github.com/NEAT-project/neat/pull/85#issuecomment-224546546,"At UiO we have been working on implementing the NEAT Logic BB, and here are the first results of this work.
Our work has been guided by D1.2 sections 3.2 and 3.3, as well as draft-ietf-taps-transports-usage-00 (we're aware of its UDP sibling, waiting for UDP code before we integrate that).
What's in
The API now conforms to D1.2 sect. 3.2 in it's entirety, although we have not had time to implement all the features yet.
All callbacks work, although the NETWORK_STATUS_CHANGE event is only functional for SCTP at this time.
This should close #27 , with the addition of on_close (AKA CLOSE from D1.2)
We also added the primitives and events from sect. 3.3.1 - 3.3.3 to the API, but they are not functional at this time.
What's out
Unimplemented features cause return values of NEAT_ERROR_UNABLE. Currently incomplete:

OPEN with specification of local name to bind to.
OPEN, WRITE and READ multi-streaming support.
CHANGE_TIMEOUT for TCP works iff. there is TCP User Timeout support in the kernel (only Linux)

Property-related changes are not part of this PR. We are working on transitioning that to a JSON-based format suitable for interfacing with the Policy Manager, and in line with the discussion in issue #81 (definition of actual properties of course needs further agreement, we are simply laying some groundwork for the implementation).
SCTP/TCP inconsistensies
Furthermore, several important features work differently across TCP and SCTP. For example, the ABORT callback is not called when running over TCP; this is per the specification, but strikes us as problematic from the application programmer's point of view. We are working on proposals to even this out, so application programmers can rely on this callback (we already did this for the CLOSE event).
Documentation etc.
The documentation in the docs subdirectory has been updated, and we have tried to stick to the existing style of function calls and so on. The client example has received some new callback handlers.
Sorry for the quite large PR, we will try to keep them smaller and more focused as we iterate. We're eager to hear your feedback and criticisms (and fixing it!).","Nobody came forward, so merge went ahead. Buildbots are all green and we don't foresee any problems, but do file issues if you find something.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,88,2016-06-07T12:28:34Z,2016-06-07T13:01:39Z,2016-06-08T11:55:59Z,MERGED,True,22,9,3,https://github.com/weinrank,Improve logging,3,[],https://github.com/NEAT-project/neat/pull/88,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/88,"add timing information
report file descriptors","add timing information
report file descriptors",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,90,2016-06-11T20:38:41Z,2016-06-16T09:02:56Z,2016-06-16T09:02:56Z,MERGED,True,113,18,6,https://github.com/apetlund,Neatstat,18,[],https://github.com/NEAT-project/neat/pull/90,https://github.com/apetlund,1,https://github.com/NEAT-project/neat/pull/90,"Here's a suggestion for a basic framework for statistics that can be requested by the NEAT applications. Based on the discussions in Aberdeen, I used JSON as the interface for statistics. This has several advantages as discussed in other contexts, for instance that we cannot predict the size of the output if multiple interfaces or other variable circumstances are involved in the NEAT connection.
The changes are as follows:

Added two separate files for implementing statistics functionality - neat_stat.h and neat_stat.c
Added a function neat_get_stats() in neat_core.c as interface
Added a test option (-J) in client.c that requests and prints the JSON stats for every send.

Currently, the functionality is not implemented using callbacks (as afaict there's no blocking in the logic). If the need for blocking requests when collecting the statistics arises (or if the group wants to do it that way), that can be implemented.
I see that a recent merge has added some placeholder statistics functions. I have not considered these, as I was not aware of them when I started working on this.
I have a couple of questions that might be useful before we do more work on OS-specific stats and expand the functionality:


I could not find any entry point from where all flows could be accessed. I initially meant to have an option for collecting stats from all flows in the NEAT instance. Currently, the reference to the flow is passed to the function and only stats for that flow is returned. Global stats might also be useful if the policy module wants to pull statistics  occasionally.


We might want to implement a timed callback for collecting statistics on a regular basis, for instance for passing to the policy module. I have made a placeholder struct in neat_stat.h for gathering data. This struct would anyway be useful for caching static statistics, but it would, for many cases, mean redundant information in the system (i.e. trade memory footprint for CPU cycles).


Are there any way to pass information between neat instances? Should not NEAT for instance cache host abilities to save unnecessary HE? If so, there might be elements of such cached information that might be relevant for the statistics.


Cheers,
Andreas","Here's a suggestion for a basic framework for statistics that can be requested by the NEAT applications. Based on the discussions in Aberdeen, I used JSON as the interface for statistics. This has several advantages as discussed in other contexts, for instance that we cannot predict the size of the output if multiple interfaces or other variable circumstances are involved in the NEAT connection.
The changes are as follows:

Added two separate files for implementing statistics functionality - neat_stat.h and neat_stat.c
Added a function neat_get_stats() in neat_core.c as interface
Added a test option (-J) in client.c that requests and prints the JSON stats for every send.

Currently, the functionality is not implemented using callbacks (as afaict there's no blocking in the logic). If the need for blocking requests when collecting the statistics arises (or if the group wants to do it that way), that can be implemented.
I see that a recent merge has added some placeholder statistics functions. I have not considered these, as I was not aware of them when I started working on this.
I have a couple of questions that might be useful before we do more work on OS-specific stats and expand the functionality:


I could not find any entry point from where all flows could be accessed. I initially meant to have an option for collecting stats from all flows in the NEAT instance. Currently, the reference to the flow is passed to the function and only stats for that flow is returned. Global stats might also be useful if the policy module wants to pull statistics  occasionally.


We might want to implement a timed callback for collecting statistics on a regular basis, for instance for passing to the policy module. I have made a placeholder struct in neat_stat.h for gathering data. This struct would anyway be useful for caching static statistics, but it would, for many cases, mean redundant information in the system (i.e. trade memory footprint for CPU cycles).


Are there any way to pass information between neat instances? Should not NEAT for instance cache host abilities to save unnecessary HE? If so, there might be elements of such cached information that might be relevant for the statistics.


Cheers,
Andreas",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,90,2016-06-11T20:38:41Z,2016-06-16T09:02:56Z,2016-06-16T09:02:56Z,MERGED,True,113,18,6,https://github.com/apetlund,Neatstat,18,[],https://github.com/NEAT-project/neat/pull/90,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/90#issuecomment-225393478,"Here's a suggestion for a basic framework for statistics that can be requested by the NEAT applications. Based on the discussions in Aberdeen, I used JSON as the interface for statistics. This has several advantages as discussed in other contexts, for instance that we cannot predict the size of the output if multiple interfaces or other variable circumstances are involved in the NEAT connection.
The changes are as follows:

Added two separate files for implementing statistics functionality - neat_stat.h and neat_stat.c
Added a function neat_get_stats() in neat_core.c as interface
Added a test option (-J) in client.c that requests and prints the JSON stats for every send.

Currently, the functionality is not implemented using callbacks (as afaict there's no blocking in the logic). If the need for blocking requests when collecting the statistics arises (or if the group wants to do it that way), that can be implemented.
I see that a recent merge has added some placeholder statistics functions. I have not considered these, as I was not aware of them when I started working on this.
I have a couple of questions that might be useful before we do more work on OS-specific stats and expand the functionality:


I could not find any entry point from where all flows could be accessed. I initially meant to have an option for collecting stats from all flows in the NEAT instance. Currently, the reference to the flow is passed to the function and only stats for that flow is returned. Global stats might also be useful if the policy module wants to pull statistics  occasionally.


We might want to implement a timed callback for collecting statistics on a regular basis, for instance for passing to the policy module. I have made a placeholder struct in neat_stat.h for gathering data. This struct would anyway be useful for caching static statistics, but it would, for many cases, mean redundant information in the system (i.e. trade memory footprint for CPU cycles).


Are there any way to pass information between neat instances? Should not NEAT for instance cache host abilities to save unnecessary HE? If so, there might be elements of such cached information that might be relevant for the statistics.


Cheers,
Andreas",The placeholder functions and structs was something I added before I was aware that someone else was working on statistics. Feel free to use or remove them as you wish.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,90,2016-06-11T20:38:41Z,2016-06-16T09:02:56Z,2016-06-16T09:02:56Z,MERGED,True,113,18,6,https://github.com/apetlund,Neatstat,18,[],https://github.com/NEAT-project/neat/pull/90,https://github.com/adventureloop,3,https://github.com/NEAT-project/neat/pull/90#issuecomment-225412824,"Here's a suggestion for a basic framework for statistics that can be requested by the NEAT applications. Based on the discussions in Aberdeen, I used JSON as the interface for statistics. This has several advantages as discussed in other contexts, for instance that we cannot predict the size of the output if multiple interfaces or other variable circumstances are involved in the NEAT connection.
The changes are as follows:

Added two separate files for implementing statistics functionality - neat_stat.h and neat_stat.c
Added a function neat_get_stats() in neat_core.c as interface
Added a test option (-J) in client.c that requests and prints the JSON stats for every send.

Currently, the functionality is not implemented using callbacks (as afaict there's no blocking in the logic). If the need for blocking requests when collecting the statistics arises (or if the group wants to do it that way), that can be implemented.
I see that a recent merge has added some placeholder statistics functions. I have not considered these, as I was not aware of them when I started working on this.
I have a couple of questions that might be useful before we do more work on OS-specific stats and expand the functionality:


I could not find any entry point from where all flows could be accessed. I initially meant to have an option for collecting stats from all flows in the NEAT instance. Currently, the reference to the flow is passed to the function and only stats for that flow is returned. Global stats might also be useful if the policy module wants to pull statistics  occasionally.


We might want to implement a timed callback for collecting statistics on a regular basis, for instance for passing to the policy module. I have made a placeholder struct in neat_stat.h for gathering data. This struct would anyway be useful for caching static statistics, but it would, for many cases, mean redundant information in the system (i.e. trade memory footprint for CPU cycles).


Are there any way to pass information between neat instances? Should not NEAT for instance cache host abilities to save unnecessary HE? If so, there might be elements of such cached information that might be relevant for the statistics.


Cheers,
Andreas","I could not find any entry point from where all flows could be accessed.


I couldn't find this either, I added a list of flows to the neat context in my udp branch. I will try and break that diff out this week, but I don't know if I will have time.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,90,2016-06-11T20:38:41Z,2016-06-16T09:02:56Z,2016-06-16T09:02:56Z,MERGED,True,113,18,6,https://github.com/apetlund,Neatstat,18,[],https://github.com/NEAT-project/neat/pull/90,https://github.com/kristahi,4,https://github.com/NEAT-project/neat/pull/90#issuecomment-226427662,"Here's a suggestion for a basic framework for statistics that can be requested by the NEAT applications. Based on the discussions in Aberdeen, I used JSON as the interface for statistics. This has several advantages as discussed in other contexts, for instance that we cannot predict the size of the output if multiple interfaces or other variable circumstances are involved in the NEAT connection.
The changes are as follows:

Added two separate files for implementing statistics functionality - neat_stat.h and neat_stat.c
Added a function neat_get_stats() in neat_core.c as interface
Added a test option (-J) in client.c that requests and prints the JSON stats for every send.

Currently, the functionality is not implemented using callbacks (as afaict there's no blocking in the logic). If the need for blocking requests when collecting the statistics arises (or if the group wants to do it that way), that can be implemented.
I see that a recent merge has added some placeholder statistics functions. I have not considered these, as I was not aware of them when I started working on this.
I have a couple of questions that might be useful before we do more work on OS-specific stats and expand the functionality:


I could not find any entry point from where all flows could be accessed. I initially meant to have an option for collecting stats from all flows in the NEAT instance. Currently, the reference to the flow is passed to the function and only stats for that flow is returned. Global stats might also be useful if the policy module wants to pull statistics  occasionally.


We might want to implement a timed callback for collecting statistics on a regular basis, for instance for passing to the policy module. I have made a placeholder struct in neat_stat.h for gathering data. This struct would anyway be useful for caching static statistics, but it would, for many cases, mean redundant information in the system (i.e. trade memory footprint for CPU cycles).


Are there any way to pass information between neat instances? Should not NEAT for instance cache host abilities to save unnecessary HE? If so, there might be elements of such cached information that might be relevant for the statistics.


Cheers,
Andreas","After the little nits were fixed, it lgtm, don't see any reason to wait with a merge.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,90,2016-06-11T20:38:41Z,2016-06-16T09:02:56Z,2016-06-16T09:02:56Z,MERGED,True,113,18,6,https://github.com/apetlund,Neatstat,18,[],https://github.com/NEAT-project/neat/pull/90,https://github.com/oystedal,5,https://github.com/NEAT-project/neat/pull/90#issuecomment-226428164,"Here's a suggestion for a basic framework for statistics that can be requested by the NEAT applications. Based on the discussions in Aberdeen, I used JSON as the interface for statistics. This has several advantages as discussed in other contexts, for instance that we cannot predict the size of the output if multiple interfaces or other variable circumstances are involved in the NEAT connection.
The changes are as follows:

Added two separate files for implementing statistics functionality - neat_stat.h and neat_stat.c
Added a function neat_get_stats() in neat_core.c as interface
Added a test option (-J) in client.c that requests and prints the JSON stats for every send.

Currently, the functionality is not implemented using callbacks (as afaict there's no blocking in the logic). If the need for blocking requests when collecting the statistics arises (or if the group wants to do it that way), that can be implemented.
I see that a recent merge has added some placeholder statistics functions. I have not considered these, as I was not aware of them when I started working on this.
I have a couple of questions that might be useful before we do more work on OS-specific stats and expand the functionality:


I could not find any entry point from where all flows could be accessed. I initially meant to have an option for collecting stats from all flows in the NEAT instance. Currently, the reference to the flow is passed to the function and only stats for that flow is returned. Global stats might also be useful if the policy module wants to pull statistics  occasionally.


We might want to implement a timed callback for collecting statistics on a regular basis, for instance for passing to the policy module. I have made a placeholder struct in neat_stat.h for gathering data. This struct would anyway be useful for caching static statistics, but it would, for many cases, mean redundant information in the system (i.e. trade memory footprint for CPU cycles).


Are there any way to pass information between neat instances? Should not NEAT for instance cache host abilities to save unnecessary HE? If so, there might be elements of such cached information that might be relevant for the statistics.


Cheers,
Andreas",I would perhaps consider a commit to remove the placeholder functions for statistics if you are certain that you do not plan on using them.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,90,2016-06-11T20:38:41Z,2016-06-16T09:02:56Z,2016-06-16T09:02:56Z,MERGED,True,113,18,6,https://github.com/apetlund,Neatstat,18,[],https://github.com/NEAT-project/neat/pull/90,https://github.com/kristahi,6,https://github.com/NEAT-project/neat/pull/90#issuecomment-226428323,"Here's a suggestion for a basic framework for statistics that can be requested by the NEAT applications. Based on the discussions in Aberdeen, I used JSON as the interface for statistics. This has several advantages as discussed in other contexts, for instance that we cannot predict the size of the output if multiple interfaces or other variable circumstances are involved in the NEAT connection.
The changes are as follows:

Added two separate files for implementing statistics functionality - neat_stat.h and neat_stat.c
Added a function neat_get_stats() in neat_core.c as interface
Added a test option (-J) in client.c that requests and prints the JSON stats for every send.

Currently, the functionality is not implemented using callbacks (as afaict there's no blocking in the logic). If the need for blocking requests when collecting the statistics arises (or if the group wants to do it that way), that can be implemented.
I see that a recent merge has added some placeholder statistics functions. I have not considered these, as I was not aware of them when I started working on this.
I have a couple of questions that might be useful before we do more work on OS-specific stats and expand the functionality:


I could not find any entry point from where all flows could be accessed. I initially meant to have an option for collecting stats from all flows in the NEAT instance. Currently, the reference to the flow is passed to the function and only stats for that flow is returned. Global stats might also be useful if the policy module wants to pull statistics  occasionally.


We might want to implement a timed callback for collecting statistics on a regular basis, for instance for passing to the policy module. I have made a placeholder struct in neat_stat.h for gathering data. This struct would anyway be useful for caching static statistics, but it would, for many cases, mean redundant information in the system (i.e. trade memory footprint for CPU cycles).


Are there any way to pass information between neat instances? Should not NEAT for instance cache host abilities to save unnecessary HE? If so, there might be elements of such cached information that might be relevant for the statistics.


Cheers,
Andreas","I would perhaps consider a commit to remove the placeholder functions for statistics if you are certain that you do not plan on using them.

That's already done I think.
Removed old stats placeholder files as per pull request discussion          8b22fc7",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,90,2016-06-11T20:38:41Z,2016-06-16T09:02:56Z,2016-06-16T09:02:56Z,MERGED,True,113,18,6,https://github.com/apetlund,Neatstat,18,[],https://github.com/NEAT-project/neat/pull/90,https://github.com/oystedal,7,https://github.com/NEAT-project/neat/pull/90#issuecomment-226428755,"Here's a suggestion for a basic framework for statistics that can be requested by the NEAT applications. Based on the discussions in Aberdeen, I used JSON as the interface for statistics. This has several advantages as discussed in other contexts, for instance that we cannot predict the size of the output if multiple interfaces or other variable circumstances are involved in the NEAT connection.
The changes are as follows:

Added two separate files for implementing statistics functionality - neat_stat.h and neat_stat.c
Added a function neat_get_stats() in neat_core.c as interface
Added a test option (-J) in client.c that requests and prints the JSON stats for every send.

Currently, the functionality is not implemented using callbacks (as afaict there's no blocking in the logic). If the need for blocking requests when collecting the statistics arises (or if the group wants to do it that way), that can be implemented.
I see that a recent merge has added some placeholder statistics functions. I have not considered these, as I was not aware of them when I started working on this.
I have a couple of questions that might be useful before we do more work on OS-specific stats and expand the functionality:


I could not find any entry point from where all flows could be accessed. I initially meant to have an option for collecting stats from all flows in the NEAT instance. Currently, the reference to the flow is passed to the function and only stats for that flow is returned. Global stats might also be useful if the policy module wants to pull statistics  occasionally.


We might want to implement a timed callback for collecting statistics on a regular basis, for instance for passing to the policy module. I have made a placeholder struct in neat_stat.h for gathering data. This struct would anyway be useful for caching static statistics, but it would, for many cases, mean redundant information in the system (i.e. trade memory footprint for CPU cycles).


Are there any way to pass information between neat instances? Should not NEAT for instance cache host abilities to save unnecessary HE? If so, there might be elements of such cached information that might be relevant for the statistics.


Cheers,
Andreas",I scrolled too quickly... :),True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,92,2016-06-16T15:12:21Z,2016-06-20T13:56:16Z,2016-06-20T13:56:16Z,MERGED,True,171,83,4,https://github.com/oystedal,Support for multiple send buffers,4,[],https://github.com/NEAT-project/neat/pull/92,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/92,"This pull request implements multiple send buffers, which to my understanding is a necessity to properly support multistreaming down the road, especially once we have to deal with local stream priorities. This patch does nothing to actually support multistreaming, that is a work in progress depending on this feature.
The changes are as follows:

neat_flow now contains a pointer to an array of write buffers, and an array of isDraining values
The write functions take an additional stream id parameter
After libuv has marked the socket as writable, on_writable is called once per stream
The stream id has been added to the callback struct used by on_writable etc.
io_error also takes a stream id.
The remaining io_ functions set the stream id in the callback struct to NEAT_STREAM_INVALID , which currently equals -1. This value is used when the callback applies to the entire flow and not a specific stream.

I'm assuming that it's possible for stream-local errors to occur, that is, errors happening on one stream only. I do not know if this is actually the case in SCTP or any other contemporary protocol that supports multiple streams, but I still think it's a valid scenario to support.
I have tested that the changes does not break any currently working functionality. The buildbots also seem happy about the change. I have not tested this with userspace SCTP.
Questions, concerns, and comments are always welcome.","This pull request implements multiple send buffers, which to my understanding is a necessity to properly support multistreaming down the road, especially once we have to deal with local stream priorities. This patch does nothing to actually support multistreaming, that is a work in progress depending on this feature.
The changes are as follows:

neat_flow now contains a pointer to an array of write buffers, and an array of isDraining values
The write functions take an additional stream id parameter
After libuv has marked the socket as writable, on_writable is called once per stream
The stream id has been added to the callback struct used by on_writable etc.
io_error also takes a stream id.
The remaining io_ functions set the stream id in the callback struct to NEAT_STREAM_INVALID , which currently equals -1. This value is used when the callback applies to the entire flow and not a specific stream.

I'm assuming that it's possible for stream-local errors to occur, that is, errors happening on one stream only. I do not know if this is actually the case in SCTP or any other contemporary protocol that supports multiple streams, but I still think it's a valid scenario to support.
I have tested that the changes does not break any currently working functionality. The buildbots also seem happy about the change. I have not tested this with userspace SCTP.
Questions, concerns, and comments are always welcome.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,93,2016-06-16T15:52:49Z,2016-06-17T13:50:16Z,2016-06-20T06:20:27Z,MERGED,True,239,255,8,https://github.com/ruengeler,Add enum type for stacks,11,[],https://github.com/NEAT-project/neat/pull/93,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/93,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,95,2016-06-20T14:17:09Z,2016-06-23T12:50:50Z,2016-06-23T13:27:40Z,MERGED,True,1053,8,6,https://github.com/oystedal,Support for multistreaming with SCTP,15,[],https://github.com/NEAT-project/neat/pull/95,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/95,"This PR adds support for multistreaming over SCTP.

For now, I have assumed that the number of streams are symmetric in both directions.
Down the line I think we should consider storing an on_writable callback for each stream, instead of forcing applications to use the same callback for all streams.

I have added a separate server/client example for multistreaming. We may consider integrating this with the existing server_echo and client respectively in the future.
@tuexen: I suppose you should take a look at this PR. In particular, I have had difficulties finding a documented way of getting the association id for a given socket/fd. This is how I've done it so far, which appears to work.","This PR adds support for multistreaming over SCTP.

For now, I have assumed that the number of streams are symmetric in both directions.
Down the line I think we should consider storing an on_writable callback for each stream, instead of forcing applications to use the same callback for all streams.

I have added a separate server/client example for multistreaming. We may consider integrating this with the existing server_echo and client respectively in the future.
@tuexen: I suppose you should take a look at this PR. In particular, I have had difficulties finding a documented way of getting the association id for a given socket/fd. This is how I've done it so far, which appears to work.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,95,2016-06-20T14:17:09Z,2016-06-23T12:50:50Z,2016-06-23T13:27:40Z,MERGED,True,1053,8,6,https://github.com/oystedal,Support for multistreaming with SCTP,15,[],https://github.com/NEAT-project/neat/pull/95,https://github.com/tuexen,2,https://github.com/NEAT-project/neat/pull/95#issuecomment-227179090,"This PR adds support for multistreaming over SCTP.

For now, I have assumed that the number of streams are symmetric in both directions.
Down the line I think we should consider storing an on_writable callback for each stream, instead of forcing applications to use the same callback for all streams.

I have added a separate server/client example for multistreaming. We may consider integrating this with the existing server_echo and client respectively in the future.
@tuexen: I suppose you should take a look at this PR. In particular, I have had difficulties finding a documented way of getting the association id for a given socket/fd. This is how I've done it so far, which appears to work.",My understanding is that we use only one-to-one style SCTP sockets. So there is no need to deal with association ids. Why do you need this?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,95,2016-06-20T14:17:09Z,2016-06-23T12:50:50Z,2016-06-23T13:27:40Z,MERGED,True,1053,8,6,https://github.com/oystedal,Support for multistreaming with SCTP,15,[],https://github.com/NEAT-project/neat/pull/95,https://github.com/oystedal,3,https://github.com/NEAT-project/neat/pull/95#issuecomment-227185617,"This PR adds support for multistreaming over SCTP.

For now, I have assumed that the number of streams are symmetric in both directions.
Down the line I think we should consider storing an on_writable callback for each stream, instead of forcing applications to use the same callback for all streams.

I have added a separate server/client example for multistreaming. We may consider integrating this with the existing server_echo and client respectively in the future.
@tuexen: I suppose you should take a look at this PR. In particular, I have had difficulties finding a documented way of getting the association id for a given socket/fd. This is how I've done it so far, which appears to work.","I see, then I've misunderstood the concept of one-to-many sockets being related to multistreaming as well. I'll update the code tomorrow.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,95,2016-06-20T14:17:09Z,2016-06-23T12:50:50Z,2016-06-23T13:27:40Z,MERGED,True,1053,8,6,https://github.com/oystedal,Support for multistreaming with SCTP,15,[],https://github.com/NEAT-project/neat/pull/95,https://github.com/mcmanus,4,https://github.com/NEAT-project/neat/pull/95#issuecomment-227196320,"This PR adds support for multistreaming over SCTP.

For now, I have assumed that the number of streams are symmetric in both directions.
Down the line I think we should consider storing an on_writable callback for each stream, instead of forcing applications to use the same callback for all streams.

I have added a separate server/client example for multistreaming. We may consider integrating this with the existing server_echo and client respectively in the future.
@tuexen: I suppose you should take a look at this PR. In particular, I have had difficulties finding a documented way of getting the association id for a given socket/fd. This is how I've done it so far, which appears to work.","As I understood this issue from Aberdeen - multistreaming was generally supposed to be transparent to the API (i.e. not necessarily one to one, but that was transparent to the caller). A couple use cases were identified where that wasn't going to work, so we were going to provide a second-class API (ala setsockopt) for creating the binding only when necessary.
maybe I'm not remembering correctly?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,95,2016-06-20T14:17:09Z,2016-06-23T12:50:50Z,2016-06-23T13:27:40Z,MERGED,True,1053,8,6,https://github.com/oystedal,Support for multistreaming with SCTP,15,[],https://github.com/NEAT-project/neat/pull/95,https://github.com/tuexen,5,https://github.com/NEAT-project/neat/pull/95#issuecomment-227203074,"This PR adds support for multistreaming over SCTP.

For now, I have assumed that the number of streams are symmetric in both directions.
Down the line I think we should consider storing an on_writable callback for each stream, instead of forcing applications to use the same callback for all streams.

I have added a separate server/client example for multistreaming. We may consider integrating this with the existing server_echo and client respectively in the future.
@tuexen: I suppose you should take a look at this PR. In particular, I have had difficulties finding a documented way of getting the association id for a given socket/fd. This is how I've done it so far, which appears to work.","My understanding:

Allow applications to explicitly use SCTP streams, if they want. This means that they require SCTP as the protocol and use a specific API.
Later, allow the transparent mapping of neat flows to multiple TCP connection or SCTP streams.

I think we discussed in Aberdeen the second, but I would not prevent the user from doing the first.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,95,2016-06-20T14:17:09Z,2016-06-23T12:50:50Z,2016-06-23T13:27:40Z,MERGED,True,1053,8,6,https://github.com/oystedal,Support for multistreaming with SCTP,15,[],https://github.com/NEAT-project/neat/pull/95,https://github.com/mwelzl,6,https://github.com/NEAT-project/neat/pull/95#issuecomment-227247102,"This PR adds support for multistreaming over SCTP.

For now, I have assumed that the number of streams are symmetric in both directions.
Down the line I think we should consider storing an on_writable callback for each stream, instead of forcing applications to use the same callback for all streams.

I have added a separate server/client example for multistreaming. We may consider integrating this with the existing server_echo and client respectively in the future.
@tuexen: I suppose you should take a look at this PR. In particular, I have had difficulties finding a documented way of getting the association id for a given socket/fd. This is how I've done it so far, which appears to work.","exactly
Sent from my iPhone

On 20. jun. 2016, at 18.59, Michael Tüxen notifications@github.com wrote:
My understanding:
Allow applications to explicitly use SCTP streams, if they want. This means that they require SCTP as the protocol and use a specific API.
Later, allow the transparent mapping of neat flows to multiple TCP connection or SCTP streams. I think we discussed the second, but I would not prevent the user from doing the first.
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,95,2016-06-20T14:17:09Z,2016-06-23T12:50:50Z,2016-06-23T13:27:40Z,MERGED,True,1053,8,6,https://github.com/oystedal,Support for multistreaming with SCTP,15,[],https://github.com/NEAT-project/neat/pull/95,https://github.com/weinrank,7,https://github.com/NEAT-project/neat/pull/95#issuecomment-228047355,"This PR adds support for multistreaming over SCTP.

For now, I have assumed that the number of streams are symmetric in both directions.
Down the line I think we should consider storing an on_writable callback for each stream, instead of forcing applications to use the same callback for all streams.

I have added a separate server/client example for multistreaming. We may consider integrating this with the existing server_echo and client respectively in the future.
@tuexen: I suppose you should take a look at this PR. In particular, I have had difficulties finding a documented way of getting the association id for a given socket/fd. This is how I've done it so far, which appears to work.",I suggest that you integrate the multistream feature in the existing client and echo_server and make it configurable by command line options.,True,{'THUMBS_UP': ['https://github.com/kristahi']}
NEAT-project/neat,https://github.com/NEAT-project/neat,95,2016-06-20T14:17:09Z,2016-06-23T12:50:50Z,2016-06-23T13:27:40Z,MERGED,True,1053,8,6,https://github.com/oystedal,Support for multistreaming with SCTP,15,[],https://github.com/NEAT-project/neat/pull/95,https://github.com/oystedal,8,https://github.com/NEAT-project/neat/pull/95#issuecomment-228049223,"This PR adds support for multistreaming over SCTP.

For now, I have assumed that the number of streams are symmetric in both directions.
Down the line I think we should consider storing an on_writable callback for each stream, instead of forcing applications to use the same callback for all streams.

I have added a separate server/client example for multistreaming. We may consider integrating this with the existing server_echo and client respectively in the future.
@tuexen: I suppose you should take a look at this PR. In particular, I have had difficulties finding a documented way of getting the association id for a given socket/fd. This is how I've done it so far, which appears to work.","I agree. It's on my todo list, just not a high priority atm.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,97,2016-06-21T13:48:15Z,2016-06-29T07:23:45Z,2016-06-29T07:23:45Z,CLOSED,False,146,5,6,https://github.com/oystedal,Optional argument implementation,6,[],https://github.com/NEAT-project/neat/pull/97,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/97,"Implementation of a TLV-like approach to optional arguments and return values.
Closes #89.","Implementation of a TLV-like approach to optional arguments and return values.
Closes #89.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,97,2016-06-21T13:48:15Z,2016-06-29T07:23:45Z,2016-06-29T07:23:45Z,CLOSED,False,146,5,6,https://github.com/oystedal,Optional argument implementation,6,[],https://github.com/NEAT-project/neat/pull/97,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/97#issuecomment-227450615,"Implementation of a TLV-like approach to optional arguments and return values.
Closes #89.","http://buildbot.nplab.de:28010/waterfall?branch=oystedal/optargs
Missed the tlv header file in cmake file?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,97,2016-06-21T13:48:15Z,2016-06-29T07:23:45Z,2016-06-29T07:23:45Z,CLOSED,False,146,5,6,https://github.com/oystedal,Optional argument implementation,6,[],https://github.com/NEAT-project/neat/pull/97,https://github.com/oystedal,3,https://github.com/NEAT-project/neat/pull/97#issuecomment-227458453,"Implementation of a TLV-like approach to optional arguments and return values.
Closes #89.","Alright, added a missing file, and updated CMakeLists.txt. Compiles properly on all platforms now.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,98,2016-06-21T15:15:56Z,2016-06-21T15:18:59Z,2016-06-21T15:18:59Z,MERGED,True,53,36,4,https://github.com/ruengeler,Add neat_base_stack function,1,[],https://github.com/NEAT-project/neat/pull/98,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/98,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,99,2016-06-22T11:54:35Z,2016-06-22T21:06:15Z,2016-06-22T21:06:15Z,MERGED,True,6,6,6,https://github.com/weinrank,Only ban UDP and UDPLite by default,1,[],https://github.com/NEAT-project/neat/pull/99,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/99,"Changed the default property from ""TCP over IPv4 only"" to ""all except UDP and UDPLite""","Changed the default property from ""TCP over IPv4 only"" to ""all except UDP and UDPLite""",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,100,2016-06-22T14:22:30Z,2016-06-23T14:12:24Z,2016-06-23T14:12:24Z,MERGED,True,48,11,4,https://github.com/kristahi,Fix remaining callbacks,9,[],https://github.com/NEAT-project/neat/pull/100,https://github.com/kristahi,1,https://github.com/NEAT-project/neat/pull/100,"This patch fixes the callbacks that were half-way done in #85.

on_aborted now gets called also when TCP sees a reset.
on_timeout got a documentation fix; it is actually called when we see a timeout
Whenever TCP User Timeout is available, neat_change_timeout works; without that feature, it won't do anything. SCTP solution needs further discussion, if it's possible at all.

This PR should close #87","This patch fixes the callbacks that were half-way done in #85.

on_aborted now gets called also when TCP sees a reset.
on_timeout got a documentation fix; it is actually called when we see a timeout
Whenever TCP User Timeout is available, neat_change_timeout works; without that feature, it won't do anything. SCTP solution needs further discussion, if it's possible at all.

This PR should close #87",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,102,2016-06-27T12:23:55Z,2016-07-18T12:52:42Z,2016-07-18T12:52:42Z,MERGED,True,105,57,6,https://github.com/ruengeler,UDP encapsulation,8,[],https://github.com/NEAT-project/neat/pull/102,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/102,"Add UDP encapsulation
Some whitespace changes
Call usrsctp_init earlier to set the UDP tunneling port before it is bound","Add UDP encapsulation
Some whitespace changes
Call usrsctp_init earlier to set the UDP tunneling port before it is bound",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,102,2016-06-27T12:23:55Z,2016-07-18T12:52:42Z,2016-07-18T12:52:42Z,MERGED,True,105,57,6,https://github.com/ruengeler,UDP encapsulation,8,[],https://github.com/NEAT-project/neat/pull/102,https://github.com/naeemk,2,https://github.com/NEAT-project/neat/pull/102#issuecomment-233281360,"Add UDP encapsulation
Some whitespace changes
Call usrsctp_init earlier to set the UDP tunneling port before it is bound",@ruengeler: could you please resolve the conflicts and merge/finalize-the-status?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,104,2016-06-28T15:14:32Z,2016-06-29T16:21:18Z,2016-06-29T16:21:18Z,MERGED,True,34,12,4,https://github.com/weinrank,Weinrank/static analyzer,12,[],https://github.com/NEAT-project/neat/pull/104,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/104,Fix issues reported by clang static analyzer (some are still open),Fix issues reported by clang static analyzer (some are still open),True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,105,2016-06-28T15:15:10Z,2016-06-28T15:40:41Z,2016-06-28T15:40:41Z,MERGED,True,149,80,11,https://github.com/weinrank,Address the styleguide of function declaration...,2,[],https://github.com/NEAT-project/neat/pull/105,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/105,... for the examples.,... for the examples.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,106,2016-06-29T08:31:08Z,2016-06-29T09:34:43Z,2016-06-29T09:34:43Z,MERGED,True,115,103,2,https://github.com/weinrank,Examples refactoring and extending,6,[],https://github.com/NEAT-project/neat/pull/106,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/106,"client

styleguide and identation refactoring

client_http_get

change argument handling
styleguide refactoring","client

styleguide and identation refactoring

client_http_get

change argument handling
styleguide refactoring",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,112,2016-06-30T10:54:25Z,2016-07-05T13:38:25Z,2016-07-05T14:41:01Z,MERGED,True,58,45,1,https://github.com/oystedal,Reworked alloc_send_buffers,4,[],https://github.com/NEAT-project/neat/pull/112,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/112,"One send buffer is allocated for each flow in neat_new_flow. Any additional send buffers are allocated after the connection has been set up if that is needed.
Closes #109 and part of #103.","One send buffer is allocated for each flow in neat_new_flow. Any additional send buffers are allocated after the connection has been set up if that is needed.
Closes #109 and part of #103.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,112,2016-06-30T10:54:25Z,2016-07-05T13:38:25Z,2016-07-05T14:41:01Z,MERGED,True,58,45,1,https://github.com/oystedal,Reworked alloc_send_buffers,4,[],https://github.com/NEAT-project/neat/pull/112,https://github.com/adventureloop,2,https://github.com/NEAT-project/neat/pull/112#issuecomment-229735917,"One send buffer is allocated for each flow in neat_new_flow. Any additional send buffers are allocated after the connection has been set up if that is needed.
Closes #109 and part of #103.","Great start, now that we always allocate the send buffers we should always free them in neat_free_flow",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,113,2016-06-30T11:13:40Z,2016-07-07T08:15:32Z,2016-07-07T08:15:32Z,CLOSED,False,132,76,10,https://github.com/oystedal,Implementation of optional argument handling,5,[],https://github.com/NEAT-project/neat/pull/113,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/113,"As decided at the plenary.
Optional arguments are specified with a tag ID, a type, and a value. For now, supported types are ints, floats, and strings.
I plan to write a set of macros to make the code inside the functions that receive the optional arguments less cumbersome, and possibly also some macros that makes passing an optional argument more concise.","As decided at the plenary.
Optional arguments are specified with a tag ID, a type, and a value. For now, supported types are ints, floats, and strings.
I plan to write a set of macros to make the code inside the functions that receive the optional arguments less cumbersome, and possibly also some macros that makes passing an optional argument more concise.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,115,2016-07-04T15:42:20Z,2016-07-07T14:35:32Z,2016-07-07T14:35:37Z,MERGED,True,965,701,11,https://github.com/kristrev,Resolver rework,46,[],https://github.com/NEAT-project/neat/pull/115,https://github.com/kristrev,1,https://github.com/NEAT-project/neat/pull/115,"The DNS resolver was one of the first pieces of code to be written and was based on incorrect assumptions and had several errors/weaknesses. This pull request contains a rework of the resolver, as agreed upon in the plenary. The main goal was to support multiple resolve requests in parallel (or at least support queuing up multiple requests), which the initial resolver did not support.
The new DNS resolver is still based around a struct neat_resolver. This data structure is assumed to be tied to a context and now contains a list of struct neat_resolver_request. When the user calls neat_resolve() (getaddrinfo() has been renamed), a request is created, added to the list and started if there are any source addresses available. In other words, there is currently no pacing. This will be future work, if we believe this should be the responsibility of the resolver and not the user.
We have added some arguments to neat_resolve() that neat_getaddrinfo() did not have. The resolve-callback is now store in request, so different callbacks can be used with the same resolver. There is also a user_data argument now, which is a pointer that is forwarded to the resolve-callback. The resolver is no longer part of the resolve-callback signature, since no user should need direct access to it.
The cleanup() callback is removed sine it was not used. It might be added later if we see a need for it.
Based on my tests, this code works fine and supports the features we discussed during the plenary. However, it breaks other pieces of code, namely happy eyeballs. It also does not follow the new coding style, as I had forgot to update my .vimrc. I will fix at least the last one before merge, but the functionality will be the same. How should we proceed with merging this @adventureloop @weinrank @oystedal? It does break some functionality, but one can argue that that functionality has always been broken ...
There are also some dead variables that will be removed once we update HE.","The DNS resolver was one of the first pieces of code to be written and was based on incorrect assumptions and had several errors/weaknesses. This pull request contains a rework of the resolver, as agreed upon in the plenary. The main goal was to support multiple resolve requests in parallel (or at least support queuing up multiple requests), which the initial resolver did not support.
The new DNS resolver is still based around a struct neat_resolver. This data structure is assumed to be tied to a context and now contains a list of struct neat_resolver_request. When the user calls neat_resolve() (getaddrinfo() has been renamed), a request is created, added to the list and started if there are any source addresses available. In other words, there is currently no pacing. This will be future work, if we believe this should be the responsibility of the resolver and not the user.
We have added some arguments to neat_resolve() that neat_getaddrinfo() did not have. The resolve-callback is now store in request, so different callbacks can be used with the same resolver. There is also a user_data argument now, which is a pointer that is forwarded to the resolve-callback. The resolver is no longer part of the resolve-callback signature, since no user should need direct access to it.
The cleanup() callback is removed sine it was not used. It might be added later if we see a need for it.
Based on my tests, this code works fine and supports the features we discussed during the plenary. However, it breaks other pieces of code, namely happy eyeballs. It also does not follow the new coding style, as I had forgot to update my .vimrc. I will fix at least the last one before merge, but the functionality will be the same. How should we proceed with merging this @adventureloop @weinrank @oystedal? It does break some functionality, but one can argue that that functionality has always been broken ...
There are also some dead variables that will be removed once we update HE.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,115,2016-07-04T15:42:20Z,2016-07-07T14:35:32Z,2016-07-07T14:35:37Z,MERGED,True,965,701,11,https://github.com/kristrev,Resolver rework,46,[],https://github.com/NEAT-project/neat/pull/115,https://github.com/kristrev,2,https://github.com/NEAT-project/neat/pull/115#issuecomment-231079723,"The DNS resolver was one of the first pieces of code to be written and was based on incorrect assumptions and had several errors/weaknesses. This pull request contains a rework of the resolver, as agreed upon in the plenary. The main goal was to support multiple resolve requests in parallel (or at least support queuing up multiple requests), which the initial resolver did not support.
The new DNS resolver is still based around a struct neat_resolver. This data structure is assumed to be tied to a context and now contains a list of struct neat_resolver_request. When the user calls neat_resolve() (getaddrinfo() has been renamed), a request is created, added to the list and started if there are any source addresses available. In other words, there is currently no pacing. This will be future work, if we believe this should be the responsibility of the resolver and not the user.
We have added some arguments to neat_resolve() that neat_getaddrinfo() did not have. The resolve-callback is now store in request, so different callbacks can be used with the same resolver. There is also a user_data argument now, which is a pointer that is forwarded to the resolve-callback. The resolver is no longer part of the resolve-callback signature, since no user should need direct access to it.
The cleanup() callback is removed sine it was not used. It might be added later if we see a need for it.
Based on my tests, this code works fine and supports the features we discussed during the plenary. However, it breaks other pieces of code, namely happy eyeballs. It also does not follow the new coding style, as I had forgot to update my .vimrc. I will fix at least the last one before merge, but the functionality will be the same. How should we proceed with merging this @adventureloop @weinrank @oystedal? It does break some functionality, but one can argue that that functionality has always been broken ...
There are also some dead variables that will be removed once we update HE.","Fixed some issues with happy eyeballs and it mostly seems to work now. I see a memory leak in the buildbot that I don't want to spend time fixing, because it is related to HE and HE will be redone anyway when we introduce the policy manager. There is also a connection failed from one of the test runs that I can't reproduce on my machine (never get that far in the code).
If I don't hear anything, I will merge this code in the afternoon.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,115,2016-07-04T15:42:20Z,2016-07-07T14:35:32Z,2016-07-07T14:35:37Z,MERGED,True,965,701,11,https://github.com/kristrev,Resolver rework,46,[],https://github.com/NEAT-project/neat/pull/115,https://github.com/kristrev,3,https://github.com/NEAT-project/neat/pull/115#issuecomment-231096576,"The DNS resolver was one of the first pieces of code to be written and was based on incorrect assumptions and had several errors/weaknesses. This pull request contains a rework of the resolver, as agreed upon in the plenary. The main goal was to support multiple resolve requests in parallel (or at least support queuing up multiple requests), which the initial resolver did not support.
The new DNS resolver is still based around a struct neat_resolver. This data structure is assumed to be tied to a context and now contains a list of struct neat_resolver_request. When the user calls neat_resolve() (getaddrinfo() has been renamed), a request is created, added to the list and started if there are any source addresses available. In other words, there is currently no pacing. This will be future work, if we believe this should be the responsibility of the resolver and not the user.
We have added some arguments to neat_resolve() that neat_getaddrinfo() did not have. The resolve-callback is now store in request, so different callbacks can be used with the same resolver. There is also a user_data argument now, which is a pointer that is forwarded to the resolve-callback. The resolver is no longer part of the resolve-callback signature, since no user should need direct access to it.
The cleanup() callback is removed sine it was not used. It might be added later if we see a need for it.
Based on my tests, this code works fine and supports the features we discussed during the plenary. However, it breaks other pieces of code, namely happy eyeballs. It also does not follow the new coding style, as I had forgot to update my .vimrc. I will fix at least the last one before merge, but the functionality will be the same. How should we proceed with merging this @adventureloop @weinrank @oystedal? It does break some functionality, but one can argue that that functionality has always been broken ...
There are also some dead variables that will be removed once we update HE.","Buildbot is all green, merging.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,116,2016-07-04T16:24:06Z,2016-07-04T16:24:16Z,2016-07-04T16:24:16Z,MERGED,True,19,10,2,https://github.com/adventureloop,Add tracking of neat_flow into the neat_ctx,3,[],https://github.com/NEAT-project/neat/pull/116,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/116,"Track neat_flow objects in the neat_ctx using a simple list from
queue.h. All flows are free'd in neat_free_ctx now, this should help the
memory management in the code be much clearer.","Track neat_flow objects in the neat_ctx using a simple list from
queue.h. All flows are free'd in neat_free_ctx now, this should help the
memory management in the code be much clearer.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,117,2016-07-05T13:26:23Z,2016-07-05T13:26:33Z,2016-07-05T13:26:33Z,MERGED,True,60,0,4,https://github.com/adventureloop,Initial UDP Client Support,2,[],https://github.com/NEAT-project/neat/pull/117,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/117,Enables creation of a neat_flow with UDP_REQURIED property set that is able to speak to an outside udp server( nc -lu).,Enables creation of a neat_flow with UDP_REQURIED property set that is able to speak to an outside udp server( nc -lu).,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,120,2016-07-06T13:50:07Z,2016-07-06T13:50:21Z,2016-07-06T13:51:04Z,MERGED,True,156,18,2,https://github.com/adventureloop,UDP Support For NEAT,3,[],https://github.com/NEAT-project/neat/pull/120,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/120,"Excellent, this is hopefully the final patch set.
This set includes:

UDP Server support

accept emulation
tracking of both endpoints for a flow, outside of dns
flow look up based on srcAddr and dstAddr


Some small refactoring around recv buffers

The UDP code probably needs much more extensive testing, but I think having it merged now is more important.","Excellent, this is hopefully the final patch set.
This set includes:

UDP Server support

accept emulation
tracking of both endpoints for a flow, outside of dns
flow look up based on srcAddr and dstAddr


Some small refactoring around recv buffers

The UDP code probably needs much more extensive testing, but I think having it merged now is more important.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,121,2016-07-06T14:07:09Z,2016-07-06T14:07:17Z,2016-07-06T14:07:24Z,MERGED,True,5,20,1,https://github.com/adventureloop,Receive Buffer reallocation cleanup,2,[],https://github.com/NEAT-project/neat/pull/121,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/121,"UDP support add a function to resize receive buffers, move the sctp io_readable path to use the function instead of inline code.","UDP support add a function to resize receive buffers, move the sctp io_readable path to use the function instead of inline code.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,122,2016-07-06T17:50:38Z,2016-07-07T08:14:20Z,2016-07-15T09:08:17Z,MERGED,True,11,5,1,https://github.com/oystedal,Fixed debug time overflow.,1,[],https://github.com/NEAT-project/neat/pull/122,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/122,"I've changed the calculation of the debug timestamp to use integers instead. Should not overflow unless you leave it running for about 68 years.
Closes #119.","I've changed the calculation of the debug timestamp to use integers instead. Should not overflow unless you leave it running for about 68 years.
Closes #119.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,123,2016-07-13T19:16:10Z,2016-07-13T19:16:40Z,2016-07-13T19:16:52Z,MERGED,True,4896,75,12,https://github.com/mcmanus,Tcp tls merge,2,[],https://github.com/NEAT-project/neat/pull/123,https://github.com/mcmanus,1,https://github.com/NEAT-project/neat/pull/123,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,124,2016-07-25T13:21:44Z,2016-08-04T16:50:48Z,2016-08-04T16:50:48Z,MERGED,True,587,299,7,https://github.com/oystedal,Enable listening to multiple sockets,13,[],https://github.com/NEAT-project/neat/pull/124,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/124,"Quite a sizeable patch, but this allow a server to listen to multiple sockets~~, one for each protocol~~.

I have added a new struct, neat_pollable_socket (nps), which contains socket-specific data, such as fd, stack, family, type, addrs, and internal data.
neat_flow has been refactored to include one nps for communication, and a linked list of
nps for listening. A flow will use either the list or the nps for communication, not both.
Several functions refactored to include a pointer to an nps: io_readable, do_accept, etc.
The libuv handle used in uvpollable_cb now contains a pointer to a nps in its data field, instead of a pointer to a flow previously.
USRSCTP code has been mostly updated to use neat_pollable_socket.
UDP encapsulation of SCTP has been disabled in accept_resolve_cb, since it currently interferes with ""listening"" on the other UDP socket if present. I understand there's a UDP port for encapsulation, which we can use in this case. How do I specify the SCTP port when using UDP encapsulation? @tuexen: Do you have any suggestions on how to handle this?
Write/read size should be moved to nps, but this isn't critical.
neat_listen_via_kernel_ex will eventually replace neat_listen_via_kernel.","Quite a sizeable patch, but this allow a server to listen to multiple sockets~~, one for each protocol~~.

I have added a new struct, neat_pollable_socket (nps), which contains socket-specific data, such as fd, stack, family, type, addrs, and internal data.
neat_flow has been refactored to include one nps for communication, and a linked list of
nps for listening. A flow will use either the list or the nps for communication, not both.
Several functions refactored to include a pointer to an nps: io_readable, do_accept, etc.
The libuv handle used in uvpollable_cb now contains a pointer to a nps in its data field, instead of a pointer to a flow previously.
USRSCTP code has been mostly updated to use neat_pollable_socket.
UDP encapsulation of SCTP has been disabled in accept_resolve_cb, since it currently interferes with ""listening"" on the other UDP socket if present. I understand there's a UDP port for encapsulation, which we can use in this case. How do I specify the SCTP port when using UDP encapsulation? @tuexen: Do you have any suggestions on how to handle this?
Write/read size should be moved to nps, but this isn't critical.
neat_listen_via_kernel_ex will eventually replace neat_listen_via_kernel.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,124,2016-07-25T13:21:44Z,2016-08-04T16:50:48Z,2016-08-04T16:50:48Z,MERGED,True,587,299,7,https://github.com/oystedal,Enable listening to multiple sockets,13,[],https://github.com/NEAT-project/neat/pull/124,https://github.com/tuexen,2,https://github.com/NEAT-project/neat/pull/124#issuecomment-234960866,"Quite a sizeable patch, but this allow a server to listen to multiple sockets~~, one for each protocol~~.

I have added a new struct, neat_pollable_socket (nps), which contains socket-specific data, such as fd, stack, family, type, addrs, and internal data.
neat_flow has been refactored to include one nps for communication, and a linked list of
nps for listening. A flow will use either the list or the nps for communication, not both.
Several functions refactored to include a pointer to an nps: io_readable, do_accept, etc.
The libuv handle used in uvpollable_cb now contains a pointer to a nps in its data field, instead of a pointer to a flow previously.
USRSCTP code has been mostly updated to use neat_pollable_socket.
UDP encapsulation of SCTP has been disabled in accept_resolve_cb, since it currently interferes with ""listening"" on the other UDP socket if present. I understand there's a UDP port for encapsulation, which we can use in this case. How do I specify the SCTP port when using UDP encapsulation? @tuexen: Do you have any suggestions on how to handle this?
Write/read size should be moved to nps, but this isn't critical.
neat_listen_via_kernel_ex will eventually replace neat_listen_via_kernel.","Does this mean that a server can't listen on multiple addresses for the same protocol? How do you envision to support SCTP endpoints listening on multiple IP addresses?
I don't understand the question regarding UDP encapsulation? The user of the SCTP stack (kernel or userland) doesn't see the UDP socket at all. It always looks like a normal SCTP socket. UDP encapsulation is enabled via a socket option. In case of a kernel implementation, the kernel completely deals with the UDP handling. There is no UDP socket exposed to the applications. In case of a userland stack, UDP encapsulated packets are just provided to the stack via an additional input method. Similar to IPv4 and IPv6. I don't see why UDP encapsulation must be disabled. The neat code must head with the case that UDP sockets are bound by other processes anyway.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,124,2016-07-25T13:21:44Z,2016-08-04T16:50:48Z,2016-08-04T16:50:48Z,MERGED,True,587,299,7,https://github.com/oystedal,Enable listening to multiple sockets,13,[],https://github.com/NEAT-project/neat/pull/124,https://github.com/oystedal,3,https://github.com/NEAT-project/neat/pull/124#issuecomment-234973394,"Quite a sizeable patch, but this allow a server to listen to multiple sockets~~, one for each protocol~~.

I have added a new struct, neat_pollable_socket (nps), which contains socket-specific data, such as fd, stack, family, type, addrs, and internal data.
neat_flow has been refactored to include one nps for communication, and a linked list of
nps for listening. A flow will use either the list or the nps for communication, not both.
Several functions refactored to include a pointer to an nps: io_readable, do_accept, etc.
The libuv handle used in uvpollable_cb now contains a pointer to a nps in its data field, instead of a pointer to a flow previously.
USRSCTP code has been mostly updated to use neat_pollable_socket.
UDP encapsulation of SCTP has been disabled in accept_resolve_cb, since it currently interferes with ""listening"" on the other UDP socket if present. I understand there's a UDP port for encapsulation, which we can use in this case. How do I specify the SCTP port when using UDP encapsulation? @tuexen: Do you have any suggestions on how to handle this?
Write/read size should be moved to nps, but this isn't critical.
neat_listen_via_kernel_ex will eventually replace neat_listen_via_kernel.","Does this mean that a server can't listen on multiple addresses for the same protocol?

The code can (and most likely should) be updated so that it can listen on multiple addresses. This should only require modifications in accept_resolve_cb such that all local addresses are enumerated and listened on. Apart from this, there's no hard limitation on having only one socket per protocol, so this shouldn't be problematic to implement.

The user of the SCTP stack (kernel or userland) doesn't see the UDP socket at all. It always looks like a normal SCTP socket. UDP encapsulation is enabled via a socket option.

Thanks for clearing this up. When I tested listening on SCTP, UDP, and SCTP/UDP, I got EADDRINUSE, which I wrongly assumed was because the UDP and SCTP/UDP sockets would use the same port. Thus, if I understand correctly, you can't have an SCTP and an SCTP/UDP socket bound to the same port. In this case, does an SCTP/UDP socket allow for communication both with and without encapsulation?
In either case, I'll update the code to not disallow SCTP/UDP.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,124,2016-07-25T13:21:44Z,2016-08-04T16:50:48Z,2016-08-04T16:50:48Z,MERGED,True,587,299,7,https://github.com/oystedal,Enable listening to multiple sockets,13,[],https://github.com/NEAT-project/neat/pull/124,https://github.com/tuexen,4,https://github.com/NEAT-project/neat/pull/124#issuecomment-234985675,"Quite a sizeable patch, but this allow a server to listen to multiple sockets~~, one for each protocol~~.

I have added a new struct, neat_pollable_socket (nps), which contains socket-specific data, such as fd, stack, family, type, addrs, and internal data.
neat_flow has been refactored to include one nps for communication, and a linked list of
nps for listening. A flow will use either the list or the nps for communication, not both.
Several functions refactored to include a pointer to an nps: io_readable, do_accept, etc.
The libuv handle used in uvpollable_cb now contains a pointer to a nps in its data field, instead of a pointer to a flow previously.
USRSCTP code has been mostly updated to use neat_pollable_socket.
UDP encapsulation of SCTP has been disabled in accept_resolve_cb, since it currently interferes with ""listening"" on the other UDP socket if present. I understand there's a UDP port for encapsulation, which we can use in this case. How do I specify the SCTP port when using UDP encapsulation? @tuexen: Do you have any suggestions on how to handle this?
Write/read size should be moved to nps, but this isn't critical.
neat_listen_via_kernel_ex will eventually replace neat_listen_via_kernel.","The SCTP port number space and the UDP port number space are independent. UDP encaps uses most likely UDP port 9899 (that is the IANA assigned one). As long as you don't use the same port for pure UDP communication, you should be fine. However, it makes sense to trace down why you go an error.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,124,2016-07-25T13:21:44Z,2016-08-04T16:50:48Z,2016-08-04T16:50:48Z,MERGED,True,587,299,7,https://github.com/oystedal,Enable listening to multiple sockets,13,[],https://github.com/NEAT-project/neat/pull/124,https://github.com/oystedal,5,https://github.com/NEAT-project/neat/pull/124#issuecomment-235041053,"Quite a sizeable patch, but this allow a server to listen to multiple sockets~~, one for each protocol~~.

I have added a new struct, neat_pollable_socket (nps), which contains socket-specific data, such as fd, stack, family, type, addrs, and internal data.
neat_flow has been refactored to include one nps for communication, and a linked list of
nps for listening. A flow will use either the list or the nps for communication, not both.
Several functions refactored to include a pointer to an nps: io_readable, do_accept, etc.
The libuv handle used in uvpollable_cb now contains a pointer to a nps in its data field, instead of a pointer to a flow previously.
USRSCTP code has been mostly updated to use neat_pollable_socket.
UDP encapsulation of SCTP has been disabled in accept_resolve_cb, since it currently interferes with ""listening"" on the other UDP socket if present. I understand there's a UDP port for encapsulation, which we can use in this case. How do I specify the SCTP port when using UDP encapsulation? @tuexen: Do you have any suggestions on how to handle this?
Write/read size should be moved to nps, but this isn't critical.
neat_listen_via_kernel_ex will eventually replace neat_listen_via_kernel.","Ah, I see now. I was under the impression that enabling UDP encapsulation would exclude non-encapsulated SCTP connections, but this isn't the case. Sorry for creating confusion.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,124,2016-07-25T13:21:44Z,2016-08-04T16:50:48Z,2016-08-04T16:50:48Z,MERGED,True,587,299,7,https://github.com/oystedal,Enable listening to multiple sockets,13,[],https://github.com/NEAT-project/neat/pull/124,https://github.com/oystedal,6,https://github.com/NEAT-project/neat/pull/124#issuecomment-235291710,"Quite a sizeable patch, but this allow a server to listen to multiple sockets~~, one for each protocol~~.

I have added a new struct, neat_pollable_socket (nps), which contains socket-specific data, such as fd, stack, family, type, addrs, and internal data.
neat_flow has been refactored to include one nps for communication, and a linked list of
nps for listening. A flow will use either the list or the nps for communication, not both.
Several functions refactored to include a pointer to an nps: io_readable, do_accept, etc.
The libuv handle used in uvpollable_cb now contains a pointer to a nps in its data field, instead of a pointer to a flow previously.
USRSCTP code has been mostly updated to use neat_pollable_socket.
UDP encapsulation of SCTP has been disabled in accept_resolve_cb, since it currently interferes with ""listening"" on the other UDP socket if present. I understand there's a UDP port for encapsulation, which we can use in this case. How do I specify the SCTP port when using UDP encapsulation? @tuexen: Do you have any suggestions on how to handle this?
Write/read size should be moved to nps, but this isn't critical.
neat_listen_via_kernel_ex will eventually replace neat_listen_via_kernel.","Does this mean that a server can't listen on multiple addresses for the same protocol? How do you envision to support SCTP endpoints listening on multiple IP addresses?

Unless the optional argument local_name is specified to neat_accept, it will listen on all available local addresses (i.e. IPv4 address 0.0.0.0). If you specify a local name, the resolved address will be used for listening. AFAICS, this should allow any protocol to listen on all local addresses on a machine.
If we want to support listening to a proper subset of the available addresses, we would have to change neat_accept such that

it may be called multiple times on a flow, and
it does not operate on any variables in the neat_flow struct, since these must be independent of all sockets on a flow used to accept incoming connections.

If this is a use case we want to support, then I'll make the necessary changes.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,124,2016-07-25T13:21:44Z,2016-08-04T16:50:48Z,2016-08-04T16:50:48Z,MERGED,True,587,299,7,https://github.com/oystedal,Enable listening to multiple sockets,13,[],https://github.com/NEAT-project/neat/pull/124,https://github.com/tuexen,7,https://github.com/NEAT-project/neat/pull/124#issuecomment-235398911,"Quite a sizeable patch, but this allow a server to listen to multiple sockets~~, one for each protocol~~.

I have added a new struct, neat_pollable_socket (nps), which contains socket-specific data, such as fd, stack, family, type, addrs, and internal data.
neat_flow has been refactored to include one nps for communication, and a linked list of
nps for listening. A flow will use either the list or the nps for communication, not both.
Several functions refactored to include a pointer to an nps: io_readable, do_accept, etc.
The libuv handle used in uvpollable_cb now contains a pointer to a nps in its data field, instead of a pointer to a flow previously.
USRSCTP code has been mostly updated to use neat_pollable_socket.
UDP encapsulation of SCTP has been disabled in accept_resolve_cb, since it currently interferes with ""listening"" on the other UDP socket if present. I understand there's a UDP port for encapsulation, which we can use in this case. How do I specify the SCTP port when using UDP encapsulation? @tuexen: Do you have any suggestions on how to handle this?
Write/read size should be moved to nps, but this isn't critical.
neat_listen_via_kernel_ex will eventually replace neat_listen_via_kernel.",I would expect that local_name could be a comma separated list of IP-addresses (at least for SCTP) and you would use sctp_bindx() to bind to them. At least in the future...,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,129,2016-08-08T12:13:39Z,2016-08-08T12:14:03Z,2016-08-29T14:52:32Z,MERGED,True,13,17,1,https://github.com/weinrank,Fix CMAKE_INSTALL_PREFIX support,1,[],https://github.com/NEAT-project/neat/pull/129,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/129,Fix #127,Fix #127,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,130,2016-08-08T14:42:11Z,2016-08-09T09:05:07Z,2016-08-29T14:51:49Z,MERGED,True,5,6,2,https://github.com/weinrank,Fix scan-build warnings,4,[],https://github.com/NEAT-project/neat/pull/130,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/130,Minor changes to silence scan-build warnings,Minor changes to silence scan-build warnings,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,132,2016-08-12T12:45:10Z,2016-08-16T11:40:31Z,2016-08-16T11:40:31Z,MERGED,True,30,25,1,https://github.com/bagder,make public functions visible!,2,[],https://github.com/NEAT-project/neat/pull/132,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/132,"... just to show the idea, this patch is INCOMPLETE.
Please consider this a show case for further discussions. I suggest we explicitly mark and set public functions visible so that all other functions can be hidden when we make the library. If we agree on that this is a good idea, I'm prepared to polish up this patch to actually become a candidate for merge.
I'm currently trying out to use neat in a build of Firefox and I just couldn't make it link properly until I set visibility like this. I realize that is not a good reason for neat to do anything, but is mostly an anecdote for you.
Other libraries do this sort of symbol hiding/showing too, including libcurl.","... just to show the idea, this patch is INCOMPLETE.
Please consider this a show case for further discussions. I suggest we explicitly mark and set public functions visible so that all other functions can be hidden when we make the library. If we agree on that this is a good idea, I'm prepared to polish up this patch to actually become a candidate for merge.
I'm currently trying out to use neat in a build of Firefox and I just couldn't make it link properly until I set visibility like this. I realize that is not a good reason for neat to do anything, but is mostly an anecdote for you.
Other libraries do this sort of symbol hiding/showing too, including libcurl.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,132,2016-08-12T12:45:10Z,2016-08-16T11:40:31Z,2016-08-16T11:40:31Z,MERGED,True,30,25,1,https://github.com/bagder,make public functions visible!,2,[],https://github.com/NEAT-project/neat/pull/132,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/132#issuecomment-239440549,"... just to show the idea, this patch is INCOMPLETE.
Please consider this a show case for further discussions. I suggest we explicitly mark and set public functions visible so that all other functions can be hidden when we make the library. If we agree on that this is a good idea, I'm prepared to polish up this patch to actually become a candidate for merge.
I'm currently trying out to use neat in a build of Firefox and I just couldn't make it link properly until I set visibility like this. I realize that is not a good reason for neat to do anything, but is mostly an anecdote for you.
Other libraries do this sort of symbol hiding/showing too, including libcurl.","I don't have any prior experience with this particular concept, but it looks like a fairly trivial change. If it makes it easier to link against NEAT from existing code bases (which I'm guessing it does) then it's something we definitely should have.
All publicly available functions are/should be in neat.h, so there's no need to consider the other headers as far as I can see.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,132,2016-08-12T12:45:10Z,2016-08-16T11:40:31Z,2016-08-16T11:40:31Z,MERGED,True,30,25,1,https://github.com/bagder,make public functions visible!,2,[],https://github.com/NEAT-project/neat/pull/132,https://github.com/bagder,3,https://github.com/NEAT-project/neat/pull/132#issuecomment-239737425,"... just to show the idea, this patch is INCOMPLETE.
Please consider this a show case for further discussions. I suggest we explicitly mark and set public functions visible so that all other functions can be hidden when we make the library. If we agree on that this is a good idea, I'm prepared to polish up this patch to actually become a candidate for merge.
I'm currently trying out to use neat in a build of Firefox and I just couldn't make it link properly until I set visibility like this. I realize that is not a good reason for neat to do anything, but is mostly an anecdote for you.
Other libraries do this sort of symbol hiding/showing too, including libcurl.","On Fri, 12 Aug 2016, oystedal wrote:

If it makes it easier to link against NEAT from existing code bases (which
I'm guessing it does) then it's something we definitely should have.

It does make coexistance easier, it makes linking faster and more.
Actually the only problem I have with this right change is making it detected
and used by cmake in a portable fashion. I'm one in the old autoconf guard and
the checks for this in the curl configure script look like this:
https://github.com/curl/curl/blob/master/m4/curl-compilers.m4#L1352
Speaking of that, is the level of desired/required portability for NEAT
documented anywhere? I have a feeling that curl aims way different than NEAT
so we could get away with something simpler here.

/ daniel.haxx.se",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,132,2016-08-12T12:45:10Z,2016-08-16T11:40:31Z,2016-08-16T11:40:31Z,MERGED,True,30,25,1,https://github.com/bagder,make public functions visible!,2,[],https://github.com/NEAT-project/neat/pull/132,https://github.com/oystedal,4,https://github.com/NEAT-project/neat/pull/132#issuecomment-239742098,"... just to show the idea, this patch is INCOMPLETE.
Please consider this a show case for further discussions. I suggest we explicitly mark and set public functions visible so that all other functions can be hidden when we make the library. If we agree on that this is a good idea, I'm prepared to polish up this patch to actually become a candidate for merge.
I'm currently trying out to use neat in a build of Firefox and I just couldn't make it link properly until I set visibility like this. I realize that is not a good reason for neat to do anything, but is mostly an anecdote for you.
Other libraries do this sort of symbol hiding/showing too, including libcurl.","Our current target platforms are BSD and Linux, so IMO you can get away with not checking it as long as it works for GCC and clang, and just leave it as a TODO in the cmake file.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,132,2016-08-12T12:45:10Z,2016-08-16T11:40:31Z,2016-08-16T11:40:31Z,MERGED,True,30,25,1,https://github.com/bagder,make public functions visible!,2,[],https://github.com/NEAT-project/neat/pull/132,https://github.com/bagder,5,https://github.com/NEAT-project/neat/pull/132#issuecomment-240040647,"... just to show the idea, this patch is INCOMPLETE.
Please consider this a show case for further discussions. I suggest we explicitly mark and set public functions visible so that all other functions can be hidden when we make the library. If we agree on that this is a good idea, I'm prepared to polish up this patch to actually become a candidate for merge.
I'm currently trying out to use neat in a build of Firefox and I just couldn't make it link properly until I set visibility like this. I realize that is not a good reason for neat to do anything, but is mostly an anecdote for you.
Other libraries do this sort of symbol hiding/showing too, including libcurl.","For working with just clang and gcc I believe we don't even need a cmake check. I updated the comment to reflect this, and I went through the functions and I believe I already marked all public functions with NEAT_EXTERN.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,136,2016-08-19T12:22:14Z,2016-08-22T18:18:40Z,2016-08-22T18:18:40Z,MERGED,True,16,10,1,https://github.com/bagder,neat_core: check mallocs and bail out without memory leaks,1,[],https://github.com/NEAT-project/neat/pull/136,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/136,Addressing a few unchecked mallocs and memory leaks triggered by OOM.,Addressing a few unchecked mallocs and memory leaks triggered by OOM.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,137,2016-08-19T12:39:59Z,2016-08-22T18:19:34Z,2016-08-22T18:19:34Z,MERGED,True,18,13,4,https://github.com/bagder,neat_resolver_handle: make the callback use neat_error_code,1,[],https://github.com/NEAT-project/neat/pull/137,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/137,... in preparation for properly returning error on malloc fails etc.,... in preparation for properly returning error on malloc fails etc.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,139,2016-08-22T20:56:57Z,2016-08-26T15:30:32Z,2016-08-29T14:51:35Z,MERGED,True,3,3,1,https://github.com/weinrank,neat_core : fix compile errors for neat_error_code,1,[],https://github.com/NEAT-project/neat/pull/139,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/139,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,139,2016-08-22T20:56:57Z,2016-08-26T15:30:32Z,2016-08-29T14:51:35Z,MERGED,True,3,3,1,https://github.com/weinrank,neat_core : fix compile errors for neat_error_code,1,[],https://github.com/NEAT-project/neat/pull/139,https://github.com/bagder,2,https://github.com/NEAT-project/neat/pull/139#issuecomment-241551373,,👍 looks good to me!,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,142,2016-08-23T08:35:53Z,2016-11-03T16:50:26Z,2016-11-03T16:50:26Z,CLOSED,False,41,34,4,https://github.com/bagder,Propagate errors from neat_addr_update_src_list,2,[],https://github.com/NEAT-project/neat/pull/142,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/142,"Baby steps. Made neat_addr_update_src_list return error code and propagate that up the chain, primarily for OOM errors.","Baby steps. Made neat_addr_update_src_list return error code and propagate that up the chain, primarily for OOM errors.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,142,2016-08-23T08:35:53Z,2016-11-03T16:50:26Z,2016-11-03T16:50:26Z,CLOSED,False,41,34,4,https://github.com/bagder,Propagate errors from neat_addr_update_src_list,2,[],https://github.com/NEAT-project/neat/pull/142,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/142#issuecomment-243402918,"Baby steps. Made neat_addr_update_src_list return error code and propagate that up the chain, primarily for OOM errors.","Sorry about the time it has taken to check this.
Does not compile on BSD, http://buildbot.nplab.de:28010/builders/freebsd-11-x64/builds/410/steps/compile/logs/stdio, typo net_error_code on line 176: https://github.com/NEAT-project/neat/pull/142/files#diff-63da37fd7113f0a04b30054ef0658b2dR176",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,142,2016-08-23T08:35:53Z,2016-11-03T16:50:26Z,2016-11-03T16:50:26Z,CLOSED,False,41,34,4,https://github.com/bagder,Propagate errors from neat_addr_update_src_list,2,[],https://github.com/NEAT-project/neat/pull/142,https://github.com/bagder,3,https://github.com/NEAT-project/neat/pull/142#issuecomment-243411728,"Baby steps. Made neat_addr_update_src_list return error code and propagate that up the chain, primarily for OOM errors.","Stupid typo (and I have no BSD machine to test build on). Fixed now, I think.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,142,2016-08-23T08:35:53Z,2016-11-03T16:50:26Z,2016-11-03T16:50:26Z,CLOSED,False,41,34,4,https://github.com/bagder,Propagate errors from neat_addr_update_src_list,2,[],https://github.com/NEAT-project/neat/pull/142,https://github.com/oystedal,4,https://github.com/NEAT-project/neat/pull/142#issuecomment-243420388,"Baby steps. Made neat_addr_update_src_list return error code and propagate that up the chain, primarily for OOM errors.","Hm, BSD-bots still complaining: http://buildbot.nplab.de:28010/builders/freebsd-11-x64/builds/411/steps/compile/logs/stdio. I only glanced quickly over the previous log for the first error and failed to notice these as well.
Anyway, I can fix the remaining errors either tonight or tomorrow morning, considering I have a FreeBSD VM at hand.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,142,2016-08-23T08:35:53Z,2016-11-03T16:50:26Z,2016-11-03T16:50:26Z,CLOSED,False,41,34,4,https://github.com/bagder,Propagate errors from neat_addr_update_src_list,2,[],https://github.com/NEAT-project/neat/pull/142,https://github.com/bagder,5,https://github.com/NEAT-project/neat/pull/142#issuecomment-243421839,"Baby steps. Made neat_addr_update_src_list return error code and propagate that up the chain, primarily for OOM errors.","Ah yes, neat_bsd_route_recv needs to match the proto that libuv sets as it is a callback for libuv so this change isn't a good one.
Either we ignore errors in the callback or we need to use some other mechanism to terminate the libuv loop.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,142,2016-08-23T08:35:53Z,2016-11-03T16:50:26Z,2016-11-03T16:50:26Z,CLOSED,False,41,34,4,https://github.com/bagder,Propagate errors from neat_addr_update_src_list,2,[],https://github.com/NEAT-project/neat/pull/142,https://github.com/naeemk,6,https://github.com/NEAT-project/neat/pull/142#issuecomment-257291208,"Baby steps. Made neat_addr_update_src_list return error code and propagate that up the chain, primarily for OOM errors.",@bagder @oystedal any update on this? I see it's already in conflict zone :),True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,142,2016-08-23T08:35:53Z,2016-11-03T16:50:26Z,2016-11-03T16:50:26Z,CLOSED,False,41,34,4,https://github.com/bagder,Propagate errors from neat_addr_update_src_list,2,[],https://github.com/NEAT-project/neat/pull/142,https://github.com/oystedal,7,https://github.com/NEAT-project/neat/pull/142#issuecomment-258202602,"Baby steps. Made neat_addr_update_src_list return error code and propagate that up the chain, primarily for OOM errors.","This PR is now part of #177, closing.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,145,2016-08-30T10:00:23Z,2016-08-30T12:11:57Z,2016-08-30T12:11:57Z,MERGED,True,4,2,1,https://github.com/bagder,he_resolve_cb: return error on NULL results or NULL lh_first,1,[],https://github.com/NEAT-project/neat/pull/145,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/145,"... instead of using a bad assert.
Fixes #135","... instead of using a bad assert.
Fixes #135",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,145,2016-08-30T10:00:23Z,2016-08-30T12:11:57Z,2016-08-30T12:11:57Z,MERGED,True,4,2,1,https://github.com/bagder,he_resolve_cb: return error on NULL results or NULL lh_first,1,[],https://github.com/NEAT-project/neat/pull/145,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/145#issuecomment-243400654,"... instead of using a bad assert.
Fixes #135","There are some quite substantial upcoming changes to the core logic, including this callback, see https://github.com/NEAT-project/neat/blob/oystedal/pm_interface/neat_core.c#L1111 (the code in the callback in this branch is very much a WIP). As such, this assert is already slated for removal. I'll still merge this as an intermediate solution if you want me to.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,145,2016-08-30T10:00:23Z,2016-08-30T12:11:57Z,2016-08-30T12:11:57Z,MERGED,True,4,2,1,https://github.com/bagder,he_resolve_cb: return error on NULL results or NULL lh_first,1,[],https://github.com/NEAT-project/neat/pull/145,https://github.com/bagder,3,https://github.com/NEAT-project/neat/pull/145#issuecomment-243410199,"... instead of using a bad assert.
Fixes #135","It depends on how long you think it'll be until a ""proper"" solution can be merged. I mean, I can easily just use my local patch in the mean time but it could turn out cumbersome if it will an extended period.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,145,2016-08-30T10:00:23Z,2016-08-30T12:11:57Z,2016-08-30T12:11:57Z,MERGED,True,4,2,1,https://github.com/bagder,he_resolve_cb: return error on NULL results or NULL lh_first,1,[],https://github.com/NEAT-project/neat/pull/145,https://github.com/oystedal,4,https://github.com/NEAT-project/neat/pull/145#issuecomment-243418913,"... instead of using a bad assert.
Fixes #135","I don't have any precise timeframe for when the new code will be merged, so I suppose it's better/easier to merge this at this point.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,146,2016-08-30T15:35:29Z,2016-08-30T15:44:59Z,2017-01-23T23:30:09Z,MERGED,True,1,1,1,https://github.com/weinrank,neat_log : fix calcuation of elapsed time,1,[],https://github.com/NEAT-project/neat/pull/146,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/146,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,146,2016-08-30T15:35:29Z,2016-08-30T15:44:59Z,2017-01-23T23:30:09Z,MERGED,True,1,1,1,https://github.com/weinrank,neat_log : fix calcuation of elapsed time,1,[],https://github.com/NEAT-project/neat/pull/146,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/146#issuecomment-243484098,,"Damn, I should have gotten that right the first time.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,146,2016-08-30T15:35:29Z,2016-08-30T15:44:59Z,2017-01-23T23:30:09Z,MERGED,True,1,1,1,https://github.com/weinrank,neat_log : fix calcuation of elapsed time,1,[],https://github.com/NEAT-project/neat/pull/146,https://github.com/weinrank,3,https://github.com/NEAT-project/neat/pull/146#issuecomment-243484373,,😄,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/147,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/147#issuecomment-244189664,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","I'd normally take on an issue like this, however, I'm currently busy on another part of the project. I might be able to look at this next month, depending on circumstances, unless someone else has a look at this.
I glanced quickly over the code, and I think your approach should work, ideally. I don't find the fact that it doesn't work surprising, since it's a use case that hasn't really been looked into yet.
Libuv does have an example program where an event loop is embedded inside another. I don't have the link at hand, but if you find it, you could give it a spin and check if that example works, just to rule out the possibility that libuv doesn't support it on your system.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,3,https://github.com/NEAT-project/neat/pull/147#issuecomment-244225850,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","Thanks, that was useful input anyway and I'll proceed and write up a more raw libuv using snippet and see if that works for me before digging deeper into this.
I'll be back when I have more.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,4,https://github.com/NEAT-project/neat/pull/147#issuecomment-245529449,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","This probably doesn't test the exact same flow, but I wrote up a test code that uses libuv directly and I extract only the backend file descriptor to know when to act and it downloads my 512MB test file from a localhost web server just fine: https://gist.github.com/bagder/ffb613e3c3c5f41813b31fc09ef1c261",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/weinrank,5,https://github.com/NEAT-project/neat/pull/147#issuecomment-245533231,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","I just played a bit with the code from your PR:

When i removed the rc > 1 condition and so neat_start_event_loop(ctx, NEAT_RUN_ONCE); is called after the timeout the code works.
If I add POLLOUT to the poll events, the code also works.

This might not be a helpful contribution to the issue but maybe it helps...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,6,https://github.com/NEAT-project/neat/pull/147#issuecomment-245534284,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","Thanks!
Oh right, it definitely needs to call for the timeout case as well. Interesting that it needs POLLOUT as the documentation for epoll says it'll signal readable when there's something to do.
This will take me further!",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,7,https://github.com/NEAT-project/neat/pull/147#issuecomment-245577057,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","When I invoke neat_start_event_loop even when it times out (1000 ms) it successfully downloads a URL. That seems like a good fix to the example code. (POLLOUT doesn't seem to make a difference for me)
However, when I try requesting a page from for example www.haxx.se which is my site, on a 2~ms RTT time from me and I have a fast DNS server accessible I still get two timeouts so the entire operation takes over 2 seconds for a 17 bytes response body. Shouldn't such a case be driven fine with socket activity alone without timeouts?
And it shows that for an app like this, exporting a ""maximum time to wait"" timeout value in the API would be useful.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/weinrank,8,https://github.com/NEAT-project/neat/pull/147#issuecomment-245593187,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","How about this:
9d1f8a2

POLLOUT makes a difference for me
if rc>0 run it once
on timeout do nothing

Works for me and this specific example - might be the wrong strategy in a bigger picture.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,9,https://github.com/NEAT-project/neat/pull/147#issuecomment-245595297,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","You on Linux too? Because that does not work for me! If I make the change ""on timeout do nothing"", my test just stops doing anything after 1.2 milliseconds and then loops around timeouts. The other two changes don't have any effect for my test case. Puzzling!
In my case, my target host name returns AAAA entries from DNS but IPv6 doesn't work but I can't think of much other things that are out of the ordinary.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,10,https://github.com/NEAT-project/neat/pull/147#issuecomment-245596135,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.",output from the example when tested against www.haxx.se from my machine just now,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/weinrank,11,https://github.com/NEAT-project/neat/pull/147#issuecomment-245596647,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","OSX, on Linux the behavior is exactly how you mentioned... mh...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,12,https://github.com/NEAT-project/neat/pull/147#issuecomment-248909450,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","The POLLOUT thing is probably just related to the fact that epoll on Linux doesn't need it, but whatever is used on mac needs that. An unfortunate platform difference but then adding POLLOUT to the example's use of poll() doesn't affect anything on Linux so it should be fine.
When I increase the timeout and add some more instrumental printf() debugging, it is obvious that we don't get the epoll backend fd to trigger action when there's incoming UDP responses for the name resolves. Only once we call neat again after a time-out, the loop runs and then it handles the received DNS responses. With a 5000 ms timeout I can see this:
[   0.000899][DBG] neat_run_event_cb
[   0.000928][INF] uv_udp_recv_start was called
[   0.000968][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.000981][INF] uv_udp_recv_start was called
[   0.001008][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001023][INF] uv_udp_recv_start was called
[   0.001048][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001061][INF] uv_udp_recv_start was called
[   0.001086][DBG] neat_resolver_send_query - Request for haxx.se sent
Waiting on 1 streams...
[   5.003691][DBG] neat_start_event_loop
[   5.003769][INF] neat_resolver_dns_recv_cb entered
[   5.003800][INF] neat_resolver_dns_recv_cb entered
[   5.003805][INF] neat_resolver_dns_recv_cb entered
[   5.003816][INF] neat_resolver_dns_recv_cb entered

I have yet to figure out why this is so. I added the uv_udp_recv_start was called outputs just to see how the UDP handle is added to libuv and from all I can tell, that should be enough.
And then it goes on a little further and returns out from the loop again only to not trigger on anything further and it'll sit through another time-out:
[   5.007517][INF] neat_resolver_dns_recv_cb entered
[   5.007525][INF] neat_resolver_dns_recv_cb entered
[   5.007537][INF] neat_resolver_dns_recv_cb entered
Waiting on 1 streams...
[  10.007787][DBG] neat_start_event_loop
[  10.007825][DBG] he_resolve_cb
[  10.007844][INF] Happy-Eyeballs results:
[  10.007860][INF]      IPv4 - 192.168.0.192:0 -> 80.67.6.50:80
[  10.007891][DBG] neat_connect
[  10.007949][INF] neat_connect: Bind fd 23 to 192.168.0.192

... and from hereon everything looks sensible.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,13,https://github.com/NEAT-project/neat/pull/147#issuecomment-252593108,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","this example is now broken due to API updates, see also #162",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,14,https://github.com/NEAT-project/neat/pull/147#issuecomment-252604758,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","After I fix the neat_set_property use so that it builds again, this example now takes 15 seconds...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/oystedal,15,https://github.com/NEAT-project/neat/pull/147#issuecomment-252630211,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.",Takes two seconds for me.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,16,https://github.com/NEAT-project/neat/pull/147#issuecomment-252630903,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","On Linux? And I should clarify that it takes 15 seconds with 5 seconds poll waits, which means that it times out three times. if we lower the timeout it'll of course run faster. (I'm on Linux kernel 4.5.4 without  IPv6 working).
Two seconds sounds like it triggered at least two timeouts for  you as well?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/oystedal,17,https://github.com/NEAT-project/neat/pull/147#issuecomment-252634920,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","The new Happy Eyeballs code is timeout-based (currently 10ms between each connection attempt), so if you specify excessive timeouts it is certainly going to slow things down. I would assume this is where uv_backend_timeout() comes into play. I'll give it a shot, and if it works, I'll expose it alongside the backend fd.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/oystedal,18,https://github.com/NEAT-project/neat/pull/147#issuecomment-252637458,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.",Give this a try: 80cef52,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,19,https://github.com/NEAT-project/neat/pull/147#issuecomment-252832442,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","That's helpful! It removed all but one longer wait. With added debug output that tells when it has exited poll due to timeout and how long the timeout was, it starts out like this:
[   0.000001][INF] neat_log_init - NEAT_LOG_LEVEL : default
[   0.000039][INF] neat_log_init - opening logfile ...
[   0.000047][DBG] neat_init_ctx
[   0.000268][DBG] neat_new_flow
[   0.000299][DBG] neat_set_property
[   0.000338][DBG] neat_set_operations
[   0.000348][DBG] updatePollHandle
[   0.000356][DBG] neat_open
[   0.000366][DBG] neat_add_event_cb
[   0.000374][INF] neat_add_event_cb - Added new callback for event type 0
[   0.000382][DBG] neat_add_event_cb
[   0.000389][INF] neat_add_event_cb - Added new callback for event type 2
[   0.000453][INF] Added 192.168.0.1 to resolver list
[   0.000470][DBG] neat_add_event_cb
[   0.000478][INF] neat_add_event_cb - Added new callback for event type 0
[   0.000486][DBG] send_properties_to_pm
[   0.000583][DBG] Added endpoint ""127.0.0.1@lo"" to PM request
[   0.000599][DBG] Added endpoint ""192.168.0.192@eth0"" to PM request
[   0.000611][DBG] Added endpoint ""::1@lo"" to PM request
[   0.000660][DBG] fe80::3285:a9ff:fe46:b619%eth0 is a link-local address, skipping
[   0.000678][DBG] neat_json_send_once
[   0.000709][DBG] neat_unix_json_socket_open
[   0.000719][DBG] Opening UNIX socket /home/daniel/.neat/neat_pm_socket
Opened flow 0
[   0.000755][DBG] neat_start_event_loop
[   0.000765][DBG] on_unix_json_connected
[   0.000774][DBG] Failed to connect to UNIX socket
[   0.000782][DBG] on_pm_error
[   0.000789][DBG] on_pm_error
[   0.000796][DBG] ===== Unable to communicate with PM, using fallback =====
[   0.000808][ERR] neat_start_request - No available src addresses
[   0.000851][INF] Available src-addresses:
[   0.000864][INF]  IPv4: 127.0.0.1/8
[   0.000872][DBG] neat_run_event_cb
[   0.001069][INF] uv_udp_recv_start was called
[   0.001120][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001137][INF] uv_udp_recv_start was called
[   0.001166][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001186][INF] uv_udp_recv_start was called
[   0.001217][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001236][INF] uv_udp_recv_start was called
[   0.001264][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001279][INF] uv_udp_recv_start was called
[   0.001320][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001336][INF] Available src-addresses:
[   0.001345][INF]  IPv4: 192.168.0.192/24
[   0.001353][INF]  IPv4: 127.0.0.1/8
[   0.001361][DBG] neat_run_event_cb
[   0.001394][INF] uv_udp_recv_start was called
[   0.001423][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001442][INF] uv_udp_recv_start was called
[   0.001468][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001493][INF] uv_udp_recv_start was called
[   0.001521][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001539][INF] uv_udp_recv_start was called
[   0.001565][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001580][INF] uv_udp_recv_start was called
[   0.001609][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001630][INF] Available src-addresses:
[   0.001639][INF]  IPv6: ::1/128 pref 4294967295 valid 4294967295
[   0.001647][INF]  IPv4: 192.168.0.192/24
[   0.001655][INF]  IPv4: 127.0.0.1/8
[   0.001663][DBG] neat_run_event_cb
[   0.001712][INF] uv_udp_recv_start was called
[   0.001736][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001752][INF] uv_udp_recv_start was called
[   0.001772][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001789][INF] uv_udp_recv_start was called
[   0.001809][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001825][INF] uv_udp_recv_start was called
[   0.001845][DBG] neat_resolver_send_query - Request for haxx.se sent
[   0.001859][DBG] on_pipe_close
[   0.001868][DBG] on_pm_close
[   0.001879][DBG] neat_get_backend_fd
[   0.001889][DBG] neat_get_backend_timeout
Waited 0 on 1 streams...
[   0.001902][DBG] neat_start_event_loop
[   0.001927][DBG] neat_get_backend_timeout
[   0.002041][DBG] neat_start_event_loop
[   0.002062][INF] neat_resolver_dns_recv_cb entered
[   0.002129][INF] neat_resolver_dns_recv_cb entered
[   0.002148][DBG] neat_get_backend_timeout
[   0.002950][DBG] neat_start_event_loop
[   0.002969][INF] neat_resolver_dns_recv_cb entered
[   0.002992][INF] neat_resolver_dns_recv_cb entered
[   0.003002][DBG] neat_get_backend_timeout
[   0.003825][DBG] neat_start_event_loop
[   0.003841][INF] neat_resolver_dns_recv_cb entered
[   0.003860][INF] neat_resolver_dns_recv_cb entered
[   0.003870][DBG] neat_get_backend_timeout
[   0.004086][DBG] neat_start_event_loop
[   0.004119][INF] neat_resolver_dns_recv_cb entered
[   0.004150][INF] neat_resolver_dns_recv_cb entered
[   0.004161][DBG] neat_get_backend_timeout
[   0.005128][DBG] neat_start_event_loop
[   0.005192][DBG] neat_get_backend_timeout
[   0.013549][DBG] neat_start_event_loop
[   0.013592][INF] neat_resolver_dns_recv_cb entered
[   0.013628][INF] neat_resolver_dns_recv_cb entered
[   0.013638][DBG] neat_get_backend_timeout
[   0.015582][DBG] neat_start_event_loop
[   0.015609][INF] neat_resolver_dns_recv_cb entered
[   0.015637][INF] neat_resolver_dns_recv_cb entered
[   0.015646][DBG] neat_get_backend_timeout
[   0.032398][DBG] neat_start_event_loop
[   0.032422][INF] neat_resolver_dns_recv_cb entered
[   0.032444][INF] neat_resolver_dns_recv_cb entered
[   0.032452][DBG] neat_get_backend_timeout
[   0.032584][DBG] neat_start_event_loop
[   0.032610][INF] neat_resolver_dns_recv_cb entered
[   0.032633][INF] neat_resolver_dns_recv_cb entered
[   0.032642][DBG] neat_get_backend_timeout
[   0.032754][DBG] neat_start_event_loop
[   0.032780][INF] neat_resolver_dns_recv_cb entered
[   0.032813][INF] neat_resolver_dns_recv_cb entered
[   0.032823][DBG] neat_get_backend_timeout
[   0.032832][DBG] neat_start_event_loop
[   0.032841][INF] neat_resolver_dns_recv_cb entered
[   0.032854][INF] neat_resolver_dns_recv_cb entered
[   0.032862][DBG] neat_get_backend_timeout
Waited 967 on 1 streams...
[   1.000898][DBG] neat_start_event_loop
[   1.000919][DBG] neat_get_backend_timeout
Waited 1 on 1 streams...
[   1.002022][DBG] neat_start_event_loop
[   1.002046][DBG] open_resolve_cb
[   1.002093][DBG] HE Candidate  0:       lo [ 1]      TCP/IPv4 <saddr 127.0.0.1> <dstaddr 80.67.6.50> port    80 priority 0
[   1.002104][DBG] HE Candidate  1:     eth0 [ 2]      TCP/IPv4 <saddr 192.168.0.192> <dstaddr 80.67.6.50> port    80 priority 1
[   1.002112][DBG] HE will now commence


[   1.002118][DBG] neat_connect
[   1.002134][INF] neat_connect: Bind fd 24 to 127.0.0.1
[   1.002152][WRN] Could not bind fd 24 socket to interface lo
[   1.002179][DBG] neat_connect: Connect failed for fd 24 connect error (22): Invalid argument
[   1.002188][DBG] neat_he_open: Connect failed with ret = -2
[   1.002195][DBG] neat_he_open:Release candidate
[   1.002203][DBG] neat_free_candidate
[   1.002214][INF] uv_udp_recv_stop was called
[   1.002229][INF] uv_udp_recv_stop was called
[   1.002241][INF] uv_udp_recv_stop was called
[   1.002251][INF] uv_udp_recv_stop was called
[   1.002271][INF] uv_udp_recv_stop was called
[   1.002281][INF] uv_udp_recv_stop was called
[   1.002292][INF] uv_udp_recv_stop was called
[   1.002302][INF] uv_udp_recv_stop was called
[   1.002311][INF] uv_udp_recv_stop was called
[   1.002321][INF] uv_udp_recv_stop was called
[   1.002331][INF] uv_udp_recv_stop was called
[   1.002341][INF] uv_udp_recv_stop was called
[   1.002351][INF] uv_udp_recv_stop was called
[   1.002361][INF] uv_udp_recv_stop was called
[   1.002377][DBG] free_handle_cb
[   1.002386][DBG] neat_get_backend_timeout
Waited 0 on 1 streams...
[   1.002396][DBG] neat_start_event_loop
[   1.002405][DBG] neat_get_backend_timeout
Waited 9 on 1 streams...
[   1.011496][DBG] neat_start_event_loop
[   1.011506][DBG] neat_connect
[   1.011522][INF] neat_connect: Bind fd 15 to 192.168.0.192
[   1.011542][WRN] Could not bind fd 15 socket to interface eth0",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/oystedal,20,https://github.com/NEAT-project/neat/pull/147#issuecomment-252902539,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","The longer timeout is a timeout in the DNS resolver code, which is as intended at this point. You may ignore that for now.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/kristrev,21,https://github.com/NEAT-project/neat/pull/147#issuecomment-252916592,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.",Note that any timeout value in the DNS resolver has been chosen by random and can be changed at will.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/oystedal,22,https://github.com/NEAT-project/neat/pull/147#issuecomment-262963141,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.","This PR has been dormant for quite some time now. What is the current status?

Should this be merged? I would say yes, but then it should probably also be added to the test as well.
Are there any other bugs/shortcomings preventing the use of NEAT_RUN_ONCE? I'll add the function for getting the backend fd timeout to the master branch if needed.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,147,2016-09-01T09:46:53Z,2016-11-25T16:45:40Z,2016-11-25T16:45:40Z,CLOSED,False,203,0,2,https://github.com/bagder,client_http_run_once example: use NEAT_RUN_ONCE,2,[],https://github.com/NEAT-project/neat/pull/147,https://github.com/bagder,23,https://github.com/NEAT-project/neat/pull/147#issuecomment-262965587,"This example extracts the backend fd and runs its own IO loop and
invokes neat_start_event_loop(ctx, NEAT_RUN_ONCE) for every action on
the backend fd.
NOTE this example doesn't seem to work and I would like someone to throw an eye on the example to see if the API is used wrongly and if so help me fix the example, or if the API is used correctly take a look at the NEAT code to see why it doesn't work!
This example is mostly a copy and paste from the client_http_get example and is supposed to be used with the exact same command line arguments.",I really need to use the RUN_ONCE approach for using NEAT in Firefox and to make that API work I need to know the timeout value one way or another. So I think having an example using that method of driving neat is a good idea.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,149,2016-09-15T12:08:31Z,2016-09-15T12:08:36Z,2016-09-15T12:12:18Z,MERGED,True,7,7,1,https://github.com/adventureloop,Resolve crashes due to multiple close attemps on the handle,1,[],https://github.com/NEAT-project/neat/pull/149,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/149,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,150,2016-09-19T08:40:48Z,2016-09-19T08:40:53Z,2016-09-19T08:40:55Z,MERGED,True,1,0,1,https://github.com/adventureloop,Stop sock type selection falling through in he,1,[],https://github.com/NEAT-project/neat/pull/150,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/150,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,151,2016-09-19T16:10:01Z,2016-09-19T16:10:22Z,2016-09-19T16:11:02Z,MERGED,True,937,7,3,https://github.com/adventureloop,Tj/udptest,22,[],https://github.com/NEAT-project/neat/pull/151,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/151,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,152,2016-09-20T10:14:19Z,2016-09-20T10:14:24Z,2016-09-20T10:14:24Z,MERGED,True,235,11,5,https://github.com/weinrank,Weinrank/listen test,15,[],https://github.com/NEAT-project/neat/pull/152,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/152,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,153,2016-09-20T10:15:12Z,2016-09-20T10:15:18Z,2016-09-20T10:15:18Z,MERGED,True,1847,0,8,https://github.com/adventureloop,Tj/dscp,6,[],https://github.com/NEAT-project/neat/pull/153,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/153,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,155,2016-09-20T16:58:23Z,2016-10-06T13:15:18Z,2016-10-31T20:40:02Z,MERGED,True,246,5,13,https://github.com/irl,Contributes Debian packaging for libneat,1,[],https://github.com/NEAT-project/neat/pull/155,https://github.com/irl,1,https://github.com/NEAT-project/neat/pull/155,"This is way off being accepted into actual Debian, but if it was desired to build packages for inclusion in test images or to make it more easily available to application developers, then here is some Debian packaging.
If #154 can be fixed and it is used by at least one non-trivial (useful) application, I will sponsor the inclusion of libneat into Debian.","This is way off being accepted into actual Debian, but if it was desired to build packages for inclusion in test images or to make it more easily available to application developers, then here is some Debian packaging.
If #154 can be fixed and it is used by at least one non-trivial (useful) application, I will sponsor the inclusion of libneat into Debian.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,158,2016-09-22T08:43:38Z,2016-10-06T13:12:03Z,2016-10-06T13:12:03Z,MERGED,True,160,23,8,https://github.com/apetlund,Neatstat,9,[],https://github.com/NEAT-project/neat/pull/158,https://github.com/apetlund,1,https://github.com/NEAT-project/neat/pull/158,"Added features:

Support for gathering stats from all flows in the NEAT context (the API call takes ctx instead of flow as a parameter).
Added a  data structure to collect flow statistics.
Bytes sent and received per flow
Protocol-specific stats support added
Added a data structure to get TCP information from different architectures.
TCP_INFO stats support for Linux
-JSON output now uses nested objects to keep track of Global stats, flow stats and protocol-specific stats.","Added features:

Support for gathering stats from all flows in the NEAT context (the API call takes ctx instead of flow as a parameter).
Added a  data structure to collect flow statistics.
Bytes sent and received per flow
Protocol-specific stats support added
Added a data structure to get TCP information from different architectures.
TCP_INFO stats support for Linux
-JSON output now uses nested objects to keep track of Global stats, flow stats and protocol-specific stats.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,158,2016-09-22T08:43:38Z,2016-10-06T13:12:03Z,2016-10-06T13:12:03Z,MERGED,True,160,23,8,https://github.com/apetlund,Neatstat,9,[],https://github.com/NEAT-project/neat/pull/158,https://github.com/naeemk,2,https://github.com/NEAT-project/neat/pull/158#issuecomment-251698555,"Added features:

Support for gathering stats from all flows in the NEAT context (the API call takes ctx instead of flow as a parameter).
Added a  data structure to collect flow statistics.
Bytes sent and received per flow
Protocol-specific stats support added
Added a data structure to get TCP information from different architectures.
TCP_INFO stats support for Linux
-JSON output now uses nested objects to keep track of Global stats, flow stats and protocol-specific stats.",is this ready to merge? testbed by anyone?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,158,2016-09-22T08:43:38Z,2016-10-06T13:12:03Z,2016-10-06T13:12:03Z,MERGED,True,160,23,8,https://github.com/apetlund,Neatstat,9,[],https://github.com/NEAT-project/neat/pull/158,https://github.com/apetlund,3,https://github.com/NEAT-project/neat/pull/158#issuecomment-251881510,"Added features:

Support for gathering stats from all flows in the NEAT context (the API call takes ctx instead of flow as a parameter).
Added a  data structure to collect flow statistics.
Bytes sent and received per flow
Protocol-specific stats support added
Added a data structure to get TCP information from different architectures.
TCP_INFO stats support for Linux
-JSON output now uses nested objects to keep track of Global stats, flow stats and protocol-specific stats.","The merge request gives the status. If you’d rather wait until I’ve implemented the message passing interface with the CIB that was planned in Oslo, you can do that, but the diff will be bigger.
Cheers,
Andreas

On 05 Oct 2016, at 16:53, Naeem Khademi notifications@github.com wrote:
is this ready to merge?
—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #158 (comment), or mute the thread https://github.com/notifications/unsubscribe-auth/ACejY00aYur6J4lRG_YIbSIPV_4Owv84ks5qw7nvgaJpZM4KDpzL.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,158,2016-09-22T08:43:38Z,2016-10-06T13:12:03Z,2016-10-06T13:12:03Z,MERGED,True,160,23,8,https://github.com/apetlund,Neatstat,9,[],https://github.com/NEAT-project/neat/pull/158,https://github.com/naeemk,4,https://github.com/NEAT-project/neat/pull/158#issuecomment-251956808,"Added features:

Support for gathering stats from all flows in the NEAT context (the API call takes ctx instead of flow as a parameter).
Added a  data structure to collect flow statistics.
Bytes sent and received per flow
Protocol-specific stats support added
Added a data structure to get TCP information from different architectures.
TCP_INFO stats support for Linux
-JSON output now uses nested objects to keep track of Global stats, flow stats and protocol-specific stats.",small merges are preferred :),True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,159,2016-09-22T09:58:18Z,2016-09-22T09:58:23Z,2016-09-22T09:58:25Z,MERGED,True,11,3,1,https://github.com/adventureloop,Resovle issues setting dscp on user stack sctp,5,[],https://github.com/NEAT-project/neat/pull/159,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/159,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,161,2016-09-23T10:57:28Z,2016-09-28T12:08:57Z,2016-11-01T16:46:08Z,MERGED,True,658,286,4,https://github.com/oystedal,New Happy Eyeballs,29,[],https://github.com/NEAT-project/neat/pull/161,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/161,"By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.","By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,161,2016-09-23T10:57:28Z,2016-09-28T12:08:57Z,2016-11-01T16:46:08Z,MERGED,True,658,286,4,https://github.com/oystedal,New Happy Eyeballs,29,[],https://github.com/NEAT-project/neat/pull/161,https://github.com/tuexen,2,https://github.com/NEAT-project/neat/pull/161#issuecomment-249366306,"By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.","I did some testing and found one issue: You use connect() calls on non-blocking sockets and then fire a callback, once the socket becomes writable. If this happens the first time, you select the socket and stop the selection. At least this is my understanding.
However, if the connection setup breaks, because you get a TCP reset segment, and SCTP ABORT chunks, or an ICMP message indicating a hard error, the socket also becomes writable (it also becomes readable, but it seems that this isn't taken into account).
To reproduce this, make sure connection setup breaks and you have more than one candidate. You should actually try all of them and only fail the flow setup if none of the candidates work.
I found this bug in a scenario, where I'm running FreeBSD with only IPv4 in a VMWare VM using a NATed interface. So TCP/IPv4 and SCTP/IPv4 are the candidates, SCTP gets tested first, the NAT implementation of the VMWare injects an ICMP message indicating that SCTP is not supported, the SCTP treats this similar to the reception of an ABORT, therefore the association setup fails. However, TCP/IPv4 is not tested.
Here is a log of running examples/client_http_get bsd10.fh-muenster.de:
Opened flow 0
[   0.007597][DBG] neat_start_event_loop
[   1.015338][DBG] open_resolve_cb
[   1.015523][DBG] HE Candidate  0:      em0 [ 1]     SCTP/IPv4 <saddr 192.168.115.183> <dstaddr 212.201.121.100> port    80 priority 0
[   1.015535][DBG] HE Candidate  1:      em0 [ 1]      TCP/IPv4 <saddr 192.168.115.183> <dstaddr 212.201.121.100> port    80 priority 1
[   1.015544][DBG] HE will now commence


[   1.015553][DBG] neat_connect
[   1.015651][INF] neat_connect: Bind fd 35 to 192.168.115.183
[   1.015861][DBG] neat_he_open: Connect successful for fd 35, ret = 0
[   1.016596][DBG] Invokation count: 1
[   1.016659][DBG] HE Candidate connected:      em0 [ 1]     SCTP/IPv4 <saddr 192.168.115.183> <dstaddr 212.201.121.100> port    80 priority 0
[   1.016677][DBG] First successful connect
[   1.016703][DBG] uvpollable_cb
[   1.016719][DBG] io_connected
[   1.016737][INF] Connected: SCTP/IPv4
[   1.016752][DBG] neat_set_operations
[   1.016791][DBG] updatePollHandle
[   1.016811][DBG] io_writable
[   1.016830][DBG] neat_write
[   1.016846][DBG] neat_write_to_lower_layer
[   1.016912][DBG] neat_write_flush
[   1.016958][DBG] -1 bytes sent on stream 0
on_error

I guess, you can see the same problem on a machine with IPv4 and IPv6 addresses and choosing a destination where there is no server running at the port. Not all candidates will be tested.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,161,2016-09-23T10:57:28Z,2016-09-28T12:08:57Z,2016-11-01T16:46:08Z,MERGED,True,658,286,4,https://github.com/oystedal,New Happy Eyeballs,29,[],https://github.com/NEAT-project/neat/pull/161,https://github.com/tuexen,3,https://github.com/NEAT-project/neat/pull/161#issuecomment-249366340,"By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.",I have another comment: Is SCTP/UDP supported? I saw a commit disabling it. Is there a problem with it?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,161,2016-09-23T10:57:28Z,2016-09-28T12:08:57Z,2016-11-01T16:46:08Z,MERGED,True,658,286,4,https://github.com/oystedal,New Happy Eyeballs,29,[],https://github.com/NEAT-project/neat/pull/161,https://github.com/oystedal,4,https://github.com/NEAT-project/neat/pull/161#issuecomment-249373251,"By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.","Disabling SCTP/UDP was a debugging measure, and it proved to be a dead end. I'll revert that commit before a merge.
I'll have a closer look at the logic when the socket becomes writable. I'm going to move some of the code from neat_core.c to neat_he.c, so that the entire HE code becomes a little more coherent.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,161,2016-09-23T10:57:28Z,2016-09-28T12:08:57Z,2016-11-01T16:46:08Z,MERGED,True,658,286,4,https://github.com/oystedal,New Happy Eyeballs,29,[],https://github.com/NEAT-project/neat/pull/161,https://github.com/tuexen,5,https://github.com/NEAT-project/neat/pull/161#issuecomment-249377781,"By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.","Thanks for adding SCTP/UDP back.
You might want to check if the socket is also readable and then read() to get the possible error indication. Or you can use getsockopt(..., SOL_SOCKET, SO_ERROR, ..., ...) to check if there are pending socket errors. If there are, don't consider the connection setup successful.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,161,2016-09-23T10:57:28Z,2016-09-28T12:08:57Z,2016-11-01T16:46:08Z,MERGED,True,658,286,4,https://github.com/oystedal,New Happy Eyeballs,29,[],https://github.com/NEAT-project/neat/pull/161,https://github.com/oystedal,6,https://github.com/NEAT-project/neat/pull/161#issuecomment-250148480,"By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.","We have decided to merge this despite the reported issue. This case is probably not handled correctly by the existing HE implementation either, and a lot of progress is blocking on this merge.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,161,2016-09-23T10:57:28Z,2016-09-28T12:08:57Z,2016-11-01T16:46:08Z,MERGED,True,658,286,4,https://github.com/oystedal,New Happy Eyeballs,29,[],https://github.com/NEAT-project/neat/pull/161,https://github.com/tuexen,7,https://github.com/NEAT-project/neat/pull/161#issuecomment-250163661,"By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.","That is fine, as long as it gets fixed.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,161,2016-09-23T10:57:28Z,2016-09-28T12:08:57Z,2016-11-01T16:46:08Z,MERGED,True,658,286,4,https://github.com/oystedal,New Happy Eyeballs,29,[],https://github.com/NEAT-project/neat/pull/161,https://github.com/karlgrin,8,https://github.com/NEAT-project/neat/pull/161#issuecomment-251901494,"By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.","I have tested Tuexens bug, and it seems that Linux (Linux ubuntu 4.4.0-31-generic) in the same scenario as was tested with FreeBSD, returns a status of -9 (bad file descriptor?) and thus continue
with TCP/IPv4. Why does FreeBSD return status = 0 (i.e., file descriptor writable)? Not sure I understand this difference between OSes.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,161,2016-09-23T10:57:28Z,2016-09-28T12:08:57Z,2016-11-01T16:46:08Z,MERGED,True,658,286,4,https://github.com/oystedal,New Happy Eyeballs,29,[],https://github.com/NEAT-project/neat/pull/161,https://github.com/tuexen,9,https://github.com/NEAT-project/neat/pull/161#issuecomment-251936683,"By popular demand, here's the new HE implementation. 🎉
The HE code is written by @karlgrin, while I have written some new interfacing code from the NEAT logic. @tuexen also provided a much appreciated bugfix.
Feel free to give it a spin on all your weird and exotic network setups. Unless someone complains we'll merge it early next week.","Where comes the status of -9 from?
I think you call socket(), make the fd non-blocking, possibly call bind(), and finally call connect(). Whether connect() returns an error or not is a timing issue. If talking to a remote system, it will not fail. Once the TCP RST, SCTP ABORT, ICMP, or whatever error indication you have, is received, the corresponding socket become readable and writable in select(). The readable part means that you can read something, which you should do and the kernel would give you the error indication.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,165,2016-10-13T14:00:32Z,2016-10-13T14:49:23Z,2016-10-13T14:49:23Z,MERGED,True,263,108,8,https://github.com/weinrank,Improved multistream support,31,[],https://github.com/NEAT-project/neat/pull/165,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/165,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,167,2016-10-19T23:06:41Z,2016-10-20T11:12:02Z,2016-10-20T11:12:03Z,MERGED,True,62,904,5,https://github.com/weinrank,Weinrank/nghttp2,10,[],https://github.com/NEAT-project/neat/pull/167,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/167,"client_multi and server_echo_multi removed - multistream functionality integrated in client and server_echo
improved multistream functionality
bugfixes for flow and connection closing","client_multi and server_echo_multi removed - multistream functionality integrated in client and server_echo
improved multistream functionality
bugfixes for flow and connection closing",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,168,2016-10-22T18:33:59Z,2016-10-22T18:34:06Z,2016-10-25T18:29:31Z,MERGED,True,61,2,1,https://github.com/adventureloop,Initial NEAT Abstract QoS values,1,[],https://github.com/NEAT-project/neat/pull/168,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/168,"This was meant to have been commited at the Oslo September 2016
Hackathon, but it seems to have been missed. First whack at the traffic
classes. QoS values will be converted to a table for mapping via policy
later.","This was meant to have been commited at the Oslo September 2016
Hackathon, but it seems to have been missed. First whack at the traffic
classes. QoS values will be converted to a table for mapping via policy
later.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,168,2016-10-22T18:33:59Z,2016-10-22T18:34:06Z,2016-10-25T18:29:31Z,MERGED,True,61,2,1,https://github.com/adventureloop,Initial NEAT Abstract QoS values,1,[],https://github.com/NEAT-project/neat/pull/168,https://github.com/mwelzl,2,https://github.com/NEAT-project/neat/pull/168#issuecomment-256116718,"This was meant to have been commited at the Oslo September 2016
Hackathon, but it seems to have been missed. First whack at the traffic
classes. QoS values will be converted to a table for mapping via policy
later.","My apologies in case this was only a dialogue between Gorry and me, and not in plenary?!
but at least he and I  ;-)   agreed that it would probably make the most sense to reflect table 1 in:
https://tools.ietf.org/html/draft-ietf-tsvwg-rtcweb-qos-18
Cheers,
Michael

On 22 Oct 2016, at 20:34, Tom Jones notifications@github.com wrote:
This was meant to have been commited at the Oslo September 2016
Hackathon, but it seems to have been missed. First whack at the traffic
classes. QoS values will be converted to a table for mapping via policy
later.
You can view, comment on, or merge this pull request online at:
#168
Commit Summary
• Initial NEAT Abstract QoS values
File Changes
• M neat_qos.h (63)
Patch Links:
• https://github.com/NEAT-project/neat/pull/168.patch
• https://github.com/NEAT-project/neat/pull/168.diff
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,168,2016-10-22T18:33:59Z,2016-10-22T18:34:06Z,2016-10-25T18:29:31Z,MERGED,True,61,2,1,https://github.com/adventureloop,Initial NEAT Abstract QoS values,1,[],https://github.com/NEAT-project/neat/pull/168,https://github.com/adventureloop,3,https://github.com/NEAT-project/neat/pull/168#issuecomment-256128150,"This was meant to have been commited at the Oslo September 2016
Hackathon, but it seems to have been missed. First whack at the traffic
classes. QoS values will be converted to a table for mapping via policy
later.","On Tue, Oct 25, 2016 at 11:14:38AM -0700, mwelzl wrote:

My apologies in case this was only a dialogue between Gorry and me, and not in plenary?!
but at least he and I  ;-)   agreed that it would probably make the most sense to reflect table 1 in:
https://tools.ietf.org/html/draft-ietf-tsvwg-rtcweb-qos-18

This is the list Gorry sent me in plenary, maybe you can clarify Gorry?

Cheers,
Michael

On 22 Oct 2016, at 20:34, Tom Jones notifications@github.com wrote:
This was meant to have been commited at the Oslo September 2016
Hackathon, but it seems to have been missed. First whack at the traffic
classes. QoS values will be converted to a table for mapping via policy
later.
You can view, comment on, or merge this pull request online at:
#168
Commit Summary
• Initial NEAT Abstract QoS values

File Changes
• M neat_qos.h (63)

Patch Links:
• https://github.com/NEAT-project/neat/pull/168.patch
• https://github.com/NEAT-project/neat/pull/168.diff

—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub, or mute the thread.


You are receiving this because you modified the open/close state.
Reply to this email directly or view it on GitHub:
#168 (comment)



[tj]",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,169,2016-10-24T13:33:33Z,2017-06-20T12:43:48Z,2017-10-06T12:10:34Z,CLOSED,False,291,172,3,https://github.com/adventureloop,DTLS/UDP Support for NEAT,14,['help wanted'],https://github.com/NEAT-project/neat/pull/169,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/169,"Support for both client and sever DTLS over UDP.
Code is testable with the peer example. Currently Server validation is disabled for clients, I can't figure out why this is failing, openssl is inscrutable.
To enable DTLS a large portion of neat_security was rewritten, but I have not been able to test tls so far. It is not clear to me from the current examples how to actually test a tls tcp client and server.","Support for both client and sever DTLS over UDP.
Code is testable with the peer example. Currently Server validation is disabled for clients, I can't figure out why this is failing, openssl is inscrutable.
To enable DTLS a large portion of neat_security was rewritten, but I have not been able to test tls so far. It is not clear to me from the current examples how to actually test a tls tcp client and server.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,169,2016-10-24T13:33:33Z,2017-06-20T12:43:48Z,2017-10-06T12:10:34Z,CLOSED,False,291,172,3,https://github.com/adventureloop,DTLS/UDP Support for NEAT,14,['help wanted'],https://github.com/NEAT-project/neat/pull/169,https://github.com/naeemk,2,https://github.com/NEAT-project/neat/pull/169#issuecomment-257290874,"Support for both client and sever DTLS over UDP.
Code is testable with the peer example. Currently Server validation is disabled for clients, I can't figure out why this is failing, openssl is inscrutable.
To enable DTLS a large portion of neat_security was rewritten, but I have not been able to test tls so far. It is not clear to me from the current examples how to actually test a tls tcp client and server.","@mcmanus being the guy who's written the initial neat_security code, have you had a chance to test this? is it ready to merge (beyond the fact that it has no conflict, testing if it doesn't break anything else wrt to TLS)?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,169,2016-10-24T13:33:33Z,2017-06-20T12:43:48Z,2017-10-06T12:10:34Z,CLOSED,False,291,172,3,https://github.com/adventureloop,DTLS/UDP Support for NEAT,14,['help wanted'],https://github.com/NEAT-project/neat/pull/169,https://github.com/adventureloop,3,https://github.com/NEAT-project/neat/pull/169#issuecomment-257297310,"Support for both client and sever DTLS over UDP.
Code is testable with the peer example. Currently Server validation is disabled for clients, I can't figure out why this is failing, openssl is inscrutable.
To enable DTLS a large portion of neat_security was rewritten, but I have not been able to test tls so far. It is not clear to me from the current examples how to actually test a tls tcp client and server.","Oh, I don't think it is ready yet. It needs off the top of my head:

regression tested against TLS
Peer validation for DTLS
cleaned up

But it is an entire functional chunk, so I didn't want to keep it to myself.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,170,2016-10-31T15:22:21Z,2016-10-31T16:20:48Z,2016-11-01T16:45:56Z,MERGED,True,11,0,1,https://github.com/oystedal,build: add version to soname,1,[],https://github.com/NEAT-project/neat/pull/170,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/170,Closes #154,Closes #154,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,170,2016-10-31T15:22:21Z,2016-10-31T16:20:48Z,2016-11-01T16:45:56Z,MERGED,True,11,0,1,https://github.com/oystedal,build: add version to soname,1,[],https://github.com/NEAT-project/neat/pull/170,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/170#issuecomment-257323798,Closes #154,"Does this look ok, @weinrank?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,172,2016-10-31T16:48:39Z,2016-11-03T16:41:36Z,2016-11-07T09:17:55Z,MERGED,True,12,0,1,https://github.com/karlgrin,Issue #126: Tried to fix Tuexen's issue with HE not checking that a c…,2,[],https://github.com/NEAT-project/neat/pull/172,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/172,Attempt to address issue #126 (Tüxen).,Attempt to address issue #126 (Tüxen).,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,172,2016-10-31T16:48:39Z,2016-11-03T16:41:36Z,2016-11-07T09:17:55Z,MERGED,True,12,0,1,https://github.com/karlgrin,Issue #126: Tried to fix Tuexen's issue with HE not checking that a c…,2,[],https://github.com/NEAT-project/neat/pull/172,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/172#issuecomment-257554024,Attempt to address issue #126 (Tüxen).,"Code looks good to me. @tuexen: Could you test this, please?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,172,2016-10-31T16:48:39Z,2016-11-03T16:41:36Z,2016-11-07T09:17:55Z,MERGED,True,12,0,1,https://github.com/karlgrin,Issue #126: Tried to fix Tuexen's issue with HE not checking that a c…,2,[],https://github.com/NEAT-project/neat/pull/172,https://github.com/karlgrin,3,https://github.com/NEAT-project/neat/pull/172#issuecomment-258123178,Attempt to address issue #126 (Tüxen).,"Hi Tüxen!
As far as I know, completely unintentional.
BR
Karl-Johan Grinnemo
Lektor/Senior Lecturer
Datavetenskap/Computer Science
Karlstads universitet/Karlstad university
Tfn.:/Phone: +46 (0)54 700 24 40
Mobil:/Mobile: +46 (0)708 740 511

On 3 Nov 2016, at 11:49, Michael Tüxen notifications@github.com wrote:
@tuexen commented on this pull request.
In neat_core.c #172 (review):

@@ -1170,6 +1170,7 @@ static void
he_connected_cb(uv_poll_t *handle, int status, int events)
{
static unsigned int c = 0;
Why is this whitespace change needed?

In neat_core.c #172 (review):

@@ -1225,6 +1226,18 @@ he_connected_cb(uv_poll_t *handle, int status, int events)
candidate->pollable_socket->port,
candidate->priority);


int so_error = 0;
unsigned int len = sizeof(so_error);
if (getsockopt(candidate->pollable_socket->fd, SOL_SOCKET, SO_ERROR, &so_error, &len) < 0) {


   neat_log(NEAT_LOG_DEBUG, ""Call to getsockopt failed: %s"", strerror(errno));



   neat_io_error(candidate->ctx, flow, NEAT_ERROR_INTERNAL);



   return;


}
status = so_error;
neat_log(NEAT_LOG_DEBUG,

        ""Connection status: %d"", status);




Looks good. I tested the change and it works.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub #172 (review), or mute the thread https://github.com/notifications/unsubscribe-auth/AH_vM5CY_3ArwcGUPxIgYid2ylDhHCchks5q6bw1gaJpZM4KlPH0.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,172,2016-10-31T16:48:39Z,2016-11-03T16:41:36Z,2016-11-07T09:17:55Z,MERGED,True,12,0,1,https://github.com/karlgrin,Issue #126: Tried to fix Tuexen's issue with HE not checking that a c…,2,[],https://github.com/NEAT-project/neat/pull/172,https://github.com/tuexen,4,https://github.com/NEAT-project/neat/pull/172#issuecomment-258128546,Attempt to address issue #126 (Tüxen).,"So remove the line with the whitespace and merge the code.
Thanks for fixing the bug!
Best regards
Michael",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,176,2016-10-31T20:53:03Z,2016-11-02T07:34:27Z,2016-11-02T07:34:27Z,MERGED,True,318,60,13,https://github.com/oystedal,Fix closing and shutdown,9,[],https://github.com/NEAT-project/neat/pull/176,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/176,"Fixes #164. Hopefully.
Yet another round of fixes to the free/shutdown code.
neat_free_flow is now gone from the public API. It is instead called from neat_close, which essentially did the same as neat_free_flow.
Flows are now freed first in neat_free_ctx so that the shutdown happens in a sensible order.
The list of flows in a context is now updated in neat_free_flow instead of synchronous_free so that freeing all flows upon shutdown happens in a sane manner. This way we don't get stuck in an infinite loop if a flow cannot immediately be freed during shutdown.
The handles belonging to flows are now closed prior to calling uv_walk. During uv_walk, every handle that still isn't closed is closed with no callback, which will cause memory leaks for the handles that were attached to flows. Any future updates should make sure that flows are still closed before uv_walk.
Handles belonging to HE candidates are only freed if the same handle is not used by the flow.
Some minor and trivial changes.
And finally, a test which mimics the HTTP client, closing the flow at odd times.
I haven't tested the updated examples in detail, but I couldn't find any errors that I couldn't reproduce in the master branch.","Fixes #164. Hopefully.
Yet another round of fixes to the free/shutdown code.
neat_free_flow is now gone from the public API. It is instead called from neat_close, which essentially did the same as neat_free_flow.
Flows are now freed first in neat_free_ctx so that the shutdown happens in a sensible order.
The list of flows in a context is now updated in neat_free_flow instead of synchronous_free so that freeing all flows upon shutdown happens in a sane manner. This way we don't get stuck in an infinite loop if a flow cannot immediately be freed during shutdown.
The handles belonging to flows are now closed prior to calling uv_walk. During uv_walk, every handle that still isn't closed is closed with no callback, which will cause memory leaks for the handles that were attached to flows. Any future updates should make sure that flows are still closed before uv_walk.
Handles belonging to HE candidates are only freed if the same handle is not used by the flow.
Some minor and trivial changes.
And finally, a test which mimics the HTTP client, closing the flow at odd times.
I haven't tested the updated examples in detail, but I couldn't find any errors that I couldn't reproduce in the master branch.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,177,2016-11-03T16:48:41Z,2016-11-24T14:48:10Z,2016-11-24T14:49:29Z,MERGED,True,78,40,8,https://github.com/oystedal,Stop event loop on errors in context,7,[],https://github.com/NEAT-project/neat/pull/177,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/177,"This PR is an amendment to #142.
The new function neat_fail_ctx_on_error stops the event loop and stores the error value in ctx. This error value is returned to the user by neat_start_event_loop. This is for cases where the error is not tied to any flow in particular.
The source address code on Linux and BSD has been updated to use this mechanism when neat_addr_update_src_list fails.
@tuexen and @kristrev, could you take a look at these changes?","This PR is an amendment to #142.
The new function neat_fail_ctx_on_error stops the event loop and stores the error value in ctx. This error value is returned to the user by neat_start_event_loop. This is for cases where the error is not tied to any flow in particular.
The source address code on Linux and BSD has been updated to use this mechanism when neat_addr_update_src_list fails.
@tuexen and @kristrev, could you take a look at these changes?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/178,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=","Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/178#issuecomment-259232226,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=","Would it be possible to use libneat as the package name instead?
Other than that, it looks good to me.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/dreibh,3,https://github.com/NEAT-project/neat/pull/178#issuecomment-259370387,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=","Okay, changed.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/oystedal,4,https://github.com/NEAT-project/neat/pull/178#issuecomment-259375312,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=",I'll merge this later today unless someone objects to  it.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/dreibh,5,https://github.com/NEAT-project/neat/pull/178#issuecomment-261898667,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=",Merged current master branch. Is there anything to do before the pull request can be merged?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/oystedal,6,https://github.com/NEAT-project/neat/pull/178#issuecomment-261929251,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=","Sorry about the delay.
Out of curiosity, is the PPA updated automatically to the latest version, or does it have to be ""repackaged"" manually whenever one wants to push a new version?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/dreibh,7,https://github.com/NEAT-project/neat/pull/178#issuecomment-261939179,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=","Hi,
Mandag 21. november 2016 04.54.21 skrev oystedal:

Sorry about the delay.
Out of curiosity, is the PPA updated automatically to the latest version, or does it have to be ""repackaged"" manually whenever one wants to push a new version?

I need to update the version (in debian/changelog and CMakeLists.txt). Then, I have to call ""make-ppa"" to build and upload the packages for the different Ubuntu distributions. It would in fact be easy to automatise these steps as well. It would just be necessary to ensure that debuild has access to my GnuPG private key, since the packages need to be signed for uploading.

Best regards / Mit freundlichen Grüßen / Med vennlig hilsen

Thomas Dreibholz
Simula Research Laboratory
Simula Innovation AS, Network Systems Group
Visiting address: Martin Linges vei 17, 1364 Fornebu, Norway
Mailing address:  P.O.Box 134, 1325 Lysaker, Norway
E-Mail:     dreibh@simula.no
Homepage:   http://simula.no/people/dreibh",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/kristrev,8,https://github.com/NEAT-project/neat/pull/178#issuecomment-261940572,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=",What is the purpose of introducing other tools (autogen etc.) into NEAT when CMake already provides facilities for creating packages? Or does CMake not support everything that is required?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/dreibh,9,https://github.com/NEAT-project/neat/pull/178#issuecomment-261946239,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=","Hi,
Mandag 21. november 2016 05.38.14 skrev Kristian Evensen:

What is the purpose of introducing autotools into NEAT when CMake already provides facilities for creating packages?

The NEAT package does not need autotools. It is probably installed as a dependency of a package NEAT depends on, may be debhelper?

Best regards / Mit freundlichen Grüßen / Med vennlig hilsen

Thomas Dreibholz
Simula Research Laboratory
Simula Innovation AS, Network Systems Group
Visiting address: Martin Linges vei 17, 1364 Fornebu, Norway
Mailing address:  P.O.Box 134, 1325 Lysaker, Norway
E-Mail:     dreibh@simula.no
Homepage:   http://simula.no/people/dreibh",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/kristrev,10,https://github.com/NEAT-project/neat/pull/178#issuecomment-261956700,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=","Yes, I edited my question as I meants tools, not autotools :) I am talking about autogen.sh, etc.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/oystedal,11,https://github.com/NEAT-project/neat/pull/178#issuecomment-261961284,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=","As far as I have understood, these scripts only creates the package, building NEAT is still left to CMake.
As a side note, it would be nice if it could pull as much data as possible from CMake so that these packaging scripts doesn't have to be updated for every new release.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/kristrev,12,https://github.com/NEAT-project/neat/pull/178#issuecomment-261962518,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=",https://cmake.org/Wiki/CMake:CPackPackageGenerators,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,178,2016-11-08T14:50:22Z,2016-11-21T12:51:44Z,2016-11-21T15:47:05Z,MERGED,True,619,23,12,https://github.com/dreibh,Ubuntu PPA packaging,15,[],https://github.com/NEAT-project/neat/pull/178,https://github.com/dreibh,13,https://github.com/NEAT-project/neat/pull/178#issuecomment-261975256,"Added make target ""dist"" to create a tarball.
Ubuntu PPA packaging scripts to automatically generate NEAT packages for all recent Ubuntu variants => https://launchpad.net/~dreibh/+archive/ubuntu/ppa/+packages?field.name_filter=neat&field.status_filter=published&field.series_filter=","Hi,
Mandag 21. november 2016 07.01.12 skrev oystedal:

As far as I have understood, these scripts only creates the package, building NEAT is still left to CMake.

Yes, the scripts are only for automatically creating and PPA-uploading the Ubuntu/Debian packages. They are not needed for building NEAT in general.

As a side note, it would be nice if it could pull as much data as possible from CMake so that these packaging scripts doesn't have to be updated for every new release.

The scripts (like make-deb, make-ppa, clean-deb, etc.) are fixed, i.e. no need for an update.
For tarball releases, it would even be possible to exclude these scripts. I can add them to CPACK_SOURCE_IGNORE_FILES.

Best regards / Mit freundlichen Grüßen / Med vennlig hilsen

Thomas Dreibholz
Simula Research Laboratory
Simula Innovation AS, Network Systems Group
Visiting address: Martin Linges vei 17, 1364 Fornebu, Norway
Mailing address:  P.O.Box 134, 1325 Lysaker, Norway
E-Mail:     dreibh@simula.no
Homepage:   http://simula.no/people/dreibh",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,181,2016-11-17T18:29:32Z,2016-11-18T11:44:39Z,2016-11-18T12:28:41Z,CLOSED,False,21,1,3,https://github.com/oystedal,Valgrind suppression for PvD mystery leak,1,[],https://github.com/NEAT-project/neat/pull/181,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/181,"I took another look at the leak that is currently present on the Ubuntu buildslave. I read through the source code for the relevant ldns functions, and I still don't see what might cause this leak. The list returned by ldns_pkt_rr_list_by_type should be freed by ldns_rr_list_deep_free, but somehow that's not happening.
I suggest we use the suppression file provided in this PR to allow valgrind to ignore this specific leak. This way we don't miss memory errors/leaks anywhere else until this issue is fixed.
@weinrank: I'm assigning this to you since you're the benevolent dictator of the buildbots. The way I added the suppression file to the test script is quite hacky, but I'll leave it up to you to decide if you want to keep it that way or if you want to add it to the buildbot configuration. The first option is probably better since this is temporary.
Meanwhile, I'll keep looking into the underlying issue.","I took another look at the leak that is currently present on the Ubuntu buildslave. I read through the source code for the relevant ldns functions, and I still don't see what might cause this leak. The list returned by ldns_pkt_rr_list_by_type should be freed by ldns_rr_list_deep_free, but somehow that's not happening.
I suggest we use the suppression file provided in this PR to allow valgrind to ignore this specific leak. This way we don't miss memory errors/leaks anywhere else until this issue is fixed.
@weinrank: I'm assigning this to you since you're the benevolent dictator of the buildbots. The way I added the suppression file to the test script is quite hacky, but I'll leave it up to you to decide if you want to keep it that way or if you want to add it to the buildbot configuration. The first option is probably better since this is temporary.
Meanwhile, I'll keep looking into the underlying issue.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,181,2016-11-17T18:29:32Z,2016-11-18T11:44:39Z,2016-11-18T12:28:41Z,CLOSED,False,21,1,3,https://github.com/oystedal,Valgrind suppression for PvD mystery leak,1,[],https://github.com/NEAT-project/neat/pull/181,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/181#issuecomment-261506077,"I took another look at the leak that is currently present on the Ubuntu buildslave. I read through the source code for the relevant ldns functions, and I still don't see what might cause this leak. The list returned by ldns_pkt_rr_list_by_type should be freed by ldns_rr_list_deep_free, but somehow that's not happening.
I suggest we use the suppression file provided in this PR to allow valgrind to ignore this specific leak. This way we don't miss memory errors/leaks anywhere else until this issue is fixed.
@weinrank: I'm assigning this to you since you're the benevolent dictator of the buildbots. The way I added the suppression file to the test script is quite hacky, but I'll leave it up to you to decide if you want to keep it that way or if you want to add it to the buildbot configuration. The first option is probably better since this is temporary.
Meanwhile, I'll keep looking into the underlying issue.","Ok, I may have found the source of the leak. You can hold off merging this, I'll see if I can fix it properly.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,181,2016-11-17T18:29:32Z,2016-11-18T11:44:39Z,2016-11-18T12:28:41Z,CLOSED,False,21,1,3,https://github.com/oystedal,Valgrind suppression for PvD mystery leak,1,[],https://github.com/NEAT-project/neat/pull/181,https://github.com/oystedal,3,https://github.com/NEAT-project/neat/pull/181#issuecomment-261513434,"I took another look at the leak that is currently present on the Ubuntu buildslave. I read through the source code for the relevant ldns functions, and I still don't see what might cause this leak. The list returned by ldns_pkt_rr_list_by_type should be freed by ldns_rr_list_deep_free, but somehow that's not happening.
I suggest we use the suppression file provided in this PR to allow valgrind to ignore this specific leak. This way we don't miss memory errors/leaks anywhere else until this issue is fixed.
@weinrank: I'm assigning this to you since you're the benevolent dictator of the buildbots. The way I added the suppression file to the test script is quite hacky, but I'll leave it up to you to decide if you want to keep it that way or if you want to add it to the buildbot configuration. The first option is probably better since this is temporary.
Meanwhile, I'll keep looking into the underlying issue.","Problem solved, this is no longer needed.",True,{'THUMBS_UP': ['https://github.com/weinrank']}
NEAT-project/neat,https://github.com/NEAT-project/neat,181,2016-11-17T18:29:32Z,2016-11-18T11:44:39Z,2016-11-18T12:28:41Z,CLOSED,False,21,1,3,https://github.com/oystedal,Valgrind suppression for PvD mystery leak,1,[],https://github.com/NEAT-project/neat/pull/181,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/181#issuecomment-261520824,"I took another look at the leak that is currently present on the Ubuntu buildslave. I read through the source code for the relevant ldns functions, and I still don't see what might cause this leak. The list returned by ldns_pkt_rr_list_by_type should be freed by ldns_rr_list_deep_free, but somehow that's not happening.
I suggest we use the suppression file provided in this PR to allow valgrind to ignore this specific leak. This way we don't miss memory errors/leaks anywhere else until this issue is fixed.
@weinrank: I'm assigning this to you since you're the benevolent dictator of the buildbots. The way I added the suppression file to the test script is quite hacky, but I'll leave it up to you to decide if you want to keep it that way or if you want to add it to the buildbot configuration. The first option is probably better since this is temporary.
Meanwhile, I'll keep looking into the underlying issue.",The buildbot dictator says:,True,"{'LAUGH': ['https://github.com/weinrank'], 'HOORAY': ['https://github.com/oystedal']}"
NEAT-project/neat,https://github.com/NEAT-project/neat,182,2016-11-18T07:22:16Z,2016-11-18T13:23:22Z,2016-11-18T13:23:22Z,MERGED,True,436,37,8,https://github.com/ruengeler,Multihomed,4,[],https://github.com/NEAT-project/neat/pull/182,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/182,"Support for multihoming for SCTP

several addresses can be bound to one socket via sctp_bindx
several destination addresses can be specified
add an example http_client_multihomed","Support for multihoming for SCTP

several addresses can be bound to one socket via sctp_bindx
several destination addresses can be specified
add an example http_client_multihomed",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,182,2016-11-18T07:22:16Z,2016-11-18T13:23:22Z,2016-11-18T13:23:22Z,MERGED,True,436,37,8,https://github.com/ruengeler,Multihomed,4,[],https://github.com/NEAT-project/neat/pull/182,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/182#issuecomment-261490683,"Support for multihoming for SCTP

several addresses can be bound to one socket via sctp_bindx
several destination addresses can be specified
add an example http_client_multihomed","I think we should avoid strtok and use strtok_r to avoid modifying any global state inside the library. This is the only change I'd request before merging this. I see that strtok has already been used in the resolver, this should probably be changed at some point as well. Other than that, the rest looks good to me.
Non-blocking comments:
No resolution is being done on the names/addresses. If this is only meant to be used with literal IP addresses, then it's probably fine as it is, except that local_name should be local_address (and the same for the optarg tag). Otherwise, name resolution should eventually be added to this as well.
The use of multiple local addresses seems only apply when you run NEAT without the PM. At least I can't see that it's added to the candidates that are sent to the PM in send_properties_to_pm. A property could be added in that function and then unpacked in build_he_candidates.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,183,2016-11-21T10:23:24Z,2016-11-21T12:57:17Z,2016-11-21T12:57:17Z,MERGED,True,2,2,2,https://github.com/dreibh,"Fix: Initialized ptr with NULL, in order to fix compiler warnings.",1,[],https://github.com/NEAT-project/neat/pull/183,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/183,"Initialized ptr with NULL, in order to fix compiler warnings on possibly uninitialized variable ""ptr"". Otherwise, when compiling with -Werror, building fails on Ubuntu Xenial.","Initialized ptr with NULL, in order to fix compiler warnings on possibly uninitialized variable ""ptr"". Otherwise, when compiling with -Werror, building fails on Ubuntu Xenial.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,183,2016-11-21T10:23:24Z,2016-11-21T12:57:17Z,2016-11-21T12:57:17Z,MERGED,True,2,2,2,https://github.com/dreibh,"Fix: Initialized ptr with NULL, in order to fix compiler warnings.",1,[],https://github.com/NEAT-project/neat/pull/183,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/183#issuecomment-261915963,"Initialized ptr with NULL, in order to fix compiler warnings on possibly uninitialized variable ""ptr"". Otherwise, when compiling with -Werror, building fails on Ubuntu Xenial.","The PR seems fine.
Is this the only issue preventing compilation with -Werror in your case?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,184,2016-11-23T07:42:12Z,2016-11-25T07:11:34Z,2016-11-25T07:29:05Z,MERGED,True,256,54,11,https://github.com/karlgrin,Karlgrin/he pm 161107,51,[],https://github.com/NEAT-project/neat/pull/184,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/184,First HE -> PM communication of connection attempt results.,First HE -> PM communication of connection attempt results.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,184,2016-11-23T07:42:12Z,2016-11-25T07:11:34Z,2016-11-25T07:29:05Z,MERGED,True,256,54,11,https://github.com/karlgrin,Karlgrin/he pm 161107,51,[],https://github.com/NEAT-project/neat/pull/184,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/184#issuecomment-262790419,First HE -> PM communication of connection attempt results.,@bozakov: Could you resolve these conflicts?,True,{'THUMBS_UP': ['https://github.com/bozakov']}
NEAT-project/neat,https://github.com/NEAT-project/neat,184,2016-11-23T07:42:12Z,2016-11-25T07:11:34Z,2016-11-25T07:29:05Z,MERGED,True,256,54,11,https://github.com/karlgrin,Karlgrin/he pm 161107,51,[],https://github.com/NEAT-project/neat/pull/184,https://github.com/karlgrin,3,https://github.com/NEAT-project/neat/pull/184#issuecomment-262791784,First HE -> PM communication of connection attempt results.,@oystedal Ok. I'll do that. Is it urgent or could it wait until tomorrow?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,184,2016-11-23T07:42:12Z,2016-11-25T07:11:34Z,2016-11-25T07:29:05Z,MERGED,True,256,54,11,https://github.com/karlgrin,Karlgrin/he pm 161107,51,[],https://github.com/NEAT-project/neat/pull/184,https://github.com/oystedal,4,https://github.com/NEAT-project/neat/pull/184#issuecomment-262792227,First HE -> PM communication of connection attempt results.,Tomorrow is fine.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,188,2016-11-23T09:58:31Z,2016-11-26T15:35:44Z,2016-11-26T15:35:44Z,MERGED,True,95,11,8,https://github.com/dreibh,Updated Ubuntu/Debian packaging,9,[],https://github.com/NEAT-project/neat/pull/188,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/188,"Updated Ubuntu/Debian packaging:

Fix for libneat library packaging, in order to make dh_shlibdeps work properly.
Packaged the examples as well (as package ""neat-tools"")
CPACK_SOURCE_IGNORE_FILES improvements, to not pack the PPA scripts into the release tarball.
CMakeLists.txt fix: the debug build needs ""-g"" as compiler option.","Updated Ubuntu/Debian packaging:

Fix for libneat library packaging, in order to make dh_shlibdeps work properly.
Packaged the examples as well (as package ""neat-tools"")
CPACK_SOURCE_IGNORE_FILES improvements, to not pack the PPA scripts into the release tarball.
CMakeLists.txt fix: the debug build needs ""-g"" as compiler option.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,188,2016-11-23T09:58:31Z,2016-11-26T15:35:44Z,2016-11-26T15:35:44Z,MERGED,True,95,11,8,https://github.com/dreibh,Updated Ubuntu/Debian packaging,9,[],https://github.com/NEAT-project/neat/pull/188,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/188#issuecomment-262912168,"Updated Ubuntu/Debian packaging:

Fix for libneat library packaging, in order to make dh_shlibdeps work properly.
Packaged the examples as well (as package ""neat-tools"")
CPACK_SOURCE_IGNORE_FILES improvements, to not pack the PPA scripts into the release tarball.
CMakeLists.txt fix: the debug build needs ""-g"" as compiler option.","Hey Thomas,
why does NEAT recommend these packages? 😄
Recommends: netperfmeter,
            rsplib-tools,
            subnetcalc,
            tsctp,
            tshark",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,188,2016-11-23T09:58:31Z,2016-11-26T15:35:44Z,2016-11-26T15:35:44Z,MERGED,True,95,11,8,https://github.com/dreibh,Updated Ubuntu/Debian packaging,9,[],https://github.com/NEAT-project/neat/pull/188,https://github.com/oystedal,3,https://github.com/NEAT-project/neat/pull/188#issuecomment-262963476,"Updated Ubuntu/Debian packaging:

Fix for libneat library packaging, in order to make dh_shlibdeps work properly.
Packaged the examples as well (as package ""neat-tools"")
CPACK_SOURCE_IGNORE_FILES improvements, to not pack the PPA scripts into the release tarball.
CMakeLists.txt fix: the debug build needs ""-g"" as compiler option.","Looks good to me, feel free to merge.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,195,2016-11-25T10:06:29Z,2016-11-25T13:57:35Z,2017-01-23T23:29:55Z,MERGED,True,101,60,4,https://github.com/weinrank,Logging refactoring,1,[],https://github.com/NEAT-project/neat/pull/195,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/195,"This PR changes the logging mechanism of NEAT:
Instead of reading environment variables, the user/developer sets the log-level with neat_log_level() and may write the log messages to a file with neat_log_file().","This PR changes the logging mechanism of NEAT:
Instead of reading environment variables, the user/developer sets the log-level with neat_log_level() and may write the log messages to a file with neat_log_file().",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,195,2016-11-25T10:06:29Z,2016-11-25T13:57:35Z,2017-01-23T23:29:55Z,MERGED,True,101,60,4,https://github.com/weinrank,Logging refactoring,1,[],https://github.com/NEAT-project/neat/pull/195,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/195#issuecomment-262960371,"This PR changes the logging mechanism of NEAT:
Instead of reading environment variables, the user/developer sets the log-level with neat_log_level() and may write the log messages to a file with neat_log_file().","Only missing some documentation for the public functions, otherwise it looks fine to me.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,195,2016-11-25T10:06:29Z,2016-11-25T13:57:35Z,2017-01-23T23:29:55Z,MERGED,True,101,60,4,https://github.com/weinrank,Logging refactoring,1,[],https://github.com/NEAT-project/neat/pull/195,https://github.com/weinrank,3,https://github.com/NEAT-project/neat/pull/195#issuecomment-262960486,"This PR changes the logging mechanism of NEAT:
Instead of reading environment variables, the user/developer sets the log-level with neat_log_level() and may write the log messages to a file with neat_log_file().",Doing this right now 😃,True,{'THUMBS_UP': ['https://github.com/oystedal']}
NEAT-project/neat,https://github.com/NEAT-project/neat,196,2016-11-25T13:57:26Z,2016-11-25T14:07:55Z,2016-11-25T14:07:55Z,MERGED,True,232,71,14,https://github.com/weinrank,"Examples improvements, neat_log documentation",3,[],https://github.com/NEAT-project/neat/pull/196,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/196,"Examples now make use of neat_log_level and aren't using DEBUG log level by default.
Also added documentation for neat_log_level and neat_log_file","Examples now make use of neat_log_level and aren't using DEBUG log level by default.
Also added documentation for neat_log_level and neat_log_file",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,198,2016-11-25T15:49:02Z,2016-11-25T17:03:00Z,2016-11-25T17:03:00Z,MERGED,True,12,2,1,https://github.com/bagder,neat_security: fix build with OpenSSL 1.1.0+,1,[],https://github.com/NEAT-project/neat/pull/198,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/198,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,200,2016-11-28T11:42:43Z,2016-11-28T12:28:35Z,2016-11-28T12:28:35Z,MERGED,True,34,21,15,https://github.com/dreibh,Include path improvements,2,[],https://github.com/NEAT-project/neat/pull/200,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/200,"The examples under examples included NEAT files by '#include ""../neat...""'. This is fine for building inside the NEAT repository, but not useful for a user just trying to get a running example with the NEAT library and development files installed by the packaging system.
Solution: ""."" is added to the include path in CMakeLists.txt => examples can include the NEAT files with ""#include <neat...>"".","The examples under examples included NEAT files by '#include ""../neat...""'. This is fine for building inside the NEAT repository, but not useful for a user just trying to get a running example with the NEAT library and development files installed by the packaging system.
Solution: ""."" is added to the include path in CMakeLists.txt => examples can include the NEAT files with ""#include <neat...>"".",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,200,2016-11-28T11:42:43Z,2016-11-28T12:28:35Z,2016-11-28T12:28:35Z,MERGED,True,34,21,15,https://github.com/dreibh,Include path improvements,2,[],https://github.com/NEAT-project/neat/pull/200,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/200#issuecomment-263257693,"The examples under examples included NEAT files by '#include ""../neat...""'. This is fine for building inside the NEAT repository, but not useful for a user just trying to get a running example with the NEAT library and development files installed by the packaging system.
Solution: ""."" is added to the include path in CMakeLists.txt => examples can include the NEAT files with ""#include <neat...>"".",LGTM! 👍,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,202,2016-11-28T13:45:51Z,2016-11-28T18:43:49Z,2016-11-28T18:43:49Z,MERGED,True,38,5,4,https://github.com/weinrank,example and test improvements,3,[],https://github.com/NEAT-project/neat/pull/202,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/202,"Despite a non resolvable DNS name (not.resolvable.neat), I added a test case where the DNS name is resolvable but theres no service listening on that specific port (buildbot.nplap.de)","Despite a non resolvable DNS name (not.resolvable.neat), I added a test case where the DNS name is resolvable but theres no service listening on that specific port (buildbot.nplap.de)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,204,2016-11-28T20:05:27Z,2016-11-29T08:33:39Z,2016-11-30T10:08:50Z,MERGED,True,44,5,1,https://github.com/karlgrin,Karlgrin/he pm 161128,9,[],https://github.com/NEAT-project/neat/pull/204,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/204,@oystedal @bozakov Complemented result from HE with candidate properties.,@oystedal @bozakov Complemented result from HE with candidate properties.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,204,2016-11-28T20:05:27Z,2016-11-29T08:33:39Z,2016-11-30T10:08:50Z,MERGED,True,44,5,1,https://github.com/karlgrin,Karlgrin/he pm 161128,9,[],https://github.com/NEAT-project/neat/pull/204,https://github.com/oystedal,2,https://github.com/NEAT-project/neat/pull/204#issuecomment-263383694,@oystedal @bozakov Complemented result from HE with candidate properties.,"Seems fine to me. I would still recommend using neat_json_send_once directly instead of duplicating that function. The existing code might assume that all callbacks are specified, but this can be easily changed.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,204,2016-11-28T20:05:27Z,2016-11-29T08:33:39Z,2016-11-30T10:08:50Z,MERGED,True,44,5,1,https://github.com/karlgrin,Karlgrin/he pm 161128,9,[],https://github.com/NEAT-project/neat/pull/204,https://github.com/karlgrin,3,https://github.com/NEAT-project/neat/pull/204#issuecomment-263516970,@oystedal @bozakov Complemented result from HE with candidate properties.,"@oystedal I am willing to refactor the could so that it uses neat_json_send_once, however, I am not sure I completely follow you on how to do that. Maybe, I will contact you on this.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,204,2016-11-28T20:05:27Z,2016-11-29T08:33:39Z,2016-11-30T10:08:50Z,MERGED,True,44,5,1,https://github.com/karlgrin,Karlgrin/he pm 161128,9,[],https://github.com/NEAT-project/neat/pull/204,https://github.com/oystedal,4,https://github.com/NEAT-project/neat/pull/204#issuecomment-263521243,@oystedal @bozakov Complemented result from HE with candidate properties.,"My code in neat_pm_socket.c assumes that the callbacks given in the call to neat_json_send_once are not NULL. This is not necessary for the CIB feedback mechanism. My suggestion is to add an if-statement to check for this where the callbacks are called, so that neat_json_send_once can be called with no callbacks.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,204,2016-11-28T20:05:27Z,2016-11-29T08:33:39Z,2016-11-30T10:08:50Z,MERGED,True,44,5,1,https://github.com/karlgrin,Karlgrin/he pm 161128,9,[],https://github.com/NEAT-project/neat/pull/204,https://github.com/karlgrin,5,https://github.com/NEAT-project/neat/pull/204#issuecomment-263532932,@oystedal @bozakov Complemented result from HE with candidate properties.,@oystedal  I'll try to fix this this or next week.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,204,2016-11-28T20:05:27Z,2016-11-29T08:33:39Z,2016-11-30T10:08:50Z,MERGED,True,44,5,1,https://github.com/karlgrin,Karlgrin/he pm 161128,9,[],https://github.com/NEAT-project/neat/pull/204,https://github.com/karlgrin,6,https://github.com/NEAT-project/neat/pull/204#issuecomment-263622473,@oystedal @bozakov Complemented result from HE with candidate properties.,"@bozakov @oystedal Ok. So, is this something that ended on my plate, or did you conclude that the error originates from something else?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,204,2016-11-28T20:05:27Z,2016-11-29T08:33:39Z,2016-11-30T10:08:50Z,MERGED,True,44,5,1,https://github.com/karlgrin,Karlgrin/he pm 161128,9,[],https://github.com/NEAT-project/neat/pull/204,https://github.com/bozakov,7,https://github.com/NEAT-project/neat/pull/204#issuecomment-263832782,@oystedal @bozakov Complemented result from HE with candidate properties.,"@karlgrin I only undid the changes that add the candidate properties to the JSON structure. Sorry for the premature merge. I think you would be best suited to identify what was going wrong there.
(BTW I copied the master at that time into a bozakov/PM_HE_testing branch)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,210,2016-11-30T16:43:17Z,2016-11-30T16:45:30Z,2017-01-23T23:30:26Z,MERGED,True,1,1,1,https://github.com/weinrank,"""-g"" flag already set in debug mode",1,[],https://github.com/NEAT-project/neat/pull/210,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/210,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,220,2016-12-01T15:08:58Z,2016-12-02T22:21:49Z,2016-12-02T22:21:49Z,MERGED,True,6,7,1,https://github.com/dreibh,Documentation fix,1,['bug'],https://github.com/NEAT-project/neat/pull/220,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/220,"Documentation fix: neat_write.md should contain neat_write(), not neat_read().","Documentation fix: neat_write.md should contain neat_write(), not neat_read().",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,220,2016-12-01T15:08:58Z,2016-12-02T22:21:49Z,2016-12-02T22:21:49Z,MERGED,True,6,7,1,https://github.com/dreibh,Documentation fix,1,['bug'],https://github.com/NEAT-project/neat/pull/220,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/220#issuecomment-264578387,"Documentation fix: neat_write.md should contain neat_write(), not neat_read().","+1!
Danke! 😀",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,221,2016-12-01T16:36:27Z,2016-12-02T15:02:52Z,2017-01-30T14:18:16Z,MERGED,True,47,73,4,https://github.com/karlgrin,Karlgrin/he pm 161130,9,[],https://github.com/NEAT-project/neat/pull/221,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/221,Fixed #197 also uses neat_json_send_once as recommended by @oystedal.,Fixed #197 also uses neat_json_send_once as recommended by @oystedal.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,222,2016-12-02T17:48:14Z,2017-04-24T16:38:18Z,2017-04-24T16:38:18Z,MERGED,True,352,8,7,https://github.com/dreibh,RPM packaging for NEAT,19,['enhancement'],https://github.com/NEAT-project/neat/pull/222,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/222,"This pull request adds the necessary files and helper scripts for building NEAT RPM packages (e.g. Fedora Core). I now provide up-to-date NEAT package repositories for Fedora 23, 24, and 25, each for i386 and x86_64 at https://packages.nntb.no/nornet-applications/fedora/ .","This pull request adds the necessary files and helper scripts for building NEAT RPM packages (e.g. Fedora Core). I now provide up-to-date NEAT package repositories for Fedora 23, 24, and 25, each for i386 and x86_64 at https://packages.nntb.no/nornet-applications/fedora/ .",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,222,2016-12-02T17:48:14Z,2017-04-24T16:38:18Z,2017-04-24T16:38:18Z,MERGED,True,352,8,7,https://github.com/dreibh,RPM packaging for NEAT,19,['enhancement'],https://github.com/NEAT-project/neat/pull/222,https://github.com/dreibh,2,https://github.com/NEAT-project/neat/pull/222#issuecomment-264517609,"This pull request adds the necessary files and helper scripts for building NEAT RPM packages (e.g. Fedora Core). I now provide up-to-date NEAT package repositories for Fedora 23, 24, and 25, each for i386 and x86_64 at https://packages.nntb.no/nornet-applications/fedora/ .","FYI: the mentioned RPM package repository is of course used by NorNet Core slices as well. So, when using NorNet Core, enjoying NEAT software just requires a ""sudo dnf install libneat-examples"" (or libneat-devel, etc.) call to get everything installed.
For information on NorNet Core, see: https://www.nntb.no/ . The current site list can be found here: https://www.nntb.no/pub/nornet-configuration/NorNetCore-Sites.html .",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,222,2016-12-02T17:48:14Z,2017-04-24T16:38:18Z,2017-04-24T16:38:18Z,MERGED,True,352,8,7,https://github.com/dreibh,RPM packaging for NEAT,19,['enhancement'],https://github.com/NEAT-project/neat/pull/222,https://github.com/weinrank,3,https://github.com/NEAT-project/neat/pull/222#issuecomment-264578834,"This pull request adds the necessary files and helper scripts for building NEAT RPM packages (e.g. Fedora Core). I now provide up-to-date NEAT package repositories for Fedora 23, 24, and 25, each for i386 and x86_64 at https://packages.nntb.no/nornet-applications/fedora/ .","I don't know anything about building RPM packages, is it useful and possible to integrate a test into the buildbot environment to test the generation?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,222,2016-12-02T17:48:14Z,2017-04-24T16:38:18Z,2017-04-24T16:38:18Z,MERGED,True,352,8,7,https://github.com/dreibh,RPM packaging for NEAT,19,['enhancement'],https://github.com/NEAT-project/neat/pull/222,https://github.com/dreibh,4,https://github.com/NEAT-project/neat/pull/222#issuecomment-264808793,"This pull request adds the necessary files and helper scripts for building NEAT RPM packages (e.g. Fedora Core). I now provide up-to-date NEAT package repositories for Fedora 23, 24, and 25, each for i386 and x86_64 at https://packages.nntb.no/nornet-applications/fedora/ .","Hi,

Fredag 2. desember 2016 14.23.56 skrev Felix Weinrank:
 I don't know anything about building RPM packages, is it useful and possible to integrate a test into the buildbot environment to test the generation?
This should be no problem. It depends on your build bots, of course.

If you have a Fedora x86_64 installation, you can call the script ""make-rpm"" to build for a certain variant, e.g.:
./make-rpm fedora-24-x86_64
or
./make-rpm fedora-25-i386

Internally, the script calls ""mock"" (which is similar to ""pbuilder"" on Debian/Ubuntu).
…
-- 
Best regards / Mit freundlichen Grüßen / Med vennlig hilsen

=======================================================================
 Thomas Dreibholz

 Simula Research Laboratory
 Simula Innovation AS, Network Systems Group
 Visiting address: Martin Linges vei 17, 1364 Fornebu, Norway
 Mailing address:  P.O.Box 134, 1325 Lysaker, Norway
-----------------------------------------------------------------------
 E-Mail:     dreibh@simula.no
 Homepage:   http://simula.no/people/dreibh
=======================================================================",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,222,2016-12-02T17:48:14Z,2017-04-24T16:38:18Z,2017-04-24T16:38:18Z,MERGED,True,352,8,7,https://github.com/dreibh,RPM packaging for NEAT,19,['enhancement'],https://github.com/NEAT-project/neat/pull/222,https://github.com/weinrank,5,https://github.com/NEAT-project/neat/pull/222#issuecomment-264816887,"This pull request adds the necessary files and helper scripts for building NEAT RPM packages (e.g. Fedora Core). I now provide up-to-date NEAT package repositories for Fedora 23, 24, and 25, each for i386 and x86_64 at https://packages.nntb.no/nornet-applications/fedora/ .","We don't have Fedora buildslaves, only Ubuntu 16.10...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,222,2016-12-02T17:48:14Z,2017-04-24T16:38:18Z,2017-04-24T16:38:18Z,MERGED,True,352,8,7,https://github.com/dreibh,RPM packaging for NEAT,19,['enhancement'],https://github.com/NEAT-project/neat/pull/222,https://github.com/dreibh,6,https://github.com/NEAT-project/neat/pull/222#issuecomment-267919883,"This pull request adds the necessary files and helper scripts for building NEAT RPM packages (e.g. Fedora Core). I now provide up-to-date NEAT package repositories for Fedora 23, 24, and 25, each for i386 and x86_64 at https://packages.nntb.no/nornet-applications/fedora/ .","It would be possible to provide a Fedora VM for build test purposes, of course.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,222,2016-12-02T17:48:14Z,2017-04-24T16:38:18Z,2017-04-24T16:38:18Z,MERGED,True,352,8,7,https://github.com/dreibh,RPM packaging for NEAT,19,['enhancement'],https://github.com/NEAT-project/neat/pull/222,https://github.com/dreibh,7,https://github.com/NEAT-project/neat/pull/222#issuecomment-276649466,"This pull request adds the necessary files and helper scripts for building NEAT RPM packages (e.g. Fedora Core). I now provide up-to-date NEAT package repositories for Fedora 23, 24, and 25, each for i386 and x86_64 at https://packages.nntb.no/nornet-applications/fedora/ .","Working with latest ""master"" branch now. Is anything more needed to merge this pull request?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,223,2016-12-03T15:43:31Z,2016-12-03T15:43:38Z,2016-12-03T15:43:42Z,MERGED,True,2,2,1,https://github.com/adventureloop,Check signs correctly when comparing sockets,1,[],https://github.com/NEAT-project/neat/pull/223,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/223,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,228,2016-12-07T16:21:32Z,2016-12-12T00:00:22Z,2017-02-02T13:27:53Z,MERGED,True,622,315,22,https://github.com/ruengeler,Handle upcalls in Usrsctp,25,[],https://github.com/NEAT-project/neat/pull/228,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/228,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,229,2016-12-13T16:39:05Z,2016-12-20T15:58:10Z,2017-02-02T13:27:50Z,MERGED,True,132,99,7,https://github.com/ruengeler,Cmt,21,[],https://github.com/NEAT-project/neat/pull/229,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/229,"SCTP multihoming

an option is added to enable SCTP multihoming on the user level","SCTP multihoming

an option is added to enable SCTP multihoming on the user level",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,229,2016-12-13T16:39:05Z,2016-12-20T15:58:10Z,2017-02-02T13:27:50Z,MERGED,True,132,99,7,https://github.com/ruengeler,Cmt,21,[],https://github.com/NEAT-project/neat/pull/229,https://github.com/ruengeler,2,https://github.com/NEAT-project/neat/pull/229#issuecomment-267356412,"SCTP multihoming

an option is added to enable SCTP multihoming on the user level","Hi Thomas,

I increased the number of local addresses.
Since the user can decide in the application whether he wants to use multi-homing, he can enable it whenever he wants to. Therefore, I do not think that is has to be enabled by default.

Irene
 Am 15.12.2016 um 14:50 schrieb Thomas Dreibholz ***@***.***>:

 @dreibh approved this pull request.

 Looks fine. Just two suggestions:

 A fixed setting of MAX_LOCAL_ADDR=10 is too small. What about e.g. 64?
 Multi-homing should be enabled by default.
 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub <#229 (review)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AADsEgzEfGu-3tOCppZIINxWooWIPBsbks5rIUWIgaJpZM4LL8vk>.

*****************************************

Dr. Irene Rüngeler
Fachbereich Elektrotechnik und Informatik
Labor für Netzwerkprogrammierung, Datenbanklabor

Fachhochschule Münster
- University of Applied Sciences -
Stegerwaldstraße 39, Raum E130a
48565 Steinfurt

Tel: +49 2551 962-561
Fax: +49 2551 962-563
EMail: I.Ruengeler@fh-muenster.de",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,229,2016-12-13T16:39:05Z,2016-12-20T15:58:10Z,2017-02-02T13:27:50Z,MERGED,True,132,99,7,https://github.com/ruengeler,Cmt,21,[],https://github.com/NEAT-project/neat/pull/229,https://github.com/tuexen,3,https://github.com/NEAT-project/neat/pull/229#issuecomment-267373891,"SCTP multihoming

an option is added to enable SCTP multihoming on the user level","I would prefer to have multihoming off by default, since we have a higher chance of getting it working if we are behind a NAT.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,229,2016-12-13T16:39:05Z,2016-12-20T15:58:10Z,2017-02-02T13:27:50Z,MERGED,True,132,99,7,https://github.com/ruengeler,Cmt,21,[],https://github.com/NEAT-project/neat/pull/229,https://github.com/dreibh,4,https://github.com/NEAT-project/neat/pull/229#issuecomment-267398210,"SCTP multihoming

an option is added to enable SCTP multihoming on the user level","Hi,

Torsdag 15. desember 2016 07.30.54 skrev ruengeler:
 Hi Thomas,

 I increased the number of local addresses.
 Since the user can decide in the application whether he wants to use multi-homing, he can enable it whenever he wants to. Therefore, I do not think that is has to be enabled by default.
I mean: multi-homing is now a compile-time option. To enable it, it requires recompiling NEAT. What about always compiling it in (by default), and adding a run-time switch to turn it on/off?
…
-- 
Best regards / Mit freundlichen Grüßen / Med vennlig hilsen

=======================================================================
 Thomas Dreibholz

 Simula Research Laboratory
 Simula Innovation AS, Network Systems Group
 Visiting address: Martin Linges vei 17, 1364 Fornebu, Norway
 Mailing address:  P.O.Box 134, 1325 Lysaker, Norway
-----------------------------------------------------------------------
 E-Mail:     dreibh@simula.no
 Homepage:   http://simula.no/people/dreibh
=======================================================================",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,229,2016-12-13T16:39:05Z,2016-12-20T15:58:10Z,2017-02-02T13:27:50Z,MERGED,True,132,99,7,https://github.com/ruengeler,Cmt,21,[],https://github.com/NEAT-project/neat/pull/229,https://github.com/tuexen,5,https://github.com/NEAT-project/neat/pull/229#issuecomment-267454613,"SCTP multihoming

an option is added to enable SCTP multihoming on the user level","Multihoming should be a run time option and I think it is. At least Irene was working on this, not sure if this hit the tree yet.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,233,2016-12-15T13:45:57Z,2016-12-22T22:15:49Z,2016-12-22T22:15:50Z,MERGED,True,4,0,1,https://github.com/dreibh,neat_set_operations() fix for bug #231,2,[],https://github.com/NEAT-project/neat/pull/233,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/233,"neat_set_operations() fix for bug #231:

Free flow->operations, if owned by NEAT
flow->ownedByCore = 0 for user-defined operations","neat_set_operations() fix for bug #231:

Free flow->operations, if owned by NEAT
flow->ownedByCore = 0 for user-defined operations",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,234,2016-12-16T00:40:16Z,2016-12-19T13:06:58Z,2016-12-19T13:06:58Z,MERGED,True,1897,616,18,https://github.com/weinrank,"Multistreaming, http server, refactoring, updated tests and colorful log messages",74,[],https://github.com/NEAT-project/neat/pull/234,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/234,"Huge PR ... sorry in advance...
This PR adds

preliminary support for SCTP multistreaming: transparent mapping of multiple neat flows to sctp streams via a single association
colorful neat logging
new test system
simple http server
a lot of refactoring

The multistreaming features aren't finished yet but it's a working branch and I don't want the diffs getting any bigger.
Comments welcome...","Huge PR ... sorry in advance...
This PR adds

preliminary support for SCTP multistreaming: transparent mapping of multiple neat flows to sctp streams via a single association
colorful neat logging
new test system
simple http server
a lot of refactoring

The multistreaming features aren't finished yet but it's a working branch and I don't want the diffs getting any bigger.
Comments welcome...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,240,2016-12-20T12:44:48Z,2017-04-06T21:05:22Z,2017-04-06T21:05:22Z,MERGED,True,10,3,1,https://github.com/dreibh,Some bugfixes,9,[],https://github.com/NEAT-project/neat/pull/240,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/240,"Bugfixes for:

#235
#237
#231","Bugfixes for:

#235
#237
#231",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,240,2016-12-20T12:44:48Z,2017-04-06T21:05:22Z,2017-04-06T21:05:22Z,MERGED,True,10,3,1,https://github.com/dreibh,Some bugfixes,9,[],https://github.com/NEAT-project/neat/pull/240,https://github.com/bagder,2,https://github.com/NEAT-project/neat/pull/240#issuecomment-268240915,"Bugfixes for:

#235
#237
#231",So this work replaces #233 ?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,240,2016-12-20T12:44:48Z,2017-04-06T21:05:22Z,2017-04-06T21:05:22Z,MERGED,True,10,3,1,https://github.com/dreibh,Some bugfixes,9,[],https://github.com/NEAT-project/neat/pull/240,https://github.com/dreibh,3,https://github.com/NEAT-project/neat/pull/240#issuecomment-268243077,"Bugfixes for:

#235
#237
#231","Yes, the pull request includes the fix for #233.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,240,2016-12-20T12:44:48Z,2017-04-06T21:05:22Z,2017-04-06T21:05:22Z,MERGED,True,10,3,1,https://github.com/dreibh,Some bugfixes,9,[],https://github.com/NEAT-project/neat/pull/240,https://github.com/dreibh,4,https://github.com/NEAT-project/neat/pull/240#issuecomment-268243127,"Bugfixes for:

#235
#237
#231",Added check for MSG_NOSIGNAL.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,240,2016-12-20T12:44:48Z,2017-04-06T21:05:22Z,2017-04-06T21:05:22Z,MERGED,True,10,3,1,https://github.com/dreibh,Some bugfixes,9,[],https://github.com/NEAT-project/neat/pull/240,https://github.com/bagder,5,https://github.com/NEAT-project/neat/pull/240#issuecomment-268246139,"Bugfixes for:

#235
#237
#231","BTW: If you want MSG_NOSIGNAL behavior on Mac/BSD as well, you have to set the SO_NOSIGPIPE setsockopt() on the socket.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,240,2016-12-20T12:44:48Z,2017-04-06T21:05:22Z,2017-04-06T21:05:22Z,MERGED,True,10,3,1,https://github.com/dreibh,Some bugfixes,9,[],https://github.com/NEAT-project/neat/pull/240,https://github.com/weinrank,6,https://github.com/NEAT-project/neat/pull/240#issuecomment-268959194,"Bugfixes for:

#235
#237
#231","@dreibh
Please create a branch with your changes in this repository.
This will trigger the buildbots for configure, compile and runtime tests.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,240,2016-12-20T12:44:48Z,2017-04-06T21:05:22Z,2017-04-06T21:05:22Z,MERGED,True,10,3,1,https://github.com/dreibh,Some bugfixes,9,[],https://github.com/NEAT-project/neat/pull/240,https://github.com/dreibh,7,https://github.com/NEAT-project/neat/pull/240#issuecomment-268972239,"Bugfixes for:

#235
#237
#231","Hi,

Fredag 23. desember 2016 00.58.49 skrev Felix Weinrank:
 @dreibh
 Please create a branch with your changes in this repository.
 This will trigger the buildbots for configure, compile and runtime tests.
The branch is already there, since this is a pull request: dreibh/some-fixes.
…
-- 
Best regards / Mit freundlichen Grüßen / Med vennlig hilsen

=======================================================================
 Thomas Dreibholz

 Simula Research Laboratory
 Simula Innovation AS, Network Systems Group
 Visiting address: Martin Linges vei 17, 1364 Fornebu, Norway
 Mailing address:  P.O.Box 134, 1325 Lysaker, Norway
-----------------------------------------------------------------------
 E-Mail:     dreibh@simula.no
 Homepage:   http://simula.no/people/dreibh
=======================================================================",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,243,2016-12-21T14:08:51Z,2016-12-22T22:15:24Z,2017-10-06T12:10:35Z,MERGED,True,7,3,1,https://github.com/adventureloop,Don't try to unlink sockets that don't exist,1,[],https://github.com/NEAT-project/neat/pull/243,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/243,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,246,2016-12-21T16:48:37Z,2016-12-22T22:15:02Z,2016-12-22T22:15:02Z,MERGED,True,1101,917,12,https://github.com/weinrank,"Transparent flow mapping, whitespace changes, tneat",18,[],https://github.com/NEAT-project/neat/pull/246,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/246,"This PR:

improves transparent flow mapping (wip)
refactors some neat functions (e.g updatePollHandle)
converts remaining tabs -> spaces","This PR:

improves transparent flow mapping (wip)
refactors some neat functions (e.g updatePollHandle)
converts remaining tabs -> spaces",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,247,2016-12-22T09:48:54Z,2016-12-22T15:57:32Z,2016-12-22T15:57:32Z,MERGED,True,2,0,1,https://github.com/bagder,docs/neat_read.md: clarify actual_amount functionality on error,2,[],https://github.com/NEAT-project/neat/pull/247,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/247,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,247,2016-12-22T09:48:54Z,2016-12-22T15:57:32Z,2016-12-22T15:57:32Z,MERGED,True,2,0,1,https://github.com/bagder,docs/neat_read.md: clarify actual_amount functionality on error,2,[],https://github.com/NEAT-project/neat/pull/247,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/247#issuecomment-268768426,,"IMHO the actual_amount value should be set to 0 if an error occurs and no data has been written to the given buffer.
This is a clearer solution for me than leaving the value untouched.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,247,2016-12-22T09:48:54Z,2016-12-22T15:57:32Z,2016-12-22T15:57:32Z,MERGED,True,2,0,1,https://github.com/bagder,docs/neat_read.md: clarify actual_amount functionality on error,2,[],https://github.com/NEAT-project/neat/pull/247,https://github.com/bagder,3,https://github.com/NEAT-project/neat/pull/247#issuecomment-268774862,,I would agree. I just thought it was made like this intentionally...,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,248,2016-12-22T13:42:21Z,2016-12-22T22:14:38Z,2016-12-22T22:14:38Z,MERGED,True,95,4,4,https://github.com/dreibh,Added neat getlpaddrs() function to query local/remote addresses,7,['enhancement'],https://github.com/NEAT-project/neat/pull/248,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/248,"Added new NEAT Core API function to query local/remote addresses:
int neat_getlpaddrs(struct neat_ctx*  ctx,
struct neat_flow* flow,
struct sockaddr** addrs,
const int         local)","Added new NEAT Core API function to query local/remote addresses:
int neat_getlpaddrs(struct neat_ctx*  ctx,
struct neat_flow* flow,
struct sockaddr** addrs,
const int         local)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,248,2016-12-22T13:42:21Z,2016-12-22T22:14:38Z,2016-12-22T22:14:38Z,MERGED,True,95,4,4,https://github.com/dreibh,Added neat getlpaddrs() function to query local/remote addresses,7,['enhancement'],https://github.com/NEAT-project/neat/pull/248,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/248#issuecomment-268802868,"Added new NEAT Core API function to query local/remote addresses:
int neat_getlpaddrs(struct neat_ctx*  ctx,
struct neat_flow* flow,
struct sockaddr** addrs,
const int         local)",Please add a documentation for this function.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,248,2016-12-22T13:42:21Z,2016-12-22T22:14:38Z,2016-12-22T22:14:38Z,MERGED,True,95,4,4,https://github.com/dreibh,Added neat getlpaddrs() function to query local/remote addresses,7,['enhancement'],https://github.com/NEAT-project/neat/pull/248,https://github.com/dreibh,3,https://github.com/NEAT-project/neat/pull/248#issuecomment-268810179,"Added new NEAT Core API function to query local/remote addresses:
int neat_getlpaddrs(struct neat_ctx*  ctx,
struct neat_flow* flow,
struct sockaddr** addrs,
const int         local)",Added documentation as well.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,248,2016-12-22T13:42:21Z,2016-12-22T22:14:38Z,2016-12-22T22:14:38Z,MERGED,True,95,4,4,https://github.com/dreibh,Added neat getlpaddrs() function to query local/remote addresses,7,['enhancement'],https://github.com/NEAT-project/neat/pull/248,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/248#issuecomment-268811604,"Added new NEAT Core API function to query local/remote addresses:
int neat_getlpaddrs(struct neat_ctx*  ctx,
struct neat_flow* flow,
struct sockaddr** addrs,
const int         local)",lgtm!,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,248,2016-12-22T13:42:21Z,2016-12-22T22:14:38Z,2016-12-22T22:14:38Z,MERGED,True,95,4,4,https://github.com/dreibh,Added neat getlpaddrs() function to query local/remote addresses,7,['enhancement'],https://github.com/NEAT-project/neat/pull/248,https://github.com/dreibh,5,https://github.com/NEAT-project/neat/pull/248#issuecomment-268815206,"Added new NEAT Core API function to query local/remote addresses:
int neat_getlpaddrs(struct neat_ctx*  ctx,
struct neat_flow* flow,
struct sockaddr** addrs,
const int         local)",Done.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,248,2016-12-22T13:42:21Z,2016-12-22T22:14:38Z,2016-12-22T22:14:38Z,MERGED,True,95,4,4,https://github.com/dreibh,Added neat getlpaddrs() function to query local/remote addresses,7,['enhancement'],https://github.com/NEAT-project/neat/pull/248,https://github.com/dreibh,6,https://github.com/NEAT-project/neat/pull/248#issuecomment-268856624,"Added new NEAT Core API function to query local/remote addresses:
int neat_getlpaddrs(struct neat_ctx*  ctx,
struct neat_flow* flow,
struct sockaddr** addrs,
const int         local)",The documentation was unprecise -> fixed.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,249,2016-12-22T14:53:36Z,2016-12-22T15:55:48Z,2016-12-22T15:55:48Z,MERGED,True,32,0,1,https://github.com/bagder,neat_free_ctx.md: first take,1,[],https://github.com/NEAT-project/neat/pull/249,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/249,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,249,2016-12-22T14:53:36Z,2016-12-22T15:55:48Z,2016-12-22T15:55:48Z,MERGED,True,32,0,1,https://github.com/bagder,neat_free_ctx.md: first take,1,[],https://github.com/NEAT-project/neat/pull/249,https://github.com/bagder,2,https://github.com/NEAT-project/neat/pull/249#issuecomment-268822042,,Fixed,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,250,2016-12-22T15:36:43Z,2016-12-22T15:55:39Z,2016-12-22T15:55:40Z,MERGED,True,1,0,1,https://github.com/bagder,neat_read: init *actualAmt to zero,1,[],https://github.com/NEAT-project/neat/pull/250,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/250,"... for error cases primarily.
As previously mentioned in #247","... for error cases primarily.
As previously mentioned in #247",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,251,2016-12-22T21:26:51Z,2016-12-22T22:05:24Z,2016-12-22T22:05:24Z,MERGED,True,1,0,1,https://github.com/bagder,docs/index.rst: add neat_free_ctx,1,[],https://github.com/NEAT-project/neat/pull/251,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/251,Add neat_free_ctx function to the API index on the left side,Add neat_free_ctx function to the API index on the left side,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,253,2016-12-22T22:42:30Z,2016-12-22T22:42:37Z,2017-01-23T23:29:42Z,MERGED,True,12,10,2,https://github.com/weinrank,getlpaddrfix,3,[],https://github.com/NEAT-project/neat/pull/253,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/253,This PR fixes compile and configure errors,This PR fixes compile and configure errors,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,255,2017-01-09T11:40:24Z,2017-01-09T12:29:33Z,2017-10-06T12:10:36Z,MERGED,True,1,1,1,https://github.com/adventureloop,Use any addr for the REST service to bind to,1,[],https://github.com/NEAT-project/neat/pull/255,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/255,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,256,2017-01-11T12:01:16Z,2017-01-24T12:23:49Z,2017-01-24T12:23:49Z,MERGED,True,185,108,9,https://github.com/ruengeler,Add multihoming support with and without pm,9,[],https://github.com/NEAT-project/neat/pull/256,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/256,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,260,2017-01-14T08:42:58Z,2017-01-17T06:56:56Z,2017-01-17T06:57:15Z,MERGED,True,30,13,2,https://github.com/karlgrin,Issue #254: Disabling and deallocating priority timers when a flow is…,1,[],https://github.com/NEAT-project/neat/pull/260,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/260,… closed and deallocated.,… closed and deallocated.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,262,2017-01-16T19:40:06Z,2017-01-17T12:02:49Z,2017-01-17T12:02:49Z,MERGED,True,0,2,2,https://github.com/bagder,neat_flow: remove unused 'buffer_count' from struct,1,[],https://github.com/NEAT-project/neat/pull/262,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/262,Fixes #259,Fixes #259,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,263,2017-01-20T09:33:58Z,2017-01-22T21:21:03Z,2017-01-22T21:21:03Z,MERGED,True,701,691,26,https://github.com/bagder,neat_log: add a neat_ctx argument to logging API,1,[],https://github.com/NEAT-project/neat/pull/263,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/263,"To avoid global variables and thus fix both threading problems and
issues with using multiple contexts in the same thread.
NOTE: that in 67 places in the code, I had to comment out the neat_log() call since there was no obvious way for me to extract a context pointer to pass in to the function.
NOTE2: this patch touches 700 lines in 26 files and will thus bitrot really fast.
Fixes issue #261","To avoid global variables and thus fix both threading problems and
issues with using multiple contexts in the same thread.
NOTE: that in 67 places in the code, I had to comment out the neat_log() call since there was no obvious way for me to extract a context pointer to pass in to the function.
NOTE2: this patch touches 700 lines in 26 files and will thus bitrot really fast.
Fixes issue #261",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,264,2017-01-22T22:12:38Z,2017-01-22T22:12:47Z,2017-01-22T22:12:47Z,MERGED,True,133,117,5,https://github.com/weinrank,neat_log refactoring,6,[],https://github.com/NEAT-project/neat/pull/264,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/264,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,265,2017-01-23T14:50:11Z,2017-01-23T23:22:00Z,2017-01-23T23:22:00Z,MERGED,True,10,4,2,https://github.com/bagder,docs: update the neat_log* functions with the ctx argument,1,[],https://github.com/NEAT-project/neat/pull/265,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/265,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,267,2017-01-25T08:29:05Z,2017-04-11T02:11:54Z,2017-04-11T02:11:54Z,CLOSED,False,1130,0,7,https://github.com/naeemk,DSCP failover mechanism ,2,[],https://github.com/NEAT-project/neat/pull/267,https://github.com/naeemk,1,https://github.com/NEAT-project/neat/pull/267,"This piece of code is an attempt to provide a DSCP fallback mechanism in NEAT. When non-zero DSCP code-points is tried and if the connection fails, it will issue a new resolver+PM call, this time with DSCP=0. dscp_second_chance() is the function that implements this mechanism.
NOTE:  connection failures must likely to be checked in multiple places for this to work in practice, not just in the single location in neat_read_from_lower_layer() that is currently being checked. It is by no means complete in its current state.
comments/more testing is highly appreciated :)","This piece of code is an attempt to provide a DSCP fallback mechanism in NEAT. When non-zero DSCP code-points is tried and if the connection fails, it will issue a new resolver+PM call, this time with DSCP=0. dscp_second_chance() is the function that implements this mechanism.
NOTE:  connection failures must likely to be checked in multiple places for this to work in practice, not just in the single location in neat_read_from_lower_layer() that is currently being checked. It is by no means complete in its current state.
comments/more testing is highly appreciated :)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,267,2017-01-25T08:29:05Z,2017-04-11T02:11:54Z,2017-04-11T02:11:54Z,CLOSED,False,1130,0,7,https://github.com/naeemk,DSCP failover mechanism ,2,[],https://github.com/NEAT-project/neat/pull/267,https://github.com/naeemk,2,https://github.com/NEAT-project/neat/pull/267#issuecomment-293129570,"This piece of code is an attempt to provide a DSCP fallback mechanism in NEAT. When non-zero DSCP code-points is tried and if the connection fails, it will issue a new resolver+PM call, this time with DSCP=0. dscp_second_chance() is the function that implements this mechanism.
NOTE:  connection failures must likely to be checked in multiple places for this to work in practice, not just in the single location in neat_read_from_lower_layer() that is currently being checked. It is by no means complete in its current state.
comments/more testing is highly appreciated :)",I'm closing this as discussed during the telco.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,268,2017-01-26T15:52:20Z,2017-01-26T15:55:06Z,2017-01-26T15:55:06Z,MERGED,True,2,1,1,https://github.com/ruengeler,Set define for SCTP,3,[],https://github.com/NEAT-project/neat/pull/268,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/268,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,269,2017-01-27T10:27:46Z,2017-02-02T10:13:49Z,2017-05-29T14:34:13Z,MERGED,True,904,49,16,https://github.com/perhurt,Socket options,23,"['enhancement', 'help wanted']",https://github.com/NEAT-project/neat/pull/269,https://github.com/perhurt,1,https://github.com/NEAT-project/neat/pull/269,"socket option support for NEAT
How to use (lengthy policy example):
{
    ""uid"":""tcp"",
    ""description"":""prefer TCP over other protocols, add socket options"",
    ""priority"": 10,
    ""replace_matched"": false,
    ""match"":{
        ""transport"": {
            ""value"": ""TCP""
        }
    },
    ""properties"":{
        ""transport"": {
            ""value"": ""TCP"", ""precedence"": 2,
            ""score"": 2
        },
        ""SO/SOL_TCP/TCP_NODELAY"": {""value"": 1, ""precedence"": 2},
        ""SO/6/13"": {""value"": ""reno"", ""precedence"": 2}
    }
}

As shown above, socket options are prefixed with ""SO"" followed by level and name, all separated by '/', i.e.: SO/SO_LEVEL/SO_NAME"". The reason for this format is that neat does not support nested properties and that we need all this information. Note, that the notation SO/6/13 is only used internally by the PM and HE and is not meant to be set this way by the user, as this is host dependent.
Syntax
""SO/SO_LEVEL/SO_NAME"" : {""value"": X, ""precedence"": Y}

where value can be true/false, an integer or a string.
Features

possible to use both names, e.g. SOL_TCP or numbers 6 for both level and optname

Currently known limitations:

socket option names are often platform specific and not supported by python, i.e., many socket options are not possible to specify using its name (use of option numbers are better)
error handling is hard as many OSes accept any type of data as input to their options
only integers, booleans and strings are currently supported as option values

Help!

are we missing key functionality?
can we do it in a better way?
...","socket option support for NEAT
How to use (lengthy policy example):
{
    ""uid"":""tcp"",
    ""description"":""prefer TCP over other protocols, add socket options"",
    ""priority"": 10,
    ""replace_matched"": false,
    ""match"":{
        ""transport"": {
            ""value"": ""TCP""
        }
    },
    ""properties"":{
        ""transport"": {
            ""value"": ""TCP"", ""precedence"": 2,
            ""score"": 2
        },
        ""SO/SOL_TCP/TCP_NODELAY"": {""value"": 1, ""precedence"": 2},
        ""SO/6/13"": {""value"": ""reno"", ""precedence"": 2}
    }
}

As shown above, socket options are prefixed with ""SO"" followed by level and name, all separated by '/', i.e.: SO/SO_LEVEL/SO_NAME"". The reason for this format is that neat does not support nested properties and that we need all this information. Note, that the notation SO/6/13 is only used internally by the PM and HE and is not meant to be set this way by the user, as this is host dependent.
Syntax
""SO/SO_LEVEL/SO_NAME"" : {""value"": X, ""precedence"": Y}

where value can be true/false, an integer or a string.
Features

possible to use both names, e.g. SOL_TCP or numbers 6 for both level and optname

Currently known limitations:

socket option names are often platform specific and not supported by python, i.e., many socket options are not possible to specify using its name (use of option numbers are better)
error handling is hard as many OSes accept any type of data as input to their options
only integers, booleans and strings are currently supported as option values

Help!

are we missing key functionality?
can we do it in a better way?
...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,269,2017-01-27T10:27:46Z,2017-02-02T10:13:49Z,2017-05-29T14:34:13Z,MERGED,True,904,49,16,https://github.com/perhurt,Socket options,23,"['enhancement', 'help wanted']",https://github.com/NEAT-project/neat/pull/269,https://github.com/tuexen,2,https://github.com/NEAT-project/neat/pull/269#issuecomment-275644772,"socket option support for NEAT
How to use (lengthy policy example):
{
    ""uid"":""tcp"",
    ""description"":""prefer TCP over other protocols, add socket options"",
    ""priority"": 10,
    ""replace_matched"": false,
    ""match"":{
        ""transport"": {
            ""value"": ""TCP""
        }
    },
    ""properties"":{
        ""transport"": {
            ""value"": ""TCP"", ""precedence"": 2,
            ""score"": 2
        },
        ""SO/SOL_TCP/TCP_NODELAY"": {""value"": 1, ""precedence"": 2},
        ""SO/6/13"": {""value"": ""reno"", ""precedence"": 2}
    }
}

As shown above, socket options are prefixed with ""SO"" followed by level and name, all separated by '/', i.e.: SO/SO_LEVEL/SO_NAME"". The reason for this format is that neat does not support nested properties and that we need all this information. Note, that the notation SO/6/13 is only used internally by the PM and HE and is not meant to be set this way by the user, as this is host dependent.
Syntax
""SO/SO_LEVEL/SO_NAME"" : {""value"": X, ""precedence"": Y}

where value can be true/false, an integer or a string.
Features

possible to use both names, e.g. SOL_TCP or numbers 6 for both level and optname

Currently known limitations:

socket option names are often platform specific and not supported by python, i.e., many socket options are not possible to specify using its name (use of option numbers are better)
error handling is hard as many OSes accept any type of data as input to their options
only integers, booleans and strings are currently supported as option values

Help!

are we missing key functionality?
can we do it in a better way?
...","My understand of NEAT was that it provides a more abstract way than calling socket options via json instead of C code. Using SO/6/13 is also platform dependent and will do funny things on different platforms as long as you don't use #ifdefs. Do we really want to go down that road?
I thought that having something as ""low latency"" results for example in setting TCP_NODELAY for TCP or SCTP_NODELAY for SCTP and possibly other platform dependent socket options as well. Not sure if we want to control the congestion control algorithm.
I suggest we talk about the way we use policies to control what is used in the API and on the wire in Paris, since I'm sort of confused about this in general.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,269,2017-01-27T10:27:46Z,2017-02-02T10:13:49Z,2017-05-29T14:34:13Z,MERGED,True,904,49,16,https://github.com/perhurt,Socket options,23,"['enhancement', 'help wanted']",https://github.com/NEAT-project/neat/pull/269,https://github.com/perhurt,3,https://github.com/NEAT-project/neat/pull/269#issuecomment-275648009,"socket option support for NEAT
How to use (lengthy policy example):
{
    ""uid"":""tcp"",
    ""description"":""prefer TCP over other protocols, add socket options"",
    ""priority"": 10,
    ""replace_matched"": false,
    ""match"":{
        ""transport"": {
            ""value"": ""TCP""
        }
    },
    ""properties"":{
        ""transport"": {
            ""value"": ""TCP"", ""precedence"": 2,
            ""score"": 2
        },
        ""SO/SOL_TCP/TCP_NODELAY"": {""value"": 1, ""precedence"": 2},
        ""SO/6/13"": {""value"": ""reno"", ""precedence"": 2}
    }
}

As shown above, socket options are prefixed with ""SO"" followed by level and name, all separated by '/', i.e.: SO/SO_LEVEL/SO_NAME"". The reason for this format is that neat does not support nested properties and that we need all this information. Note, that the notation SO/6/13 is only used internally by the PM and HE and is not meant to be set this way by the user, as this is host dependent.
Syntax
""SO/SO_LEVEL/SO_NAME"" : {""value"": X, ""precedence"": Y}

where value can be true/false, an integer or a string.
Features

possible to use both names, e.g. SOL_TCP or numbers 6 for both level and optname

Currently known limitations:

socket option names are often platform specific and not supported by python, i.e., many socket options are not possible to specify using its name (use of option numbers are better)
error handling is hard as many OSes accept any type of data as input to their options
only integers, booleans and strings are currently supported as option values

Help!

are we missing key functionality?
can we do it in a better way?
...","We do have the abstract way of asking for e.g. a ""low latency"" profile at application level. But such a request must be translated into a number of settings/tweaks, for example socket options like TCP_NODELAY. I don't think this mapping can be done in any other place than the policy system, as it is the basis for generating candidates etc...?
But, as you suggest, we should definitely talk about this in Paris, easier than doing it online! :)",True,{'THUMBS_UP': ['https://github.com/bozakov']}
NEAT-project/neat,https://github.com/NEAT-project/neat,271,2017-01-27T12:28:44Z,2017-05-04T09:49:55Z,2017-05-04T09:49:55Z,MERGED,True,102,1,9,https://github.com/perhurt,MPTCP support,8,['help wanted'],https://github.com/NEAT-project/neat/pull/271,https://github.com/perhurt,1,https://github.com/NEAT-project/neat/pull/271,"Adds MPTCP as a separate protocol in NEAT. Tested and verified to work by me and @karlgrin
Open issues

the code in general (improvements, ...),
the inclusion of MPTCP as a protocol instead of a TCP option

We'd like to discuss (preferably face-to-face in Paris) whether MPTCP should be a separate protocol or only a option to TCP. In this pull request it's a separate protocol. The main motivation behind this is that MPTCP brings a lot of functionality/issues to the table, and that it might be easier to deal with them if MPTCP is a separate protocol.","Adds MPTCP as a separate protocol in NEAT. Tested and verified to work by me and @karlgrin
Open issues

the code in general (improvements, ...),
the inclusion of MPTCP as a protocol instead of a TCP option

We'd like to discuss (preferably face-to-face in Paris) whether MPTCP should be a separate protocol or only a option to TCP. In this pull request it's a separate protocol. The main motivation behind this is that MPTCP brings a lot of functionality/issues to the table, and that it might be easier to deal with them if MPTCP is a separate protocol.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,271,2017-01-27T12:28:44Z,2017-05-04T09:49:55Z,2017-05-04T09:49:55Z,MERGED,True,102,1,9,https://github.com/perhurt,MPTCP support,8,['help wanted'],https://github.com/NEAT-project/neat/pull/271,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/271#issuecomment-275655832,"Adds MPTCP as a separate protocol in NEAT. Tested and verified to work by me and @karlgrin
Open issues

the code in general (improvements, ...),
the inclusion of MPTCP as a protocol instead of a TCP option

We'd like to discuss (preferably face-to-face in Paris) whether MPTCP should be a separate protocol or only a option to TCP. In this pull request it's a separate protocol. The main motivation behind this is that MPTCP brings a lot of functionality/issues to the table, and that it might be easier to deal with them if MPTCP is a separate protocol.","Why did you add another example for a http client?
Are there more differences than the property?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,271,2017-01-27T12:28:44Z,2017-05-04T09:49:55Z,2017-05-04T09:49:55Z,MERGED,True,102,1,9,https://github.com/perhurt,MPTCP support,8,['help wanted'],https://github.com/NEAT-project/neat/pull/271,https://github.com/perhurt,3,https://github.com/NEAT-project/neat/pull/271#issuecomment-275656052,"Adds MPTCP as a separate protocol in NEAT. Tested and verified to work by me and @karlgrin
Open issues

the code in general (improvements, ...),
the inclusion of MPTCP as a protocol instead of a TCP option

We'd like to discuss (preferably face-to-face in Paris) whether MPTCP should be a separate protocol or only a option to TCP. In this pull request it's a separate protocol. The main motivation behind this is that MPTCP brings a lot of functionality/issues to the table, and that it might be easier to deal with them if MPTCP is a separate protocol.","No, there aren't any other differences. I actually didn't intend to include that file in the commit, I only used it for testing things. Sorry!",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,271,2017-01-27T12:28:44Z,2017-05-04T09:49:55Z,2017-05-04T09:49:55Z,MERGED,True,102,1,9,https://github.com/perhurt,MPTCP support,8,['help wanted'],https://github.com/NEAT-project/neat/pull/271,https://github.com/naeemk,4,https://github.com/NEAT-project/neat/pull/271#issuecomment-288904601,"Adds MPTCP as a separate protocol in NEAT. Tested and verified to work by me and @karlgrin
Open issues

the code in general (improvements, ...),
the inclusion of MPTCP as a protocol instead of a TCP option

We'd like to discuss (preferably face-to-face in Paris) whether MPTCP should be a separate protocol or only a option to TCP. In this pull request it's a separate protocol. The main motivation behind this is that MPTCP brings a lot of functionality/issues to the table, and that it might be easier to deal with them if MPTCP is a separate protocol.","The ""open issues"" were discussed in Paris, so can we merge this once the conflicts are resolved by @perhurt (and the extra example file removed)?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,271,2017-01-27T12:28:44Z,2017-05-04T09:49:55Z,2017-05-04T09:49:55Z,MERGED,True,102,1,9,https://github.com/perhurt,MPTCP support,8,['help wanted'],https://github.com/NEAT-project/neat/pull/271,https://github.com/weinrank,5,https://github.com/NEAT-project/neat/pull/271#issuecomment-299116245,"Adds MPTCP as a separate protocol in NEAT. Tested and verified to work by me and @karlgrin
Open issues

the code in general (improvements, ...),
the inclusion of MPTCP as a protocol instead of a TCP option

We'd like to discuss (preferably face-to-face in Paris) whether MPTCP should be a separate protocol or only a option to TCP. In this pull request it's a separate protocol. The main motivation behind this is that MPTCP brings a lot of functionality/issues to the table, and that it might be easier to deal with them if MPTCP is a separate protocol.",Is everybody fine if I remove the extra file and merge it into the master?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,271,2017-01-27T12:28:44Z,2017-05-04T09:49:55Z,2017-05-04T09:49:55Z,MERGED,True,102,1,9,https://github.com/perhurt,MPTCP support,8,['help wanted'],https://github.com/NEAT-project/neat/pull/271,https://github.com/perhurt,6,https://github.com/NEAT-project/neat/pull/271#issuecomment-299117074,"Adds MPTCP as a separate protocol in NEAT. Tested and verified to work by me and @karlgrin
Open issues

the code in general (improvements, ...),
the inclusion of MPTCP as a protocol instead of a TCP option

We'd like to discuss (preferably face-to-face in Paris) whether MPTCP should be a separate protocol or only a option to TCP. In this pull request it's a separate protocol. The main motivation behind this is that MPTCP brings a lot of functionality/issues to the table, and that it might be easier to deal with them if MPTCP is a separate protocol.",I'd be perfectly fine with that!,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,271,2017-01-27T12:28:44Z,2017-05-04T09:49:55Z,2017-05-04T09:49:55Z,MERGED,True,102,1,9,https://github.com/perhurt,MPTCP support,8,['help wanted'],https://github.com/NEAT-project/neat/pull/271,https://github.com/weinrank,7,https://github.com/NEAT-project/neat/pull/271#issuecomment-299141490,"Adds MPTCP as a separate protocol in NEAT. Tested and verified to work by me and @karlgrin
Open issues

the code in general (improvements, ...),
the inclusion of MPTCP as a protocol instead of a TCP option

We'd like to discuss (preferably face-to-face in Paris) whether MPTCP should be a separate protocol or only a option to TCP. In this pull request it's a separate protocol. The main motivation behind this is that MPTCP brings a lot of functionality/issues to the table, and that it might be easier to deal with them if MPTCP is a separate protocol.",@naeemk within an hour !!!,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,273,2017-01-31T14:38:41Z,2017-01-31T14:39:19Z,2017-05-29T14:34:14Z,MERGED,True,14,8,1,https://github.com/karlgrin,Karlgrin/he segfault zdravko paris,4,[],https://github.com/NEAT-project/neat/pull/273,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/273,Fix of segmentation fault in neat_log() call in on_candidate_resolved.,Fix of segmentation fault in neat_log() call in on_candidate_resolved.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,274,2017-01-31T15:01:26Z,2017-01-31T15:25:16Z,2017-01-31T15:25:16Z,MERGED,True,210,237,18,https://github.com/weinrank,Hackathon results - part 1,22,['solution to everything'],https://github.com/NEAT-project/neat/pull/274,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/274,"code cleanup
neat properties removed
expose flow's protocol
new test cases
client_http_get improvements","code cleanup
neat properties removed
expose flow's protocol
new test cases
client_http_get improvements",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,275,2017-01-31T15:11:30Z,2017-01-31T16:54:52Z,2017-01-31T16:54:52Z,MERGED,True,1,3,1,https://github.com/ruengeler,Bind all addresses for multihoming,2,[],https://github.com/NEAT-project/neat/pull/275,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/275,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,276,2017-01-31T17:51:43Z,2017-01-31T17:55:49Z,2017-01-31T17:55:49Z,CLOSED,False,846,173,21,https://github.com/weinrank,Multiple improvements,21,[],https://github.com/NEAT-project/neat/pull/276,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/276,"fix valgrind complains
sync with multistream branch
cppcheck added","fix valgrind complains
sync with multistream branch
cppcheck added",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,277,2017-01-31T18:14:20Z,2017-02-01T09:24:19Z,2017-02-01T09:24:19Z,MERGED,True,860,179,23,https://github.com/weinrank,Updates...,26,[],https://github.com/NEAT-project/neat/pull/277,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/277,"license date
msbench
coding style
valgrind fixes","license date
msbench
coding style
valgrind fixes",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,278,2017-02-01T15:07:14Z,2017-02-01T15:15:11Z,2017-02-01T15:15:11Z,MERGED,True,1,1,1,https://github.com/bagder,neat_new_flow: assign 'ctx' early,1,[],https://github.com/NEAT-project/neat/pull/278,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/278,"... since we need it for logging and things and we want to do that
before we do neat_open() which previously was the one to assign the ctx
field.","... since we need it for logging and things and we want to do that
before we do neat_open() which previously was the one to assign the ctx
field.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,279,2017-02-01T17:53:39Z,2017-02-02T08:15:47Z,2017-02-02T08:15:47Z,MERGED,True,30,6,1,https://github.com/bagder,neat_core: fix socket leaks,1,[],https://github.com/NEAT-project/neat/pull/279,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/279,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,280,2017-02-02T09:19:39Z,2017-02-02T09:25:35Z,2017-02-02T09:25:35Z,MERGED,True,40,444,7,https://github.com/weinrank,Cleanup and http-client improvements,10,[],https://github.com/NEAT-project/neat/pull/280,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/280,"some cleanups
http-client improved","some cleanups
http-client improved",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,281,2017-02-02T09:27:55Z,2017-02-02T09:33:06Z,2017-02-02T09:33:06Z,MERGED,True,23,14,3,https://github.com/ruengeler,Fix bug in combine_candidates,5,[],https://github.com/NEAT-project/neat/pull/281,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/281,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,285,2017-02-03T11:40:45Z,2017-02-03T12:36:17Z,2017-02-09T15:08:19Z,MERGED,True,74,39,1,https://github.com/bagder,client_http_run_once: optionally make use of multiple contexts,1,[],https://github.com/NEAT-project/neat/pull/285,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/285,"This patch adds a -c option to the example, and then the given amount of flows (with -n) are done spread out over the given number of contexts. To help us exercise that kind of use case easier.","This patch adds a -c option to the example, and then the given amount of flows (with -n) are done spread out over the given number of contexts. To help us exercise that kind of use case easier.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,286,2017-02-03T12:05:36Z,2017-02-03T12:35:46Z,2017-02-09T15:08:12Z,MERGED,True,2,14,1,https://github.com/bagder,neat_he: avoid doing uv_close() twice on the timer,1,[],https://github.com/NEAT-project/neat/pull/286,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/286,Fixes #284,Fixes #284,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,287,2017-02-03T12:21:24Z,2017-02-03T12:36:02Z,2017-02-09T15:08:10Z,MERGED,True,1,0,1,https://github.com/bagder,neat_pvd_release: avoid free twice,1,[],https://github.com/NEAT-project/neat/pull/287,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/287,I could easily trigger this problem when loading a large amount of images with Firefox-NEAT and with this fix it no longer occurs.,I could easily trigger this problem when loading a large amount of images with Firefox-NEAT and with this fix it no longer occurs.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,289,2017-02-09T15:06:38Z,2017-02-16T18:42:27Z,2017-02-20T13:28:32Z,MERGED,True,0,8,2,https://github.com/bagder,neat_request_capacity: removed,1,[],https://github.com/NEAT-project/neat/pull/289,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/289,"Initial stub for this function was added in May 2016 but it doesn't do
anything and it isn't documented.","Initial stub for this function was added in May 2016 but it doesn't do
anything and it isn't documented.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,294,2017-02-22T08:15:45Z,2017-04-06T14:04:11Z,2017-06-20T08:54:56Z,MERGED,True,85,13,1,https://github.com/bagder,neat_core: check return codes from memory functions,1,[],https://github.com/NEAT-project/neat/pull/294,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/294,"This change adds run-time checks of all *alloc() and strdup() calls made in neat_core.c. I'd say it is likely that one or more of these introduce memory leaks in the OOM path but I suspect more review, Coverity and plain old test cases can help us point those out.
(Doing a pull-request for feedback/considerations, especially while the buildbot page is down, see #293)","This change adds run-time checks of all *alloc() and strdup() calls made in neat_core.c. I'd say it is likely that one or more of these introduce memory leaks in the OOM path but I suspect more review, Coverity and plain old test cases can help us point those out.
(Doing a pull-request for feedback/considerations, especially while the buildbot page is down, see #293)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,295,2017-02-28T16:04:22Z,2017-02-28T16:04:40Z,2017-02-28T16:04:41Z,MERGED,True,8,8,1,https://github.com/ruengeler,Keep family when using literals,1,[],https://github.com/NEAT-project/neat/pull/295,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/295,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,296,2017-03-04T14:21:14Z,2017-03-08T19:27:07Z,2017-03-08T19:27:07Z,MERGED,True,3,3,1,https://github.com/oystedal,docs: Fix links to complete tutorial source code,1,[],https://github.com/NEAT-project/neat/pull/296,https://github.com/oystedal,1,https://github.com/NEAT-project/neat/pull/296,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,298,2017-03-20T14:04:23Z,2017-04-12T16:32:01Z,2017-04-12T16:32:01Z,MERGED,True,9,3,2,https://github.com/dreibh,Added neat_freelpaddrs(),1,[],https://github.com/NEAT-project/neat/pull/298,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/298,"Added neat_freelpaddrs(), in order to solve bug #290 .","Added neat_freelpaddrs(), in order to solve bug #290 .",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,298,2017-03-20T14:04:23Z,2017-04-12T16:32:01Z,2017-04-12T16:32:01Z,MERGED,True,9,3,2,https://github.com/dreibh,Added neat_freelpaddrs(),1,[],https://github.com/NEAT-project/neat/pull/298,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/298#issuecomment-292190737,"Added neat_freelpaddrs(), in order to solve bug #290 .",Is this function used somewhere in the code?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,298,2017-03-20T14:04:23Z,2017-04-12T16:32:01Z,2017-04-12T16:32:01Z,MERGED,True,9,3,2,https://github.com/dreibh,Added neat_freelpaddrs(),1,[],https://github.com/NEAT-project/neat/pull/298,https://github.com/dreibh,3,https://github.com/NEAT-project/neat/pull/298#issuecomment-292910450,"Added neat_freelpaddrs(), in order to solve bug #290 .","It is used by the NEAT sockets API (for which I will soon create a pull request). neat_freelpaddrs() is used to free addresses allocated by neat_getlpaddrs(), as requested by #290 . This is useful to support implementing custom memory allocators.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,302,2017-04-04T05:49:29Z,2017-04-04T08:39:26Z,2017-04-04T08:39:26Z,MERGED,True,34,1,3,https://github.com/weinrank,Exit neat_pvd_handle_newaddr function if DNS packet creation fails,5,[],https://github.com/NEAT-project/neat/pull/302,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/302,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,302,2017-04-04T05:49:29Z,2017-04-04T08:39:26Z,2017-04-04T08:39:26Z,MERGED,True,34,1,3,https://github.com/weinrank,Exit neat_pvd_handle_newaddr function if DNS packet creation fails,5,[],https://github.com/NEAT-project/neat/pull/302,https://github.com/bagder,2,https://github.com/NEAT-project/neat/pull/302#issuecomment-291402062,,"I'm 👍 since it is an improvement, but the function really should return an error code for this situation... neat_pvd.c has a whole bunch of places like this that should return error code but don't.",True,{'THUMBS_UP': ['https://github.com/weinrank']}
NEAT-project/neat,https://github.com/NEAT-project/neat,303,2017-04-06T21:06:20Z,2017-04-06T21:18:00Z,2017-04-06T21:18:00Z,MERGED,True,26,9,1,https://github.com/weinrank,Minor merge fixes,6,[],https://github.com/NEAT-project/neat/pull/303,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/303,Fixing some minor bugs resulting from merges.,Fixing some minor bugs resulting from merges.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,304,2017-04-07T07:35:22Z,2017-04-19T15:40:15Z,2017-04-19T15:40:16Z,MERGED,True,2,2,1,https://github.com/dreibh,"Bugfix: added commented out ""break;"" statements in switch block -> Fedora 26 build working",1,[],https://github.com/NEAT-project/neat/pull/304,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/304,A fix for bug #300.,A fix for bug #300.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/305,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)","This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/bagder,2,https://github.com/NEAT-project/neat/pull/305#issuecomment-292994498,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)",Sorry but you should submit this as a series of smaller pull requests and imho you should try to clarify the commit messages better. This is just too massive to review in a single go.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/dreibh,3,https://github.com/NEAT-project/neat/pull/305#issuecomment-293002940,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)","How do you suggest the pull request to be splitted up?
Note, that the few small changes to the NEAT Callback API are already separated as #304 and #298 (they are already merged in my Sockets API pull request, since they are required for building).
The rest of the Sockets API code is new under socketapi/. It does not make sense to split up the code there. The only thing possible would be to separate socketapi/examples/ (which then depends on the Sockets API, of course) and socketapi/docs (only some XML files; no dependency).",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/bagder,4,https://github.com/NEAT-project/neat/pull/305#issuecomment-293045013,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)","You could squash commits so that there aren't that many ""updates"" and ""fixes"" to previous commits. We don't need to see the development of these things, we want to review the result you want to merge.
I would then suggest you rebase the entire patch set to get rid of the large number of merge commits.

That should reduce the number of commits pretty good. As for ways to split it up logically, I don't know enough of your work to tell you how or if that is possible. Most things can however be divided into smaller chunks...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/weinrank,5,https://github.com/NEAT-project/neat/pull/305#issuecomment-293061408,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)",Does not compile on any platform except Ubuntu...,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/dreibh,6,https://github.com/NEAT-project/neat/pull/305#issuecomment-293311094,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)","Hi,
On mandag 10. april 2017 21.58.50 CEST Felix Weinrank wrote:
 Does not compile on any platform except Ubuntu...
I need more details. Which platform? What goes wrong?


The Sockets API branch successfully builds:

Ubuntu variants: Trusty, Xenial, Yakkety, Zesty
Ubuntu architectures: amd64, arm64, armhf, i386, ppc64el
-> https://launchpad.net/%7Edreibh/+archive/ubuntu/ppa/+packages?
field.name_filter=neat&field.status_filter=published&field.series_filter=

Fedora variants: 24, 25, 26, rawhide
Fedora architectures: amd64, i386
-> https://packages.nntb.no/nornet-applications/fedora/

Not tested with FreeBSD yet. I will check this.

I do not use MacOS.
…
-- 
Best regards / Mit freundlichen Grüßen / Med vennlig hilsen

=======================================================================
 Thomas Dreibholz

 Simula Research Laboratory
 Simula Innovation AS, Network Systems Group
 Visiting address: Martin Linges vei 17, 1364 Fornebu, Norway
 Mailing address:  P.O.Box 134, 1325 Lysaker, Norway
-----------------------------------------------------------------------
 E-Mail:     dreibh@simula.no
 Homepage:   http://simula.no/people/dreibh
=======================================================================",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/weinrank,7,https://github.com/NEAT-project/neat/pull/305#issuecomment-293312985,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)","Platforms:

FreeBSD stable
FreeBSD head
FreeBSD arm
NetBSD
Mac OS

see: http://buildbot.nplab.de:28010/waterfall?branch=dreibh/neat-socketapi

I do not use MacOS.

It's never too late....",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/dreibh,8,https://github.com/NEAT-project/neat/pull/305#issuecomment-295598700,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)","FreeBSD and NetBSD are working now.
Is the build bot (http://buildbot.nplab.de:28010/waterfall?branch=dreibh/neat-socketapi) not working again? The last time I looked for the MacOS problems, it showed some linker problems. MacOS probably requires some work-around in the CMake files, but I have no possibility to examine this further.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/weinrank,9,https://github.com/NEAT-project/neat/pull/305#issuecomment-295634659,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)","The buildbots are working great! 💪
The website only shows the most recent builds, if you want to rebuild your branch:

select Builders in the top menu
scroll down to the Force All Builds section
type in your branch name in the branch input field - in your case dreibh/neat-socketapi
click Force Build
wait for the results :)

http://buildbot.nplab.de:28010/builders/osx/builds/1705/steps/compile/logs/stdio
There's the output you're looking for.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/dreibh,10,https://github.com/NEAT-project/neat/pull/305#issuecomment-296422471,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)",The MacOS build problem is also fixed now.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,305,2017-04-10T15:41:50Z,2017-04-24T16:38:17Z,2017-04-24T16:38:17Z,MERGED,True,7983,61,73,https://github.com/dreibh,NEAT Sockets API,290,['enhancement'],https://github.com/NEAT-project/neat/pull/305,https://github.com/weinrank,11,https://github.com/NEAT-project/neat/pull/305#issuecomment-296665478,"This is the NEAT Sockets API pull request, including examples and documentation.
Available so far:

Socket operations, blocking and non-blocking with poll()/select().
Wrapper-code for handling non-NEAT sockets.
Examples: HTTP client, HTTP servers (single socket, multi-socket with select(), multi-socket with threads)
Packaging and builds for Ubuntu/Debian and Fedora
=> API is ready useful for most application cases

Future work (will not be part of this pull request):

TLS security (requires TLS to work in NEAT Callback API; API details to be discussed)
Notifications (notification queue is already implemented)",Buildbots are fine - can't say much about the code.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,307,2017-04-11T22:16:51Z,2017-04-12T11:41:54Z,2017-04-12T11:41:54Z,MERGED,True,562,499,6,https://github.com/weinrank,Some fixes,5,[],https://github.com/NEAT-project/neat/pull/307,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/307,"don't use neat_internal.h in the examples anymore
improve openssl library detection for cmake
update tls-trust.c","don't use neat_internal.h in the examples anymore
improve openssl library detection for cmake
update tls-trust.c",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,308,2017-04-19T15:07:54Z,2017-04-20T12:54:55Z,2017-04-20T12:54:55Z,MERGED,True,210,54,5,https://github.com/weinrank,Multistreaming - latest changes,19,[],https://github.com/NEAT-project/neat/pull/308,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/308,"This PR syncs the master branch with the multistreaming development branch.
Most impact: multistreaming is enabled by default.","This PR syncs the master branch with the multistreaming development branch.
Most impact: multistreaming is enabled by default.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,309,2017-04-20T13:29:02Z,2017-04-24T13:20:15Z,2017-04-24T13:26:23Z,MERGED,True,43,46,4,https://github.com/weinrank,More strict compiler flags,4,['enhancement'],https://github.com/NEAT-project/neat/pull/309,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/309,"-Wfloat-equal
-Wshadow
-Wpointer-arith
-Wunreachable-code
-Winit-self","-Wfloat-equal
-Wshadow
-Wpointer-arith
-Wunreachable-code
-Winit-self",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,309,2017-04-20T13:29:02Z,2017-04-24T13:20:15Z,2017-04-24T13:26:23Z,MERGED,True,43,46,4,https://github.com/weinrank,More strict compiler flags,4,['enhancement'],https://github.com/NEAT-project/neat/pull/309,https://github.com/dreibh,2,https://github.com/NEAT-project/neat/pull/309#issuecomment-296422066,"-Wfloat-equal
-Wshadow
-Wpointer-arith
-Wunreachable-code
-Winit-self",The pull request is useful. The stricter options also work with the NEAT Sockets API branch.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,309,2017-04-20T13:29:02Z,2017-04-24T13:20:15Z,2017-04-24T13:26:23Z,MERGED,True,43,46,4,https://github.com/weinrank,More strict compiler flags,4,['enhancement'],https://github.com/NEAT-project/neat/pull/309,https://github.com/bagder,3,https://github.com/NEAT-project/neat/pull/309#issuecomment-296426957,"-Wfloat-equal
-Wshadow
-Wpointer-arith
-Wunreachable-code
-Winit-self","My only remark, which already existed, is that I can't see any checks that these options actually work with the used compiler.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,309,2017-04-20T13:29:02Z,2017-04-24T13:20:15Z,2017-04-24T13:26:23Z,MERGED,True,43,46,4,https://github.com/weinrank,More strict compiler flags,4,['enhancement'],https://github.com/NEAT-project/neat/pull/309,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/309#issuecomment-296665208,"-Wfloat-equal
-Wshadow
-Wpointer-arith
-Wunreachable-code
-Winit-self",@bagder I've no experience in checking that the compiler supports the checks. Any hints?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,309,2017-04-20T13:29:02Z,2017-04-24T13:20:15Z,2017-04-24T13:26:23Z,MERGED,True,43,46,4,https://github.com/weinrank,More strict compiler flags,4,['enhancement'],https://github.com/NEAT-project/neat/pull/309,https://github.com/bagder,5,https://github.com/NEAT-project/neat/pull/309#issuecomment-296666767,"-Wfloat-equal
-Wshadow
-Wpointer-arith
-Wunreachable-code
-Winit-self","I'm a cmake illiterate so I'm not much good for actually writing this (I've done my time in the autotools school). But the general idea would be to either

test-build a basic source snippet with the compiler option(s) you intend to enable OR
check which compiler you use, which version it has, and then enable the compiler options for this combination that you know works",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,310,2017-04-21T07:51:35Z,2017-04-21T07:51:49Z,2017-05-29T14:34:07Z,MERGED,True,5,1,1,https://github.com/karlgrin,Fixed error in caching of HE connection attempt results.,1,[],https://github.com/NEAT-project/neat/pull/310,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/310,Fixed a minor error in the way connection attempt results are cached. Previously all non-winning connection attempts were seen as failed connection attempts.,Fixed a minor error in the way connection attempt results are cached. Previously all non-winning connection attempts were seen as failed connection attempts.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,315,2017-04-25T11:12:45Z,2017-04-25T12:13:21Z,2017-04-25T20:18:32Z,MERGED,True,38,23,1,https://github.com/weinrank,Set SO_NOSIGPIPE on supported platforms,4,[],https://github.com/NEAT-project/neat/pull/315,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/315,@bagder Pls review.,@bagder Pls review.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,317,2017-04-28T12:08:13Z,2017-05-08T12:01:09Z,2017-05-08T12:01:09Z,MERGED,True,1043,255,15,https://github.com/ruengeler,Dtls for SCTP,50,[],https://github.com/NEAT-project/neat/pull/317,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/317,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,317,2017-04-28T12:08:13Z,2017-05-08T12:01:09Z,2017-05-08T12:01:09Z,MERGED,True,1043,255,15,https://github.com/ruengeler,Dtls for SCTP,50,[],https://github.com/NEAT-project/neat/pull/317,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/317#issuecomment-299440296,,Ready to merge or any changes outstanding?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,317,2017-04-28T12:08:13Z,2017-05-08T12:01:09Z,2017-05-08T12:01:09Z,MERGED,True,1043,255,15,https://github.com/ruengeler,Dtls for SCTP,50,[],https://github.com/NEAT-project/neat/pull/317,https://github.com/ruengeler,3,https://github.com/NEAT-project/neat/pull/317#issuecomment-299448352,,"There are no changes outstanding. Some instances have to be added to the neat.supp file, which I cannot do myself.
The dtls_sctp_discard server has to be set up and started from a location different from my home directory.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,318,2017-05-08T10:37:59Z,2017-05-08T12:01:37Z,2017-05-08T12:01:37Z,MERGED,True,11,6,5,https://github.com/dreibh,Bugfixes,3,['bug'],https://github.com/NEAT-project/neat/pull/318,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/318,"Fix 1: NEAT_STACK_MAX_NUM must at least be 6, since 6 stacks are initialised in accept_resolve_cb() -> buffer overflow with current setting of 5.
Fix 2: Sockets API mistakenly configured STDIN, STDOUT and STDERR into non-blocking mode.","Fix 1: NEAT_STACK_MAX_NUM must at least be 6, since 6 stacks are initialised in accept_resolve_cb() -> buffer overflow with current setting of 5.
Fix 2: Sockets API mistakenly configured STDIN, STDOUT and STDERR into non-blocking mode.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,320,2017-05-10T08:52:19Z,2017-06-27T14:40:47Z,2017-06-27T14:40:47Z,MERGED,True,32,16,3,https://github.com/dreibh,Fixes: RPM packaging dependencies and issue 1 of bug #319,5,['bug'],https://github.com/NEAT-project/neat/pull/320,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/320,"RPM package dependencies were wrong -> fixed.
Fixed build issue (""socklen_t len"" declared twice when building with usrsctp -> warning).","RPM package dependencies were wrong -> fixed.
Fixed build issue (""socklen_t len"" declared twice when building with usrsctp -> warning).",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,320,2017-05-10T08:52:19Z,2017-06-27T14:40:47Z,2017-06-27T14:40:47Z,MERGED,True,32,16,3,https://github.com/dreibh,Fixes: RPM packaging dependencies and issue 1 of bug #319,5,['bug'],https://github.com/NEAT-project/neat/pull/320,https://github.com/dreibh,2,https://github.com/NEAT-project/neat/pull/320#issuecomment-306785162,"RPM package dependencies were wrong -> fixed.
Fixed build issue (""socklen_t len"" declared twice when building with usrsctp -> warning).",Is anything more to do to get this pull request merged?,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,321,2017-05-11T23:39:02Z,2017-05-14T09:47:53Z,2017-05-14T09:47:53Z,CLOSED,False,765,826,26,https://github.com/weinrank,Closing improvements and several fixes,56,[],https://github.com/NEAT-project/neat/pull/321,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/321,"This is a huge PR, sorry ... :)
Changes:
closing mechanism refactoring
If a peer closes the transport connection, this is now indicated by the on_close event and not by receiving no data when calling neat_read.
According to #316
callback handling
The callback handling has been improved in many aspects.
For example on_all_written is called every time a neat_write call has successfully delivered data to the transport layer and the flow buffer is drained.
See #272
improved memory management
The library should now handle memory a lot better, valgrind is much happier now. :)
==15298== 
==15298== HEAP SUMMARY:
==15298==     in use at exit: 0 bytes in 0 blocks
==15298==   total heap usage: 61,819 allocs, 61,819 frees, 6,215,102 bytes allocated
==15298== 
==15298== All heap blocks were freed -- no leaks are possible
==15298== 
==15298== For counts of detected and suppressed errors, rerun with: -v
==15298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

misc changes

#291 should be fixed
examples are not installed systemwide by default
improved OpenSSL detection
examples cleaned (e.g. http client supports https, https client removed)
message preserving/stream property
code cleaning

Comments welcome...","This is a huge PR, sorry ... :)
Changes:
closing mechanism refactoring
If a peer closes the transport connection, this is now indicated by the on_close event and not by receiving no data when calling neat_read.
According to #316
callback handling
The callback handling has been improved in many aspects.
For example on_all_written is called every time a neat_write call has successfully delivered data to the transport layer and the flow buffer is drained.
See #272
improved memory management
The library should now handle memory a lot better, valgrind is much happier now. :)
==15298== 
==15298== HEAP SUMMARY:
==15298==     in use at exit: 0 bytes in 0 blocks
==15298==   total heap usage: 61,819 allocs, 61,819 frees, 6,215,102 bytes allocated
==15298== 
==15298== All heap blocks were freed -- no leaks are possible
==15298== 
==15298== For counts of detected and suppressed errors, rerun with: -v
==15298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

misc changes

#291 should be fixed
examples are not installed systemwide by default
improved OpenSSL detection
examples cleaned (e.g. http client supports https, https client removed)
message preserving/stream property
code cleaning

Comments welcome...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,322,2017-05-16T09:25:22Z,2017-05-16T09:25:30Z,2017-05-29T14:34:18Z,MERGED,True,4,2,2,https://github.com/karlgrin,Fixes needed for D-ITG-NEAT to work.,1,[],https://github.com/NEAT-project/neat/pull/322,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/322,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,323,2017-05-29T14:30:00Z,2017-05-29T14:32:42Z,2017-05-29T14:32:50Z,MERGED,True,110,24,4,https://github.com/karlgrin,Fixed error message when HE caches connection results to PM. Also fix…,2,[],https://github.com/NEAT-project/neat/pull/323,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/323,…ed what I believe is an indentation error in the CIB class in PM.,…ed what I believe is an indentation error in the CIB class in PM.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,325,2017-06-14T19:04:30Z,2017-06-15T09:27:59Z,2017-06-15T09:29:48Z,MERGED,True,36,19,5,https://github.com/kristrev,Improve asynchronous address handling,1,[],https://github.com/NEAT-project/neat/pull/325,https://github.com/kristrev,1,https://github.com/NEAT-project/neat/pull/325,"When the DNS literal timeout was reduced to 1ms, a bug in how we
retrieve addresses asynchronous (i.e., the initial address dump on
Linux) was exposed. neat_resolver_timeout_shared() was sometimes called
before any source address was received, causing the resolve callback to
be called with NEAT_ERROR (which is not handled btw).
I have chosen to fix this issue by adding a flag which is set when the
inital address dump is done. Addresses are read synchronously on BSD, so
the flag is set immediatly. Until this flag is set, we will keep calling
neat_resolver_timeout_shared() with a given interval.
Another ""bug"" discovered when fixing this issue, is that resolving
domains/literals on machines that has no IP (for example right after
boot) will fail. However, I don't think handling this error is the
responsibility of the resolver. How to handle a resolve failure is up to
for example the application, shall we give up or keep trying?
Waiting for buildbot to become available and tests run before merging.","When the DNS literal timeout was reduced to 1ms, a bug in how we
retrieve addresses asynchronous (i.e., the initial address dump on
Linux) was exposed. neat_resolver_timeout_shared() was sometimes called
before any source address was received, causing the resolve callback to
be called with NEAT_ERROR (which is not handled btw).
I have chosen to fix this issue by adding a flag which is set when the
inital address dump is done. Addresses are read synchronously on BSD, so
the flag is set immediatly. Until this flag is set, we will keep calling
neat_resolver_timeout_shared() with a given interval.
Another ""bug"" discovered when fixing this issue, is that resolving
domains/literals on machines that has no IP (for example right after
boot) will fail. However, I don't think handling this error is the
responsibility of the resolver. How to handle a resolve failure is up to
for example the application, shall we give up or keep trying?
Waiting for buildbot to become available and tests run before merging.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,325,2017-06-14T19:04:30Z,2017-06-15T09:27:59Z,2017-06-15T09:29:48Z,MERGED,True,36,19,5,https://github.com/kristrev,Improve asynchronous address handling,1,[],https://github.com/NEAT-project/neat/pull/325,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/325#issuecomment-308679149,"When the DNS literal timeout was reduced to 1ms, a bug in how we
retrieve addresses asynchronous (i.e., the initial address dump on
Linux) was exposed. neat_resolver_timeout_shared() was sometimes called
before any source address was received, causing the resolve callback to
be called with NEAT_ERROR (which is not handled btw).
I have chosen to fix this issue by adding a flag which is set when the
inital address dump is done. Addresses are read synchronously on BSD, so
the flag is set immediatly. Until this flag is set, we will keep calling
neat_resolver_timeout_shared() with a given interval.
Another ""bug"" discovered when fixing this issue, is that resolving
domains/literals on machines that has no IP (for example right after
boot) will fail. However, I don't think handling this error is the
responsibility of the resolver. How to handle a resolve failure is up to
for example the application, shall we give up or keep trying?
Waiting for buildbot to become available and tests run before merging.",LGTM!,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,328,2017-06-18T21:12:00Z,2017-06-20T08:41:05Z,2017-06-20T08:41:05Z,MERGED,True,136,11,6,https://github.com/apetlund,Neatstat -  Cross-platform TCP statistics,9,[],https://github.com/NEAT-project/neat/pull/328,https://github.com/apetlund,1,https://github.com/NEAT-project/neat/pull/328,"TCP_INFO statistics for *BSD and OSX.
Statistics debug printout support in client_http_get to test global statistics","TCP_INFO statistics for *BSD and OSX.
Statistics debug printout support in client_http_get to test global statistics",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,334,2017-06-19T09:43:40Z,2017-06-20T10:47:44Z,2017-06-20T10:47:45Z,MERGED,True,2418,1319,31,https://github.com/weinrank,"Closing procedure improvements, several fixes",95,[],https://github.com/NEAT-project/neat/pull/334,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/334,"This is a huge PR, sorry ... :)
Changes:
closing mechanism refactoring
If a peer closes the transport connection, this is now indicated by the on_close event and not by receiving no data when calling neat_read.
According to #316
callback handling
The callback handling has been improved in many aspects.
For example on_all_written is called every time a neat_write call has successfully delivered data to the transport layer and the flow buffer is drained.
See #272
improved memory management
The library should now handle memory a lot better, valgrind is much happier now. :)
==15298== 
==15298== HEAP SUMMARY:
==15298==     in use at exit: 0 bytes in 0 blocks
==15298==   total heap usage: 61,819 allocs, 61,819 frees, 6,215,102 bytes allocated
==15298== 
==15298== All heap blocks were freed -- no leaks are possible
==15298== 
==15298== For counts of detected and suppressed errors, rerun with: -v
==15298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

misc changes

#291 should be fixed
examples are not installed systemwide by default
improved OpenSSL detection
examples cleaned (e.g. http client supports https, https client removed)
message preserving/stream property
code cleaning","This is a huge PR, sorry ... :)
Changes:
closing mechanism refactoring
If a peer closes the transport connection, this is now indicated by the on_close event and not by receiving no data when calling neat_read.
According to #316
callback handling
The callback handling has been improved in many aspects.
For example on_all_written is called every time a neat_write call has successfully delivered data to the transport layer and the flow buffer is drained.
See #272
improved memory management
The library should now handle memory a lot better, valgrind is much happier now. :)
==15298== 
==15298== HEAP SUMMARY:
==15298==     in use at exit: 0 bytes in 0 blocks
==15298==   total heap usage: 61,819 allocs, 61,819 frees, 6,215,102 bytes allocated
==15298== 
==15298== All heap blocks were freed -- no leaks are possible
==15298== 
==15298== For counts of detected and suppressed errors, rerun with: -v
==15298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

misc changes

#291 should be fixed
examples are not installed systemwide by default
improved OpenSSL detection
examples cleaned (e.g. http client supports https, https client removed)
message preserving/stream property
code cleaning",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,334,2017-06-19T09:43:40Z,2017-06-20T10:47:44Z,2017-06-20T10:47:45Z,MERGED,True,2418,1319,31,https://github.com/weinrank,"Closing procedure improvements, several fixes",95,[],https://github.com/NEAT-project/neat/pull/334,https://github.com/bagder,2,https://github.com/NEAT-project/neat/pull/334#issuecomment-309393135,"This is a huge PR, sorry ... :)
Changes:
closing mechanism refactoring
If a peer closes the transport connection, this is now indicated by the on_close event and not by receiving no data when calling neat_read.
According to #316
callback handling
The callback handling has been improved in many aspects.
For example on_all_written is called every time a neat_write call has successfully delivered data to the transport layer and the flow buffer is drained.
See #272
improved memory management
The library should now handle memory a lot better, valgrind is much happier now. :)
==15298== 
==15298== HEAP SUMMARY:
==15298==     in use at exit: 0 bytes in 0 blocks
==15298==   total heap usage: 61,819 allocs, 61,819 frees, 6,215,102 bytes allocated
==15298== 
==15298== All heap blocks were freed -- no leaks are possible
==15298== 
==15298== For counts of detected and suppressed errors, rerun with: -v
==15298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

misc changes

#291 should be fixed
examples are not installed systemwide by default
improved OpenSSL detection
examples cleaned (e.g. http client supports https, https client removed)
message preserving/stream property
code cleaning","To make this PR more reviewable and ready to merge, I would ask you to:

squash commits so that you leave only the logical changes you want to show, there's no need for us to see your development history
provide clear and descriptive commit messages that explain what you're changing and possibly why

Ideally, you can detect subsets of this PR that can and should be made into its own separate PRs instead, to make it easier to review and makes it easier for future debugging and bisecting.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,334,2017-06-19T09:43:40Z,2017-06-20T10:47:44Z,2017-06-20T10:47:45Z,MERGED,True,2418,1319,31,https://github.com/weinrank,"Closing procedure improvements, several fixes",95,[],https://github.com/NEAT-project/neat/pull/334,https://github.com/weinrank,3,https://github.com/NEAT-project/neat/pull/334#issuecomment-309684395,"This is a huge PR, sorry ... :)
Changes:
closing mechanism refactoring
If a peer closes the transport connection, this is now indicated by the on_close event and not by receiving no data when calling neat_read.
According to #316
callback handling
The callback handling has been improved in many aspects.
For example on_all_written is called every time a neat_write call has successfully delivered data to the transport layer and the flow buffer is drained.
See #272
improved memory management
The library should now handle memory a lot better, valgrind is much happier now. :)
==15298== 
==15298== HEAP SUMMARY:
==15298==     in use at exit: 0 bytes in 0 blocks
==15298==   total heap usage: 61,819 allocs, 61,819 frees, 6,215,102 bytes allocated
==15298== 
==15298== All heap blocks were freed -- no leaks are possible
==15298== 
==15298== For counts of detected and suppressed errors, rerun with: -v
==15298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

misc changes

#291 should be fixed
examples are not installed systemwide by default
improved OpenSSL detection
examples cleaned (e.g. http client supports https, https client removed)
message preserving/stream property
code cleaning","I'm not familiar with squashing commits, many of my commits can't be linked to specific topic.
Would it hurt you much if I just merge the PR this time and take care in the future? :)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,334,2017-06-19T09:43:40Z,2017-06-20T10:47:44Z,2017-06-20T10:47:45Z,MERGED,True,2418,1319,31,https://github.com/weinrank,"Closing procedure improvements, several fixes",95,[],https://github.com/NEAT-project/neat/pull/334,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/334#issuecomment-309684854,"This is a huge PR, sorry ... :)
Changes:
closing mechanism refactoring
If a peer closes the transport connection, this is now indicated by the on_close event and not by receiving no data when calling neat_read.
According to #316
callback handling
The callback handling has been improved in many aspects.
For example on_all_written is called every time a neat_write call has successfully delivered data to the transport layer and the flow buffer is drained.
See #272
improved memory management
The library should now handle memory a lot better, valgrind is much happier now. :)
==15298== 
==15298== HEAP SUMMARY:
==15298==     in use at exit: 0 bytes in 0 blocks
==15298==   total heap usage: 61,819 allocs, 61,819 frees, 6,215,102 bytes allocated
==15298== 
==15298== All heap blocks were freed -- no leaks are possible
==15298== 
==15298== For counts of detected and suppressed errors, rerun with: -v
==15298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

misc changes

#291 should be fixed
examples are not installed systemwide by default
improved OpenSSL detection
examples cleaned (e.g. http client supports https, https client removed)
message preserving/stream property
code cleaning","Would it help if I use ""squash and merge""?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,334,2017-06-19T09:43:40Z,2017-06-20T10:47:44Z,2017-06-20T10:47:45Z,MERGED,True,2418,1319,31,https://github.com/weinrank,"Closing procedure improvements, several fixes",95,[],https://github.com/NEAT-project/neat/pull/334,https://github.com/bagder,5,https://github.com/NEAT-project/neat/pull/334#issuecomment-309687721,"This is a huge PR, sorry ... :)
Changes:
closing mechanism refactoring
If a peer closes the transport connection, this is now indicated by the on_close event and not by receiving no data when calling neat_read.
According to #316
callback handling
The callback handling has been improved in many aspects.
For example on_all_written is called every time a neat_write call has successfully delivered data to the transport layer and the flow buffer is drained.
See #272
improved memory management
The library should now handle memory a lot better, valgrind is much happier now. :)
==15298== 
==15298== HEAP SUMMARY:
==15298==     in use at exit: 0 bytes in 0 blocks
==15298==   total heap usage: 61,819 allocs, 61,819 frees, 6,215,102 bytes allocated
==15298== 
==15298== All heap blocks were freed -- no leaks are possible
==15298== 
==15298== For counts of detected and suppressed errors, rerun with: -v
==15298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

misc changes

#291 should be fixed
examples are not installed systemwide by default
improved OpenSSL detection
examples cleaned (e.g. http client supports https, https client removed)
message preserving/stream property
code cleaning","Squashing == merging several related commits into one. Easiest done with git rebase -i and when you've narrowed it down to the set you like (and written clear commit messages), you force-push to this branch and we can review what you have.
I don't think it is acceptable for any project to push 93 commits with lacking commit messages and (virtually) no review, but I don't make the rules and I will accept whatever everyone thinks is suitable. (That's absolutely nothing personal against you nor your work, it's a question of what process we should use when merging code.)
""squash and merge"" is probably a bit too simple for you since it will merge all commits into one, which feels it might be a bit too exaggerated in the other direction.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,334,2017-06-19T09:43:40Z,2017-06-20T10:47:44Z,2017-06-20T10:47:45Z,MERGED,True,2418,1319,31,https://github.com/weinrank,"Closing procedure improvements, several fixes",95,[],https://github.com/NEAT-project/neat/pull/334,https://github.com/weinrank,6,https://github.com/NEAT-project/neat/pull/334#issuecomment-309716321,"This is a huge PR, sorry ... :)
Changes:
closing mechanism refactoring
If a peer closes the transport connection, this is now indicated by the on_close event and not by receiving no data when calling neat_read.
According to #316
callback handling
The callback handling has been improved in many aspects.
For example on_all_written is called every time a neat_write call has successfully delivered data to the transport layer and the flow buffer is drained.
See #272
improved memory management
The library should now handle memory a lot better, valgrind is much happier now. :)
==15298== 
==15298== HEAP SUMMARY:
==15298==     in use at exit: 0 bytes in 0 blocks
==15298==   total heap usage: 61,819 allocs, 61,819 frees, 6,215,102 bytes allocated
==15298== 
==15298== All heap blocks were freed -- no leaks are possible
==15298== 
==15298== For counts of detected and suppressed errors, rerun with: -v
==15298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

misc changes

#291 should be fixed
examples are not installed systemwide by default
improved OpenSSL detection
examples cleaned (e.g. http client supports https, https client removed)
message preserving/stream property
code cleaning",I totally agree with you that merging these changes without a review is not a good way but we discussed this and agreed on just merge the changes.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,335,2017-06-21T18:10:51Z,2017-06-22T12:15:14Z,2017-06-22T12:15:14Z,MERGED,True,132,84,5,https://github.com/weinrank,Added TCP_NOTSENT_LOWAT functionality,10,[],https://github.com/NEAT-project/neat/pull/335,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/335,"Added TCP_NOTSENT_LOWAT functionality via neat_set_low_watermark function.
TNEAT makes use of the neat_set_low_watermark function via -w option.
minimal_server and minimal_client refactored for API changes","Added TCP_NOTSENT_LOWAT functionality via neat_set_low_watermark function.
TNEAT makes use of the neat_set_low_watermark function via -w option.
minimal_server and minimal_client refactored for API changes",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,335,2017-06-21T18:10:51Z,2017-06-22T12:15:14Z,2017-06-22T12:15:14Z,MERGED,True,132,84,5,https://github.com/weinrank,Added TCP_NOTSENT_LOWAT functionality,10,[],https://github.com/NEAT-project/neat/pull/335,https://github.com/mwelzl,2,https://github.com/NEAT-project/neat/pull/335#issuecomment-310180884,"Added TCP_NOTSENT_LOWAT functionality via neat_set_low_watermark function.
TNEAT makes use of the neat_set_low_watermark function via -w option.
minimal_server and minimal_client refactored for API changes","hooray! thanks!
…
Sent from my iPhone
 On 21 Jun 2017, at 20:10, Felix Weinrank ***@***.***> wrote:

 Added TCP_NOTSENT_LOWAT functionality via neat_set_low_watermark function.
 TNEAT makes use of the neat_set_low_watermark function via -w option.
 minimal_server and minimal_client refactored for API changes

 You can view, comment on, or merge this pull request online at:

   #335

 Commit Summary

 minimal_client: use neat_close semantic
 Print function in neat_log
 improved error logging if sending fails
 improved error logging if sending fails
 minimal_server improved
 neat_set_low_watermark() function added
 tneat extended by neat_set_low_matermark functionality
 tneat : argument fix
 Merge branch 'weinrank/fixes' of github.com:NEAT-project/neat into weinrank/fixes
 Merge branch 'master' into weinrank/fixes
 File Changes

 M examples/minimal_client.c (7)
 M examples/minimal_server.c (26)
 M examples/tneat.c (154)
 M neat.h (3)
 M neat_core.c (26)
 Patch Links:

 https://github.com/NEAT-project/neat/pull/335.patch
 https://github.com/NEAT-project/neat/pull/335.diff
 —
 You are receiving this because you are subscribed to this thread.
 Reply to this email directly, view it on GitHub, or mute the thread.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,336,2017-06-23T09:50:25Z,2017-06-23T10:39:37Z,2017-06-23T10:39:37Z,CLOSED,False,106,5,5,https://github.com/balanceofcowards,Support for Python / NEAT Python bindings,10,[],https://github.com/NEAT-project/neat/pull/336,https://github.com/balanceofcowards,1,https://github.com/NEAT-project/neat/pull/336,"This changeset adds Python bindings via SWIG to the NEAT core. Generation of bindings has to be enabled deliberately at compile time (add ""-DSWIG_PYTHON=1"" to your cmake command).","This changeset adds Python bindings via SWIG to the NEAT core. Generation of bindings has to be enabled deliberately at compile time (add ""-DSWIG_PYTHON=1"" to your cmake command).",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,336,2017-06-23T09:50:25Z,2017-06-23T10:39:37Z,2017-06-23T10:39:37Z,CLOSED,False,106,5,5,https://github.com/balanceofcowards,Support for Python / NEAT Python bindings,10,[],https://github.com/NEAT-project/neat/pull/336,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/336#issuecomment-310628618,"This changeset adds Python bindings via SWIG to the NEAT core. Generation of bindings has to be enabled deliberately at compile time (add ""-DSWIG_PYTHON=1"" to your cmake command).","Two comments:
Please create a branch within the NEAT repository and use it instead of your own fork, every commit triggers the buildbots and helps finding bugs.
We should keep the different components of the project separated, so I suggest to create a directory ""python"" (or whatever name you prefer) where the python related examples are located.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,336,2017-06-23T09:50:25Z,2017-06-23T10:39:37Z,2017-06-23T10:39:37Z,CLOSED,False,106,5,5,https://github.com/balanceofcowards,Support for Python / NEAT Python bindings,10,[],https://github.com/NEAT-project/neat/pull/336,https://github.com/balanceofcowards,3,https://github.com/NEAT-project/neat/pull/336#issuecomment-310630070,"This changeset adds Python bindings via SWIG to the NEAT core. Generation of bindings has to be enabled deliberately at compile time (add ""-DSWIG_PYTHON=1"" to your cmake command).","Ok, can do - but I need commit rights for the main repo first :)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,336,2017-06-23T09:50:25Z,2017-06-23T10:39:37Z,2017-06-23T10:39:37Z,CLOSED,False,106,5,5,https://github.com/balanceofcowards,Support for Python / NEAT Python bindings,10,[],https://github.com/NEAT-project/neat/pull/336,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/336#issuecomment-310630745,"This changeset adds Python bindings via SWIG to the NEAT core. Generation of bindings has to be enabled deliberately at compile time (add ""-DSWIG_PYTHON=1"" to your cmake command).",Granted :),True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,337,2017-06-23T10:41:59Z,2017-07-28T11:16:33Z,2017-07-28T11:16:33Z,MERGED,True,309,5,6,https://github.com/balanceofcowards,Support for Python / NEAT Python bindings (reopened),27,['enhancement'],https://github.com/NEAT-project/neat/pull/337,https://github.com/balanceofcowards,1,https://github.com/NEAT-project/neat/pull/337,"(Reopened - now from a branch within the main repository)
This changeset adds Python bindings via SWIG to the NEAT core. Generation of bindings has to be enabled deliberately at compile time (add ""-DSWIG_PYTHON=1"" to your cmake command).","(Reopened - now from a branch within the main repository)
This changeset adds Python bindings via SWIG to the NEAT core. Generation of bindings has to be enabled deliberately at compile time (add ""-DSWIG_PYTHON=1"" to your cmake command).",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,338,2017-06-27T07:50:05Z,2017-07-23T21:47:31Z,2017-07-23T21:47:31Z,MERGED,True,19,15,9,https://github.com/dreibh,Some fixes for the Ubuntu/Debian and Fedora packaging,47,['bug'],https://github.com/NEAT-project/neat/pull/338,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/338,Some fixes for the Ubuntu/Debian and Fedora packaging. The packaging processes broke after merging recent pull requests.,Some fixes for the Ubuntu/Debian and Fedora packaging. The packaging processes broke after merging recent pull requests.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,338,2017-06-27T07:50:05Z,2017-07-23T21:47:31Z,2017-07-23T21:47:31Z,MERGED,True,19,15,9,https://github.com/dreibh,Some fixes for the Ubuntu/Debian and Fedora packaging,47,['bug'],https://github.com/NEAT-project/neat/pull/338,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/338#issuecomment-311363428,Some fixes for the Ubuntu/Debian and Fedora packaging. The packaging processes broke after merging recent pull requests.,"We agreed in Cork to put the socket-api stuff in a separate repository, this PR does the opposite...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,338,2017-06-27T07:50:05Z,2017-07-23T21:47:31Z,2017-07-23T21:47:31Z,MERGED,True,19,15,9,https://github.com/dreibh,Some fixes for the Ubuntu/Debian and Fedora packaging,47,['bug'],https://github.com/NEAT-project/neat/pull/338,https://github.com/dreibh,3,https://github.com/NEAT-project/neat/pull/338#issuecomment-311367414,Some fixes for the Ubuntu/Debian and Fedora packaging. The packaging processes broke after merging recent pull requests.,The pull request just fixes the package build issues. It is not intended to separate the two libraries. This would be a different task.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,338,2017-06-27T07:50:05Z,2017-07-23T21:47:31Z,2017-07-23T21:47:31Z,MERGED,True,19,15,9,https://github.com/dreibh,Some fixes for the Ubuntu/Debian and Fedora packaging,47,['bug'],https://github.com/NEAT-project/neat/pull/338,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/338#issuecomment-311368293,Some fixes for the Ubuntu/Debian and Fedora packaging. The packaging processes broke after merging recent pull requests.,It re-enables building the socket-api by default which has been disabled by intention.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,338,2017-06-27T07:50:05Z,2017-07-23T21:47:31Z,2017-07-23T21:47:31Z,MERGED,True,19,15,9,https://github.com/dreibh,Some fixes for the Ubuntu/Debian and Fedora packaging,47,['bug'],https://github.com/NEAT-project/neat/pull/338,https://github.com/dreibh,5,https://github.com/NEAT-project/neat/pull/338#issuecomment-312208534,Some fixes for the Ubuntu/Debian and Fedora packaging. The packaging processes broke after merging recent pull requests.,"No. In CMakeLists.txt (version 40774dc of June 27):
OPTION(SOCKET_API ""Include the socket API"" 0)
That is, building the sockets API is off by default (as it was before).
I just verified the build behaviour:
git clean -df ; cmake . && make -j12 && ls -l socketapi/.so
...
ls: klarte ikke å åpne 'socketapi/.so': Fila eller mappa finnes ikke
The sockets API is only built when explicitly requested with SOCKET_API=1:
git clean -df ; cmake -DSOCKET_API=1 . && make -j12 && ls -l socketapi/.so
...
lrwxrwxrwx 1 dreibh dreibh     22 juni  30 10:26 socketapi/libneat-socketapi.so -> libneat-socketapi.so.0
lrwxrwxrwx 1 dreibh dreibh     32 juni  30 10:26 socketapi/libneat-socketapi.so.0 -> libneat-socketapi.so.0.0.1td158
-rwxrwxr-x 1 dreibh dreibh 179264 juni  30 10:26 socketapi/libneat-socketapi.so.0.0.1td158",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,338,2017-06-27T07:50:05Z,2017-07-23T21:47:31Z,2017-07-23T21:47:31Z,MERGED,True,19,15,9,https://github.com/dreibh,Some fixes for the Ubuntu/Debian and Fedora packaging,47,['bug'],https://github.com/NEAT-project/neat/pull/338,https://github.com/weinrank,6,https://github.com/NEAT-project/neat/pull/338#issuecomment-312210823,Some fixes for the Ubuntu/Debian and Fedora packaging. The packaging processes broke after merging recent pull requests.,"neat/autogen.sh
    
    
         Line 4
      in
      98c49ad
    
  
  
    

        
          
           cmake -DCMAKE_INSTALL_PREFIX=/usr -DSOCKET_API=1 -DUSRSCTP_SUPPORT=1 -DSCTP_MULTISTREAMING=1 -DFLOW_GROUPS=1 . 
        
    
  



  
    
      neat/debian/rules
    
    
         Line 10
      in
      98c49ad
    
  
  
    

        
          
           dh_auto_configure -- -DSOCKET_API=1 -DUSRSCTP_SUPPORT=1 -DSCTP_MULTISTREAMING=1 -DFLOW_GROUPS=1 
        
    
  



  
    
      neat/rpm/libneat.spec
    
    
         Line 134
      in
      98c49ad
    
  
  
    

        
          
           %cmake -DCMAKE_INSTALL_PREFIX=/usr -DSOCKET_API=1 -DUSRSCTP_SUPPORT=0 -DSCTP_MULTISTREAMING=1 -DFLOW_GROUPS=1 .",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,338,2017-06-27T07:50:05Z,2017-07-23T21:47:31Z,2017-07-23T21:47:31Z,MERGED,True,19,15,9,https://github.com/dreibh,Some fixes for the Ubuntu/Debian and Fedora packaging,47,['bug'],https://github.com/NEAT-project/neat/pull/338,https://github.com/dreibh,7,https://github.com/NEAT-project/neat/pull/338#issuecomment-312228085,Some fixes for the Ubuntu/Debian and Fedora packaging. The packaging processes broke after merging recent pull requests.,"debian/rules and rpm/libneat.spec need a full build including the sockets API, of course. The resulting binary packages for Debian/Ubuntu and Fedora can of course be installed separately (i.e. pbuilder/mock will build separate packages for core library, sockets API, development, etc.). However, the rules in these files are only relevant for Debian/Ubuntu and Fedora packaging. Manually building from source (with ""cmake"") is not affected by these files.
This pull requests only fixes the packaging (which currently does not work in ""master""), it does not separate both API libraries. This is a different task.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,338,2017-06-27T07:50:05Z,2017-07-23T21:47:31Z,2017-07-23T21:47:31Z,MERGED,True,19,15,9,https://github.com/dreibh,Some fixes for the Ubuntu/Debian and Fedora packaging,47,['bug'],https://github.com/NEAT-project/neat/pull/338,https://github.com/dreibh,8,https://github.com/NEAT-project/neat/pull/338#issuecomment-313355434,Some fixes for the Ubuntu/Debian and Fedora packaging. The packaging processes broke after merging recent pull requests.,"Again: debian/rules and rpm/libneat.spec are the configuration files for the Debian and Fedora packaging. They need this option for a full build from source. The resulting binary packages are of course separated into callback API library, sockets API library, etc..",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,340,2017-07-04T22:15:24Z,2017-07-11T12:58:07Z,2017-07-11T12:58:07Z,MERGED,True,103,116,4,https://github.com/bagder,neat_set_operations: deep copy the neat_flow_operations struct,1,[],https://github.com/NEAT-project/neat/pull/340,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/340,"... instead of just copying the pointer to the user-provided struct.
Fixes #230","... instead of just copying the pointer to the user-provided struct.
Fixes #230",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,342,2017-07-15T14:30:51Z,2017-07-15T16:32:54Z,2017-07-15T16:36:36Z,MERGED,True,11,21,2,https://github.com/weinrank,Small bufixes,17,"['bug', 'enhancement']",https://github.com/NEAT-project/neat/pull/342,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/342,"This PR fixes:
#341
#339
And enables multistreaming by default.","This PR fixes:
#341
#339
And enables multistreaming by default.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,344,2017-07-15T16:16:41Z,2017-07-15T16:33:25Z,2017-07-15T16:33:25Z,MERGED,True,14,6,1,https://github.com/dreibh,IETF Hackathon bugfix: Need to set MSG_NOSIGNAL for some sendmsg() calls.,1,['bug'],https://github.com/NEAT-project/neat/pull/344,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/344,IETF Hackathon bugfix: Need to set MSG_NOSIGNAL for some sendmsg() calls.,IETF Hackathon bugfix: Need to set MSG_NOSIGNAL for some sendmsg() calls.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,345,2017-07-15T16:18:22Z,2017-07-16T10:23:45Z,2017-07-16T10:23:45Z,MERGED,True,20,0,3,https://github.com/dreibh,IETF Hackathon improvement: added function for explicit initialisation of sockets API,3,['enhancement'],https://github.com/NEAT-project/neat/pull/345,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/345,"IETF Hackathon improvement: added function for explicit initialisation of sockets API. This is necessary in some multi-threaded programs, in order to have control over the initialisation time.","IETF Hackathon improvement: added function for explicit initialisation of sockets API. This is necessary in some multi-threaded programs, in order to have control over the initialisation time.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,346,2017-07-15T16:19:23Z,2017-07-16T10:24:29Z,2017-07-16T10:24:30Z,MERGED,True,140,96,4,https://github.com/dreibh,IETF Hackathon improvement: improvements for NEAT sockets API examples,6,['enhancement'],https://github.com/NEAT-project/neat/pull/346,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/346,IETF Hackathon improvement: small improvements for NEAT sockets API example.,IETF Hackathon improvement: small improvements for NEAT sockets API example.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,347,2017-07-15T16:20:15Z,2017-07-16T10:25:27Z,2017-07-16T10:25:27Z,MERGED,True,75,5,1,https://github.com/dreibh,IETF Hackathon improvement: some work on nsa_getsockopt()/nsa_setsockopt().,2,['enhancement'],https://github.com/NEAT-project/neat/pull/347,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/347,IETF Hackathon improvements: some work on nsa_getsockopt()/nsa_setsockopt().,IETF Hackathon improvements: some work on nsa_getsockopt()/nsa_setsockopt().,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,348,2017-07-15T16:30:51Z,2017-07-16T10:25:13Z,2017-07-16T10:25:13Z,MERGED,True,1,1,1,https://github.com/dreibh,IETF Hackathon bugfix: nsa_wait_for_event() has to wait for given event mask,1,['bug'],https://github.com/NEAT-project/neat/pull/348,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/348,Bugfix: nsa_wait_for_event() has to wait for given event mask (not for hard-coded POLLIN).,Bugfix: nsa_wait_for_event() has to wait for given event mask (not for hard-coded POLLIN).,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,349,2017-07-16T08:15:25Z,2017-07-16T10:25:00Z,2017-07-16T10:25:00Z,MERGED,True,34,21,2,https://github.com/dreibh,IETF Hackathon bugfix: Socket API I/O function fixes.,1,['bug'],https://github.com/NEAT-project/neat/pull/349,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/349,Some fixes for Socket API I/O functions.,Some fixes for Socket API I/O functions.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,350,2017-07-16T09:55:01Z,2017-07-16T10:24:46Z,2017-07-16T10:24:46Z,MERGED,True,12,1,3,https://github.com/dreibh,IETF Hackathon bugfix: avoid freeing already-removed sockets during nsa_accept().,1,['bug'],https://github.com/NEAT-project/neat/pull/350,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/350,"Bugfix: need to keep track of accepting socket, in order to avoid trying to accept already-removed sockets.","Bugfix: need to keep track of accepting socket, in order to avoid trying to accept already-removed sockets.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,351,2017-07-16T11:09:27Z,2017-07-16T11:12:30Z,2017-07-16T11:12:30Z,MERGED,True,4,4,1,https://github.com/dreibh,"NEAT Hackathon bugfix: fixed log level of ""Stack %d not supported"" message",1,['bug'],https://github.com/NEAT-project/neat/pull/351,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/351,"""Stack %d not supported"" should be NEAT_LOG_INFO, not NEAT_LOG_ERROR. Otherwise, NEAT complains about missing MPTCP when it is in the property list as possible transport.
""[ERR] Stack 4 not supported""","""Stack %d not supported"" should be NEAT_LOG_INFO, not NEAT_LOG_ERROR. Otherwise, NEAT complains about missing MPTCP when it is in the property list as possible transport.
""[ERR] Stack 4 not supported""",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,352,2017-07-16T14:48:53Z,2017-07-19T11:34:11Z,2017-07-19T11:34:11Z,MERGED,True,26,27,3,https://github.com/dreibh,IETF Hackathon improvement: more socket API examples improvements,2,['enhancement'],https://github.com/NEAT-project/neat/pull/352,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/352,"Got rid of ""using namespace"".
Using NEAT I/O functions instead of fstream.","Got rid of ""using namespace"".
Using NEAT I/O functions instead of fstream.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,353,2017-07-16T14:53:52Z,2017-07-19T11:33:56Z,2017-07-19T11:33:56Z,MERGED,True,2,2,1,https://github.com/dreibh,IETF Hackathon bugfix: nsa_accept() needs a loop for blocking mode,1,['bug'],https://github.com/NEAT-project/neat/pull/353,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/353,nsa_accept() needs a loop for blocking mode. It may be possible that incoming connects are already closed (and removed) -> continue waiting.,nsa_accept() needs a loop for blocking mode. It may be possible that incoming connects are already closed (and removed) -> continue waiting.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,354,2017-07-20T16:49:55Z,2017-07-21T16:42:37Z,2017-07-21T16:42:37Z,MERGED,True,56,27,3,https://github.com/dreibh,IETF Hackathon bugfix: fixed mutex problems,1,['bug'],https://github.com/NEAT-project/neat/pull/354,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/354,"Fixed several places with mutex locking problems, leading to non-exclusive accesses on structures.","Fixed several places with mutex locking problems, leading to non-exclusive accesses on structures.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,355,2017-07-20T16:50:34Z,2017-07-21T16:42:15Z,2017-07-21T16:42:15Z,MERGED,True,4,4,1,https://github.com/dreibh,IETF Hackathon bugfix: fixed nsa_recvmsg() handling on socket closure,1,['bug'],https://github.com/NEAT-project/neat/pull/355,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/355,IETF Hackathon bugfix: fixed nsa_recvmsg() handling on socket closure.,IETF Hackathon bugfix: fixed nsa_recvmsg() handling on socket closure.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,356,2017-07-21T09:30:29Z,2017-07-21T11:32:25Z,2017-07-21T11:32:25Z,MERGED,True,12,10,1,https://github.com/dreibh,IETF Hackathon bugfix: fixed the neat_close() bug,1,['bug'],https://github.com/NEAT-project/neat/pull/356,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/356,"Fixed double-free which was triggerable with tneat call:
tneat -L -P prop_tcp.json  127.0.0.1","Fixed double-free which was triggerable with tneat call:
tneat -L -P prop_tcp.json  127.0.0.1",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,357,2017-07-21T12:44:22Z,2017-07-21T16:41:34Z,2017-07-21T16:41:34Z,MERGED,True,14,10,2,https://github.com/weinrank,Dreibh/praha hackathon neat close fix,2,[],https://github.com/NEAT-project/neat/pull/357,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/357,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,358,2017-07-25T15:03:15Z,2017-07-27T08:50:06Z,2017-07-27T08:50:06Z,MERGED,True,108,55,8,https://github.com/ruengeler,Fix usrsctp to handle multiple ctx,3,[],https://github.com/NEAT-project/neat/pull/358,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/358,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,359,2017-08-02T01:14:22Z,2017-08-02T01:14:30Z,2017-08-02T01:14:30Z,MERGED,True,943,22,8,https://github.com/mcmanus,udp and dtls support,2,[],https://github.com/NEAT-project/neat/pull/359,https://github.com/mcmanus,1,https://github.com/NEAT-project/neat/pull/359,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,360,2017-08-07T09:41:48Z,2017-08-07T12:27:38Z,2017-08-07T12:27:38Z,MERGED,True,1,0,1,https://github.com/bagder,"do_accept: fix ""Uninitialized scalar variable""",1,[],https://github.com/NEAT-project/neat/pull/360,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/360,Assign optval before use. Coverity CID 1452614.,Assign optval before use. Coverity CID 1452614.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,361,2017-08-07T10:11:47Z,2017-08-07T12:26:33Z,2017-08-07T12:26:33Z,MERGED,True,1,1,1,https://github.com/bagder,neat_close: fix use after free,1,[],https://github.com/NEAT-project/neat/pull/361,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/361,"After neat_close_socket(), the flow is freed and must not be used
further. And it already calls notift_socket() itself.
Coverity CID 1452611.","After neat_close_socket(), the flow is freed and must not be used
further. And it already calls notift_socket() itself.
Coverity CID 1452611.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,362,2017-08-07T10:18:09Z,2017-08-07T12:24:25Z,2017-08-07T12:24:25Z,MERGED,True,1,0,1,https://github.com/bagder,accept_resolve_cb: fix memory leak in OOM error path,1,[],https://github.com/NEAT-project/neat/pull/362,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/362,Coverity CID 1452610.,Coverity CID 1452610.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,365,2017-08-07T11:47:27Z,2017-08-07T12:23:26Z,2017-08-10T09:25:58Z,MERGED,True,4,3,1,https://github.com/bagder,neat_walk_cb: check for NULL pointer *before* deref,1,[],https://github.com/NEAT-project/neat/pull/365,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/365,Coverity CID 1452608,Coverity CID 1452608,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,366,2017-08-08T07:51:08Z,2017-08-08T11:33:25Z,2017-08-10T09:26:00Z,MERGED,True,2,6,1,https://github.com/bagder,neat_connect: remove logging of SO_BINDTODEVICE failures,1,[],https://github.com/NEAT-project/neat/pull/366,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/366,"... as that function requires root access it is bound to fail very often
and fill up logs in vain.","... as that function requires root access it is bound to fail very often
and fill up logs in vain.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,367,2017-08-08T09:30:40Z,2017-08-08T11:33:58Z,2017-08-10T09:26:03Z,MERGED,True,1,2,1,https://github.com/bagder,neat_resolver_create_pairs: return error on calloc() fail,1,[],https://github.com/NEAT-project/neat/pull/367,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/367,"... resource fatique must be a terminal error, not just try-again.","... resource fatique must be a terminal error, not just try-again.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,368,2017-08-08T14:50:46Z,2017-08-10T12:44:26Z,2017-08-10T12:44:31Z,CLOSED,False,50,39,3,https://github.com/bagder,return success/failure more to parent functions,2,[],https://github.com/NEAT-project/neat/pull/368,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/368,"... in an attempt to start failing better in the resolver and related
functions.","... in an attempt to start failing better in the resolver and related
functions.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,369,2017-08-09T11:13:58Z,2017-08-13T21:46:12Z,2017-08-13T21:46:16Z,CLOSED,False,138,11,3,https://github.com/bagder,travis: initial travis CI integration,1,[],https://github.com/NEAT-project/neat/pull/369,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/369,... just do the build on linux and osx for very basic verification.,... just do the build on linux and osx for very basic verification.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,369,2017-08-09T11:13:58Z,2017-08-13T21:46:12Z,2017-08-13T21:46:16Z,CLOSED,False,138,11,3,https://github.com/bagder,travis: initial travis CI integration,1,[],https://github.com/NEAT-project/neat/pull/369,https://github.com/bagder,2,https://github.com/NEAT-project/neat/pull/369#issuecomment-321225826,... just do the build on linux and osx for very basic verification.,I'll need some trial and error with this to get the first one up.,True,{'THUMBS_UP': ['https://github.com/weinrank']}
NEAT-project/neat,https://github.com/NEAT-project/neat,369,2017-08-09T11:13:58Z,2017-08-13T21:46:12Z,2017-08-13T21:46:16Z,CLOSED,False,138,11,3,https://github.com/bagder,travis: initial travis CI integration,1,[],https://github.com/NEAT-project/neat/pull/369,https://github.com/bagder,3,https://github.com/NEAT-project/neat/pull/369#issuecomment-321269819,... just do the build on linux and osx for very basic verification.,"Now the Linux build fails only due to the picky compiler warnings produce two warnings with jansson and one on suggest braces around empty body in an ‘if’ statement.
The jansson warnings looks like they happen because of missing prototypes in the version of jansson provided in ubuntu.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,369,2017-08-09T11:13:58Z,2017-08-13T21:46:12Z,2017-08-13T21:46:16Z,CLOSED,False,138,11,3,https://github.com/bagder,travis: initial travis CI integration,1,[],https://github.com/NEAT-project/neat/pull/369,https://github.com/bagder,4,https://github.com/NEAT-project/neat/pull/369#issuecomment-321481282,... just do the build on linux and osx for very basic verification.,"Nah, turned out the jansson version was too old. I'll build that from source too...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,369,2017-08-09T11:13:58Z,2017-08-13T21:46:12Z,2017-08-13T21:46:16Z,CLOSED,False,138,11,3,https://github.com/bagder,travis: initial travis CI integration,1,[],https://github.com/NEAT-project/neat/pull/369,https://github.com/bagder,5,https://github.com/NEAT-project/neat/pull/369#issuecomment-321493905,... just do the build on linux and osx for very basic verification.,"OpenSSL problems, filed as #370. It seems the work-around doesn't work either, but I can't really see why. It causes the OpenSSL detection to fail, like this.
compiler option problems, filed as #371 since we might/will use older compilers here that don't support all those set options.
I updated the README.md to reflect what version of jansson we require, as it forced the travis job to build that from source.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,369,2017-08-09T11:13:58Z,2017-08-13T21:46:12Z,2017-08-13T21:46:16Z,CLOSED,False,138,11,3,https://github.com/bagder,travis: initial travis CI integration,1,[],https://github.com/NEAT-project/neat/pull/369,https://github.com/bagder,6,https://github.com/NEAT-project/neat/pull/369#issuecomment-321783482,... just do the build on linux and osx for very basic verification.,Squashed and rebased. Also testing out the #376 fix for custom OpenSSL path.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,369,2017-08-09T11:13:58Z,2017-08-13T21:46:12Z,2017-08-13T21:46:16Z,CLOSED,False,138,11,3,https://github.com/bagder,travis: initial travis CI integration,1,[],https://github.com/NEAT-project/neat/pull/369,https://github.com/bagder,7,https://github.com/NEAT-project/neat/pull/369#issuecomment-321918290,... just do the build on linux and osx for very basic verification.,"grrr, now I get a problem because I link with the ""native"" ldns library that is built against the system ubuntu openssl (1.0.1) but I build neat against the newer 1.0.2 so it fails to link...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,369,2017-08-09T11:13:58Z,2017-08-13T21:46:12Z,2017-08-13T21:46:16Z,CLOSED,False,138,11,3,https://github.com/bagder,travis: initial travis CI integration,1,[],https://github.com/NEAT-project/neat/pull/369,https://github.com/bagder,8,https://github.com/NEAT-project/neat/pull/369#issuecomment-322069206,... just do the build on linux and osx for very basic verification.,"I removed the clang on Linux build since it failed in the OpenSSL build, and then squashed everything into one single readable commit.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,374,2017-08-10T09:35:52Z,2017-08-10T12:46:26Z,2017-08-10T12:46:31Z,MERGED,True,1,1,1,https://github.com/bagder,cmake: install only neat.h as public header file,1,[],https://github.com/NEAT-project/neat/pull/374,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/374,"Fixes #372
Fixes #373","Fixes #372
Fixes #373",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,374,2017-08-10T09:35:52Z,2017-08-10T12:46:26Z,2017-08-10T12:46:31Z,MERGED,True,1,1,1,https://github.com/bagder,cmake: install only neat.h as public header file,1,[],https://github.com/NEAT-project/neat/pull/374,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/374#issuecomment-321540467,"Fixes #372
Fixes #373",LGTM,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,375,2017-08-11T10:39:18Z,2017-08-28T09:52:57Z,2017-08-28T09:54:50Z,CLOSED,False,1291,1181,34,https://github.com/bagder,prefix: rename private global functions to use nt_ prefix,2,[],https://github.com/NEAT-project/neat/pull/375,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/375,"... and save neat_ for functions that are externally visible.
'nt_' was selected as short version of neat.
Mentioned on the mailing list 10 Aug 2017.
Fixes #141","... and save neat_ for functions that are externally visible.
'nt_' was selected as short version of neat.
Mentioned on the mailing list 10 Aug 2017.
Fixes #141",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,375,2017-08-11T10:39:18Z,2017-08-28T09:52:57Z,2017-08-28T09:54:50Z,CLOSED,False,1291,1181,34,https://github.com/bagder,prefix: rename private global functions to use nt_ prefix,2,[],https://github.com/NEAT-project/neat/pull/375,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/375#issuecomment-321785927,"... and save neat_ for functions that are externally visible.
'nt_' was selected as short version of neat.
Mentioned on the mailing list 10 Aug 2017.
Fixes #141","Since there are some branches out there which are still under development and can't be merged instantly: Can you provide the SED file and a small tutorial, how to apply these changes for existing branches?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,375,2017-08-11T10:39:18Z,2017-08-28T09:52:57Z,2017-08-28T09:54:50Z,CLOSED,False,1291,1181,34,https://github.com/bagder,prefix: rename private global functions to use nt_ prefix,2,[],https://github.com/NEAT-project/neat/pull/375,https://github.com/bagder,3,https://github.com/NEAT-project/neat/pull/375#issuecomment-321791560,"... and save neat_ for functions that are externally visible.
'nt_' was selected as short version of neat.
Mentioned on the mailing list 10 Aug 2017.
Fixes #141","Good idea, added a script with embedded docs.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,375,2017-08-11T10:39:18Z,2017-08-28T09:52:57Z,2017-08-28T09:54:50Z,CLOSED,False,1291,1181,34,https://github.com/bagder,prefix: rename private global functions to use nt_ prefix,2,[],https://github.com/NEAT-project/neat/pull/375,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/375#issuecomment-323369104,"... and save neat_ for functions that are externally visible.
'nt_' was selected as short version of neat.
Mentioned on the mailing list 10 Aug 2017.
Fixes #141","If nobody complains, ready to merge?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,375,2017-08-11T10:39:18Z,2017-08-28T09:52:57Z,2017-08-28T09:54:50Z,CLOSED,False,1291,1181,34,https://github.com/bagder,prefix: rename private global functions to use nt_ prefix,2,[],https://github.com/NEAT-project/neat/pull/375,https://github.com/bagder,5,https://github.com/NEAT-project/neat/pull/375#issuecomment-325300897,"... and save neat_ for functions that are externally visible.
'nt_' was selected as short version of neat.
Mentioned on the mailing list 10 Aug 2017.
Fixes #141",Squashed and rebased. Will merge once travis says green.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,376,2017-08-11T10:49:25Z,2017-08-11T11:00:33Z,2017-08-11T11:00:33Z,MERGED,True,4,1,1,https://github.com/bagder,cmake: set the include path when given a custom OpenSSL dir,1,[],https://github.com/NEAT-project/neat/pull/376,https://github.com/bagder,1,https://github.com/NEAT-project/neat/pull/376,Fixes #370,Fixes #370,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,377,2017-08-28T15:09:59Z,2017-08-29T10:42:37Z,2017-08-29T10:42:37Z,MERGED,True,44,15,5,https://github.com/weinrank,"Fixes, compiler options, tests",29,[],https://github.com/NEAT-project/neat/pull/377,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/377,"This PR adds

fixes for new naming scheme when using usrsctp
fixing a potential memory leak
options for compiling with sanitizer support
minor tneat refactoring","This PR adds

fixes for new naming scheme when using usrsctp
fixing a potential memory leak
options for compiling with sanitizer support
minor tneat refactoring",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,379,2017-08-31T15:52:57Z,2017-08-31T18:31:03Z,2017-08-31T18:31:03Z,MERGED,True,5,5,2,https://github.com/weinrank,Fix coverity issues,34,[],https://github.com/NEAT-project/neat/pull/379,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/379,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,381,2017-09-25T15:47:01Z,2017-10-06T08:29:42Z,2017-10-06T08:29:42Z,MERGED,True,67,1,2,https://github.com/dreibh,Added missing wrappers to the Sockets API,3,['enhancement'],https://github.com/NEAT-project/neat/pull/381,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/381,"The sockets API needs wrappers for lseek() and ftruncate(), in order to handle FDs in nsa_poll()/nsa_select() correctly.","The sockets API needs wrappers for lseek() and ftruncate(), in order to handle FDs in nsa_poll()/nsa_select() correctly.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,382,2017-09-25T15:51:07Z,2017-10-06T08:29:31Z,2017-10-06T08:29:31Z,MERGED,True,7,7,4,https://github.com/dreibh,Fixes for Debian/Ubuntu and Fedora packaging,1,['bug'],https://github.com/NEAT-project/neat/pull/382,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/382,"Fixes for Debian/Ubuntu and Fedora packaging, in order to build the latest version's packages.","Fixes for Debian/Ubuntu and Fedora packaging, in order to build the latest version's packages.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,383,2017-09-27T15:48:09Z,2017-10-06T08:29:16Z,2017-10-06T08:29:16Z,MERGED,True,61,46,1,https://github.com/dreibh,Fixes for nsa_pipe(),4,['bug'],https://github.com/NEAT-project/neat/pull/383,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/383,"Bugfixes:

Let nsa_socket_internal() chose the FDs for the pipe
Initialize library, if not yet done (fixes bug #380).","Bugfixes:

Let nsa_socket_internal() chose the FDs for the pipe
Initialize library, if not yet done (fixes bug #380).",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,384,2017-09-27T16:05:40Z,2017-09-27T16:06:54Z,2017-09-27T16:06:54Z,MERGED,True,31,0,2,https://github.com/dreibh,Added missing nsa_socketpair() wrapper.,1,['enhancement'],https://github.com/NEAT-project/neat/pull/384,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/384,"Added missing nsa_socketpair() wrapper, fixing issue #378 .","Added missing nsa_socketpair() wrapper, fixing issue #378 .",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,385,2017-09-27T16:35:19Z,2017-10-06T08:28:59Z,2017-10-06T08:28:59Z,MERGED,True,27,2,1,https://github.com/dreibh,Documentation update for the NEAT Sockets API,1,['enhancement'],https://github.com/NEAT-project/neat/pull/385,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/385,"A documentation update for the NEAT Sockets API, adding descriptions for the new wrappers nsa_lseek(), nsa_truncate() and nsa_socketpair().","A documentation update for the NEAT Sockets API, adding descriptions for the new wrappers nsa_lseek(), nsa_truncate() and nsa_socketpair().",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,387,2017-10-24T12:47:59Z,2017-11-10T11:56:36Z,2017-11-10T11:56:36Z,MERGED,True,123,25,4,https://github.com/trozensztrauch,Trozensztrauch/handover2,4,[],https://github.com/NEAT-project/neat/pull/387,https://github.com/trozensztrauch,1,https://github.com/NEAT-project/neat/pull/387,"We would like to support 'disable handover' functionality in NEAT core, which for SCTP connections means disabling multihoming feature and for MPTCP means silent fallback to TCP.
With this pull request we:

use flow->isSCTPMultihoming field for both SCPT and MPTCP, thus we renamed it to something more general (flow->isMultihoming)
introduce runtime check for MPTCP support (check for value in /proc/sys/net/mptcp/mptcp_enable); MPTCP can be globaly enabled/disabled or controlled by applications for each connection
introduce silent fallback to TCP for MPTCP connections when multihoming is disabled
MPTCP connection fails if MPTCP is globally disbled, TCP connection fails if MPTCP is globaly enabled
introduce possibility to build NEAT with MPTCP support on machines where MPTCP is not installed
(cmake -DMPTCP_SUPPORT flag)","We would like to support 'disable handover' functionality in NEAT core, which for SCTP connections means disabling multihoming feature and for MPTCP means silent fallback to TCP.
With this pull request we:

use flow->isSCTPMultihoming field for both SCPT and MPTCP, thus we renamed it to something more general (flow->isMultihoming)
introduce runtime check for MPTCP support (check for value in /proc/sys/net/mptcp/mptcp_enable); MPTCP can be globaly enabled/disabled or controlled by applications for each connection
introduce silent fallback to TCP for MPTCP connections when multihoming is disabled
MPTCP connection fails if MPTCP is globally disbled, TCP connection fails if MPTCP is globaly enabled
introduce possibility to build NEAT with MPTCP support on machines where MPTCP is not installed
(cmake -DMPTCP_SUPPORT flag)",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,388,2017-10-24T13:11:48Z,2017-10-25T09:52:18Z,2017-10-25T09:52:18Z,MERGED,True,11,18,3,https://github.com/weinrank,Weinrank/fixes,43,[],https://github.com/NEAT-project/neat/pull/388,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/388,This PR fixes some CIDs reported by Coverity,This PR fixes some CIDs reported by Coverity,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,389,2017-10-24T14:43:09Z,2017-11-06T10:41:04Z,2017-11-06T10:41:04Z,MERGED,True,835,177,10,https://github.com/dreibh,NEAT Sockets API: added missing file function wrappers and helper scripts,14,['enhancement'],https://github.com/NEAT-project/neat/pull/389,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/389,"Added some more missing file function wrappers.
Moved file functions into separate file
Added helper scripts to support porting source files from BSD Sockets API to NEAT Sockets API.","Added some more missing file function wrappers.
Moved file functions into separate file
Added helper scripts to support porting source files from BSD Sockets API to NEAT Sockets API.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,390,2017-10-24T15:15:24Z,2017-11-06T10:40:15Z,2017-11-06T10:40:15Z,MERGED,True,53,0,3,https://github.com/dreibh,Added epoll wrappers,1,['enhancement'],https://github.com/NEAT-project/neat/pull/390,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/390,"Added epoll wrappers (without function, yet).","Added epoll wrappers (without function, yet).",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,392,2017-10-25T13:31:33Z,2017-10-25T14:08:40Z,2017-10-25T14:08:45Z,MERGED,True,39,0,4,https://github.com/adventureloop,Add get method to retrieve qos,2,[],https://github.com/NEAT-project/neat/pull/392,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/392,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,393,2017-10-26T09:32:31Z,2017-11-20T12:07:27Z,2017-11-20T12:12:12Z,MERGED,True,164,315,20,https://github.com/bozakov,updated JSON properties in examples,7,[],https://github.com/NEAT-project/neat/pull/393,https://github.com/bozakov,1,https://github.com/NEAT-project/neat/pull/393,Updated the properties in the examples and removed code for handling old JSON format to address issue #391,Updated the properties in the examples and removed code for handling old JSON format to address issue #391,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,393,2017-10-26T09:32:31Z,2017-11-20T12:07:27Z,2017-11-20T12:12:12Z,MERGED,True,164,315,20,https://github.com/bozakov,updated JSON properties in examples,7,[],https://github.com/NEAT-project/neat/pull/393,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/393#issuecomment-343901969,Updated the properties in the examples and removed code for handling old JSON format to address issue #391,"Buildbots fail:
Opened flow 0
option - LOOP MODE
option - message limit: 1024
option - properties: {
    ""transport"": [
        {
            ""value"": ""TCP"",
            ""precedence"": 1
        }
    ]
}

ERROR: Invalid property format",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,393,2017-10-26T09:32:31Z,2017-11-20T12:07:27Z,2017-11-20T12:12:12Z,MERGED,True,164,315,20,https://github.com/bozakov,updated JSON properties in examples,7,[],https://github.com/NEAT-project/neat/pull/393,https://github.com/naeemk,3,https://github.com/NEAT-project/neat/pull/393#issuecomment-344130568,Updated the properties in the examples and removed code for handling old JSON format to address issue #391,"@bozakov: the changes should also update all the files as *.json in the examples folder or elsewhere if any, since they also cause the buildbot tneat tests to fail with DEPRECATED property format.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,393,2017-10-26T09:32:31Z,2017-11-20T12:07:27Z,2017-11-20T12:12:12Z,MERGED,True,164,315,20,https://github.com/bozakov,updated JSON properties in examples,7,[],https://github.com/NEAT-project/neat/pull/393,https://github.com/bozakov,4,https://github.com/NEAT-project/neat/pull/393#issuecomment-345665736,Updated the properties in the examples and removed code for handling old JSON format to address issue #391,"Examples should be fine now, and buildbot seems happy.",True,{'THUMBS_UP': ['https://github.com/naeemk']}
NEAT-project/neat,https://github.com/NEAT-project/neat,394,2017-11-13T11:02:43Z,2017-11-13T11:13:08Z,2017-11-13T11:13:08Z,MERGED,True,81,7,2,https://github.com/weinrank,Check Compiler flags,48,[],https://github.com/NEAT-project/neat/pull/394,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/394,"Checking if compiler supports flags
TNEAT error handling improved","Checking if compiler supports flags
TNEAT error handling improved",True,{'THUMBS_UP': ['https://github.com/naeemk']}
NEAT-project/neat,https://github.com/NEAT-project/neat,395,2017-11-20T13:16:12Z,2017-11-20T13:16:19Z,2017-11-20T13:16:19Z,MERGED,True,6,4,1,https://github.com/weinrank,Improve testing,54,[],https://github.com/NEAT-project/neat/pull/395,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/395,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,396,2017-12-01T16:09:27Z,2017-12-01T16:45:28Z,2017-12-01T16:45:28Z,MERGED,True,98,114,10,https://github.com/weinrank,Coverity and Tests,78,[],https://github.com/NEAT-project/neat/pull/396,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/396,"Fixing some Coverity CIDs
Testing script simplified","Fixing some Coverity CIDs
Testing script simplified",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,397,2017-12-04T16:20:13Z,2017-12-04T22:39:25Z,2017-12-04T22:39:25Z,MERGED,True,194,155,9,https://github.com/weinrank,Fixing Coverity CIDs,99,[],https://github.com/NEAT-project/neat/pull/397,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/397,This PR fixes some Coverity CIDs and testing issues.,This PR fixes some Coverity CIDs and testing issues.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,398,2017-12-06T14:00:43Z,2017-12-10T16:20:39Z,2017-12-10T16:20:39Z,MERGED,True,1,0,1,https://github.com/fredhau,"Assign correct HE candidate priority if property ""local_ips"" is set.",1,[],https://github.com/NEAT-project/neat/pull/398,https://github.com/fredhau,1,https://github.com/NEAT-project/neat/pull/398,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,399,2017-12-11T11:03:30Z,2017-12-11T12:06:25Z,2017-12-11T12:06:25Z,MERGED,True,27,28,2,https://github.com/weinrank,Additional test and CMake cleanup,100,[],https://github.com/NEAT-project/neat/pull/399,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/399,"New test case: tneat loopback mode
CMake cleanup","New test case: tneat loopback mode
CMake cleanup",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,400,2017-12-11T12:31:08Z,2017-12-11T12:31:28Z,2017-12-11T12:31:28Z,MERGED,True,38,29,4,https://github.com/weinrank,Fix compiler errors when compiling in release build type,101,[],https://github.com/NEAT-project/neat/pull/400,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/400,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,403,2017-12-13T00:09:05Z,2018-01-30T08:56:52Z,2018-01-30T08:56:52Z,MERGED,True,3,0,1,https://github.com/fredhau,Fix: on_all_written() would fire although neat_write() fails to send data,1,[],https://github.com/NEAT-project/neat/pull/403,https://github.com/fredhau,1,https://github.com/NEAT-project/neat/pull/403,"In some cases when calling neat_write() it will fail to send data because the remote end has closed the connection. Still, on_all_written() can be called for that flow afterwards through io_writable().
This PR sets the flow->isClosing variable to true in neat_write_to_lower_layer() so that neat_shutdown() will be called in io_writable() instead of io_all_written(). I don't know if it is correct to call neat_shutdown() in this case.
The code can be extended to check for other error codes for which neat_write() will fail to send data.","In some cases when calling neat_write() it will fail to send data because the remote end has closed the connection. Still, on_all_written() can be called for that flow afterwards through io_writable().
This PR sets the flow->isClosing variable to true in neat_write_to_lower_layer() so that neat_shutdown() will be called in io_writable() instead of io_all_written(). I don't know if it is correct to call neat_shutdown() in this case.
The code can be extended to check for other error codes for which neat_write() will fail to send data.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,405,2017-12-19T10:34:26Z,2017-12-19T23:44:45Z,2018-01-09T13:49:14Z,MERGED,True,3,0,1,https://github.com/karlgrin,Addressed Coverity issue with CID 1463045.,1,[],https://github.com/NEAT-project/neat/pull/405,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/405,Checked return value from 'getpeername' and in so doing avoid UNUSED_VALUE defect from Coverity on variable 'rc'.,Checked return value from 'getpeername' and in so doing avoid UNUSED_VALUE defect from Coverity on variable 'rc'.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,406,2017-12-22T10:05:05Z,2018-01-04T13:14:25Z,2018-01-04T13:17:48Z,MERGED,True,1,5,1,https://github.com/karlgrin,Issue #363: Removed superfluous close of file descriptor in neat_free…,1,[],https://github.com/NEAT-project/neat/pull/406,https://github.com/karlgrin,1,https://github.com/NEAT-project/neat/pull/406,@bagder Closing of file descriptor not explicitly done in nt_free_candidate(). Instead it is done in event handler on_handle_closed_candidate().,@bagder Closing of file descriptor not explicitly done in nt_free_candidate(). Instead it is done in event handler on_handle_closed_candidate().,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,408,2018-01-02T14:59:09Z,2018-01-02T15:09:32Z,2018-01-02T15:09:32Z,MERGED,True,19,1,1,https://github.com/ruengeler,Dtls fix handshake bug,2,[],https://github.com/NEAT-project/neat/pull/408,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/408,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,409,2018-01-03T10:47:41Z,2018-01-03T14:49:26Z,2018-01-03T14:49:26Z,MERGED,True,3,7,1,https://github.com/ruengeler,Dtls,5,[],https://github.com/NEAT-project/neat/pull/409,https://github.com/ruengeler,1,https://github.com/NEAT-project/neat/pull/409,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,410,2018-01-03T14:50:33Z,2018-01-03T15:14:59Z,2018-01-03T15:14:59Z,MERGED,True,186,221,6,https://github.com/weinrank,Refactoring and Bugfixes,117,[],https://github.com/NEAT-project/neat/pull/410,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/410,This PR consists of several bugfixes related to multistreaming and some code refactoring.,This PR consists of several bugfixes related to multistreaming and some code refactoring.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,411,2018-01-04T13:09:09Z,2018-01-04T13:13:56Z,2018-01-04T13:13:56Z,MERGED,True,37,30,6,https://github.com/weinrank,Refactor address handling and fix multihoming property,122,[],https://github.com/NEAT-project/neat/pull/411,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/411,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,413,2018-01-09T13:06:43Z,2018-01-09T13:06:52Z,2018-01-09T13:06:52Z,MERGED,True,37,31,2,https://github.com/weinrank,Fixes and refactoring (Hackathon sync),5,[],https://github.com/NEAT-project/neat/pull/413,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/413,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,415,2018-01-09T14:46:10Z,2018-01-09T15:34:57Z,2018-01-09T15:34:57Z,MERGED,True,28,32,1,https://github.com/bozakov,add NULL context nt_log functions rather than redefining them,1,[],https://github.com/NEAT-project/neat/pull/415,https://github.com/bozakov,1,https://github.com/NEAT-project/neat/pull/415,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,416,2018-01-09T15:32:25Z,2018-01-09T15:34:12Z,2018-01-09T15:34:12Z,MERGED,True,11,7,2,https://github.com/weinrank,Improve multistreaming and tneat testing,2,[],https://github.com/NEAT-project/neat/pull/416,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/416,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,417,2018-01-09T15:54:06Z,2018-01-09T17:05:12Z,2018-01-09T17:05:12Z,MERGED,True,13,0,2,https://github.com/bozakov,Support nt_log without a NEAT context,1,[],https://github.com/NEAT-project/neat/pull/417,https://github.com/bozakov,1,https://github.com/NEAT-project/neat/pull/417,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,418,2018-01-09T17:59:27Z,2018-01-09T18:12:31Z,2018-01-09T18:12:31Z,MERGED,True,29,25,2,https://github.com/bozakov,Handle cases where no properties have been specified,1,[],https://github.com/NEAT-project/neat/pull/418,https://github.com/bozakov,1,https://github.com/NEAT-project/neat/pull/418,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,419,2018-01-10T11:03:10Z,2018-01-10T11:04:51Z,2018-01-10T11:04:58Z,MERGED,True,1,2,1,https://github.com/adventureloop,Select UDP transport via property in example.,1,[],https://github.com/NEAT-project/neat/pull/419,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/419,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,420,2018-01-10T11:43:40Z,2018-01-10T11:43:58Z,2018-01-10T11:48:29Z,MERGED,True,4,4,1,https://github.com/bozakov,converted MPTCP warning to errors,1,[],https://github.com/NEAT-project/neat/pull/420,https://github.com/bozakov,1,https://github.com/NEAT-project/neat/pull/420,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,421,2018-01-10T11:54:27Z,2018-01-10T11:54:34Z,2018-01-10T11:54:39Z,MERGED,True,2,2,1,https://github.com/bozakov,converted MPTCP warning to errors,1,[],https://github.com/NEAT-project/neat/pull/421,https://github.com/bozakov,1,https://github.com/NEAT-project/neat/pull/421,missed two warnings,missed two warnings,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,423,2018-01-10T12:43:50Z,2018-01-10T12:44:03Z,2018-01-10T12:44:03Z,MERGED,True,45,238,11,https://github.com/weinrank,Multistreaming and testing improvements,8,[],https://github.com/NEAT-project/neat/pull/423,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/423,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,424,2018-01-10T20:49:49Z,2018-01-10T20:50:23Z,2018-01-10T20:50:23Z,MERGED,True,49,60,5,https://github.com/weinrank,Refactoring and new he delay property,9,[],https://github.com/NEAT-project/neat/pull/424,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/424,"Code refactoring (cleanup)
We've added a new property which adds an artificial delay before the happy eyeballs mechansim is startet.","Code refactoring (cleanup)
We've added a new property which adds an artificial delay before the happy eyeballs mechansim is startet.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,425,2018-01-12T00:15:58Z,2018-01-12T00:18:26Z,2018-01-12T00:18:26Z,MERGED,True,30,9,8,https://github.com/weinrank,Improve tneat and multistreaming,13,[],https://github.com/NEAT-project/neat/pull/425,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/425,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,426,2018-01-12T21:36:57Z,2018-01-12T21:37:07Z,2018-01-12T21:37:11Z,MERGED,True,6,0,1,https://github.com/adventureloop,Add an example property to set UDP,1,[],https://github.com/NEAT-project/neat/pull/426,https://github.com/adventureloop,1,https://github.com/NEAT-project/neat/pull/426,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,428,2018-01-23T22:45:46Z,2018-01-24T17:51:17Z,2018-01-25T00:08:24Z,MERGED,True,23,1,1,https://github.com/fredhau,Set SO_LINGER option when closing non-winning HE candidates,2,[],https://github.com/NEAT-project/neat/pull/428,https://github.com/fredhau,1,https://github.com/NEAT-project/neat/pull/428,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,429,2018-01-29T12:45:30Z,2018-01-30T08:56:14Z,2018-01-30T08:56:15Z,MERGED,True,4899,38,20,https://github.com/weinrank,WebRTC Data-Channel support for NEAT,73,[],https://github.com/NEAT-project/neat/pull/429,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/429,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,433,2018-02-06T09:22:13Z,2018-02-07T14:32:49Z,2018-02-07T14:32:49Z,MERGED,True,24,3,2,https://github.com/trozensztrauch,Added support for tproxy property,2,[],https://github.com/NEAT-project/neat/pull/433,https://github.com/trozensztrauch,1,https://github.com/NEAT-project/neat/pull/433,"For the purpose of transparent proxing, this PR adds a possibility to specify 'tproxy' property (true/false) for a listening flow. When such a property is specified IP_TRANSPARENT socket option is set for underlying socket, which allows the socket to accept connections for non-local IPs.","For the purpose of transparent proxing, this PR adds a possibility to specify 'tproxy' property (true/false) for a listening flow. When such a property is specified IP_TRANSPARENT socket option is set for underlying socket, which allows the socket to accept connections for non-local IPs.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,433,2018-02-06T09:22:13Z,2018-02-07T14:32:49Z,2018-02-07T14:32:49Z,MERGED,True,24,3,2,https://github.com/trozensztrauch,Added support for tproxy property,2,[],https://github.com/NEAT-project/neat/pull/433,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/433#issuecomment-363452374,"For the purpose of transparent proxing, this PR adds a possibility to specify 'tproxy' property (true/false) for a listening flow. When such a property is specified IP_TRANSPARENT socket option is set for underlying socket, which allows the socket to accept connections for non-local IPs.","[  4%] Building C object CMakeFiles/neat-static.dir/neat_addr.c.o
/usr/home/buildbot/bbs-neat/freebsd-head/build/neat_core.c:5849:28: error: use of undeclared identifier 'SOL_IP'
        if (setsockopt(fd, SOL_IP, IP_TRANSPARENT, &enable, sizeof(int)) != 0) {
                           ^
/usr/home/buildbot/bbs-neat/freebsd-head/build/neat_core.c:5849:36: error: use of undeclared identifier 'IP_TRANSPARENT'
        if (setsockopt(fd, SOL_IP, IP_TRANSPARENT, &enable, sizeof(int)) != 0) {
                                   ^
/usr/home/buildbot/bbs-neat/freebsd-head/build/neat_core.c:5849:28: error: use of undeclared identifier 'SOL_IP'
        if (setsockopt(fd, SOL_IP, IP_TRANSPARENT, &enable, sizeof(int)) != 0) {
                           ^
/usr/home/buildbot/bbs-neat/freebsd-head/build/neat_core.c:5849:36: error: use of undeclared identifier 'IP_TRANSPARENT'
        if (setsockopt(fd, SOL_IP, IP_TRANSPARENT, &enable, sizeof(int)) != 0) {
                                   ^

Can you fix it?",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,435,2018-02-12T12:07:07Z,2018-02-28T09:54:52Z,2018-03-01T18:01:46Z,MERGED,True,58,47,2,https://github.com/fredhau,Improve closing of NEAT flows,2,[],https://github.com/NEAT-project/neat/pull/435,https://github.com/fredhau,1,https://github.com/NEAT-project/neat/pull/435,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,435,2018-02-12T12:07:07Z,2018-02-28T09:54:52Z,2018-03-01T18:01:46Z,MERGED,True,58,47,2,https://github.com/fredhau,Improve closing of NEAT flows,2,[],https://github.com/NEAT-project/neat/pull/435,https://github.com/weinrank,2,https://github.com/NEAT-project/neat/pull/435#issuecomment-365192058,,"The Buildbots report errors on the runtime tests.
Running: tneat -L fails
ASAN:DEADLYSIGNAL
=================================================================
==31348==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55acab339d6b bp 0x7ffeedb7f2b0 sp 0x7ffeedb7f1a0 T0)
==31348==The signal is caused by a READ memory access.
==31348==Hint: address points to the zero page.
    #0 0x55acab339d6a in on_close /home/buildbot/bbs-neat/ubuntu/build/examples/tneat.c:320
    #1 0x7f6f0344c752 in neat_free_ctx /home/buildbot/bbs-neat/ubuntu/build/neat_core.c:326
    #2 0x55acab33b6e0 in main /home/buildbot/bbs-neat/ubuntu/build/examples/tneat.c:613
    #3 0x7f6f030721c0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x211c0)
    #4 0x55acab339119 in _start (/home/buildbot/bbs-neat/ubuntu/build/build/examples/tneat+0x4119)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /home/buildbot/bbs-neat/ubuntu/build/examples/tneat.c:320 in on_close
==31348==ABORTING

See
http://buildbot.nplab.de:28010/waterfall",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,435,2018-02-12T12:07:07Z,2018-02-28T09:54:52Z,2018-03-01T18:01:46Z,MERGED,True,58,47,2,https://github.com/fredhau,Improve closing of NEAT flows,2,[],https://github.com/NEAT-project/neat/pull/435,https://github.com/fredhau,3,https://github.com/NEAT-project/neat/pull/435#issuecomment-365264324,,"I think the segmentation fault occurs because the listening flow uses the same on_close as the client flows, but the listening flow does not have any userData. The on_close in tneat expects userData to be set. A fix is to have a seperate on_close function for the listening flow or disable the callback.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,435,2018-02-12T12:07:07Z,2018-02-28T09:54:52Z,2018-03-01T18:01:46Z,MERGED,True,58,47,2,https://github.com/fredhau,Improve closing of NEAT flows,2,[],https://github.com/NEAT-project/neat/pull/435,https://github.com/weinrank,4,https://github.com/NEAT-project/neat/pull/435#issuecomment-365265882,,"Can you add a if (opCB->userData == NULL) { return... check in the on_close() function?
This should IMHO help...",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,436,2018-02-26T10:05:37Z,2018-02-26T10:06:01Z,2018-02-26T10:06:01Z,MERGED,True,258,356,5,https://github.com/weinrank,Libuv polling refactoring,10,[],https://github.com/NEAT-project/neat/pull/436,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/436,"This PR refactors the handling of pollable sockets in NEAT, especially for transparent flow mapping.","This PR refactors the handling of pollable sockets in NEAT, especially for transparent flow mapping.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,437,2018-02-27T20:01:02Z,2018-02-28T09:51:50Z,2018-03-01T18:00:46Z,MERGED,True,1,1,1,https://github.com/fredhau,Fix compile error when SCTP_MULTISTREAMING is disabled,1,[],https://github.com/NEAT-project/neat/pull/437,https://github.com/fredhau,1,https://github.com/NEAT-project/neat/pull/437,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,438,2018-03-01T17:59:06Z,2018-03-14T17:05:41Z,2018-03-14T17:05:41Z,MERGED,True,5,0,2,https://github.com/fredhau,Expose the transport protocol used by a flow to NEAT applications,1,[],https://github.com/NEAT-project/neat/pull/438,https://github.com/fredhau,1,https://github.com/NEAT-project/neat/pull/438,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,439,2018-03-05T11:45:11Z,2018-03-14T17:05:58Z,2018-03-14T17:05:59Z,MERGED,True,1,1,1,https://github.com/fredhau,"Delay HE candidates based on priority with property ""__he_delay""",1,[],https://github.com/NEAT-project/neat/pull/439,https://github.com/fredhau,1,https://github.com/NEAT-project/neat/pull/439,"This enables the application to manually set the time in which HE candidates are delayed based on their priorities using the __he_delay property. I don't know whether this was the original intent for the property, but the feature requested should be there one way or another.","This enables the application to manually set the time in which HE candidates are delayed based on their priorities using the __he_delay property. I don't know whether this was the original intent for the property, but the feature requested should be there one way or another.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,440,2018-03-17T14:16:36Z,2018-03-17T14:16:42Z,2018-03-17T14:16:42Z,MERGED,True,98,62,7,https://github.com/weinrank,Improved webrtc examples,6,[],https://github.com/NEAT-project/neat/pull/440,https://github.com/weinrank,1,https://github.com/NEAT-project/neat/pull/440,,,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,443,2018-06-07T11:30:00Z,2018-06-07T11:31:12Z,2018-06-07T11:31:12Z,CLOSED,False,470,172,29,https://github.com/dreibh,NEAT Sockets API implementation updates,195,[],https://github.com/NEAT-project/neat/pull/443,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/443,Pull request for the NEAT Sockets API implementation updates.,Pull request for the NEAT Sockets API implementation updates.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,444,2018-06-07T11:32:05Z,2019-12-06T10:27:20Z,2019-12-06T10:27:20Z,CLOSED,False,66,53,8,https://github.com/dreibh,Ubuntu/Debian/Fedora packaging updates,5,['enhancement'],https://github.com/NEAT-project/neat/pull/444,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/444,Ubuntu/Debian/Fedora packaging updates.,Ubuntu/Debian/Fedora packaging updates.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,445,2018-06-07T11:33:20Z,2019-12-06T10:27:08Z,2019-12-06T10:27:08Z,CLOSED,False,26,64,8,https://github.com/dreibh,Updates for NEAT Sockets API and corresponding examples.,2,['enhancement'],https://github.com/NEAT-project/neat/pull/445,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/445,Updates for NEAT Sockets API and corresponding examples.,Updates for NEAT Sockets API and corresponding examples.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,446,2018-06-07T11:34:14Z,2019-12-06T10:26:51Z,2019-12-06T10:26:51Z,CLOSED,False,354,20,10,https://github.com/dreibh,Updated documentation for NEAT Sockets API.,2,['enhancement'],https://github.com/NEAT-project/neat/pull/446,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/446,Updated documentation for NEAT Sockets API.,Updated documentation for NEAT Sockets API.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,448,2018-10-04T09:42:41Z,2018-12-05T19:13:13Z,2018-12-05T19:13:13Z,MERGED,True,5,5,1,https://github.com/dreibh,Fixed URL for libuv-v1.9.1.tar.gz in Travis CI configuration,2,['bug'],https://github.com/NEAT-project/neat/pull/448,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/448,"The URL for libuv-v1.9.1.tar.gz was invalid, causing the Travis CI build to fail.","The URL for libuv-v1.9.1.tar.gz was invalid, causing the Travis CI build to fail.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,451,2019-07-22T13:50:27Z,2019-12-06T10:27:52Z,2019-12-06T10:27:52Z,CLOSED,False,6,0,1,https://github.com/dreibh,Fix Bug #450: check for differences in Linux SCTP APIs.,1,['bug'],https://github.com/NEAT-project/neat/pull/451,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/451,"Check for differences in Linux SCTP APIs, to fix Bug #450.","Check for differences in Linux SCTP APIs, to fix Bug #450.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,452,2019-08-08T11:46:17Z,2019-12-06T10:26:34Z,2019-12-06T10:26:34Z,CLOSED,False,3632,833,78,https://github.com/dreibh,Merged updates,7,"['bug', 'enhancement']",https://github.com/NEAT-project/neat/pull/452,https://github.com/dreibh,1,https://github.com/NEAT-project/neat/pull/452,"Merged the different pull requests into a single pull request:

Build fix for Ubuntu Disco, Eoan, etc.
Latest updates to Socket API.
Documentation of Socket API.
Packaging for Ubuntu/Debian and Fedora.
Travis CI configuration updates.
Fixed some spelling errors reported by Lintian.","Merged the different pull requests into a single pull request:

Build fix for Ubuntu Disco, Eoan, etc.
Latest updates to Socket API.
Documentation of Socket API.
Packaging for Ubuntu/Debian and Fedora.
Travis CI configuration updates.
Fixed some spelling errors reported by Lintian.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,452,2019-08-08T11:46:17Z,2019-12-06T10:26:34Z,2019-12-06T10:26:34Z,CLOSED,False,3632,833,78,https://github.com/dreibh,Merged updates,7,"['bug', 'enhancement']",https://github.com/NEAT-project/neat/pull/452,https://github.com/dreibh,2,https://github.com/NEAT-project/neat/pull/452#issuecomment-524310378,"Merged the different pull requests into a single pull request:

Build fix for Ubuntu Disco, Eoan, etc.
Latest updates to Socket API.
Documentation of Socket API.
Packaging for Ubuntu/Debian and Fedora.
Travis CI configuration updates.
Fixed some spelling errors reported by Lintian.","Added further updates:
* Added FreeBSD support into Travis CI scripts, to perform automated CI tests for FreeBSD 11.2, 11.3 and 12.0 with Clang and GCC.
* Added FreeBSD port files.
* Some build fixes for FreeBSD.
* Socket API build fixes for MacOS X.",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,453,2019-10-27T14:16:48Z,2020-01-08T15:20:59Z,2020-01-08T15:20:59Z,MERGED,True,70,25,5,https://github.com/theagilepadawan,Python bindings,4,['enhancement'],https://github.com/NEAT-project/neat/pull/453,https://github.com/theagilepadawan,1,https://github.com/NEAT-project/neat/pull/453,"Some changes to both the Swig interface file and Python examples:


Both the buffer and bytes_read (corresponding to unsigned char *buffer and uint32_t *actualtAmt) were not passed as correct types to neat_read.


This caused and TypeError being thrown in Python, returning None and resultet in an infinite loop as the socket was never read.


I've implemented some changes in neat_swig.i and the Python examples to fix this bug.


// Michael Gundersen","Some changes to both the Swig interface file and Python examples:


Both the buffer and bytes_read (corresponding to unsigned char *buffer and uint32_t *actualtAmt) were not passed as correct types to neat_read.


This caused and TypeError being thrown in Python, returning None and resultet in an infinite loop as the socket was never read.


I've implemented some changes in neat_swig.i and the Python examples to fix this bug.


// Michael Gundersen",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,454,2020-01-23T19:16:57Z,2020-01-24T08:29:46Z,2020-01-24T08:29:46Z,MERGED,True,45,17,6,https://github.com/theagilepadawan,Python bindings,2,[],https://github.com/NEAT-project/neat/pull/454,https://github.com/theagilepadawan,1,https://github.com/NEAT-project/neat/pull/454,"Some utility functions used in the Python API!
Minor fixes to issues that made the Policy Manager crash
Changes to swig.i","Some utility functions used in the Python API!
Minor fixes to issues that made the Policy Manager crash
Changes to swig.i",True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,455,2020-05-02T21:44:24Z,2020-05-02T21:44:35Z,2020-05-02T21:44:36Z,MERGED,True,185,35,7,https://github.com/theagilepadawan,Python bindings,7,[],https://github.com/NEAT-project/neat/pull/455,https://github.com/theagilepadawan,1,https://github.com/NEAT-project/neat/pull/455,Updating master with the minor changes used for interfacing with the Python API.,Updating master with the minor changes used for interfacing with the Python API.,True,{}
NEAT-project/neat,https://github.com/NEAT-project/neat,456,2020-12-08T00:06:24Z,2022-02-15T09:18:02Z,2022-02-15T14:20:33Z,MERGED,True,2,1,1,https://github.com/0xflotus,fix: layout in markdown,1,[],https://github.com/NEAT-project/neat/pull/456,https://github.com/0xflotus,1,https://github.com/NEAT-project/neat/pull/456,,,True,{}
