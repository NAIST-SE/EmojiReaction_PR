sahib/rmlint,https://github.com/sahib/rmlint,165,2016-01-12T14:42:20Z,2016-01-12T15:36:17Z,2016-01-12T15:48:05Z,MERGED,True,77,77,27,https://github.com/tomxtobin,Fix spelling and grammar,3,[],https://github.com/sahib/rmlint/pull/165,https://github.com/tomxtobin,1,https://github.com/sahib/rmlint/pull/165,"This fixes some spelling and grammar issues in the docs and comments.
I might've gotten some of the ""a""/""an"" fixes wrong if I misunderstood how
""rmlint"" is pronounced; I assumed it's ""arr-emm-lint"". If that's wrong, let me
know and I'll update the PR. :-)","This fixes some spelling and grammar issues in the docs and comments.
I might've gotten some of the ""a""/""an"" fixes wrong if I misunderstood how
""rmlint"" is pronounced; I assumed it's ""arr-emm-lint"". If that's wrong, let me
know and I'll update the PR. :-)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,165,2016-01-12T14:42:20Z,2016-01-12T15:36:17Z,2016-01-12T15:48:05Z,MERGED,True,77,77,27,https://github.com/tomxtobin,Fix spelling and grammar,3,[],https://github.com/sahib/rmlint/pull/165,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/165#issuecomment-170949258,"This fixes some spelling and grammar issues in the docs and comments.
I might've gotten some of the ""a""/""an"" fixes wrong if I misunderstood how
""rmlint"" is pronounced; I assumed it's ""arr-emm-lint"". If that's wrong, let me
know and I'll update the PR. :-)","English is a weird language 😄.
Skipped through the diffs, looks good to me. I actually learned some things...
Thanks for your efforts!",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,165,2016-01-12T14:42:20Z,2016-01-12T15:36:17Z,2016-01-12T15:48:05Z,MERGED,True,77,77,27,https://github.com/tomxtobin,Fix spelling and grammar,3,[],https://github.com/sahib/rmlint/pull/165,https://github.com/tomxtobin,3,https://github.com/sahib/rmlint/pull/165#issuecomment-170952768,"This fixes some spelling and grammar issues in the docs and comments.
I might've gotten some of the ""a""/""an"" fixes wrong if I misunderstood how
""rmlint"" is pronounced; I assumed it's ""arr-emm-lint"". If that's wrong, let me
know and I'll update the PR. :-)","No problem! Yeah, English is a very weird language. ;-)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,178,2016-04-01T14:57:44Z,2016-04-01T14:57:53Z,2016-04-01T14:58:16Z,CLOSED,False,0,0,0,https://github.com/simmac,Merge pull request #1 from sahib/develop,1,[],https://github.com/sahib/rmlint/pull/178,https://github.com/simmac,1,https://github.com/sahib/rmlint/pull/178,test for os x 10.9 workaround,test for os x 10.9 workaround,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,178,2016-04-01T14:57:44Z,2016-04-01T14:57:53Z,2016-04-01T14:58:16Z,CLOSED,False,0,0,0,https://github.com/simmac,Merge pull request #1 from sahib/develop,1,[],https://github.com/sahib/rmlint/pull/178,https://github.com/simmac,2,https://github.com/sahib/rmlint/pull/178#issuecomment-204428890,test for os x 10.9 workaround,"Sorry, wrong way",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,180,2016-04-24T01:16:17Z,2017-01-18T09:30:56Z,2017-02-10T21:34:40Z,CLOSED,False,110,1,10,https://github.com/xtaran,"Initial, potentially incomplete packaging for Debian and derivatives",4,[],https://github.com/sahib/rmlint/pull/180,https://github.com/xtaran,1,https://github.com/sahib/rmlint/pull/180,Especially the GUI stuff is not yet taken into account.,Especially the GUI stuff is not yet taken into account.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,180,2016-04-24T01:16:17Z,2017-01-18T09:30:56Z,2017-02-10T21:34:40Z,CLOSED,False,110,1,10,https://github.com/xtaran,"Initial, potentially incomplete packaging for Debian and derivatives",4,[],https://github.com/sahib/rmlint/pull/180,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/180#issuecomment-218410203,Especially the GUI stuff is not yet taken into account.,"Hello @xtaran,
finally had a bit of time to polish the gui stuff. As of 95880e3 it should work now out of the ""box"" on debian, without tinkering with the PYTHONPATH (althoug the workaround it a bit hacky).
So, the agenda to get a readily usable debian package would probably be:

Finish the cmdline-package (missing: install of translation units)
Package the gui as separate package.
Merge this pull request.
Propose on the debian mailing list?

...Thank you for your packaging efforts!",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,180,2016-04-24T01:16:17Z,2017-01-18T09:30:56Z,2017-02-10T21:34:40Z,CLOSED,False,110,1,10,https://github.com/xtaran,"Initial, potentially incomplete packaging for Debian and derivatives",4,[],https://github.com/sahib/rmlint/pull/180,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/180#issuecomment-223436446,Especially the GUI stuff is not yet taken into account.,"Hmm, I attempted to build the package in a Debian VM, with no apparent success:
~/rmlint $ scons dist
~/rmlint $ mv rmlint-2.4.4.tar.gz rmlint_2.4.4.orig.tar.gz
~/rmlint $ dpkg-buildpackage
[normal build output]
dpkg-source: error: cannot represent change to po/fr.mo: binary file contents changed
dpkg-source: error: add po/fr.mo in debian/sources/included-binaries if you want to store the modified binary the debian tarball 
[... lots of similar lines ...]
I guess Im missing a bit of instructions here...",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,180,2016-04-24T01:16:17Z,2017-01-18T09:30:56Z,2017-02-10T21:34:40Z,CLOSED,False,110,1,10,https://github.com/xtaran,"Initial, potentially incomplete packaging for Debian and derivatives",4,[],https://github.com/sahib/rmlint/pull/180,https://github.com/xtaran,4,https://github.com/sahib/rmlint/pull/180#issuecomment-260521517,Especially the GUI stuff is not yet taken into account.,Use dpkg-buildpackage -b if you just want to build a binary package (.deb) and don't need a source package (.dsc + .orig.tar.gz + .debian.tar.xz).,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,180,2016-04-24T01:16:17Z,2017-01-18T09:30:56Z,2017-02-10T21:34:40Z,CLOSED,False,110,1,10,https://github.com/xtaran,"Initial, potentially incomplete packaging for Debian and derivatives",4,[],https://github.com/sahib/rmlint/pull/180,https://github.com/sahib,5,https://github.com/sahib/rmlint/pull/180#issuecomment-260654088,Especially the GUI stuff is not yet taken into account.,"Ah, thanks. dpkg-buildpackage -b did what I expected.
I fixed the tests errors (in 021b994) that happened during the building (wasn't a real bug) and limited the tests to the normal ones (there are some other torture tests that take forever and need lots of memory).
Okay, now we have a package that seems to build through. What would be the next steps?
I guess peer review in the sponsoring process is missing? The gui might not be necessary for starters and might be added later as separate package.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,180,2016-04-24T01:16:17Z,2017-01-18T09:30:56Z,2017-02-10T21:34:40Z,CLOSED,False,110,1,10,https://github.com/xtaran,"Initial, potentially incomplete packaging for Debian and derivatives",4,[],https://github.com/sahib/rmlint/pull/180,https://github.com/sahib,6,https://github.com/sahib/rmlint/pull/180#issuecomment-273426304,Especially the GUI stuff is not yet taken into account.,"@e7appew took another approach on packaging here:
https://mentors.debian.net/package/rmlint
He is currently looking for a sponsor @xtaran. Maybe you can help out here?
Since he has the packaging work in an own branch, I will close this PR.
Only commit 	84b50cc was cherry picked.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,180,2016-04-24T01:16:17Z,2017-01-18T09:30:56Z,2017-02-10T21:34:40Z,CLOSED,False,110,1,10,https://github.com/xtaran,"Initial, potentially incomplete packaging for Debian and derivatives",4,[],https://github.com/sahib/rmlint/pull/180,https://github.com/xtaran,7,https://github.com/sahib/rmlint/pull/180#issuecomment-273429143,Especially the GUI stuff is not yet taken into account.,"Hi,
I received @e7appew's mail with pleasure and was glad to see that it used my work as base. I will very likely sponsor it, but it might take a week or two since Debian's freeze for the next stable release is imminent. And since testing is already frozen for new packages, rmlint can only come to Debian 9 Stretch via backports. Accordingly other things are more urgent this week.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,180,2016-04-24T01:16:17Z,2017-01-18T09:30:56Z,2017-02-10T21:34:40Z,CLOSED,False,110,1,10,https://github.com/xtaran,"Initial, potentially incomplete packaging for Debian and derivatives",4,[],https://github.com/sahib/rmlint/pull/180,https://github.com/sahib,8,https://github.com/sahib/rmlint/pull/180#issuecomment-273450450,Especially the GUI stuff is not yet taken into account.,"Hey @xtaran, I'm glad to here that.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,180,2016-04-24T01:16:17Z,2017-01-18T09:30:56Z,2017-02-10T21:34:40Z,CLOSED,False,110,1,10,https://github.com/xtaran,"Initial, potentially incomplete packaging for Debian and derivatives",4,[],https://github.com/sahib/rmlint/pull/180,https://github.com/sahib,9,https://github.com/sahib/rmlint/pull/180#issuecomment-279072251,Especially the GUI stuff is not yet taken into account.,"Hey @xtaran, is there any news on that? Sorry for that repeated asking, but I'm curious. 😉",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,183,2016-05-08T12:41:15Z,2016-05-09T05:47:41Z,2016-05-10T06:38:35Z,MERGED,True,110,1,2,https://github.com/SeeSpotRun,Bugfix/path doubles,2,[],https://github.com/sahib/rmlint/pull/183,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/183,"Addresses case where same folder is mounted under two different paths, eg bind mounts and btrfs.","Addresses case where same folder is mounted under two different paths, eg bind mounts and btrfs.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,184,2016-05-31T19:48:59Z,2016-05-31T20:52:38Z,2016-05-31T20:52:38Z,MERGED,True,3,0,1,https://github.com/jmdana,The gui breaks when a blank optical disc is in the drive as it doesn't have a path,1,[],https://github.com/sahib/rmlint/pull/184,https://github.com/jmdana,1,https://github.com/sahib/rmlint/pull/184,"File ""/usr/lib/python3.5/site-packages/shredder/views/locations.py"", line 360, in add_entry
path = path.strip()
AttributeError: 'NoneType' object has no attribute 'strip'
This patch fixes the bug by skipping volumes without path.","File ""/usr/lib/python3.5/site-packages/shredder/views/locations.py"", line 360, in add_entry
path = path.strip()
AttributeError: 'NoneType' object has no attribute 'strip'
This patch fixes the bug by skipping volumes without path.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,184,2016-05-31T19:48:59Z,2016-05-31T20:52:38Z,2016-05-31T20:52:38Z,MERGED,True,3,0,1,https://github.com/jmdana,The gui breaks when a blank optical disc is in the drive as it doesn't have a path,1,[],https://github.com/sahib/rmlint/pull/184,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/184#issuecomment-222816718,"File ""/usr/lib/python3.5/site-packages/shredder/views/locations.py"", line 360, in add_entry
path = path.strip()
AttributeError: 'NoneType' object has no attribute 'strip'
This patch fixes the bug by skipping volumes without path.",Thanks for fixing this; Likely wouldn't ever have noticed due to the lack of a disc reader in my computer.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,188,2016-09-12T13:01:35Z,2016-09-12T15:28:43Z,2016-09-12T19:24:21Z,CLOSED,False,1,1,1,https://github.com/BrunoVernay,Default prefix to /usr,1,[],https://github.com/sahib/rmlint/pull/188,https://github.com/BrunoVernay,1,https://github.com/sahib/rmlint/pull/188,"to simply work ""out of the box"".
It is not complicated, to change the prefix, but it should work by default.","to simply work ""out of the box"".
It is not complicated, to change the prefix, but it should work by default.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,188,2016-09-12T13:01:35Z,2016-09-12T15:28:43Z,2016-09-12T19:24:21Z,CLOSED,False,1,1,1,https://github.com/BrunoVernay,Default prefix to /usr,1,[],https://github.com/sahib/rmlint/pull/188,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/188#issuecomment-246341806,"to simply work ""out of the box"".
It is not complicated, to change the prefix, but it should work by default.","Sorry, I won't merge this.
I understand the reasoning, but by convention /usr/local should contain self-compiled/user-installed software, while /usr contains software packaged by the distributions. I'm aware this is not a hard rule followed by everyone, but it kinda makes sense to me. Also, /usr/local/bin is usually in the PATH, therefore rendering this to a ""cosmetic"" problem.
Thanks for your effort though.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,188,2016-09-12T13:01:35Z,2016-09-12T15:28:43Z,2016-09-12T19:24:21Z,CLOSED,False,1,1,1,https://github.com/BrunoVernay,Default prefix to /usr,1,[],https://github.com/sahib/rmlint/pull/188,https://github.com/BrunoVernay,3,https://github.com/sahib/rmlint/pull/188#issuecomment-246461831,"to simply work ""out of the box"".
It is not complicated, to change the prefix, but it should work by default.",No problem. It is fine.  (Wasn't that much effort.),True,{}
sahib/rmlint,https://github.com/sahib/rmlint,189,2016-09-12T13:05:27Z,2016-09-12T13:10:14Z,2016-09-12T13:18:44Z,MERGED,True,2,0,1,https://github.com/BrunoVernay,Indicate how to clean,1,[],https://github.com/sahib/rmlint/pull/189,https://github.com/BrunoVernay,1,https://github.com/sahib/rmlint/pull/189,"Cleaning is not obvious. I had to ""man scons"" to find how to clean.
Usually ""make clean"" does the job, but scons is not well known.","Cleaning is not obvious. I had to ""man scons"" to find how to clean.
Usually ""make clean"" does the job, but scons is not well known.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,189,2016-09-12T13:05:27Z,2016-09-12T13:10:14Z,2016-09-12T13:18:44Z,MERGED,True,2,0,1,https://github.com/BrunoVernay,Indicate how to clean,1,[],https://github.com/sahib/rmlint/pull/189,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/189#issuecomment-246341906,"Cleaning is not obvious. I had to ""man scons"" to find how to clean.
Usually ""make clean"" does the job, but scons is not well known.","Thanks, merged.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,190,2016-09-12T14:13:22Z,2016-09-12T15:24:38Z,2016-09-12T19:17:18Z,MERGED,True,2,2,1,https://github.com/BrunoVernay,Test for None,1,[],https://github.com/sahib/rmlint/pull/190,https://github.com/BrunoVernay,1,https://github.com/sahib/rmlint/pull/190,"Without this test, I have : an error:
15:50:40 ⚐ INFO     root:29: Starting up.
15:50:40 ⚐ INFO     application:102: Loading resources from: /usr/lib/python3.5/site-packages/shredder/resources/shredder.gresource
15:50:40 ⚙ DEBUG    application:144: Instancing views.
Traceback (most recent call last):
File ""/usr/lib/python3.5/site-packages/shredder/application.py"", line 145, in do_startup
self.win.views.add_view(SettingsView(self), 'settings')
File ""/usr/lib/python3.5/site-packages/shredder/views/settings.py"", line 164, in init
self.build()
File ""/usr/lib/python3.5/site-packages/shredder/views/settings.py"", line 296, in build
self.append_entry(*entry[1:])
File ""/usr/lib/python3.5/site-packages/shredder/views/settings.py"", line 239, in append_entry
'description': desc.lower() or '',
AttributeError: 'NoneType' object has no attribute 'lower'","Without this test, I have : an error:
15:50:40 ⚐ INFO     root:29: Starting up.
15:50:40 ⚐ INFO     application:102: Loading resources from: /usr/lib/python3.5/site-packages/shredder/resources/shredder.gresource
15:50:40 ⚙ DEBUG    application:144: Instancing views.
Traceback (most recent call last):
File ""/usr/lib/python3.5/site-packages/shredder/application.py"", line 145, in do_startup
self.win.views.add_view(SettingsView(self), 'settings')
File ""/usr/lib/python3.5/site-packages/shredder/views/settings.py"", line 164, in init
self.build()
File ""/usr/lib/python3.5/site-packages/shredder/views/settings.py"", line 296, in build
self.append_entry(*entry[1:])
File ""/usr/lib/python3.5/site-packages/shredder/views/settings.py"", line 239, in append_entry
'description': desc.lower() or '',
AttributeError: 'NoneType' object has no attribute 'lower'",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,190,2016-09-12T14:13:22Z,2016-09-12T15:24:38Z,2016-09-12T19:17:18Z,MERGED,True,2,2,1,https://github.com/BrunoVernay,Test for None,1,[],https://github.com/sahib/rmlint/pull/190,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/190#issuecomment-246384292,"Without this test, I have : an error:
15:50:40 ⚐ INFO     root:29: Starting up.
15:50:40 ⚐ INFO     application:102: Loading resources from: /usr/lib/python3.5/site-packages/shredder/resources/shredder.gresource
15:50:40 ⚙ DEBUG    application:144: Instancing views.
Traceback (most recent call last):
File ""/usr/lib/python3.5/site-packages/shredder/application.py"", line 145, in do_startup
self.win.views.add_view(SettingsView(self), 'settings')
File ""/usr/lib/python3.5/site-packages/shredder/views/settings.py"", line 164, in init
self.build()
File ""/usr/lib/python3.5/site-packages/shredder/views/settings.py"", line 296, in build
self.append_entry(*entry[1:])
File ""/usr/lib/python3.5/site-packages/shredder/views/settings.py"", line 239, in append_entry
'description': desc.lower() or '',
AttributeError: 'NoneType' object has no attribute 'lower'","Looks good to me, thanks.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,203,2017-01-12T00:08:17Z,2017-01-12T10:44:00Z,2017-07-31T01:31:16Z,MERGED,True,2,2,2,https://github.com/e7appew,Fix spelling errors.,1,[],https://github.com/sahib/rmlint/pull/203,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/203,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,203,2017-01-12T00:08:17Z,2017-01-12T10:44:00Z,2017-07-31T01:31:16Z,MERGED,True,2,2,2,https://github.com/e7appew,Fix spelling errors.,1,[],https://github.com/sahib/rmlint/pull/203,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/203#issuecomment-272131511,,"Thanks, merged.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,203,2017-01-12T00:08:17Z,2017-01-12T10:44:00Z,2017-07-31T01:31:16Z,MERGED,True,2,2,2,https://github.com/e7appew,Fix spelling errors.,1,[],https://github.com/sahib/rmlint/pull/203,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/203#issuecomment-272131543,,"Thanks, merged.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,204,2017-01-15T14:42:02Z,2017-01-15T15:12:20Z,2017-07-31T01:31:32Z,MERGED,True,1,0,1,https://github.com/e7appew,Add keywords to desktop file.,1,[],https://github.com/sahib/rmlint/pull/204,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/204,"Lintian requires that desktop files shipped with Debian packages have a Keywords entry. This is what I have added for now. Feel free to change it to ones you think are more appropriate.
Cheers.","Lintian requires that desktop files shipped with Debian packages have a Keywords entry. This is what I have added for now. Feel free to change it to ones you think are more appropriate.
Cheers.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,204,2017-01-15T14:42:02Z,2017-01-15T15:12:20Z,2017-07-31T01:31:32Z,MERGED,True,1,0,1,https://github.com/e7appew,Add keywords to desktop file.,1,[],https://github.com/sahib/rmlint/pull/204,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/204#issuecomment-272701234,"Lintian requires that desktop files shipped with Debian packages have a Keywords entry. This is what I have added for now. Feel free to change it to ones you think are more appropriate.
Cheers.",Looks good to me.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,205,2017-01-15T14:43:33Z,2017-01-15T15:14:21Z,2017-07-31T01:31:25Z,MERGED,True,2,2,1,https://github.com/e7appew,Fix compilation warnings for 32-bit arch.,1,[],https://github.com/sahib/rmlint/pull/205,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/205,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,205,2017-01-15T14:43:33Z,2017-01-15T15:14:21Z,2017-07-31T01:31:25Z,MERGED,True,2,2,1,https://github.com/e7appew,Fix compilation warnings for 32-bit arch.,1,[],https://github.com/sahib/rmlint/pull/205,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/205#issuecomment-272701372,,"Merged, thanks.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,208,2017-02-16T13:43:34Z,2017-02-18T02:12:11Z,2017-07-31T01:31:36Z,CLOSED,False,4,0,1,https://github.com/e7appew,Fix FTBFS for hurd-i386.,1,[],https://github.com/sahib/rmlint/pull/208,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/208,"Hurd does not have path length restrictions, so doesn't define
MAXPATHLEN in <sys/param.h>. Defining it as 4096 when not defined
is a sufficient workaround, since the code is able to adapt when
paths are actually longer than this value.","Hurd does not have path length restrictions, so doesn't define
MAXPATHLEN in <sys/param.h>. Defining it as 4096 when not defined
is a sufficient workaround, since the code is able to adapt when
paths are actually longer than this value.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,208,2017-02-16T13:43:34Z,2017-02-18T02:12:11Z,2017-07-31T01:31:36Z,CLOSED,False,4,0,1,https://github.com/e7appew,Fix FTBFS for hurd-i386.,1,[],https://github.com/sahib/rmlint/pull/208,https://github.com/e7appew,2,https://github.com/sahib/rmlint/pull/208#issuecomment-280813537,"Hurd does not have path length restrictions, so doesn't define
MAXPATHLEN in <sys/param.h>. Defining it as 4096 when not defined
is a sufficient workaround, since the code is able to adapt when
paths are actually longer than this value.","Sorry, I didn't realise there is also a problem with PATH_MAX. Closing pull request as this would be covered by #207.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,209,2017-02-16T23:30:59Z,2017-02-17T21:15:06Z,2017-07-31T01:31:43Z,MERGED,True,1,0,1,https://github.com/e7appew,Fix formatting of unordered list in man page.,1,[],https://github.com/sahib/rmlint/pull/209,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/209,Trivial fix in formatting.,Trivial fix in formatting.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,209,2017-02-16T23:30:59Z,2017-02-17T21:15:06Z,2017-07-31T01:31:43Z,MERGED,True,1,0,1,https://github.com/e7appew,Fix formatting of unordered list in man page.,1,[],https://github.com/sahib/rmlint/pull/209,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/209#issuecomment-280768340,Trivial fix in formatting.,"Thanks, merged.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,210,2017-02-20T19:05:00Z,2017-03-15T15:20:57Z,2017-07-31T01:33:21Z,CLOSED,False,10,0,1,https://github.com/e7appew,Prevent app window from getting stuck in fullscreen mode.,1,[],https://github.com/sahib/rmlint/pull/210,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/210,"I'm not sure if this is the best solution to this problem, but in Xfce you can end up stuck in fullscreen mode with no way out but to close (using keyboard shortcuts) and restart the application. This is because the title bar is not displayed in fullscreen mode, and without it you have no access to the window menu which pops up when you right click on the title bar.
I couldn't find any window hints that might help with this problem, so the way I went about it was to toggle fullscreen mode and maximise the window instead whenever the user tries to switch to fullscreen mode. However, if fullscreen mode really does need to be made available, I thought perhaps there could be a shortcut key like F11 to toggle it back.
Thanks.","I'm not sure if this is the best solution to this problem, but in Xfce you can end up stuck in fullscreen mode with no way out but to close (using keyboard shortcuts) and restart the application. This is because the title bar is not displayed in fullscreen mode, and without it you have no access to the window menu which pops up when you right click on the title bar.
I couldn't find any window hints that might help with this problem, so the way I went about it was to toggle fullscreen mode and maximise the window instead whenever the user tries to switch to fullscreen mode. However, if fullscreen mode really does need to be made available, I thought perhaps there could be a shortcut key like F11 to toggle it back.
Thanks.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,210,2017-02-20T19:05:00Z,2017-03-15T15:20:57Z,2017-07-31T01:33:21Z,CLOSED,False,10,0,1,https://github.com/e7appew,Prevent app window from getting stuck in fullscreen mode.,1,[],https://github.com/sahib/rmlint/pull/210,https://github.com/e7appew,2,https://github.com/sahib/rmlint/pull/210#issuecomment-281337096,"I'm not sure if this is the best solution to this problem, but in Xfce you can end up stuck in fullscreen mode with no way out but to close (using keyboard shortcuts) and restart the application. This is because the title bar is not displayed in fullscreen mode, and without it you have no access to the window menu which pops up when you right click on the title bar.
I couldn't find any window hints that might help with this problem, so the way I went about it was to toggle fullscreen mode and maximise the window instead whenever the user tries to switch to fullscreen mode. However, if fullscreen mode really does need to be made available, I thought perhaps there could be a shortcut key like F11 to toggle it back.
Thanks.","Requested changes done.
Thanks.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,210,2017-02-20T19:05:00Z,2017-03-15T15:20:57Z,2017-07-31T01:33:21Z,CLOSED,False,10,0,1,https://github.com/e7appew,Prevent app window from getting stuck in fullscreen mode.,1,[],https://github.com/sahib/rmlint/pull/210,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/210#issuecomment-281373972,"I'm not sure if this is the best solution to this problem, but in Xfce you can end up stuck in fullscreen mode with no way out but to close (using keyboard shortcuts) and restart the application. This is because the title bar is not displayed in fullscreen mode, and without it you have no access to the window menu which pops up when you right click on the title bar.
I couldn't find any window hints that might help with this problem, so the way I went about it was to toggle fullscreen mode and maximise the window instead whenever the user tries to switch to fullscreen mode. However, if fullscreen mode really does need to be made available, I thought perhaps there could be a shortcut key like F11 to toggle it back.
Thanks.","Thank you for your changes. I will test your changes in the next few days, once I have access to my normal computer.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,210,2017-02-20T19:05:00Z,2017-03-15T15:20:57Z,2017-07-31T01:33:21Z,CLOSED,False,10,0,1,https://github.com/e7appew,Prevent app window from getting stuck in fullscreen mode.,1,[],https://github.com/sahib/rmlint/pull/210,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/210#issuecomment-282565327,"I'm not sure if this is the best solution to this problem, but in Xfce you can end up stuck in fullscreen mode with no way out but to close (using keyboard shortcuts) and restart the application. This is because the title bar is not displayed in fullscreen mode, and without it you have no access to the window menu which pops up when you right click on the title bar.
I couldn't find any window hints that might help with this problem, so the way I went about it was to toggle fullscreen mode and maximise the window instead whenever the user tries to switch to fullscreen mode. However, if fullscreen mode really does need to be made available, I thought perhaps there could be a shortcut key like F11 to toggle it back.
Thanks.","I only had a quick look at this and while this solves the issue for xfce it disables the ability to use shredder in fullscreen. This feels pretty hacky to me. The better idea would be probably to show the header bar in fullscreen mode. This would require us to reparent the GtkHeaderBar to the the mainwindow in fullscreen mode.
Do you have this problem in other GTK3 Apps? If so, would be rmlint the correct place to report this bug?
(Sorry for the delay, but I'm moving, so this might take a few weeks currently...)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,210,2017-02-20T19:05:00Z,2017-03-15T15:20:57Z,2017-07-31T01:33:21Z,CLOSED,False,10,0,1,https://github.com/e7appew,Prevent app window from getting stuck in fullscreen mode.,1,[],https://github.com/sahib/rmlint/pull/210,https://github.com/sahib,5,https://github.com/sahib/rmlint/pull/210#issuecomment-286775688,"I'm not sure if this is the best solution to this problem, but in Xfce you can end up stuck in fullscreen mode with no way out but to close (using keyboard shortcuts) and restart the application. This is because the title bar is not displayed in fullscreen mode, and without it you have no access to the window menu which pops up when you right click on the title bar.
I couldn't find any window hints that might help with this problem, so the way I went about it was to toggle fullscreen mode and maximise the window instead whenever the user tries to switch to fullscreen mode. However, if fullscreen mode really does need to be made available, I thought perhaps there could be a shortcut key like F11 to toggle it back.
Thanks.","I had a quick look again and things look not that good.
We cannot re-parent the headerbar properly once it was set using set_titlebar(),
so I don't see a good way to toggle the headerbar visibility between fullscreen/not fullscreen.
I think this is a more general bug, try for example fullscreening gtk3-demo. Same behaviour there,
which makes me suspect that this is a general behaviour of gtk3-apps with a headerbar.
Closing therefore, since this should be resolved elsewhere.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,215,2017-04-01T23:23:10Z,2017-04-02T09:24:26Z,2017-04-14T06:51:39Z,MERGED,True,33,4,2,https://github.com/SeeSpotRun,cmdline: don't confuse paths starting with '-' with stdin option,1,[],https://github.com/sahib/rmlint/pull/215,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/215,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,215,2017-04-01T23:23:10Z,2017-04-02T09:24:26Z,2017-04-14T06:51:39Z,MERGED,True,33,4,2,https://github.com/SeeSpotRun,cmdline: don't confuse paths starting with '-' with stdin option,1,[],https://github.com/sahib/rmlint/pull/215,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/215#issuecomment-290974971,,Looks good to me. 👍,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,215,2017-04-01T23:23:10Z,2017-04-02T09:24:26Z,2017-04-14T06:51:39Z,MERGED,True,33,4,2,https://github.com/SeeSpotRun,cmdline: don't confuse paths starting with '-' with stdin option,1,[],https://github.com/sahib/rmlint/pull/215,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/215#issuecomment-290978840,,"Okay, maybe not so good. The tests break pretty much every test that runs afterwards... 😛
I will fix that",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,215,2017-04-01T23:23:10Z,2017-04-02T09:24:26Z,2017-04-14T06:51:39Z,MERGED,True,33,4,2,https://github.com/SeeSpotRun,cmdline: don't confuse paths starting with '-' with stdin option,1,[],https://github.com/sahib/rmlint/pull/215,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/215#issuecomment-290980284,,"Thou shalt not chdir and forget to chdir back!
😏",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,215,2017-04-01T23:23:10Z,2017-04-02T09:24:26Z,2017-04-14T06:51:39Z,MERGED,True,33,4,2,https://github.com/SeeSpotRun,cmdline: don't confuse paths starting with '-' with stdin option,1,[],https://github.com/sahib/rmlint/pull/215,https://github.com/SeeSpotRun,5,https://github.com/sahib/rmlint/pull/215#issuecomment-291015808,,"Oops!
Well at least I made the effort to write a test...",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,217,2017-04-04T12:23:13Z,2017-04-14T19:18:41Z,2017-04-15T20:52:01Z,MERGED,True,2380,2474,55,https://github.com/SeeSpotRun,Use a struct to collect cmdline path info more explicitly,5,[],https://github.com/sahib/rmlint/pull/217,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/217,"Ok this is a somewhat pointless refactor but the whole cfg->paths = g_realloc(cfg->paths, sizeof(char *) * (index + 2)); thing was bugging me.  Anyway it's a bit cleaner and 20 fewer SLOC.
Also the concept of find -type f | rmlint - doesn't scale too well if find finds millions of files; while this PR doesn't fix that, it does make it easier to fix in future (the fix would be to have traverse.c read the pipe instead of cmdline.c).","Ok this is a somewhat pointless refactor but the whole cfg->paths = g_realloc(cfg->paths, sizeof(char *) * (index + 2)); thing was bugging me.  Anyway it's a bit cleaner and 20 fewer SLOC.
Also the concept of find -type f | rmlint - doesn't scale too well if find finds millions of files; while this PR doesn't fix that, it does make it easier to fix in future (the fix would be to have traverse.c read the pipe instead of cmdline.c).",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,218,2017-04-05T02:14:10Z,2017-04-14T19:18:28Z,2017-04-15T20:52:20Z,MERGED,True,183,25,3,https://github.com/SeeSpotRun,Tests/salvaged,5,[],https://github.com/sahib/rmlint/pull/218,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/218,This PR salvages some tests I added during my meanderings last year.  I have commented out a couple of these that fail under sahib/develop/rmlint.  There are a couple of TODO's (for treemerge I suspect) as a result.,This PR salvages some tests I added during my meanderings last year.  I have commented out a couple of these that fail under sahib/develop/rmlint.  There are a couple of TODO's (for treemerge I suspect) as a result.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,218,2017-04-05T02:14:10Z,2017-04-14T19:18:28Z,2017-04-15T20:52:20Z,MERGED,True,183,25,3,https://github.com/SeeSpotRun,Tests/salvaged,5,[],https://github.com/sahib/rmlint/pull/218,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/218#issuecomment-294218153,This PR salvages some tests I added during my meanderings last year.  I have commented out a couple of these that fail under sahib/develop/rmlint.  There are a couple of TODO's (for treemerge I suspect) as a result.,👍,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,219,2017-04-06T23:09:10Z,2017-04-07T02:56:35Z,2017-04-07T02:56:35Z,CLOSED,False,13,15,3,https://github.com/SeeSpotRun,Fix/mtime sorting,3,[],https://github.com/sahib/rmlint/pull/219,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/219,This was causing a Heisenbug in nosetests,This was causing a Heisenbug in nosetests,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,220,2017-04-07T02:57:52Z,2017-04-11T20:33:14Z,2017-04-14T06:56:21Z,MERGED,True,15,17,3,https://github.com/SeeSpotRun,Fix/mtime sorting,4,[],https://github.com/sahib/rmlint/pull/220,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/220,This was causing a Heisenbug in nosetests,This was causing a Heisenbug in nosetests,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,220,2017-04-07T02:57:52Z,2017-04-11T20:33:14Z,2017-04-14T06:56:21Z,MERGED,True,15,17,3,https://github.com/SeeSpotRun,Fix/mtime sorting,4,[],https://github.com/sahib/rmlint/pull/220,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/220#issuecomment-293391631,This was causing a Heisenbug in nosetests,"Thanks for finding that. I suspect that broke some travis builds, but I didn't care enough to spend time on it. 👍",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,222,2017-04-11T21:27:33Z,2017-04-14T09:33:58Z,2017-04-15T20:52:32Z,MERGED,True,10,12,2,https://github.com/SeeSpotRun,tests: add testcase for https://github.com/sahib/rmlint/pull/220,1,[],https://github.com/sahib/rmlint/pull/222,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/222,Just adding a testcase to reliably reproduce the Heisenbug I was seeing,Just adding a testcase to reliably reproduce the Heisenbug I was seeing,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,224,2017-05-02T12:22:23Z,2017-05-09T10:11:50Z,2017-07-05T06:36:24Z,MERGED,True,521,340,16,https://github.com/SeeSpotRun,Speed/smarter prematch,22,[],https://github.com/sahib/rmlint/pull/224,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/224,"I think this fully closes out #197 including #197 (comment).
Also should address the performance issue flagged in #166.","I think this fully closes out #197 including #197 (comment).
Also should address the performance issue flagged in #166.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,224,2017-05-02T12:22:23Z,2017-05-09T10:11:50Z,2017-07-05T06:36:24Z,MERGED,True,521,340,16,https://github.com/SeeSpotRun,Speed/smarter prematch,22,[],https://github.com/sahib/rmlint/pull/224,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/224#issuecomment-298623242,"I think this fully closes out #197 including #197 (comment).
Also should address the performance issue flagged in #166.",Not sure what Travis is unhappy about (rund fine on my box).  Wonder if it's related to fractional mtimes in xattr.c...,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,224,2017-05-02T12:22:23Z,2017-05-09T10:11:50Z,2017-07-05T06:36:24Z,MERGED,True,521,340,16,https://github.com/SeeSpotRun,Speed/smarter prematch,22,[],https://github.com/sahib/rmlint/pull/224,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/224#issuecomment-298640678,"I think this fully closes out #197 including #197 (comment).
Also should address the performance issue flagged in #166.","Judging from the log, it looks like the rmlint binary crashed.
subprocess.CalledProcessError: 
    Command '['
                ./rmlint', '/tmp/rmlint-unit-testdir',
                 '-V', '-o', 'json:/tmp/out.json', 
                '-c', 'json:oneline',
                '-D', '-S', 'pa', '--xattr-read'
      ]' 
     returned non-zero exit status 1
You might have some luck trying to re-run with enabling RM_TS_USE_GDB.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,224,2017-05-02T12:22:23Z,2017-05-09T10:11:50Z,2017-07-05T06:36:24Z,MERGED,True,521,340,16,https://github.com/SeeSpotRun,Speed/smarter prematch,22,[],https://github.com/sahib/rmlint/pull/224,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/224#issuecomment-298751587,"I think this fully closes out #197 including #197 (comment).
Also should address the performance issue flagged in #166.","Okay, run it with RM_TS_USE_GDB on travis. The outcome was disappointing though,
the tests do work (or at least do not crash) if executed through gdb:
https://api.travis-ci.org/jobs/228090381/log.txt?deansi=true",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,228,2017-06-04T11:17:21Z,2017-06-04T11:21:08Z,2017-06-04T11:21:55Z,MERGED,True,1,1,1,https://github.com/ilovezfs,Use #if not #ifdef with HAVE_SYSMACROS_H,1,[],https://github.com/sahib/rmlint/pull/228,https://github.com/ilovezfs,1,https://github.com/sahib/rmlint/pull/228,"If scons sets HAVE_SYSMACROS_H to 0, that still counts as being defined.
So use #if instead of #ifdef.
Prevents build failure on macOS.","If scons sets HAVE_SYSMACROS_H to 0, that still counts as being defined.
So use #if instead of #ifdef.
Prevents build failure on macOS.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,228,2017-06-04T11:17:21Z,2017-06-04T11:21:08Z,2017-06-04T11:21:55Z,MERGED,True,1,1,1,https://github.com/ilovezfs,Use #if not #ifdef with HAVE_SYSMACROS_H,1,[],https://github.com/sahib/rmlint/pull/228,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/228#issuecomment-306034042,"If scons sets HAVE_SYSMACROS_H to 0, that still counts as being defined.
So use #if instead of #ifdef.
Prevents build failure on macOS.","Right, thanks for spotting this.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,228,2017-06-04T11:17:21Z,2017-06-04T11:21:08Z,2017-06-04T11:21:55Z,MERGED,True,1,1,1,https://github.com/ilovezfs,Use #if not #ifdef with HAVE_SYSMACROS_H,1,[],https://github.com/sahib/rmlint/pull/228,https://github.com/ilovezfs,3,https://github.com/sahib/rmlint/pull/228#issuecomment-306034088,"If scons sets HAVE_SYSMACROS_H to 0, that still counts as being defined.
So use #if instead of #ifdef.
Prevents build failure on macOS.",Thanks for the merge!,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,240,2017-06-26T04:40:30Z,2017-07-23T21:52:30Z,2017-07-23T21:52:30Z,MERGED,True,124,94,2,https://github.com/hungrywolf27,Improvements to python script,12,"['Discussion', 'In Progress']",https://github.com/sahib/rmlint/pull/240,https://github.com/hungrywolf27,1,https://github.com/sahib/rmlint/pull/240,Closes #239.,Closes #239.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,240,2017-06-26T04:40:30Z,2017-07-23T21:52:30Z,2017-07-23T21:52:30Z,MERGED,True,124,94,2,https://github.com/hungrywolf27,Improvements to python script,12,"['Discussion', 'In Progress']",https://github.com/sahib/rmlint/pull/240,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/240#issuecomment-311173244,Closes #239.,Hello again. Thanks for that PR. I will try to review until the end of this week.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,240,2017-06-26T04:40:30Z,2017-07-23T21:52:30Z,2017-07-23T21:52:30Z,MERGED,True,124,94,2,https://github.com/hungrywolf27,Improvements to python script,12,"['Discussion', 'In Progress']",https://github.com/sahib/rmlint/pull/240,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/240#issuecomment-312516892,Closes #239.,"I didn't have that much time to check, but I had a quick over it. Overall it looks good, but some places
There also some issues on my desk:

There is a bug that currently prevents using something like this: # rmlint -O py:/tmp.x.py.
(No default outputs are created, other than what -O docs say).
% in the python output are duplicated due to the usage of fprintf. This leads to the double %%
in the progress output.
Tests need to be adjusted. Especially some test that assert that the script works for both Py2 and Py3.x.
Code should be run through pylint to make it a bit more consistent.

Just a note: The original idea was to output an easily modifiable python script that can be adjusted to ones need. So I'm not necessarily for supporting every case and for exactly reproducing the functionality of the sh output (although I really approve the more familiar output you've added in this PR).",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,242,2017-07-03T23:28:19Z,2017-07-04T20:50:22Z,2017-07-04T20:50:22Z,MERGED,True,39,4,3,https://github.com/SeeSpotRun,Fix sh escape emptydirs,5,[],https://github.com/sahib/rmlint/pull/242,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/242,Should fix #241,Should fix #241,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,242,2017-07-03T23:28:19Z,2017-07-04T20:50:22Z,2017-07-04T20:50:22Z,MERGED,True,39,4,3,https://github.com/SeeSpotRun,Fix sh escape emptydirs,5,[],https://github.com/sahib/rmlint/pull/242,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/242#issuecomment-312950576,Should fix #241,"Ah no, it creates a long string in the output. TBH I think I favor something weird and hacky on the developer side, instead of leaking that through to the user script...",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,243,2017-07-05T07:11:14Z,2017-07-19T12:51:27Z,2017-07-19T15:25:08Z,CLOSED,False,2807,2612,49,https://github.com/SeeSpotRun,Various refactorings and improvements,41,[],https://github.com/sahib/rmlint/pull/243,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/243,"There's a lot of stuff in here, I'll try to summarise:

moved several options (that are set based on command line parsing) from RmSession into RmCfg
merged cmdline.[ch] into cfg.[ch] since these two are inseparably linked
alternative ""mains"" (gui, hasher, etc) now marshalled a bit more systematically (all session mains in session.c; cfg.c detects the option then rmlint.c chooses which session to run based on cfg->option).
hash-utility main is now handled as just another formatter (TODO: update documentation)
added rm_log_perrorf(message, ...) for times when rm_log_perror just doesn't say enough...
moved all RmSession->counters into new counters.[ch] and made them all threadsafe
some minor tidy-ups of RmFmtTable
bugfixes for rm_offsets_match()
more robust rmlint --btrfs-clone
added some nosetests and improved some others
raise ""SkipTest"" for nosetests that can't be run instead of silently skipping
some clang-formatting and trailing space deletions

Edit:

added rmlint --is-clone utility to test if two files are clones (maybe this should be rmlint --is-reflink?)

There's a slight speed improvement (with warm caches at least) - I think mainly due to the new counters.c instead of the threadpool in shredder that was used to make counters threadsafe.
SLOC (excluding tests) is reduced slightly (~70 lines)
If there's anything where you disagree with the direction, let me know and I can re-work or surgically remove.","There's a lot of stuff in here, I'll try to summarise:

moved several options (that are set based on command line parsing) from RmSession into RmCfg
merged cmdline.[ch] into cfg.[ch] since these two are inseparably linked
alternative ""mains"" (gui, hasher, etc) now marshalled a bit more systematically (all session mains in session.c; cfg.c detects the option then rmlint.c chooses which session to run based on cfg->option).
hash-utility main is now handled as just another formatter (TODO: update documentation)
added rm_log_perrorf(message, ...) for times when rm_log_perror just doesn't say enough...
moved all RmSession->counters into new counters.[ch] and made them all threadsafe
some minor tidy-ups of RmFmtTable
bugfixes for rm_offsets_match()
more robust rmlint --btrfs-clone
added some nosetests and improved some others
raise ""SkipTest"" for nosetests that can't be run instead of silently skipping
some clang-formatting and trailing space deletions

Edit:

added rmlint --is-clone utility to test if two files are clones (maybe this should be rmlint --is-reflink?)

There's a slight speed improvement (with warm caches at least) - I think mainly due to the new counters.c instead of the threadpool in shredder that was used to make counters threadsafe.
SLOC (excluding tests) is reduced slightly (~70 lines)
If there's anything where you disagree with the direction, let me know and I can re-work or surgically remove.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,243,2017-07-05T07:11:14Z,2017-07-19T12:51:27Z,2017-07-19T15:25:08Z,CLOSED,False,2807,2612,49,https://github.com/SeeSpotRun,Various refactorings and improvements,41,[],https://github.com/sahib/rmlint/pull/243,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/243#issuecomment-313024415,"There's a lot of stuff in here, I'll try to summarise:

moved several options (that are set based on command line parsing) from RmSession into RmCfg
merged cmdline.[ch] into cfg.[ch] since these two are inseparably linked
alternative ""mains"" (gui, hasher, etc) now marshalled a bit more systematically (all session mains in session.c; cfg.c detects the option then rmlint.c chooses which session to run based on cfg->option).
hash-utility main is now handled as just another formatter (TODO: update documentation)
added rm_log_perrorf(message, ...) for times when rm_log_perror just doesn't say enough...
moved all RmSession->counters into new counters.[ch] and made them all threadsafe
some minor tidy-ups of RmFmtTable
bugfixes for rm_offsets_match()
more robust rmlint --btrfs-clone
added some nosetests and improved some others
raise ""SkipTest"" for nosetests that can't be run instead of silently skipping
some clang-formatting and trailing space deletions

Edit:

added rmlint --is-clone utility to test if two files are clones (maybe this should be rmlint --is-reflink?)

There's a slight speed improvement (with warm caches at least) - I think mainly due to the new counters.c instead of the threadpool in shredder that was used to make counters threadsafe.
SLOC (excluding tests) is reduced slightly (~70 lines)
If there's anything where you disagree with the direction, let me know and I can re-work or surgically remove.","Cool! 👍 Thanks for catching up on that.
I will try to have a look at it over the weekend (might take some time though, since that's a lot to review).
You might want to look at travis in the meantime,
since your changes broke the build for various reasons (g_strv_contains is too new; #ifdef'd code is broken due to changed function parameters).",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,243,2017-07-05T07:11:14Z,2017-07-19T12:51:27Z,2017-07-19T15:25:08Z,CLOSED,False,2807,2612,49,https://github.com/SeeSpotRun,Various refactorings and improvements,41,[],https://github.com/sahib/rmlint/pull/243,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/243#issuecomment-313082333,"There's a lot of stuff in here, I'll try to summarise:

moved several options (that are set based on command line parsing) from RmSession into RmCfg
merged cmdline.[ch] into cfg.[ch] since these two are inseparably linked
alternative ""mains"" (gui, hasher, etc) now marshalled a bit more systematically (all session mains in session.c; cfg.c detects the option then rmlint.c chooses which session to run based on cfg->option).
hash-utility main is now handled as just another formatter (TODO: update documentation)
added rm_log_perrorf(message, ...) for times when rm_log_perror just doesn't say enough...
moved all RmSession->counters into new counters.[ch] and made them all threadsafe
some minor tidy-ups of RmFmtTable
bugfixes for rm_offsets_match()
more robust rmlint --btrfs-clone
added some nosetests and improved some others
raise ""SkipTest"" for nosetests that can't be run instead of silently skipping
some clang-formatting and trailing space deletions

Edit:

added rmlint --is-clone utility to test if two files are clones (maybe this should be rmlint --is-reflink?)

There's a slight speed improvement (with warm caches at least) - I think mainly due to the new counters.c instead of the threadpool in shredder that was used to make counters threadsafe.
SLOC (excluding tests) is reduced slightly (~70 lines)
If there's anything where you disagree with the direction, let me know and I can re-work or surgically remove.","Thanks for the tips.
I fixed the first two Travis compaints but somehow clang broke trying to get Travis to easy-install psutil (a new prerequisite for --btrfs-clone tests).  Also failed via sudo apt-get intall python3-psutil.  Any suggestions? nvm, got there in the end.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,243,2017-07-05T07:11:14Z,2017-07-19T12:51:27Z,2017-07-19T15:25:08Z,CLOSED,False,2807,2612,49,https://github.com/SeeSpotRun,Various refactorings and improvements,41,[],https://github.com/sahib/rmlint/pull/243,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/243#issuecomment-313822165,"There's a lot of stuff in here, I'll try to summarise:

moved several options (that are set based on command line parsing) from RmSession into RmCfg
merged cmdline.[ch] into cfg.[ch] since these two are inseparably linked
alternative ""mains"" (gui, hasher, etc) now marshalled a bit more systematically (all session mains in session.c; cfg.c detects the option then rmlint.c chooses which session to run based on cfg->option).
hash-utility main is now handled as just another formatter (TODO: update documentation)
added rm_log_perrorf(message, ...) for times when rm_log_perror just doesn't say enough...
moved all RmSession->counters into new counters.[ch] and made them all threadsafe
some minor tidy-ups of RmFmtTable
bugfixes for rm_offsets_match()
more robust rmlint --btrfs-clone
added some nosetests and improved some others
raise ""SkipTest"" for nosetests that can't be run instead of silently skipping
some clang-formatting and trailing space deletions

Edit:

added rmlint --is-clone utility to test if two files are clones (maybe this should be rmlint --is-reflink?)

There's a slight speed improvement (with warm caches at least) - I think mainly due to the new counters.c instead of the threadpool in shredder that was used to make counters threadsafe.
SLOC (excluding tests) is reduced slightly (~70 lines)
If there's anything where you disagree with the direction, let me know and I can re-work or surgically remove.","I need to continue the review, that was only the very first look. Sadly, the sheer amount of changed lines makes it almost impossible to properly review that PR. Simple solution would be to trust you (which I usually do), but I wouldn't trust myself...",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,243,2017-07-05T07:11:14Z,2017-07-19T12:51:27Z,2017-07-19T15:25:08Z,CLOSED,False,2807,2612,49,https://github.com/SeeSpotRun,Various refactorings and improvements,41,[],https://github.com/sahib/rmlint/pull/243,https://github.com/SeeSpotRun,5,https://github.com/sahib/rmlint/pull/243#issuecomment-313828261,"There's a lot of stuff in here, I'll try to summarise:

moved several options (that are set based on command line parsing) from RmSession into RmCfg
merged cmdline.[ch] into cfg.[ch] since these two are inseparably linked
alternative ""mains"" (gui, hasher, etc) now marshalled a bit more systematically (all session mains in session.c; cfg.c detects the option then rmlint.c chooses which session to run based on cfg->option).
hash-utility main is now handled as just another formatter (TODO: update documentation)
added rm_log_perrorf(message, ...) for times when rm_log_perror just doesn't say enough...
moved all RmSession->counters into new counters.[ch] and made them all threadsafe
some minor tidy-ups of RmFmtTable
bugfixes for rm_offsets_match()
more robust rmlint --btrfs-clone
added some nosetests and improved some others
raise ""SkipTest"" for nosetests that can't be run instead of silently skipping
some clang-formatting and trailing space deletions

Edit:

added rmlint --is-clone utility to test if two files are clones (maybe this should be rmlint --is-reflink?)

There's a slight speed improvement (with warm caches at least) - I think mainly due to the new counters.c instead of the threadpool in shredder that was used to make counters threadsafe.
SLOC (excluding tests) is reduced slightly (~70 lines)
If there's anything where you disagree with the direction, let me know and I can re-work or surgically remove.",Thanks for the feedback; yes it is a lot of lines.  I'll try to PR smaller bites in future.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,243,2017-07-05T07:11:14Z,2017-07-19T12:51:27Z,2017-07-19T15:25:08Z,CLOSED,False,2807,2612,49,https://github.com/SeeSpotRun,Various refactorings and improvements,41,[],https://github.com/sahib/rmlint/pull/243,https://github.com/SeeSpotRun,6,https://github.com/sahib/rmlint/pull/243#issuecomment-316375768,"There's a lot of stuff in here, I'll try to summarise:

moved several options (that are set based on command line parsing) from RmSession into RmCfg
merged cmdline.[ch] into cfg.[ch] since these two are inseparably linked
alternative ""mains"" (gui, hasher, etc) now marshalled a bit more systematically (all session mains in session.c; cfg.c detects the option then rmlint.c chooses which session to run based on cfg->option).
hash-utility main is now handled as just another formatter (TODO: update documentation)
added rm_log_perrorf(message, ...) for times when rm_log_perror just doesn't say enough...
moved all RmSession->counters into new counters.[ch] and made them all threadsafe
some minor tidy-ups of RmFmtTable
bugfixes for rm_offsets_match()
more robust rmlint --btrfs-clone
added some nosetests and improved some others
raise ""SkipTest"" for nosetests that can't be run instead of silently skipping
some clang-formatting and trailing space deletions

Edit:

added rmlint --is-clone utility to test if two files are clones (maybe this should be rmlint --is-reflink?)

There's a slight speed improvement (with warm caches at least) - I think mainly due to the new counters.c instead of the threadpool in shredder that was used to make counters threadsafe.
SLOC (excluding tests) is reduced slightly (~70 lines)
If there's anything where you disagree with the direction, let me know and I can re-work or surgically remove.",I'm closing this but will bring bits of it back in via other PR's (with the benefit of some clearer thinking now),True,{}
sahib/rmlint,https://github.com/sahib/rmlint,243,2017-07-05T07:11:14Z,2017-07-19T12:51:27Z,2017-07-19T15:25:08Z,CLOSED,False,2807,2612,49,https://github.com/SeeSpotRun,Various refactorings and improvements,41,[],https://github.com/sahib/rmlint/pull/243,https://github.com/sahib,7,https://github.com/sahib/rmlint/pull/243#issuecomment-316422913,"There's a lot of stuff in here, I'll try to summarise:

moved several options (that are set based on command line parsing) from RmSession into RmCfg
merged cmdline.[ch] into cfg.[ch] since these two are inseparably linked
alternative ""mains"" (gui, hasher, etc) now marshalled a bit more systematically (all session mains in session.c; cfg.c detects the option then rmlint.c chooses which session to run based on cfg->option).
hash-utility main is now handled as just another formatter (TODO: update documentation)
added rm_log_perrorf(message, ...) for times when rm_log_perror just doesn't say enough...
moved all RmSession->counters into new counters.[ch] and made them all threadsafe
some minor tidy-ups of RmFmtTable
bugfixes for rm_offsets_match()
more robust rmlint --btrfs-clone
added some nosetests and improved some others
raise ""SkipTest"" for nosetests that can't be run instead of silently skipping
some clang-formatting and trailing space deletions

Edit:

added rmlint --is-clone utility to test if two files are clones (maybe this should be rmlint --is-reflink?)

There's a slight speed improvement (with warm caches at least) - I think mainly due to the new counters.c instead of the threadpool in shredder that was used to make counters threadsafe.
SLOC (excluding tests) is reduced slightly (~70 lines)
If there's anything where you disagree with the direction, let me know and I can re-work or surgically remove.","Alright, sorry for the slowness on my end.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,245,2017-07-19T13:00:24Z,2017-07-30T13:00:50Z,2017-07-30T13:00:50Z,MERGED,True,849,294,23,https://github.com/SeeSpotRun,Reflinks dev,27,[],https://github.com/sahib/rmlint/pull/245,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/245,"Some changes related to reflink-capable filesystems.
Bugfixes:

rm_session_check_kernel_version(): logic error
test_sh.py: sometimes made reflinks when it wanted to test hardlinks
rm_offsets_match(): several bugs

Improvements:

Use FIDEDUPERANGE ioctl for file cloning/deduping to support additional reflink-capable filesystems (xfs, ocfs2)
add --is-reflink command to test if two files are reflinks

API changes:

deprecate --btrfs-clone in favour of --dedupe since it now applies to other fs types","Some changes related to reflink-capable filesystems.
Bugfixes:

rm_session_check_kernel_version(): logic error
test_sh.py: sometimes made reflinks when it wanted to test hardlinks
rm_offsets_match(): several bugs

Improvements:

Use FIDEDUPERANGE ioctl for file cloning/deduping to support additional reflink-capable filesystems (xfs, ocfs2)
add --is-reflink command to test if two files are reflinks

API changes:

deprecate --btrfs-clone in favour of --dedupe since it now applies to other fs types",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,245,2017-07-19T13:00:24Z,2017-07-30T13:00:50Z,2017-07-30T13:00:50Z,MERGED,True,849,294,23,https://github.com/SeeSpotRun,Reflinks dev,27,[],https://github.com/sahib/rmlint/pull/245,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/245#issuecomment-316422808,"Some changes related to reflink-capable filesystems.
Bugfixes:

rm_session_check_kernel_version(): logic error
test_sh.py: sometimes made reflinks when it wanted to test hardlinks
rm_offsets_match(): several bugs

Improvements:

Use FIDEDUPERANGE ioctl for file cloning/deduping to support additional reflink-capable filesystems (xfs, ocfs2)
add --is-reflink command to test if two files are reflinks

API changes:

deprecate --btrfs-clone in favour of --dedupe since it now applies to other fs types","Thanks for this PR, I will try to review it on the weekend. This time it looks a bit easier to digest. 😄
(Actually I ordered a laptop, so I hope I can catch up on my review duty on the train)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,245,2017-07-19T13:00:24Z,2017-07-30T13:00:50Z,2017-07-30T13:00:50Z,MERGED,True,849,294,23,https://github.com/SeeSpotRun,Reflinks dev,27,[],https://github.com/sahib/rmlint/pull/245,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/245#issuecomment-316540073,"Some changes related to reflink-capable filesystems.
Bugfixes:

rm_session_check_kernel_version(): logic error
test_sh.py: sometimes made reflinks when it wanted to test hardlinks
rm_offsets_match(): several bugs

Improvements:

Use FIDEDUPERANGE ioctl for file cloning/deduping to support additional reflink-capable filesystems (xfs, ocfs2)
add --is-reflink command to test if two files are reflinks

API changes:

deprecate --btrfs-clone in favour of --dedupe since it now applies to other fs types",+737 / −275 should be a bit easier to digest than +2807 / −2612,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,245,2017-07-19T13:00:24Z,2017-07-30T13:00:50Z,2017-07-30T13:00:50Z,MERGED,True,849,294,23,https://github.com/SeeSpotRun,Reflinks dev,27,[],https://github.com/sahib/rmlint/pull/245,https://github.com/SeeSpotRun,4,https://github.com/sahib/rmlint/pull/245#issuecomment-318866212,"Some changes related to reflink-capable filesystems.
Bugfixes:

rm_session_check_kernel_version(): logic error
test_sh.py: sometimes made reflinks when it wanted to test hardlinks
rm_offsets_match(): several bugs

Improvements:

Use FIDEDUPERANGE ioctl for file cloning/deduping to support additional reflink-capable filesystems (xfs, ocfs2)
add --is-reflink command to test if two files are reflinks

API changes:

deprecate --btrfs-clone in favour of --dedupe since it now applies to other fs types","I think that covers all your comments.
You might want to have a closer look at 20be725",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,245,2017-07-19T13:00:24Z,2017-07-30T13:00:50Z,2017-07-30T13:00:50Z,MERGED,True,849,294,23,https://github.com/SeeSpotRun,Reflinks dev,27,[],https://github.com/sahib/rmlint/pull/245,https://github.com/sahib,5,https://github.com/sahib/rmlint/pull/245#issuecomment-318900350,"Some changes related to reflink-capable filesystems.
Bugfixes:

rm_session_check_kernel_version(): logic error
test_sh.py: sometimes made reflinks when it wanted to test hardlinks
rm_offsets_match(): several bugs

Improvements:

Use FIDEDUPERANGE ioctl for file cloning/deduping to support additional reflink-capable filesystems (xfs, ocfs2)
add --is-reflink command to test if two files are reflinks

API changes:

deprecate --btrfs-clone in favour of --dedupe since it now applies to other fs types","Perfect! Thanks.

I think that covers all your comments.

Yep.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,246,2017-07-29T20:34:55Z,2017-07-29T20:38:27Z,2017-07-31T01:33:08Z,MERGED,True,2,2,1,https://github.com/e7appew,Fix man page typos.,1,[],https://github.com/sahib/rmlint/pull/246,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/246,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,247,2017-07-30T21:25:04Z,2017-08-05T13:07:02Z,2017-12-01T06:22:55Z,MERGED,True,235,106,8,https://github.com/SeeSpotRun,"A couple of bugfixes, a testcase and some formatting",9,[],https://github.com/sahib/rmlint/pull/247,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/247,"In other words, a small tidy-up for #245","In other words, a small tidy-up for #245",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,247,2017-07-30T21:25:04Z,2017-08-05T13:07:02Z,2017-12-01T06:22:55Z,MERGED,True,235,106,8,https://github.com/SeeSpotRun,"A couple of bugfixes, a testcase and some formatting",9,[],https://github.com/sahib/rmlint/pull/247,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/247#issuecomment-319212861,"In other words, a small tidy-up for #245","Incorporated your feedback thanks.
Also found another bug along the way.  This would have reported files on different filesystems as reflinks, if they had the same physical offsets.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,247,2017-07-30T21:25:04Z,2017-08-05T13:07:02Z,2017-12-01T06:22:55Z,MERGED,True,235,106,8,https://github.com/SeeSpotRun,"A couple of bugfixes, a testcase and some formatting",9,[],https://github.com/sahib/rmlint/pull/247,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/247#issuecomment-320442729,"In other words, a small tidy-up for #245","Merged, thanks.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,249,2017-08-17T09:01:14Z,2017-08-17T16:40:26Z,2017-08-17T21:25:16Z,MERGED,True,68,18,2,https://github.com/SeeSpotRun,Develop,3,[],https://github.com/sahib/rmlint/pull/249,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/249,Fix a corner case for #248,Fix a corner case for #248,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,249,2017-08-17T09:01:14Z,2017-08-17T16:40:26Z,2017-08-17T21:25:16Z,MERGED,True,68,18,2,https://github.com/SeeSpotRun,Develop,3,[],https://github.com/sahib/rmlint/pull/249,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/249#issuecomment-323128006,Fix a corner case for #248,"Thanks for fixing my mess. :)
What's up with Afferbeck Lauder?",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,249,2017-08-17T09:01:14Z,2017-08-17T16:40:26Z,2017-08-17T21:25:16Z,MERGED,True,68,18,2,https://github.com/SeeSpotRun,Develop,3,[],https://github.com/sahib/rmlint/pull/249,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/249#issuecomment-323198654,Fix a corner case for #248,"""Afferbeck Lauder"" is supposedly Strine for ""Alphabetical Order""",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,257,2017-10-27T18:52:18Z,2017-11-03T08:12:06Z,2017-11-08T19:46:14Z,MERGED,True,55,0,1,https://github.com/vincentmele,Created rmlint.spec for CentOS7,1,[],https://github.com/sahib/rmlint/pull/257,https://github.com/vincentmele,1,https://github.com/sahib/rmlint/pull/257,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,257,2017-10-27T18:52:18Z,2017-11-03T08:12:06Z,2017-11-08T19:46:14Z,MERGED,True,55,0,1,https://github.com/vincentmele,Created rmlint.spec for CentOS7,1,[],https://github.com/sahib/rmlint/pull/257,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/257#issuecomment-341642139,,"Hello @vincentmele,
thanks for your PR! Did you have anything in your mind for also bringing this .rpm to other CentOS users or was it just for personal use?",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,257,2017-10-27T18:52:18Z,2017-11-03T08:12:06Z,2017-11-08T19:46:14Z,MERGED,True,55,0,1,https://github.com/vincentmele,Created rmlint.spec for CentOS7,1,[],https://github.com/sahib/rmlint/pull/257,https://github.com/vincentmele,3,https://github.com/sahib/rmlint/pull/257#issuecomment-342937030,,"This was for personal use. It should also work on CentOS6, but I haven't tested it.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,259,2017-11-04T13:07:03Z,2017-11-13T09:19:49Z,2017-11-18T07:10:08Z,MERGED,True,151,133,3,https://github.com/SeeSpotRun,Hasher debug,4,[],https://github.com/sahib/rmlint/pull/259,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/259,Fixes a few bugs discussed in #256,Fixes a few bugs discussed in #256,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,260,2017-11-05T09:22:08Z,2017-11-05T22:45:00Z,2017-11-18T07:09:35Z,MERGED,True,38,5,4,https://github.com/SeeSpotRun,SConstruct: automate choice of -j<n> (Spot got a new cpu ),1,[],https://github.com/sahib/rmlint/pull/260,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/260,Pretty trivial but saves me 5 keystrokes every build,Pretty trivial but saves me 5 keystrokes every build,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,260,2017-11-05T09:22:08Z,2017-11-05T22:45:00Z,2017-11-18T07:09:35Z,MERGED,True,38,5,4,https://github.com/SeeSpotRun,SConstruct: automate choice of -j<n> (Spot got a new cpu ),1,[],https://github.com/sahib/rmlint/pull/260,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/260#issuecomment-342012238,Pretty trivial but saves me 5 keystrokes every build,"Cool :) Looks good to me.
What CPU did you get?",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,260,2017-11-05T09:22:08Z,2017-11-05T22:45:00Z,2017-11-18T07:09:35Z,MERGED,True,38,5,4,https://github.com/SeeSpotRun,SConstruct: automate choice of -j<n> (Spot got a new cpu ),1,[],https://github.com/sahib/rmlint/pull/260,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/260#issuecomment-342031694,Pretty trivial but saves me 5 keystrokes every build,"What CPU did you get?

Ryzen 1600 (cpu_count 12)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,265,2017-11-20T07:34:20Z,2017-11-29T22:06:39Z,2017-12-01T01:02:16Z,MERGED,True,2700,2546,49,https://github.com/SeeSpotRun,Checksum dev,87,[],https://github.com/sahib/rmlint/pull/265,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/265,"Sorry another big PR.  Mainly related to #261 but found a few other things along the way.
Summary of changes:

Different idiom in checksum.c: conform all digest types to a standard interface; this avoids multiple switch(digest->type) spaghetti code and makes adding/removing checksum types easier/cleaner.
Drop checksum types bastard, spooky, city & farmhash due to speed and/or efficiency issues.
Add metro (fast non-cryptographic) and highway (fast cryptographic) hashes.
Change -p/-P... hash options.
Added tests for impact of data increment length on checksums
Sped up cumulative digest algorithm & made more robust
Docs & changelog updated

All nosetests passing (other than some memory leaks which I don't think are related to this PR)","Sorry another big PR.  Mainly related to #261 but found a few other things along the way.
Summary of changes:

Different idiom in checksum.c: conform all digest types to a standard interface; this avoids multiple switch(digest->type) spaghetti code and makes adding/removing checksum types easier/cleaner.
Drop checksum types bastard, spooky, city & farmhash due to speed and/or efficiency issues.
Add metro (fast non-cryptographic) and highway (fast cryptographic) hashes.
Change -p/-P... hash options.
Added tests for impact of data increment length on checksums
Sped up cumulative digest algorithm & made more robust
Docs & changelog updated

All nosetests passing (other than some memory leaks which I don't think are related to this PR)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,265,2017-11-20T07:34:20Z,2017-11-29T22:06:39Z,2017-12-01T01:02:16Z,MERGED,True,2700,2546,49,https://github.com/SeeSpotRun,Checksum dev,87,[],https://github.com/sahib/rmlint/pull/265,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/265#issuecomment-345857586,"Sorry another big PR.  Mainly related to #261 but found a few other things along the way.
Summary of changes:

Different idiom in checksum.c: conform all digest types to a standard interface; this avoids multiple switch(digest->type) spaghetti code and makes adding/removing checksum types easier/cleaner.
Drop checksum types bastard, spooky, city & farmhash due to speed and/or efficiency issues.
Add metro (fast non-cryptographic) and highway (fast cryptographic) hashes.
Change -p/-P... hash options.
Added tests for impact of data increment length on checksums
Sped up cumulative digest algorithm & made more robust
Docs & changelog updated

All nosetests passing (other than some memory leaks which I don't think are related to this PR)","Sorry another big PR. Mainly related to #261 but found a few other things along the way.

No problem. I'm (and my lack of time) is more like the problem here, not your work.
I had a look at the PR and looks overall very solid to me. 👍
Had a few comments and questions we can still discuss though.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,265,2017-11-20T07:34:20Z,2017-11-29T22:06:39Z,2017-12-01T01:02:16Z,MERGED,True,2700,2546,49,https://github.com/SeeSpotRun,Checksum dev,87,[],https://github.com/sahib/rmlint/pull/265,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/265#issuecomment-347052050,"Sorry another big PR.  Mainly related to #261 but found a few other things along the way.
Summary of changes:

Different idiom in checksum.c: conform all digest types to a standard interface; this avoids multiple switch(digest->type) spaghetti code and makes adding/removing checksum types easier/cleaner.
Drop checksum types bastard, spooky, city & farmhash due to speed and/or efficiency issues.
Add metro (fast non-cryptographic) and highway (fast cryptographic) hashes.
Change -p/-P... hash options.
Added tests for impact of data increment length on checksums
Sped up cumulative digest algorithm & made more robust
Docs & changelog updated

All nosetests passing (other than some memory leaks which I don't think are related to this PR)",Ok now compiles and passes nosetests on 32-bit debian wheezy and also on Travis.  Should be ok to merge now.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,265,2017-11-20T07:34:20Z,2017-11-29T22:06:39Z,2017-12-01T01:02:16Z,MERGED,True,2700,2546,49,https://github.com/SeeSpotRun,Checksum dev,87,[],https://github.com/sahib/rmlint/pull/265,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/265#issuecomment-348012690,"Sorry another big PR.  Mainly related to #261 but found a few other things along the way.
Summary of changes:

Different idiom in checksum.c: conform all digest types to a standard interface; this avoids multiple switch(digest->type) spaghetti code and makes adding/removing checksum types easier/cleaner.
Drop checksum types bastard, spooky, city & farmhash due to speed and/or efficiency issues.
Add metro (fast non-cryptographic) and highway (fast cryptographic) hashes.
Change -p/-P... hash options.
Added tests for impact of data increment length on checksums
Sped up cumulative digest algorithm & made more robust
Docs & changelog updated

All nosetests passing (other than some memory leaks which I don't think are related to this PR)",Thanks for the extensive testing!,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,266,2017-11-27T02:31:11Z,2017-11-29T22:05:40Z,2017-12-01T01:00:42Z,MERGED,True,17,12,2,https://github.com/SeeSpotRun,Awerick,2,[],https://github.com/sahib/rmlint/pull/266,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/266,Should fix #248 (comment),Should fix #248 (comment),True,{}
sahib/rmlint,https://github.com/sahib/rmlint,267,2017-11-27T15:42:12Z,2017-11-29T22:05:02Z,2017-12-18T16:15:30Z,MERGED,True,1,1,1,https://github.com/sente,Add parens after print statement,1,[],https://github.com/sahib/rmlint/pull/267,https://github.com/sente,1,https://github.com/sahib/rmlint/pull/267,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,267,2017-11-27T15:42:12Z,2017-11-29T22:05:02Z,2017-12-18T16:15:30Z,MERGED,True,1,1,1,https://github.com/sente,Add parens after print statement,1,[],https://github.com/sahib/rmlint/pull/267,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/267#issuecomment-348012275,,Thanks!,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,269,2017-12-16T18:20:22Z,2017-12-18T22:18:36Z,2017-12-18T23:02:16Z,MERGED,True,18,1,1,https://github.com/phemmer,fix centos7 spec URL & split shredder to new package,1,[],https://github.com/sahib/rmlint/pull/269,https://github.com/phemmer,1,https://github.com/sahib/rmlint/pull/269,"This fixes 2 issues:
The download URL was incorrect:
warning: Downloading https://github.com/sahib/rmlint/archive/rmlint-2.6.1.tar.gz to /home/phemmer/rpmbuild/SOURCES/rmlint-2.6.1.tar.gz
curl: (22) The requested URL returned error: 404 Not Found
error: Couldn't download https://github.com/sahib/rmlint/archive/rmlint-2.6.1.tar.gz

The shredder files weren't specified in the %files section:
error: Installed (but unpackaged) file(s) found:
   /usr/lib/python3.4/site-packages/Shredder-2.6.1.Penetrating.Pineapple-py3.4.egg-info
   /usr/lib/python3.4/site-packages/shredder/__init__.py
   /usr/lib/python3.4/site-packages/shredder/__main__.py
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__init__.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__init__.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__main__.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__main__.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/about.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/about.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/application.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/application.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/chart.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/chart.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/cmdline.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/cmdline.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/logger.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/logger.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/query.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/query.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/runner.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/runner.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/tree.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/tree.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/util.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/util.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/window.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/window.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/about.py
   /usr/lib/python3.4/site-packages/shredder/application.py
   /usr/lib/python3.4/site-packages/shredder/chart.py
   /usr/lib/python3.4/site-packages/shredder/cmdline.py
   /usr/lib/python3.4/site-packages/shredder/logger.py
   /usr/lib/python3.4/site-packages/shredder/query.py
   /usr/lib/python3.4/site-packages/shredder/resources/shredder.gresource
   /usr/lib/python3.4/site-packages/shredder/runner.py
   /usr/lib/python3.4/site-packages/shredder/tree.py
   /usr/lib/python3.4/site-packages/shredder/util.py
   /usr/lib/python3.4/site-packages/shredder/views/__init__.py
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/__init__.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/__init__.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/editor.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/editor.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/locations.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/locations.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/runner.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/runner.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/settings.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/settings.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/editor.py
   /usr/lib/python3.4/site-packages/shredder/views/locations.py
   /usr/lib/python3.4/site-packages/shredder/views/runner.py
   /usr/lib/python3.4/site-packages/shredder/views/settings.py
   /usr/lib/python3.4/site-packages/shredder/window.py
   /usr/share/applications/shredder.desktop
   /usr/share/glib-2.0/schemas/gschemas.compiled
   /usr/share/glib-2.0/schemas/org.gnome.Shredder.gschema.xml
   /usr/share/icons/hicolor/scalable/apps/shredder.svg

Instead of adding the shredder files to the main rmlint package, I created a new subpackage for shredder. I opted for this as I imagine many users (myself included) don't have a GUI on their CentOS systems, and thus have no use for a GUI utility.
CC: @vincentmele","This fixes 2 issues:
The download URL was incorrect:
warning: Downloading https://github.com/sahib/rmlint/archive/rmlint-2.6.1.tar.gz to /home/phemmer/rpmbuild/SOURCES/rmlint-2.6.1.tar.gz
curl: (22) The requested URL returned error: 404 Not Found
error: Couldn't download https://github.com/sahib/rmlint/archive/rmlint-2.6.1.tar.gz

The shredder files weren't specified in the %files section:
error: Installed (but unpackaged) file(s) found:
   /usr/lib/python3.4/site-packages/Shredder-2.6.1.Penetrating.Pineapple-py3.4.egg-info
   /usr/lib/python3.4/site-packages/shredder/__init__.py
   /usr/lib/python3.4/site-packages/shredder/__main__.py
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__init__.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__init__.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__main__.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__main__.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/about.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/about.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/application.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/application.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/chart.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/chart.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/cmdline.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/cmdline.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/logger.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/logger.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/query.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/query.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/runner.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/runner.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/tree.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/tree.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/util.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/util.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/window.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/window.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/about.py
   /usr/lib/python3.4/site-packages/shredder/application.py
   /usr/lib/python3.4/site-packages/shredder/chart.py
   /usr/lib/python3.4/site-packages/shredder/cmdline.py
   /usr/lib/python3.4/site-packages/shredder/logger.py
   /usr/lib/python3.4/site-packages/shredder/query.py
   /usr/lib/python3.4/site-packages/shredder/resources/shredder.gresource
   /usr/lib/python3.4/site-packages/shredder/runner.py
   /usr/lib/python3.4/site-packages/shredder/tree.py
   /usr/lib/python3.4/site-packages/shredder/util.py
   /usr/lib/python3.4/site-packages/shredder/views/__init__.py
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/__init__.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/__init__.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/editor.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/editor.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/locations.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/locations.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/runner.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/runner.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/settings.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/settings.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/editor.py
   /usr/lib/python3.4/site-packages/shredder/views/locations.py
   /usr/lib/python3.4/site-packages/shredder/views/runner.py
   /usr/lib/python3.4/site-packages/shredder/views/settings.py
   /usr/lib/python3.4/site-packages/shredder/window.py
   /usr/share/applications/shredder.desktop
   /usr/share/glib-2.0/schemas/gschemas.compiled
   /usr/share/glib-2.0/schemas/org.gnome.Shredder.gschema.xml
   /usr/share/icons/hicolor/scalable/apps/shredder.svg

Instead of adding the shredder files to the main rmlint package, I created a new subpackage for shredder. I opted for this as I imagine many users (myself included) don't have a GUI on their CentOS systems, and thus have no use for a GUI utility.
CC: @vincentmele",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,269,2017-12-16T18:20:22Z,2017-12-18T22:18:36Z,2017-12-18T23:02:16Z,MERGED,True,18,1,1,https://github.com/phemmer,fix centos7 spec URL & split shredder to new package,1,[],https://github.com/sahib/rmlint/pull/269,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/269#issuecomment-352575983,"This fixes 2 issues:
The download URL was incorrect:
warning: Downloading https://github.com/sahib/rmlint/archive/rmlint-2.6.1.tar.gz to /home/phemmer/rpmbuild/SOURCES/rmlint-2.6.1.tar.gz
curl: (22) The requested URL returned error: 404 Not Found
error: Couldn't download https://github.com/sahib/rmlint/archive/rmlint-2.6.1.tar.gz

The shredder files weren't specified in the %files section:
error: Installed (but unpackaged) file(s) found:
   /usr/lib/python3.4/site-packages/Shredder-2.6.1.Penetrating.Pineapple-py3.4.egg-info
   /usr/lib/python3.4/site-packages/shredder/__init__.py
   /usr/lib/python3.4/site-packages/shredder/__main__.py
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__init__.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__init__.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__main__.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/__main__.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/about.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/about.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/application.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/application.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/chart.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/chart.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/cmdline.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/cmdline.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/logger.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/logger.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/query.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/query.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/runner.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/runner.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/tree.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/tree.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/util.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/util.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/__pycache__/window.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/__pycache__/window.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/about.py
   /usr/lib/python3.4/site-packages/shredder/application.py
   /usr/lib/python3.4/site-packages/shredder/chart.py
   /usr/lib/python3.4/site-packages/shredder/cmdline.py
   /usr/lib/python3.4/site-packages/shredder/logger.py
   /usr/lib/python3.4/site-packages/shredder/query.py
   /usr/lib/python3.4/site-packages/shredder/resources/shredder.gresource
   /usr/lib/python3.4/site-packages/shredder/runner.py
   /usr/lib/python3.4/site-packages/shredder/tree.py
   /usr/lib/python3.4/site-packages/shredder/util.py
   /usr/lib/python3.4/site-packages/shredder/views/__init__.py
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/__init__.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/__init__.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/editor.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/editor.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/locations.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/locations.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/runner.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/runner.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/settings.cpython-34.pyc
   /usr/lib/python3.4/site-packages/shredder/views/__pycache__/settings.cpython-34.pyo
   /usr/lib/python3.4/site-packages/shredder/views/editor.py
   /usr/lib/python3.4/site-packages/shredder/views/locations.py
   /usr/lib/python3.4/site-packages/shredder/views/runner.py
   /usr/lib/python3.4/site-packages/shredder/views/settings.py
   /usr/lib/python3.4/site-packages/shredder/window.py
   /usr/share/applications/shredder.desktop
   /usr/share/glib-2.0/schemas/gschemas.compiled
   /usr/share/glib-2.0/schemas/org.gnome.Shredder.gschema.xml
   /usr/share/icons/hicolor/scalable/apps/shredder.svg

Instead of adding the shredder files to the main rmlint package, I created a new subpackage for shredder. I opted for this as I imagine many users (myself included) don't have a GUI on their CentOS systems, and thus have no use for a GUI utility.
CC: @vincentmele","Thank you @phemmer, looks good to me. Will be part of next release.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,276,2018-02-23T12:39:29Z,2018-02-25T16:41:48Z,2021-03-28T03:07:39Z,MERGED,True,39,35,2,https://github.com/SeeSpotRun,Shellcheck,6,[],https://github.com/sahib/rmlint/pull/276,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/276,Found this handy utility (https://github.com/koalaman/shellcheck) and have conformed sh.sh/rmlint.sh accordingly,Found this handy utility (https://github.com/koalaman/shellcheck) and have conformed sh.sh/rmlint.sh accordingly,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,276,2018-02-23T12:39:29Z,2018-02-25T16:41:48Z,2021-03-28T03:07:39Z,MERGED,True,39,35,2,https://github.com/SeeSpotRun,Shellcheck,6,[],https://github.com/sahib/rmlint/pull/276,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/276#issuecomment-368150300,Found this handy utility (https://github.com/koalaman/shellcheck) and have conformed sh.sh/rmlint.sh accordingly,... was also going to add a nosetest that calls shellcheck on the generated rmlint.sh but didn't get around to it.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,276,2018-02-23T12:39:29Z,2018-02-25T16:41:48Z,2021-03-28T03:07:39Z,MERGED,True,39,35,2,https://github.com/SeeSpotRun,Shellcheck,6,[],https://github.com/sahib/rmlint/pull/276,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/276#issuecomment-368323980,Found this handy utility (https://github.com/koalaman/shellcheck) and have conformed sh.sh/rmlint.sh accordingly,"Cool, thank you!",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,277,2018-03-07T04:44:18Z,2018-03-16T23:06:33Z,2018-03-17T03:05:30Z,MERGED,True,58,10,5,https://github.com/SeeSpotRun,Adds option to read null-delimited file paths from stdin,6,[],https://github.com/sahib/rmlint/pull/277,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/277,"Should address #273
TODO:
1. Documentation
2. Test case","Should address #273
TODO:
1. Documentation
2. Test case",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,277,2018-03-07T04:44:18Z,2018-03-16T23:06:33Z,2018-03-17T03:05:30Z,MERGED,True,58,10,5,https://github.com/SeeSpotRun,Adds option to read null-delimited file paths from stdin,6,[],https://github.com/sahib/rmlint/pull/277,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/277#issuecomment-373868172,"Should address #273
TODO:
1. Documentation
2. Test case",Thank you @SeeSpotRun  :),True,{}
sahib/rmlint,https://github.com/sahib/rmlint,283,2018-04-30T05:11:29Z,2018-05-01T09:23:39Z,2021-03-28T03:07:39Z,MERGED,True,37,27,4,https://github.com/SeeSpotRun,Support xfs reflinks,3,[],https://github.com/sahib/rmlint/pull/283,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/283,Addresses #281,Addresses #281,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,283,2018-04-30T05:11:29Z,2018-05-01T09:23:39Z,2021-03-28T03:07:39Z,MERGED,True,37,27,4,https://github.com/SeeSpotRun,Support xfs reflinks,3,[],https://github.com/sahib/rmlint/pull/283,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/283#issuecomment-385632780,Addresses #281,Thank you Daniel.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,285,2018-05-21T16:50:33Z,2018-05-21T19:39:17Z,2018-05-21T19:39:59Z,MERGED,True,1,1,1,https://github.com/dmth,Typo in DE Translation,1,[],https://github.com/sahib/rmlint/pull/285,https://github.com/dmth,1,https://github.com/sahib/rmlint/pull/285,Fixes one typo in the german translation.,Fixes one typo in the german translation.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,285,2018-05-21T16:50:33Z,2018-05-21T19:39:17Z,2018-05-21T19:39:59Z,MERGED,True,1,1,1,https://github.com/dmth,Typo in DE Translation,1,[],https://github.com/sahib/rmlint/pull/285,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/285#issuecomment-390759736,Fixes one typo in the german translation.,Danke @dmth. 😄,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,288,2018-06-12T20:46:05Z,2018-06-13T15:47:18Z,2018-06-13T15:47:18Z,MERGED,True,1,1,1,https://github.com/aaschmid,Fix percentage in progress bar on rmlint.sh,1,[],https://github.com/sahib/rmlint/pull/288,https://github.com/aaschmid,1,https://github.com/sahib/rmlint/pull/288,"... which is broken due to incorrect quoting. My fix does correct the quoting issue introduced in aa9b063.
Also remove trailing spaces.
Please don't hesitate to ask any question or give me feedback on this.","... which is broken due to incorrect quoting. My fix does correct the quoting issue introduced in aa9b063.
Also remove trailing spaces.
Please don't hesitate to ask any question or give me feedback on this.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,288,2018-06-12T20:46:05Z,2018-06-13T15:47:18Z,2018-06-13T15:47:18Z,MERGED,True,1,1,1,https://github.com/aaschmid,Fix percentage in progress bar on rmlint.sh,1,[],https://github.com/sahib/rmlint/pull/288,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/288#issuecomment-396951753,"... which is broken due to incorrect quoting. My fix does correct the quoting issue introduced in aa9b063.
Also remove trailing spaces.
Please don't hesitate to ask any question or give me feedback on this.","Hello @aaschmid,
thanks for the fix. Couldn't test the change yet though, will do later.
Two things:

What exactly was broken?
The trailing spaces are sadly needed due to a hack we're applying to write the correct PROGRESS_TOTAL to the final script. Please revert that part.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,288,2018-06-12T20:46:05Z,2018-06-13T15:47:18Z,2018-06-13T15:47:18Z,MERGED,True,1,1,1,https://github.com/aaschmid,Fix percentage in progress bar on rmlint.sh,1,[],https://github.com/sahib/rmlint/pull/288,https://github.com/aaschmid,3,https://github.com/sahib/rmlint/pull/288#issuecomment-396978502,"... which is broken due to incorrect quoting. My fix does correct the quoting issue introduced in aa9b063.
Also remove trailing spaces.
Please don't hesitate to ask any question or give me feedback on this.","This was the output of ./rmlint.sh -n before the fix:

% ./rmlint.sh -n
# ////////////////////////////////////////////////////////////
# ///  This is only a dry run; nothing will be modified! ///
# ////////////////////////////////////////////////////////////
[  0%] 0 Deleting symlink pointing nowhere: XXX
[  0%] 0Deleting empty directory: XXX
[...]
[  0%] 3Deleting: XXX
[  0%] 3Keeping:  XXX

The output after the fix:
% ./rmlint.sh -n
# ////////////////////////////////////////////////////////////
# ///  This is only a dry run; nothing will be modified! ///
# ////////////////////////////////////////////////////////////
[  0%]  Deleting symlink pointing nowhere: XXX
[  0%] Deleting empty directory: XXX
[...]
[  3%] Deleting: XXX
[  3%] Keeping:  XXX


done",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,288,2018-06-12T20:46:05Z,2018-06-13T15:47:18Z,2018-06-13T15:47:18Z,MERGED,True,1,1,1,https://github.com/aaschmid,Fix percentage in progress bar on rmlint.sh,1,[],https://github.com/sahib/rmlint/pull/288,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/288#issuecomment-396986582,"... which is broken due to incorrect quoting. My fix does correct the quoting issue introduced in aa9b063.
Also remove trailing spaces.
Please don't hesitate to ask any question or give me feedback on this.","Thanks, now I get it. Hard to judge by looking at it from the phone. 😄
Approved.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,290,2018-06-17T01:49:51Z,2018-10-29T22:37:58Z,2021-03-28T03:07:39Z,MERGED,True,22,17,1,https://github.com/SeeSpotRun,Hardlinks,5,[],https://github.com/sahib/rmlint/pull/290,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/290,"Should fix #275.
Also changes handling of duplicate dirs for cp_hardlink() and cp_reflink() from deletion to symlink.  Arguably neither deletion nor symlink is ideal; we could instead consider banning combinations of options -D with -c sh:hardlink but I think the symlink option is a reasonable compromise.","Should fix #275.
Also changes handling of duplicate dirs for cp_hardlink() and cp_reflink() from deletion to symlink.  Arguably neither deletion nor symlink is ideal; we could instead consider banning combinations of options -D with -c sh:hardlink but I think the symlink option is a reasonable compromise.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,295,2018-07-22T09:00:58Z,2018-07-22T17:36:10Z,2018-07-22T17:36:10Z,MERGED,True,16,16,1,https://github.com/tdslw,Fix/doc: Fixed formatting in docs/rmlint.1.rst,3,[],https://github.com/sahib/rmlint/pull/295,https://github.com/tdslw,1,https://github.com/sahib/rmlint/pull/295,Restrucured code formatting to make line breaks visible.,Restrucured code formatting to make line breaks visible.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,296,2018-07-24T09:45:43Z,2018-08-13T07:43:25Z,2018-08-13T07:43:30Z,MERGED,True,10,9,1,https://github.com/tdslw,Fix formatting and add cross reference,2,[],https://github.com/sahib/rmlint/pull/296,https://github.com/tdslw,1,https://github.com/sahib/rmlint/pull/296,Minor modifications.,Minor modifications.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,296,2018-07-24T09:45:43Z,2018-08-13T07:43:25Z,2018-08-13T07:43:30Z,MERGED,True,10,9,1,https://github.com/tdslw,Fix formatting and add cross reference,2,[],https://github.com/sahib/rmlint/pull/296,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/296#issuecomment-412434554,Minor modifications.,Thanks!,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,297,2018-08-13T06:04:01Z,2018-08-14T13:23:49Z,2018-08-14T13:23:49Z,MERGED,True,3,1,2,https://github.com/mfwitten,Fix broken ./rmlint.sh percentage-progress formatting,1,[],https://github.com/sahib/rmlint/pull/297,https://github.com/mfwitten,1,https://github.com/sahib/rmlint/pull/297,"It used to look like this:
[  0%] 0Keeping:  /tmp/o/at/blah/g
[  0%] 16Cloning to: /tmp/o/at/blah/h
[  0%] 33Keeping:  /tmp/o/at/blah/a
[  0%] 50Cloning to: /tmp/o/at/blah/c
[  0%] 66Cloning to: /tmp/o/at/blah/d
[  0%] 83Cloning to: /tmp/o/at/blah/e
[  0%] 100Done!

Now it looks like this:
[  0%] Keeping:  /tmp/o/at/blah/g
[ 16%] Cloning to: /tmp/o/at/blah/h
[ 33%] Keeping:  /tmp/o/at/blah/a
[ 50%] Cloning to: /tmp/o/at/blah/c
[ 66%] Cloning to: /tmp/o/at/blah/d
[ 83%] Cloning to: /tmp/o/at/blah/e
[100%] Done!","It used to look like this:
[  0%] 0Keeping:  /tmp/o/at/blah/g
[  0%] 16Cloning to: /tmp/o/at/blah/h
[  0%] 33Keeping:  /tmp/o/at/blah/a
[  0%] 50Cloning to: /tmp/o/at/blah/c
[  0%] 66Cloning to: /tmp/o/at/blah/d
[  0%] 83Cloning to: /tmp/o/at/blah/e
[  0%] 100Done!

Now it looks like this:
[  0%] Keeping:  /tmp/o/at/blah/g
[ 16%] Cloning to: /tmp/o/at/blah/h
[ 33%] Keeping:  /tmp/o/at/blah/a
[ 50%] Cloning to: /tmp/o/at/blah/c
[ 66%] Cloning to: /tmp/o/at/blah/d
[ 83%] Cloning to: /tmp/o/at/blah/e
[100%] Done!",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,297,2018-08-13T06:04:01Z,2018-08-14T13:23:49Z,2018-08-14T13:23:49Z,MERGED,True,3,1,2,https://github.com/mfwitten,Fix broken ./rmlint.sh percentage-progress formatting,1,[],https://github.com/sahib/rmlint/pull/297,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/297#issuecomment-412436026,"It used to look like this:
[  0%] 0Keeping:  /tmp/o/at/blah/g
[  0%] 16Cloning to: /tmp/o/at/blah/h
[  0%] 33Keeping:  /tmp/o/at/blah/a
[  0%] 50Cloning to: /tmp/o/at/blah/c
[  0%] 66Cloning to: /tmp/o/at/blah/d
[  0%] 83Cloning to: /tmp/o/at/blah/e
[  0%] 100Done!

Now it looks like this:
[  0%] Keeping:  /tmp/o/at/blah/g
[ 16%] Cloning to: /tmp/o/at/blah/h
[ 33%] Keeping:  /tmp/o/at/blah/a
[ 50%] Cloning to: /tmp/o/at/blah/c
[ 66%] Cloning to: /tmp/o/at/blah/d
[ 83%] Cloning to: /tmp/o/at/blah/e
[100%] Done!","Hey @mfwitten,
This was alrady fixed as part of this PR: #288
It got merged into master directly though due to me not noticing the pull request destination of that PR.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,297,2018-08-13T06:04:01Z,2018-08-14T13:23:49Z,2018-08-14T13:23:49Z,MERGED,True,3,1,2,https://github.com/mfwitten,Fix broken ./rmlint.sh percentage-progress formatting,1,[],https://github.com/sahib/rmlint/pull/297,https://github.com/mfwitten,3,https://github.com/sahib/rmlint/pull/297#issuecomment-412534368,"It used to look like this:
[  0%] 0Keeping:  /tmp/o/at/blah/g
[  0%] 16Cloning to: /tmp/o/at/blah/h
[  0%] 33Keeping:  /tmp/o/at/blah/a
[  0%] 50Cloning to: /tmp/o/at/blah/c
[  0%] 66Cloning to: /tmp/o/at/blah/d
[  0%] 83Cloning to: /tmp/o/at/blah/e
[  0%] 100Done!

Now it looks like this:
[  0%] Keeping:  /tmp/o/at/blah/g
[ 16%] Cloning to: /tmp/o/at/blah/h
[ 33%] Keeping:  /tmp/o/at/blah/a
[ 50%] Cloning to: /tmp/o/at/blah/c
[ 66%] Cloning to: /tmp/o/at/blah/d
[ 83%] Cloning to: /tmp/o/at/blah/e
[100%] Done!","The bug was indeed identified in #288, but it wasn't completely fixed; certainly, I have still been experiencing a bug in the formatting.
In particular, [% 3d%%] needs to be changed to [%3d%%]; that space character is not being used for padding.
This pull request not only makes that change, but also introduces a constant/static format for use by the relevant printf statement, so that it can be ensured exactly how the format will be interpreted at run-time.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,297,2018-08-13T06:04:01Z,2018-08-14T13:23:49Z,2018-08-14T13:23:49Z,MERGED,True,3,1,2,https://github.com/mfwitten,Fix broken ./rmlint.sh percentage-progress formatting,1,[],https://github.com/sahib/rmlint/pull/297,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/297#issuecomment-412784384,"It used to look like this:
[  0%] 0Keeping:  /tmp/o/at/blah/g
[  0%] 16Cloning to: /tmp/o/at/blah/h
[  0%] 33Keeping:  /tmp/o/at/blah/a
[  0%] 50Cloning to: /tmp/o/at/blah/c
[  0%] 66Cloning to: /tmp/o/at/blah/d
[  0%] 83Cloning to: /tmp/o/at/blah/e
[  0%] 100Done!

Now it looks like this:
[  0%] Keeping:  /tmp/o/at/blah/g
[ 16%] Cloning to: /tmp/o/at/blah/h
[ 33%] Keeping:  /tmp/o/at/blah/a
[ 50%] Cloning to: /tmp/o/at/blah/c
[ 66%] Cloning to: /tmp/o/at/blah/d
[ 83%] Cloning to: /tmp/o/at/blah/e
[100%] Done!","In particular, [% 3d%%] needs to be changed to [%3d%%]; that space character is not being used for padding.

Okay. Good point.

This pull request not only makes that change, but also introduces a constant/static format for use by the relevant printf statement, so that it can be ensured exactly how the format will be interpreted at run-time.

I'm not quite getting why you're putting the format (a static string, ""'%s[%3d%%]%s '"") as template argument. What benefit do you see in this compared to putting it directly in formats/sh.sh?",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,297,2018-08-13T06:04:01Z,2018-08-14T13:23:49Z,2018-08-14T13:23:49Z,MERGED,True,3,1,2,https://github.com/mfwitten,Fix broken ./rmlint.sh percentage-progress formatting,1,[],https://github.com/sahib/rmlint/pull/297,https://github.com/mfwitten,5,https://github.com/sahib/rmlint/pull/297#issuecomment-412862583,"It used to look like this:
[  0%] 0Keeping:  /tmp/o/at/blah/g
[  0%] 16Cloning to: /tmp/o/at/blah/h
[  0%] 33Keeping:  /tmp/o/at/blah/a
[  0%] 50Cloning to: /tmp/o/at/blah/c
[  0%] 66Cloning to: /tmp/o/at/blah/d
[  0%] 83Cloning to: /tmp/o/at/blah/e
[  0%] 100Done!

Now it looks like this:
[  0%] Keeping:  /tmp/o/at/blah/g
[ 16%] Cloning to: /tmp/o/at/blah/h
[ 33%] Keeping:  /tmp/o/at/blah/a
[ 50%] Cloning to: /tmp/o/at/blah/c
[ 66%] Cloning to: /tmp/o/at/blah/d
[ 83%] Cloning to: /tmp/o/at/blah/e
[100%] Done!","A static format string is generally considered preferable, because printf interprets that string; it's [theoretically] best to ensure a particular interpretation and thereby keep it simple.
Unfortunately, the format string in question ('%s[%3d%%]%s ') cannot be placed directly into formats/sh.sh, because the %s is used as a placeholder for the template-filling process; it gets clobbered.

So, either the templating pipeline needs to be changed (e.g., the preprocessing could escape just % and then replace some other symbol with %s for the purpose of forming the template), or the static format in question needs to be lifted up into the template-filling process; this patch chooses the latter approach.
My suggestion: Apply this patch as-is, because it corrects both a practical problem and a theoretical problem, and it does so without introducing any major changes; then, spend time engineering a more robust templating solution.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,297,2018-08-13T06:04:01Z,2018-08-14T13:23:49Z,2018-08-14T13:23:49Z,MERGED,True,3,1,2,https://github.com/mfwitten,Fix broken ./rmlint.sh percentage-progress formatting,1,[],https://github.com/sahib/rmlint/pull/297,https://github.com/sahib,6,https://github.com/sahib/rmlint/pull/297#issuecomment-412869958,"It used to look like this:
[  0%] 0Keeping:  /tmp/o/at/blah/g
[  0%] 16Cloning to: /tmp/o/at/blah/h
[  0%] 33Keeping:  /tmp/o/at/blah/a
[  0%] 50Cloning to: /tmp/o/at/blah/c
[  0%] 66Cloning to: /tmp/o/at/blah/d
[  0%] 83Cloning to: /tmp/o/at/blah/e
[  0%] 100Done!

Now it looks like this:
[  0%] Keeping:  /tmp/o/at/blah/g
[ 16%] Cloning to: /tmp/o/at/blah/h
[ 33%] Keeping:  /tmp/o/at/blah/a
[ 50%] Cloning to: /tmp/o/at/blah/c
[ 66%] Cloning to: /tmp/o/at/blah/d
[ 83%] Cloning to: /tmp/o/at/blah/e
[100%] Done!","Unfortunately, the format string in question ('%s[%3d%%]%s ') cannot be placed directly into formats/sh.sh, because the %s is used as a placeholder for the template-filling process; it gets clobbered.

Right, that was the answer I was looking for. I even remember now having that problem, which clearly hints that the current hack really has drawbacks when I forget about the details myself.
All questions answered, thanks for your contribution.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,300,2018-09-06T23:32:40Z,2018-09-08T08:54:00Z,2018-09-22T20:49:39Z,MERGED,True,89,65,2,https://github.com/SeeSpotRun,Debug #299,5,[],https://github.com/sahib/rmlint/pull/300,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/300,Fixes possible infinite loop in fiemap utilities for detecting existing file clones; fixes #299.,Fixes possible infinite loop in fiemap utilities for detecting existing file clones; fixes #299.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,310,2018-09-24T09:14:36Z,2018-09-26T13:02:12Z,2018-09-26T13:02:12Z,MERGED,True,137,108,17,https://github.com/mfwitten,A quick clean up,4,[],https://github.com/sahib/rmlint/pull/310,https://github.com/mfwitten,1,https://github.com/sahib/rmlint/pull/310,"This series fixes some issues that are causing compiler warnings, and it also potentially avoids some run-time bugs; one subtle bug could eventually arise if all debug assertions were elided, because its argument is not just a declaration of some condition, but rather an important call with side effects.
Here's a quick summary of the patches:

SConstruct: Use `-Wno-cast-function-type' only if GCC's major version >= 8
lib/session.c: dedupe: Format strings with `G_GINT64_FORMAT'
C: Fix up asserts
C: Remove the `rm_assert_gentle*()' macros","This series fixes some issues that are causing compiler warnings, and it also potentially avoids some run-time bugs; one subtle bug could eventually arise if all debug assertions were elided, because its argument is not just a declaration of some condition, but rather an important call with side effects.
Here's a quick summary of the patches:

SConstruct: Use `-Wno-cast-function-type' only if GCC's major version >= 8
lib/session.c: dedupe: Format strings with `G_GINT64_FORMAT'
C: Fix up asserts
C: Remove the `rm_assert_gentle*()' macros",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,310,2018-09-24T09:14:36Z,2018-09-26T13:02:12Z,2018-09-26T13:02:12Z,MERGED,True,137,108,17,https://github.com/mfwitten,A quick clean up,4,[],https://github.com/sahib/rmlint/pull/310,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/310#issuecomment-424706518,"This series fixes some issues that are causing compiler warnings, and it also potentially avoids some run-time bugs; one subtle bug could eventually arise if all debug assertions were elided, because its argument is not just a declaration of some condition, but rather an important call with side effects.
Here's a quick summary of the patches:

SConstruct: Use `-Wno-cast-function-type' only if GCC's major version >= 8
lib/session.c: dedupe: Format strings with `G_GINT64_FORMAT'
C: Fix up asserts
C: Remove the `rm_assert_gentle*()' macros","Thank you, looks all good to me.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,311,2018-09-26T18:25:32Z,2018-09-27T12:56:59Z,2018-09-27T12:56:59Z,MERGED,True,68,46,8,https://github.com/mfwitten,Inline the abort functions,3,[],https://github.com/sahib/rmlint/pull/311,https://github.com/mfwitten,1,https://github.com/sahib/rmlint/pull/311,"This series cleans up and inlines the following functions:

rm_session_abort()
rm_session_was_aborted()

The warning messages produced by the latter (including the translations) have also undergone a minor cleanup with regard to punctuation and capitalization.
Also, this series introduces a portable means by which to force the compiler to inline a function.","This series cleans up and inlines the following functions:

rm_session_abort()
rm_session_was_aborted()

The warning messages produced by the latter (including the translations) have also undergone a minor cleanup with regard to punctuation and capitalization.
Also, this series introduces a portable means by which to force the compiler to inline a function.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,311,2018-09-26T18:25:32Z,2018-09-27T12:56:59Z,2018-09-27T12:56:59Z,MERGED,True,68,46,8,https://github.com/mfwitten,Inline the abort functions,3,[],https://github.com/sahib/rmlint/pull/311,https://github.com/mfwitten,2,https://github.com/sahib/rmlint/pull/311#issuecomment-424872468,"This series cleans up and inlines the following functions:

rm_session_abort()
rm_session_was_aborted()

The warning messages produced by the latter (including the translations) have also undergone a minor cleanup with regard to punctuation and capitalization.
Also, this series introduces a portable means by which to force the compiler to inline a function.","I've now shoehorned into this pull request a simplified version of check_gcc_version() from PR #310; it no longer uses tail, but rather just the preprocessor flag -P.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,311,2018-09-26T18:25:32Z,2018-09-27T12:56:59Z,2018-09-27T12:56:59Z,MERGED,True,68,46,8,https://github.com/mfwitten,Inline the abort functions,3,[],https://github.com/sahib/rmlint/pull/311,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/311#issuecomment-425080253,"This series cleans up and inlines the following functions:

rm_session_abort()
rm_session_was_aborted()

The warning messages produced by the latter (including the translations) have also undergone a minor cleanup with regard to punctuation and capitalization.
Also, this series introduces a portable means by which to force the compiler to inline a function.",Thanks. Looks also good to me.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,313,2018-09-28T00:00:11Z,2018-09-28T10:49:52Z,2018-09-28T10:49:52Z,MERGED,True,1226,744,6,https://github.com/mfwitten,Update and ease support of gettext translations,3,[],https://github.com/sahib/rmlint/pull/313,https://github.com/mfwitten,1,https://github.com/sahib/rmlint/pull/313,"This series implements the means by which gettext translation files can be updated with one command:
$ scons gettext

It also uses this new facility to update the po/*.po[t] files (however, no new translations are provided).","This series implements the means by which gettext translation files can be updated with one command:
$ scons gettext

It also uses this new facility to update the po/*.po[t] files (however, no new translations are provided).",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,313,2018-09-28T00:00:11Z,2018-09-28T10:49:52Z,2018-09-28T10:49:52Z,MERGED,True,1226,744,6,https://github.com/mfwitten,Update and ease support of gettext translations,3,[],https://github.com/sahib/rmlint/pull/313,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/313#issuecomment-425398599,"This series implements the means by which gettext translation files can be updated with one command:
$ scons gettext

It also uses this new facility to update the po/*.po[t] files (however, no new translations are provided).",Nice. Thanks for that patch once more.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,314,2018-09-28T19:52:26Z,2018-09-29T07:46:12Z,2018-09-29T07:46:12Z,CLOSED,False,77,27,9,https://github.com/mfwitten,Cleanup in treemerge (and others),6,[],https://github.com/sahib/rmlint/pull/314,https://github.com/mfwitten,1,https://github.com/sahib/rmlint/pull/314,"This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)","This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,314,2018-09-28T19:52:26Z,2018-09-29T07:46:12Z,2018-09-29T07:46:12Z,CLOSED,False,77,27,9,https://github.com/mfwitten,Cleanup in treemerge (and others),6,[],https://github.com/sahib/rmlint/pull/314,https://github.com/mfwitten,2,https://github.com/sahib/rmlint/pull/314#issuecomment-425624800,"This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)",GitHub is very confused. I'm closing this one and re-submitting; sorry if this spammed your inbox.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,315,2018-09-29T07:56:25Z,2018-10-04T10:06:09Z,2018-10-04T10:06:09Z,MERGED,True,76,31,9,https://github.com/mfwitten,Cleanup in treemerge,7,[],https://github.com/sahib/rmlint/pull/315,https://github.com/mfwitten,1,https://github.com/sahib/rmlint/pull/315,"This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)","This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,315,2018-09-29T07:56:25Z,2018-10-04T10:06:09Z,2018-10-04T10:06:09Z,MERGED,True,76,31,9,https://github.com/mfwitten,Cleanup in treemerge,7,[],https://github.com/sahib/rmlint/pull/315,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/315#issuecomment-425674050,"This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)","Looks good to me, except minor remarks about seemingly excessive typedefs.
Thanks again.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,315,2018-09-29T07:56:25Z,2018-10-04T10:06:09Z,2018-10-04T10:06:09Z,MERGED,True,76,31,9,https://github.com/mfwitten,Cleanup in treemerge,7,[],https://github.com/sahib/rmlint/pull/315,https://github.com/mfwitten,3,https://github.com/sahib/rmlint/pull/315#issuecomment-425679025,"This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)","I argued with myself over this very question, and ultimately decided the following: Though a typedef is frequently used when introducing a new type to the program, it is actually only meant to provide a very weak encapsulation of some existing type, a purpose that is useful in 3 cases:

To obviate the need to write struct or union when declaring an object. This is probably a more modern usage, especially because C++ doesn't require you to do that; of course, there is a lot of debate on this topic among C aficionados, especially when they are working on a system with constrained memory resources where it is good to be reminded that an object on the stack might be quite large.
To abstract away an underlying type, so that generic code can be written, and thereby be ported simply by changing that underlying type; it moves the issue from the preprocessor to the C compiler. I suspect this was one of the motivations for creating typedef.
To provide documentation and abstraction of a derived type whose complexity makes it too cumbersome to use C's usual recursive syntax; this is evidenced by the fact that the same typedef name can be redeclared multiple times in the same scope (like a forward declaration; the key here is that it is a name declaration, not an object or type definition). I suspect this was another one of the motivations for creating typedef, if not the main motivation.

In this case, I decided that I was using the typedef in the last way, strictly to convey to the reader a clearer understanding of what is going on; it's a fancy comment that not only allows for simpler declarations, but also allows the reader to find out exactly what a Path is supposed to be without having to go grepping through header files (""Oh. It's just a C string!"")—putting it in one centralized location would be about as useful as putting a shared comment in one centralized location; the repetition is the feature, not the mistake.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,315,2018-09-29T07:56:25Z,2018-10-04T10:06:09Z,2018-10-04T10:06:09Z,MERGED,True,76,31,9,https://github.com/mfwitten,Cleanup in treemerge,7,[],https://github.com/sahib/rmlint/pull/315,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/315#issuecomment-425953035,"This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)","Oh, I did not expect a small essay on the topic. 😄
You make a point by saying that a typedef can be used like a comment.
Still, this results in other questions to ask:

If the reader is supposed to think Oh, it's just a const char *Path, why not directly write  const char *Path? Also, looking the actual type up only needs to happen once. I don't need to be reminded in every function/file where this type is used.
If we decide to change the type, we'd have to change it in many places. While this is not the reader's problem, it's still annoying on the programmer's end.
What about consistency? Nothing else in rmlint uses this, but uses the central approach. Putting it in headers also has the advantage of being able to write more about the type with traditional comments.

Also not related to the typedef-question: It may be worthwhile of using another name than the rather generic Path. All types in rmlint are prefixed with Rm so the reader knows that it's an internal type. Maybe Path should be renamed to FtsPath in this case.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,315,2018-09-29T07:56:25Z,2018-10-04T10:06:09Z,2018-10-04T10:06:09Z,MERGED,True,76,31,9,https://github.com/mfwitten,Cleanup in treemerge,7,[],https://github.com/sahib/rmlint/pull/315,https://github.com/mfwitten,5,https://github.com/sahib/rmlint/pull/315#issuecomment-426063931,"This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)","I'm probably going to rebase this series atop another, and I might end up doing some more centralization of Path (or whatever) as part of doing so.
Until then, here are my replies (which are meant to be intellectually exploratory rather than argumentative):
Why not just write the type directly?
The issues arises when using a derived type, such as an array of arrays of char (that is, an array of pointers to char; that is, a pointer to a pointer of char). Consider the change made in commit 167562d:
-    char **path_vec = g_malloc0(sizeof(char *) * (path_count + 1));
+    typedef const char *Path;
+    Path *const path_vec = g_malloc0(sizeof(Path) * (path_count + 1));

The original line is pretty idiomatic; unless you already know what's going on, it's not quite clear at first glance what path_vec is really supposed to represent, namely a (null-terminated) array of path strings. The new code makes this purpose much more explicit, even with the added complexity of const discipline; and, once Path has been used to elucidate this complex case, it makes sense to continue using Path for the simpler cases (e.g., const Path p = path_vec[4]; instead of const char *const p = path_vec[4];).
The added clarity is perhaps more apparent here:
-    FTS *ftsp = fts_open((char *[2]){rmpath->path, NULL}, fts_flags, NULL);
+    typedef const char *Path;
+    FTS *ftsp = fts_open((const Path[2]){rmpath->path, NULL}, fts_flags, NULL);

In order to achieve the same result without typedef, one would need to write (and read!):
FTS *ftsp = fts_open((const char *const[2]){rmpath->path, NULL}, fts_flags, NULL);

That's not terribly hard to deal with, but it's definitely harder (of course, all the const qualification here is not necessary, but I like to think it helps better document what's going on. After all, once again, the program is meant to be read not only by a compiler, but also by fellow humans, which brings us to the next point.
What's wrong with just looking it up once in a centralized location?
Well, nothing is wrong with it, per se, especially when one is steeped in a particular codebase (or subset therein). However, when one doesn't have a good working knowledge of the codebase in question, it can indeed be quite laborious to resolve a question whose answer requires looking through non-local code; that's why it's nice to be able to declare a quick alias right-then-and-there.
And, that's exactly what it is: A quick alias. It's not a type unto itself, which brings us to the next point.
Isn't it better to have a centralized location for the abstraction?
The problem is that Path is a leaky abstraction; even if you did declare it in one place, you'd probably still have to go through a lot of sprawling code that acceses each such object as a good old-fashioned pointer to char, including pointer arithmetic.
If you wanted to avoid that, then you'd have to define a whole bunch of fake accessor/conversion abstractions, and for what? It's always going to be a C string; it's just that sometimes you want to relay such information as ""We're dealing with constant C strings here"" and ""These strings are meant to be interpreted as paths.""
Unless your language offers mechanisms to ease such abstractions (as in C++), it's just not worth the trouble, and if you're not going to stop the leaks (in the abstraction), then it's pretty pointless.
What about naming?
The local-declaration avoids the need to convey that Path is an internal type, and its local nature reduces the need to find some kind of consistency with the rest of the codebase. This is especially the case when it is local to a block, but also even within the file scope of a translation unit (a *.c file); for instance, consider the following function from lib/cmdline.c:
static void rm_cmd_show_version(void)  {
    ...
}

Why is that function namespaced? It should probably just be called show_version(); a non-namespaced function just means that it's internal to the translation unit.* The same logic applies to tools like Path (though, I do admit to placing it in a header file as well, mainly because it can be redeclared without trouble).
Anyway, I suppose our discussion here disproves me; my usage of typedef has been demonstrably more irritating to another reader, rather than useful.
 

* While there do exist non-internal functions that are also non-namespaced (e.g., printf), there's just not much of a chance that they will cause any serious confusion: A fellow reader might search the translation unit for a definition, and thereby quickly realize that it must be external—and such a fact really should be documented by the #include directives; I've always liked the idea that every #include should be associated with [a comment that provides] a list of identifiers that are being ""imported"".",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,315,2018-09-29T07:56:25Z,2018-10-04T10:06:09Z,2018-10-04T10:06:09Z,MERGED,True,76,31,9,https://github.com/mfwitten,Cleanup in treemerge,7,[],https://github.com/sahib/rmlint/pull/315,https://github.com/mfwitten,6,https://github.com/sahib/rmlint/pull/315#issuecomment-426876182,"This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)","In the latest push, I've simply stripped out the typedef tomfoolery.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,315,2018-09-29T07:56:25Z,2018-10-04T10:06:09Z,2018-10-04T10:06:09Z,MERGED,True,76,31,9,https://github.com/mfwitten,Cleanup in treemerge,7,[],https://github.com/sahib/rmlint/pull/315,https://github.com/sahib,7,https://github.com/sahib/rmlint/pull/315#issuecomment-426960682,"This series mainly improves rm_tm_count_files() by removing an unnecessary parameter, avoiding re-calculation, and introducing [slightly more] graceful error handling. It may be helpful to consult the commit mesage in the following commit of the series:

lib/treemerge.c: remove unnecessary parameter and recalculation of `path_count' (a5ef34b)",Thanks for changing that. Looks good to me & merged. 😄,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,317,2018-10-04T19:09:42Z,2018-10-06T09:51:20Z,2018-10-06T09:51:20Z,MERGED,True,67,5,8,https://github.com/mfwitten,Forbid `--replay' with `--dedupe' or `--is-reflink',3,[],https://github.com/sahib/rmlint/pull/317,https://github.com/mfwitten,1,https://github.com/sahib/rmlint/pull/317,"This series documents and improves the usage of RmCfg::path_count, and then fixes a related programming mistake that manifests when mixing the aforementioned options. As an aside, the gettext files are also updated.","This series documents and improves the usage of RmCfg::path_count, and then fixes a related programming mistake that manifests when mixing the aforementioned options. As an aside, the gettext files are also updated.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,317,2018-10-04T19:09:42Z,2018-10-06T09:51:20Z,2018-10-06T09:51:20Z,MERGED,True,67,5,8,https://github.com/mfwitten,Forbid `--replay' with `--dedupe' or `--is-reflink',3,[],https://github.com/sahib/rmlint/pull/317,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/317#issuecomment-427561021,"This series documents and improves the usage of RmCfg::path_count, and then fixes a related programming mistake that manifests when mixing the aforementioned options. As an aside, the gettext files are also updated.",Thanks. Looks good to me.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,318,2018-10-07T03:50:38Z,2018-10-13T22:22:29Z,2018-10-14T05:14:16Z,MERGED,True,154,93,7,https://github.com/mfwitten,"Sundry improvements of build config, optimization, and style",20,[],https://github.com/sahib/rmlint/pull/318,https://github.com/mfwitten,1,https://github.com/sahib/rmlint/pull/318,"This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline","This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,318,2018-10-07T03:50:38Z,2018-10-13T22:22:29Z,2018-10-14T05:14:16Z,MERGED,True,154,93,7,https://github.com/mfwitten,"Sundry improvements of build config, optimization, and style",20,[],https://github.com/sahib/rmlint/pull/318,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/318#issuecomment-427869118,"This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline","This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior.

Thanks and sorry for not telling you I dropped -Winline. I originally assumed you left it there by accident.
Maybe a bit background on that: A lot of users get confused when they see warnings when compiling rmlint and they think something is wrong. So naturally I try to fix them as soon as possible. -Winline has the disadvantage that those warnings do not tell anything to the user (they're only developer relevant) and might be triggered by using different compiler options (probably common to Gentoo users e.g.). What speaks for keeping -Winline in all release builds then? Developers can still enable it and I wonder if it should be rather enabled when the developers uses a special variable like DEBUG_INLINE or something. Would be happy to hear your stance about that.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,318,2018-10-07T03:50:38Z,2018-10-13T22:22:29Z,2018-10-14T05:14:16Z,MERGED,True,154,93,7,https://github.com/mfwitten,"Sundry improvements of build config, optimization, and style",20,[],https://github.com/sahib/rmlint/pull/318,https://github.com/mfwitten,3,https://github.com/sahib/rmlint/pull/318#issuecomment-428393223,"This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline","Changes


I've removed -Winline.
It's not possible to cator to both end-users and developers, and so it's better to cator to end-users; an interested developer can use one of the relevant environment variables or command-line variables (CFLAGS, or CCFLAGS, etc.) to specify -Winline.


The DEBUG=1 option no longer tells the compiler to emit debugging symbols; instead, one may use SYMBOLS=1. For convience, one may also use GDB=1 to mean DEBUG=1 SYMBOLS=1.
Of course, more customized control  is available with the usual compiler variables.


The CCFLAGS command-line variable is now parsed with shlex.split().


Now, NDEBUG is also #undefined when RM_DEBUG is defined.


Review
I've found it helpful to review the patches with the following command line:
$ git log --reverse -p --topo-order origin/develop..

Here is the new graph:
* 79ca1103 [HEAD] scons: Make dict access more ""Pythonic""
* cecdee17 scons: Tidy up `CCFLAGS'
|\  
| * 3953eb3c scons: Use `CCFLAGS' instead of `CFLAGS'
| * 992546bf scons: Allow command-line specification of last `CCFLAGS' items
|/  
* 99ca1dc1 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 9a2fb3b8 Travis CI: Build with `DEBUG=1'
| * f8509e79 scons: Introduce `GDB=1'
| * 6e4424f6 scons: Introduce `SYMBOLS=1'
| * 6c1aa2c6 scons: Make `-O2' the default optimization level
| * 2b0882a5 scons: Remove `DEFAULT_OPTIMISATION'
|/  
* 2d94d0a3 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 750957dd scons: NDEBUG <-> !RM_DEBUG
| * bb3998d1 lib/fts/fts.c: Use `g_assert()'
|/  
* ca05f1cb xxhash: Optimize and modernize allocation/deallocation
|\  
| * 41a8965b xxhash: `s/malloc/new/' and `s/free/delete/'
| * 0c75a0f8 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
|/  
* 8e76e7d5 blake2, xxhash: Tidy up inline functions
|\  
| * 2b19e1cf blake2, xxhash: Use `INLINE' directly
| * b21e7f2f blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
|/  
* 24318da8 [develop]",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,318,2018-10-07T03:50:38Z,2018-10-13T22:22:29Z,2018-10-14T05:14:16Z,MERGED,True,154,93,7,https://github.com/mfwitten,"Sundry improvements of build config, optimization, and style",20,[],https://github.com/sahib/rmlint/pull/318,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/318#issuecomment-429135611,"This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline",Beside the TravisCI discussion this PR looks good to me already. 👍,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,318,2018-10-07T03:50:38Z,2018-10-13T22:22:29Z,2018-10-14T05:14:16Z,MERGED,True,154,93,7,https://github.com/mfwitten,"Sundry improvements of build config, optimization, and style",20,[],https://github.com/sahib/rmlint/pull/318,https://github.com/mfwitten,5,https://github.com/sahib/rmlint/pull/318#issuecomment-429462635,"This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline","Here is the overall diff since the last version:
diff --git a/.travis.yml b/.travis.yml
index 336591e8..99b462b5 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -17,7 +17,7 @@ notifications:
     - thomas_d_j@yahoo.com.au
 
 script:
-    - scons VERBOSE=1 DEBUG=1
+    - scons VERBOSE=1 DEBUG=1 O=release
     - scons config
     - export RM_TS_PRINT_CMD=1
     - export RM_TS_PEDANTIC=0
diff --git a/SConstruct b/SConstruct
index 835d2284..ec41404f 100755
--- a/SConstruct
+++ b/SConstruct
@@ -715,15 +715,23 @@ if ARGUMENTS.get('GDB') == '1':
     ARGUMENTS['DEBUG'] = '1'
     ARGUMENTS['SYMBOLS'] = '1'
 
-# optimisation modes
+O_DEBUG   = 'g' # The optimisation level for a debug   build
+O_RELEASE = '2' # The optimisation level for a release build
+
+# build modes
 if ARGUMENTS.get('DEBUG') == ""1"":
     print(""Compiling in debug mode"")
     conf.env.Append(CCFLAGS=['-DRM_DEBUG', '-fno-inline'])
-    O_value = ARGUMENTS.get('O', '0')
+    O_value = ARGUMENTS.get('O', O_DEBUG)
 else:
     conf.env.Append(CCFLAGS=['-DG_DISABLE_ASSERT', '-DNDEBUG'])
     conf.env.Append(LINKFLAGS=['-s'])
-    O_value = ARGUMENTS.get('O', '2')
+    O_value = ARGUMENTS.get('O', O_RELEASE)
+
+if O_value == 'debug':
+    O_value = O_DEBUG
+elif O_value == 'release':
+    O_value = O_RELEASE
 
 cc_O_option = '-O' + O_value
 
diff --git a/docs/developers.rst b/docs/developers.rst
index 98e43454..495f4820 100644
--- a/docs/developers.rst
+++ b/docs/developers.rst
@@ -100,16 +100,70 @@ Environment Variables
 Variables
 ~~~~~~~~~
 
+:O=<level>:
+
+    Set the optimization level.
+
+    Valid levels are currently those that may be passed with the GCC/Clang
+    option ``-O``; these include ``0``, ``1``, ``2``, ``3``, ``s``,
+    ``fast``, ``g``, etc., depending on the compiler version.
+
+    In addition, the level may be ``debug`` or ``release``, which indicates
+    that the optimization level should be whatever the build system currently
+    defines to be the default for the associated build mode.
+
-:DEBUG:
-
-    Enable debugging symbols for ``rmlint``. This should always be enabled during
-    development. Backtraces wouldn't be useful elsewhise.
-
+:DEBUG=1:
+
+    Enable a debugging build.
+
+    This turns on extra tests; in particular, it turns on run-time
+    assertions. By default, a debug build excludes optimizations that may
+    hinder debugging, but this may be overridden with the ``O`` variable,
+    as usual.
+
+    Note that setting ``DEBUG=1`` does not enable the production of
+    debugger symbols; to enable those, use ``SYMBOLS=1`` or ``GDB=1``.
+
+    This should always be enabled during development.
+
+:SYMBOLS=1:
+
+    Enable debugger symbols.
+
+    This option instructs the compiler to collect information that will
+    help tools such as ``gdb`` present human-readable identifiers for
+    a program's functions and variables, etc. Note, though, that this
+    information becomes obscured by optimizations, so make sure to set
+    the optimization level appropriately.
+
+:GDB=1:
+
+    Enable options that help a debugger (such as ``gdb``).
+
+    This option is equivalent to ``DEBUG=1 SYMBOLS=1``.
+
-:VERBOSE:
+:VERBOSE=1:
 
     Print the exact compiler and linker commands. Useful for troubleshooting
     build errors.
 
+:CCFLAGS=<command line options>:
+
+    Set the last compiler options.
+
+    Internally, the build system maintains in ``CCFLAGS`` the list of
+    options that are supplied to the compiler; this list is composed by
+    combining the relevant environment variables (such as ``CFLAGS``)
+    along with the choices made by other build-time configurations.
+
+    This command-line variable makes it possible to override an option in
+    this list by supplying customized command-line options to be appended.
+    For example: ``GDB=1 CCFLAGS=-g1``.
+
+    The string that is supplied as the value for this variable is parsed as
+    per a POSIX shell command line, and so it may include shell quoting if
+    necessary.
+
 Arguments
 ~~~~~~~~~

Here is the overall graph (with some new commits expanded):
* 7a7d1356 [HEAD] scons: Make dict access more ""Pythonic""
* 49be4c59 scons: Tidy up `CCFLAGS'
|\  
| * bceecc0b scons: Use `CCFLAGS' instead of `CFLAGS'
| * e1416130 scons: Allow command-line specification of last `CCFLAGS' items
|/  
* 0e68967a scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * fcbafaf1 Travis CI: Build with `DEBUG=1 O=release'
| * 8507d66b scons: Introduce `SYMBOLS=1' and `GDB=1'
| * 98f88e5f scons: Make `-Og' the default optimization level for a debug build
| | 
| |    On 22 March 2013, `gcc` version 4.8.0 was released, with the following
| |    new optimization level:
| |    
| |        -Og
| |    
| |    The change log is located here:
| |    
| |        https://gcc.gnu.org/gcc-4.8/changes.html
| |    
| |    It explains this option as follows:
| |    
| |        A new  general optimization  level, -Og,  has been  introduced. It
| |        addresses the need  for fast compilation and  a superior debugging
| |        experience  while   providing  a  reasonable  level   of  run-time
| |        performance. Overall  experience for development should  be better
| |        than the default optimization level -O0.
| |    
| |    It's documented here for GCC version 7.3.1:
| |    
| |        info '(gcc)Debugging Options'
| |        info '(gcc)Optimize Options'
| |    
| |    It states:
| |    
| |         If you  are not  using some  other optimization  option, consider
| |         using '-Og'  (*note Optimize Options::)  with '-g'. With  no '-O'
| |         option  at all,  some  compiler passes  that collect  information
| |         useful for debugging do not run  at all, so that '-Og' may result
| |         in a better debugging experience.
| |    
| |         ...
| |    
| |        '-Og'
| |             Optimize  debugging experience.  '-Og' enables  optimizations
| |             that  do   not  interfere   with  debugging.  It   should  be
| |             the   optimization  level   of   choice   for  the   standard
| |             edit-compile-debug  cycle,  offering  a reasonable  level  of
| |             optimization while  maintaining fast  compilation and  a good
| |             debugging experience.
| |
| * d78ed3d2 scons: Make `-O2' the default optimization level for a release build
| * a8184078 scons: Abstract out optimization default for release/debug mode
| |
| |    scons: Abstract out optimization default for release/debug mode
| |    
| |    There are now 2 ""constants"":
| |    
| |        O_DEBUG
| |        O_RELEASE
| |    
| |    Each  represents the  default optimization  level that  should be
| |    used for its respective build mode,  and can be referenced on the
| |    command line:
| |    
| |        O=debug
| |        O=release
| |    
| |    Thus,  if   it  were  ever   desirable  to  change   the  default
| |    optimization level  for one of  these modes, then one  would need
| |    only alter the relevant constant.
| |
| * 2b0882a5 scons: Remove `DEFAULT_OPTIMISATION'
|/  
* 2d94d0a3 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 750957dd scons: NDEBUG <-> !RM_DEBUG
| * bb3998d1 lib/fts/fts.c: Use `g_assert()'
|/  
* ca05f1cb xxhash: Optimize and modernize allocation/deallocation
|\  
| * 41a8965b xxhash: `s/malloc/new/' and `s/free/delete/'
| * 0c75a0f8 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
|/  
* 8e76e7d5 blake2, xxhash: Tidy up inline functions
|\  
| * 2b19e1cf blake2, xxhash: Use `INLINE' directly
| * b21e7f2f blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
|/  
* 24318da8 [develop]",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,318,2018-10-07T03:50:38Z,2018-10-13T22:22:29Z,2018-10-14T05:14:16Z,MERGED,True,154,93,7,https://github.com/mfwitten,"Sundry improvements of build config, optimization, and style",20,[],https://github.com/sahib/rmlint/pull/318,https://github.com/sahib,6,https://github.com/sahib/rmlint/pull/318#issuecomment-429474543,"This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline","Looks good to me now. Thanks for the changes and I'm really amazed by the level of detail you put into your commits and responses. Good work.
Aside: Do you plan any other bigger series (besides the mentioned inlining)? I'm asking because I'm thinking of doing a release of rmlint in the next week(s), so that the bug fixes until now reaches the users. I wondered if you have anything cooking up that deserves to get in the release.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,318,2018-10-07T03:50:38Z,2018-10-13T22:22:29Z,2018-10-14T05:14:16Z,MERGED,True,154,93,7,https://github.com/mfwitten,"Sundry improvements of build config, optimization, and style",20,[],https://github.com/sahib/rmlint/pull/318,https://github.com/mfwitten,7,https://github.com/sahib/rmlint/pull/318#issuecomment-429559881,"This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline","Thank you sincerely for the compliment. Thanks for taking the time to review and integrate this work.
I have one more minor refactoring series that is ready to go, and which I plan to submit after this pull request gets merged (so that I can rebase atop this one).
I've also got a rewrite of the deduping code (including some new features), which has been simmering for a while, but still requires seasoning to taste, and I'm not prepared to say that it will be ready by any particular date; I wouldn't be surprised if it were ready in a week, but I also wouldn't be surprised if it weren't.
Would you mind waiting until next weekend to see where things stand?",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,318,2018-10-07T03:50:38Z,2018-10-13T22:22:29Z,2018-10-14T05:14:16Z,MERGED,True,154,93,7,https://github.com/mfwitten,"Sundry improvements of build config, optimization, and style",20,[],https://github.com/sahib/rmlint/pull/318,https://github.com/sahib,8,https://github.com/sahib/rmlint/pull/318#issuecomment-429580065,"This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline","I have one more minor refactoring series that is ready to go, and which I plan to submit after this pull request gets merged (so that I can rebase atop this one).

Okay, will merge this PR right after commenting. The other refactoring series sounds like a small improvement that can go into the next release.

I've also got a rewrite of the deduping code (including some new features), which has been simmering for a while, but still requires seasoning to taste, and I'm not prepared to say that it will be ready by any particular date; I wouldn't be surprised if it were ready in a week, but I also wouldn't be surprised if it weren't.

Take your time. If it contains new features it's almost always better to wait until they are finished.
It will get into the next release after. Since rmlint does not have any defined release cycle (luckily we're not forced to), releases are kind of easy for us. Also, it's better to release smaller increments, since most issue reports tend to come shortly after a release.

Would you mind waiting until next weekend to see where things stand?

I guess that won't be necessary if we do not take the new deduping into account?
My planning was to create a bugfix release mid/end of next week.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,318,2018-10-07T03:50:38Z,2018-10-13T22:22:29Z,2018-10-14T05:14:16Z,MERGED,True,154,93,7,https://github.com/mfwitten,"Sundry improvements of build config, optimization, and style",20,[],https://github.com/sahib/rmlint/pull/318,https://github.com/mfwitten,9,https://github.com/sahib/rmlint/pull/318#issuecomment-429597408,"This series re-introduces the `-Winline' compiler option, but does so in a much more tactful way, avoiding ""spammy"" behavior. In the course of implementing this series, a number of other changes were made along the way, which relate to inlining, optimization, and build parameterization.
The main gist of this series is captured in the following commits from the series:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions

Some of those are actually merge commits, whose total graph expands to this:
* bff79645 scons: Use `CCFLAGS' instead of `CFLAGS'
* 8f620409 scons, Travis CI: Set optimization/debugging levels more appropriately
|\  
| * 58487789 Travis CI: Build with `DEBUG=1 CCFLAGS=-g0'
| * a829faa7 scons: Allow command-line specification of last `CCFLAGS' items
| * 32708542 scons: Make `-O2' the default optimization level
|/  
* d38baff9 scons, config.h, fts: Tidy up debugging assertions
|\  
| * 68ab7094 scons: When not `DEBUG=1', define `NDEBUG'
| * 3ab48a01 lib/fts/fts.c: Use `g_assert()'
|/  
* 24edd3d3 xxhash: Use `g_slice_alloc()' and `g_slice_free1()'
* 719ec90b scons, blake2, xxhash: Tidy up inline functions
|\  
| * 60abd103 blake2, xxhash: Bring `BLAKE2_INLINE' and `FORCE_INLINE' in line with `INLINE'
| * d6c5ec30 scons: Set `-Winline' only when appropriate
|/  
* f241bd1b scons: remove spammy -Winline",OK. Make the release when you see fit.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,319,2018-10-16T19:15:45Z,,2020-02-02T16:14:38Z,OPEN,False,540,190,20,https://github.com/mfwitten,Clean up path processing,37,[],https://github.com/sahib/rmlint/pull/319,https://github.com/mfwitten,1,https://github.com/sahib/rmlint/pull/319,"This series entails cleanup and refactoring, which clarify the code and improve the handling of errors in user input and runtime. Here are the main commits:
4 [HEAD] lib/cmdline.c: Refactor `rm_cmd_set_paths*()'
3 lib/cfg.c -> lib/cfg-funcs.h: Refactor functions
2 Miscellaneous improvements
1 [develop]

Each of those is composed of finer-grained commits:
4 [HEAD] lib/cmdline.c: Refactor `rm_cmd_set_paths*()'
|\  
| o lib/cmdline.c: INLINE `rm_cmd_set_paths()'
| o lib/cmdline.c: Tell compiler to optimize for the value of `replay'
| o lib/cmdline.c: Replace `strcmp()' with direct character comparisons
| o lib/cmdline.c: Abstract out `rm_cmd_set_paths_from_cmdline()'
| o lib/cfg.h: Use `RmCfg::path_count' more purposefully
| o lib/cmdline.c: Move `cfg->replay' and `cfg->path_count++' out of loops
| o lib/cfg-funcs.h: Move `cfg->replay' and `cfg->path_count++'
| o lib/cmdline.c: Free each command-line path as it is processed.
| o lib/cmdline.c: Use a pointer rather than an index integer for looping
| o lib/cmdline.c: Indent code to reflect the fact that it's in a block
| o lib/cmdline.c: Move constant loop condition (`paths') out of the loop
| o lib/cmdline.c: Consolidate the logic around whether to read paths from `stdin'
| o lib/cfg.h: Remove member `read_stdin'
| o lib/cmdline.c: Add error handling to `rm_cmd_set_paths_from_stdin()'
| o lib/cmdline.c: Abstract out struct `rm_cmd_set_paths_vars'
| o lib/cmdline.c: Replace `RmSession' with `RmCfg' in `rm_cmd_set_paths*()'
| o lib/cmdline.c: Simplify size in call to `malloc()'
| o lib/cmdline.c: Move `rm_cmd_read_paths_from_stdin()'
|/  
3 lib/cfg.c -> lib/cfg-funcs.h: Refactor functions
|\  
| o lib/cfg-funcs.h: Insert `g_assert(cfg);' into `rm_cfg_set_default()'
| o lib/cfg.c -> lib/cfg-funcs.h: Make functions inlinable
| |\  
| | o lib/cfg-funcs.h: Complete `git mv lib/cfg.c lib/cfg-funcs.h'
| | o lib/cfg.c: git mv lib/cfg.c lib/cfg-funcs.h
| |/  
| o lib/cfg.*: rm_cfg_prepend_path(): swap parameters `preferred' and `path'
| o lib/cfg.*: Rename `rm_cfg_add_path' to `rm_cfg_prepend_path()'
| o lib/path.h: s/treat_as_single_vol/single_volume/ in `RmPath'
| o lib/path.h: s/idx/index/ in `RmPath'
| o lib/cfg.*: Refactor `rm_cfg_add_path()'
| o lib/cmdline.c: Test parameters of `rm_cmd_parse_replay()' with `g_assert()'
| o lib/cmdline.c: return the status of `rm_cfg_add_path()'
| o lib/cfg.*: `rm_cfg_add_path()' now returns `bool'
| o lib/cfg.*: Clean up `rm_cfg_free_paths()'
|/  
2 Miscellaneous improvements
|\  
| o lib/cmdline.c: Fix error message
| o Use explicit types for some integer constants
|/  
1 [develop]","This series entails cleanup and refactoring, which clarify the code and improve the handling of errors in user input and runtime. Here are the main commits:
4 [HEAD] lib/cmdline.c: Refactor `rm_cmd_set_paths*()'
3 lib/cfg.c -> lib/cfg-funcs.h: Refactor functions
2 Miscellaneous improvements
1 [develop]

Each of those is composed of finer-grained commits:
4 [HEAD] lib/cmdline.c: Refactor `rm_cmd_set_paths*()'
|\  
| o lib/cmdline.c: INLINE `rm_cmd_set_paths()'
| o lib/cmdline.c: Tell compiler to optimize for the value of `replay'
| o lib/cmdline.c: Replace `strcmp()' with direct character comparisons
| o lib/cmdline.c: Abstract out `rm_cmd_set_paths_from_cmdline()'
| o lib/cfg.h: Use `RmCfg::path_count' more purposefully
| o lib/cmdline.c: Move `cfg->replay' and `cfg->path_count++' out of loops
| o lib/cfg-funcs.h: Move `cfg->replay' and `cfg->path_count++'
| o lib/cmdline.c: Free each command-line path as it is processed.
| o lib/cmdline.c: Use a pointer rather than an index integer for looping
| o lib/cmdline.c: Indent code to reflect the fact that it's in a block
| o lib/cmdline.c: Move constant loop condition (`paths') out of the loop
| o lib/cmdline.c: Consolidate the logic around whether to read paths from `stdin'
| o lib/cfg.h: Remove member `read_stdin'
| o lib/cmdline.c: Add error handling to `rm_cmd_set_paths_from_stdin()'
| o lib/cmdline.c: Abstract out struct `rm_cmd_set_paths_vars'
| o lib/cmdline.c: Replace `RmSession' with `RmCfg' in `rm_cmd_set_paths*()'
| o lib/cmdline.c: Simplify size in call to `malloc()'
| o lib/cmdline.c: Move `rm_cmd_read_paths_from_stdin()'
|/  
3 lib/cfg.c -> lib/cfg-funcs.h: Refactor functions
|\  
| o lib/cfg-funcs.h: Insert `g_assert(cfg);' into `rm_cfg_set_default()'
| o lib/cfg.c -> lib/cfg-funcs.h: Make functions inlinable
| |\  
| | o lib/cfg-funcs.h: Complete `git mv lib/cfg.c lib/cfg-funcs.h'
| | o lib/cfg.c: git mv lib/cfg.c lib/cfg-funcs.h
| |/  
| o lib/cfg.*: rm_cfg_prepend_path(): swap parameters `preferred' and `path'
| o lib/cfg.*: Rename `rm_cfg_add_path' to `rm_cfg_prepend_path()'
| o lib/path.h: s/treat_as_single_vol/single_volume/ in `RmPath'
| o lib/path.h: s/idx/index/ in `RmPath'
| o lib/cfg.*: Refactor `rm_cfg_add_path()'
| o lib/cmdline.c: Test parameters of `rm_cmd_parse_replay()' with `g_assert()'
| o lib/cmdline.c: return the status of `rm_cfg_add_path()'
| o lib/cfg.*: `rm_cfg_add_path()' now returns `bool'
| o lib/cfg.*: Clean up `rm_cfg_free_paths()'
|/  
2 Miscellaneous improvements
|\  
| o lib/cmdline.c: Fix error message
| o Use explicit types for some integer constants
|/  
1 [develop]",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,319,2018-10-16T19:15:45Z,,2020-02-02T16:14:38Z,OPEN,False,540,190,20,https://github.com/mfwitten,Clean up path processing,37,[],https://github.com/sahib/rmlint/pull/319,https://github.com/mfwitten,2,https://github.com/sahib/rmlint/pull/319#issuecomment-457015732,"This series entails cleanup and refactoring, which clarify the code and improve the handling of errors in user input and runtime. Here are the main commits:
4 [HEAD] lib/cmdline.c: Refactor `rm_cmd_set_paths*()'
3 lib/cfg.c -> lib/cfg-funcs.h: Refactor functions
2 Miscellaneous improvements
1 [develop]

Each of those is composed of finer-grained commits:
4 [HEAD] lib/cmdline.c: Refactor `rm_cmd_set_paths*()'
|\  
| o lib/cmdline.c: INLINE `rm_cmd_set_paths()'
| o lib/cmdline.c: Tell compiler to optimize for the value of `replay'
| o lib/cmdline.c: Replace `strcmp()' with direct character comparisons
| o lib/cmdline.c: Abstract out `rm_cmd_set_paths_from_cmdline()'
| o lib/cfg.h: Use `RmCfg::path_count' more purposefully
| o lib/cmdline.c: Move `cfg->replay' and `cfg->path_count++' out of loops
| o lib/cfg-funcs.h: Move `cfg->replay' and `cfg->path_count++'
| o lib/cmdline.c: Free each command-line path as it is processed.
| o lib/cmdline.c: Use a pointer rather than an index integer for looping
| o lib/cmdline.c: Indent code to reflect the fact that it's in a block
| o lib/cmdline.c: Move constant loop condition (`paths') out of the loop
| o lib/cmdline.c: Consolidate the logic around whether to read paths from `stdin'
| o lib/cfg.h: Remove member `read_stdin'
| o lib/cmdline.c: Add error handling to `rm_cmd_set_paths_from_stdin()'
| o lib/cmdline.c: Abstract out struct `rm_cmd_set_paths_vars'
| o lib/cmdline.c: Replace `RmSession' with `RmCfg' in `rm_cmd_set_paths*()'
| o lib/cmdline.c: Simplify size in call to `malloc()'
| o lib/cmdline.c: Move `rm_cmd_read_paths_from_stdin()'
|/  
3 lib/cfg.c -> lib/cfg-funcs.h: Refactor functions
|\  
| o lib/cfg-funcs.h: Insert `g_assert(cfg);' into `rm_cfg_set_default()'
| o lib/cfg.c -> lib/cfg-funcs.h: Make functions inlinable
| |\  
| | o lib/cfg-funcs.h: Complete `git mv lib/cfg.c lib/cfg-funcs.h'
| | o lib/cfg.c: git mv lib/cfg.c lib/cfg-funcs.h
| |/  
| o lib/cfg.*: rm_cfg_prepend_path(): swap parameters `preferred' and `path'
| o lib/cfg.*: Rename `rm_cfg_add_path' to `rm_cfg_prepend_path()'
| o lib/path.h: s/treat_as_single_vol/single_volume/ in `RmPath'
| o lib/path.h: s/idx/index/ in `RmPath'
| o lib/cfg.*: Refactor `rm_cfg_add_path()'
| o lib/cmdline.c: Test parameters of `rm_cmd_parse_replay()' with `g_assert()'
| o lib/cmdline.c: return the status of `rm_cfg_add_path()'
| o lib/cfg.*: `rm_cfg_add_path()' now returns `bool'
| o lib/cfg.*: Clean up `rm_cfg_free_paths()'
|/  
2 Miscellaneous improvements
|\  
| o lib/cmdline.c: Fix error message
| o Use explicit types for some integer constants
|/  
1 [develop]","The original patch series has essentially been updated as per the following diff:
diff --git a/lib/cfg-funcs.h b/lib/cfg-funcs.h
index 9b218c31..c2e4f000 100644
--- a/lib/cfg-funcs.h
+++ b/lib/cfg-funcs.h
@@ -121,8 +121,10 @@ bool rm_cfg_prepend_json(
             real_path,
             cfg->path_count++,
             false /* not preferred */
-        ); return true;
-    } return false;
+        );
+        return true;
+    }
+    return false;
 }
 
 #define PREPEND_TO(list)    \
@@ -149,8 +151,10 @@ bool rm_cfg_prepend_path(
         } else {
             PREPEND_TO(cfg->paths);
             ++(cfg->path_count);
-        } return true;
-    } return false;
+        }
+        return true;
+    }
+    return false;
 }
 
 #undef PREPEND_TO
@@ -159,9 +163,9 @@ static INLINE
 void rm_cfg_free_paths(RmCfg *const cfg) {
     g_assert(cfg);
     g_slist_free_full(cfg->paths, (GDestroyNotify)rm_path_free);
-    cfg->paths = 0;
+    cfg->paths = NULL;
     g_slist_free_full(cfg->json_paths, (GDestroyNotify)rm_path_free);
-    cfg->json_paths = 0;
+    cfg->json_paths = NULL;
 }
 
 #endif /* end of include guard */
diff --git a/lib/cmdline.c b/lib/cmdline.c
index 56d07a8e..a3ab75f9 100644
--- a/lib/cmdline.c
+++ b/lib/cmdline.c
@@ -1074,12 +1074,25 @@ static gboolean rm_cmd_parse_rankby(_UNUSED const char *option_name,
 
 static gboolean rm_cmd_parse_replay(_UNUSED const char *option_name,
                                     const gchar *path, RmSession *session,
-                                    _UNUSED GError **error) {
+                                    GError **error) {
     g_assert(session);
     g_assert(session->cfg);
     session->cfg->replay = true;
     session->cfg->cache_file_structs = true;
-    return rm_cfg_prepend_json(session->cfg, path);
+
+    if(rm_cfg_prepend_json(session->cfg, path)) {
+        return true;
+    }
+
+    g_assert(error);
+    g_assert(*error == NULL);
+
+    g_set_error(
+        error, RM_ERROR_QUARK, 0,
+        _(""Failed to include this replay file: %s""), path
+    );
+
+    return false;
 }
 
 static gboolean rm_cmd_parse_equal(_UNUSED const char *option_name,
@@ -1145,7 +1158,7 @@ static bool rm_cmd_set_cmdline(RmCfg *cfg, int argc, char **argv) {
     return true;
 }
 
-typedef struct rm_cmd_set_paths_vars {
+typedef struct RmCmdSetPathVars {
     RmCfg *const cfg;
     char **const paths;
     unsigned int index;
@@ -1154,23 +1167,21 @@ typedef struct rm_cmd_set_paths_vars {
     bool stdin_paths_preferred;
     const bool null_separated;
     bool all_paths_valid;
-} rm_cmd_set_paths_vars;
+} RmCmdSetPathVars;
 
 static INLINE
 void rm_cmd_set_paths_from_cmdline(
-    rm_cmd_set_paths_vars *const v,
+    RmCmdSetPathVars *const v,
     const bool replay
 ) {
     g_assert(v);
     g_assert(v->paths);
 
     for(char *path, **list = v->paths; (path = *list); ++list) {
-        if(path[0] == '-' && path[1] == 0) {
+        if(/* path is ""-"" */ path[0] == '-' && path[1] == 0) {
             v->read_stdin = true;
-            /* remember whether to treat stdin paths as preferred paths */
             v->stdin_paths_preferred = v->is_prefd;
-        } else if(path[0] == '/' && path[1] == '/' && path[2] == 0) {
-            /* the '//' separator separates non-preferred paths from preferred */
+        } else if(/* path is ""//"" */ path[0] == '/' && path[1] == '/' && path[2] == 0) {
             v->is_prefd = !v->is_prefd;
         } else {
             v->all_paths_valid &= rm_cfg_prepend_path(
@@ -1184,7 +1195,7 @@ void rm_cmd_set_paths_from_cmdline(
 
 static INLINE
 bool rm_cmd_set_paths_from_stdin(
-    rm_cmd_set_paths_vars *const v,
+    RmCmdSetPathVars *const v,
     const bool replay
 ) {
     g_assert(v);
@@ -1195,8 +1206,8 @@ bool rm_cmd_set_paths_from_stdin(
 
     char delim = v->null_separated ? 0 : '\n';
 
-    size_t buf_len;
-    char *path_buf = malloc(buf_len = PATH_MAX);
+    size_t buf_len = PATH_MAX;
+    char *path_buf = malloc(buf_len);
     if(!path_buf) {
         rm_log_perror(_(""Failed to allocate memory""));
         return false;
@@ -1243,7 +1254,7 @@ bool rm_cmd_set_paths(RmCfg *const cfg, char **const paths) {
 
     const bool replay = cfg->replay;
     const bool read_stdin0 = cfg->read_stdin0;
-    rm_cmd_set_paths_vars v = {
+    RmCmdSetPathVars v = {
         .cfg = cfg,
         .paths = paths,
         .index = cfg->path_count,
diff --git a/lib/path-funcs.h b/lib/path-funcs.h
index 5599387b..1f46ac0b 100644
--- a/lib/path-funcs.h
+++ b/lib/path-funcs.h
@@ -39,7 +39,7 @@
 #endif
 
 #include ""path.h""       // RmPath
-#include ""config.h""     // _, rm_log_warning_line, rm_log_perrorf
+#include ""config.h""     // _, rm_log_warning_line
 
 static INLINE
 void rm_path_free(RmPath *const p) {
@@ -63,7 +63,9 @@ bool rm_path_is_real(
     rm_log_warning_line(
         _(""Can't get real path for directory or file \""%s\"": %s""),
         path, strerror(errno)
-    ); return false;
+    );
+
+    return false;
 }
 
 #if HAVE_FACCESSAT
@@ -79,8 +81,10 @@ bool rm_path_is_accessible(const char *const path) {
         rm_log_warning_line(
             _(""Can't open directory or file \""%s\"": %s""),
             path, strerror(errno)
-        ); return false;
-    } return true;
+        );
+        return false;
+    }
+    return true;
 }
 
 #undef NOT_ACCESSIBLE
@@ -109,8 +113,10 @@ bool rm_path_is_file(const char *const path) {
         rm_log_warning_line(
             _(""Could not get metadata for path \""%s\"": %s""),
             path, strerror(errno)
-        ); return false;
-    } return S_ISREG(s.st_mode);
+        );
+        return false;
+    }
+    return S_ISREG(s.st_mode);
 }
 
 static INLINE
diff --git a/po/de.po b/po/de.po
index feb59eb5..e4d23497 100644
--- a/po/de.po
+++ b/po/de.po
@@ -7,7 +7,7 @@ msgid """"
 msgstr """"
 ""Project-Id-Version: rmlint 2.0.0\n""
 ""Report-Msgid-Bugs-To: \n""
-""POT-Creation-Date: 2018-10-15 04:46+0000\n""
+""POT-Creation-Date: 2019-01-21 21:40+0000\n""
 ""PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n""
 ""Last-Translator: FULL NAME <EMAIL@ADDRESS>\n""
 ""Language-Team: LANGUAGE <LL@li.org>\n""
@@ -1028,6 +1028,11 @@ msgstr """"
 msgid ""No stamp file at `%s`, will create one after this run.""
 msgstr """"
 
+#: lib/cmdline.c
+#, c-format
+msgid ""Failed to include this replay file: %s""
+msgstr """"
+
 #: lib/path-funcs.h
 #, c-format
 msgid ""Invalid path \""%s\""""
diff --git a/po/es.po b/po/es.po
index d0a4c46e..fd81c42d 100644
--- a/po/es.po
+++ b/po/es.po
@@ -8,7 +8,7 @@ msgid """"
 msgstr """"
 ""Project-Id-Version: rmlint 2.4.0\n""
 ""Report-Msgid-Bugs-To: \n""
-""POT-Creation-Date: 2018-10-15 04:46+0000\n""
+""POT-Creation-Date: 2019-01-21 21:40+0000\n""
 ""PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n""
 ""Last-Translator: FULL NAME <EMAIL@ADDRESS>\n""
 ""Language-Team: LANGUAGE <LL@li.org>\n""
@@ -1005,6 +1005,11 @@ msgstr """"
 msgid ""No stamp file at `%s`, will create one after this run.""
 msgstr """"
 
+#: lib/cmdline.c
+#, c-format
+msgid ""Failed to include this replay file: %s""
+msgstr """"
+
 #: lib/path-funcs.h
 #, c-format
 msgid ""Invalid path \""%s\""""
diff --git a/po/fr.po b/po/fr.po
index 2b2c58c1..ea5b2db4 100644
--- a/po/fr.po
+++ b/po/fr.po
@@ -7,7 +7,7 @@ msgid """"
 msgstr """"
 ""Project-Id-Version: rmlint 2.0.0\n""
 ""Report-Msgid-Bugs-To: \n""
-""POT-Creation-Date: 2018-10-15 04:46+0000\n""
+""POT-Creation-Date: 2019-01-21 21:40+0000\n""
 ""PO-Revision-Date: 2014-12-02 13:37+0100\n""
 ""Last-Translator: F. <contact@f.0x2501.org>\n""
 ""Language-Team: none\n""
@@ -1001,6 +1001,11 @@ msgstr """"
 msgid ""No stamp file at `%s`, will create one after this run.""
 msgstr """"
 
+#: lib/cmdline.c
+#, c-format
+msgid ""Failed to include this replay file: %s""
+msgstr """"
+
 #: lib/path-funcs.h
 #, c-format
 msgid ""Invalid path \""%s\""""
diff --git a/po/rmlint.pot b/po/rmlint.pot
index 94b92658..348f86fa 100644
--- a/po/rmlint.pot
+++ b/po/rmlint.pot
@@ -8,7 +8,7 @@ msgid """"
 msgstr """"
 ""Project-Id-Version: rmlint 2.7.0\n""
 ""Report-Msgid-Bugs-To: \n""
-""POT-Creation-Date: 2018-10-15 04:46+0000\n""
+""POT-Creation-Date: 2019-01-21 21:40+0000\n""
 ""PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n""
 ""Last-Translator: FULL NAME <EMAIL@ADDRESS>\n""
 ""Language-Team: LANGUAGE <LL@li.org>\n""
@@ -950,6 +950,11 @@ msgstr """"
 msgid ""No stamp file at `%s`, will create one after this run.""
 msgstr """"
 
+#: lib/cmdline.c
+#, c-format
+msgid ""Failed to include this replay file: %s""
+msgstr """"
+
 #: lib/path-funcs.h
 #, c-format
 msgid ""Invalid path \""%s\""""",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,327,2018-12-31T08:33:54Z,2018-12-31T11:28:06Z,2019-01-10T00:28:13Z,MERGED,True,13,13,3,https://github.com/e7appew,Fix typos in documentation.,1,[],https://github.com/sahib/rmlint/pull/327,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/327,Detected by lintian and mwic.,Detected by lintian and mwic.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,327,2018-12-31T08:33:54Z,2018-12-31T11:28:06Z,2019-01-10T00:28:13Z,MERGED,True,13,13,3,https://github.com/e7appew,Fix typos in documentation.,1,[],https://github.com/sahib/rmlint/pull/327,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/327#issuecomment-450635308,Detected by lintian and mwic.,Thank you! Very convinient. (😛),True,{}
sahib/rmlint,https://github.com/sahib/rmlint,331,2019-01-10T00:29:04Z,2019-01-10T01:01:38Z,2019-01-10T02:27:22Z,MERGED,True,13,4,1,https://github.com/e7appew,Fix nosetests search.,1,[],https://github.com/sahib/rmlint/pull/331,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/331,"Avoid confusing error message about nosetests not being found when
there is a test failure.","Avoid confusing error message about nosetests not being found when
there is a test failure.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,331,2019-01-10T00:29:04Z,2019-01-10T01:01:38Z,2019-01-10T02:27:22Z,MERGED,True,13,4,1,https://github.com/e7appew,Fix nosetests search.,1,[],https://github.com/sahib/rmlint/pull/331,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/331#issuecomment-452930867,"Avoid confusing error message about nosetests not being found when
there is a test failure.",Thanks @e7appew.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,332,2019-01-11T11:42:15Z,2019-01-12T21:58:15Z,2019-01-13T03:46:34Z,MERGED,True,3,2,2,https://github.com/e7appew,Fix support for pre-SSE4.2 CPUs.,1,[],https://github.com/sahib/rmlint/pull/332,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/332,"When compiled with -msse4.2 optimisation applied across the board,
'rmlint -g' terminates with the SIGILL signal on pre-SSE4.2 platforms.
It seems like GCC 8.2.0 optimises the floor function/macro call from
lib/formats/progressbar.c with illegal instructions. With Clang, even
more such optimisations occur.
Use function attributes to enable SSE4.2 feature only where required,
so that both types of CPU are fully supported.","When compiled with -msse4.2 optimisation applied across the board,
'rmlint -g' terminates with the SIGILL signal on pre-SSE4.2 platforms.
It seems like GCC 8.2.0 optimises the floor function/macro call from
lib/formats/progressbar.c with illegal instructions. With Clang, even
more such optimisations occur.
Use function attributes to enable SSE4.2 feature only where required,
so that both types of CPU are fully supported.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,332,2019-01-11T11:42:15Z,2019-01-12T21:58:15Z,2019-01-13T03:46:34Z,MERGED,True,3,2,2,https://github.com/e7appew,Fix support for pre-SSE4.2 CPUs.,1,[],https://github.com/sahib/rmlint/pull/332,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/332#issuecomment-453784037,"When compiled with -msse4.2 optimisation applied across the board,
'rmlint -g' terminates with the SIGILL signal on pre-SSE4.2 platforms.
It seems like GCC 8.2.0 optimises the floor function/macro call from
lib/formats/progressbar.c with illegal instructions. With Clang, even
more such optimisations occur.
Use function attributes to enable SSE4.2 feature only where required,
so that both types of CPU are fully supported.","Thank you @e7appew.

When compiled with -msse4.2 optimisation applied across the board,
'rmlint -g' terminates with the SIGILL signal on pre-SSE4.2 platforms.

Ah, crap. I remember having that issue already on Arch, where the packager had a SSE4.2 capable machine, but most users did not. Glad that you fixed it.

Use function attributes to enable SSE4.2 feature only where required,
so that both types of CPU are fully supported.

I was not aware of that compiler feature. Thanks again.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,350,2019-02-07T07:41:22Z,2019-02-07T11:03:39Z,2019-02-07T11:33:51Z,MERGED,True,18,18,1,https://github.com/bzg,Fix and add a few FR translations,1,[],https://github.com/sahib/rmlint/pull/350,https://github.com/bzg,1,https://github.com/sahib/rmlint/pull/350,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,350,2019-02-07T07:41:22Z,2019-02-07T11:03:39Z,2019-02-07T11:33:51Z,MERGED,True,18,18,1,https://github.com/bzg,Fix and add a few FR translations,1,[],https://github.com/sahib/rmlint/pull/350,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/350#issuecomment-461375909,,Thanks a lot! Merci beaucoup!,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,350,2019-02-07T07:41:22Z,2019-02-07T11:03:39Z,2019-02-07T11:33:51Z,MERGED,True,18,18,1,https://github.com/bzg,Fix and add a few FR translations,1,[],https://github.com/sahib/rmlint/pull/350,https://github.com/bzg,3,https://github.com/sahib/rmlint/pull/350#issuecomment-461383779,,Thanks to you! rmlint is great.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,357,2019-04-20T15:19:19Z,2019-04-20T18:57:46Z,2020-12-04T18:57:51Z,MERGED,True,1,1,1,https://github.com/speed47,sh: fix typo,1,[],https://github.com/sahib/rmlint/pull/357,https://github.com/speed47,1,https://github.com/sahib/rmlint/pull/357,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,357,2019-04-20T15:19:19Z,2019-04-20T18:57:46Z,2020-12-04T18:57:51Z,MERGED,True,1,1,1,https://github.com/speed47,sh: fix typo,1,[],https://github.com/sahib/rmlint/pull/357,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/357#issuecomment-485151206,,"Thanks @speed47, merged.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,358,2019-04-20T17:22:17Z,2019-04-20T19:12:00Z,2019-04-20T23:31:02Z,MERGED,True,11,8,1,https://github.com/reedriley,Teach rmlint to detect reflinks with > 2GB files,2,[],https://github.com/sahib/rmlint/pull/358,https://github.com/reedriley,1,https://github.com/sahib/rmlint/pull/358,"The rm_offset_get_fiemap function took a 32-bit signed integer describing the file offset; but the kernel data structure is defined as a 64-bit unsigned integer.  This caused rmlint to fail to read the fiemap for files larger than 2 GB.
In the process of debugging and fixing the issue; I ran into some compilation bugs in the _RM_OFFSET_DEBUG logging, so I fixed those while I was at it.","The rm_offset_get_fiemap function took a 32-bit signed integer describing the file offset; but the kernel data structure is defined as a 64-bit unsigned integer.  This caused rmlint to fail to read the fiemap for files larger than 2 GB.
In the process of debugging and fixing the issue; I ran into some compilation bugs in the _RM_OFFSET_DEBUG logging, so I fixed those while I was at it.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,358,2019-04-20T17:22:17Z,2019-04-20T19:12:00Z,2019-04-20T23:31:02Z,MERGED,True,11,8,1,https://github.com/reedriley,Teach rmlint to detect reflinks with > 2GB files,2,[],https://github.com/sahib/rmlint/pull/358,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/358#issuecomment-485152560,"The rm_offset_get_fiemap function took a 32-bit signed integer describing the file offset; but the kernel data structure is defined as a 64-bit unsigned integer.  This caused rmlint to fail to read the fiemap for files larger than 2 GB.
In the process of debugging and fixing the issue; I ran into some compilation bugs in the _RM_OFFSET_DEBUG logging, so I fixed those while I was at it.",Thank you. Just tested it and it seems to work. 👍,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,359,2019-04-27T18:19:26Z,2019-05-19T20:28:22Z,2019-05-19T20:28:22Z,MERGED,True,5,5,5,https://github.com/Calinou,Fix typo in command-line help,1,[],https://github.com/sahib/rmlint/pull/359,https://github.com/Calinou,1,https://github.com/sahib/rmlint/pull/359,"Other places in the documentation seem to use ""mountpoint"" instead of ""mount point"", so I left it as a single word.","Other places in the documentation seem to use ""mountpoint"" instead of ""mount point"", so I left it as a single word.",True,{'THUMBS_UP': ['https://github.com/sahib']}
sahib/rmlint,https://github.com/sahib/rmlint,376,2019-08-22T13:07:37Z,2019-08-22T14:40:04Z,2019-08-22T14:40:04Z,MERGED,True,1,1,1,https://github.com/gwood,"Tutorial: Correct option, dup files same basename",1,[],https://github.com/sahib/rmlint/pull/376,https://github.com/gwood,1,https://github.com/sahib/rmlint/pull/376,"Was -e, now -i in bash example code in the tutorial.","Was -e, now -i in bash example code in the tutorial.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,376,2019-08-22T13:07:37Z,2019-08-22T14:40:04Z,2019-08-22T14:40:04Z,MERGED,True,1,1,1,https://github.com/gwood,"Tutorial: Correct option, dup files same basename",1,[],https://github.com/sahib/rmlint/pull/376,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/376#issuecomment-523935213,"Was -e, now -i in bash example code in the tutorial.",Thanks!,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,380,2019-09-09T23:49:08Z,2019-09-21T17:04:23Z,2021-04-22T22:11:09Z,CLOSED,False,1,1,1,https://github.com/reedriley,fix logic inversion in xattr read/write code,1,[],https://github.com/sahib/rmlint/pull/380,https://github.com/reedriley,1,https://github.com/sahib/rmlint/pull/380,"Fixes #347.
On debugging, the root cause appeared to be a simple logic inversion in some of the mtime logic.","Fixes #347.
On debugging, the root cause appeared to be a simple logic inversion in some of the mtime logic.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,380,2019-09-09T23:49:08Z,2019-09-21T17:04:23Z,2021-04-22T22:11:09Z,CLOSED,False,1,1,1,https://github.com/reedriley,fix logic inversion in xattr read/write code,1,[],https://github.com/sahib/rmlint/pull/380,https://github.com/reedriley,2,https://github.com/sahib/rmlint/pull/380#issuecomment-529714539,"Fixes #347.
On debugging, the root cause appeared to be a simple logic inversion in some of the mtime logic.","Also, from looking at the xattrs written by rmlint; I have some very serious concerns about whether the --write-unfinished option is actually safe to use?
The checksums reported by getfattr -d after running with that option enabled (and being interrupted) are different than running without the option, and different than running the checksum against the file manually.
I suspect the option as implemented could lead to silent data corruption for interrupted runs where duplicates share a common prefix.  (e.g., 1GB of zero bytes; and an identical file differing in only the last byte - if run with that option, interrupted and then resumed.)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,380,2019-09-09T23:49:08Z,2019-09-21T17:04:23Z,2021-04-22T22:11:09Z,CLOSED,False,1,1,1,https://github.com/reedriley,fix logic inversion in xattr read/write code,1,[],https://github.com/sahib/rmlint/pull/380,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/380#issuecomment-533813955,"Fixes #347.
On debugging, the root cause appeared to be a simple logic inversion in some of the mtime logic.","Hello @reedriley, sorry for the late response. I'm a bit busy since a few weeks...
I added your fix in this commit: bbc896f - there were a few other issues regarding mtime precision that led to issues as @xxargs suggested.

Also, from looking at the xattrs written by rmlint; I have some very serious concerns about whether the --write-unfinished option is actually safe to use?
The checksums reported by getfattr -d after running with that option enabled (and being interrupted) are different than running without the option, and different than running the checksum against the file manually.

I did a quick test and failed to reproduce this behavior. My test roughly did this:
$ rmlint ~/xxx/ --xattr
$ getfattr ~/xxx/* | grep cksum
# file: home/sahib/xxx/a
user.rmlint.blake2b.cksum=""0ac7a4a00ad54e53bb5ba1b5997b74d18694bc22e1d909c07b227cb2f29ea40cc391af155f7795b0f1bcc96481d6946dcdf9c66229a3e6cb1d1c63370dcd2235""
# file: home/sahib/xxx/b
user.rmlint.blake2b.cksum=""0ac7a4a00ad54e53bb5ba1b5997b74d18694bc22e1d909c07b227cb2f29ea40cc391af155f7795b0f1bcc96481d6946dcdf9c66229a3e6cb1d1c63370dcd2235""
# file: home/sahib/xxx/c
user.rmlint.blake2b.cksum=""493f920a9e1b0ff9c4b42cea30e356c4f13aca53082dc64dc40a214dae0673e796680af7d418b96a233b970d45e1acc19d7892b217b573e34ff68ed5084b2f64""
$ rmlint ~/xxx/ --xattr-read --xattr-write # no --write-unfinished.
$ getfattr ~/xxx/* | grep cksum
# file: home/sahib/xxx/a
user.rmlint.blake2b.cksum=""0ac7a4a00ad54e53bb5ba1b5997b74d18694bc22e1d909c07b227cb2f29ea40cc391af155f7795b0f1bcc96481d6946dcdf9c66229a3e6cb1d1c63370dcd2235""
# file: home/sahib/xxx/b
user.rmlint.blake2b.cksum=""0ac7a4a00ad54e53bb5ba1b5997b74d18694bc22e1d909c07b227cb2f29ea40cc391af155f7795b0f1bcc96481d6946dcdf9c66229a3e6cb1d1c63370dcd2235""
# file: home/sahib/xxx/c
user.rmlint.blake2b.cksum=""493f920a9e1b0ff9c4b42cea30e356c4f13aca53082dc64dc40a214dae0673e796680af7d418b96a233b970d45e1acc19d7892b217b573e34ff68ed5084b2f64""

Can you maybe elaborate a bit more on what you've seen?
Also, what do you mean by ""running the checksum against the file manually""? Using an external tool like sha1sum? There is no guarantee that those are the same as what rmlint produces.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,380,2019-09-09T23:49:08Z,2019-09-21T17:04:23Z,2021-04-22T22:11:09Z,CLOSED,False,1,1,1,https://github.com/reedriley,fix logic inversion in xattr read/write code,1,[],https://github.com/sahib/rmlint/pull/380,https://github.com/SeeSpotRun,4,https://github.com/sahib/rmlint/pull/380#issuecomment-825216576,"Fixes #347.
On debugging, the root cause appeared to be a simple logic inversion in some of the mtime logic.","@reedriley

I have some very serious concerns about whether the --write-unfinished option is actually safe to use?

This is being deprecated in favour of --hash-unmatched and --hash-uniques, see #479",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,387,2019-11-30T21:17:01Z,2019-11-30T22:44:08Z,2019-11-30T22:44:13Z,MERGED,True,4,0,1,https://github.com/pianojockl,added another check for HAVE_XATTR in xattr.c,1,[],https://github.com/sahib/rmlint/pull/387,https://github.com/pianojockl,1,https://github.com/sahib/rmlint/pull/387,"without this check for HAVE_XATTR, build fails for systems that don't have sys/xattr.h
I'm working on a nice FreeBSD port and stumbled upon this.","without this check for HAVE_XATTR, build fails for systems that don't have sys/xattr.h
I'm working on a nice FreeBSD port and stumbled upon this.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,387,2019-11-30T21:17:01Z,2019-11-30T22:44:08Z,2019-11-30T22:44:13Z,MERGED,True,4,0,1,https://github.com/pianojockl,added another check for HAVE_XATTR in xattr.c,1,[],https://github.com/sahib/rmlint/pull/387,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/387#issuecomment-560027224,"without this check for HAVE_XATTR, build fails for systems that don't have sys/xattr.h
I'm working on a nice FreeBSD port and stumbled upon this.",Thanks @pianojockl.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,390,2019-12-31T01:32:03Z,2019-12-31T08:36:39Z,2019-12-31T08:36:39Z,MERGED,True,16,13,8,https://github.com/e7appew,Python fixes,2,[],https://github.com/sahib/rmlint/pull/390,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/390,Mainly to silence syntax warnings in Python 3.8.,Mainly to silence syntax warnings in Python 3.8.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,391,2019-12-31T01:35:27Z,2019-12-31T08:40:06Z,2019-12-31T08:48:06Z,CLOSED,False,38,8,5,https://github.com/e7appew,Remove use of GLib API calls deprecated since version 2.62.,1,[],https://github.com/sahib/rmlint/pull/391,https://github.com/e7appew,1,https://github.com/sahib/rmlint/pull/391,"Replace deprecated GTimeVal with GDateTime equivalent API calls.
Only if you no longer need to support versions of GLib older than this.","Replace deprecated GTimeVal with GDateTime equivalent API calls.
Only if you no longer need to support versions of GLib older than this.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,391,2019-12-31T01:35:27Z,2019-12-31T08:40:06Z,2019-12-31T08:48:06Z,CLOSED,False,38,8,5,https://github.com/e7appew,Remove use of GLib API calls deprecated since version 2.62.,1,[],https://github.com/sahib/rmlint/pull/391,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/391#issuecomment-569889295,"Replace deprecated GTimeVal with GDateTime equivalent API calls.
Only if you no longer need to support versions of GLib older than this.","This already has been fixed in the develop branch (in 4938501, d3f66ae and 94049c3)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,391,2019-12-31T01:35:27Z,2019-12-31T08:40:06Z,2019-12-31T08:48:06Z,CLOSED,False,38,8,5,https://github.com/e7appew,Remove use of GLib API calls deprecated since version 2.62.,1,[],https://github.com/sahib/rmlint/pull/391,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/391#issuecomment-569889462,"Replace deprecated GTimeVal with GDateTime equivalent API calls.
Only if you no longer need to support versions of GLib older than this.","Also, the fixes there still support older versions. At least TravisCI requires us to do so (for now), but there are also still plenty people that use ancient software.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,391,2019-12-31T01:35:27Z,2019-12-31T08:40:06Z,2019-12-31T08:48:06Z,CLOSED,False,38,8,5,https://github.com/e7appew,Remove use of GLib API calls deprecated since version 2.62.,1,[],https://github.com/sahib/rmlint/pull/391,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/391#issuecomment-569890463,"Replace deprecated GTimeVal with GDateTime equivalent API calls.
Only if you no longer need to support versions of GLib older than this.",Still thank you for the PR!,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,392,2020-01-01T01:47:34Z,2020-04-05T07:26:43Z,2020-04-06T15:45:20Z,MERGED,True,18,13,2,https://github.com/rpdelaney,Shellcheck cleanup,4,[],https://github.com/sahib/rmlint/pull/392,https://github.com/rpdelaney,1,https://github.com/sahib/rmlint/pull/392,"This fixes shellcheck linter errors and fixes a problem with how iconv is being invoked, which was referenced in the comments.
shellcheck's SC2094 explains the problem with the code as it was.","This fixes shellcheck linter errors and fixes a problem with how iconv is being invoked, which was referenced in the comments.
shellcheck's SC2094 explains the problem with the code as it was.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,392,2020-01-01T01:47:34Z,2020-04-05T07:26:43Z,2020-04-06T15:45:20Z,MERGED,True,18,13,2,https://github.com/rpdelaney,Shellcheck cleanup,4,[],https://github.com/sahib/rmlint/pull/392,https://github.com/rpdelaney,2,https://github.com/sahib/rmlint/pull/392#issuecomment-570013541,"This fixes shellcheck linter errors and fixes a problem with how iconv is being invoked, which was referenced in the comments.
shellcheck's SC2094 explains the problem with the code as it was.","Looking at this again, I think the change from ${FILES} to ""${FILES}"" will likely break this in a different way. To avoid problems with whitespace, globs and so on, an entirely different approach is necessary. I will fix that up tomorrow.
Happy new year :)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,392,2020-01-01T01:47:34Z,2020-04-05T07:26:43Z,2020-04-06T15:45:20Z,MERGED,True,18,13,2,https://github.com/rpdelaney,Shellcheck cleanup,4,[],https://github.com/sahib/rmlint/pull/392,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/392#issuecomment-570047050,"This fixes shellcheck linter errors and fixes a problem with how iconv is being invoked, which was referenced in the comments.
shellcheck's SC2094 explains the problem with the code as it was.","Hi @rpdelaney,
thanks for your contribution. I left a few comments with concerns.
Happy new year to you too!",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,392,2020-01-01T01:47:34Z,2020-04-05T07:26:43Z,2020-04-06T15:45:20Z,MERGED,True,18,13,2,https://github.com/rpdelaney,Shellcheck cleanup,4,[],https://github.com/sahib/rmlint/pull/392,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/392#issuecomment-609372103,"This fixes shellcheck linter errors and fixes a problem with how iconv is being invoked, which was referenced in the comments.
shellcheck's SC2094 explains the problem with the code as it was.",Merged this PR - the actual issue of the directory quoting is more urgent to fix than the small issue we still had open in .format.sh. Thanks @rpdelaney.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,392,2020-01-01T01:47:34Z,2020-04-05T07:26:43Z,2020-04-06T15:45:20Z,MERGED,True,18,13,2,https://github.com/rpdelaney,Shellcheck cleanup,4,[],https://github.com/sahib/rmlint/pull/392,https://github.com/rpdelaney,5,https://github.com/sahib/rmlint/pull/392#issuecomment-609874457,"This fixes shellcheck linter errors and fixes a problem with how iconv is being invoked, which was referenced in the comments.
shellcheck's SC2094 explains the problem with the code as it was.","Hey, sorry for letting this get so stale. I'll leave the issue bookmarked and hopefully come back to it. It's a neat tool and I'm still using it, so it's in the back of my mind if not on top of it :-) Thank you",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,401,2020-02-29T14:48:12Z,2020-03-01T21:36:28Z,2020-03-01T21:36:47Z,CLOSED,False,632,178,28,https://github.com/jazz-it,Rephrasing the docs,37,[],https://github.com/sahib/rmlint/pull/401,https://github.com/jazz-it,1,https://github.com/sahib/rmlint/pull/401,I've noticed there could be a better way to explain slightly complicated snippets in docs related to user-defined regular expressions. I just tried to explain the snippets from a perspective of an end-user. I hope it's aligned with a previous description? I find it more intuitive this way.,I've noticed there could be a better way to explain slightly complicated snippets in docs related to user-defined regular expressions. I just tried to explain the snippets from a perspective of an end-user. I hope it's aligned with a previous description? I find it more intuitive this way.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,401,2020-02-29T14:48:12Z,2020-03-01T21:36:28Z,2020-03-01T21:36:47Z,CLOSED,False,632,178,28,https://github.com/jazz-it,Rephrasing the docs,37,[],https://github.com/sahib/rmlint/pull/401,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/401#issuecomment-592981834,I've noticed there could be a better way to explain slightly complicated snippets in docs related to user-defined regular expressions. I just tried to explain the snippets from a perspective of an end-user. I hope it's aligned with a previous description? I find it more intuitive this way.,"Thanks @madjoe. The changes look fine, but please use the develop branch as target for the pull request.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,401,2020-02-29T14:48:12Z,2020-03-01T21:36:28Z,2020-03-01T21:36:47Z,CLOSED,False,632,178,28,https://github.com/jazz-it,Rephrasing the docs,37,[],https://github.com/sahib/rmlint/pull/401,https://github.com/jazz-it,3,https://github.com/sahib/rmlint/pull/401#issuecomment-593102790,I've noticed there could be a better way to explain slightly complicated snippets in docs related to user-defined regular expressions. I just tried to explain the snippets from a perspective of an end-user. I hope it's aligned with a previous description? I find it more intuitive this way.,"Thanks @madjoe. The changes look fine, but please use the develop branch as target for the pull request.

Sorry, Chris. I'll do it. May I suggest adding this particular note here as well:
https://rmlint.readthedocs.io/en/latest/developers.html#making-contributions
""Open a Pull Request against the develop branch.""
Imho the link on Pull Request should be:
https://github.com/sahib/rmlint/tree/develop
instead of:
http://github.com/sahib/rmlint/pulls",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,401,2020-02-29T14:48:12Z,2020-03-01T21:36:28Z,2020-03-01T21:36:47Z,CLOSED,False,632,178,28,https://github.com/jazz-it,Rephrasing the docs,37,[],https://github.com/sahib/rmlint/pull/401,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/401#issuecomment-593148829,I've noticed there could be a better way to explain slightly complicated snippets in docs related to user-defined regular expressions. I just tried to explain the snippets from a perspective of an end-user. I hope it's aligned with a previous description? I find it more intuitive this way.,"Thanks @madjoe. The changes look fine, but please use the develop branch as target for the pull request.

Sorry, Chris. I'll do it. May I suggest adding this particular note here as well:
https://rmlint.readthedocs.io/en/latest/developers.html#making-contributions

No problem. I added a note there now. Also, I cherry-picked your commit now (making this PR closable).

""Open a Pull Request against the develop branch.""
Imho the link on Pull Request should be:
https://github.com/sahib/rmlint/tree/develop
instead of:
http://github.com/sahib/rmlint/pulls

The link is fine, but I added that one should open it against develop.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,403,2020-03-12T17:23:06Z,2020-03-13T20:43:08Z,2020-03-13T20:43:17Z,MERGED,True,1,1,1,https://github.com/apps/dependabot,build(deps): bump psutil from 5.2.2 to 5.6.6,1,['dependencies'],https://github.com/sahib/rmlint/pull/403,https://github.com/apps/dependabot,1,https://github.com/sahib/rmlint/pull/403,"Bumps psutil from 5.2.2 to 5.6.6.

Changelog
Sourced from psutil's changelog.

5.6.6
2019-11-25
Bug fixes

1179_: [Linux] Process cmdline() now takes into account misbehaving processes
renaming the command line and using inappropriate chars to separate args.
1616_: use of Py_DECREF instead of Py_CLEAR will result in double free and
segfault
(CVE-2019-18874 <https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18874>__).
(patch by Riccardo Schirone)
1619_: [OpenBSD] compilation fails due to C syntax error.  (patch by Nathan
Houghton)

5.6.5
2019-11-06
Bug fixes

1615_: remove pyproject.toml as it was causing installation issues.

5.6.4
2019-11-04
Enhancements

1527_: [Linux] added Process.cpu_times().iowait counter, which is the time
spent waiting for blocking I/O to complete.
1565_: add PEP 517/8 build backend and requirements specification for better
pip integration.  (patch by Bernát Gábor)

Bug fixes

875_: [Windows] Process' cmdline(), environ() or cwd() may occasionally fail
with ERROR_PARTIAL_COPY which now gets translated to AccessDenied.
1126_: [Linux] cpu_affinity() segfaults on CentOS 5 / manylinux.
cpu_affinity() support for CentOS 5 was removed.
1528_: [AIX] compilation error on AIX 7.2 due to 32 vs 64 bit differences.
(patch by Arnon Yaari)
1535_: 'type' and 'family' fields returned by net_connections() are not
always turned into enums.
1536_: [NetBSD] process cmdline() erroneously raise ZombieProcess error if
cmdline has non encodable chars.
1546_: usage percent may be rounded to 0 on Python 2.

 ... (truncated)



Commits

c6cd256 pre release
b2414b8 revert #1595
c63369e updat HISTORY
edb20f6 linux, cmdline(), fix for #1179, comment 552984549: sometimes string ends wit...
d739cbb use PROCESS_QUERY_LIMITED_INFORMATION
f7e898b #1595: use psutil_pid_is_running() instead of GetExitCodeProcess
72c84cb #fix #1595 / windows: kill() may not raise AccessDenied
1f8d432 Merge branch 'master' of github.com:giampaolo/psutil
e6faebc release gil around users()/BSD (#1425)
5cb1b0b Merge branch 'master' of github.com:giampaolo/psutil
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps psutil from 5.2.2 to 5.6.6.

Changelog
Sourced from psutil's changelog.

5.6.6
2019-11-25
Bug fixes

1179_: [Linux] Process cmdline() now takes into account misbehaving processes
renaming the command line and using inappropriate chars to separate args.
1616_: use of Py_DECREF instead of Py_CLEAR will result in double free and
segfault
(CVE-2019-18874 <https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18874>__).
(patch by Riccardo Schirone)
1619_: [OpenBSD] compilation fails due to C syntax error.  (patch by Nathan
Houghton)

5.6.5
2019-11-06
Bug fixes

1615_: remove pyproject.toml as it was causing installation issues.

5.6.4
2019-11-04
Enhancements

1527_: [Linux] added Process.cpu_times().iowait counter, which is the time
spent waiting for blocking I/O to complete.
1565_: add PEP 517/8 build backend and requirements specification for better
pip integration.  (patch by Bernát Gábor)

Bug fixes

875_: [Windows] Process' cmdline(), environ() or cwd() may occasionally fail
with ERROR_PARTIAL_COPY which now gets translated to AccessDenied.
1126_: [Linux] cpu_affinity() segfaults on CentOS 5 / manylinux.
cpu_affinity() support for CentOS 5 was removed.
1528_: [AIX] compilation error on AIX 7.2 due to 32 vs 64 bit differences.
(patch by Arnon Yaari)
1535_: 'type' and 'family' fields returned by net_connections() are not
always turned into enums.
1536_: [NetBSD] process cmdline() erroneously raise ZombieProcess error if
cmdline has non encodable chars.
1546_: usage percent may be rounded to 0 on Python 2.

 ... (truncated)



Commits

c6cd256 pre release
b2414b8 revert #1595
c63369e updat HISTORY
edb20f6 linux, cmdline(), fix for #1179, comment 552984549: sometimes string ends wit...
d739cbb use PROCESS_QUERY_LIMITED_INFORMATION
f7e898b #1595: use psutil_pid_is_running() instead of GetExitCodeProcess
72c84cb #fix #1595 / windows: kill() may not raise AccessDenied
1f8d432 Merge branch 'master' of github.com:giampaolo/psutil
e6faebc release gil around users()/BSD (#1425)
5cb1b0b Merge branch 'master' of github.com:giampaolo/psutil
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,405,2020-03-28T10:08:09Z,2020-03-28T18:59:54Z,2020-03-28T18:59:57Z,MERGED,True,0,4,1,https://github.com/sonicdoe,Remove defunct Waffle badge,1,[],https://github.com/sahib/rmlint/pull/405,https://github.com/sonicdoe,1,https://github.com/sahib/rmlint/pull/405,"Waffle no longer exists, see Farewell from Waffle.","Waffle no longer exists, see Farewell from Waffle.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,405,2020-03-28T10:08:09Z,2020-03-28T18:59:54Z,2020-03-28T18:59:57Z,MERGED,True,0,4,1,https://github.com/sonicdoe,Remove defunct Waffle badge,1,[],https://github.com/sahib/rmlint/pull/405,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/405#issuecomment-605504379,"Waffle no longer exists, see Farewell from Waffle.","Oh, dear. Luckily I didn't use it for a long time anyways. Thanks @sonicdoe.",True,{'THUMBS_UP': ['https://github.com/sonicdoe']}
sahib/rmlint,https://github.com/sahib/rmlint,409,2020-05-11T08:03:38Z,2020-05-11T11:10:06Z,2020-05-11T11:10:06Z,MERGED,True,2,1,1,https://github.com/sarfatis,fix .sh output template typo,1,[],https://github.com/sahib/rmlint/pull/409,https://github.com/sarfatis,1,https://github.com/sahib/rmlint/pull/409,"color_reset requires evaluating
flag error in returned flow control value","color_reset requires evaluating
flag error in returned flow control value",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,411,2020-05-23T21:30:37Z,2020-05-24T14:34:22Z,2020-05-24T14:34:32Z,MERGED,True,1,2,1,https://github.com/JLuszawski,fix unnecessary STAMPFILE creation in rmlint.sh,1,[],https://github.com/sahib/rmlint/pull/411,https://github.com/JLuszawski,1,https://github.com/sahib/rmlint/pull/411,when DO_KEEP_DIR_TIMESTAMPS was not set the STAMPFILE was created but not removed,when DO_KEEP_DIR_TIMESTAMPS was not set the STAMPFILE was created but not removed,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,411,2020-05-23T21:30:37Z,2020-05-24T14:34:22Z,2020-05-24T14:34:32Z,MERGED,True,1,2,1,https://github.com/JLuszawski,fix unnecessary STAMPFILE creation in rmlint.sh,1,[],https://github.com/sahib/rmlint/pull/411,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/411#issuecomment-633240173,when DO_KEEP_DIR_TIMESTAMPS was not set the STAMPFILE was created but not removed,Thanks @JLuszawski!,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,413,2020-06-01T09:53:13Z,2020-06-10T18:28:18Z,2020-06-10T18:28:18Z,MERGED,True,2,2,1,https://github.com/Wikinaut,collision text adapted for blake2b (instead of sha1) default hash fun…,1,[],https://github.com/sahib/rmlint/pull/413,https://github.com/Wikinaut,1,https://github.com/sahib/rmlint/pull/413,"…ction
The previous text was apparently written for the then-default sha1 function. I corrected that, but please check thoroughly, whether I'm correct.","…ction
The previous text was apparently written for the then-default sha1 function. I corrected that, but please check thoroughly, whether I'm correct.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,413,2020-06-01T09:53:13Z,2020-06-10T18:28:18Z,2020-06-10T18:28:18Z,MERGED,True,2,2,1,https://github.com/Wikinaut,collision text adapted for blake2b (instead of sha1) default hash fun…,1,[],https://github.com/sahib/rmlint/pull/413,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/413#issuecomment-642183175,"…ction
The previous text was apparently written for the then-default sha1 function. I corrected that, but please check thoroughly, whether I'm correct.","Thanks, looks good to me. 👍",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,414,2020-06-05T15:28:55Z,2020-06-05T17:37:01Z,2020-06-05T21:46:44Z,MERGED,True,1,1,1,https://github.com/ammgws,changelog: fix release date for v2.10,1,[],https://github.com/sahib/rmlint/pull/414,https://github.com/ammgws,1,https://github.com/sahib/rmlint/pull/414,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,414,2020-06-05T15:28:55Z,2020-06-05T17:37:01Z,2020-06-05T21:46:44Z,MERGED,True,1,1,1,https://github.com/ammgws,changelog: fix release date for v2.10,1,[],https://github.com/sahib/rmlint/pull/414,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/414#issuecomment-639657004,,"Oops, thanks @ammgws.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,415,2020-06-07T10:47:40Z,2020-06-10T18:36:27Z,2020-06-10T18:36:27Z,MERGED,True,14,4,1,https://github.com/JLuszawski,implement -i option for rmlint.sh to ask before removal of each file,1,[],https://github.com/sahib/rmlint/pull/415,https://github.com/JLuszawski,1,https://github.com/sahib/rmlint/pull/415,"It may be more convenient in some cases to review each deletion interactively than to examine the entire script.
This commit implements a new option to rmlint.sh which turns on request for confirmation before deleting a file. It relies on '-i' option of rm command.
(can also be merged to develop branch if prefered)","It may be more convenient in some cases to review each deletion interactively than to examine the entire script.
This commit implements a new option to rmlint.sh which turns on request for confirmation before deleting a file. It relies on '-i' option of rm command.
(can also be merged to develop branch if prefered)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,415,2020-06-07T10:47:40Z,2020-06-10T18:36:27Z,2020-06-10T18:36:27Z,MERGED,True,14,4,1,https://github.com/JLuszawski,implement -i option for rmlint.sh to ask before removal of each file,1,[],https://github.com/sahib/rmlint/pull/415,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/415#issuecomment-642187145,"It may be more convenient in some cases to review each deletion interactively than to examine the entire script.
This commit implements a new option to rmlint.sh which turns on request for confirmation before deleting a file. It relies on '-i' option of rm command.
(can also be merged to develop branch if prefered)","It may be more convenient in some cases to review each deletion interactively than to examine the entire script. [...]

That's probably only  feasible for a small set of files. But although our docs state the goal of ""never be interactive"" I'm fine with this, as long it stays a separate option and is only part of the output & not t he main program. Approved.

(can also be merged to develop branch if prefered)

Normally it should go to develop, but I can merge it back this time.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,417,2020-06-09T20:57:31Z,2020-06-10T18:27:52Z,2020-06-10T21:45:31Z,MERGED,True,1,1,1,https://github.com/JLuszawski,fix parsing version info in shredder (issue #416),1,[],https://github.com/sahib/rmlint/pull/417,https://github.com/JLuszawski,1,https://github.com/sahib/rmlint/pull/417,Version 10 has two digits :),Version 10 has two digits :),True,{}
sahib/rmlint,https://github.com/sahib/rmlint,417,2020-06-09T20:57:31Z,2020-06-10T18:27:52Z,2020-06-10T21:45:31Z,MERGED,True,1,1,1,https://github.com/JLuszawski,fix parsing version info in shredder (issue #416),1,[],https://github.com/sahib/rmlint/pull/417,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/417#issuecomment-642182960,Version 10 has two digits :),"Oops, thank you @JLuszawski. Should have foreseen this.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,418,2020-06-11T18:19:50Z,2020-06-13T09:31:44Z,2020-07-02T18:00:59Z,MERGED,True,1,1,1,https://github.com/EvilMcJerkface,Escape contents of 'parent_path' JSON field,1,[],https://github.com/sahib/rmlint/pull/418,https://github.com/EvilMcJerkface,1,https://github.com/sahib/rmlint/pull/418,"Just ran:
rmlint . -D -T minimaldirs
and some of the JSON produced was broken, namely any time a 'part_of_directory' record was generated for a path that had something goofy like one double-quote in it, the 'path' field was escaped properly but the 'parent_path' field was not.  The 'path' field output is escaped via 'rm_fmt_json_key_unsafe', whereas the 'parent_path' field just uses 'rm_fmt_json_key'.  Probably both ought to use _unsafe.","Just ran:
rmlint . -D -T minimaldirs
and some of the JSON produced was broken, namely any time a 'part_of_directory' record was generated for a path that had something goofy like one double-quote in it, the 'path' field was escaped properly but the 'parent_path' field was not.  The 'path' field output is escaped via 'rm_fmt_json_key_unsafe', whereas the 'parent_path' field just uses 'rm_fmt_json_key'.  Probably both ought to use _unsafe.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,418,2020-06-11T18:19:50Z,2020-06-13T09:31:44Z,2020-07-02T18:00:59Z,MERGED,True,1,1,1,https://github.com/EvilMcJerkface,Escape contents of 'parent_path' JSON field,1,[],https://github.com/sahib/rmlint/pull/418,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/418#issuecomment-643597843,"Just ran:
rmlint . -D -T minimaldirs
and some of the JSON produced was broken, namely any time a 'part_of_directory' record was generated for a path that had something goofy like one double-quote in it, the 'path' field was escaped properly but the 'parent_path' field was not.  The 'path' field output is escaped via 'rm_fmt_json_key_unsafe', whereas the 'parent_path' field just uses 'rm_fmt_json_key'.  Probably both ought to use _unsafe.","Oh, damn. Thanks for noticing, I will release a bugfix release with this patch.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,420,2020-06-18T08:53:08Z,2020-06-21T17:28:07Z,2020-06-21T17:28:07Z,MERGED,True,71,76,4,https://github.com/Artoria2e5,Pedantic edits for sh,2,[],https://github.com/sahib/rmlint/pull/420,https://github.com/Artoria2e5,1,https://github.com/sahib/rmlint/pull/420,"Remove all invocations of echo due to the poorly-defined handling of
backslashes (will show up in paths because user input). Now using printf.
Do not let C handle \e, because that's non-standard.
Remove handling of percents in SConscript and make it not hand escapes
to C.
Add -- to invocations of external commands to guard against potential
option-looking filenames.
The same stuff in sh.c.in.","Remove all invocations of echo due to the poorly-defined handling of
backslashes (will show up in paths because user input). Now using printf.
Do not let C handle \e, because that's non-standard.
Remove handling of percents in SConscript and make it not hand escapes
to C.
Add -- to invocations of external commands to guard against potential
option-looking filenames.
The same stuff in sh.c.in.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,420,2020-06-18T08:53:08Z,2020-06-21T17:28:07Z,2020-06-21T17:28:07Z,MERGED,True,71,76,4,https://github.com/Artoria2e5,Pedantic edits for sh,2,[],https://github.com/sahib/rmlint/pull/420,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/420#issuecomment-647103359,"Remove all invocations of echo due to the poorly-defined handling of
backslashes (will show up in paths because user input). Now using printf.
Do not let C handle \e, because that's non-standard.
Remove handling of percents in SConscript and make it not hand escapes
to C.
Add -- to invocations of external commands to guard against potential
option-looking filenames.
The same stuff in sh.c.in.","Please change the PR target to develop, then I will merge it.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,420,2020-06-18T08:53:08Z,2020-06-21T17:28:07Z,2020-06-21T17:28:07Z,MERGED,True,71,76,4,https://github.com/Artoria2e5,Pedantic edits for sh,2,[],https://github.com/sahib/rmlint/pull/420,https://github.com/Artoria2e5,3,https://github.com/sahib/rmlint/pull/420#issuecomment-647151807,"Remove all invocations of echo due to the poorly-defined handling of
backslashes (will show up in paths because user input). Now using printf.
Do not let C handle \e, because that's non-standard.
Remove handling of percents in SConscript and make it not hand escapes
to C.
Add -- to invocations of external commands to guard against potential
option-looking filenames.
The same stuff in sh.c.in.",Done.,True,{'THUMBS_UP': ['https://github.com/sahib']}
sahib/rmlint,https://github.com/sahib/rmlint,443,2020-11-10T18:33:02Z,2020-11-15T17:24:41Z,2020-11-15T17:24:41Z,MERGED,True,1,1,1,https://github.com/tsudoko,Don't disable fiemap when gettext is disabled,1,[],https://github.com/sahib/rmlint/pull/443,https://github.com/tsudoko,1,https://github.com/sahib/rmlint/pull/443,fiemap does not depend on gettext.,fiemap does not depend on gettext.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,443,2020-11-10T18:33:02Z,2020-11-15T17:24:41Z,2020-11-15T17:24:41Z,MERGED,True,1,1,1,https://github.com/tsudoko,Don't disable fiemap when gettext is disabled,1,[],https://github.com/sahib/rmlint/pull/443,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/443#issuecomment-727605436,fiemap does not depend on gettext.,"Oops, thanks. 😄",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,1,https://github.com/sahib/rmlint/pull/444,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/444#issuecomment-727605318,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Hmm, this seems to be a strange behavior difference between Linux and macOS (and BSDs). I will check (hopefully tomorrow) if we can live without that flag. Thanks for the PR. 👍",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/444#issuecomment-727606357,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Closed by accident, pardon.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,4,https://github.com/sahib/rmlint/pull/444#issuecomment-727606928,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","So, here's the issue:
$ echo x > /tmp/a
$ echo x > /tmp/b
$ ln -s /tmp/a /tmp/la
$ ln -s /tmp/b /tmp/lb
$ rm /tmp/{a,b}
$ ./rmlint-with-flag /tmp/l{a,b}
# Bad symlink(s):
    rm '/tmp/la'
    rm '/tmp/lb'
$ ./rmlint-without-flag /tmp/l{a,b,}
WARNING: Can't open directory or file ""/tmp/la"": No such file or directory
WARNING: Can't open directory or file ""/tmp/lb"": No such file or directory
ERROR: Not all given paths are valid. Aborting.
This is expected since faccesat() will fail on a broken symbolic link without this flag. Seems we need to check if it is a symbolic link if faccessat() errors out...",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,5,https://github.com/sahib/rmlint/pull/444#issuecomment-727689739,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","I don't think I'll be able to contribute anything else to the coding, but I'm happy to help with any testing. Feel free to modify this PR as desired.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ericonr,6,https://github.com/sahib/rmlint/pull/444#issuecomment-733764684,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Using readlink() might be a good solution here (note that I haven't looked into the code properly, the thought just crossed my mind).",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ericonr,7,https://github.com/sahib/rmlint/pull/444#issuecomment-733779913,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Ooh, this is a complicated one. I believe musl and glibc implement faccessat quite differently, where musl implements a workaround for correctness (probably approaches the result of the BSDs / MacOS) whereas glibc doesn't. That's my understanding, at least.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ericonr,8,https://github.com/sahib/rmlint/pull/444#issuecomment-733851416,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.",Would it be possible to simply check if the file can be opened at a later point? Using access is racy and the behavior between the versions using faccessat and access is different.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ericonr,9,https://github.com/sahib/rmlint/pull/444#issuecomment-733867681,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Lastly, if anything this should completely revert the commit, right? 5ca6d25",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,10,https://github.com/sahib/rmlint/pull/444#issuecomment-739520505,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Took me again a bit longer to come back to this, but I should have a fix with a726d0c. @ericonr, @ChrisBaker97 - please test that one.

Ooh, this is a complicated one. I believe musl and glibc implement faccessat quite differently, where musl implements a workaround for correctness (probably approaches the result of the BSDs / MacOS) whereas glibc doesn't. That's my understanding, at least.

Yes, this seems to be the case.

Using readlink() might be a good solution here (note that I haven't looked into the code properly, the thought just crossed my mind).

That is indeed the solution I did go for now, but lstat() would have worked too.

Would it be possible to simply check if the file can be opened at a later point? Using access is racy and the behavior between the versions using faccessat and access is different.

That check is there to filter files out early that we can't open at all. There are other checks later on.",True,{'THUMBS_UP': ['https://github.com/ChrisBaker97']}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,11,https://github.com/sahib/rmlint/pull/444#issuecomment-739550575,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.",Seems to compile and run fine on macOS 10.14.6 Mojave. Thanks for the fix.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ericonr,12,https://github.com/sahib/rmlint/pull/444#issuecomment-739573584,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Took me again a bit longer to come back to this, but I should have a fix with a726d0c. @ericonr, @ChrisBaker97 - please test that one.

It appears to be working, though I don't have much experience with the tool.
Thank you for the explanations :)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ericonr,13,https://github.com/sahib/rmlint/pull/444#issuecomment-739607155,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","That is indeed the solution I did go for now, but lstat() would have worked too.

As a general heads up, you shouldn't use lstat() here either. At least for both glibc and musl, they are implemented as simple wrappers on top of faccessat().",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,14,https://github.com/sahib/rmlint/pull/444#issuecomment-740090133,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","FYI, I just ran a partial test suite on just the new test added, using:
RM_TS_USE_VALGRIND=1 RM_TS_PRINT_CMD=1 RM_TS_PEDANTIC=1 nosetests-3.4 -s -a '!slow !known_issue' tests/test_robustness/test_badlinks_as_args.py

with the result:
======================================================================
FAIL: test_badlinks_as_args.test_bad_symlinks_as_direct_args
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.4.10/lib/python3.4/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_robustness/test_badlinks_as_args.py"", line 33, in test_bad_symlinks_as_direct_args
    {link_a_path, link_b_path}
AssertionError

----------------------------------------------------------------------
Ran 3 tests in 3.381s

FAILED (failures=1)

I also ran what looks to be an existing symlink test:
$ RM_TS_USE_VALGRIND=1 RM_TS_PRINT_CMD=1 RM_TS_PEDANTIC=1 nosetests-3.4 -s -a '!slow !known_issue' tests/test_options/test_symlinks.py

and this was the result:
======================================================================
FAIL: test_symlinks.test_default
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.4.10/lib/python3.4/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_symlinks.py"", line 21, in test_default
    '/a/z',
AssertionError

======================================================================
FAIL: test_symlinks.test_merge_directories_with_ignored_symlinks
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.4.10/lib/python3.4/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_symlinks.py"", line 36, in test_merge_directories_with_ignored_symlinks
    '/b',
AssertionError

----------------------------------------------------------------------
Ran 5 tests in 27.876s

FAILED (failures=2)

I wasn't sure whether nosetests-3.4 was testing against Python 3.4, which is why I ran it using Python 3.4.10, but I'm also getting the same results with 3.8.6 and 3.9.0 as well.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,15,https://github.com/sahib/rmlint/pull/444#issuecomment-748046083,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","As a general heads up, you shouldn't use lstat() here either. At least for both glibc and musl, they are implemented as simple wrappers on top of faccessat().

@ericonr : You probably mean as wrappers to fstatat()? I actually tested that variant and seemed to work.

FYI, I just ran a partial test suite on just the new test added, using:

I just tried to reproduce this behavior in an alpine docker container, but couldn't. Could it be that you have a old rmlint binary lying around?",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,16,https://github.com/sahib/rmlint/pull/444#issuecomment-748278361,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","FYI, I just ran a partial test suite on just the new test added, using:

I just tried to reproduce this behavior in an alpine docker container, but couldn't. Could it be that you have a old rmlint binary lying around?

which rmlint does, in fact, return my Homebrew-installed rmlint. I'm not familiar enough with nosetest to know if there's a better way to do this, but I just aliased  rmlint to the version compiled from the latest develop branch, ran the tests again, and got the same result:

  Code
$ alias rmlint=$(pwd)/rmlint
$ type rmlint
rmlint is an alias for /Users/chris/Code/rmlint/rmlint
rmlint is /usr/local/bin/rmlint
$ which rmlint
rmlint: aliased to /Users/chris/Code/rmlint/rmlint
$ rmlint --version
version 2.10.1 compiled: Dec 18 2020 at [14:17:10] ""Ludicrous Lemur"" (rev ef12a601)
compiled with: -mounts -nonstripped -fiemap +sha512 +bigfiles +intl +replay +xattr -btrfs-support

rmlint was written by Christopher <sahib> Pahl and Daniel <SeeSpotRun> Thomas.
The code at https://github.com/sahib/rmlint is licensed under the terms of the GPLv3.
$ python --version
Python 3.4.10
$ RM_TS_USE_VALGRIND=1 RM_TS_PRINT_CMD=1 RM_TS_PEDANTIC=1 nosetests-3.4 -s -a '!slow !known_issue' tests/test_options/test_symlinks.py tests/test_robustness/test_badlinks_as_args.py
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
FRunning cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
FRunning cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
...Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
F..
======================================================================
FAIL: test_symlinks.test_default
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.4.10/lib/python3.4/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_symlinks.py"", line 21, in test_default
    '/a/z',
AssertionError

======================================================================
FAIL: test_symlinks.test_merge_directories_with_ignored_symlinks
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.4.10/lib/python3.4/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_symlinks.py"", line 36, in test_merge_directories_with_ignored_symlinks
    '/b',
AssertionError

======================================================================
FAIL: test_badlinks_as_args.test_bad_symlinks_as_direct_args
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.4.10/lib/python3.4/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_robustness/test_badlinks_as_args.py"", line 33, in test_bad_symlinks_as_direct_args
    {link_a_path, link_b_path}
AssertionError

----------------------------------------------------------------------
Ran 8 tests in 32.696s

FAILED (failures=3)

Again, run with Python 3.4, but same results in 3.9.0.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,17,https://github.com/sahib/rmlint/pull/444#issuecomment-748457794,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","which rmlint does, in fact, return my Homebrew-installed rmlint. I'm not familiar enough with nosetest to know if there's a better way to do this, but I just aliased rmlint to the version compiled from the latest develop branch, ran the tests again, and got the same result:

alias won't help since it's seen only by your shell. nosetests simply picks the rmlint in the directory you're executing it from. But /Users/chris/Code/rmlint/rmlint already has the latest fix, judging from the --version output. Weird.

Again, run with Python 3.4, but same results in 3.9.0.

Python version probably does not matter here.

Still no luck reproducing that issue in my alpine container (which uses musl as libc, like other reporters). Maybe there's another issue on macOS' libc?

Seems to compile and run fine on macOS 10.14.6 Mojave. Thanks for the fix.

You did execute the test in #444 (comment) and it worked (files were detected as broken symlinks), right? Also did the above tests also fail with versions that did not have the fix yet? The last test (which I added recently) is especially weird since it fails only at the last check, indicating that there were some files detected as bad links.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,18,https://github.com/sahib/rmlint/pull/444#issuecomment-748480514,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Gotcha. Yeah, I'm running it from the base directory of the repository, which is where rmlintgets built, so it looks like it's testing with the modified version either way.

You did execute the test in #444 (comment) and it worked (files were detected as broken symlinks), right? Also did the above tests also fail with versions that did not have the fix yet?

I didn't but here's the output. Looks like the modified version works as expected, while the stock 2.10.1 version doesn't:
$ echo x > /tmp/a > /tmp/b
$ ln -s /tmp/a /tmp/la
$ ln -s /tmp/b /tmp/lb
$ rm -f /tmp/{a,b}
$ ./rmlint --version
version 2.10.1 compiled: Dec 18 2020 at [14:17:10] ""Ludicrous Lemur"" (rev ef12a601)
compiled with: -mounts -nonstripped -fiemap +sha512 +bigfiles +intl +replay +xattr -btrfs-support

rmlint was written by Christopher <sahib> Pahl and Daniel <SeeSpotRun> Thomas.
The code at https://github.com/sahib/rmlint is licensed under the terms of the GPLv3.
$ ./rmlint /tmp/l{a,b}

# Bad symlink(s):
    rm '/tmp/lb'
    rm '/tmp/la'

==> Note: Please use the saved script below for removal, not the above output.
==> In total 2 files, whereof 0 are duplicates in 0 groups.
==> This equals 0 B of duplicates which could be removed.
==> 2 other suspicious item(s) found, which may vary in size.
==> Scanning took in total 0.054s.

Wrote a sh file to: /Users/chris/Code/rmlint/rmlint.sh
Wrote a json file to: /Users/chris/Code/rmlint/rmlint.json
$ /usr/local/bin/rmlint --version
version 2.10.1 compiled: Nov 12 2020 at [20:13:37] ""Ludicrous Lemur"" (rev unknown)
compiled with: -mounts -nonstripped -fiemap +sha512 +bigfiles +intl +replay +xattr -btrfs-support

rmlint was written by Christopher <sahib> Pahl and Daniel <SeeSpotRun> Thomas.
The code at https://github.com/sahib/rmlint is licensed under the terms of the GPLv3.
$ /usr/local/bin/rmlint /tmp/l{a,b}
WARNING: Can't open directory or file ""/tmp/la"": No such file or directory
WARNING: Can't open directory or file ""/tmp/lb"": No such file or directory
ERROR: Not all given paths are valid. Aborting.
(I should mention that the ""stock"" version is built after applying the patch I submitted to Homebrew's formula, deleting |AT_SYMLINK_NOFOLLOW from cfg.c as shown in the initial commit to this pull request, which was necessary to get it working at all on macOS 10.14.x Mojave and older after 2.9.0. If that's a problem, let me know, and I'll roll back to 2.9.0 and test again.)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,19,https://github.com/sahib/rmlint/pull/444#issuecomment-748485551,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.",Thanks @ChrisBaker97. I pushed a small commit with some added prints in the tests. Can you please re-run the problematic tests so we what's going on?,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,20,https://github.com/sahib/rmlint/pull/444#issuecomment-748493915,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Here you go:

$ git fetch origin && git reset --hard origin/develop
remote: Enumerating objects: 13, done.
remote: Counting objects: 100% (13/13), done.
remote: Compressing objects: 100% (1/1), done.
remote: Total 7 (delta 6), reused 7 (delta 6), pack-reused 0
Unpacking objects: 100% (7/7), 589 bytes | 84.00 KiB/s, done.
From https://github.com/sahib/rmlint
   ef12a601..58db7a30  develop    -> origin/develop

HEAD is now at 58db7a30 temp: add debug logs to some tests


$ scons config --without-gui && scons DEBUG=1
scons: Reading SConscript files ...
Checking whether the C compiler works... (cached) yes
Checking for git revision... (cached) 58db7a30
Checking for pkg-config... (cached) yes
Checking for glib-2.0 >= 2.32... (cached) yes
Checking for gio-unix-2.0... (cached) yes
Checking for blkid... (cached) no
Checking for json-glib-1.0... (cached) yes
Checking for -std=c11 support...(cached) yes
Checking for cygwin environment...(cached) Darwin/apollo.local/18.7.0/Darwin Kernel Version 18.7.0: Fri Oct 30 12:37:06 PDT 2020; root:xnu-4903.278.44.0.2~1/RELEASE_X86_64/x86_64/i386(cached) no
Checking whether _mm_crc32_u64 is declared... (cached) yes
Checking for GCC version... (cached) 4
Checking whether __builtin_cpu_supports is declared... (cached) no
Checking whether blkid_devno_to_wholedisk is declared... (cached) no
Checking for existence of /sys/block... (cached) no
Checking for C header file libelf.h... (cached) no
Checking for C type struct fiemap... (cached) no
Checking for C function getxattr()... (cached) yes
Checking for C function setxattr()... (cached) yes
Checking for C function removexattr()... (cached) yes
Checking for C function listxattr()... (cached) yes
Checking for C function lgetxattr()... (cached) no
Checking size of off_t ... (cached) yes
Checking for C function stat64()... (cached) yes
Checking whether G_CHECKSUM_SHA512 is declared... (cached) yes
Checking for C header file locale.h... (cached) yes
Checking for C header file linux/limits.h... (cached) no
Checking whether posix_fadvise is declared... (cached) no
Checking for C header file linux/btrfs.h... (cached) no
Checking for C header file linux/fs.h... (cached) no
Checking for C header file sys/utsname.h... (cached) yes
Checking for C header file sys/sysmacros.h... (cached) no
Using compiler optimisation -O2 (to change, run scons with O=[0|1|2|3|s|fast])
Running with --jobs=8
Building rmlint
scons: done reading SConscript files.
scons: Building targets ...
Printing configuration...
Using sphinx-build binary: /usr/local/bin/sphinx-build

rmlint will be compiled with the following features:

    Find non-stripped binaries (needs libelf)             : no
    Optimize using ioctl(FS_IOC_FIEMAP) (needs linux)     : no
    Support for SHA512 (needs glib >= 2.31)               : yes
    Build manpage from docs/rmlint.1.rst                  : yes, using /usr/local/bin/sphinx-build
    Support for caching checksums in file's xattr         : yes
    Support for reading json caches (needs json-glib)     : yes
    Checking for proper support of big files >= 4GB       : yes
        (needs either sizeof(off_t) >= 8 ...)             : yes
        (... or presence of stat64)                       : yes

    Optimize non-rotational disks                         : no
        (needs libblkid for resolving dev_t to path)      : no
        (needs gio-unix-2.0)                              : yes

    Enable gettext localization                           : yes
        (needs <locale.h> for compile side support)       : yes
        (needs msgfmt to compile .po files)               : yes

The following constants will be used during the build:

    Version information  : 2.10.1 ""Ludicrous Lemur"" (rev 58db7a30)
    Compiler             : gcc
    Install prefix       : /usr/local
    Actual prefix        : /usr/local
    Verbose building     : no
    Adding debug checks  : no
    Adding debug symbols : no

Type 'scons' to actually compile rmlint now. Good luck.

scons: done building targets.
scons: Reading SConscript files ...
Checking whether the C compiler works... (cached) yes
Checking for git revision... (cached) 58db7a30
Checking for pkg-config... (cached) yes
Checking for glib-2.0 >= 2.32... (cached) yes
Checking for gio-unix-2.0... (cached) yes
Checking for blkid... (cached) no
Checking for json-glib-1.0... (cached) yes
Checking for -std=c11 support...(cached) yes
Checking for cygwin environment...(cached) Darwin/apollo.local/18.7.0/Darwin Kernel Version 18.7.0: Fri Oct 30 12:37:06 PDT 2020; root:xnu-4903.278.44.0.2~1/RELEASE_X86_64/x86_64/i386(cached) no
Checking whether _mm_crc32_u64 is declared... (cached) yes
Checking for GCC version... (cached) 4
Checking whether __builtin_cpu_supports is declared... (cached) no
Checking whether blkid_devno_to_wholedisk is declared... (cached) no
Checking for existence of /sys/block... (cached) no
Checking for C header file libelf.h... (cached) no
Checking for C type struct fiemap... (cached) no
Checking for C function getxattr()... (cached) yes
Checking for C function setxattr()... (cached) yes
Checking for C function removexattr()... (cached) yes
Checking for C function listxattr()... (cached) yes
Checking for C function lgetxattr()... (cached) no
Checking size of off_t ... (cached) yes
Checking for C function stat64()... (cached) yes
Checking whether G_CHECKSUM_SHA512 is declared... (cached) yes
Checking for C header file locale.h... (cached) yes
Checking for C header file linux/limits.h... (cached) no
Checking whether posix_fadvise is declared... (cached) no
Checking for C header file linux/btrfs.h... (cached) no
Checking for C header file linux/fs.h... (cached) no
Checking for C header file sys/utsname.h... (cached) yes
Checking for C header file sys/sysmacros.h... (cached) no
Compiling in debug mode
Using compiler optimisation -Og (to change, run scons with O=[0|1|2|3|s|fast])
Running with --jobs=8
Building rmlint
scons: done reading SConscript files.
scons: Building targets ...
build_config_template([""lib/config.h""], [""lib/config.h.in""])
build_python_formatter([""lib/formats/py.c""], [""lib/formats/py.c.in""])
build_sh_formatter([""lib/formats/sh.c""], [""lib/formats/sh.c.in""])
scons: `docs/_build/man/rmlint.1' is up to date.
scons: `docs/rmlint.1.gz' is up to date.
Compiling ==> lib/formats/sh.c
Compiling ==> lib/formats/py.c
Compiling ==> lib/checksums/metrohash128.c
Compiling ==> lib/session.c
Compiling ==> lib/formats.c
Compiling ==> lib/formats/_equal.c
Compiling ==> lib/checksums/blake2/blake2b-ref.c
Compiling ==> lib/treemerge.c
Compiling ==> lib/cmdline.c
Compiling ==> lib/formats/summary.c
Compiling ==> lib/md-scheduler.c
Compiling ==> lib/formats/json.c
Compiling ==> lib/hasher.c
Compiling ==> lib/checksums/blake2/blake2sp-ref.c
Compiling ==> src/rmlint.c
Compiling ==> lib/replay.c
Compiling ==> lib/fts/fts.c
Compiling ==> lib/formats/progressbar.c
Compiling ==> lib/file.c
Compiling ==> lib/checksums/xxhash/xxhash.c
Compiling ==> lib/traverse.c
Compiling ==> lib/checksum.c
Compiling ==> lib/formats/stats.c
Compiling ==> lib/formats/fdupes.c
Compiling ==> lib/checksums/blake2/blake2s-ref.c
Compiling ==> lib/xattr.c
Compiling ==> lib/preprocess.c
Compiling ==> lib/formats/uniques.c
Compiling ==> lib/hash-utility.c
Compiling ==> lib/formats/pretty.c
Compiling ==> lib/checksums/blake2/blake2xs-ref.c
Compiling ==> lib/shredder.c
Compiling ==> lib/formats/csv.c
Compiling ==> lib/checksums/blake2/blake2bp-ref.c
Compiling ==> lib/utilities.c
Compiling ==> lib/pathtricia.c
Compiling ==> lib/formats/timestamp.c
Compiling ==> lib/formats/null.c
Compiling ==> lib/cfg.c
Compiling ==> lib/checksums/blake2/blake2xb-ref.c
Linking Static Library ==> librmlint.a
Ranlib Library ==> librmlint.a
Linking Program ==> rmlint
scons: done building targets.


$ ./rmlint --version
version 2.10.1 compiled: Dec 19 2020 at [11:05:28] ""Ludicrous Lemur"" (rev 58db7a30)
compiled with: -mounts -nonstripped -fiemap +sha512 +bigfiles +intl +replay +xattr -btrfs-support

rmlint was written by Christopher <sahib> Pahl and Daniel <SeeSpotRun> Thomas.
The code at https://github.com/sahib/rmlint is licensed under the terms of the GPLv3.


$ RM_TS_USE_VALGRIND=1 RM_TS_PRINT_CMD=1 RM_TS_PEDANTIC=1 nosetests-3.4 -s -a '!slow !known_issue' tests/test_options/test_symlinks.py tests/test_robustness/test_badlinks_as_args.py
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
{'-testdir/b/x', '-testdir/b/y', '-testdir/a/z', '-testdir/b/z'}
FRunning cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -T df,dd --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
{'-testdir/b', '-testdir/a'}
FRunning cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -F --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
...Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /tmp/rmlint-unit-testdir /tmp/rmlint-unit-testdir/link_a /tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
{'/private/tmp/rmlint-unit-testdir/link_b', '/private/tmp/rmlint-unit-testdir/link_a'}
F..
======================================================================
FAIL: test_symlinks.test_default
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_symlinks.py"", line 18, in test_default
    assert {e[""path""][len(TESTDIR_NAME):] for e in data} == {
AssertionError

======================================================================
FAIL: test_symlinks.test_merge_directories_with_ignored_symlinks
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_symlinks.py"", line 36, in test_merge_directories_with_ignored_symlinks
    assert {e[""path""][len(TESTDIR_NAME):] for e in data if e[""type""] == ""duplicate_dir""} == {
AssertionError

======================================================================
FAIL: test_badlinks_as_args.test_bad_symlinks_as_direct_args
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_robustness/test_badlinks_as_args.py"", line 33, in test_bad_symlinks_as_direct_args
    assert {data[0]['path'], data[1]['path']} == \
AssertionError

----------------------------------------------------------------------
Ran 8 tests in 33.946s

FAILED (failures=3)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,21,https://github.com/sahib/rmlint/pull/444#issuecomment-748497949,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Okay, thanks. Good news, it's just a error in the test 😄  The paths get cut off incorrectly on macOS, probably because rmlint followed a link (which shows in the path, ). Will fix tomorrow.
Out of curiosity, do the test work when you do this?
$ RM_TS_DIR=/private/tmp/rmlint-unit-testdir/ RM_TS_PRINT_CMD=1 nosetests-3.4 -d -s -a '!slow !known_issue' tests/test_options/test_symlinks.py tests/test_robustness/test_badlinks_as_args.py

...also I suppose those are not the only tests that fail on macOS?",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,22,https://github.com/sahib/rmlint/pull/444#issuecomment-748500114,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","I should have noted: The -d above makes nose output the values it tried to assert, which is helpful during debugging.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,23,https://github.com/sahib/rmlint/pull/444#issuecomment-748502278,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.",17ada44 contains a fix that should do the trick for those tests.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,24,https://github.com/sahib/rmlint/pull/444#issuecomment-748504311,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Out of curiosity, do the test work when you do this?


$ RM_TS_DIR=/private/tmp/rmlint-unit-testdir/ RM_TS_PRINT_CMD=1 nosetests-3.4 -d -s -a '!slow !known_issue' tests/test_options/test_symlinks.py tests/test_robustness/test_badlinks_as_args.py
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir/ -o json:/tmp/out.json -c json:oneline
{'b/z', 'b/y', 'b/x', 'a/z'}
FRunning cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir/ -T df,dd -o json:/tmp/out.json -c json:oneline
{'a', 'b'}
FRunning cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir/ -F -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir/ -f -S a -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir/ -@ -S a -o json:/tmp/out.json -c json:oneline
...Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir/ /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b -o json:/tmp/out.json -c json:oneline
{'/private/tmp/rmlint-unit-testdir/link_b', '/private/tmp/rmlint-unit-testdir/link_a'}
...
======================================================================
FAIL: test_symlinks.test_default
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_symlinks.py"", line 18, in test_default
    assert {e[""path""][len(TESTDIR_NAME):] for e in data} == {
AssertionError:


======================================================================
FAIL: test_symlinks.test_merge_directories_with_ignored_symlinks
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_symlinks.py"", line 36, in test_merge_directories_with_ignored_symlinks
    assert {e[""path""][len(TESTDIR_NAME):] for e in data if e[""type""] == ""duplicate_dir""} == {
AssertionError:


----------------------------------------------------------------------
Ran 8 tests in 0.987s

FAILED (failures=2)



...also I suppose those are not the only tests that fail on macOS?

You know, I've tried to run the full test suite a couple of times, but always run out of patience after 30 mins or so. Pretty deep into it, IIRC, it prints a line F.. and then seems to hang longer than I care to wait. The system is still loaded from it, and I end up having to close out the terminal.
We can work on that next, if you want. 😊

17ada44 contains a fix that should do the trick for those tests.

Looks good, I think.

$ git fetch origin && git reset --hard origin/develop
remote: Enumerating objects: 28, done.
remote: Counting objects: 100% (28/28), done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 18 (delta 15), reused 14 (delta 11), pack-reused 0
Unpacking objects: 100% (18/18), 1.68 KiB | 122.00 KiB/s, done.
From https://github.com/sahib/rmlint
   58db7a30..17ada44f  develop    -> origin/develop

HEAD is now at 17ada44f macos: hopefully fix run on macOS



$ scons config --without-gui && scons DEBUG=1
scons: Reading SConscript files ...
Checking whether the C compiler works... (cached) yes
Checking for git revision... (cached) 17ada44f
Checking for pkg-config... (cached) yes
Checking for glib-2.0 >= 2.32... (cached) yes
Checking for gio-unix-2.0... (cached) yes
Checking for blkid... (cached) no
Checking for json-glib-1.0... (cached) yes
Checking for -std=c11 support...(cached) yes
Checking for cygwin environment...(cached) Darwin/apollo.local/18.7.0/Darwin Kernel Version 18.7.0: Fri Oct 30 12:37:06 PDT 2020; root:xnu-4903.278.44.0.2~1/RELEASE_X86_64/x86_64/i386(cached) no
Checking whether _mm_crc32_u64 is declared... (cached) yes
Checking for GCC version... (cached) 4
Checking whether __builtin_cpu_supports is declared... (cached) no
Checking whether blkid_devno_to_wholedisk is declared... (cached) no
Checking for existence of /sys/block... (cached) no
Checking for C header file libelf.h... (cached) no
Checking for C type struct fiemap... (cached) no
Checking for C function getxattr()... (cached) yes
Checking for C function setxattr()... (cached) yes
Checking for C function removexattr()... (cached) yes
Checking for C function listxattr()... (cached) yes
Checking for C function lgetxattr()... (cached) no
Checking size of off_t ... (cached) yes
Checking for C function stat64()... (cached) yes
Checking whether G_CHECKSUM_SHA512 is declared... (cached) yes
Checking for C header file locale.h... (cached) yes
Checking for C header file linux/limits.h... (cached) no
Checking whether posix_fadvise is declared... (cached) no
Checking for C header file linux/btrfs.h... (cached) no
Checking for C header file linux/fs.h... (cached) no
Checking for C header file sys/utsname.h... (cached) yes
Checking for C header file sys/sysmacros.h... (cached) no
Using compiler optimisation -O2 (to change, run scons with O=[0|1|2|3|s|fast])
Running with --jobs=8
Building rmlint
scons: done reading SConscript files.
scons: Building targets ...
Printing configuration...
Using sphinx-build binary: /usr/local/bin/sphinx-build

rmlint will be compiled with the following features:

    Find non-stripped binaries (needs libelf)             : no
    Optimize using ioctl(FS_IOC_FIEMAP) (needs linux)     : no
    Support for SHA512 (needs glib >= 2.31)               : yes
    Build manpage from docs/rmlint.1.rst                  : yes, using /usr/local/bin/sphinx-build
    Support for caching checksums in file's xattr         : yes
    Support for reading json caches (needs json-glib)     : yes
    Checking for proper support of big files >= 4GB       : yes
        (needs either sizeof(off_t) >= 8 ...)             : yes
        (... or presence of stat64)                       : yes

    Optimize non-rotational disks                         : no
        (needs libblkid for resolving dev_t to path)      : no
        (needs gio-unix-2.0)                              : yes

    Enable gettext localization                           : yes
        (needs <locale.h> for compile side support)       : yes
        (needs msgfmt to compile .po files)               : yes

The following constants will be used during the build:

    Version information  : 2.10.1 ""Ludicrous Lemur"" (rev 17ada44f)
    Compiler             : gcc
    Install prefix       : /usr/local
    Actual prefix        : /usr/local
    Verbose building     : no
    Adding debug checks  : no
    Adding debug symbols : no

Type 'scons' to actually compile rmlint now. Good luck.

scons: done building targets.
scons: Reading SConscript files ...
Checking whether the C compiler works... (cached) yes
Checking for git revision... (cached) 17ada44f
Checking for pkg-config... (cached) yes
Checking for glib-2.0 >= 2.32... (cached) yes
Checking for gio-unix-2.0... (cached) yes
Checking for blkid... (cached) no
Checking for json-glib-1.0... (cached) yes
Checking for -std=c11 support...(cached) yes
Checking for cygwin environment...(cached) Darwin/apollo.local/18.7.0/Darwin Kernel Version 18.7.0: Fri Oct 30 12:37:06 PDT 2020; root:xnu-4903.278.44.0.2~1/RELEASE_X86_64/x86_64/i386(cached) no
Checking whether _mm_crc32_u64 is declared... (cached) yes
Checking for GCC version... (cached) 4
Checking whether __builtin_cpu_supports is declared... (cached) no
Checking whether blkid_devno_to_wholedisk is declared... (cached) no
Checking for existence of /sys/block... (cached) no
Checking for C header file libelf.h... (cached) no
Checking for C type struct fiemap... (cached) no
Checking for C function getxattr()... (cached) yes
Checking for C function setxattr()... (cached) yes
Checking for C function removexattr()... (cached) yes
Checking for C function listxattr()... (cached) yes
Checking for C function lgetxattr()... (cached) no
Checking size of off_t ... (cached) yes
Checking for C function stat64()... (cached) yes
Checking whether G_CHECKSUM_SHA512 is declared... (cached) yes
Checking for C header file locale.h... (cached) yes
Checking for C header file linux/limits.h... (cached) no
Checking whether posix_fadvise is declared... (cached) no
Checking for C header file linux/btrfs.h... (cached) no
Checking for C header file linux/fs.h... (cached) no
Checking for C header file sys/utsname.h... (cached) yes
Checking for C header file sys/sysmacros.h... (cached) no
Compiling in debug mode
Using compiler optimisation -Og (to change, run scons with O=[0|1|2|3|s|fast])
Running with --jobs=8
Building rmlint
scons: done reading SConscript files.
scons: Building targets ...
build_config_template([""lib/config.h""], [""lib/config.h.in""])
build_python_formatter([""lib/formats/py.c""], [""lib/formats/py.c.in""])
build_sh_formatter([""lib/formats/sh.c""], [""lib/formats/sh.c.in""])
scons: `docs/_build/man/rmlint.1' is up to date.
scons: `docs/rmlint.1.gz' is up to date.
Compiling ==> lib/formats/sh.c
Compiling ==> lib/formats/py.c
Compiling ==> lib/formats/progressbar.c
Compiling ==> lib/checksums/blake2/blake2b-ref.c
Compiling ==> lib/xattr.c
Compiling ==> lib/preprocess.c
Compiling ==> lib/checksum.c
Compiling ==> lib/formats/stats.c
Compiling ==> lib/formats/fdupes.c
Compiling ==> lib/shredder.c
Compiling ==> lib/formats.c
Compiling ==> lib/formats/uniques.c
Compiling ==> lib/formats/pretty.c
Compiling ==> lib/checksums/blake2/blake2xs-ref.c
Compiling ==> lib/checksums/xxhash/xxhash.c
Compiling ==> lib/utilities.c
Compiling ==> lib/pathtricia.c
Compiling ==> lib/cfg.c
Compiling ==> lib/formats/csv.c
Compiling ==> lib/checksums/blake2/blake2s-ref.c
Compiling ==> lib/checksums/metrohash128.c
Compiling ==> src/rmlint.c
Compiling ==> lib/session.c
Compiling ==> lib/file.c
Compiling ==> lib/formats/timestamp.c
Compiling ==> lib/formats/null.c
Compiling ==> lib/checksums/blake2/blake2xb-ref.c
Compiling ==> lib/treemerge.c
Compiling ==> lib/md-scheduler.c
Compiling ==> lib/hash-utility.c
Compiling ==> lib/formats/_equal.c
Compiling ==> lib/checksums/blake2/blake2bp-ref.c
Compiling ==> lib/replay.c
Compiling ==> lib/cmdline.c
Compiling ==> lib/formats/summary.c
Compiling ==> lib/formats/json.c
Compiling ==> lib/checksums/blake2/blake2sp-ref.c
Compiling ==> lib/traverse.c
Compiling ==> lib/hasher.c
Compiling ==> lib/fts/fts.c
Linking Static Library ==> librmlint.a
Ranlib Library ==> librmlint.a
Linking Program ==> rmlint
scons: done building targets.



$ ./rmlint --version
version 2.10.1 compiled: Dec 19 2020 at [12:45:54] ""Ludicrous Lemur"" (rev 17ada44f)
compiled with: -mounts -nonstripped -fiemap +sha512 +bigfiles +intl +replay +xattr -btrfs-support

rmlint was written by Christopher <sahib> Pahl and Daniel <SeeSpotRun> Thomas.
The code at https://github.com/sahib/rmlint is licensed under the terms of the GPLv3.



$ RM_TS_USE_VALGRIND=1 RM_TS_PRINT_CMD=1 RM_TS_PEDANTIC=1 nosetests-3.4 -d -s -a '!slow !known_issue' tests/test_options/test_symlinks.py tests/test_robustness/test_badlinks_as_args.py
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
.Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -T df,dd --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
.Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -F --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -f -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -@ -S a --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
...Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --with-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --without-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --fake-pathindex-as-disk -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --fake-fiemap -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b -P -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b -PP -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --limit-mem 1M --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --buffered-read -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --threads=1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --shred-never-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --shred-always-wait -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --no-mount-table -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=murmur -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=metro -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=metro256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=md5 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha1 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha3-256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha3-384 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha3-512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=blake2s -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=blake2b -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=blake2sp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=blake2bp -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=xxhash -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=highway64 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=highway128 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=highway256 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=paranoid -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
Running cmd from `/Users/chris/Code/rmlint`: /Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir /private/tmp/rmlint-unit-testdir/link_a /private/tmp/rmlint-unit-testdir/link_b --algorithm=sha512 -o json:/tmp/out.json -c json:oneline
...
----------------------------------------------------------------------
Ran 8 tests in 33.572s

OK",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,25,https://github.com/sahib/rmlint/pull/444#issuecomment-748593032,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","You know, I've tried to run the full test suite a couple of times, but always run out of patience after 30 mins or so. Pretty deep into it, IIRC, it prints a line F.. and then seems to hang longer than I care to wait. The system is still loaded from it, and I end up having to close out the terminal.

Welp, interesting. Does that still happen if you just do:
# That takes about 60s on my rather slow laptop:
$ nosetests -d -s -a '!slow' tests

Just for background:

RM_TS_USE_VALGRIND=1: will run each test in valgrind, which is very slow
RM_TS_PEDANTIC=1: Runs each test several times with different base options.
-a '!slow !knownissue apparently does not work. It should be -a '!slow' -a '!knownissue', but since we don't have knownissue tags the first part is enough.


Looks good, I think.

Nice.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,26,https://github.com/sahib/rmlint/pull/444#issuecomment-748616308,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","That completed at least. Look's like Apple's touch doesn't like -d.

$ nosetests -d -s -a '!slow' tests
.........EEEEE.............................................................touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
Ftouch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
F..touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
Ftouch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
touch: illegal option -- d
usage:
touch [-A [-][[hh]mm]SS] [-acfhm] [-r file] [-t [[CC]YY]MMDDhhmm[.SS]] file ...
FF.......................................E..................................................
======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_formatters/test_py.py"", line 8, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_formatters/test_sh.py"", line 8, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'psutil')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_mains/test_dedupe.py"", line 8, in <module>
    import psutil
ModuleNotFoundError: No module named 'psutil'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_mains/test_hash.py"", line 7, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_options/test_cache.py"", line 5, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_options/test_stdin.py"", line 6, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
FAIL: test_mtime_window.test_consider_mtime
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_mtime_window.py"", line 36, in test_consider_mtime
    assert len(data) == 2
AssertionError:
    {'description': 'rmlint json-dump of lint files', 'cwd': '/Users/chris/Code/rmlint/', 'args': '/Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --mtime-window=0 -o json:/tmp/out.json -c json:oneline', 'version': '2.10.1', 'rev': '17ada44f', 'progress': 0, 'checksum_type': 'blake2b', 'merge_directories': False}, *[], {'aborted': False, 'progress': 100, 'total_files': 4, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 0, 'duplicate_sets': 0, 'total_lint_size': 0} = run_rmlint('--mtime-window=0')
>>  assert len([]) == 2
    assert {'aborted': False, 'progress': 100, 'total_files': 4, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 0, 'duplicate_sets': 0, 'total_lint_size': 0}['total_files'] == 4
    assert {'aborted': False, 'progress': 100, 'total_files': 4, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 0, 'duplicate_sets': 0, 'total_lint_size': 0}['total_lint_size'] == 3


======================================================================
FAIL: test_mtime_window.test_consider_mtime_subsecond
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_mtime_window.py"", line 66, in test_consider_mtime_subsecond
    assert len(data) == 0
AssertionError:
    {'description': 'rmlint json-dump of lint files', 'cwd': '/Users/chris/Code/rmlint/', 'args': '/Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --mtime-window=1.9 -o json:/tmp/out.json -c json:oneline', 'version': '2.10.1', 'rev': '17ada44f', 'progress': 0, 'checksum_type': 'blake2b', 'merge_directories': False}, *[{'id': 855184727, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b6f289a27d4fe90da63c503bfe0a9b761a8f76bb86148565065f040be6d1c3044cf7ded78ef800509bccb4b648e507d88dc6383d67642aadccce443f1534330a', 'path': '/private/tmp/rmlint-unit-testdir/a', 'size': 3, 'depth': 1, 'inode': 8748188040, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608474432.4454415}, {'id': 2524578547, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b6f289a27d4fe90da63c503bfe0a9b761a8f76bb86148565065f040be6d1c3044cf7ded78ef800509bccb4b648e507d88dc6383d67642aadccce443f1534330a', 'path': '/private/tmp/rmlint-unit-testdir/b', 'size': 3, 'depth': 1, 'inode': 8748188041, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608474432.4456284}], {'aborted': False, 'progress': 100, 'total_files': 2, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 1, 'duplicate_sets': 1, 'total_lint_size': 3} = run_rmlint('--mtime-window=1.9')
>>  assert len([{'id': 855184727, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b6f289a27d4fe90da63c503bfe0a9b761a8f76bb86148565065f040be6d1c3044cf7ded78ef800509bccb4b648e507d88dc6383d67642aadccce443f1534330a', 'path': '/private/tmp/rmlint-unit-testdir/a', 'size': 3, 'depth': 1, 'inode': 8748188040, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608474432.4454415}, {'id': 2524578547, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b6f289a27d4fe90da63c503bfe0a9b761a8f76bb86148565065f040be6d1c3044cf7ded78ef800509bccb4b648e507d88dc6383d67642aadccce443f1534330a', 'path': '/private/tmp/rmlint-unit-testdir/b', 'size': 3, 'depth': 1, 'inode': 8748188041, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608474432.4456284}]) == 0


======================================================================
FAIL: test_mtime_window.test_consider_mtime_fail_by_association
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_mtime_window.py"", line 89, in test_consider_mtime_fail_by_association
    assert len(data) == 0
AssertionError:
>>  assert len([{'id': 855184715, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b6f289a27d4fe90da63c503bfe0a9b761a8f76bb86148565065f040be6d1c3044cf7ded78ef800509bccb4b648e507d88dc6383d67642aadccce443f1534330a', 'path': '/private/tmp/rmlint-unit-testdir/a', 'size': 3, 'depth': 1, 'inode': 8748188052, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608474432.6068008}, {'id': 1277086968, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b6f289a27d4fe90da63c503bfe0a9b761a8f76bb86148565065f040be6d1c3044cf7ded78ef800509bccb4b648e507d88dc6383d67642aadccce443f1534330a', 'path': '/private/tmp/rmlint-unit-testdir/c', 'size': 3, 'depth': 1, 'inode': 8748188054, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608474432.6072524}]) == 0
    assert {'aborted': False, 'progress': 100, 'total_files': 3, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 1, 'duplicate_sets': 1, 'total_lint_size': 3}['total_files'] == 3
    assert {'aborted': False, 'progress': 100, 'total_files': 3, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 1, 'duplicate_sets': 1, 'total_lint_size': 3}['total_lint_size'] == 0


======================================================================
FAIL: test_mtime_window.test_mtime_and_unmatched_basenames
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_mtime_window.py"", line 115, in test_mtime_and_unmatched_basenames
    assert len(data) == 2
AssertionError:
>>  assert len([{'id': 2136460892, 'type': 'duplicate_file', 'progress': 100, 'checksum': '0289ad1458eb3749903b23682a42c94f3659600d306fce6e2fce8e5c49bfda5dfd4971c4db287bf888ace21903bd54f30e01b7669421e5a10635a29c7d033eb0', 'path': '/private/tmp/rmlint-unit-testdir/dir1/b', 'size': 3, 'depth': 2, 'inode': 8748188064, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608474432.806419}, {'id': 1989104419, 'type': 'duplicate_file', 'progress': 100, 'checksum': '0289ad1458eb3749903b23682a42c94f3659600d306fce6e2fce8e5c49bfda5dfd4971c4db287bf888ace21903bd54f30e01b7669421e5a10635a29c7d033eb0', 'path': '/private/tmp/rmlint-unit-testdir/dir2/c', 'size': 3, 'depth': 2, 'inode': 8748188066, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608474432.8070312}, {'id': 1973716072, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b6f289a27d4fe90da63c503bfe0a9b761a8f76bb86148565065f040be6d1c3044cf7ded78ef800509bccb4b648e507d88dc6383d67642aadccce443f1534330a', 'path': '/private/tmp/rmlint-unit-testdir/dir1/a', 'size': 3, 'depth': 2, 'inode': 8748188060, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608474432.8058524}, {'id': 3908624190, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b6f289a27d4fe90da63c503bfe0a9b761a8f76bb86148565065f040be6d1c3044cf7ded78ef800509bccb4b648e507d88dc6383d67642aadccce443f1534330a', 'path': '/private/tmp/rmlint-unit-testdir/dir1/c', 'size': 3, 'depth': 2, 'inode': 8748188061, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608474432.8060827}]) == 2
    assert {'aborted': False, 'progress': 100, 'total_files': 6, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 2, 'duplicate_sets': 2, 'total_lint_size': 6}['total_files'] == 6
    assert {'aborted': False, 'progress': 100, 'total_files': 6, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 2, 'duplicate_sets': 2, 'total_lint_size': 6}['total_lint_size'] == 3


======================================================================
FAIL: test_newer_than.test_simple
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_newer_than.py"", line 50, in test_simple
    assert len(data) == expect
AssertionError:
    {'description': 'rmlint json-dump of lint files', 'cwd': '/Users/chris/Code/rmlint/', 'args': '/Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -S a -N 2020-12-20T14:27:14-0500 -o json:/tmp/out.json -c json:oneline', 'version': '2.10.1', 'rev': '17ada44f', 'progress': 0, 'checksum_type': 'blake2b', 'merge_directories': False}, *[], {'aborted': False, 'progress': 100, 'total_files': 3, 'ignored_files': 1, 'ignored_folders': 0, 'duplicates': 0, 'duplicate_sets': 0, 'total_lint_size': 0} = run_rmlint_once('-S a -N ' + '2020-12-20T14:27:14-0500')
>>  assert len([]) == 3


----------------------------------------------------------------------
Ran 172 tests in 72.499s

FAILED (errors=6, failures=5)


I had been using RM_TS_USE_VALGRIND=1 RM_TS_PRINT_CMD=1 RM_TS_PEDANTIC=1 nosetests-3.4 -s -a '!slow !known_issue' to run all tests before. (Not sure if leaving off tests at the end was causing it to pick up anything outside of the tests directory as well.)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/ChrisBaker97,27,https://github.com/sahib/rmlint/pull/444#issuecomment-748626023,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","A little over an hour later...

$ RM_TS_USE_VALGRIND=1 RM_TS_PRINT_CMD=1 RM_TS_PEDANTIC=1 nosetests-3.4 -d -s -a '!slow !known_issue' tests
...
======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_formatters/test_py.py"", line 8, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_formatters/test_sh.py"", line 8, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'psutil')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_mains/test_dedupe.py"", line 8, in <module>
    import psutil
ModuleNotFoundError: No module named 'psutil'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_mains/test_hash.py"", line 7, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_options/test_cache.py"", line 5, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
ERROR: test_replay.test_replay_no_dir
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_replay.py"", line 222, in test_replay_no_dir
    head, *data, footer = run_rmlint(
  File ""/Users/chris/Code/rmlint/tests/utils.py"", line 299, in run_rmlint
    return run_rmlint_pedantic(*args, **kwargs)
  File ""/Users/chris/Code/rmlint/tests/utils.py"", line 258, in run_rmlint_pedantic
    if has_feature('sha512'):
  File ""/Users/chris/Code/rmlint/tests/utils.py"", line 98, in has_feature
    return ('+' + feature) in subprocess.check_output(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/subprocess.py"", line 420, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/subprocess.py"", line 501, in run
    with Popen(*popenargs, **kwargs) as process:
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/subprocess.py"", line 947, in __init__
    self._execute_child(args, executable, preexec_fn, close_fds,
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/subprocess.py"", line 1819, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
FileNotFoundError: [Errno 2] No such file or directory: './rmlint'

======================================================================
ERROR: Failure: ModuleNotFoundError (No module named 'parameterized')
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/failure.py"", line 39, in runTest
    raise self.exc_val.with_traceback(self.tb)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/loader.py"", line 417, in loadTestsFromName
    module = self.importer.importFromPath(
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 47, in importFromPath
    return self.importFromDir(dir_path, fqname)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/importer.py"", line 94, in importFromDir
    mod = load_module(part_fqname, fh, filename, desc)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 234, in load_module
    return load_source(name, filename, file)
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/imp.py"", line 171, in load_source
    module = _load(spec)
  File ""<frozen importlib._bootstrap>"", line 711, in _load
  File ""<frozen importlib._bootstrap>"", line 680, in _load_unlocked
  File ""<frozen importlib._bootstrap_external>"", line 790, in exec_module
  File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed
  File ""/Users/chris/Code/rmlint/tests/test_options/test_stdin.py"", line 6, in <module>
    from parameterized import parameterized
ModuleNotFoundError: No module named 'parameterized'

======================================================================
FAIL: test_merge_directories.test_equal_content_different_layout
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_merge_directories.py"", line 440, in test_equal_content_different_layout
    head, *data, footer = run_rmlint('-p -D --rank-by a')
  File ""/Users/chris/Code/rmlint/tests/utils.py"", line 299, in run_rmlint
    return run_rmlint_pedantic(*args, **kwargs)
  File ""/Users/chris/Code/rmlint/tests/utils.py"", line 290, in run_rmlint_pedantic
    raise AssertionError(""Optimisation too optimized: "" + option)
AssertionError: Optimisation too optimized: --algorithm=sha1
    <module 'pprint' from '/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/pprint.py'>.<module 'pprint' from '/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/pprint.py'>([{'description': 'rmlint json-dump of lint files', 'cwd': '/Users/chris/Code/rmlint/', 'args': '/Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -p -D --rank-by a --algorithm=md5 -o json:/tmp/out.json -c json:oneline', 'version': '2.10.1', 'rev': '17ada44f', 'progress': 0, 'checksum_type': 'md5', 'merge_directories': True}, {'id': 4194910784, 'type': 'part_of_directory', 'progress': 100, 'checksum': 'f0a4058fd33489695d53df156b77c724', 'path': '/private/tmp/rmlint-unit-testdir/tree-a/sub1/y', 'size': 3, 'depth': 3, 'inode': 8748194687, 'disk_id': 16777222, 'is_original': False, 'parent_path': '/private/tmp/rmlint-unit-testdir/tree-a/sub1', 'mtime': 1608475774.4258957}, {'id': 2703645375, 'type': 'part_of_directory', 'progress': 100, 'checksum': 'f561aaf6ef0bf14d4208bb46a4ccb3ad', 'path': '/private/tmp/rmlint-unit-testdir/tree-a/sub2/x', 'size': 3, 'depth': 3, 'inode': 8748194685, 'disk_id': 16777222, 'is_original': False, 'parent_path': '/private/tmp/rmlint-unit-testdir/tree-a/sub2', 'mtime': 1608475774.4254923}, {'id': 4255397530, 'type': 'part_of_directory', 'progress': 100, 'checksum': 'f561aaf6ef0bf14d4208bb46a4ccb3ad', 'path': '/private/tmp/rmlint-unit-testdir/tree-b/x', 'size': 3, 'depth': 2, 'inode': 8748194689, 'disk_id': 16777222, 'is_original': True, 'parent_path': '/private/tmp/rmlint-unit-testdir/tree-b', 'mtime': 1608475774.4264994}, {'id': 1977235119, 'type': 'part_of_directory', 'progress': 100, 'checksum': 'f0a4058fd33489695d53df156b77c724', 'path': '/private/tmp/rmlint-unit-testdir/tree-b/y', 'size': 3, 'depth': 2, 'inode': 8748194691, 'disk_id': 16777222, 'is_original': True, 'parent_path': '/private/tmp/rmlint-unit-testdir/tree-b', 'mtime': 1608475774.426853}, {'id': 1693209562, 'type': 'duplicate_dir', 'progress': 100, 'checksum': '05c5af793c3f78241f5b6453cfbb7489', 'path': '/private/tmp/rmlint-unit-testdir/tree-a', 'size': 6, 'depth': 4, 'inode': 8748194683, 'disk_id': 16777222, 'is_original': True, 'n_children': 2, 'twins': 2, 'mtime': 1608475774.425696}, {'id': 1282648705, 'type': 'duplicate_dir', 'progress': 100, 'checksum': '05c5af793c3f78241f5b6453cfbb7489', 'path': '/private/tmp/rmlint-unit-testdir/tree-b', 'size': 6, 'depth': 4, 'inode': 8748194688, 'disk_id': 16777222, 'is_original': False, 'n_children': 2, 'twins': 2, 'mtime': 1608475774.4267452}, {'aborted': False, 'progress': 100, 'total_files': 4, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 2, 'duplicate_sets': 2, 'total_lint_size': 6}])
    <module 'pprint' from '/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/pprint.py'>.<module 'pprint' from '/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/pprint.py'>([{'description': 'rmlint json-dump of lint files', 'cwd': '/Users/chris/Code/rmlint/', 'args': '/Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -p -D --rank-by a --algorithm=sha1 -o json:/tmp/out.json -c json:oneline', 'version': '2.10.1', 'rev': '17ada44f', 'progress': 0, 'checksum_type': 'sha1', 'merge_directories': True}, {'id': 3843750055, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b60d121b438a380c343d5ec3c2037564b82ffef3', 'path': '/private/tmp/rmlint-unit-testdir/tree-a/sub2/x', 'size': 3, 'depth': 3, 'inode': 8748194685, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608475774.4254923}, {'id': 3113784450, 'type': 'duplicate_file', 'progress': 100, 'checksum': 'b60d121b438a380c343d5ec3c2037564b82ffef3', 'path': '/private/tmp/rmlint-unit-testdir/tree-b/x', 'size': 3, 'depth': 2, 'inode': 8748194689, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608475774.4264994}, {'id': 2754604867, 'type': 'duplicate_file', 'progress': 100, 'checksum': '186154712b2d5f6791d85b9a0987b98fa231779c', 'path': '/private/tmp/rmlint-unit-testdir/tree-a/sub1/y', 'size': 3, 'depth': 3, 'inode': 8748194687, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608475774.4258957}, {'id': 737975212, 'type': 'duplicate_file', 'progress': 100, 'checksum': '186154712b2d5f6791d85b9a0987b98fa231779c', 'path': '/private/tmp/rmlint-unit-testdir/tree-b/y', 'size': 3, 'depth': 2, 'inode': 8748194691, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608475774.426853}, {'aborted': False, 'progress': 100, 'total_files': 4, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 2, 'duplicate_sets': 2, 'total_lint_size': 6}])
>>  raise AssertionError(""Optimisation too optimized: "" + '--algorithm=sha1')


======================================================================
FAIL: test_mtime_window.test_consider_mtime
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_mtime_window.py"", line 36, in test_consider_mtime
    assert len(data) == 2
AssertionError:
    {'description': 'rmlint json-dump of lint files', 'cwd': '/Users/chris/Code/rmlint/', 'args': '/Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --mtime-window=0 --algorithm=sha512 -o json:/tmp/out.json -c json:oneline', 'version': '2.10.1', 'rev': '17ada44f', 'progress': 0, 'checksum_type': 'sha512', 'merge_directories': False}, *[], {'aborted': False, 'progress': 100, 'total_files': 4, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 0, 'duplicate_sets': 0, 'total_lint_size': 0} = run_rmlint('--mtime-window=0')
>>  assert len([]) == 2
    assert {'aborted': False, 'progress': 100, 'total_files': 4, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 0, 'duplicate_sets': 0, 'total_lint_size': 0}['total_files'] == 4
    assert {'aborted': False, 'progress': 100, 'total_files': 4, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 0, 'duplicate_sets': 0, 'total_lint_size': 0}['total_lint_size'] == 3


======================================================================
FAIL: test_mtime_window.test_consider_mtime_subsecond
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_mtime_window.py"", line 66, in test_consider_mtime_subsecond
    assert len(data) == 0
AssertionError:
    {'description': 'rmlint json-dump of lint files', 'cwd': '/Users/chris/Code/rmlint/', 'args': '/Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir --mtime-window=1.9 --algorithm=sha512 -o json:/tmp/out.json -c json:oneline', 'version': '2.10.1', 'rev': '17ada44f', 'progress': 0, 'checksum_type': 'sha512', 'merge_directories': False}, *[{'id': 214529317, 'type': 'duplicate_file', 'progress': 100, 'checksum': '9057ff1aa9509b2a0af624d687461d2bbeb07e2f37d953b1ce4a9dc921a7f19c45dc35d7c5363b373792add57d0d7dc41596e1c585d6ef7844cdf8ae87af443f', 'path': '/private/tmp/rmlint-unit-testdir/a', 'size': 3, 'depth': 1, 'inode': 8748194949, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608475835.264542}, {'id': 2823447171, 'type': 'duplicate_file', 'progress': 100, 'checksum': '9057ff1aa9509b2a0af624d687461d2bbeb07e2f37d953b1ce4a9dc921a7f19c45dc35d7c5363b373792add57d0d7dc41596e1c585d6ef7844cdf8ae87af443f', 'path': '/private/tmp/rmlint-unit-testdir/b', 'size': 3, 'depth': 1, 'inode': 8748194950, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608475835.264883}], {'aborted': False, 'progress': 100, 'total_files': 2, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 1, 'duplicate_sets': 1, 'total_lint_size': 3} = run_rmlint('--mtime-window=1.9')
>>  assert len([{'id': 214529317, 'type': 'duplicate_file', 'progress': 100, 'checksum': '9057ff1aa9509b2a0af624d687461d2bbeb07e2f37d953b1ce4a9dc921a7f19c45dc35d7c5363b373792add57d0d7dc41596e1c585d6ef7844cdf8ae87af443f', 'path': '/private/tmp/rmlint-unit-testdir/a', 'size': 3, 'depth': 1, 'inode': 8748194949, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608475835.264542}, {'id': 2823447171, 'type': 'duplicate_file', 'progress': 100, 'checksum': '9057ff1aa9509b2a0af624d687461d2bbeb07e2f37d953b1ce4a9dc921a7f19c45dc35d7c5363b373792add57d0d7dc41596e1c585d6ef7844cdf8ae87af443f', 'path': '/private/tmp/rmlint-unit-testdir/b', 'size': 3, 'depth': 1, 'inode': 8748194950, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608475835.264883}]) == 0


======================================================================
FAIL: test_mtime_window.test_consider_mtime_fail_by_association
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_mtime_window.py"", line 89, in test_consider_mtime_fail_by_association
    assert len(data) == 0
AssertionError:
>>  assert len([{'id': 214529401, 'type': 'duplicate_file', 'progress': 100, 'checksum': '9057ff1aa9509b2a0af624d687461d2bbeb07e2f37d953b1ce4a9dc921a7f19c45dc35d7c5363b373792add57d0d7dc41596e1c585d6ef7844cdf8ae87af443f', 'path': '/private/tmp/rmlint-unit-testdir/a', 'size': 3, 'depth': 1, 'inode': 8748195033, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608475855.7154937}, {'id': 1915661514, 'type': 'duplicate_file', 'progress': 100, 'checksum': '9057ff1aa9509b2a0af624d687461d2bbeb07e2f37d953b1ce4a9dc921a7f19c45dc35d7c5363b373792add57d0d7dc41596e1c585d6ef7844cdf8ae87af443f', 'path': '/private/tmp/rmlint-unit-testdir/c', 'size': 3, 'depth': 1, 'inode': 8748195035, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608475855.7160108}]) == 0
    assert {'aborted': False, 'progress': 100, 'total_files': 3, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 1, 'duplicate_sets': 1, 'total_lint_size': 3}['total_files'] == 3
    assert {'aborted': False, 'progress': 100, 'total_files': 3, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 1, 'duplicate_sets': 1, 'total_lint_size': 3}['total_lint_size'] == 0


======================================================================
FAIL: test_mtime_window.test_mtime_and_unmatched_basenames
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_mtime_window.py"", line 115, in test_mtime_and_unmatched_basenames
    assert len(data) == 2
AssertionError:
>>  assert len([{'id': 3687803558, 'type': 'duplicate_file', 'progress': 100, 'checksum': '97848439adcede20ef21ae7224e36960f0c3c967ba22403d39865bf94bc6a01ca7b64634b7be2d4a30384176bd8472c1fe856f8c6a966c41eb4e06ad8dac7841', 'path': '/private/tmp/rmlint-unit-testdir/dir1/b', 'size': 3, 'depth': 2, 'inode': 8748195119, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608475876.4546227}, {'id': 3524786117, 'type': 'duplicate_file', 'progress': 100, 'checksum': '97848439adcede20ef21ae7224e36960f0c3c967ba22403d39865bf94bc6a01ca7b64634b7be2d4a30384176bd8472c1fe856f8c6a966c41eb4e06ad8dac7841', 'path': '/private/tmp/rmlint-unit-testdir/dir2/c', 'size': 3, 'depth': 2, 'inode': 8748195121, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608475876.4552174}, {'id': 1268049312, 'type': 'duplicate_file', 'progress': 100, 'checksum': '9057ff1aa9509b2a0af624d687461d2bbeb07e2f37d953b1ce4a9dc921a7f19c45dc35d7c5363b373792add57d0d7dc41596e1c585d6ef7844cdf8ae87af443f', 'path': '/private/tmp/rmlint-unit-testdir/dir1/a', 'size': 3, 'depth': 2, 'inode': 8748195115, 'disk_id': 16777222, 'is_original': True, 'twins': 2, 'mtime': 1608475876.453674}, {'id': 3603480304, 'type': 'duplicate_file', 'progress': 100, 'checksum': '9057ff1aa9509b2a0af624d687461d2bbeb07e2f37d953b1ce4a9dc921a7f19c45dc35d7c5363b373792add57d0d7dc41596e1c585d6ef7844cdf8ae87af443f', 'path': '/private/tmp/rmlint-unit-testdir/dir1/c', 'size': 3, 'depth': 2, 'inode': 8748195116, 'disk_id': 16777222, 'is_original': False, 'twins': 2, 'mtime': 1608475876.4541006}]) == 2
    assert {'aborted': False, 'progress': 100, 'total_files': 6, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 2, 'duplicate_sets': 2, 'total_lint_size': 6}['total_files'] == 6
    assert {'aborted': False, 'progress': 100, 'total_files': 6, 'ignored_files': 0, 'ignored_folders': 0, 'duplicates': 2, 'duplicate_sets': 2, 'total_lint_size': 6}['total_lint_size'] == 3


======================================================================
FAIL: test_newer_than.test_simple
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/chris/.pyenv/versions/3.9.0/lib/python3.9/site-packages/nose/case.py"", line 198, in runTest
    self.test(*self.arg)
  File ""/Users/chris/Code/rmlint/tests/test_options/test_newer_than.py"", line 50, in test_simple
    assert len(data) == expect
AssertionError:
    {'description': 'rmlint json-dump of lint files', 'cwd': '/Users/chris/Code/rmlint/', 'args': '/Users/chris/Code/rmlint/rmlint -V /private/tmp/rmlint-unit-testdir -S a -N 2020-12-20T14:51:38-0500 -o json:/tmp/out.json -c json:oneline', 'version': '2.10.1', 'rev': '17ada44f', 'progress': 0, 'checksum_type': 'blake2b', 'merge_directories': False}, *[], {'aborted': False, 'progress': 100, 'total_files': 3, 'ignored_files': 1, 'ignored_folders': 0, 'duplicates': 0, 'duplicate_sets': 0, 'total_lint_size': 0} = run_rmlint_once('-S a -N ' + '2020-12-20T14:51:38-0500')
>>  assert len([]) == 3


----------------------------------------------------------------------
Ran 172 tests in 4128.897s

FAILED (errors=7, failures=6)


Full output, if you need it.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,444,2020-11-12T18:55:03Z,2020-12-20T16:25:20Z,2020-12-20T20:56:19Z,CLOSED,False,1,1,1,https://github.com/ChrisBaker97,cfg.c: fix bug introduced in 2.10.0,1,[],https://github.com/sahib/rmlint/pull/444,https://github.com/sahib,28,https://github.com/sahib/rmlint/pull/444#issuecomment-748629030,"This reversion back to the code from version 2.9.0 addresses #438. Obviously there is some functionality here that's being implemented that I'm not familiar enough with the project to understand, but hopefully this gives someone a head start in trying to track down the bug, while still keeping the intended new behavior.","Thanks @ChrisBaker97,
some errors happen because you're missing some test dependencies (parametrized for example). You can install them with pip3 install -r test-requirements.txt. Some of the other errors need more debugging - can't tell if they hint at bugs. Would be good if somebody with macOS could take a look and make a PR eventually.
But I think the original cause of this issue has been resolved, so I will close that ticket here. Thanks all.",True,{'THUMBS_UP': ['https://github.com/ChrisBaker97']}
sahib/rmlint,https://github.com/sahib/rmlint,449,2020-12-08T14:59:46Z,2020-12-18T11:33:19Z,2020-12-18T11:33:20Z,CLOSED,False,3,0,1,https://github.com/nealmcb,handle part_of_directory in py.py,1,[],https://github.com/sahib/rmlint/pull/449,https://github.com/nealmcb,1,https://github.com/sahib/rmlint/pull/449,"Beginning of a fix to #448
This will at least allow the python script to run to completion with the -n option.
But since I'm not really sure how to handle part_of_directory, please don't use this for real!
It is untested.","Beginning of a fix to #448
This will at least allow the python script to run to completion with the -n option.
But since I'm not really sure how to handle part_of_directory, please don't use this for real!
It is untested.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,449,2020-12-08T14:59:46Z,2020-12-18T11:33:19Z,2020-12-18T11:33:20Z,CLOSED,False,3,0,1,https://github.com/nealmcb,handle part_of_directory in py.py,1,[],https://github.com/sahib/rmlint/pull/449,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/449#issuecomment-748037362,"Beginning of a fix to #448
This will at least allow the python script to run to completion with the -n option.
But since I'm not really sure how to handle part_of_directory, please don't use this for real!
It is untested.",Thanks I changed it in 84b5016 so that it's safer to add new types and still not to crash in that case.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,450,2020-12-10T07:05:44Z,2020-12-17T14:25:20Z,2020-12-17T14:25:20Z,MERGED,True,2,2,1,https://github.com/timgates42,"docs: fix simple typo, convinience -> convenience",1,[],https://github.com/sahib/rmlint/pull/450,https://github.com/timgates42,1,https://github.com/sahib/rmlint/pull/450,"There is a small typo in gui/shredder/tree.py.
Should read convenience rather than convinience.
Semi-automated pull request generated by
https://github.com/timgates42/meticulous/blob/master/docs/NOTE.md","There is a small typo in gui/shredder/tree.py.
Should read convenience rather than convinience.
Semi-automated pull request generated by
https://github.com/timgates42/meticulous/blob/master/docs/NOTE.md",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,450,2020-12-10T07:05:44Z,2020-12-17T14:25:20Z,2020-12-17T14:25:20Z,MERGED,True,2,2,1,https://github.com/timgates42,"docs: fix simple typo, convinience -> convenience",1,[],https://github.com/sahib/rmlint/pull/450,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/450#issuecomment-747469394,"There is a small typo in gui/shredder/tree.py.
Should read convenience rather than convinience.
Semi-automated pull request generated by
https://github.com/timgates42/meticulous/blob/master/docs/NOTE.md",Thanks @timgates42.,True,{'THUMBS_UP': ['https://github.com/timgates42']}
sahib/rmlint,https://github.com/sahib/rmlint,451,2020-12-12T17:08:26Z,2020-12-17T14:24:45Z,2020-12-17T14:24:45Z,MERGED,True,60,60,33,https://github.com/Gelma,Fix typos,1,[],https://github.com/sahib/rmlint/pull/451,https://github.com/Gelma,1,https://github.com/sahib/rmlint/pull/451,"Thanks a lot for your work.
Here's a stupid typos fix.","Thanks a lot for your work.
Here's a stupid typos fix.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,451,2020-12-12T17:08:26Z,2020-12-17T14:24:45Z,2020-12-17T14:24:45Z,MERGED,True,60,60,33,https://github.com/Gelma,Fix typos,1,[],https://github.com/sahib/rmlint/pull/451,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/451#issuecomment-747469042,"Thanks a lot for your work.
Here's a stupid typos fix.",Thanks @Gelma!,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,455,2020-12-14T22:39:29Z,2020-12-18T10:54:29Z,2020-12-18T10:54:30Z,MERGED,True,6,1,1,https://github.com/bkaestner,test_formatter: sh: check whether file still exists,1,[],https://github.com/sahib/rmlint/pull/455,https://github.com/bkaestner,1,https://github.com/sahib/rmlint/pull/455,"Before b9d328b ""-p"" (aka paranoid mode) deleted files even if the original file differed from the (not anymore) duplicate.
This wasn't captured by the test due to the following reasons:

the expected error message was included in rmlint's output
Python's ""open(..., 'w')"" command creates the given file anew

To make sure that our file is still sane and sound, we need to reread it from the drive and survey its content.

To test this pull request, I've used scons test on develop on the current HEAD but also on the old sh.sh variant:
scons test # runs fine
cat > remove-check.patch << 'EOF'
diff --git a/lib/formats/sh.sh b/lib/formats/sh.sh
index b5e495d5..39ed3b99 100644
--- a/lib/formats/sh.sh
+++ b/lib/formats/sh.sh
@@ -160,7 +160,6 @@ original_check() {
     else
         if ! check_for_equality ""$1"" ""$2""; then
             printf ""${COL_RED}^^^^^^ Error: files no longer identical - cancelling.....${COL_RESET}\n""
-            return 1
         fi
     fi
 }
EOF
git apply remove-check.patch
scons test # fails as expected with new test




old test
new test




before b9d328b
pass, but c is deleted!
fails, because c is deleted


after b9d328b
pass, but c is not checked for deletion/change
pass



I hope that this variant of test_paranoia makes rmlint a more robust. Thanks for your work on an amazing tool!
Fixes #454","Before b9d328b ""-p"" (aka paranoid mode) deleted files even if the original file differed from the (not anymore) duplicate.
This wasn't captured by the test due to the following reasons:

the expected error message was included in rmlint's output
Python's ""open(..., 'w')"" command creates the given file anew

To make sure that our file is still sane and sound, we need to reread it from the drive and survey its content.

To test this pull request, I've used scons test on develop on the current HEAD but also on the old sh.sh variant:
scons test # runs fine
cat > remove-check.patch << 'EOF'
diff --git a/lib/formats/sh.sh b/lib/formats/sh.sh
index b5e495d5..39ed3b99 100644
--- a/lib/formats/sh.sh
+++ b/lib/formats/sh.sh
@@ -160,7 +160,6 @@ original_check() {
     else
         if ! check_for_equality ""$1"" ""$2""; then
             printf ""${COL_RED}^^^^^^ Error: files no longer identical - cancelling.....${COL_RESET}\n""
-            return 1
         fi
     fi
 }
EOF
git apply remove-check.patch
scons test # fails as expected with new test




old test
new test




before b9d328b
pass, but c is deleted!
fails, because c is deleted


after b9d328b
pass, but c is not checked for deletion/change
pass



I hope that this variant of test_paranoia makes rmlint a more robust. Thanks for your work on an amazing tool!
Fixes #454",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,455,2020-12-14T22:39:29Z,2020-12-18T10:54:29Z,2020-12-18T10:54:30Z,MERGED,True,6,1,1,https://github.com/bkaestner,test_formatter: sh: check whether file still exists,1,[],https://github.com/sahib/rmlint/pull/455,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/455#issuecomment-748020586,"Before b9d328b ""-p"" (aka paranoid mode) deleted files even if the original file differed from the (not anymore) duplicate.
This wasn't captured by the test due to the following reasons:

the expected error message was included in rmlint's output
Python's ""open(..., 'w')"" command creates the given file anew

To make sure that our file is still sane and sound, we need to reread it from the drive and survey its content.

To test this pull request, I've used scons test on develop on the current HEAD but also on the old sh.sh variant:
scons test # runs fine
cat > remove-check.patch << 'EOF'
diff --git a/lib/formats/sh.sh b/lib/formats/sh.sh
index b5e495d5..39ed3b99 100644
--- a/lib/formats/sh.sh
+++ b/lib/formats/sh.sh
@@ -160,7 +160,6 @@ original_check() {
     else
         if ! check_for_equality ""$1"" ""$2""; then
             printf ""${COL_RED}^^^^^^ Error: files no longer identical - cancelling.....${COL_RESET}\n""
-            return 1
         fi
     fi
 }
EOF
git apply remove-check.patch
scons test # fails as expected with new test




old test
new test




before b9d328b
pass, but c is deleted!
fails, because c is deleted


after b9d328b
pass, but c is not checked for deletion/change
pass



I hope that this variant of test_paranoia makes rmlint a more robust. Thanks for your work on an amazing tool!
Fixes #454",Makes sense. Thanks for fixing this oversight.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,457,2020-12-20T20:44:18Z,2020-12-21T16:10:01Z,2020-12-21T16:10:01Z,MERGED,True,28,1,1,https://github.com/ChrisBaker97,docs: testing: add info on test dependencies / notes for Mac developers,3,[],https://github.com/sahib/rmlint/pull/457,https://github.com/ChrisBaker97,1,https://github.com/sahib/rmlint/pull/457,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,457,2020-12-20T20:44:18Z,2020-12-21T16:10:01Z,2020-12-21T16:10:01Z,MERGED,True,28,1,1,https://github.com/ChrisBaker97,docs: testing: add info on test dependencies / notes for Mac developers,3,[],https://github.com/sahib/rmlint/pull/457,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/457#issuecomment-749052879,,Thanks Chris! 👍,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,465,2021-01-14T12:00:14Z,2021-05-16T22:51:43Z,2021-05-16T22:51:44Z,CLOSED,False,3,2,1,https://github.com/s-rogonov,fix issue #385,1,[],https://github.com/sahib/rmlint/pull/465,https://github.com/s-rogonov,1,https://github.com/sahib/rmlint/pull/465,"I hope I find a solution of the issue #385.
current behavior:

reads json properties
overwrites ""is_original"" prop to first-in-the-duplicate group

suggested behavior:

reads json properties
keeps ""is_original"" prop unchanged (due to gui ""shredder"" overwrites it to save manually toggled files)","I hope I find a solution of the issue #385.
current behavior:

reads json properties
overwrites ""is_original"" prop to first-in-the-duplicate group

suggested behavior:

reads json properties
keeps ""is_original"" prop unchanged (due to gui ""shredder"" overwrites it to save manually toggled files)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,465,2021-01-14T12:00:14Z,2021-05-16T22:51:43Z,2021-05-16T22:51:44Z,CLOSED,False,3,2,1,https://github.com/s-rogonov,fix issue #385,1,[],https://github.com/sahib/rmlint/pull/465,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/465#issuecomment-802559894,"I hope I find a solution of the issue #385.
current behavior:

reads json properties
overwrites ""is_original"" prop to first-in-the-duplicate group

suggested behavior:

reads json properties
keeps ""is_original"" prop unchanged (due to gui ""shredder"" overwrites it to save manually toggled files)","Unfortunately this is causing this test to fail:  https://github.com/sahib/rmlint/blob/develop/tests/test_options/test_replay.py#L128-L149
Basically for command-line users, sometimes it's useful to re-run but with different (automated) ranking of originals.  Your proposed change breaks this.
A workaround might be to add an option -S j to rank originals based on their prior ranking in the json file.  Although it gets a bit messy if new files are added between runs (or go missing).",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,465,2021-01-14T12:00:14Z,2021-05-16T22:51:43Z,2021-05-16T22:51:44Z,CLOSED,False,3,2,1,https://github.com/s-rogonov,fix issue #385,1,[],https://github.com/sahib/rmlint/pull/465,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/465#issuecomment-841889048,"I hope I find a solution of the issue #385.
current behavior:

reads json properties
overwrites ""is_original"" prop to first-in-the-duplicate group

suggested behavior:

reads json properties
keeps ""is_original"" prop unchanged (due to gui ""shredder"" overwrites it to save manually toggled files)","Underlying issue should be addressed by #482.
New option --keep-cached-originals will respect is_original property from json file.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,467,2021-01-21T06:06:33Z,2021-03-27T01:43:15Z,2021-03-28T03:07:38Z,MERGED,True,1604,1221,54,https://github.com/SeeSpotRun,Clone hardlinks,54,[],https://github.com/sahib/rmlint/pull/467,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/467,"Fixes #466.
This PR enables hardlink-clones to be converted to reflink-clones via a single command rmlint --dedupe <original> <hardlink>, while preserving file permissions and times.
Note that converting hardlink to reflink doesn't free any space, in fact it consumes a little bit for the necessary metadata.  The advantage is that it de-links the two files' metadata, so that subsequent changes to permissions, access times etc are independent for the two files.  Also modifications such as appending data to the original won't affect the reflink the way it would the hardlink.
Note that this implementation does temporarily delete the hardlink, so an untimely crash or error could see the hardlink lost (but not the original file).  The workaround would require generating a unique temporary file name for the reflink.
Happy to discuss.","Fixes #466.
This PR enables hardlink-clones to be converted to reflink-clones via a single command rmlint --dedupe <original> <hardlink>, while preserving file permissions and times.
Note that converting hardlink to reflink doesn't free any space, in fact it consumes a little bit for the necessary metadata.  The advantage is that it de-links the two files' metadata, so that subsequent changes to permissions, access times etc are independent for the two files.  Also modifications such as appending data to the original won't affect the reflink the way it would the hardlink.
Note that this implementation does temporarily delete the hardlink, so an untimely crash or error could see the hardlink lost (but not the original file).  The workaround would require generating a unique temporary file name for the reflink.
Happy to discuss.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,467,2021-01-21T06:06:33Z,2021-03-27T01:43:15Z,2021-03-28T03:07:38Z,MERGED,True,1604,1221,54,https://github.com/SeeSpotRun,Clone hardlinks,54,[],https://github.com/sahib/rmlint/pull/467,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/467#issuecomment-798821202,"Fixes #466.
This PR enables hardlink-clones to be converted to reflink-clones via a single command rmlint --dedupe <original> <hardlink>, while preserving file permissions and times.
Note that converting hardlink to reflink doesn't free any space, in fact it consumes a little bit for the necessary metadata.  The advantage is that it de-links the two files' metadata, so that subsequent changes to permissions, access times etc are independent for the two files.  Also modifications such as appending data to the original won't affect the reflink the way it would the hardlink.
Note that this implementation does temporarily delete the hardlink, so an untimely crash or error could see the hardlink lost (but not the original file).  The workaround would require generating a unique temporary file name for the reflink.
Happy to discuss.",I haven't gone any further with this because it can't be done atomically so there is some risk that the hardlink gets deleted or renamed.  I could do a bit more work to make it more robust but will wait to see if there is any more interest in #466,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,467,2021-01-21T06:06:33Z,2021-03-27T01:43:15Z,2021-03-28T03:07:38Z,MERGED,True,1604,1221,54,https://github.com/SeeSpotRun,Clone hardlinks,54,[],https://github.com/sahib/rmlint/pull/467,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/467#issuecomment-802416361,"Fixes #466.
This PR enables hardlink-clones to be converted to reflink-clones via a single command rmlint --dedupe <original> <hardlink>, while preserving file permissions and times.
Note that converting hardlink to reflink doesn't free any space, in fact it consumes a little bit for the necessary metadata.  The advantage is that it de-links the two files' metadata, so that subsequent changes to permissions, access times etc are independent for the two files.  Also modifications such as appending data to the original won't affect the reflink the way it would the hardlink.
Note that this implementation does temporarily delete the hardlink, so an untimely crash or error could see the hardlink lost (but not the original file).  The workaround would require generating a unique temporary file name for the reflink.
Happy to discuss.",Ok managed to make it reasonably atomic by cloning to a tempfile in the target dir and then atomically renaming that over the top of the hardlink.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,470,2021-02-11T07:53:25Z,2021-03-08T06:17:26Z,2021-03-08T06:17:26Z,MERGED,True,28,28,1,https://github.com/kdm9,Move all CC checks after setting CC/CXX vars,1,[],https://github.com/sahib/rmlint/pull/470,https://github.com/kdm9,1,https://github.com/sahib/rmlint/pull/470,"Hello,
While trying to package rmlint for the conda package manager, I came across the following issue: compiler paths and flags from os.environ are incorporated into the build environment after some checks (namely CheckCC()) execute. Therefore, if the default values of scons' CC etc. are non-functional (as in a cross-build environment where CC is named by host arch etc.), then these tests fail, aborting the build before paths to CC and CXX are read from environment variables. This simply shifts the block of code that overwrites scons' CC/CXX etc up before any checks are performed. The attached patch seems to allow successful compilation & install at least in Conda's build environment.
Best,
Kevin","Hello,
While trying to package rmlint for the conda package manager, I came across the following issue: compiler paths and flags from os.environ are incorporated into the build environment after some checks (namely CheckCC()) execute. Therefore, if the default values of scons' CC etc. are non-functional (as in a cross-build environment where CC is named by host arch etc.), then these tests fail, aborting the build before paths to CC and CXX are read from environment variables. This simply shifts the block of code that overwrites scons' CC/CXX etc up before any checks are performed. The attached patch seems to allow successful compilation & install at least in Conda's build environment.
Best,
Kevin",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,470,2021-02-11T07:53:25Z,2021-03-08T06:17:26Z,2021-03-08T06:17:26Z,MERGED,True,28,28,1,https://github.com/kdm9,Move all CC checks after setting CC/CXX vars,1,[],https://github.com/sahib/rmlint/pull/470,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/470#issuecomment-792498745,"Hello,
While trying to package rmlint for the conda package manager, I came across the following issue: compiler paths and flags from os.environ are incorporated into the build environment after some checks (namely CheckCC()) execute. Therefore, if the default values of scons' CC etc. are non-functional (as in a cross-build environment where CC is named by host arch etc.), then these tests fail, aborting the build before paths to CC and CXX are read from environment variables. This simply shifts the block of code that overwrites scons' CC/CXX etc up before any checks are performed. The attached patch seems to allow successful compilation & install at least in Conda's build environment.
Best,
Kevin",Thanks @kdm9,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,474,2021-03-05T22:06:23Z,2021-03-08T06:16:21Z,2021-03-08T06:16:21Z,MERGED,True,3,3,1,https://github.com/Fat-Zer,Fix print of config parameters,1,[],https://github.com/sahib/rmlint/pull/474,https://github.com/Fat-Zer,1,https://github.com/sahib/rmlint/pull/474,Otherwise ARGUMENTS.get('DEBUG') evaluated to True when actually 0 was passed,Otherwise ARGUMENTS.get('DEBUG') evaluated to True when actually 0 was passed,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,474,2021-03-05T22:06:23Z,2021-03-08T06:16:21Z,2021-03-08T06:16:21Z,MERGED,True,3,3,1,https://github.com/Fat-Zer,Fix print of config parameters,1,[],https://github.com/sahib/rmlint/pull/474,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/474#issuecomment-792498189,Otherwise ARGUMENTS.get('DEBUG') evaluated to True when actually 0 was passed,Thanks,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,478,2021-03-15T20:36:48Z,2021-03-27T01:43:14Z,2021-03-28T03:07:39Z,MERGED,True,1398,809,43,https://github.com/SeeSpotRun,Sort on path,45,[],https://github.com/sahib/rmlint/pull/478,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/478,Addresses #471,Addresses #471,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,479,2021-03-16T07:10:11Z,2021-03-20T21:55:04Z,2021-03-20T22:05:45Z,MERGED,True,293,393,23,https://github.com/SeeSpotRun,Implement new options to fully hash unique files,11,[],https://github.com/sahib/rmlint/pull/479,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/479,"Addresses #462
New option --hash-uniques means even unique files get fully hashed.  These will generally be outputted to the json report by default.  By also specifying --xattr-write, the checksums will be written to the files' extended attributes.","Addresses #462
New option --hash-uniques means even unique files get fully hashed.  These will generally be outputted to the json report by default.  By also specifying --xattr-write, the checksums will be written to the files' extended attributes.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,479,2021-03-16T07:10:11Z,2021-03-20T21:55:04Z,2021-03-20T22:05:45Z,MERGED,True,293,393,23,https://github.com/SeeSpotRun,Implement new options to fully hash unique files,11,[],https://github.com/sahib/rmlint/pull/479,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/479#issuecomment-802441523,"Addresses #462
New option --hash-uniques means even unique files get fully hashed.  These will generally be outputted to the json report by default.  By also specifying --xattr-write, the checksums will be written to the files' extended attributes.","@sahib I wonder if write-unfinished can / should be deprecated with this in place?  Unfinished checksums seem a bit flakey.  They're only really useful if another same-length file has a different unfinished checksum after exactly the same number of bytes.  I can't see where we are storing the number of bytes hashed in the json file for --replay so I'm not sure how it's really supposed to work.
While --hash-uniques is a bigger overhead for the first run, it's arguably more useful and robust than partial checksums.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,479,2021-03-16T07:10:11Z,2021-03-20T21:55:04Z,2021-03-20T22:05:45Z,MERGED,True,293,393,23,https://github.com/SeeSpotRun,Implement new options to fully hash unique files,11,[],https://github.com/sahib/rmlint/pull/479,https://github.com/sahib,3,https://github.com/sahib/rmlint/pull/479#issuecomment-802971062,"Addresses #462
New option --hash-uniques means even unique files get fully hashed.  These will generally be outputted to the json report by default.  By also specifying --xattr-write, the checksums will be written to the files' extended attributes.","I can't find the ticket right now, but there were some issues with --write-unfinished anyways (at least in the form that most users assumed it does what --hash-uniques does). Especially since it got implicitly enabled with the xattr feature. I would vote to remove it altogether.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,479,2021-03-16T07:10:11Z,2021-03-20T21:55:04Z,2021-03-20T22:05:45Z,MERGED,True,293,393,23,https://github.com/SeeSpotRun,Implement new options to fully hash unique files,11,[],https://github.com/sahib/rmlint/pull/479,https://github.com/SeeSpotRun,4,https://github.com/sahib/rmlint/pull/479#issuecomment-803467678,"Addresses #462
New option --hash-uniques means even unique files get fully hashed.  These will generally be outputted to the json report by default.  By also specifying --xattr-write, the checksums will be written to the files' extended attributes.",Ok have removed and also added --hash-unmatched which is like --hash-uniques but only hashes files that have one or more size twins.  This will be much more efficient in most usecases.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,480,2021-03-18T03:53:05Z,2021-03-20T21:54:23Z,2021-03-28T03:07:38Z,MERGED,True,179,344,17,https://github.com/SeeSpotRun,Glib json,7,[],https://github.com/sahib/rmlint/pull/480,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/480,"Note this PR was branched off earlier PR #479 to simplify possible merging.
Should address #464 and #463 and make json handling more robust in future.
One side-effect of this implementation is that the json file doesn't get written until right at the end.  The previous implementation writes to file as the results come in.
To do similar buffering with json-glib would require manually writing the opening and closing [ and ] to file, as well as the ,'s between array elements, and using a new JsonGenerator for each element.  So it can be done but it's less elegant.  But if we we run into problems keeping the JsonArray in memory then we might have to go that way anyway.
Thoughts @sahib ?","Note this PR was branched off earlier PR #479 to simplify possible merging.
Should address #464 and #463 and make json handling more robust in future.
One side-effect of this implementation is that the json file doesn't get written until right at the end.  The previous implementation writes to file as the results come in.
To do similar buffering with json-glib would require manually writing the opening and closing [ and ] to file, as well as the ,'s between array elements, and using a new JsonGenerator for each element.  So it can be done but it's less elegant.  But if we we run into problems keeping the JsonArray in memory then we might have to go that way anyway.
Thoughts @sahib ?",True,{'THUMBS_UP': ['https://github.com/sahib']}
sahib/rmlint,https://github.com/sahib/rmlint,480,2021-03-18T03:53:05Z,2021-03-20T21:54:23Z,2021-03-28T03:07:38Z,MERGED,True,179,344,17,https://github.com/SeeSpotRun,Glib json,7,[],https://github.com/sahib/rmlint/pull/480,https://github.com/sahib,2,https://github.com/sahib/rmlint/pull/480#issuecomment-801704779,"Note this PR was branched off earlier PR #479 to simplify possible merging.
Should address #464 and #463 and make json handling more robust in future.
One side-effect of this implementation is that the json file doesn't get written until right at the end.  The previous implementation writes to file as the results come in.
To do similar buffering with json-glib would require manually writing the opening and closing [ and ] to file, as well as the ,'s between array elements, and using a new JsonGenerator for each element.  So it can be done but it's less elegant.  But if we we run into problems keeping the JsonArray in memory then we might have to go that way anyway.
Thoughts @sahib ?","Hey @SeeSpotRun,

One side-effect of this implementation is that the json file doesn't get written until right at the end. The previous implementation writes to file as the results come in.

That's  actually a crucial property for the following reasons:

JSON files can get very big (I saw several GB in edge cases), keeping it all in memory is not a good thing.
Current JSON has to be written on CTRL-C, for big files that will take long.
GUI depends on the streaming of JSON to show the results in realtime.

So, yes, I think you should go with JsonGenerator. IIRC you don't need to instance a new one on each element, but can just call json_generator_set_root() on each (or so I hope to avoid the extra allocation).",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,480,2021-03-18T03:53:05Z,2021-03-20T21:54:23Z,2021-03-28T03:07:38Z,MERGED,True,179,344,17,https://github.com/SeeSpotRun,Glib json,7,[],https://github.com/sahib/rmlint/pull/480,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/480#issuecomment-801745992,"Note this PR was branched off earlier PR #479 to simplify possible merging.
Should address #464 and #463 and make json handling more robust in future.
One side-effect of this implementation is that the json file doesn't get written until right at the end.  The previous implementation writes to file as the results come in.
To do similar buffering with json-glib would require manually writing the opening and closing [ and ] to file, as well as the ,'s between array elements, and using a new JsonGenerator for each element.  So it can be done but it's less elegant.  But if we we run into problems keeping the JsonArray in memory then we might have to go that way anyway.
Thoughts @sahib ?","Yeah I kind of realised that as soon as I documented the PR.  Oh well, less elegant but not the end of the world.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,481,2021-03-20T22:05:04Z,2021-03-23T22:24:36Z,2021-03-28T03:07:38Z,MERGED,True,41,25,2,https://github.com/SeeSpotRun,Improve progressbar estimated time remaining,4,[],https://github.com/sahib/rmlint/pull/481,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/481,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,482,2021-03-22T05:09:31Z,2021-04-08T10:03:24Z,2021-04-08T10:03:25Z,MERGED,True,1828,1867,47,https://github.com/SeeSpotRun,Shredder manual tagging,73,[],https://github.com/sahib/rmlint/pull/482,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/482,Should fix #385,Should fix #385,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,483,2021-03-26T02:12:52Z,2021-03-27T01:43:15Z,2021-03-28T03:01:27Z,MERGED,True,1203,769,35,https://github.com/SeeSpotRun,Alt mains tidy up,24,[],https://github.com/sahib/rmlint/pull/483,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/483,"Addresses #458
Alternate mains --hash, --is-reflink and --dedupe all have stand-alone option parsing.  The --[hash|is-reflink|dedupe] must be first arg.
Alternate main --gui --shredder does no option parsing but instead passes all args to the python script.
Note: rmlint --equal still uses main option parsing but that is probable appropriate.","Addresses #458
Alternate mains --hash, --is-reflink and --dedupe all have stand-alone option parsing.  The --[hash|is-reflink|dedupe] must be first arg.
Alternate main --gui --shredder does no option parsing but instead passes all args to the python script.
Note: rmlint --equal still uses main option parsing but that is probable appropriate.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,483,2021-03-26T02:12:52Z,2021-03-27T01:43:15Z,2021-03-28T03:01:27Z,MERGED,True,1203,769,35,https://github.com/SeeSpotRun,Alt mains tidy up,24,[],https://github.com/sahib/rmlint/pull/483,https://github.com/Cebtenzzre,2,https://github.com/sahib/rmlint/pull/483#issuecomment-808624705,"Addresses #458
Alternate mains --hash, --is-reflink and --dedupe all have stand-alone option parsing.  The --[hash|is-reflink|dedupe] must be first arg.
Alternate main --gui --shredder does no option parsing but instead passes all args to the python script.
Note: rmlint --equal still uses main option parsing but that is probable appropriate.",I have a feeling rm_sys_stat and rm_sys_lstat should have stayed inline because both are only one line long after preprocessing. If that's not small enough to be worth inlining then what is?,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,483,2021-03-26T02:12:52Z,2021-03-27T01:43:15Z,2021-03-28T03:01:27Z,MERGED,True,1203,769,35,https://github.com/SeeSpotRun,Alt mains tidy up,24,[],https://github.com/sahib/rmlint/pull/483,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/483#issuecomment-808629905,"Addresses #458
Alternate mains --hash, --is-reflink and --dedupe all have stand-alone option parsing.  The --[hash|is-reflink|dedupe] must be first arg.
Alternate main --gui --shredder does no option parsing but instead passes all args to the python script.
Note: rmlint --equal still uses main option parsing but that is probable appropriate.","I have a feeling rm_sys_stat and rm_sys_lstat should have stayed inline because both are only one line long after preprocessing. If that's not small enough to be worth inlining then what is?

You're probably right.  I de-inlines the two procedures that called rm_log_perror as a lazy way to avoid a recursive header inclusion error.  At the same time I noticed the comment:

""We should not use functions that are I/O bound as inline functions.""  ( https://www.tutorialspoint.com/when-to-use-inline-function-and-when-not-to-use-it-in-c-cplusplus )

It's probably a bit of a stretch to classify stat and lstat as I/O bound so maybe I over-reacted.
Thoughts?",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,483,2021-03-26T02:12:52Z,2021-03-27T01:43:15Z,2021-03-28T03:01:27Z,MERGED,True,1203,769,35,https://github.com/SeeSpotRun,Alt mains tidy up,24,[],https://github.com/sahib/rmlint/pull/483,https://github.com/Cebtenzzre,4,https://github.com/sahib/rmlint/pull/483#issuecomment-808633874,"Addresses #458
Alternate mains --hash, --is-reflink and --dedupe all have stand-alone option parsing.  The --[hash|is-reflink|dedupe] must be first arg.
Alternate main --gui --shredder does no option parsing but instead passes all args to the python script.
Note: rmlint --equal still uses main option parsing but that is probable appropriate.","@SeeSpotRun They are likely I/O bound in the sense that the function call overhead is negligible compared to the cost of calling stat. But the inline version would produce simpler machine code that might be easier for the compiler to optimize, and would avoid the extra frame in the call stack at runtime.
For single line wrapper functions, I think it's good practice to make them inline or macros regardless of what they do.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,483,2021-03-26T02:12:52Z,2021-03-27T01:43:15Z,2021-03-28T03:01:27Z,MERGED,True,1203,769,35,https://github.com/SeeSpotRun,Alt mains tidy up,24,[],https://github.com/sahib/rmlint/pull/483,https://github.com/SeeSpotRun,5,https://github.com/sahib/rmlint/pull/483#issuecomment-808661783,"Addresses #458
Alternate mains --hash, --is-reflink and --dedupe all have stand-alone option parsing.  The --[hash|is-reflink|dedupe] must be first arg.
Alternate main --gui --shredder does no option parsing but instead passes all args to the python script.
Note: rmlint --equal still uses main option parsing but that is probable appropriate.","I was unsure of the reason for the recommendation ""We should not use functions that are I/O bound as inline functions"" and feared that they might make things worse.  On reading further it seems the reason is that they don't give much speed improvement, rather than that they make things worse.

For single line wrapper functions, I think it's good practice to make them inline or macros regardless of what they do.

Ok, will revert those.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,485,2021-04-06T06:31:34Z,2021-04-06T06:57:29Z,2021-04-06T06:57:29Z,MERGED,True,9,17,1,https://github.com/BrknRobot,Fix regex sort,2,[],https://github.com/sahib/rmlint/pull/485,https://github.com/BrknRobot,1,https://github.com/sahib/rmlint/pull/485,Fixes #484,Fixes #484,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,485,2021-04-06T06:31:34Z,2021-04-06T06:57:29Z,2021-04-06T06:57:29Z,MERGED,True,9,17,1,https://github.com/BrknRobot,Fix regex sort,2,[],https://github.com/sahib/rmlint/pull/485,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/485#issuecomment-813870710,Fixes #484,"Thanks, beat me to it.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,486,2021-04-08T08:25:01Z,2021-04-08T10:03:23Z,2021-04-08T10:03:23Z,MERGED,True,970,1663,36,https://github.com/SeeSpotRun,New replay,24,[],https://github.com/sahib/rmlint/pull/486,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/486,"Rewrite of --replay functionality.
Instead of doing most of the replay logic in replay.c, this now pipes the replayed files through the existing logic embedded in preprocess.c and shredder.c.","Rewrite of --replay functionality.
Instead of doing most of the replay logic in replay.c, this now pipes the replayed files through the existing logic embedded in preprocess.c and shredder.c.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,487,2021-04-10T12:49:29Z,2021-04-19T01:54:55Z,2021-04-19T01:54:55Z,CLOSED,False,897,984,93,https://github.com/SeeSpotRun,Develop,53,[],https://github.com/sahib/rmlint/pull/487,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/487,"Port changes from master branch
Tidy up tests and documentation
Some minor bugfixes","Port changes from master branch
Tidy up tests and documentation
Some minor bugfixes",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,490,2021-04-19T02:30:10Z,2021-04-19T07:45:21Z,2021-04-19T07:45:21Z,MERGED,True,904,988,95,https://github.com/SeeSpotRun,Develop,55,[],https://github.com/sahib/rmlint/pull/490,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/490,"Port changes from master branch
Tidy up tests and documentation
Some minor bugfixes
A semi-failed attempt at rationalising #include's","Port changes from master branch
Tidy up tests and documentation
Some minor bugfixes
A semi-failed attempt at rationalising #include's",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,491,2021-04-19T05:43:52Z,2021-04-19T07:40:58Z,2021-04-19T09:22:13Z,MERGED,True,2,1,1,https://github.com/CouldBeThis,clarify that mac brew install doesn't include GUI,1,[],https://github.com/sahib/rmlint/pull/491,https://github.com/CouldBeThis,1,https://github.com/sahib/rmlint/pull/491,As discussed in #253 and Homebrew/homebrew-core#17434,As discussed in #253 and Homebrew/homebrew-core#17434,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,491,2021-04-19T05:43:52Z,2021-04-19T07:40:58Z,2021-04-19T09:22:13Z,MERGED,True,2,1,1,https://github.com/CouldBeThis,clarify that mac brew install doesn't include GUI,1,[],https://github.com/sahib/rmlint/pull/491,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/491#issuecomment-822247770,As discussed in #253 and Homebrew/homebrew-core#17434,Thanks @CouldBeThis,True,{'THUMBS_UP': ['https://github.com/CouldBeThis']}
sahib/rmlint,https://github.com/sahib/rmlint,492,2021-04-19T07:43:58Z,2021-04-23T00:24:25Z,2021-04-23T00:24:26Z,MERGED,True,248,163,19,https://github.com/SeeSpotRun,Fix mem leaks,22,[],https://github.com/sahib/rmlint/pull/492,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/492,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,492,2021-04-19T07:43:58Z,2021-04-23T00:24:25Z,2021-04-23T00:24:26Z,MERGED,True,248,163,19,https://github.com/SeeSpotRun,Fix mem leaks,22,[],https://github.com/sahib/rmlint/pull/492,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/492#issuecomment-824528538,,"It's been a long while since the full testsuite ran leak-free:
$ sudo RM_TS_DIR=testdir RM_TS_USE_VALGRIND=1 RM_TS_CHECK_LEAKS=1 RM_TS_PEDANTIC=1 nosetests -sxv --eval-attr=""not slow and not valgrind_issue""

Ran 231 tests in 8288.592s

OK",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,493,2021-04-20T21:53:18Z,2021-05-27T21:26:00Z,2021-05-27T21:26:00Z,CLOSED,False,24,80,3,https://github.com/SeeSpotRun,gui: install shredder executable,2,[],https://github.com/sahib/rmlint/pull/493,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/493,One way of addressing #419,One way of addressing #419,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,493,2021-04-20T21:53:18Z,2021-05-27T21:26:00Z,2021-05-27T21:26:00Z,CLOSED,False,24,80,3,https://github.com/SeeSpotRun,gui: install shredder executable,2,[],https://github.com/sahib/rmlint/pull/493,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/493#issuecomment-823955652,One way of addressing #419,@sahib any philosophical objections to going this way?,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,494,2021-04-22T23:23:39Z,2021-04-26T19:30:40Z,2021-04-26T19:30:40Z,MERGED,True,10,4,1,https://github.com/SeeSpotRun,Fix/xattr dedup,3,[],https://github.com/sahib/rmlint/pull/494,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/494,"Cached xattr mtimes are to nearest second only...
Fixes #349 (comment)","Cached xattr mtimes are to nearest second only...
Fixes #349 (comment)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,497,2021-04-26T19:29:51Z,2021-04-26T19:39:01Z,2021-04-26T19:39:02Z,MERGED,True,4,2,2,https://github.com/SeeSpotRun,Develop,2,[],https://github.com/sahib/rmlint/pull/497,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/497,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,498,2021-04-30T22:11:23Z,2021-05-01T11:51:43Z,2021-05-01T11:51:43Z,MERGED,True,63,45,9,https://github.com/SeeSpotRun,Backports,5,[],https://github.com/sahib/rmlint/pull/498,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/498,Catches a couple of bugfixes since release,Catches a couple of bugfixes since release,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,499,2021-05-01T22:43:46Z,2021-05-02T20:18:11Z,2021-05-02T20:18:11Z,MERGED,True,103,14,3,https://github.com/Cebtenzzre,--is-reflink and rm_util_link_type fixes,3,[],https://github.com/sahib/rmlint/pull/499,https://github.com/Cebtenzzre,1,https://github.com/sahib/rmlint/pull/499,"The most important change here is to allow rm_util_link_type to return RM_LINK_SYMLINK by checking for it earlier.
$ touch foo.txt bar.txt
$ ln -s bar.txt link.txt
$ rmlint --is-reflink foo.txt link.txt

Result before these changes: Not a file (exit status 3)
Result after these changes: Encountered a symlink (exit status 9)","The most important change here is to allow rm_util_link_type to return RM_LINK_SYMLINK by checking for it earlier.
$ touch foo.txt bar.txt
$ ln -s bar.txt link.txt
$ rmlint --is-reflink foo.txt link.txt

Result before these changes: Not a file (exit status 3)
Result after these changes: Encountered a symlink (exit status 9)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,499,2021-05-01T22:43:46Z,2021-05-02T20:18:11Z,2021-05-02T20:18:11Z,MERGED,True,103,14,3,https://github.com/Cebtenzzre,--is-reflink and rm_util_link_type fixes,3,[],https://github.com/sahib/rmlint/pull/499,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/499#issuecomment-830731571,"The most important change here is to allow rm_util_link_type to return RM_LINK_SYMLINK by checking for it earlier.
$ touch foo.txt bar.txt
$ ln -s bar.txt link.txt
$ rmlint --is-reflink foo.txt link.txt

Result before these changes: Not a file (exit status 3)
Result after these changes: Encountered a symlink (exit status 9)","Thanks for contributing, much appreciated.  Feel free to add a nosetest.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,499,2021-05-01T22:43:46Z,2021-05-02T20:18:11Z,2021-05-02T20:18:11Z,MERGED,True,103,14,3,https://github.com/Cebtenzzre,--is-reflink and rm_util_link_type fixes,3,[],https://github.com/sahib/rmlint/pull/499,https://github.com/SeeSpotRun,3,https://github.com/sahib/rmlint/pull/499#issuecomment-830790502,"The most important change here is to allow rm_util_link_type to return RM_LINK_SYMLINK by checking for it earlier.
$ touch foo.txt bar.txt
$ ln -s bar.txt link.txt
$ rmlint --is-reflink foo.txt link.txt

Result before these changes: Not a file (exit status 3)
Result after these changes: Encountered a symlink (exit status 9)","Actually thinking about it, we should also be testing that they are links to each other, ie should expect RM_LINK_NONE for rmlint --is-reflink foo.txt link.txt in your example and RM_LINK_SYMLINK for rmlint --is-reflink bar.txt link.txt",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,499,2021-05-01T22:43:46Z,2021-05-02T20:18:11Z,2021-05-02T20:18:11Z,MERGED,True,103,14,3,https://github.com/Cebtenzzre,--is-reflink and rm_util_link_type fixes,3,[],https://github.com/sahib/rmlint/pull/499,https://github.com/Cebtenzzre,4,https://github.com/sahib/rmlint/pull/499#issuecomment-830836572,"The most important change here is to allow rm_util_link_type to return RM_LINK_SYMLINK by checking for it earlier.
$ touch foo.txt bar.txt
$ ln -s bar.txt link.txt
$ rmlint --is-reflink foo.txt link.txt

Result before these changes: Not a file (exit status 3)
Result after these changes: Encountered a symlink (exit status 9)","Working on a nosetest. I considered testing for a symlink relationship, but rm_util_link_type is primarily for detecting reflinked files. For functions like rm_sh_emit_handler_clone, knowing that two files are hardlinked or that either is a symlink is enough to know that they aren't reflinked. And what would the link type be for a symlink to a path double, hardlink, or reflink?
A script can use realpath to resolve symlinks, then use the result of rmlint --is-reflink to identify the relationship between the destinations. IMO, the most straightforward  enhancement would be to add a -L flag to preprocess both arguments with realpath(3) - in that mode, ""symlink"" would not be a possible status, only ""same (resolved) path"".",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,500,2021-05-01T23:21:48Z,2021-05-02T10:56:31Z,2021-05-02T10:56:31Z,MERGED,True,36,36,10,https://github.com/Cebtenzzre,Fix verbosity logic and documentation,2,[],https://github.com/sahib/rmlint/pull/500,https://github.com/Cebtenzzre,1,https://github.com/sahib/rmlint/pull/500,"Only five verbosity levels really exist (-VV through -vv), and -VV couldn't even be reached before - but that was masked by the first two (G_LOG_LEVEL_ERROR and G_LOG_LEVEL_CRITICAL) being the wrong way around.
This will only break scripts if they relied on -V silencing errors logged to stderr, but if scripts were silencing stderr they were most likely ignoring it, and this was an undocumented ""feature"" (the docs recommended -VVV), so IMO it's not a concern.
Example 1
$ rmlint --is-reflink nothing nothing

Output before and after these changes:
ERROR: lib/utilities.c:1335: rm_util_link_type: Error opening nothing: No such file or directory
An error occurred during checking

Example 2
$ rmlint --is-reflink -V nothing nothing

Output before these changes:
(no output)
The warning and the error have been disabled, because G_LOG_LEVEL_ERROR >= G_LOG_LEVEL_CRITICAL is false. This is the lowest verbosity level; -VV and -VVV are clamped to -V.
Output after these changes:
ERROR: lib/utilities.c:1335: rm_util_link_type: Error opening nothing: No such file or directory

The warning has been disabled.
Example 3
$ rmlint --is-reflink -VV nothing nothing

Output before and after these changes:
(no output)
The warning and the error have been disabled. This worked before by coincidence, as it was effectively -V but -V silenced errors too.","Only five verbosity levels really exist (-VV through -vv), and -VV couldn't even be reached before - but that was masked by the first two (G_LOG_LEVEL_ERROR and G_LOG_LEVEL_CRITICAL) being the wrong way around.
This will only break scripts if they relied on -V silencing errors logged to stderr, but if scripts were silencing stderr they were most likely ignoring it, and this was an undocumented ""feature"" (the docs recommended -VVV), so IMO it's not a concern.
Example 1
$ rmlint --is-reflink nothing nothing

Output before and after these changes:
ERROR: lib/utilities.c:1335: rm_util_link_type: Error opening nothing: No such file or directory
An error occurred during checking

Example 2
$ rmlint --is-reflink -V nothing nothing

Output before these changes:
(no output)
The warning and the error have been disabled, because G_LOG_LEVEL_ERROR >= G_LOG_LEVEL_CRITICAL is false. This is the lowest verbosity level; -VV and -VVV are clamped to -V.
Output after these changes:
ERROR: lib/utilities.c:1335: rm_util_link_type: Error opening nothing: No such file or directory

The warning has been disabled.
Example 3
$ rmlint --is-reflink -VV nothing nothing

Output before and after these changes:
(no output)
The warning and the error have been disabled. This worked before by coincidence, as it was effectively -V but -V silenced errors too.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,504,2021-05-14T19:15:03Z,2021-05-14T19:51:55Z,2021-05-14T21:45:53Z,MERGED,True,64,17,4,https://github.com/SeeSpotRun,Fix/manpage path,12,[],https://github.com/sahib/rmlint/pull/504,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/504,"Fixes #502.
Needed because SCons 4.0  has option man_make_section_directory set to true by default.","Fixes #502.
Needed because SCons 4.0  has option man_make_section_directory set to true by default.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,506,2021-05-15T23:20:08Z,2021-05-15T23:24:06Z,2021-05-15T23:24:06Z,MERGED,True,724,660,16,https://github.com/SeeSpotRun,Refactor/pp,7,[],https://github.com/sahib/rmlint/pull/506,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/506,"Refactor of proprocess.c:
Sorted lists replace hashtables for e.g. hardlink detection.
General code tidy-up and Demetering
Update code documentation","Refactor of proprocess.c:
Sorted lists replace hashtables for e.g. hardlink detection.
General code tidy-up and Demetering
Update code documentation",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,507,2021-05-16T11:52:34Z,2021-05-16T21:13:53Z,2021-05-16T21:13:53Z,MERGED,True,1,1,1,https://github.com/doriandu45,Fix small typo on the manpage,1,[],https://github.com/sahib/rmlint/pull/507,https://github.com/doriandu45,1,https://github.com/sahib/rmlint/pull/507,"Replace ""Reading the manpages o these tools"" by ""Reading the manpages of these tools""","Replace ""Reading the manpages o these tools"" by ""Reading the manpages of these tools""",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,508,2021-05-24T19:41:54Z,2021-05-24T20:52:00Z,2021-05-24T20:52:00Z,MERGED,True,143,155,8,https://github.com/SeeSpotRun,Refactor/gui setup,11,[],https://github.com/sahib/rmlint/pull/508,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/508,Various refactorings and changes encountered while getting homebrew and MacPorts recipes to work with gui,Various refactorings and changes encountered while getting homebrew and MacPorts recipes to work with gui,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,509,2021-05-27T21:18:40Z,2021-05-27T21:25:41Z,2021-05-27T21:25:41Z,MERGED,True,66,26,3,https://github.com/SeeSpotRun,Gui/setup,2,[],https://github.com/sahib/rmlint/pull/509,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/509,gui setup changes developed during MacPorts and homebrew recipe development,gui setup changes developed during MacPorts and homebrew recipe development,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,511,2021-05-28T06:52:49Z,2021-05-28T08:19:50Z,2021-05-28T08:19:56Z,MERGED,True,174,170,5,https://github.com/SeeSpotRun,Packing,18,[],https://github.com/sahib/rmlint/pull/511,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/511,Shrinks RmFile struct from 192 bytes to 128,Shrinks RmFile struct from 192 bytes to 128,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,512,2021-05-28T06:57:08Z,2021-05-28T08:20:20Z,2021-05-28T08:20:23Z,MERGED,True,31210,5,28,https://github.com/SeeSpotRun,checksums: implement blake3,1,[],https://github.com/sahib/rmlint/pull/512,https://github.com/SeeSpotRun,1,https://github.com/sahib/rmlint/pull/512,"Copy-paste of blake3 c code from https://github.com/BLAKE3-team/BLAKE3/tree/master/c
Includes cpu extension optimisatations.
Package maintainers and others wishing to distribute compiled code can build with scons CPU_EXTENSIONS=0","Copy-paste of blake3 c code from https://github.com/BLAKE3-team/BLAKE3/tree/master/c
Includes cpu extension optimisatations.
Package maintainers and others wishing to distribute compiled code can build with scons CPU_EXTENSIONS=0",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,514,2021-06-05T18:20:47Z,2021-06-05T23:14:52Z,2021-06-06T01:21:59Z,MERGED,True,4,4,1,https://github.com/endolith,DOC: Fix formatting,1,[],https://github.com/sahib/rmlint/pull/514,https://github.com/endolith,1,https://github.com/sahib/rmlint/pull/514,Double dashes are being interpreted as en dashes like –algorithm on https://rmlint.readthedocs.io/en/latest/rmlint.1.html,Double dashes are being interpreted as en dashes like –algorithm on https://rmlint.readthedocs.io/en/latest/rmlint.1.html,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,515,2021-06-05T19:39:43Z,2021-06-05T23:16:56Z,2021-06-06T01:22:03Z,MERGED,True,5,4,1,https://github.com/endolith,DOC: Clarify clone vs reflink,1,[],https://github.com/sahib/rmlint/pull/515,https://github.com/endolith,1,https://github.com/sahib/rmlint/pull/515,"Clone maintains metadata of both files, while reflink deletes one and replaces it with a reflink.  See What does a rmlint's “clone” for btrfs do? on Unix StackExchange","Clone maintains metadata of both files, while reflink deletes one and replaces it with a reflink.  See What does a rmlint's “clone” for btrfs do? on Unix StackExchange",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,520,2021-09-07T21:32:05Z,,2021-09-08T21:44:50Z,OPEN,False,10,22,2,https://github.com/sbraz,"Build: allow disabling docs, do not build gschemas.compiled",2,[],https://github.com/sahib/rmlint/pull/520,https://github.com/sbraz,1,https://github.com/sahib/rmlint/pull/520,"Hi,
I am in the process of adding rmlint to Gentoo and I have a few problems, some of which I patched locally. However, I think these two should be fixed upstream.

allow disabling docs
do not build gschemas.compiled. Having this file installed causes problems for packagers. Fedora and    Arch Linux have to remove it manually as we can see here:

  
    
      rmlint/pkg/fedora/rmlint.spec
    
    
         Line 48
      in
      29bd07e
    
  
  
    

        
          
           %exclude %{_datadir}/glib-2.0/schemas/gschemas.compiled 
        
    
  


https://github.com/archlinux/svntogit-community/blob/19a815339b610b3ee146d7e3830f3c8ac3a2a6c4/trunk/PKGBUILD#L44","Hi,
I am in the process of adding rmlint to Gentoo and I have a few problems, some of which I patched locally. However, I think these two should be fixed upstream.

allow disabling docs
do not build gschemas.compiled. Having this file installed causes problems for packagers. Fedora and    Arch Linux have to remove it manually as we can see here:

  
    
      rmlint/pkg/fedora/rmlint.spec
    
    
         Line 48
      in
      29bd07e
    
  
  
    

        
          
           %exclude %{_datadir}/glib-2.0/schemas/gschemas.compiled 
        
    
  


https://github.com/archlinux/svntogit-community/blob/19a815339b610b3ee146d7e3830f3c8ac3a2a6c4/trunk/PKGBUILD#L44",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,520,2021-09-07T21:32:05Z,,2021-09-08T21:44:50Z,OPEN,False,10,22,2,https://github.com/sbraz,"Build: allow disabling docs, do not build gschemas.compiled",2,[],https://github.com/sahib/rmlint/pull/520,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/520#issuecomment-914683555,"Hi,
I am in the process of adding rmlint to Gentoo and I have a few problems, some of which I patched locally. However, I think these two should be fixed upstream.

allow disabling docs
do not build gschemas.compiled. Having this file installed causes problems for packagers. Fedora and    Arch Linux have to remove it manually as we can see here:

  
    
      rmlint/pkg/fedora/rmlint.spec
    
    
         Line 48
      in
      29bd07e
    
  
  
    

        
          
           %exclude %{_datadir}/glib-2.0/schemas/gschemas.compiled 
        
    
  


https://github.com/archlinux/svntogit-community/blob/19a815339b610b3ee146d7e3830f3c8ac3a2a6c4/trunk/PKGBUILD#L44",There have been some significant developments for package builders / maintainers in the develop branch but I fell behind in getting the next release out.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,520,2021-09-07T21:32:05Z,,2021-09-08T21:44:50Z,OPEN,False,10,22,2,https://github.com/sbraz,"Build: allow disabling docs, do not build gschemas.compiled",2,[],https://github.com/sahib/rmlint/pull/520,https://github.com/sbraz,3,https://github.com/sahib/rmlint/pull/520#issuecomment-915594617,"Hi,
I am in the process of adding rmlint to Gentoo and I have a few problems, some of which I patched locally. However, I think these two should be fixed upstream.

allow disabling docs
do not build gschemas.compiled. Having this file installed causes problems for packagers. Fedora and    Arch Linux have to remove it manually as we can see here:

  
    
      rmlint/pkg/fedora/rmlint.spec
    
    
         Line 48
      in
      29bd07e
    
  
  
    

        
          
           %exclude %{_datadir}/glib-2.0/schemas/gschemas.compiled 
        
    
  


https://github.com/archlinux/svntogit-community/blob/19a815339b610b3ee146d7e3830f3c8ac3a2a6c4/trunk/PKGBUILD#L44","Hi, thanks for the reply. Actually my PR isn't perfect either as there is no way to build the manpage but not the rest of the doc. Let's wait until the next release.
By the way, I have eventually been able to add the package to Gentoo with working tests on amd64 and x86. Hopefully the next release won't require as many patches :)
gentoo/gentoo@f87696b#diff-754c644dd9146af3c5a3c306fb1a8ecd47f9dd164feac308abcbab64a0b74b66",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,521,2021-09-07T22:36:28Z,2021-09-07T23:05:38Z,2021-09-07T23:05:38Z,MERGED,True,14,15,4,https://github.com/sbraz,"Tests: stop using hardcoded /tmp, don't capture stderr",2,[],https://github.com/sahib/rmlint/pull/521,https://github.com/sbraz,1,https://github.com/sahib/rmlint/pull/521,"Hi,
This fixes two things:

tests couldn't run when /tmp isn't accessible
test_stdin.test_path_starting_with_dash could fail because STDERR was captured and non-empty (because of #519)","Hi,
This fixes two things:

tests couldn't run when /tmp isn't accessible
test_stdin.test_path_starting_with_dash could fail because STDERR was captured and non-empty (because of #519)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,523,2021-09-08T17:42:32Z,,2021-09-08T18:52:13Z,OPEN,False,2,2,1,https://github.com/sbraz,"Fix max sizes on x86, part of the fix for #522",1,[],https://github.com/sahib/rmlint/pull/523,https://github.com/sbraz,1,https://github.com/sahib/rmlint/pull/523,"strtoull returns ULLONG_MAX, not ULONG_MAX.","strtoull returns ULLONG_MAX, not ULONG_MAX.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,523,2021-09-08T17:42:32Z,,2021-09-08T18:52:13Z,OPEN,False,2,2,1,https://github.com/sbraz,"Fix max sizes on x86, part of the fix for #522",1,[],https://github.com/sahib/rmlint/pull/523,https://github.com/sbraz,2,https://github.com/sahib/rmlint/pull/523#issuecomment-915446050,"strtoull returns ULLONG_MAX, not ULONG_MAX.","Actually please don't merge this yet, --size 0-18446744073709551615.1 doesn't trigger an error.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,523,2021-09-08T17:42:32Z,,2021-09-08T18:52:13Z,OPEN,False,2,2,1,https://github.com/sbraz,"Fix max sizes on x86, part of the fix for #522",1,[],https://github.com/sahib/rmlint/pull/523,https://github.com/sbraz,3,https://github.com/sahib/rmlint/pull/523#issuecomment-915486560,"strtoull returns ULLONG_MAX, not ULONG_MAX.","I don't really know why that fraction is supposed to fail here:

  
    
      rmlint/lib/cmdline.c
    
    
         Line 387
      in
      427791c
    
  
  
    

        
          
           g_set_error(error, RM_ERROR_QUARK, 0, _(""Size factor would overflow size (max. 2**64 allowed)"")); 
        
    
  


I'll leave this PR in its current state, as an incomplete fix for #522.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,524,2021-09-08T18:04:24Z,2021-09-08T19:45:00Z,2021-09-08T19:45:05Z,MERGED,True,2,2,2,https://github.com/sbraz,Fix typos,1,[],https://github.com/sahib/rmlint/pull/524,https://github.com/sbraz,1,https://github.com/sahib/rmlint/pull/524,Just a small fix.,Just a small fix.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,524,2021-09-08T18:04:24Z,2021-09-08T19:45:00Z,2021-09-08T19:45:05Z,MERGED,True,2,2,2,https://github.com/sbraz,Fix typos,1,[],https://github.com/sahib/rmlint/pull/524,https://github.com/SeeSpotRun,2,https://github.com/sahib/rmlint/pull/524#issuecomment-915520364,Just a small fix.,Thank's [sic],True,{'LAUGH': ['https://github.com/sbraz']}
sahib/rmlint,https://github.com/sahib/rmlint,525,2021-09-08T21:02:08Z,,2021-09-08T21:02:08Z,OPEN,False,3,20,2,https://github.com/sbraz,Do not compress manpage,1,[],https://github.com/sahib/rmlint/pull/525,https://github.com/sbraz,1,https://github.com/sahib/rmlint/pull/525,"Hi,
Pre-compressing the manpage causes QA warnings on Gentoo (and could also be a problem on Debian, Fedora or Arch Linux, as a fellow Gentoo developer explains in his blog).
It would be nice to disable this feature.","Hi,
Pre-compressing the manpage causes QA warnings on Gentoo (and could also be a problem on Debian, Fedora or Arch Linux, as a fellow Gentoo developer explains in his blog).
It would be nice to disable this feature.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,526,2021-09-09T18:29:40Z,,2021-09-09T18:29:40Z,OPEN,False,8,3,2,https://github.com/sbraz,"Never hardcode compiler, select it based on CC environment variable",1,[],https://github.com/sahib/rmlint/pull/526,https://github.com/sbraz,1,https://github.com/sahib/rmlint/pull/526,This avoids problems where gcc/cc is not the prefered compiler.,This avoids problems where gcc/cc is not the prefered compiler.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,531,2021-09-16T18:32:24Z,,2021-09-25T18:24:15Z,OPEN,False,16,24,3,https://github.com/Cebtenzzre,FIEMAP fixes for --is-reflink,4,[],https://github.com/sahib/rmlint/pull/531,https://github.com/Cebtenzzre,1,https://github.com/sahib/rmlint/pull/531,"This pull request is intended to fix the FIEMAP-related issues with --is-reflink: #527, #528, #529, and #530.","This pull request is intended to fix the FIEMAP-related issues with --is-reflink: #527, #528, #529, and #530.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,533,2021-10-05T18:51:43Z,,2021-10-05T18:51:43Z,OPEN,False,19,1,6,https://github.com/bardo,Add support for Solaris-based OSs,1,[],https://github.com/sahib/rmlint/pull/533,https://github.com/bardo,1,https://github.com/sahib/rmlint/pull/533,Changes have been tested under SmartOS.,Changes have been tested under SmartOS.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,538,2021-12-27T14:45:15Z,,2021-12-27T14:45:15Z,OPEN,False,1,1,1,https://github.com/rrueger,(Docs) Fix semantic typo,1,[],https://github.com/sahib/rmlint/pull/538,https://github.com/rrueger,1,https://github.com/sahib/rmlint/pull/538,"The documentation text begins a list with (a) but doesn't reference the second item with (b).
This PR fixes this ""semantic"" typo.","The documentation text begins a list with (a) but doesn't reference the second item with (b).
This PR fixes this ""semantic"" typo.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,548,2022-01-23T19:17:10Z,,2022-01-23T19:17:10Z,OPEN,False,1,1,1,https://github.com/Cebtenzzre,SConscript: fix copy-paste error,1,[],https://github.com/sahib/rmlint/pull/548,https://github.com/Cebtenzzre,1,https://github.com/sahib/rmlint/pull/548,"This was causing issues on platforms that don't support SSE2, such as ARM.
Fixes #547","This was causing issues on platforms that don't support SSE2, such as ARM.
Fixes #547",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,551,2022-01-24T23:30:55Z,,2022-01-24T23:30:55Z,OPEN,False,35,19,6,https://github.com/Cebtenzzre,fix undefined macros,1,[],https://github.com/sahib/rmlint/pull/551,https://github.com/Cebtenzzre,1,https://github.com/sahib/rmlint/pull/551,"The worst of them were an undefined UINTPTR_MAX in RM_PLATFORM_*, which could both be false and caused a stat struct to be mis-casted in traverse.c, and a non-macro HASHER_FADVISE_FLAGS that made rm_hasher_request_readahead a no-op since commit 31cd32f.
Also add a static assert in the usual ADD_FILE to make sure it never casts between incompatible stat structs, and -Werror=undef so we don't allow undefined macros to silently evaluate to zero.
The UINTPTR_MAX issue is a regression caused by 90edf02, which removed the inttypes.h include in config.h.in.
Fixes #549

Here's the preprocessor condition that wasn't working:

  
    
      rmlint/lib/traverse.c
    
    
         Line 215
      in
      bdb591f
    
  
  
    

        
          
           #if RM_PLATFORM_32 && HAVE_STAT64 
        
    
  


Here's the definition of RM_PLATFORM_32:

  
    
      rmlint/lib/config.h.in
    
    
         Line 60
      in
      bdb591f
    
  
  
    

        
          
           #define RM_PLATFORM_32 (UINTPTR_MAX == 0xffffffff) 
        
    
  


stdint.h was not being included in either config.h or traverse.c, so UINTPTR_MAX was undefined and (by default) silently evaluates to zero. Note that this PR brings back rm_hasher_request_readahead for the first time in over 6 years, which I haven't thoroughly tested (but is most likely fine).","The worst of them were an undefined UINTPTR_MAX in RM_PLATFORM_*, which could both be false and caused a stat struct to be mis-casted in traverse.c, and a non-macro HASHER_FADVISE_FLAGS that made rm_hasher_request_readahead a no-op since commit 31cd32f.
Also add a static assert in the usual ADD_FILE to make sure it never casts between incompatible stat structs, and -Werror=undef so we don't allow undefined macros to silently evaluate to zero.
The UINTPTR_MAX issue is a regression caused by 90edf02, which removed the inttypes.h include in config.h.in.
Fixes #549

Here's the preprocessor condition that wasn't working:

  
    
      rmlint/lib/traverse.c
    
    
         Line 215
      in
      bdb591f
    
  
  
    

        
          
           #if RM_PLATFORM_32 && HAVE_STAT64 
        
    
  


Here's the definition of RM_PLATFORM_32:

  
    
      rmlint/lib/config.h.in
    
    
         Line 60
      in
      bdb591f
    
  
  
    

        
          
           #define RM_PLATFORM_32 (UINTPTR_MAX == 0xffffffff) 
        
    
  


stdint.h was not being included in either config.h or traverse.c, so UINTPTR_MAX was undefined and (by default) silently evaluates to zero. Note that this PR brings back rm_hasher_request_readahead for the first time in over 6 years, which I haven't thoroughly tested (but is most likely fine).",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,556,2022-02-09T18:59:23Z,,2022-02-09T19:00:45Z,OPEN,False,25,6,1,https://github.com/Cebtenzzre,sh format: improve stampfile handling,1,[],https://github.com/sahib/rmlint/pull/556,https://github.com/Cebtenzzre,1,https://github.com/sahib/rmlint/pull/556,"mktemp in /tmp
don't assume $0 is a file
remove stampfiles at exit
don't create stampfiles if -n is passed

Closes #554","mktemp in /tmp
don't assume $0 is a file
remove stampfiles at exit
don't create stampfiles if -n is passed

Closes #554",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,557,2022-02-13T18:23:05Z,,2022-02-13T18:23:05Z,OPEN,False,1,1,1,https://github.com/Cebtenzzre,utilities: Prevent deadlock in rm_util_is_nonstripped,1,[],https://github.com/sahib/rmlint/pull/557,https://github.com/Cebtenzzre,1,https://github.com/sahib/rmlint/pull/557,"Only attempt to open regular files. It is entirely possible that we
encounter an executable FIFO, which causes open() to block indefinitely
if it is not opened for writing by another process.
Fixes #555","Only attempt to open regular files. It is entirely possible that we
encounter an executable FIFO, which causes open() to block indefinitely
if it is not opened for writing by another process.
Fixes #555",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,558,2022-02-14T17:35:31Z,2022-02-14T18:25:33Z,2022-02-14T18:25:33Z,CLOSED,False,1,1,1,https://github.com/Silejonu,Fix a typo in the man page,1,[],https://github.com/sahib/rmlint/pull/558,https://github.com/Silejonu,1,https://github.com/sahib/rmlint/pull/558,The man page mentions an in-existing --O command instead of -O.,The man page mentions an in-existing --O command instead of -O.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,558,2022-02-14T17:35:31Z,2022-02-14T18:25:33Z,2022-02-14T18:25:33Z,CLOSED,False,1,1,1,https://github.com/Silejonu,Fix a typo in the man page,1,[],https://github.com/sahib/rmlint/pull/558,https://github.com/Silejonu,2,https://github.com/sahib/rmlint/pull/558#issuecomment-1039412235,The man page mentions an in-existing --O command instead of -O.,Closing in favour of #560.,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,560,2022-02-14T18:25:10Z,,2022-02-15T01:35:46Z,OPEN,False,21,21,3,https://github.com/Silejonu,Fix a few typos and double-spacing in the man page,4,[],https://github.com/sahib/rmlint/pull/560,https://github.com/Silejonu,1,https://github.com/sahib/rmlint/pull/560,,,True,{}
sahib/rmlint,https://github.com/sahib/rmlint,560,2022-02-14T18:25:10Z,,2022-02-15T01:35:46Z,OPEN,False,21,21,3,https://github.com/Silejonu,Fix a few typos and double-spacing in the man page,4,[],https://github.com/sahib/rmlint/pull/560,https://github.com/Cebtenzzre,2,https://github.com/sahib/rmlint/pull/560#issuecomment-1039446876,,"It looks like since 555060f there are some remaining references to -pp, which is no longer different from -p. There are a total of six in docs, this PR only changes one.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,560,2022-02-14T18:25:10Z,,2022-02-15T01:35:46Z,OPEN,False,21,21,3,https://github.com/Silejonu,Fix a few typos and double-spacing in the man page,4,[],https://github.com/sahib/rmlint/pull/560,https://github.com/Silejonu,3,https://github.com/sahib/rmlint/pull/560#issuecomment-1039579121,,"It looks like since 555060f there are some remaining references to -pp, which is no longer different from -p. There are a total of six in docs, this PR only changes one.

You're right, I added the remaining ones that I feel comfortable touching.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,560,2022-02-14T18:25:10Z,,2022-02-15T01:35:46Z,OPEN,False,21,21,3,https://github.com/Silejonu,Fix a few typos and double-spacing in the man page,4,[],https://github.com/sahib/rmlint/pull/560,https://github.com/Silejonu,4,https://github.com/sahib/rmlint/pull/560#issuecomment-1039584657,,"There are a few remaining instances of -pp in the source code, but I'm not sure they should be corrected and/or how they should be:
CHANGELOG.md:- -pp is now silently permitted, but is the same as -p
CHANGELOG.md:* Paranoia option -pp (use -p)
CHANGELOG.md:  ""paranoid"" (byte-by-byte) file comparison method (option -pp), which is
tests/test_formatters/test_others.py:    for silly_option in ['-ppp', '-PPPP']:
po/rmlint.pot:msgid ""Only up to -pp or down to -PP flags allowed""
po/fr.po:msgid ""Only up to -pp or down to -PP flags allowed""
po/fr.po:msgstr ""Seules les options de -ppp à -P sont autorisées""
po/fr.po:msgstr ""Seules les options de -ppp à -P sont autorisées""
po/es.po:msgid ""Only up to -pp or down to -PP flags allowed""
po/es.po:msgstr ""Sólo banderas hasta -pp o menores a -PP está permitido""
po/es.po:msgstr ""Sólo banderas hasta -pp o menores a -PP está permitido""
po/de.po:msgid ""Only up to -pp or down to -PP flags allowed""",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,560,2022-02-14T18:25:10Z,,2022-02-15T01:35:46Z,OPEN,False,21,21,3,https://github.com/Silejonu,Fix a few typos and double-spacing in the man page,4,[],https://github.com/sahib/rmlint/pull/560,https://github.com/Cebtenzzre,5,https://github.com/sahib/rmlint/pull/560#issuecomment-1039757704,,"The changelog probably shouldn't be modified and the test is intentionally using odd yet supported paranoia flags. The .po files have old translations in them that can only really be dealt with by making rmlint.pot empty, running scons xgettext to regenerate it, then using msgattrib as described here to mark the unused translations obsolete and optionally delete them, for each .po file.
But I'm not sure how the maintainers like to manage translations so it may be best to leave them alone for now.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,565,2022-03-26T14:24:21Z,,2022-03-26T14:24:21Z,OPEN,False,1,1,1,https://github.com/neonsoftware,"Update maintainance on README to 2022. (previous: only 2017, then none)",1,[],https://github.com/sahib/rmlint/pull/565,https://github.com/neonsoftware,1,https://github.com/sahib/rmlint/pull/565,"The README page was showing maintenance from SeeSpotRun only in the range 2014-2017.
Leaving therefore the impression, at first glance, that this project does not have a maintainer since 2017, which apparently is not the case
(inner .hpp files which showed dates such as 2020, etc.).
Updated maintained year to current year, 2022, so that, since the README is the first glance of a project to prospecting new users, the project will appear as currently maintained, which seems to be well the case.","The README page was showing maintenance from SeeSpotRun only in the range 2014-2017.
Leaving therefore the impression, at first glance, that this project does not have a maintainer since 2017, which apparently is not the case
(inner .hpp files which showed dates such as 2020, etc.).
Updated maintained year to current year, 2022, so that, since the README is the first glance of a project to prospecting new users, the project will appear as currently maintained, which seems to be well the case.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,568,2022-04-12T04:17:32Z,,2022-04-12T04:17:32Z,OPEN,False,1,1,1,https://github.com/danlsn,Fixed manpage typo in rmlint jq pipe example,1,[],https://github.com/sahib/rmlint/pull/568,https://github.com/danlsn,1,https://github.com/sahib/rmlint/pull/568,"There is a simple typo I noticed in the manpage in the scripting example. The pipe is in the wrong place for the command to work.
(This is my first actual PR, please be gentle if I've made some kind of mistake!)","There is a simple typo I noticed in the manpage in the scripting example. The pipe is in the wrong place for the command to work.
(This is my first actual PR, please be gentle if I've made some kind of mistake!)",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,573,2022-06-01T14:53:05Z,,2022-06-02T11:11:22Z,OPEN,False,103,0,2,https://github.com/barracuda156,rmlint: fix the build on older Darwin systems,1,[],https://github.com/sahib/rmlint/pull/573,https://github.com/barracuda156,1,https://github.com/sahib/rmlint/pull/573,"This PR fixes rmlint build for 10.5.8 and 10.6.
It contains two part, which come from:

https://gist.github.com/ingramj/1105106/adfad1a7b1f0575dd7737c296d644856f2c2d074
hboetes/mg#7 (comment)

P. S. There is also another problem related to how SCons build system works – trying to build a FAT binary on Leopard fails, for example, because arch flags get ignored. I solve it like this (for Macports): https://github.com/macports/macports-ports/pull/15003/files#diff-d43b1faa4b64984e308f2d41fddfd09fb559868da27208ff41417d636a4c7d20
I don’t know how to make a similar fix in the source code that gonna work without Macports assistance.","This PR fixes rmlint build for 10.5.8 and 10.6.
It contains two part, which come from:

https://gist.github.com/ingramj/1105106/adfad1a7b1f0575dd7737c296d644856f2c2d074
hboetes/mg#7 (comment)

P. S. There is also another problem related to how SCons build system works – trying to build a FAT binary on Leopard fails, for example, because arch flags get ignored. I solve it like this (for Macports): https://github.com/macports/macports-ports/pull/15003/files#diff-d43b1faa4b64984e308f2d41fddfd09fb559868da27208ff41417d636a4c7d20
I don’t know how to make a similar fix in the source code that gonna work without Macports assistance.",True,{}
sahib/rmlint,https://github.com/sahib/rmlint,573,2022-06-01T14:53:05Z,,2022-06-02T11:11:22Z,OPEN,False,103,0,2,https://github.com/barracuda156,rmlint: fix the build on older Darwin systems,1,[],https://github.com/sahib/rmlint/pull/573,https://github.com/kencu,2,https://github.com/sahib/rmlint/pull/573#issuecomment-1143781984,"This PR fixes rmlint build for 10.5.8 and 10.6.
It contains two part, which come from:

https://gist.github.com/ingramj/1105106/adfad1a7b1f0575dd7737c296d644856f2c2d074
hboetes/mg#7 (comment)

P. S. There is also another problem related to how SCons build system works – trying to build a FAT binary on Leopard fails, for example, because arch flags get ignored. I solve it like this (for Macports): https://github.com/macports/macports-ports/pull/15003/files#diff-d43b1faa4b64984e308f2d41fddfd09fb559868da27208ff41417d636a4c7d20
I don’t know how to make a similar fix in the source code that gonna work without Macports assistance.",instead of MAC_OS_X_VERSION_10_7 use 1070,True,{'THUMBS_UP': ['https://github.com/barracuda156']}
