swift-nav/libsbp,https://github.com/swift-nav/libsbp,340,2016-03-09T02:40:51Z,2016-03-09T03:25:16Z,2016-03-09T03:26:00Z,MERGED,True,11,4,5,https://github.com/peddie,Don't require python testing packages for installation,3,['Sprint 02/29/2016'],https://github.com/swift-nav/libsbp/pull/340,https://github.com/peddie,1,https://github.com/swift-nav/libsbp/pull/340,WIP,WIP,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,340,2016-03-09T02:40:51Z,2016-03-09T03:25:16Z,2016-03-09T03:26:00Z,MERGED,True,11,4,5,https://github.com/peddie,Don't require python testing packages for installation,3,['Sprint 02/29/2016'],https://github.com/swift-nav/libsbp/pull/340,https://github.com/peddie,2,https://github.com/swift-nav/libsbp/pull/340#issuecomment-194095836,WIP,"OK, this is at last no longer a work in progress. @mookerji @JoshuaGross",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,340,2016-03-09T02:40:51Z,2016-03-09T03:25:16Z,2016-03-09T03:26:00Z,MERGED,True,11,4,5,https://github.com/peddie,Don't require python testing packages for installation,3,['Sprint 02/29/2016'],https://github.com/swift-nav/libsbp/pull/340,https://github.com/mookerji,3,https://github.com/swift-nav/libsbp/pull/340#issuecomment-194096671,WIP,"Cute, @peddie. Very cute.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,342,2016-03-24T19:22:21Z,2016-03-24T19:26:08Z,2016-03-24T19:26:08Z,MERGED,True,9,3,2,https://github.com/ejconlon,Add fullBuffer to dispatch callback arguments,1,[],https://github.com/swift-nav/libsbp/pull/342,https://github.com/ejconlon,1,https://github.com/swift-nav/libsbp/pull/342,"If you want to forward SBP messages to another destination it's useful to
have both the parsed and raw versions on hand.  This change passes the
raw Buffer to the user callback after the parsed one.","If you want to forward SBP messages to another destination it's useful to
have both the parsed and raw versions on hand.  This change passes the
raw Buffer to the user callback after the parsed one.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,345,2016-04-08T01:06:29Z,2016-04-08T21:16:25Z,2016-04-08T21:21:54Z,MERGED,True,9,5,1,https://github.com/jacobmcnamee,Add cortex-a9 to toolchain file,1,[],https://github.com/swift-nav/libsbp/pull/345,https://github.com/jacobmcnamee,1,https://github.com/swift-nav/libsbp/pull/345,"Processor should be specified e.g.
CMAKEFLAGS += -DCMAKE_SYSTEM_PROCESSOR=cortex-a9","Processor should be specified e.g.
CMAKEFLAGS += -DCMAKE_SYSTEM_PROCESSOR=cortex-a9",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,346,2016-04-20T01:17:59Z,2016-04-20T21:06:47Z,2016-04-20T21:06:49Z,MERGED,True,524,715,42,https://github.com/mfine,Classy msg,1,[],https://github.com/swift-nav/libsbp/pull/346,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/346,"Add classy messages to SBP. Need to fix up tests before bringing in.
/cc @swift-nav/skylark","Add classy messages to SBP. Need to fix up tests before bringing in.
/cc @swift-nav/skylark",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,346,2016-04-20T01:17:59Z,2016-04-20T21:06:47Z,2016-04-20T21:06:49Z,MERGED,True,524,715,42,https://github.com/mfine,Classy msg,1,[],https://github.com/swift-nav/libsbp/pull/346,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/346#issuecomment-212580671,"Add classy messages to SBP. Need to fix up tests before bringing in.
/cc @swift-nav/skylark","I'm throwing up the flag trying to get serialization/deserialization working at the moment - seeing the decoding just not working out.
Here was the stuff I was working on:
module Test.SwiftNav.SBP.Messages
  ( tests
  ) where

import BasicPrelude hiding (find)
import Data.Yaml
import Test.Tasty
import Test.Tasty.HUnit
import System.FilePath.Find
import SwiftNav.SBP
import qualified Data.ByteString as B
import qualified Data.ByteString.Base64 as BS
import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as LBS

data SampleTest = SampleTest
  { sampleTestJSON   :: Text
  , sampleTestPacket :: Text
  } deriving Show

instance FromJSON SampleTest where
  parseJSON (Object v) =
    SampleTest <$> v .: ""raw_json"" <*> v .: ""raw_packet""
  parseJSON _ = mzero

data Sample = Sample
  { sampleTests :: [SampleTest]
  } deriving Show

instance FromJSON Sample where
  parseJSON (Object v) =
    Sample <$> v .: ""tests""
  parseJSON _ = mzero

findFiles = do
  files <- find always (fileName ~~? ""*.yaml"") ""../spec/tests""
  samples  <- mapM decodeFile files
  forM (catMaybes $ (samples :: [Maybe Sample])) $ \sample ->
    forM (sampleTests $ sample) $ \sampleTest -> do
      print (A.decode (LBS.fromStrict (BS.decodeLenient (encodeUtf8 $ sampleTestPacket sampleTest))) :: Maybe SBPMsg)

testParse :: TestTree
testParse =
  testGroup ""Parse test""
    [ testCase """" $ do
        print ""hello""
    ]

tests :: TestTree
tests =
  testGroup ""Messages tests""
    [ testParse
    ]",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,348,2016-05-03T18:09:14Z,2016-05-03T20:20:08Z,2016-05-03T20:20:08Z,CLOSED,False,47,1,3,https://github.com/ejconlon,"SBP C: Introduce ""global"" callback that will handle all message types",3,[],https://github.com/swift-nav/libsbp/pull/348,https://github.com/ejconlon,1,https://github.com/swift-nav/libsbp/pull/348,"Sometimes you just want to handle all message types and you don't want to
to give libsbp a giant whitelist. This review introduces a ""global""
callback type: simply pass SBP_GLOBAL_CALLBACK (0x00) as the msg_type in
sbp_register_callback and the callback will be invoked for all messages.
/cc @swift-nav/skylark @fnoble @gsmcmullin @jacobmcnamee","Sometimes you just want to handle all message types and you don't want to
to give libsbp a giant whitelist. This review introduces a ""global""
callback type: simply pass SBP_GLOBAL_CALLBACK (0x00) as the msg_type in
sbp_register_callback and the callback will be invoked for all messages.
/cc @swift-nav/skylark @fnoble @gsmcmullin @jacobmcnamee",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,348,2016-05-03T18:09:14Z,2016-05-03T20:20:08Z,2016-05-03T20:20:08Z,CLOSED,False,47,1,3,https://github.com/ejconlon,"SBP C: Introduce ""global"" callback that will handle all message types",3,[],https://github.com/swift-nav/libsbp/pull/348,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/348#issuecomment-216617388,"Sometimes you just want to handle all message types and you don't want to
to give libsbp a giant whitelist. This review introduces a ""global""
callback type: simply pass SBP_GLOBAL_CALLBACK (0x00) as the msg_type in
sbp_register_callback and the callback will be invoked for all messages.
/cc @swift-nav/skylark @fnoble @gsmcmullin @jacobmcnamee","Instead of introducing a new message ID, why not refactor it to have a global callback register function?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,348,2016-05-03T18:09:14Z,2016-05-03T20:20:08Z,2016-05-03T20:20:08Z,CLOSED,False,47,1,3,https://github.com/ejconlon,"SBP C: Introduce ""global"" callback that will handle all message types",3,[],https://github.com/swift-nav/libsbp/pull/348,https://github.com/ejconlon,3,https://github.com/swift-nav/libsbp/pull/348#issuecomment-216618691,"Sometimes you just want to handle all message types and you don't want to
to give libsbp a giant whitelist. This review introduces a ""global""
callback type: simply pass SBP_GLOBAL_CALLBACK (0x00) as the msg_type in
sbp_register_callback and the callback will be invoked for all messages.
/cc @swift-nav/skylark @fnoble @gsmcmullin @jacobmcnamee",Because that's a tougher change to make!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,348,2016-05-03T18:09:14Z,2016-05-03T20:20:08Z,2016-05-03T20:20:08Z,CLOSED,False,47,1,3,https://github.com/ejconlon,"SBP C: Introduce ""global"" callback that will handle all message types",3,[],https://github.com/swift-nav/libsbp/pull/348,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/348#issuecomment-216645177,"Sometimes you just want to handle all message types and you don't want to
to give libsbp a giant whitelist. This review introduces a ""global""
callback type: simply pass SBP_GLOBAL_CALLBACK (0x00) as the msg_type in
sbp_register_callback and the callback will be invoked for all messages.
/cc @swift-nav/skylark @fnoble @gsmcmullin @jacobmcnamee",üëç on not using a message id for this.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,348,2016-05-03T18:09:14Z,2016-05-03T20:20:08Z,2016-05-03T20:20:08Z,CLOSED,False,47,1,3,https://github.com/ejconlon,"SBP C: Introduce ""global"" callback that will handle all message types",3,[],https://github.com/swift-nav/libsbp/pull/348,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/348#issuecomment-216645469,"Sometimes you just want to handle all message types and you don't want to
to give libsbp a giant whitelist. This review introduces a ""global""
callback type: simply pass SBP_GLOBAL_CALLBACK (0x00) as the msg_type in
sbp_register_callback and the callback will be invoked for all messages.
/cc @swift-nav/skylark @fnoble @gsmcmullin @jacobmcnamee",Or consider a callback mask - any message in the mask will head to the callback.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,348,2016-05-03T18:09:14Z,2016-05-03T20:20:08Z,2016-05-03T20:20:08Z,CLOSED,False,47,1,3,https://github.com/ejconlon,"SBP C: Introduce ""global"" callback that will handle all message types",3,[],https://github.com/swift-nav/libsbp/pull/348,https://github.com/mookerji,6,https://github.com/swift-nav/libsbp/pull/348#issuecomment-216645470,"Sometimes you just want to handle all message types and you don't want to
to give libsbp a giant whitelist. This review introduces a ""global""
callback type: simply pass SBP_GLOBAL_CALLBACK (0x00) as the msg_type in
sbp_register_callback and the callback will be invoked for all messages.
/cc @swift-nav/skylark @fnoble @gsmcmullin @jacobmcnamee","Adding global message handling isn't the worst idea, but what @JoshuaGross is saying here is correct.
We actually have a global message callback handler in the Python library, so we should actually just have one in the C library as well. The implications of adding a new concept of virtual message handling as a concept through a protected msg_type value is a substantial conceptual one. (not that new concepts are bad, just that we've typically discussed changes like this more in the past). Quickly looking at https://github.com/swift-nav/libsbp/blob/master/c/src/sbp.c, it does indeed seem like a tricky, but not impossible, change.
That being said, I'd like to see an example use case of where this is needed, because our existing firmware handling certainly hasn't needed it until now.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,348,2016-05-03T18:09:14Z,2016-05-03T20:20:08Z,2016-05-03T20:20:08Z,CLOSED,False,47,1,3,https://github.com/ejconlon,"SBP C: Introduce ""global"" callback that will handle all message types",3,[],https://github.com/swift-nav/libsbp/pull/348,https://github.com/ejconlon,7,https://github.com/swift-nav/libsbp/pull/348#issuecomment-216646408,"Sometimes you just want to handle all message types and you don't want to
to give libsbp a giant whitelist. This review introduces a ""global""
callback type: simply pass SBP_GLOBAL_CALLBACK (0x00) as the msg_type in
sbp_register_callback and the callback will be invoked for all messages.
/cc @swift-nav/skylark @fnoble @gsmcmullin @jacobmcnamee","ACK. It's not needed in firmware, it's needed in test code.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,348,2016-05-03T18:09:14Z,2016-05-03T20:20:08Z,2016-05-03T20:20:08Z,CLOSED,False,47,1,3,https://github.com/ejconlon,"SBP C: Introduce ""global"" callback that will handle all message types",3,[],https://github.com/swift-nav/libsbp/pull/348,https://github.com/ejconlon,8,https://github.com/swift-nav/libsbp/pull/348#issuecomment-216652688,"Sometimes you just want to handle all message types and you don't want to
to give libsbp a giant whitelist. This review introduces a ""global""
callback type: simply pass SBP_GLOBAL_CALLBACK (0x00) as the msg_type in
sbp_register_callback and the callback will be invoked for all messages.
/cc @swift-nav/skylark @fnoble @gsmcmullin @jacobmcnamee","In trying to implements the callbacks for this, I realized we actually need the callback type to change, adding a msg_type argument.  I am just going to close this since that change has a huge surface area.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,349,2016-05-03T19:16:12Z,2016-05-03T20:27:23Z,2016-05-03T20:27:28Z,MERGED,True,17,3,3,https://github.com/mfine,Catch UnicodeDecodeError,3,[],https://github.com/swift-nav/libsbp/pull/349,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/349,"Other advice is to pass ensure_ascii=False to json.dumps.
/cc @jacobmcnamee","Other advice is to pass ensure_ascii=False to json.dumps.
/cc @jacobmcnamee",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,349,2016-05-03T19:16:12Z,2016-05-03T20:27:23Z,2016-05-03T20:27:28Z,MERGED,True,17,3,3,https://github.com/mfine,Catch UnicodeDecodeError,3,[],https://github.com/swift-nav/libsbp/pull/349,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/349#issuecomment-216642904,"Other advice is to pass ensure_ascii=False to json.dumps.
/cc @jacobmcnamee","üëç
Do we have a log demonstrating this? If so, we could/should add it as a test.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,349,2016-05-03T19:16:12Z,2016-05-03T20:27:23Z,2016-05-03T20:27:28Z,MERGED,True,17,3,3,https://github.com/mfine,Catch UnicodeDecodeError,3,[],https://github.com/swift-nav/libsbp/pull/349,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/349#issuecomment-216646653,"Other advice is to pass ensure_ascii=False to json.dumps.
/cc @jacobmcnamee",@mookerji no sample log I can find... it's coming out of the new bootloader spewing things - will try and create something that will fail.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,349,2016-05-03T19:16:12Z,2016-05-03T20:27:23Z,2016-05-03T20:27:28Z,MERGED,True,17,3,3,https://github.com/mfine,Catch UnicodeDecodeError,3,[],https://github.com/swift-nav/libsbp/pull/349,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/349#issuecomment-216654177,"Other advice is to pass ensure_ascii=False to json.dumps.
/cc @jacobmcnamee","Added a test case. Think it's catching this, but not totally sure.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,350,2016-05-03T20:50:56Z,2016-05-03T20:56:23Z,2016-05-03T20:56:25Z,MERGED,True,10,5,1,https://github.com/mfine,Even more exception handling.,1,[],https://github.com/swift-nav/libsbp/pull/350,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/350,Both dumps here are bad. Protect both. Return None.,Both dumps here are bad. Protect both. Return None.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,351,2016-05-04T20:28:05Z,2017-03-09T17:40:54Z,2017-03-09T17:40:54Z,CLOSED,False,229,45,21,https://github.com/ejconlon,WIP: SBP Haskell: Add QuickCheck instances for messages and some tests,3,[],https://github.com/swift-nav/libsbp/pull/351,https://github.com/ejconlon,1,https://github.com/swift-nav/libsbp/pull/351,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,351,2016-05-04T20:28:05Z,2017-03-09T17:40:54Z,2017-03-09T17:40:54Z,CLOSED,False,229,45,21,https://github.com/ejconlon,WIP: SBP Haskell: Add QuickCheck instances for messages and some tests,3,[],https://github.com/swift-nav/libsbp/pull/351,https://github.com/ejconlon,2,https://github.com/swift-nav/libsbp/pull/351#issuecomment-217017797,,"This is to debug some conversion failures.  So far nothing has come up except for the fact that we need manual instances for some of these, unfortunately.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,352,2016-05-04T23:59:13Z,2016-08-11T18:26:30Z,2016-08-11T18:26:30Z,MERGED,True,6,1,1,https://github.com/ejconlon,SBP Haskell: Write JSON parsing errors to stderr (json2sbp),1,[],https://github.com/swift-nav/libsbp/pull/352,https://github.com/ejconlon,1,https://github.com/swift-nav/libsbp/pull/352,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,352,2016-05-04T23:59:13Z,2016-08-11T18:26:30Z,2016-08-11T18:26:30Z,MERGED,True,6,1,1,https://github.com/ejconlon,SBP Haskell: Write JSON parsing errors to stderr (json2sbp),1,[],https://github.com/swift-nav/libsbp/pull/352,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/352#issuecomment-219684731,,Good idea,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,353,2016-05-05T17:15:50Z,2016-05-10T20:40:43Z,2016-05-10T20:40:43Z,MERGED,True,587,161,16,https://github.com/denniszollo,Uart state 2,3,[],https://github.com/swift-nav/libsbp/pull/353,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/353,"resurrecting my uart_state pull request and closes #329.  This is to add an observation period field to the uart_state message as to keep stats not only on latency but also dropped packets.
Deprecate the UART state message and create a new one that adds in the ""period of reception"" info about observation messages from the base as a ""latency"" object.
This gives us an idea of the link quality back to the base station. The latency stuff only works for messages we received and decoded, it doesn't take into account any dropped packets.   I'm holding off generating the PDF documentation until we make a libsbp release with the upcoming firmware release.   There will be a few more changes.","resurrecting my uart_state pull request and closes #329.  This is to add an observation period field to the uart_state message as to keep stats not only on latency but also dropped packets.
Deprecate the UART state message and create a new one that adds in the ""period of reception"" info about observation messages from the base as a ""latency"" object.
This gives us an idea of the link quality back to the base station. The latency stuff only works for messages we received and decoded, it doesn't take into account any dropped packets.   I'm holding off generating the PDF documentation until we make a libsbp release with the upcoming firmware release.   There will be a few more changes.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,353,2016-05-05T17:15:50Z,2016-05-10T20:40:43Z,2016-05-10T20:40:43Z,MERGED,True,587,161,16,https://github.com/denniszollo,Uart state 2,3,[],https://github.com/swift-nav/libsbp/pull/353,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/353#issuecomment-217317160,"resurrecting my uart_state pull request and closes #329.  This is to add an observation period field to the uart_state message as to keep stats not only on latency but also dropped packets.
Deprecate the UART state message and create a new one that adds in the ""period of reception"" info about observation messages from the base as a ""latency"" object.
This gives us an idea of the link quality back to the base station. The latency stuff only works for messages we received and decoded, it doesn't take into account any dropped packets.   I'm holding off generating the PDF documentation until we make a libsbp release with the upcoming firmware release.   There will be a few more changes.","@mfine @mookerji @JoshuaGross  Anytime to review this one?  I had to resurrect it from long past and We've now decided to merge this feature into firmware and console to support radio link testing.
Should I also increment the version number to allow specification in requirements.txt?
Should I also generate the doc?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,353,2016-05-05T17:15:50Z,2016-05-10T20:40:43Z,2016-05-10T20:40:43Z,MERGED,True,587,161,16,https://github.com/denniszollo,Uart state 2,3,[],https://github.com/swift-nav/libsbp/pull/353,https://github.com/mookerji,3,https://github.com/swift-nav/libsbp/pull/353#issuecomment-217577163,"resurrecting my uart_state pull request and closes #329.  This is to add an observation period field to the uart_state message as to keep stats not only on latency but also dropped packets.
Deprecate the UART state message and create a new one that adds in the ""period of reception"" info about observation messages from the base as a ""latency"" object.
This gives us an idea of the link quality back to the base station. The latency stuff only works for messages we received and decoded, it doesn't take into account any dropped packets.   I'm holding off generating the PDF documentation until we make a libsbp release with the upcoming firmware release.   There will be a few more changes.",looking!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,353,2016-05-05T17:15:50Z,2016-05-10T20:40:43Z,2016-05-10T20:40:43Z,MERGED,True,587,161,16,https://github.com/denniszollo,Uart state 2,3,[],https://github.com/swift-nav/libsbp/pull/353,https://github.com/mookerji,4,https://github.com/swift-nav/libsbp/pull/353#issuecomment-217578350,"resurrecting my uart_state pull request and closes #329.  This is to add an observation period field to the uart_state message as to keep stats not only on latency but also dropped packets.
Deprecate the UART state message and create a new one that adds in the ""period of reception"" info about observation messages from the base as a ""latency"" object.
This gives us an idea of the link quality back to the base station. The latency stuff only works for messages we received and decoded, it doesn't take into account any dropped packets.   I'm holding off generating the PDF documentation until we make a libsbp release with the upcoming firmware release.   There will be a few more changes.",Update the description and feel free to merge. I think you'll want to bump sbp for Python and deploy it to pypi. Let me know if you need help with it?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,353,2016-05-05T17:15:50Z,2016-05-10T20:40:43Z,2016-05-10T20:40:43Z,MERGED,True,587,161,16,https://github.com/denniszollo,Uart state 2,3,[],https://github.com/swift-nav/libsbp/pull/353,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/353#issuecomment-217583296,"resurrecting my uart_state pull request and closes #329.  This is to add an observation period field to the uart_state message as to keep stats not only on latency but also dropped packets.
Deprecate the UART state message and create a new one that adds in the ""period of reception"" info about observation messages from the base as a ""latency"" object.
This gives us an idea of the link quality back to the base station. The latency stuff only works for messages we received and decoded, it doesn't take into account any dropped packets.   I'm holding off generating the PDF documentation until we make a libsbp release with the upcoming firmware release.   There will be a few more changes.","@denniszollo only issue is Latency the right measurement of a period? Latency speaks to an observed period and has the fields for max, min, avg, and smoothed - is that how the observation period should be reported? Or should there be a single measurement?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,353,2016-05-05T17:15:50Z,2016-05-10T20:40:43Z,2016-05-10T20:40:43Z,MERGED,True,587,161,16,https://github.com/denniszollo,Uart state 2,3,[],https://github.com/swift-nav/libsbp/pull/353,https://github.com/denniszollo,6,https://github.com/swift-nav/libsbp/pull/353#issuecomment-217588467,"resurrecting my uart_state pull request and closes #329.  This is to add an observation period field to the uart_state message as to keep stats not only on latency but also dropped packets.
Deprecate the UART state message and create a new one that adds in the ""period of reception"" info about observation messages from the base as a ""latency"" object.
This gives us an idea of the link quality back to the base station. The latency stuff only works for messages we received and decoded, it doesn't take into account any dropped packets.   I'm holding off generating the PDF documentation until we make a libsbp release with the upcoming firmware release.   There will be a few more changes.",Based upon Mark's feedback I'm going to rename things for clarity.  I'll also update the fields in the deprecated message to deprecated.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,353,2016-05-05T17:15:50Z,2016-05-10T20:40:43Z,2016-05-10T20:40:43Z,MERGED,True,587,161,16,https://github.com/denniszollo,Uart state 2,3,[],https://github.com/swift-nav/libsbp/pull/353,https://github.com/denniszollo,7,https://github.com/swift-nav/libsbp/pull/353#issuecomment-218024328,"resurrecting my uart_state pull request and closes #329.  This is to add an observation period field to the uart_state message as to keep stats not only on latency but also dropped packets.
Deprecate the UART state message and create a new one that adds in the ""period of reception"" info about observation messages from the base as a ""latency"" object.
This gives us an idea of the link quality back to the base station. The latency stuff only works for messages we received and decoded, it doesn't take into account any dropped packets.   I'm holding off generating the PDF documentation until we make a libsbp release with the upcoming firmware release.   There will be a few more changes.",This is ready for review again and should now incorporate the prior feedback - I am planning to wait until I do the new observation message for a pypi push and will need help for that part.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,353,2016-05-05T17:15:50Z,2016-05-10T20:40:43Z,2016-05-10T20:40:43Z,MERGED,True,587,161,16,https://github.com/denniszollo,Uart state 2,3,[],https://github.com/swift-nav/libsbp/pull/353,https://github.com/mfine,8,https://github.com/swift-nav/libsbp/pull/353#issuecomment-218209401,"resurrecting my uart_state pull request and closes #329.  This is to add an observation period field to the uart_state message as to keep stats not only on latency but also dropped packets.
Deprecate the UART state message and create a new one that adds in the ""period of reception"" info about observation messages from the base as a ""latency"" object.
This gives us an idea of the link quality back to the base station. The latency stuff only works for messages we received and decoded, it doesn't take into account any dropped packets.   I'm holding off generating the PDF documentation until we make a libsbp release with the upcoming firmware release.   There will be a few more changes.",Changes look good!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,354,2016-05-19T18:01:19Z,2016-05-26T19:23:27Z,2016-05-26T19:23:27Z,CLOSED,False,2254,244,26,https://github.com/denniszollo,Cors obs,3,[],https://github.com/swift-nav/libsbp/pull/354,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/354,"need new obs message.  After merge need a new veresion and pypi release.
Note that scaling has changed on pseudorange from 1 cm to 2cm for count.
Will require update to anything using sbp eventually:
piksi_tools (done in PR: swift-nav/piksi_tools#273)
sbp_log_analysis (need to do)
gnss_analysis (need to do)
/cc @mookerji @mfine @JoshuaGross  any time to review?","need new obs message.  After merge need a new veresion and pypi release.
Note that scaling has changed on pseudorange from 1 cm to 2cm for count.
Will require update to anything using sbp eventually:
piksi_tools (done in PR: swift-nav/piksi_tools#273)
sbp_log_analysis (need to do)
gnss_analysis (need to do)
/cc @mookerji @mfine @JoshuaGross  any time to review?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,354,2016-05-19T18:01:19Z,2016-05-26T19:23:27Z,2016-05-26T19:23:27Z,CLOSED,False,2254,244,26,https://github.com/denniszollo,Cors obs,3,[],https://github.com/swift-nav/libsbp/pull/354,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/354#issuecomment-220426681,"need new obs message.  After merge need a new veresion and pypi release.
Note that scaling has changed on pseudorange from 1 cm to 2cm for count.
Will require update to anything using sbp eventually:
piksi_tools (done in PR: swift-nav/piksi_tools#273)
sbp_log_analysis (need to do)
gnss_analysis (need to do)
/cc @mookerji @mfine @JoshuaGross  any time to review?","Yeah, looking.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,354,2016-05-19T18:01:19Z,2016-05-26T19:23:27Z,2016-05-26T19:23:27Z,CLOSED,False,2254,244,26,https://github.com/denniszollo,Cors obs,3,[],https://github.com/swift-nav/libsbp/pull/354,https://github.com/mookerji,3,https://github.com/swift-nav/libsbp/pull/354#issuecomment-220448091,"need new obs message.  After merge need a new veresion and pypi release.
Note that scaling has changed on pseudorange from 1 cm to 2cm for count.
Will require update to anything using sbp eventually:
piksi_tools (done in PR: swift-nav/piksi_tools#273)
sbp_log_analysis (need to do)
gnss_analysis (need to do)
/cc @mookerji @mfine @JoshuaGross  any time to review?","I'd say that we update the descriptions as well to describe why these messages have changed. Then we'll have to 1. release the library, 2. update the tools, 3. package release candidate for tools, 4. release firmware.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,354,2016-05-19T18:01:19Z,2016-05-26T19:23:27Z,2016-05-26T19:23:27Z,CLOSED,False,2254,244,26,https://github.com/denniszollo,Cors obs,3,[],https://github.com/swift-nav/libsbp/pull/354,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/354#issuecomment-221389449,"need new obs message.  After merge need a new veresion and pypi release.
Note that scaling has changed on pseudorange from 1 cm to 2cm for count.
Will require update to anything using sbp eventually:
piksi_tools (done in PR: swift-nav/piksi_tools#273)
sbp_log_analysis (need to do)
gnss_analysis (need to do)
/cc @mookerji @mfine @JoshuaGross  any time to review?",This is ready but is still waiting on a few more unit tests after we have compatible firmware.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,354,2016-05-19T18:01:19Z,2016-05-26T19:23:27Z,2016-05-26T19:23:27Z,CLOSED,False,2254,244,26,https://github.com/denniszollo,Cors obs,3,[],https://github.com/swift-nav/libsbp/pull/354,https://github.com/denniszollo,5,https://github.com/swift-nav/libsbp/pull/354#issuecomment-221968911,"need new obs message.  After merge need a new veresion and pypi release.
Note that scaling has changed on pseudorange from 1 cm to 2cm for count.
Will require update to anything using sbp eventually:
piksi_tools (done in PR: swift-nav/piksi_tools#273)
sbp_log_analysis (need to do)
gnss_analysis (need to do)
/cc @mookerji @mfine @JoshuaGross  any time to review?",deprecated in favor of : #356,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,355,2016-05-25T19:39:54Z,2016-06-20T17:40:33Z,2016-06-20T17:40:33Z,CLOSED,False,68,0,1,https://github.com/axlan,Added back in the file driver updated for current design,1,[],https://github.com/swift-nav/libsbp/pull/355,https://github.com/axlan,1,https://github.com/swift-nav/libsbp/pull/355,It throws an IOEerror on write attempts,It throws an IOEerror on write attempts,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,355,2016-05-25T19:39:54Z,2016-06-20T17:40:33Z,2016-06-20T17:40:33Z,CLOSED,False,68,0,1,https://github.com/axlan,Added back in the file driver updated for current design,1,[],https://github.com/swift-nav/libsbp/pull/355,https://github.com/axlan,2,https://github.com/swift-nav/libsbp/pull/355#issuecomment-227214345,It throws an IOEerror on write attempts,I'm closing this since it was pointed out that the File read/write functions can be used directly without a driver.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,356,2016-05-26T19:23:10Z,2016-05-26T22:16:39Z,2016-05-26T22:16:39Z,MERGED,True,4700,2044,47,https://github.com/denniszollo,Cors obs bare bones,6,[],https://github.com/swift-nav/libsbp/pull/356,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/356,"Go back to the simple SBP change.
Question - should this be version 0.53? or 1.0?","Go back to the simple SBP change.
Question - should this be version 0.53? or 1.0?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,356,2016-05-26T19:23:10Z,2016-05-26T22:16:39Z,2016-05-26T22:16:39Z,MERGED,True,4700,2044,47,https://github.com/denniszollo,Cors obs bare bones,6,[],https://github.com/swift-nav/libsbp/pull/356,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/356#issuecomment-221969890,"Go back to the simple SBP change.
Question - should this be version 0.53? or 1.0?","1.0, per our versioning policy.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,357,2016-06-23T00:16:50Z,2016-06-23T20:02:50Z,2016-06-24T01:01:41Z,MERGED,True,13,13,1,https://github.com/mfine,Staging Observations,3,[],https://github.com/swift-nav/libsbp/pull/357,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/357,"Point to the staging skylark endpoint. Support staging observations as a parameter.
/cc @mookerji @denniszollo","Point to the staging skylark endpoint. Support staging observations as a parameter.
/cc @mookerji @denniszollo",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,357,2016-06-23T00:16:50Z,2016-06-23T20:02:50Z,2016-06-24T01:01:41Z,MERGED,True,13,13,1,https://github.com/mfine,Staging Observations,3,[],https://github.com/swift-nav/libsbp/pull/357,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/357#issuecomment-228155900,"Point to the staging skylark endpoint. Support staging observations as a parameter.
/cc @mookerji @denniszollo",(kicked off the Travis build again),True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,358,2016-07-11T19:52:45Z,2016-07-15T02:23:20Z,2016-07-15T02:23:20Z,MERGED,True,4,2,2,https://github.com/denniszollo,Improve/fix stop method on python forwarder,4,[],https://github.com/swift-nav/libsbp/pull/358,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/358,"/cc @gsmcmullin @mfine
As it was it seemed impossible to ""stop"" the forwarder.","/cc @gsmcmullin @mfine
As it was it seemed impossible to ""stop"" the forwarder.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,359,2016-07-14T23:04:10Z,2016-07-15T03:16:54Z,2016-07-15T03:16:54Z,MERGED,True,1,1,1,https://github.com/benjamin0,Handle sbp json that didn't come from serial link.,1,[],https://github.com/swift-nav/libsbp/pull/359,https://github.com/benjamin0,1,https://github.com/swift-nav/libsbp/pull/359,@mookerji,@mookerji,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,359,2016-07-14T23:04:10Z,2016-07-15T03:16:54Z,2016-07-15T03:16:54Z,MERGED,True,1,1,1,https://github.com/benjamin0,Handle sbp json that didn't come from serial link.,1,[],https://github.com/swift-nav/libsbp/pull/359,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/359#issuecomment-232840027,@mookerji,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,360,2016-07-15T23:13:17Z,2016-07-26T22:30:09Z,2016-07-26T22:30:09Z,MERGED,True,13,0,2,https://github.com/denniszollo,V1.0.1 branch,3,[],https://github.com/swift-nav/libsbp/pull/360,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/360,"I'd like to get the recent changes deployed to pypi, this is my attempt to do what is necessary to do so.","I'd like to get the recent changes deployed to pypi, this is my attempt to do what is necessary to do so.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,360,2016-07-15T23:13:17Z,2016-07-26T22:30:09Z,2016-07-26T22:30:09Z,MERGED,True,13,0,2,https://github.com/denniszollo,V1.0.1 branch,3,[],https://github.com/swift-nav/libsbp/pull/360,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/360#issuecomment-233090502,"I'd like to get the recent changes deployed to pypi, this is my attempt to do what is necessary to do so.",have you run all the codegen stuff?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,360,2016-07-15T23:13:17Z,2016-07-26T22:30:09Z,2016-07-26T22:30:09Z,MERGED,True,13,0,2,https://github.com/denniszollo,V1.0.1 branch,3,[],https://github.com/swift-nav/libsbp/pull/360,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/360#issuecomment-235426111,"I'd like to get the recent changes deployed to pypi, this is my attempt to do what is necessary to do so.",cutting a release,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,361,2016-07-26T22:26:36Z,2016-07-26T22:26:46Z,2016-07-26T22:26:48Z,MERGED,True,15,4,1,https://github.com/JoshuaGross,Explicitly import packages in the javascript version of sbp. ,1,[],https://github.com/swift-nav/libsbp/pull/361,https://github.com/JoshuaGross,1,https://github.com/swift-nav/libsbp/pull/361,Doing implicit imports breaks transpilers and packagers.,Doing implicit imports breaks transpilers and packagers.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,362,2016-07-28T20:19:05Z,2016-08-01T20:57:08Z,2016-08-01T20:57:08Z,CLOSED,False,358,109,10,https://github.com/gsmcmullin,Add a message for setting registration.,3,[],https://github.com/swift-nav/libsbp/pull/362,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/362,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,362,2016-07-28T20:19:05Z,2016-08-01T20:57:08Z,2016-08-01T20:57:08Z,CLOSED,False,358,109,10,https://github.com/gsmcmullin,Add a message for setting registration.,3,[],https://github.com/swift-nav/libsbp/pull/362,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/362#issuecomment-236023736,,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,362,2016-07-28T20:19:05Z,2016-08-01T20:57:08Z,2016-08-01T20:57:08Z,CLOSED,False,358,109,10,https://github.com/gsmcmullin,Add a message for setting registration.,3,[],https://github.com/swift-nav/libsbp/pull/362,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/362#issuecomment-236321016,,fix the merge conflict?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,362,2016-07-28T20:19:05Z,2016-08-01T20:57:08Z,2016-08-01T20:57:08Z,CLOSED,False,358,109,10,https://github.com/gsmcmullin,Add a message for setting registration.,3,[],https://github.com/swift-nav/libsbp/pull/362,https://github.com/JoshuaGross,4,https://github.com/swift-nav/libsbp/pull/362#issuecomment-236705348,,Pulling this in manually.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,363,2016-07-29T23:52:38Z,2016-07-31T07:41:53Z,2016-07-31T07:41:55Z,MERGED,True,7,3,2,https://github.com/JoshuaGross,debug failing javascript test on travis,5,[],https://github.com/swift-nav/libsbp/pull/363,https://github.com/JoshuaGross,1,https://github.com/swift-nav/libsbp/pull/363,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,364,2016-08-01T21:07:34Z,2016-08-01T21:39:19Z,2016-08-01T21:39:21Z,MERGED,True,579,210,32,https://github.com/JoshuaGross,"v1.1.0 release: settings message, javascript message construction",1,[],https://github.com/swift-nav/libsbp/pull/364,https://github.com/JoshuaGross,1,https://github.com/swift-nav/libsbp/pull/364,Add settings message and fix javascript message construction,Add settings message and fix javascript message construction,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,364,2016-08-01T21:07:34Z,2016-08-01T21:39:19Z,2016-08-01T21:39:21Z,MERGED,True,579,210,32,https://github.com/JoshuaGross,"v1.1.0 release: settings message, javascript message construction",1,[],https://github.com/swift-nav/libsbp/pull/364,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/364#issuecomment-236713073,Add settings message and fix javascript message construction,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/365,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/365#issuecomment-237152718,,"I added some comments.
@mookerji You are listed as owner of this repo, so might be good for you to also review.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/365#issuecomment-237152758,,@pmiettinen Also it says there are conflicts so need to rebase,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/ljbade,4,https://github.com/swift-nav/libsbp/pull/365#issuecomment-237223774,,"Remove the reserved fields from the new messages, and add the metres unit to User range accuracy",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/JoshuaGross,5,https://github.com/swift-nav/libsbp/pull/365#issuecomment-237467916,,"Besides my one comment above, this looks good to me - thanks @ljbade for the thorough review. I'll trust you and @pmiettinen that this is the best way to organize this set of data and that these fields are logical.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/ljbade,6,https://github.com/swift-nav/libsbp/pull/365#issuecomment-237494973,,@JoshuaGross Yeah this message reflects how firmware has been storing and using the GPS and GLONASS ephemeris for several months now.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/ljbade,7,https://github.com/swift-nav/libsbp/pull/365#issuecomment-237495409,,"ok, this looks good to me too, feel free to merge",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/ljbade,8,https://github.com/swift-nav/libsbp/pull/365#issuecomment-237495618,,"Oh, and making a note we should make issues to update the other repos that use libsbp, mainly gnss-analysis (@anth-cole) and navengine (@mookerji)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/pmiettinen,9,https://github.com/swift-nav/libsbp/pull/365#issuecomment-237496751,,@ljbade We don't have write access for merge.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,365,2016-08-02T11:20:42Z,2016-08-04T09:28:31Z,2016-08-04T10:19:43Z,MERGED,True,1538,272,9,https://github.com/pmiettinen,i291 SBP ephe update,1,[],https://github.com/swift-nav/libsbp/pull/365,https://github.com/ljbade,10,https://github.com/swift-nav/libsbp/pull/365#issuecomment-237513552,,@pmiettinen strange ill add exafore to write access,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,366,2016-08-04T05:40:30Z,2016-08-07T05:00:46Z,2016-08-07T05:00:46Z,MERGED,True,2,23,4,https://github.com/mfine,Remove delta,2,[],https://github.com/swift-nav/libsbp/pull/366,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/366,"Delta is derivable from the timestamps. Don't include it in the logs.
/cc @jkretzmer","Delta is derivable from the timestamps. Don't include it in the logs.
/cc @jkretzmer",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,366,2016-08-04T05:40:30Z,2016-08-07T05:00:46Z,2016-08-07T05:00:46Z,MERGED,True,2,23,4,https://github.com/mfine,Remove delta,2,[],https://github.com/swift-nav/libsbp/pull/366,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/366#issuecomment-237467011,"Delta is derivable from the timestamps. Don't include it in the logs.
/cc @jkretzmer","üëç
So, it looks like the Java version also has a delta() function and output. Can you remove it there too?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,366,2016-08-04T05:40:30Z,2016-08-07T05:00:46Z,2016-08-07T05:00:46Z,MERGED,True,2,23,4,https://github.com/mfine,Remove delta,2,[],https://github.com/swift-nav/libsbp/pull/366,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/366#issuecomment-237608360,"Delta is derivable from the timestamps. Don't include it in the logs.
/cc @jkretzmer",Good catch. Removed.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,367,2016-08-04T11:04:23Z,2016-08-11T18:27:44Z,2016-08-15T12:27:17Z,MERGED,True,729,13,8,https://github.com/pmiettinen,Add new messages for iono and l2c capabilities,1,[],https://github.com/swift-nav/libsbp/pull/367,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/367,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,367,2016-08-04T11:04:23Z,2016-08-11T18:27:44Z,2016-08-15T12:27:17Z,MERGED,True,729,13,8,https://github.com/pmiettinen,Add new messages for iono and l2c capabilities,1,[],https://github.com/swift-nav/libsbp/pull/367,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/367#issuecomment-238002657,,"Per discussion in planning ticket, can you add a t_nmct (gps_time_t) to iono and L2C capabilities message. And t_op (gps_time_t) to L2C group delay message.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,367,2016-08-04T11:04:23Z,2016-08-11T18:27:44Z,2016-08-15T12:27:17Z,MERGED,True,729,13,8,https://github.com/pmiettinen,Add new messages for iono and l2c capabilities,1,[],https://github.com/swift-nav/libsbp/pull/367,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/367#issuecomment-238702550,,I think these messages are good now.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,367,2016-08-04T11:04:23Z,2016-08-11T18:27:44Z,2016-08-15T12:27:17Z,MERGED,True,729,13,8,https://github.com/pmiettinen,Add new messages for iono and l2c capabilities,1,[],https://github.com/swift-nav/libsbp/pull/367,https://github.com/JoshuaGross,4,https://github.com/swift-nav/libsbp/pull/367#issuecomment-239247326,,This looks good to me. Merge at will.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,367,2016-08-04T11:04:23Z,2016-08-11T18:27:44Z,2016-08-15T12:27:17Z,MERGED,True,729,13,8,https://github.com/pmiettinen,Add new messages for iono and l2c capabilities,1,[],https://github.com/swift-nav/libsbp/pull/367,https://github.com/JoshuaGross,5,https://github.com/swift-nav/libsbp/pull/367#issuecomment-239248312,,"Actually, I know y'all want it merged, I'll just do it for you :)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,368,2016-08-08T22:02:08Z,2016-08-08T22:16:35Z,2016-08-08T22:16:37Z,MERGED,True,1,10,2,https://github.com/mfine,slim down requirements.,2,[],https://github.com/swift-nav/libsbp/pull/368,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/368,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,369,2016-08-09T00:10:06Z,2016-08-11T18:50:47Z,2016-09-03T00:45:29Z,CLOSED,False,1166,121,16,https://github.com/wltr,Add device monitor message.,4,[],https://github.com/swift-nav/libsbp/pull/369,https://github.com/wltr,1,https://github.com/swift-nav/libsbp/pull/369,"This message adds support for internal voltage and die temperature measurements on Zynq based devices.
@mfine @denniszollo @switanis","This message adds support for internal voltage and die temperature measurements on Zynq based devices.
@mfine @denniszollo @switanis",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,369,2016-08-09T00:10:06Z,2016-08-11T18:50:47Z,2016-09-03T00:45:29Z,CLOSED,False,1166,121,16,https://github.com/wltr,Add device monitor message.,4,[],https://github.com/swift-nav/libsbp/pull/369,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/369#issuecomment-238435035,"This message adds support for internal voltage and die temperature measurements on Zynq based devices.
@mfine @denniszollo @switanis",Nice,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,369,2016-08-09T00:10:06Z,2016-08-11T18:50:47Z,2016-09-03T00:45:29Z,CLOSED,False,1166,121,16,https://github.com/wltr,Add device monitor message.,4,[],https://github.com/swift-nav/libsbp/pull/369,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/369#issuecomment-238445722,"This message adds support for internal voltage and die temperature measurements on Zynq based devices.
@mfine @denniszollo @switanis","Looks good, I would also like to see more specific units like Leith indicated. Also, run the code generators if you can.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,369,2016-08-09T00:10:06Z,2016-08-11T18:50:47Z,2016-09-03T00:45:29Z,CLOSED,False,1166,121,16,https://github.com/wltr,Add device monitor message.,4,[],https://github.com/swift-nav/libsbp/pull/369,https://github.com/switanis,4,https://github.com/swift-nav/libsbp/pull/369#issuecomment-238661080,"This message adds support for internal voltage and die temperature measurements on Zynq based devices.
@mfine @denniszollo @switanis","I strongly recommend to use scaled integers for passing values instead of floats. Integers can be shorter, are easier to deal and examine, clearly define range and resolution, are not subject of rounding, faster to manipulate. For voltage we can use u16 scaled by 1000. That will give range 0 to 65.535 V with 1mV resolution. Or make it s16 to cover from -32.768 to 32.767 V with 1mV res. For temp we can use s16 scaled by 100. That will give us range -327.68 (really -273.15) to 327.67 deg C with 0.01 deg C resolution.
Can we measure board supply voltage as well? That'd be the most useful for customers.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,369,2016-08-09T00:10:06Z,2016-08-11T18:50:47Z,2016-09-03T00:45:29Z,CLOSED,False,1166,121,16,https://github.com/wltr,Add device monitor message.,4,[],https://github.com/swift-nav/libsbp/pull/369,https://github.com/wltr,5,https://github.com/swift-nav/libsbp/pull/369#issuecomment-238726110,"This message adds support for internal voltage and die temperature measurements on Zynq based devices.
@mfine @denniszollo @switanis","Thanks for the comments!
Updates:

Use degree C
Use s16 with scaling factor
Add dev_vin to monitor VIN on the GNSS module (has yet to be implemented in firmware)

@ljbade @JoshuaGross @switanis",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,369,2016-08-09T00:10:06Z,2016-08-11T18:50:47Z,2016-09-03T00:45:29Z,CLOSED,False,1166,121,16,https://github.com/wltr,Add device monitor message.,4,[],https://github.com/swift-nav/libsbp/pull/369,https://github.com/JoshuaGross,6,https://github.com/swift-nav/libsbp/pull/369#issuecomment-239248851,"This message adds support for internal voltage and die temperature measurements on Zynq based devices.
@mfine @denniszollo @switanis",Looks good. Going to fix the merge conflict and pull in manually.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,370,2016-08-11T03:51:08Z,2016-09-09T17:41:04Z,2016-09-09T17:41:10Z,MERGED,True,65,41,3,https://github.com/gsmcmullin,C bindings: Allow multiple callbacks for a message.  ,2,[],https://github.com/swift-nav/libsbp/pull/370,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/370,"And add function to remove a callback.
/cc @jacobmcnamee","And add function to remove a callback.
/cc @jacobmcnamee",True,{'THUMBS_UP': ['https://github.com/JoshuaGross']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,370,2016-08-11T03:51:08Z,2016-09-09T17:41:04Z,2016-09-09T17:41:10Z,MERGED,True,65,41,3,https://github.com/gsmcmullin,C bindings: Allow multiple callbacks for a message.  ,2,[],https://github.com/swift-nav/libsbp/pull/370,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/370#issuecomment-239085682,"And add function to remove a callback.
/cc @jacobmcnamee","This is great! Test is failing, relevant lines (?):
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c: In function ‚Äòtest_sbp_process‚Äô:
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c:157:3: error: implicit declaration of function ‚Äòsbp_find_callback‚Äô [-Werror=implicit-function-declaration]
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c: In function ‚Äòtest_callbacks‚Äô:
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c:382:3: error: comparison between pointer and integer [-Werror]
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c:385:3: error: invalid type argument of ‚Äò->‚Äô (have ‚Äòint‚Äô)
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c:397:3: error: comparison between pointer and integer [-Werror]
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c:400:3: error: invalid type argument of ‚Äò->‚Äô (have ‚Äòint‚Äô)
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c:403:3: error: comparison between pointer and integer [-Werror]
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c:406:3: error: invalid type argument of ‚Äò->‚Äô (have ‚Äòint‚Äô)
/home/travis/build/swift-nav/libsbp/c/test/check_sbp.c: At top level:
cc1: error: unrecognized command line option ""-Wno-unknown-warning-option"" [-Werror]
cc1: all warnings being treated as errors",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,370,2016-08-11T03:51:08Z,2016-09-09T17:41:04Z,2016-09-09T17:41:10Z,MERGED,True,65,41,3,https://github.com/gsmcmullin,C bindings: Allow multiple callbacks for a message.  ,2,[],https://github.com/swift-nav/libsbp/pull/370,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/370#issuecomment-241540527,"And add function to remove a callback.
/cc @jacobmcnamee",@mookerji @mfine any opposition to bringing this in? This changes the C API so should we bump this to 1.2.0 or 2.0.0?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,370,2016-08-11T03:51:08Z,2016-09-09T17:41:04Z,2016-09-09T17:41:10Z,MERGED,True,65,41,3,https://github.com/gsmcmullin,C bindings: Allow multiple callbacks for a message.  ,2,[],https://github.com/swift-nav/libsbp/pull/370,https://github.com/mookerji,4,https://github.com/swift-nav/libsbp/pull/370#issuecomment-241541036,"And add function to remove a callback.
/cc @jacobmcnamee","It doesn't changed the messaging wire format, just the internal details of the C library. I think it would actually bump the minor version of the C library, if one exists.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,370,2016-08-11T03:51:08Z,2016-09-09T17:41:04Z,2016-09-09T17:41:10Z,MERGED,True,65,41,3,https://github.com/gsmcmullin,C bindings: Allow multiple callbacks for a message.  ,2,[],https://github.com/swift-nav/libsbp/pull/370,https://github.com/JoshuaGross,5,https://github.com/swift-nav/libsbp/pull/370#issuecomment-241541364,"And add function to remove a callback.
/cc @jacobmcnamee","So far we've been keeping all the version numbers in lockstep, which I'd like to continue doing. We can bump the minor version number. So 1.2.0 it is?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,370,2016-08-11T03:51:08Z,2016-09-09T17:41:04Z,2016-09-09T17:41:10Z,MERGED,True,65,41,3,https://github.com/gsmcmullin,C bindings: Allow multiple callbacks for a message.  ,2,[],https://github.com/swift-nav/libsbp/pull/370,https://github.com/mfine,6,https://github.com/swift-nav/libsbp/pull/370#issuecomment-241541447,"And add function to remove a callback.
/cc @jacobmcnamee",Works for me.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,370,2016-08-11T03:51:08Z,2016-09-09T17:41:04Z,2016-09-09T17:41:10Z,MERGED,True,65,41,3,https://github.com/gsmcmullin,C bindings: Allow multiple callbacks for a message.  ,2,[],https://github.com/swift-nav/libsbp/pull/370,https://github.com/mookerji,7,https://github.com/swift-nav/libsbp/pull/370#issuecomment-241541511,"And add function to remove a callback.
/cc @jacobmcnamee",üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,370,2016-08-11T03:51:08Z,2016-09-09T17:41:04Z,2016-09-09T17:41:10Z,MERGED,True,65,41,3,https://github.com/gsmcmullin,C bindings: Allow multiple callbacks for a message.  ,2,[],https://github.com/swift-nav/libsbp/pull/370,https://github.com/gsmcmullin,8,https://github.com/swift-nav/libsbp/pull/370#issuecomment-245982378,"And add function to remove a callback.
/cc @jacobmcnamee","@JoshuaGross @mfine @mookerji Is it ok for me to merge this, or must the version change be part of this PR?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,370,2016-08-11T03:51:08Z,2016-09-09T17:41:04Z,2016-09-09T17:41:10Z,MERGED,True,65,41,3,https://github.com/gsmcmullin,C bindings: Allow multiple callbacks for a message.  ,2,[],https://github.com/swift-nav/libsbp/pull/370,https://github.com/mfine,9,https://github.com/swift-nav/libsbp/pull/370#issuecomment-245982897,"And add function to remove a callback.
/cc @jacobmcnamee",Good to merge - then you can tag master with 1.2.0 after the merge.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,371,2016-08-11T17:33:14Z,2016-11-18T00:58:44Z,2016-11-18T00:58:44Z,CLOSED,False,1,3,2,https://github.com/denniszollo,add back in deprecated observation message,1,[],https://github.com/swift-nav/libsbp/pull/371,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/371,@jkretzmer.  How do we communicate this?  Please take a look at the sbp doc and see if it makes sense to you.,@jkretzmer.  How do we communicate this?  Please take a look at the sbp doc and see if it makes sense to you.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,371,2016-08-11T17:33:14Z,2016-11-18T00:58:44Z,2016-11-18T00:58:44Z,CLOSED,False,1,3,2,https://github.com/denniszollo,add back in deprecated observation message,1,[],https://github.com/swift-nav/libsbp/pull/371,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/371#issuecomment-239251509,@jkretzmer.  How do we communicate this?  Please take a look at the sbp doc and see if it makes sense to you.,Could you un-deprecate it by adding back a different message? Not sure what the best thing to do is.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,373,2016-08-11T18:42:10Z,2016-08-11T18:50:47Z,2016-08-11T18:50:52Z,MERGED,True,1450,132,21,https://github.com/JoshuaGross,Bringing in @wltr's device monitoring message by running codegen.,1,[],https://github.com/swift-nav/libsbp/pull/373,https://github.com/JoshuaGross,1,https://github.com/swift-nav/libsbp/pull/373,Resolves #369,Resolves #369,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,374,2016-08-11T19:43:26Z,2016-11-18T00:59:01Z,2016-11-18T00:59:01Z,CLOSED,False,1,4,2,https://github.com/jkretzmer,show deprecated observation message in sbp.pdf,2,[],https://github.com/swift-nav/libsbp/pull/374,https://github.com/jkretzmer,1,https://github.com/swift-nav/libsbp/pull/374,"updated observation.yaml to remove public: False from MSG_OBS_DEP_B.
@denniszollo review before merge.","updated observation.yaml to remove public: False from MSG_OBS_DEP_B.
@denniszollo review before merge.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,375,2016-09-08T01:53:24Z,2016-09-08T18:49:51Z,2016-09-08T19:20:15Z,MERGED,True,42,17,6,https://github.com/margaret,Timestamp metadata to ISO 8601,3,[],https://github.com/swift-nav/libsbp/pull/375,https://github.com/margaret,1,https://github.com/swift-nav/libsbp/pull/375,"for https://github.com/swift-nav/test_team_planning/issues/127
Still need to update the python tests, which are strangely passing despite obviously being wrong
https://github.com/swift-nav/libsbp/blob/master/python/tests/sbp/client/test_logger.py#L46
/cc @cbeighley @mfine @denniszollo","for https://github.com/swift-nav/test_team_planning/issues/127
Still need to update the python tests, which are strangely passing despite obviously being wrong
https://github.com/swift-nav/libsbp/blob/master/python/tests/sbp/client/test_logger.py#L46
/cc @cbeighley @mfine @denniszollo",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,375,2016-09-08T01:53:24Z,2016-09-08T18:49:51Z,2016-09-08T19:20:15Z,MERGED,True,42,17,6,https://github.com/margaret,Timestamp metadata to ISO 8601,3,[],https://github.com/swift-nav/libsbp/pull/375,https://github.com/margaret,2,https://github.com/swift-nav/libsbp/pull/375#issuecomment-245473050,"for https://github.com/swift-nav/test_team_planning/issues/127
Still need to update the python tests, which are strangely passing despite obviously being wrong
https://github.com/swift-nav/libsbp/blob/master/python/tests/sbp/client/test_logger.py#L46
/cc @cbeighley @mfine @denniszollo","(edit: not js tests, was just part of install commands) travis is crashing cuz of this http://stackoverflow.com/questions/37677468/error-while-building-r-package-on-travis-ci-tlmgr-update-self-failed
Looks like the fix for that was merged already, though. Any thoughts? TeX Live hasn't been updated since the time that stackoverflow question was posted.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,375,2016-09-08T01:53:24Z,2016-09-08T18:49:51Z,2016-09-08T19:20:15Z,MERGED,True,42,17,6,https://github.com/margaret,Timestamp metadata to ISO 8601,3,[],https://github.com/swift-nav/libsbp/pull/375,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/375#issuecomment-245482065,"for https://github.com/swift-nav/test_team_planning/issues/127
Still need to update the python tests, which are strangely passing despite obviously being wrong
https://github.com/swift-nav/libsbp/blob/master/python/tests/sbp/client/test_logger.py#L46
/cc @cbeighley @mfine @denniszollo",This looks great!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,375,2016-09-08T01:53:24Z,2016-09-08T18:49:51Z,2016-09-08T19:20:15Z,MERGED,True,42,17,6,https://github.com/margaret,Timestamp metadata to ISO 8601,3,[],https://github.com/swift-nav/libsbp/pull/375,https://github.com/margaret,4,https://github.com/swift-nav/libsbp/pull/375#issuecomment-245690216,"for https://github.com/swift-nav/test_team_planning/issues/127
Still need to update the python tests, which are strangely passing despite obviously being wrong
https://github.com/swift-nav/libsbp/blob/master/python/tests/sbp/client/test_logger.py#L46
/cc @cbeighley @mfine @denniszollo","Trying the TeX Live installation in a docker container resulted in the same error. I did tlmgr install --reinstall * and it said
tlmgr itself needs to be updated.
Please do this via either
 tlmgr update --self
or by getting the latest updater for Unix-ish systems:
 http://mirror.ctan.org/systems/texlive/tlnet/update-tlmgr-latest.sh
and/or Windows systems:
 http://mirror.ctan.org/systems/texlive/tlnet/update-tlmgr-latest.exe
Then continue with other updates as usual.

The Unix link redirected to http://ctan.mirrors.hoobly.com/systems/texlive/tlnet/update-tlmgr-latest.sh which seemed to work, except now travis stalls at
! LaTeX Error: File `cmbright.sty' not found.

Type X to quit or <RETURN> to proceed,

or enter new name. (Default extension: sty)

Enter file name: 

when trying to generate PDF docs :(
Edit: Ah, installingcmbright failed but travis continued anyway.
tlmgr: package repository http://mirror.hmc.edu/ctan/systems/texlive/tlnet (verified)

[1/1, ??:??/??:??] install: cmbright [110k]

TLPDB::_install_package: downloading did not succeed

tlmgr: package log updated: /home/travis/texlive/texmf-var/web2c/tlmgr.log",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,375,2016-09-08T01:53:24Z,2016-09-08T18:49:51Z,2016-09-08T19:20:15Z,MERGED,True,42,17,6,https://github.com/margaret,Timestamp metadata to ISO 8601,3,[],https://github.com/swift-nav/libsbp/pull/375,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/375#issuecomment-245694236,"for https://github.com/swift-nav/test_team_planning/issues/127
Still need to update the python tests, which are strangely passing despite obviously being wrong
https://github.com/swift-nav/libsbp/blob/master/python/tests/sbp/client/test_logger.py#L46
/cc @cbeighley @mfine @denniszollo",@margaret let's pull out the latex stuff for now and bring this in and move on!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,376,2016-09-08T18:53:39Z,2016-09-08T19:25:17Z,2016-09-08T19:25:19Z,MERGED,True,3,6,1,https://github.com/mfine,Ignore tlmgr update failures,2,[],https://github.com/swift-nav/libsbp/pull/376,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/376,Just keep going.,Just keep going.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,377,2016-09-09T18:13:51Z,2016-09-23T17:35:58Z,2016-09-23T17:35:59Z,MERGED,True,1,1,1,https://github.com/wltr,Device monitor message: Fix VIN scaling.,1,[],https://github.com/swift-nav/libsbp/pull/377,https://github.com/wltr,1,https://github.com/swift-nav/libsbp/pull/377,"Realized this is board dependent and will be taken care of somewhere else. SBP message should be just a generic voltage level applicable to any device.
/cc @JoshuaGross","Realized this is board dependent and will be taken care of somewhere else. SBP message should be just a generic voltage level applicable to any device.
/cc @JoshuaGross",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,377,2016-09-09T18:13:51Z,2016-09-23T17:35:58Z,2016-09-23T17:35:59Z,MERGED,True,1,1,1,https://github.com/wltr,Device monitor message: Fix VIN scaling.,1,[],https://github.com/swift-nav/libsbp/pull/377,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/377#issuecomment-245995866,"Realized this is board dependent and will be taken care of somewhere else. SBP message should be just a generic voltage level applicable to any device.
/cc @JoshuaGross","üëç
I think this requires a major version bump since we're changing the meaning of the field substantially.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,377,2016-09-09T18:13:51Z,2016-09-23T17:35:58Z,2016-09-23T17:35:59Z,MERGED,True,1,1,1,https://github.com/wltr,Device monitor message: Fix VIN scaling.,1,[],https://github.com/swift-nav/libsbp/pull/377,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/377#issuecomment-245995954,"Realized this is board dependent and will be taken care of somewhere else. SBP message should be just a generic voltage level applicable to any device.
/cc @JoshuaGross","Minor version bump, rather, as opposed to patch version.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,377,2016-09-09T18:13:51Z,2016-09-23T17:35:58Z,2016-09-23T17:35:59Z,MERGED,True,1,1,1,https://github.com/wltr,Device monitor message: Fix VIN scaling.,1,[],https://github.com/swift-nav/libsbp/pull/377,https://github.com/JoshuaGross,4,https://github.com/swift-nav/libsbp/pull/377#issuecomment-246040322,"Realized this is board dependent and will be taken care of somewhere else. SBP message should be just a generic voltage level applicable to any device.
/cc @JoshuaGross","This field has already made it into a previous SBP release, right?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,377,2016-09-09T18:13:51Z,2016-09-23T17:35:58Z,2016-09-23T17:35:59Z,MERGED,True,1,1,1,https://github.com/wltr,Device monitor message: Fix VIN scaling.,1,[],https://github.com/swift-nav/libsbp/pull/377,https://github.com/wltr,5,https://github.com/swift-nav/libsbp/pull/377#issuecomment-246892410,"Realized this is board dependent and will be taken care of somewhere else. SBP message should be just a generic voltage level applicable to any device.
/cc @JoshuaGross","Yes, it was in 1.1.3, but I shouldn't have put the / 11 in the unit description.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,378,2016-09-09T21:56:14Z,2016-09-12T20:40:03Z,2016-09-12T20:40:07Z,MERGED,True,4116,4131,9,https://github.com/mfine,Move from timestamp to time,3,[],https://github.com/swift-nav/libsbp/pull/378,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/378,"Move from time to timestamp so we can differentiate.
/cc @margaret","Move from time to timestamp so we can differentiate.
/cc @margaret",True,{'THUMBS_UP': ['https://github.com/margaret']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,378,2016-09-09T21:56:14Z,2016-09-12T20:40:03Z,2016-09-12T20:40:07Z,MERGED,True,4116,4131,9,https://github.com/mfine,Move from timestamp to time,3,[],https://github.com/swift-nav/libsbp/pull/378,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/378#issuecomment-246052496,"Move from time to timestamp so we can differentiate.
/cc @margaret","I don't think we should change the meaning of timestamp. Let's start with a new field, time, so that breakage will be clear. I don't think it's worth the effort to update all the data logs used in the tests - just going to skip the multi json test.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,378,2016-09-09T21:56:14Z,2016-09-12T20:40:03Z,2016-09-12T20:40:07Z,MERGED,True,4116,4131,9,https://github.com/mfine,Move from timestamp to time,3,[],https://github.com/swift-nav/libsbp/pull/378,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/378#issuecomment-246484902,"Move from time to timestamp so we can differentiate.
/cc @margaret",Fixed all the logs and tests. Ugh.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,379,2016-09-13T09:20:15Z,2016-09-21T08:46:34Z,2016-09-21T08:46:39Z,MERGED,True,369,3,7,https://github.com/dt-exafore,Add reacq-related SBP message,1,[],https://github.com/swift-nav/libsbp/pull/379,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/379,"https://github.com/swift-nav/exafore_planning/issues/326
Changes according to design: https://swiftnav.hackpad.com/Piksi-v3-Re-Acquisition-Control-Design-Phase-1-Qia9kaydkvP#:h=Debugging","https://github.com/swift-nav/exafore_planning/issues/326
Changes according to design: https://swiftnav.hackpad.com/Piksi-v3-Re-Acquisition-Control-Design-Phase-1-Qia9kaydkvP#:h=Debugging",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,379,2016-09-13T09:20:15Z,2016-09-21T08:46:34Z,2016-09-21T08:46:39Z,MERGED,True,369,3,7,https://github.com/dt-exafore,Add reacq-related SBP message,1,[],https://github.com/swift-nav/libsbp/pull/379,https://github.com/adel-mamin,2,https://github.com/swift-nav/libsbp/pull/379#issuecomment-247970145,"https://github.com/swift-nav/exafore_planning/issues/326
Changes according to design: https://swiftnav.hackpad.com/Piksi-v3-Re-Acquisition-Control-Design-Phase-1-Qia9kaydkvP#:h=Debugging",Looks good to me.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,380,2016-09-16T01:21:07Z,2016-09-16T05:10:26Z,2016-09-16T16:48:30Z,MERGED,True,68,14,6,https://github.com/JoshuaGross,[JS] toJSON method is very wrong - it should return an object to be stringified,2,[],https://github.com/swift-nav/libsbp/pull/380,https://github.com/JoshuaGross,1,https://github.com/swift-nav/libsbp/pull/380,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,380,2016-09-16T01:21:07Z,2016-09-16T05:10:26Z,2016-09-16T16:48:30Z,MERGED,True,68,14,6,https://github.com/JoshuaGross,[JS] toJSON method is very wrong - it should return an object to be stringified,2,[],https://github.com/swift-nav/libsbp/pull/380,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/380#issuecomment-247497145,,also added a variety of example scripts,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,380,2016-09-16T01:21:07Z,2016-09-16T05:10:26Z,2016-09-16T16:48:30Z,MERGED,True,68,14,6,https://github.com/JoshuaGross,[JS] toJSON method is very wrong - it should return an object to be stringified,2,[],https://github.com/swift-nav/libsbp/pull/380,https://github.com/mookerji,3,https://github.com/swift-nav/libsbp/pull/380#issuecomment-247650276,,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,381,2016-09-16T20:33:59Z,2016-09-16T23:46:27Z,2016-09-16T23:46:30Z,MERGED,True,195,15,4,https://github.com/JoshuaGross,Add a whitelist option to the javascript library. Can speed up dispatching substantially,3,[],https://github.com/swift-nav/libsbp/pull/381,https://github.com/JoshuaGross,1,https://github.com/swift-nav/libsbp/pull/381,"Add a whitelist option to the javascript library. Can speed up decoding/dispatching substantially if you know you want to ignore some messages. Basically if there's a whitelist and a message is filtered out, it isn't fully decoded - saving some CPU cycles.
Was dropping >90% of position messages previously at 10hz, now dropping 0% of the position messages. YMMV depending on how aggressively you're filtering.","Add a whitelist option to the javascript library. Can speed up decoding/dispatching substantially if you know you want to ignore some messages. Basically if there's a whitelist and a message is filtered out, it isn't fully decoded - saving some CPU cycles.
Was dropping >90% of position messages previously at 10hz, now dropping 0% of the position messages. YMMV depending on how aggressively you're filtering.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,381,2016-09-16T20:33:59Z,2016-09-16T23:46:27Z,2016-09-16T23:46:30Z,MERGED,True,195,15,4,https://github.com/JoshuaGross,Add a whitelist option to the javascript library. Can speed up dispatching substantially,3,[],https://github.com/swift-nav/libsbp/pull/381,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/381#issuecomment-247702575,"Add a whitelist option to the javascript library. Can speed up decoding/dispatching substantially if you know you want to ignore some messages. Basically if there's a whitelist and a message is filtered out, it isn't fully decoded - saving some CPU cycles.
Was dropping >90% of position messages previously at 10hz, now dropping 0% of the position messages. YMMV depending on how aggressively you're filtering.",cc @mfine @mookerji,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,381,2016-09-16T20:33:59Z,2016-09-16T23:46:27Z,2016-09-16T23:46:30Z,MERGED,True,195,15,4,https://github.com/JoshuaGross,Add a whitelist option to the javascript library. Can speed up dispatching substantially,3,[],https://github.com/swift-nav/libsbp/pull/381,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/381#issuecomment-247720493,"Add a whitelist option to the javascript library. Can speed up decoding/dispatching substantially if you know you want to ignore some messages. Basically if there's a whitelist and a message is filtered out, it isn't fully decoded - saving some CPU cycles.
Was dropping >90% of position messages previously at 10hz, now dropping 0% of the position messages. YMMV depending on how aggressively you're filtering.","Added a benchmark and some unit tests. The benchmark doesn't run automatically, but currently shows that filtering out half of your messages (when only decoding two messages) has about an 18% performance increase. Should scale with the ratio of messages that are being filtered out before decode.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,381,2016-09-16T20:33:59Z,2016-09-16T23:46:27Z,2016-09-16T23:46:30Z,MERGED,True,195,15,4,https://github.com/JoshuaGross,Add a whitelist option to the javascript library. Can speed up dispatching substantially,3,[],https://github.com/swift-nav/libsbp/pull/381,https://github.com/mookerji,4,https://github.com/swift-nav/libsbp/pull/381#issuecomment-247731697,"Add a whitelist option to the javascript library. Can speed up decoding/dispatching substantially if you know you want to ignore some messages. Basically if there's a whitelist and a message is filtered out, it isn't fully decoded - saving some CPU cycles.
Was dropping >90% of position messages previously at 10hz, now dropping 0% of the position messages. YMMV depending on how aggressively you're filtering.",üëç !,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,382,2016-10-04T17:10:52Z,2016-10-04T19:59:00Z,2016-10-04T19:59:00Z,MERGED,True,2,2,1,https://github.com/mfine,Make ECEF flags around float and fixed solution consistent with LLH,1,[],https://github.com/swift-nav/libsbp/pull/382,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/382,"Position flags were inconsistent around fixed and float solutions. Make them consistent.
/cc @denniszollo @mookerji","Position flags were inconsistent around fixed and float solutions. Make them consistent.
/cc @denniszollo @mookerji",True,{'THUMBS_UP': ['https://github.com/JoshuaGross']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,383,2016-10-12T09:35:47Z,2016-10-17T07:53:46Z,2016-10-17T07:53:51Z,MERGED,True,9,9,3,https://github.com/dt-exafore,Correct data types in reacq SBP,1,[],https://github.com/swift-nav/libsbp/pull/383,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/383,Based on https://github.com/swift-nav/exafore_planning/issues/400,Based on https://github.com/swift-nav/exafore_planning/issues/400,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,383,2016-10-12T09:35:47Z,2016-10-17T07:53:46Z,2016-10-17T07:53:51Z,MERGED,True,9,9,3,https://github.com/dt-exafore,Correct data types in reacq SBP,1,[],https://github.com/swift-nav/libsbp/pull/383,https://github.com/dt-exafore,2,https://github.com/swift-nav/libsbp/pull/383#issuecomment-253166157,Based on https://github.com/swift-nav/exafore_planning/issues/400,"@adel-mamin Please, take a look",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/384,Needed for swift-nav/piksi_firmware_private#167,Needed for swift-nav/piksi_firmware_private#167,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/384#issuecomment-253519141,Needed for swift-nav/piksi_firmware_private#167,@denniszollo how do I update the test? I can't find any docs on this process,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/384#issuecomment-254993151,Needed for swift-nav/piksi_firmware_private#167,@mookerji or @JoshuaGross  do you know how to update the tests?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/JoshuaGross,4,https://github.com/swift-nav/libsbp/pull/384#issuecomment-254996211,Needed for swift-nav/piksi_firmware_private#167,"did you run all of the generators? it looks like you didn't regen all the code, tests should be regenerated also",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/JoshuaGross,5,https://github.com/swift-nav/libsbp/pull/384#issuecomment-254996265,Needed for swift-nav/piksi_firmware_private#167,"just doing make all should do it? if you just want to do tests, make test",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/ljbade,6,https://github.com/swift-nav/libsbp/pull/384#issuecomment-254996531,Needed for swift-nav/piksi_firmware_private#167,@JoshuaGross hmm maybe im missing some apt packages needed to generate the code,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/ljbade,7,https://github.com/swift-nav/libsbp/pull/384#issuecomment-255900345,Needed for swift-nav/piksi_firmware_private#167,"[ 67%] Building C object test/CMakeFiles/test_libsbp.dir/auto_check_sbp_acquisition_1.c.o
In file included from /home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:15:0:
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c: In function ‚Äòtest_auto_check_sbp_acquisition_1‚Äô:
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:129:21: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 36.663608551*100) < 0.05, ""incorrect value for snr, expected 36.663608551, is %f"", msg->snr);
                     ^
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:129:119: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 36.663608551*100) < 0.05, ""incorrect value for snr, expected 36.663608551, is %f"", msg->snr);
                                                                                                                       ^
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:175:21: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 36.1687545776*100) < 0.05, ""incorrect value for snr, expected 36.1687545776, is %f"", msg->snr);
                     ^
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:175:121: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 36.1687545776*100) < 0.05, ""incorrect value for snr, expected 36.1687545776, is %f"", msg->snr);
                                                                                                                         ^
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:221:21: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 35.7772369385*100) < 0.05, ""incorrect value for snr, expected 35.7772369385, is %f"", msg->snr);
                     ^
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:221:121: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 35.7772369385*100) < 0.05, ""incorrect value for snr, expected 35.7772369385, is %f"", msg->snr);
                                                                                                                         ^
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:267:21: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 35.6945114136*100) < 0.05, ""incorrect value for snr, expected 35.6945114136, is %f"", msg->snr);
                     ^
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:267:121: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 35.6945114136*100) < 0.05, ""incorrect value for snr, expected 35.6945114136, is %f"", msg->snr);
                                                                                                                         ^
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:313:21: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 35.5241775513*100) < 0.05, ""incorrect value for snr, expected 35.5241775513, is %f"", msg->snr);
                     ^
/home/leith/swift/libsbp/c/test/auto_check_sbp_acquisition_1.c:313:121: error: ‚Äòmsg_acq_result_t {aka struct <anonymous>}‚Äô has no member named ‚Äòsnr‚Äô
     fail_unless((msg->snr*100 - 35.5241775513*100) < 0.05, ""incorrect value for snr, expected 35.5241775513, is %f"", msg->snr);

@JoshuaGross This is the error I get when running make all",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/JoshuaGross,8,https://github.com/swift-nav/libsbp/pull/384#issuecomment-255905491,Needed for swift-nav/piksi_firmware_private#167,"For posterity: if you look in the filesystem for where those numbers come from (ag 35.5241775513), you find that they're in test spec files  like spec/tests/yaml/swiftnav/sbp/acquisition/test_MsgAcqResult.yaml, which should be updated with new data whenever new messages are introduced.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/ljbade,9,https://github.com/swift-nav/libsbp/pull/384#issuecomment-256524286,Needed for swift-nav/piksi_firmware_private#167,"OK so I think the proper way to finish this is to make a firmware PR with the new message, log some SBP then use build_test_data.py",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/ljbade,10,https://github.com/swift-nav/libsbp/pull/384#issuecomment-256528505,Needed for swift-nav/piksi_firmware_private#167,"I managed to capture new test data.
@denniszollo Can you review this PR?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,384,2016-10-13T13:51:31Z,2016-10-28T01:20:32Z,2016-10-28T01:20:32Z,MERGED,True,3727,2971,48,https://github.com/ljbade,Update acquisition message to use CN/0,1,[],https://github.com/swift-nav/libsbp/pull/384,https://github.com/mfine,11,https://github.com/swift-nav/libsbp/pull/384#issuecomment-256812885,Needed for swift-nav/piksi_firmware_private#167,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,385,2016-10-13T15:02:32Z,2016-11-18T00:57:52Z,2016-11-18T00:57:52Z,CLOSED,False,155,24,1,https://github.com/ljbade,New observation message,1,[],https://github.com/swift-nav/libsbp/pull/385,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/385,"WIP new observation message
Changes:

receiver clock time instead of GPS time for observation epoch. This removes need to propagate observations before sending them, and matches the RINEX standard that epoch time must be receiver clock time, including any clock jumps.
nanosecond precision for receiver clock time. Needed to send receiver clock time, until we can implement clock steering.
flags field. Sends status flags about the observation, such as which measurements are valid (e.g. code only), or whether a clock jump occurred.
SNR field. @valeri-atamaniouk requested that we add SNR alongside CN/0 to provide more accurate indication of measurement quality to the RTK filter.
Measured doppler. Allows us to generate full RINEX files from SBP. Is the only piece of data that the base observation thread is missing to reconstruct the original measurement to match what the rover had. Also useful in RTK filter when calculated Doppler is not available due to a clock jump, or missing observation. I am open to making this an optional field controlled by a setting if data rate is a concern.

I also corrected references to GPS to GNSS since other constellations are supported.
To verify:

range and resolution required for SNR
range and resolution required for doppler

/cc @denniszollo @anth-cole @valeri-atamaniouk","WIP new observation message
Changes:

receiver clock time instead of GPS time for observation epoch. This removes need to propagate observations before sending them, and matches the RINEX standard that epoch time must be receiver clock time, including any clock jumps.
nanosecond precision for receiver clock time. Needed to send receiver clock time, until we can implement clock steering.
flags field. Sends status flags about the observation, such as which measurements are valid (e.g. code only), or whether a clock jump occurred.
SNR field. @valeri-atamaniouk requested that we add SNR alongside CN/0 to provide more accurate indication of measurement quality to the RTK filter.
Measured doppler. Allows us to generate full RINEX files from SBP. Is the only piece of data that the base observation thread is missing to reconstruct the original measurement to match what the rover had. Also useful in RTK filter when calculated Doppler is not available due to a clock jump, or missing observation. I am open to making this an optional field controlled by a setting if data rate is a concern.

I also corrected references to GPS to GNSS since other constellations are supported.
To verify:

range and resolution required for SNR
range and resolution required for doppler

/cc @denniszollo @anth-cole @valeri-atamaniouk",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,385,2016-10-13T15:02:32Z,2016-11-18T00:57:52Z,2016-11-18T00:57:52Z,CLOSED,False,155,24,1,https://github.com/ljbade,New observation message,1,[],https://github.com/swift-nav/libsbp/pull/385,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/385#issuecomment-253548443,"WIP new observation message
Changes:

receiver clock time instead of GPS time for observation epoch. This removes need to propagate observations before sending them, and matches the RINEX standard that epoch time must be receiver clock time, including any clock jumps.
nanosecond precision for receiver clock time. Needed to send receiver clock time, until we can implement clock steering.
flags field. Sends status flags about the observation, such as which measurements are valid (e.g. code only), or whether a clock jump occurred.
SNR field. @valeri-atamaniouk requested that we add SNR alongside CN/0 to provide more accurate indication of measurement quality to the RTK filter.
Measured doppler. Allows us to generate full RINEX files from SBP. Is the only piece of data that the base observation thread is missing to reconstruct the original measurement to match what the rover had. Also useful in RTK filter when calculated Doppler is not available due to a clock jump, or missing observation. I am open to making this an optional field controlled by a setting if data rate is a concern.

I also corrected references to GPS to GNSS since other constellations are supported.
To verify:

range and resolution required for SNR
range and resolution required for doppler

/cc @denniszollo @anth-cole @valeri-atamaniouk","There were some proposals around changes to the OBS message yesterday:
https://swiftnav.hackpad.com/SBP-Updates-nvQmY03Xx2m#:h=Proposal-Oct-12-2016
Observation message updates:

Remove week number (2 bytes)
Replace 4 byte obs.sid with 2 bytes, matching the firmware SID representation

Satellite ID (1 byte) (actual value from ICD, not value minus 1)
Signal (Band/Constellation/Etc) Code (1 byte)


Replace 2 byte lock counter with 1 byte, conforming to DF402 from RTCM 10403.2
Add 1 byte of flags for each satellite - need to talk to Estimation and Exafore about what these should be

Bit 0: Time fix valid (or code phase valid)
Bit 1: Carrier phase valid
Bit 2: Half cycle ambiguity resolved
Bits 3-7: Reserved


Have observations be sent out at all times, use flags to indicate validity

/cc @denniszollo @cbeighley",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,385,2016-10-13T15:02:32Z,2016-11-18T00:57:52Z,2016-11-18T00:57:52Z,CLOSED,False,155,24,1,https://github.com/ljbade,New observation message,1,[],https://github.com/swift-nav/libsbp/pull/385,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/385#issuecomment-253577100,"WIP new observation message
Changes:

receiver clock time instead of GPS time for observation epoch. This removes need to propagate observations before sending them, and matches the RINEX standard that epoch time must be receiver clock time, including any clock jumps.
nanosecond precision for receiver clock time. Needed to send receiver clock time, until we can implement clock steering.
flags field. Sends status flags about the observation, such as which measurements are valid (e.g. code only), or whether a clock jump occurred.
SNR field. @valeri-atamaniouk requested that we add SNR alongside CN/0 to provide more accurate indication of measurement quality to the RTK filter.
Measured doppler. Allows us to generate full RINEX files from SBP. Is the only piece of data that the base observation thread is missing to reconstruct the original measurement to match what the rover had. Also useful in RTK filter when calculated Doppler is not available due to a clock jump, or missing observation. I am open to making this an optional field controlled by a setting if data rate is a concern.

I also corrected references to GPS to GNSS since other constellations are supported.
To verify:

range and resolution required for SNR
range and resolution required for doppler

/cc @denniszollo @anth-cole @valeri-atamaniouk","my feedback -this is too big on the wire.  In this schema we need 6 more bytes per observation and 4 more per observation header, on an already bloated format.  This is basically the only message where we need to be stingy with space, and I can't get behind letting it grow.
we went from this:

to this:

I say get rid of SNR, add the increased time resolution with an integer rather than 4 more bytes, remove week number, and reduce the doppler precision.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,385,2016-10-13T15:02:32Z,2016-11-18T00:57:52Z,2016-11-18T00:57:52Z,CLOSED,False,155,24,1,https://github.com/ljbade,New observation message,1,[],https://github.com/swift-nav/libsbp/pull/385,https://github.com/ljbade,4,https://github.com/swift-nav/libsbp/pull/385#issuecomment-254993012,"WIP new observation message
Changes:

receiver clock time instead of GPS time for observation epoch. This removes need to propagate observations before sending them, and matches the RINEX standard that epoch time must be receiver clock time, including any clock jumps.
nanosecond precision for receiver clock time. Needed to send receiver clock time, until we can implement clock steering.
flags field. Sends status flags about the observation, such as which measurements are valid (e.g. code only), or whether a clock jump occurred.
SNR field. @valeri-atamaniouk requested that we add SNR alongside CN/0 to provide more accurate indication of measurement quality to the RTK filter.
Measured doppler. Allows us to generate full RINEX files from SBP. Is the only piece of data that the base observation thread is missing to reconstruct the original measurement to match what the rover had. Also useful in RTK filter when calculated Doppler is not available due to a clock jump, or missing observation. I am open to making this an optional field controlled by a setting if data rate is a concern.

I also corrected references to GPS to GNSS since other constellations are supported.
To verify:

range and resolution required for SNR
range and resolution required for doppler

/cc @denniszollo @anth-cole @valeri-atamaniouk",@mookerji what is needed to change this to what was decided in tthe SBPCONF16,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,386,2016-10-13T16:19:46Z,2016-11-18T00:58:06Z,2016-11-18T00:58:06Z,CLOSED,False,121,0,1,https://github.com/cbeighley,Proposed changes before launch,1,[],https://github.com/swift-nav/libsbp/pull/386,https://github.com/cbeighley,1,https://github.com/swift-nav/libsbp/pull/386,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,386,2016-10-13T16:19:46Z,2016-11-18T00:58:06Z,2016-11-18T00:58:06Z,CLOSED,False,121,0,1,https://github.com/cbeighley,Proposed changes before launch,1,[],https://github.com/swift-nav/libsbp/pull/386,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/386#issuecomment-253638218,,"From my other PR: #384

fix the acquisition message to use CN/0, and remove that weird comment about SNR

Add WN to messages which don't have it, and add keep it in observatoins. Sure not needed for real time operations, but makes it a pain when working with SBP logs. Also makes conversion to RINEX difficult. Although perhaps we could rely on the GPS time message when converting SBP logs to RINEX? (And just require user to enter date if not missing).
Add SNR instead of CN/0 for observations (or have both). @valeri-atamaniouk explained nicely to me that he wants to add SNR for use in the RTK filter as it is a more reliable indicator of measurement quality than CN/0 since CN/0 does not reflect changes in tracking loop integration length.
Add a way to get measured doppler. Since not needed by RTK (and not usable anyway according to @anth-cole) we should but this in a separate optional message. This would be used to generate RINEX logs, and for analysing this value which is used in SPP velocity solving. Would make it easier to fix bugs/issues with velocity.
Use receiver time not GPS time for observations. This is a key requirement for full RINEX compatibility. However until we have clock steering (@colin would it be possible to make this requirement for final release?) we need higher than ms precision. I am open to using a fixed point type solution here to reduce the number of bytes needed for nanosecond resolution.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,386,2016-10-13T16:19:46Z,2016-11-18T00:58:06Z,2016-11-18T00:58:06Z,CLOSED,False,121,0,1,https://github.com/cbeighley,Proposed changes before launch,1,[],https://github.com/swift-nav/libsbp/pull/386,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/386#issuecomment-253652761,,"Two more things:
Optimising the observation header will have little impact compared to changes to the per-satellite fields, particulary when we add GLONASS support and might be sending up to 40 sats measurements each epoch. Thus saving 2 bytes for WN seems pointless.
In the POS LLH message there is a status flag that indicates Piksi can output either ellipsoidal or geiod height. Piksi has never had a geoid, and thus never supported geoid heights. Can we rename this field to reserved until we can implement a geoid? Will avoid customer confusion.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,386,2016-10-13T16:19:46Z,2016-11-18T00:58:06Z,2016-11-18T00:58:06Z,CLOSED,False,121,0,1,https://github.com/cbeighley,Proposed changes before launch,1,[],https://github.com/swift-nav/libsbp/pull/386,https://github.com/ljbade,4,https://github.com/swift-nav/libsbp/pull/386#issuecomment-254613839,,"I forgot to note here, @anth-cole is hoping we can check if latest firmware can recreate computed doppler from base SBP observations accurately. We should run this test before we lock down the new messages in case changes are needed.
There is also the possibility we will need lock_time so RTK can use that to judge observation quality, although perhaps we can calculate this at SBP reception.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,386,2016-10-13T16:19:46Z,2016-11-18T00:58:06Z,2016-11-18T00:58:06Z,CLOSED,False,121,0,1,https://github.com/cbeighley,Proposed changes before launch,1,[],https://github.com/swift-nav/libsbp/pull/386,https://github.com/fnoble,5,https://github.com/swift-nav/libsbp/pull/386#issuecomment-254664966,,Also we should kill the MSG_IAR_STATE message as its no longer used,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,386,2016-10-13T16:19:46Z,2016-11-18T00:58:06Z,2016-11-18T00:58:06Z,CLOSED,False,121,0,1,https://github.com/cbeighley,Proposed changes before launch,1,[],https://github.com/swift-nav/libsbp/pull/386,https://github.com/denniszollo,6,https://github.com/swift-nav/libsbp/pull/386#issuecomment-254688346,,"Good point on the GEOD, lets move this back to reserved.  Also, do we want to keep the RAIM repair flags in solutions?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,386,2016-10-13T16:19:46Z,2016-11-18T00:58:06Z,2016-11-18T00:58:06Z,CLOSED,False,121,0,1,https://github.com/cbeighley,Proposed changes before launch,1,[],https://github.com/swift-nav/libsbp/pull/386,https://github.com/denniszollo,7,https://github.com/swift-nav/libsbp/pull/386#issuecomment-255890894,,now superseded by #389,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,387,2016-10-18T19:02:52Z,2016-10-19T16:29:53Z,2019-05-20T16:53:35Z,MERGED,True,5,5,2,https://github.com/cbeighley,Update references to MSG_PRINT,1,[],https://github.com/swift-nav/libsbp/pull/387,https://github.com/cbeighley,1,https://github.com/swift-nav/libsbp/pull/387,@mfine @mookerji,@mfine @mookerji,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,387,2016-10-18T19:02:52Z,2016-10-19T16:29:53Z,2019-05-20T16:53:35Z,MERGED,True,5,5,2,https://github.com/cbeighley,Update references to MSG_PRINT,1,[],https://github.com/swift-nav/libsbp/pull/387,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/387#issuecomment-254606649,@mfine @mookerji,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,388,2016-10-20T00:25:49Z,2016-10-20T20:57:48Z,2016-10-20T20:57:50Z,MERGED,True,15,21,3,https://github.com/mfine,Pass in device_uid directly,2,[],https://github.com/swift-nav/libsbp/pull/388,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/388,"Don't initialize the object with a device_uid, pass it in to the connect functions so that we can be more flexible with what we pass in.
/cc @mookerji","Don't initialize the object with a device_uid, pass it in to the connect functions so that we can be more flexible with what we pass in.
/cc @mookerji",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,389,2016-10-24T18:51:58Z,2016-11-09T20:51:48Z,2016-11-09T20:51:48Z,MERGED,True,9097,1216,114,https://github.com/denniszollo,Dz sbp proposal,31,[],https://github.com/swift-nav/libsbp/pull/389,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/389,"We are deprecating a bunch of the basic navigation messages which will cause a lot of software churn:
here is a mapping table for those changes:



old msg_id (int)
Hex
new msg_id (int)
Hex
message_name
dep_msg_name




512
200
521
209
MsgPosECEF
MsgPosECEFDepA


515
203
524
20C
MsgBaselineNED
MsgBaselineNEDDepA


516
204
525
20D
MsgVelECEF
MsgVelECEFDepA


517
205
526
20E
MsgVelNED
MsgVelNEDDepA


518
206
520
208
MsgDops
MsgDopsDepA


513
201
522
20A
MsgPosLLH
MsgPosLLHDepA


514
202
523
20B
MsgBaselineECEF
MsgBaselineECEFDepA


256
100
258
102
MsgGPSTime
MsgGPSTimeDepA



Here is the new document version for reference: sbp.pdf","We are deprecating a bunch of the basic navigation messages which will cause a lot of software churn:
here is a mapping table for those changes:



old msg_id (int)
Hex
new msg_id (int)
Hex
message_name
dep_msg_name




512
200
521
209
MsgPosECEF
MsgPosECEFDepA


515
203
524
20C
MsgBaselineNED
MsgBaselineNEDDepA


516
204
525
20D
MsgVelECEF
MsgVelECEFDepA


517
205
526
20E
MsgVelNED
MsgVelNEDDepA


518
206
520
208
MsgDops
MsgDopsDepA


513
201
522
20A
MsgPosLLH
MsgPosLLHDepA


514
202
523
20B
MsgBaselineECEF
MsgBaselineECEFDepA


256
100
258
102
MsgGPSTime
MsgGPSTimeDepA



Here is the new document version for reference: sbp.pdf",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,389,2016-10-24T18:51:58Z,2016-11-09T20:51:48Z,2016-11-09T20:51:48Z,MERGED,True,9097,1216,114,https://github.com/denniszollo,Dz sbp proposal,31,[],https://github.com/swift-nav/libsbp/pull/389,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/389#issuecomment-256522209,"We are deprecating a bunch of the basic navigation messages which will cause a lot of software churn:
here is a mapping table for those changes:



old msg_id (int)
Hex
new msg_id (int)
Hex
message_name
dep_msg_name




512
200
521
209
MsgPosECEF
MsgPosECEFDepA


515
203
524
20C
MsgBaselineNED
MsgBaselineNEDDepA


516
204
525
20D
MsgVelECEF
MsgVelECEFDepA


517
205
526
20E
MsgVelNED
MsgVelNEDDepA


518
206
520
208
MsgDops
MsgDopsDepA


513
201
522
20A
MsgPosLLH
MsgPosLLHDepA


514
202
523
20B
MsgBaselineECEF
MsgBaselineECEFDepA


256
100
258
102
MsgGPSTime
MsgGPSTimeDepA



Here is the new document version for reference: sbp.pdf","Nice work, I love the new observation message",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,389,2016-10-24T18:51:58Z,2016-11-09T20:51:48Z,2016-11-09T20:51:48Z,MERGED,True,9097,1216,114,https://github.com/denniszollo,Dz sbp proposal,31,[],https://github.com/swift-nav/libsbp/pull/389,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/389#issuecomment-258272937,"We are deprecating a bunch of the basic navigation messages which will cause a lot of software churn:
here is a mapping table for those changes:



old msg_id (int)
Hex
new msg_id (int)
Hex
message_name
dep_msg_name




512
200
521
209
MsgPosECEF
MsgPosECEFDepA


515
203
524
20C
MsgBaselineNED
MsgBaselineNEDDepA


516
204
525
20D
MsgVelECEF
MsgVelECEFDepA


517
205
526
20E
MsgVelNED
MsgVelNEDDepA


518
206
520
208
MsgDops
MsgDopsDepA


513
201
522
20A
MsgPosLLH
MsgPosLLHDepA


514
202
523
20B
MsgBaselineECEF
MsgBaselineECEFDepA


256
100
258
102
MsgGPSTime
MsgGPSTimeDepA



Here is the new document version for reference: sbp.pdf",superceded by #402,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,389,2016-10-24T18:51:58Z,2016-11-09T20:51:48Z,2016-11-09T20:51:48Z,MERGED,True,9097,1216,114,https://github.com/denniszollo,Dz sbp proposal,31,[],https://github.com/swift-nav/libsbp/pull/389,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/389#issuecomment-259021406,"We are deprecating a bunch of the basic navigation messages which will cause a lot of software churn:
here is a mapping table for those changes:



old msg_id (int)
Hex
new msg_id (int)
Hex
message_name
dep_msg_name




512
200
521
209
MsgPosECEF
MsgPosECEFDepA


515
203
524
20C
MsgBaselineNED
MsgBaselineNEDDepA


516
204
525
20D
MsgVelECEF
MsgVelECEFDepA


517
205
526
20E
MsgVelNED
MsgVelNEDDepA


518
206
520
208
MsgDops
MsgDopsDepA


513
201
522
20A
MsgPosLLH
MsgPosLLHDepA


514
202
523
20B
MsgBaselineECEF
MsgBaselineECEFDepA


256
100
258
102
MsgGPSTime
MsgGPSTimeDepA



Here is the new document version for reference: sbp.pdf","I am going to go over this PR myself again, but I think it's ready to go.  The only unit test I haven't made is MsgObs which will be much easier when Piksi is sending out the new format.  We will take the action to add in a unit test as part of the MsgObs development effort.
@mfine, would you have a chance to take a look?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,389,2016-10-24T18:51:58Z,2016-11-09T20:51:48Z,2016-11-09T20:51:48Z,MERGED,True,9097,1216,114,https://github.com/denniszollo,Dz sbp proposal,31,[],https://github.com/swift-nav/libsbp/pull/389,https://github.com/denniszollo,5,https://github.com/swift-nav/libsbp/pull/389#issuecomment-259021498,"We are deprecating a bunch of the basic navigation messages which will cause a lot of software churn:
here is a mapping table for those changes:



old msg_id (int)
Hex
new msg_id (int)
Hex
message_name
dep_msg_name




512
200
521
209
MsgPosECEF
MsgPosECEFDepA


515
203
524
20C
MsgBaselineNED
MsgBaselineNEDDepA


516
204
525
20D
MsgVelECEF
MsgVelECEFDepA


517
205
526
20E
MsgVelNED
MsgVelNEDDepA


518
206
520
208
MsgDops
MsgDopsDepA


513
201
522
20A
MsgPosLLH
MsgPosLLHDepA


514
202
523
20B
MsgBaselineECEF
MsgBaselineECEFDepA


256
100
258
102
MsgGPSTime
MsgGPSTimeDepA



Here is the new document version for reference: sbp.pdf",@ljbade - I think I addressed all of your comments as well.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,389,2016-10-24T18:51:58Z,2016-11-09T20:51:48Z,2016-11-09T20:51:48Z,MERGED,True,9097,1216,114,https://github.com/denniszollo,Dz sbp proposal,31,[],https://github.com/swift-nav/libsbp/pull/389,https://github.com/mfine,6,https://github.com/swift-nav/libsbp/pull/389#issuecomment-259031956,"We are deprecating a bunch of the basic navigation messages which will cause a lot of software churn:
here is a mapping table for those changes:



old msg_id (int)
Hex
new msg_id (int)
Hex
message_name
dep_msg_name




512
200
521
209
MsgPosECEF
MsgPosECEFDepA


515
203
524
20C
MsgBaselineNED
MsgBaselineNEDDepA


516
204
525
20D
MsgVelECEF
MsgVelECEFDepA


517
205
526
20E
MsgVelNED
MsgVelNEDDepA


518
206
520
208
MsgDops
MsgDopsDepA


513
201
522
20A
MsgPosLLH
MsgPosLLHDepA


514
202
523
20B
MsgBaselineECEF
MsgBaselineECEFDepA


256
100
258
102
MsgGPSTime
MsgGPSTimeDepA



Here is the new document version for reference: sbp.pdf",I had no further comments.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,389,2016-10-24T18:51:58Z,2016-11-09T20:51:48Z,2016-11-09T20:51:48Z,MERGED,True,9097,1216,114,https://github.com/denniszollo,Dz sbp proposal,31,[],https://github.com/swift-nav/libsbp/pull/389,https://github.com/ljbade,7,https://github.com/swift-nav/libsbp/pull/389#issuecomment-259108617,"We are deprecating a bunch of the basic navigation messages which will cause a lot of software churn:
here is a mapping table for those changes:



old msg_id (int)
Hex
new msg_id (int)
Hex
message_name
dep_msg_name




512
200
521
209
MsgPosECEF
MsgPosECEFDepA


515
203
524
20C
MsgBaselineNED
MsgBaselineNEDDepA


516
204
525
20D
MsgVelECEF
MsgVelECEFDepA


517
205
526
20E
MsgVelNED
MsgVelNEDDepA


518
206
520
208
MsgDops
MsgDopsDepA


513
201
522
20A
MsgPosLLH
MsgPosLLHDepA


514
202
523
20B
MsgBaselineECEF
MsgBaselineECEFDepA


256
100
258
102
MsgGPSTime
MsgGPSTimeDepA



Here is the new document version for reference: sbp.pdf","@denniszollo Excellent, yes makes sense to grab MsgObs test case once this is in Piksi firmware.
We will need to remember to change RTK and SPP to output number of sats in the various messages instead of number of signals.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,390,2016-10-25T00:49:13Z,2017-11-06T18:26:09Z,2017-12-14T16:00:35Z,CLOSED,False,120,1,1,https://github.com/mookerji,Draft UTC MSG_PVT message.,4,[],https://github.com/swift-nav/libsbp/pull/390,https://github.com/mookerji,1,https://github.com/swift-nav/libsbp/pull/390,"Closes:

https://github.com/swift-nav/skylark-tales/issues/425

/cc @fnoble @cbeighley @denniszollo @swift-nav/skylark @ljbade @anth-cole","Closes:

https://github.com/swift-nav/skylark-tales/issues/425

/cc @fnoble @cbeighley @denniszollo @swift-nav/skylark @ljbade @anth-cole",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,390,2016-10-25T00:49:13Z,2017-11-06T18:26:09Z,2017-12-14T16:00:35Z,CLOSED,False,120,1,1,https://github.com/mookerji,Draft UTC MSG_PVT message.,4,[],https://github.com/swift-nav/libsbp/pull/390,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/390#issuecomment-255908600,"Closes:

https://github.com/swift-nav/skylark-tales/issues/425

/cc @fnoble @cbeighley @denniszollo @swift-nav/skylark @ljbade @anth-cole","This is a strawman proposal. Please provide feedback.
Some notes:

The current proposed message is 64 bytes in size.
Note that there are two double-precision floats (16 bytes total) for latitude and longitude, that we could arguably replace by two Q16.32 types (12 bytes total) if we wanted to be ~1mm accurate on lat/lons.
The combined message total from MSG_GPS_TIME (11), MSG_POS_ECEF (32), MSG_POS_LLH (34), MSG_BASELINE_ECEF (20), MSG_BASELINE_LLH (22), MSG_VEL_ECEF (20), MSG_VEL_LLH (22) is 161 bytes.
Open to suggestions on alternative UTC-time representations.
Do we want any uh sooper sekrit reserved fields?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,390,2016-10-25T00:49:13Z,2017-11-06T18:26:09Z,2017-12-14T16:00:35Z,CLOSED,False,120,1,1,https://github.com/mookerji,Draft UTC MSG_PVT message.,4,[],https://github.com/swift-nav/libsbp/pull/390,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/390#issuecomment-256507744,"Closes:

https://github.com/swift-nav/skylark-tales/issues/425

/cc @fnoble @cbeighley @denniszollo @swift-nav/skylark @ljbade @anth-cole",we are going to have a very tough time refactoring the solution thread to put this out. the flow control will be nuts.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,390,2016-10-25T00:49:13Z,2017-11-06T18:26:09Z,2017-12-14T16:00:35Z,CLOSED,False,120,1,1,https://github.com/mookerji,Draft UTC MSG_PVT message.,4,[],https://github.com/swift-nav/libsbp/pull/390,https://github.com/mookerji,4,https://github.com/swift-nav/libsbp/pull/390#issuecomment-256663627,"Closes:

https://github.com/swift-nav/skylark-tales/issues/425

/cc @fnoble @cbeighley @denniszollo @swift-nav/skylark @ljbade @anth-cole","@denniszollo your concerns are duly noted, I moved that to a different issue here: https://github.com/swift-nav/skylark-tales/issues/432",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,390,2016-10-25T00:49:13Z,2017-11-06T18:26:09Z,2017-12-14T16:00:35Z,CLOSED,False,120,1,1,https://github.com/mookerji,Draft UTC MSG_PVT message.,4,[],https://github.com/swift-nav/libsbp/pull/390,https://github.com/mookerji,5,https://github.com/swift-nav/libsbp/pull/390#issuecomment-256693620,"Closes:

https://github.com/swift-nav/skylark-tales/issues/425

/cc @fnoble @cbeighley @denniszollo @swift-nav/skylark @ljbade @anth-cole","Updated! Looking for feedback on:

UTC time flags
Missing data we might want to include
Any other DOP besides PDOP?
Do we want to include any additional reserved fields?
Do we want to replace lat/lon with a fixed-width representation? If so I can work out the details to make sure we have enough precision.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,390,2016-10-25T00:49:13Z,2017-11-06T18:26:09Z,2017-12-14T16:00:35Z,CLOSED,False,120,1,1,https://github.com/mookerji,Draft UTC MSG_PVT message.,4,[],https://github.com/swift-nav/libsbp/pull/390,https://github.com/ljbade,6,https://github.com/swift-nav/libsbp/pull/390#issuecomment-256777779,"Closes:

https://github.com/swift-nav/skylark-tales/issues/425

/cc @fnoble @cbeighley @denniszollo @swift-nav/skylark @ljbade @anth-cole","Hmm, are we providing velocity accuracy info in the dedicated velocity messages? If customer needs that level of detail for a control loop etc",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,390,2016-10-25T00:49:13Z,2017-11-06T18:26:09Z,2017-12-14T16:00:35Z,CLOSED,False,120,1,1,https://github.com/mookerji,Draft UTC MSG_PVT message.,4,[],https://github.com/swift-nav/libsbp/pull/390,https://github.com/mookerji,7,https://github.com/swift-nav/libsbp/pull/390#issuecomment-256809109,"Closes:

https://github.com/swift-nav/skylark-tales/issues/425

/cc @fnoble @cbeighley @denniszollo @swift-nav/skylark @ljbade @anth-cole",@ljbade see my note about velocity accuracy. I don't think it makes sense.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,390,2016-10-25T00:49:13Z,2017-11-06T18:26:09Z,2017-12-14T16:00:35Z,CLOSED,False,120,1,1,https://github.com/mookerji,Draft UTC MSG_PVT message.,4,[],https://github.com/swift-nav/libsbp/pull/390,https://github.com/ljbade,8,https://github.com/swift-nav/libsbp/pull/390#issuecomment-256811004,"Closes:

https://github.com/swift-nav/skylark-tales/issues/425

/cc @fnoble @cbeighley @denniszollo @swift-nav/skylark @ljbade @anth-cole","@mookerji yes but that will not give us flexibility in future to change it to use kalman filer or rtk dynamic model derived velocity, if we find our current pure LSQ doppler implementation is not good enough for our customer use cases
but im happy if you think if we do such a change we will just define a new SBP message with accuracy field at the time",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,391,2016-10-26T23:33:47Z,2016-10-28T01:03:27Z,2016-10-28T01:03:29Z,MERGED,True,2862,906,109,https://github.com/ljbade,WIP: Add detailed tracking state message,14,[],https://github.com/swift-nav/libsbp/pull/391,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/391,"First cut at translating https://swiftnav.hackpad.com/Tracker-status-SBP-message-2lJmxzJBvrH into yaml.
I still need to fill out all the flag bits.
/cc @denniszollo @mfine @valeri-atamaniouk @adel-mamin @anth-cole","First cut at translating https://swiftnav.hackpad.com/Tracker-status-SBP-message-2lJmxzJBvrH into yaml.
I still need to fill out all the flag bits.
/cc @denniszollo @mfine @valeri-atamaniouk @adel-mamin @anth-cole",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,392,2016-10-28T14:47:44Z,2016-10-28T15:27:30Z,2016-10-28T15:27:30Z,MERGED,True,103,102,16,https://github.com/mfine,Base64 encoded strings in Haskell's JSON,1,[],https://github.com/swift-nav/libsbp/pull/392,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/392,"All of the strings in Haskell's JSON were being base64 encoded. This was because the strings used ByteString and picked up the base64-encoding implementation we provide for ByteString. This change switches strings to Text and avoids this issue.
/cc @mookerji","All of the strings in Haskell's JSON were being base64 encoded. This was because the strings used ByteString and picked up the base64-encoding implementation we provide for ByteString. This change switches strings to Text and avoids this issue.
/cc @mookerji",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,393,2016-10-28T21:27:12Z,2016-11-02T22:31:49Z,2016-11-02T22:32:40Z,MERGED,True,554,500,12,https://github.com/ljbade,Update tracking message to match firmware implementation,7,[],https://github.com/swift-nav/libsbp/pull/393,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/393,"@adel-mamin I have added the missing pseudorange valid flag.
@adel-mamin When you get swift-nav/piksi_firmware_private#221 running on hardware, could you capture me a short log of Piksi startup through to it finish getting lock on all the signals. I will use this to replace the current test YAML file which I generated with dummy data.
/cc @anth-cole @cbeighley","@adel-mamin I have added the missing pseudorange valid flag.
@adel-mamin When you get swift-nav/piksi_firmware_private#221 running on hardware, could you capture me a short log of Piksi startup through to it finish getting lock on all the signals. I will use this to replace the current test YAML file which I generated with dummy data.
/cc @anth-cole @cbeighley",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,393,2016-10-28T21:27:12Z,2016-11-02T22:31:49Z,2016-11-02T22:32:40Z,MERGED,True,554,500,12,https://github.com/ljbade,Update tracking message to match firmware implementation,7,[],https://github.com/swift-nav/libsbp/pull/393,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/393#issuecomment-257433972,"@adel-mamin I have added the missing pseudorange valid flag.
@adel-mamin When you get swift-nav/piksi_firmware_private#221 running on hardware, could you capture me a short log of Piksi startup through to it finish getting lock on all the signals. I will use this to replace the current test YAML file which I generated with dummy data.
/cc @anth-cole @cbeighley","Need to add some further changes from https://swiftnav.hackpad.com/Tracker-status-SBP-message-2lJmxzJBvrH

week number valid flag
clock valid flag",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,393,2016-10-28T21:27:12Z,2016-11-02T22:31:49Z,2016-11-02T22:32:40Z,MERGED,True,554,500,12,https://github.com/ljbade,Update tracking message to match firmware implementation,7,[],https://github.com/swift-nav/libsbp/pull/393,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/393#issuecomment-257440180,"@adel-mamin I have added the missing pseudorange valid flag.
@adel-mamin When you get swift-nav/piksi_firmware_private#221 running on hardware, could you capture me a short log of Piksi startup through to it finish getting lock on all the signals. I will use this to replace the current test YAML file which I generated with dummy data.
/cc @anth-cole @cbeighley",@adel-mamin Can you check the changes?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,393,2016-10-28T21:27:12Z,2016-11-02T22:31:49Z,2016-11-02T22:32:40Z,MERGED,True,554,500,12,https://github.com/ljbade,Update tracking message to match firmware implementation,7,[],https://github.com/swift-nav/libsbp/pull/393,https://github.com/mookerji,4,https://github.com/swift-nav/libsbp/pull/393#issuecomment-258019584,"@adel-mamin I have added the missing pseudorange valid flag.
@adel-mamin When you get swift-nav/piksi_firmware_private#221 running on hardware, could you capture me a short log of Piksi startup through to it finish getting lock on all the signals. I will use this to replace the current test YAML file which I generated with dummy data.
/cc @anth-cole @cbeighley",üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,393,2016-10-28T21:27:12Z,2016-11-02T22:31:49Z,2016-11-02T22:32:40Z,MERGED,True,554,500,12,https://github.com/ljbade,Update tracking message to match firmware implementation,7,[],https://github.com/swift-nav/libsbp/pull/393,https://github.com/ljbade,5,https://github.com/swift-nav/libsbp/pull/393#issuecomment-258019650,"@adel-mamin I have added the missing pseudorange valid flag.
@adel-mamin When you get swift-nav/piksi_firmware_private#221 running on hardware, could you capture me a short log of Piksi startup through to it finish getting lock on all the signals. I will use this to replace the current test YAML file which I generated with dummy data.
/cc @anth-cole @cbeighley",@mookerji thanks,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,394,2016-10-31T22:20:22Z,2016-10-31T22:32:39Z,2016-10-31T22:32:39Z,MERGED,True,617,28,4,https://github.com/ljbade,Release v1.2.5,1,[],https://github.com/swift-nav/libsbp/pull/394,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/394,/cc @mookerji @mfine,/cc @mookerji @mfine,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,394,2016-10-31T22:20:22Z,2016-10-31T22:32:39Z,2016-10-31T22:32:39Z,MERGED,True,617,28,4,https://github.com/ljbade,Release v1.2.5,1,[],https://github.com/swift-nav/libsbp/pull/394,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/394#issuecomment-257438913,/cc @mookerji @mfine,@ljbade looks good. Feel free to merge after Travis finishes its business.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,394,2016-10-31T22:20:22Z,2016-10-31T22:32:39Z,2016-10-31T22:32:39Z,MERGED,True,617,28,4,https://github.com/ljbade,Release v1.2.5,1,[],https://github.com/swift-nav/libsbp/pull/394,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/394#issuecomment-257439727,/cc @mookerji @mfine,Wow! Great!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,395,2016-10-31T22:42:07Z,2016-10-31T23:29:51Z,2016-10-31T23:29:51Z,MERGED,True,1,0,1,https://github.com/ljbade,Use bash in Make so pushd/popd work,1,[],https://github.com/swift-nav/libsbp/pull/395,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/395,"See dotnet/roslyn#7499
/cc @mookerji @JoshuaGross","See dotnet/roslyn#7499
/cc @mookerji @JoshuaGross",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,396,2016-10-31T23:16:31Z,2016-10-31T23:28:03Z,2016-10-31T23:28:03Z,MERGED,True,18,9,1,https://github.com/ljbade,Update HOWTO,1,[],https://github.com/swift-nav/libsbp/pull/396,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/396,/cc @mookerji @mfine @JoshuaGross,/cc @mookerji @mfine @JoshuaGross,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,396,2016-10-31T23:16:31Z,2016-10-31T23:28:03Z,2016-10-31T23:28:03Z,MERGED,True,18,9,1,https://github.com/ljbade,Update HOWTO,1,[],https://github.com/swift-nav/libsbp/pull/396,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/396#issuecomment-257448594,/cc @mookerji @mfine @JoshuaGross,@JoshuaGross I updated it to only push after recreating tag,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,396,2016-10-31T23:16:31Z,2016-10-31T23:28:03Z,2016-10-31T23:28:03Z,MERGED,True,18,9,1,https://github.com/ljbade,Update HOWTO,1,[],https://github.com/swift-nav/libsbp/pull/396,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/396#issuecomment-257448960,/cc @mookerji @mfine @JoshuaGross,looks good!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,397,2016-10-31T23:44:20Z,2016-10-31T23:57:15Z,2016-10-31T23:57:15Z,MERGED,True,6,1,1,https://github.com/ljbade,Do release on a Mac,1,[],https://github.com/swift-nav/libsbp/pull/397,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/397,/cc @mookerji @mfine @JoshuaGross,/cc @mookerji @mfine @JoshuaGross,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,398,2016-11-01T18:26:46Z,2016-11-01T22:57:00Z,2016-11-01T22:57:00Z,MERGED,True,17,7,1,https://github.com/mookerji,Add retries to networking writes.,1,[],https://github.com/swift-nav/libsbp/pull/398,https://github.com/mookerji,1,https://github.com/swift-nav/libsbp/pull/398,"Currently, the network driver only applied exponential backoff and retries to networking reads (HTTP GET), this adds the same feature for writes (HTTP POST) as well. This resolves an issue where we'd probably fail to recover a write connection in a network outage.
Required for: https://github.com/swift-nav/skylark-tales/issues/433.
/cc @denniszollo @JoshuaGross @mfine","Currently, the network driver only applied exponential backoff and retries to networking reads (HTTP GET), this adds the same feature for writes (HTTP POST) as well. This resolves an issue where we'd probably fail to recover a write connection in a network outage.
Required for: https://github.com/swift-nav/skylark-tales/issues/433.
/cc @denniszollo @JoshuaGross @mfine",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,399,2016-11-02T17:36:44Z,2016-11-02T22:12:10Z,2016-11-02T22:12:10Z,CLOSED,False,38,15,1,https://github.com/adel-mamin,Modify MSG_TRACKING_STATE_DETAILED message content,1,[],https://github.com/swift-nav/libsbp/pull/399,https://github.com/adel-mamin,1,https://github.com/swift-nav/libsbp/pull/399,"This modification is related to the PR https://github.com/swift-nav/piksi_firmware_private/pull/221, which uses it.","This modification is related to the PR https://github.com/swift-nav/piksi_firmware_private/pull/221, which uses it.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,399,2016-11-02T17:36:44Z,2016-11-02T22:12:10Z,2016-11-02T22:12:10Z,CLOSED,False,38,15,1,https://github.com/adel-mamin,Modify MSG_TRACKING_STATE_DETAILED message content,1,[],https://github.com/swift-nav/libsbp/pull/399,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/399#issuecomment-257984322,"This modification is related to the PR https://github.com/swift-nav/piksi_firmware_private/pull/221, which uses it.","@adel-mamin I had already started some of the changes in #393
I will pull the other changes into my PR and merge it.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,399,2016-11-02T17:36:44Z,2016-11-02T22:12:10Z,2016-11-02T22:12:10Z,CLOSED,False,38,15,1,https://github.com/adel-mamin,Modify MSG_TRACKING_STATE_DETAILED message content,1,[],https://github.com/swift-nav/libsbp/pull/399,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/399#issuecomment-258015391,"This modification is related to the PR https://github.com/swift-nav/piksi_firmware_private/pull/221, which uses it.",Closing in favour of #393,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,400,2016-11-02T20:52:12Z,2016-11-02T20:52:27Z,2016-11-02T23:32:17Z,MERGED,True,32,20,4,https://github.com/mfine,Give Haskell code better casing for GPSTime,1,[],https://github.com/swift-nav/libsbp/pull/400,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/400,"This is pretty ugly fix, but gPSTime_tow was pretty bad.","This is pretty ugly fix, but gPSTime_tow was pretty bad.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,400,2016-11-02T20:52:12Z,2016-11-02T20:52:27Z,2016-11-02T23:32:17Z,MERGED,True,32,20,4,https://github.com/mfine,Give Haskell code better casing for GPSTime,1,[],https://github.com/swift-nav/libsbp/pull/400,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/400#issuecomment-258030894,"This is pretty ugly fix, but gPSTime_tow was pretty bad.",wow that was pretty bad,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,400,2016-11-02T20:52:12Z,2016-11-02T20:52:27Z,2016-11-02T23:32:17Z,MERGED,True,32,20,4,https://github.com/mfine,Give Haskell code better casing for GPSTime,1,[],https://github.com/swift-nav/libsbp/pull/400,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/400#issuecomment-258030995,"This is pretty ugly fix, but gPSTime_tow was pretty bad.",hilarious,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,401,2016-11-02T22:53:15Z,2016-11-02T22:55:45Z,2016-11-02T22:55:45Z,MERGED,True,31,5,4,https://github.com/ljbade,Release v1.2.8,1,[],https://github.com/swift-nav/libsbp/pull/401,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/401,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,401,2016-11-02T22:53:15Z,2016-11-02T22:55:45Z,2016-11-02T22:55:45Z,MERGED,True,31,5,4,https://github.com/ljbade,Release v1.2.8,1,[],https://github.com/swift-nav/libsbp/pull/401,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/401#issuecomment-258024325,,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,402,2016-11-03T21:02:15Z,2016-11-04T01:43:10Z,2016-11-04T01:43:10Z,CLOSED,False,1214,161,24,https://github.com/denniszollo,[WIP] Dz sbp proposal rebase,24,[],https://github.com/swift-nav/libsbp/pull/402,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/402,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,403,2016-11-06T00:14:35Z,2016-11-06T00:29:21Z,2016-11-06T00:29:21Z,MERGED,True,3,1,1,https://github.com/mfine,Add a session-uid to the framer,1,[],https://github.com/swift-nav/libsbp/pull/403,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/403,"Add a session-uid to generated log information.
/cc @mookerji","Add a session-uid to generated log information.
/cc @mookerji",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,403,2016-11-06T00:14:35Z,2016-11-06T00:29:21Z,2016-11-06T00:29:21Z,MERGED,True,3,1,1,https://github.com/mfine,Add a session-uid to the framer,1,[],https://github.com/swift-nav/libsbp/pull/403,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/403#issuecomment-258651624,"Add a session-uid to generated log information.
/cc @mookerji",üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,407,2016-11-15T00:47:16Z,2016-11-15T00:50:42Z,2016-11-15T00:50:42Z,MERGED,True,0,0,1,https://github.com/denniszollo,update version number in PDF doc,1,[],https://github.com/swift-nav/libsbp/pull/407,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/407,I had built pdf doc without the tag,I had built pdf doc without the tag,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,408,2016-11-16T00:41:59Z,2016-11-18T00:11:26Z,2016-11-18T00:11:26Z,CLOSED,False,52,10,1,https://github.com/ljbade,RTK status message,1,[],https://github.com/swift-nav/libsbp/pull/408,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/408,"Here is a prototype message we could use to provide detailed info on how many signals (vs how many sats which is spec requires for the existing baseline messages) were used in last RTK solution.
Currently just provides aggregate number of L1 and L2 for code only, floating and fixed signals.
Other ideas:

expand to provide status per SID (similar to how observation message works):

state (code, float, fixed)
current ambiguity estimate?
variance used for the signal? (e.g. in future if we elevation weighting, or different variance depending on tracker state)
elevation?


add RTK specific DOP figures?

/cc @anth-cole @benjamin0","Here is a prototype message we could use to provide detailed info on how many signals (vs how many sats which is spec requires for the existing baseline messages) were used in last RTK solution.
Currently just provides aggregate number of L1 and L2 for code only, floating and fixed signals.
Other ideas:

expand to provide status per SID (similar to how observation message works):

state (code, float, fixed)
current ambiguity estimate?
variance used for the signal? (e.g. in future if we elevation weighting, or different variance depending on tracker state)
elevation?


add RTK specific DOP figures?

/cc @anth-cole @benjamin0",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,408,2016-11-16T00:41:59Z,2016-11-18T00:11:26Z,2016-11-18T00:11:26Z,CLOSED,False,52,10,1,https://github.com/ljbade,RTK status message,1,[],https://github.com/swift-nav/libsbp/pull/408,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/408#issuecomment-261410633,"Here is a prototype message we could use to provide detailed info on how many signals (vs how many sats which is spec requires for the existing baseline messages) were used in last RTK solution.
Currently just provides aggregate number of L1 and L2 for code only, floating and fixed signals.
Other ideas:

expand to provide status per SID (similar to how observation message works):

state (code, float, fixed)
current ambiguity estimate?
variance used for the signal? (e.g. in future if we elevation weighting, or different variance depending on tracker state)
elevation?


add RTK specific DOP figures?

/cc @anth-cole @benjamin0",Feedback I got was that this isn't needed,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,410,2016-11-24T00:15:36Z,2016-11-24T09:05:56Z,2016-11-24T09:05:56Z,MERGED,True,3985,956,55,https://github.com/denniszollo,change all msg_types to string of hex in test specification,3,[],https://github.com/swift-nav/libsbp/pull/410,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/410,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,410,2016-11-24T00:15:36Z,2016-11-24T09:05:56Z,2016-11-24T09:05:56Z,MERGED,True,3985,956,55,https://github.com/denniszollo,change all msg_types to string of hex in test specification,3,[],https://github.com/swift-nav/libsbp/pull/410,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/410#issuecomment-262724456,,"lgtm, merging",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,411,2016-11-24T09:10:17Z,2016-11-30T11:49:10Z,2016-11-30T11:49:13Z,MERGED,True,174,174,9,https://github.com/ljbade,Clarify height,2,[],https://github.com/swift-nav/libsbp/pull/411,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/411,"Clarifies that height is above the WGS84 ellipsoid.
Fixes #409
@denniszollo Can you review?","Clarifies that height is above the WGS84 ellipsoid.
Fixes #409
@denniszollo Can you review?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,411,2016-11-24T09:10:17Z,2016-11-30T11:49:10Z,2016-11-30T11:49:13Z,MERGED,True,174,174,9,https://github.com/ljbade,Clarify height,2,[],https://github.com/swift-nav/libsbp/pull/411,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/411#issuecomment-263808886,"Clarifies that height is above the WGS84 ellipsoid.
Fixes #409
@denniszollo Can you review?","Looks good to me, merge after fixing the conflict",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,412,2016-11-28T02:48:28Z,2016-11-30T01:55:05Z,2016-11-30T02:31:30Z,MERGED,True,656,136,11,https://github.com/gsmcmullin,Add a new request/response pair for execution of shell commands.,2,[],https://github.com/swift-nav/libsbp/pull/412,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/412,"A new request message MSG_SHELL_COMMAND_REQ is defined to request execution of a shell command on piksi.  The shell output may be sent back to the host using the existing MSG_LOG messages, and the final exit code is returned in the new MSG_SHELL_COMMAND_RESP message.","A new request message MSG_SHELL_COMMAND_REQ is defined to request execution of a shell command on piksi.  The shell output may be sent back to the host using the existing MSG_LOG messages, and the final exit code is returned in the new MSG_SHELL_COMMAND_RESP message.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,412,2016-11-28T02:48:28Z,2016-11-30T01:55:05Z,2016-11-30T02:31:30Z,MERGED,True,656,136,11,https://github.com/gsmcmullin,Add a new request/response pair for execution of shell commands.,2,[],https://github.com/swift-nav/libsbp/pull/412,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/412#issuecomment-263700873,"A new request message MSG_SHELL_COMMAND_REQ is defined to request execution of a shell command on piksi.  The shell output may be sent back to the host using the existing MSG_LOG messages, and the final exit code is returned in the new MSG_SHELL_COMMAND_RESP message.","I'd like to see justification on this, as I have concerns around

security (we should be making it harder to gain control of devices, not easier)
what happens if it's a long-running process?
is there a whitelist of commands that can be run?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,412,2016-11-28T02:48:28Z,2016-11-30T01:55:05Z,2016-11-30T02:31:30Z,MERGED,True,656,136,11,https://github.com/gsmcmullin,Add a new request/response pair for execution of shell commands.,2,[],https://github.com/swift-nav/libsbp/pull/412,https://github.com/gsmcmullin,3,https://github.com/swift-nav/libsbp/pull/412#issuecomment-263753904,"A new request message MSG_SHELL_COMMAND_REQ is defined to request execution of a shell command on piksi.  The shell output may be sent back to the host using the existing MSG_LOG messages, and the final exit code is returned in the new MSG_SHELL_COMMAND_RESP message.","I've updated it to remove the word 'shell'.
The rest of the concerns are around implementation, not protocol.

Since it is possible to load new firmware on the Piksi, ultimately you can make to run whatever you want.  Not allowing arbitrary commands only adds inconvenience, not security.
If the process does not terminate, the response will not be sent.
A command whitelist will be added to the implementation.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,412,2016-11-28T02:48:28Z,2016-11-30T01:55:05Z,2016-11-30T02:31:30Z,MERGED,True,656,136,11,https://github.com/gsmcmullin,Add a new request/response pair for execution of shell commands.,2,[],https://github.com/swift-nav/libsbp/pull/412,https://github.com/fnoble,4,https://github.com/swift-nav/libsbp/pull/412#issuecomment-263754274,"A new request message MSG_SHELL_COMMAND_REQ is defined to request execution of a shell command on piksi.  The shell output may be sent back to the host using the existing MSG_LOG messages, and the final exit code is returned in the new MSG_SHELL_COMMAND_RESP message.","lgtm
(Only reviewed the YAML changes, didn't check or try building the bindings)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,412,2016-11-28T02:48:28Z,2016-11-30T01:55:05Z,2016-11-30T02:31:30Z,MERGED,True,656,136,11,https://github.com/gsmcmullin,Add a new request/response pair for execution of shell commands.,2,[],https://github.com/swift-nav/libsbp/pull/412,https://github.com/JoshuaGross,5,https://github.com/swift-nav/libsbp/pull/412#issuecomment-263758096,"A new request message MSG_SHELL_COMMAND_REQ is defined to request execution of a shell command on piksi.  The shell output may be sent back to the host using the existing MSG_LOG messages, and the final exit code is returned in the new MSG_SHELL_COMMAND_RESP message.","If codegen has been run and committed for all changes, this looks good - do you want this released as 2.1? I'm happy to do that once this is merged.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,412,2016-11-28T02:48:28Z,2016-11-30T01:55:05Z,2016-11-30T02:31:30Z,MERGED,True,656,136,11,https://github.com/gsmcmullin,Add a new request/response pair for execution of shell commands.,2,[],https://github.com/swift-nav/libsbp/pull/412,https://github.com/gsmcmullin,6,https://github.com/swift-nav/libsbp/pull/412#issuecomment-263759517,"A new request message MSG_SHELL_COMMAND_REQ is defined to request execution of a shell command on piksi.  The shell output may be sent back to the host using the existing MSG_LOG messages, and the final exit code is returned in the new MSG_SHELL_COMMAND_RESP message.",Codegen has been run and changes committed in a separate commit.  I'll need a new release to updated the pointers in the piksi_tools and piksi_buildroot PRs. Thank you.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,415,2016-12-01T02:20:21Z,2016-12-01T19:51:33Z,2016-12-01T19:51:35Z,MERGED,True,13,13,4,https://github.com/mfine,Pick up new mime types,1,[],https://github.com/swift-nav/libsbp/pull/415,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/415,"Pick up the new sbp 2.0 mime types.
/cc @mookerji @JoshuaGross","Pick up the new sbp 2.0 mime types.
/cc @mookerji @JoshuaGross",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,415,2016-12-01T02:20:21Z,2016-12-01T19:51:33Z,2016-12-01T19:51:35Z,MERGED,True,13,13,4,https://github.com/mfine,Pick up new mime types,1,[],https://github.com/swift-nav/libsbp/pull/415,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/415#issuecomment-264060385,"Pick up the new sbp 2.0 mime types.
/cc @mookerji @JoshuaGross",great! üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,417,2016-12-02T03:05:12Z,2016-12-02T03:31:49Z,2016-12-02T03:31:51Z,MERGED,True,88,159,15,https://github.com/ljbade,Tidy up descriptions of new observation message,1,[],https://github.com/swift-nav/libsbp/pull/417,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/417,/cc @denniszollo,/cc @denniszollo,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,417,2016-12-02T03:05:12Z,2016-12-02T03:31:49Z,2016-12-02T03:31:51Z,MERGED,True,88,159,15,https://github.com/ljbade,Tidy up descriptions of new observation message,1,[],https://github.com/swift-nav/libsbp/pull/417,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/417#issuecomment-264363230,/cc @denniszollo,LGTM.  My obs lock_time description was way to complicated to be useful.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,418,2016-12-04T01:40:11Z,2016-12-09T08:22:29Z,2016-12-09T08:22:32Z,MERGED,True,998,148,13,https://github.com/fnoble,Raw IMU data message,5,[],https://github.com/swift-nav/libsbp/pull/418,https://github.com/fnoble,1,https://github.com/swift-nav/libsbp/pull/418,Adding message for raw IMU data.,Adding message for raw IMU data.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,418,2016-12-04T01:40:11Z,2016-12-09T08:22:29Z,2016-12-09T08:22:32Z,MERGED,True,998,148,13,https://github.com/fnoble,Raw IMU data message,5,[],https://github.com/swift-nav/libsbp/pull/418,https://github.com/fnoble,2,https://github.com/swift-nav/libsbp/pull/418#issuecomment-265079502,Adding message for raw IMU data.,"@mookerji : some good points that I had also been thinking about. Here was my rationale for doing it this way:

The message should be as compact as possible because it may be sent at 400+ Hz
There is a question how ""raw"" should it be, I opted to make it just the raw s16 value read from the sensor without any calibration applied but I can see the argument for doing some minimal processing to make it more consumable at the expense of giving people down the line the freedom to do that themselves
The IMU has several different selectable full-scale ranges (+/- 2, 4, 8 or 16g), this means that it's not possible to give consistent units as they depend on what settings are selected
I originally had a flags field containing the selected range, the validity etc. but I thought it wasn't worth just sending back the IMU settings at 400 Hz and the time validity can be incorporated into the tow field as the full range isn't used by valid values

Another question is if 1/256 ms ~ 3.9 us time resolution is sufficient?
Let me know what you think about these different factors.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,418,2016-12-04T01:40:11Z,2016-12-09T08:22:29Z,2016-12-09T08:22:32Z,MERGED,True,998,148,13,https://github.com/fnoble,Raw IMU data message,5,[],https://github.com/swift-nav/libsbp/pull/418,https://github.com/steve-landers,3,https://github.com/swift-nav/libsbp/pull/418#issuecomment-265198633,Adding message for raw IMU data.,"I think it makes sense to leave the contents of this message in this raw state, since that keeps them compact  - calibrated values would need to be moved to a floating or fixed point value, both of which would need to be expanded from the original full-scale range based format.  This also allows other parts of the system to perform their own calibration.
A 3.9 us time resolution sounds fine to me.
I agree that it would be overkill to send IMU settings out as part of this message.  Would settings like the full-scale range then become a system setting that can be read or written like other system settings are?
One other thing to consider is having a way to access IMU temperature.  I don't think it's appropriate to make part of this message, since 400 Hz of temperature data seems unnecessary - maybe it would make sense to have an auxiliary message that is sent at a lower rate that could include temperature and any other values that don't belong in a high rate message.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,418,2016-12-04T01:40:11Z,2016-12-09T08:22:29Z,2016-12-09T08:22:32Z,MERGED,True,998,148,13,https://github.com/fnoble,Raw IMU data message,5,[],https://github.com/swift-nav/libsbp/pull/418,https://github.com/fnoble,4,https://github.com/swift-nav/libsbp/pull/418#issuecomment-265659067,Adding message for raw IMU data.,"@s-landers : Sounds good, what rate do you think is necessary for the temperature data? Also, what do you think about the magnetometer readings? I was thinking of putting them in a separate message at a lower rate too.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,418,2016-12-04T01:40:11Z,2016-12-09T08:22:29Z,2016-12-09T08:22:32Z,MERGED,True,998,148,13,https://github.com/fnoble,Raw IMU data message,5,[],https://github.com/swift-nav/libsbp/pull/418,https://github.com/fnoble,5,https://github.com/swift-nav/libsbp/pull/418#issuecomment-265950618,Adding message for raw IMU data.,"Notes from meeting earlier today:

Go with raw value straight from sensor
Magnetometer not needed for now
Temperature would be useful, only needed at 1Hz
Idea to define ""auxiliary"" message containing temp as well as IMU full scale range configuration such that it can be unambiguously determined from the logs
Aux message could have ""IMU type"" field so it can be extended to support different kinds of IMU in the future

Given the feedback I've gotten from @s-landers and @denniszollo I'm going to merge these messages in their current form shortly.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,418,2016-12-04T01:40:11Z,2016-12-09T08:22:29Z,2016-12-09T08:22:32Z,MERGED,True,998,148,13,https://github.com/fnoble,Raw IMU data message,5,[],https://github.com/swift-nav/libsbp/pull/418,https://github.com/mookerji,6,https://github.com/swift-nav/libsbp/pull/418#issuecomment-265953465,Adding message for raw IMU data.,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,419,2016-12-07T00:56:11Z,2016-12-07T01:37:05Z,2016-12-07T01:37:06Z,MERGED,True,26,6,7,https://github.com/ljbade,Clarify SID encoding of older messages,1,[],https://github.com/swift-nav/libsbp/pull/419,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/419,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,419,2016-12-07T00:56:11Z,2016-12-07T01:37:05Z,2016-12-07T01:37:06Z,MERGED,True,26,6,7,https://github.com/ljbade,Clarify SID encoding of older messages,1,[],https://github.com/swift-nav/libsbp/pull/419,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/419#issuecomment-265322626,,/cc @denniszollo @mfine,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,421,2016-12-09T05:47:58Z,2016-12-09T06:38:32Z,2016-12-09T06:38:34Z,MERGED,True,54,63,11,https://github.com/ljbade,Define DGNSS flags,2,[],https://github.com/swift-nav/libsbp/pull/421,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/421,"Adds the missing DGNSS flag
/cc @denniszollo @mookerji @anth-cole","Adds the missing DGNSS flag
/cc @denniszollo @mookerji @anth-cole",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,421,2016-12-09T05:47:58Z,2016-12-09T06:38:32Z,2016-12-09T06:38:34Z,MERGED,True,54,63,11,https://github.com/ljbade,Define DGNSS flags,2,[],https://github.com/swift-nav/libsbp/pull/421,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/421#issuecomment-265939775,"Adds the missing DGNSS flag
/cc @denniszollo @mookerji @anth-cole","If we are doing this, we should probably also remove the ""not implemented"" note about the estimated accuracy fields, as ben has implemented them.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,421,2016-12-09T05:47:58Z,2016-12-09T06:38:32Z,2016-12-09T06:38:34Z,MERGED,True,54,63,11,https://github.com/ljbade,Define DGNSS flags,2,[],https://github.com/swift-nav/libsbp/pull/421,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/421#issuecomment-265941236,"Adds the missing DGNSS flag
/cc @denniszollo @mookerji @anth-cole",@denniszollo ah OK ill do that too,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,421,2016-12-09T05:47:58Z,2016-12-09T06:38:32Z,2016-12-09T06:38:34Z,MERGED,True,54,63,11,https://github.com/ljbade,Define DGNSS flags,2,[],https://github.com/swift-nav/libsbp/pull/421,https://github.com/ljbade,4,https://github.com/swift-nav/libsbp/pull/421#issuecomment-265941276,"Adds the missing DGNSS flag
/cc @denniszollo @mookerji @anth-cole","@denniszollo although I think so far they are only implemented for SPP, not RTK",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,421,2016-12-09T05:47:58Z,2016-12-09T06:38:32Z,2016-12-09T06:38:34Z,MERGED,True,54,63,11,https://github.com/ljbade,Define DGNSS flags,2,[],https://github.com/swift-nav/libsbp/pull/421,https://github.com/denniszollo,5,https://github.com/swift-nav/libsbp/pull/421#issuecomment-265942318,"Adds the missing DGNSS flag
/cc @denniszollo @mookerji @anth-cole",they are implemented on the baseline message for sure (i have seen and analyzed them a bit). @benjamin0 what's the status?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,421,2016-12-09T05:47:58Z,2016-12-09T06:38:32Z,2016-12-09T06:38:34Z,MERGED,True,54,63,11,https://github.com/ljbade,Define DGNSS flags,2,[],https://github.com/swift-nav/libsbp/pull/421,https://github.com/ljbade,6,https://github.com/swift-nav/libsbp/pull/421#issuecomment-265942729,"Adds the missing DGNSS flag
/cc @denniszollo @mookerji @anth-cole","@denniszollo I believe they are implemented in baseline RTK and pseudoabsolute RTK position messages.
In latest logs I have looked at, they are set to zero for single point position messages.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,422,2016-12-12T08:37:02Z,2017-07-03T14:38:20Z,2017-07-03T14:38:20Z,CLOSED,False,1,0,1,https://github.com/alanz,Tweak stack.yaml for Hackage compatibility,1,[],https://github.com/swift-nav/libsbp/pull/422,https://github.com/alanz,1,https://github.com/swift-nav/libsbp/pull/422,"This will transparently add upper and lower bounds to all package dependencies not currently having them, based on the snapshot in use, when the package is uploaded via either stack upload or stack sdist.
See https://www.fpcomplete.com/blog/2015/09/stack-pvp","This will transparently add upper and lower bounds to all package dependencies not currently having them, based on the snapshot in use, when the package is uploaded via either stack upload or stack sdist.
See https://www.fpcomplete.com/blog/2015/09/stack-pvp",True,{'THUMBS_UP': ['https://github.com/tfausak']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,422,2016-12-12T08:37:02Z,2017-07-03T14:38:20Z,2017-07-03T14:38:20Z,CLOSED,False,1,0,1,https://github.com/alanz,Tweak stack.yaml for Hackage compatibility,1,[],https://github.com/swift-nav/libsbp/pull/422,https://github.com/tonymorris,2,https://github.com/swift-nav/libsbp/pull/422#issuecomment-268390331,"This will transparently add upper and lower bounds to all package dependencies not currently having them, based on the snapshot in use, when the package is uploaded via either stack upload or stack sdist.
See https://www.fpcomplete.com/blog/2015/09/stack-pvp",Hi. Any chance of getting this patch in soon?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,422,2016-12-12T08:37:02Z,2017-07-03T14:38:20Z,2017-07-03T14:38:20Z,CLOSED,False,1,0,1,https://github.com/alanz,Tweak stack.yaml for Hackage compatibility,1,[],https://github.com/swift-nav/libsbp/pull/422,https://github.com/tfausak,3,https://github.com/swift-nav/libsbp/pull/422#issuecomment-311656581,"This will transparently add upper and lower bounds to all package dependencies not currently having them, based on the snapshot in use, when the package is uploaded via either stack upload or stack sdist.
See https://www.fpcomplete.com/blog/2015/09/stack-pvp","This would be a great addition. It would fix a lot of other issues, like #250, #413, and #416.
I think the Haskell maintainers are @JoshuaGross, @mfine, and @mookerji. Can y'all take a look at this?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,422,2016-12-12T08:37:02Z,2017-07-03T14:38:20Z,2017-07-03T14:38:20Z,CLOSED,False,1,0,1,https://github.com/alanz,Tweak stack.yaml for Hackage compatibility,1,[],https://github.com/swift-nav/libsbp/pull/422,https://github.com/mookerji,4,https://github.com/swift-nav/libsbp/pull/422#issuecomment-312348900,"This will transparently add upper and lower bounds to all package dependencies not currently having them, based on the snapshot in use, when the package is uploaded via either stack upload or stack sdist.
See https://www.fpcomplete.com/blog/2015/09/stack-pvp","Sorry this didn't get a reply!
It's on our roadmap to resolve the package versioning issue, and we'll resolve this PR when we have more slack on our internal timeline. We have a several important/internal/downstream projects supporting Swift's core product development that will break if we attempt to resolve all package versioning requirements right now (tl;dr: binary dependencies). Fixing these issues will require a time investment on our part before we can accept the PR.
In the meantime, using stack as is mentioned in the README (https://github.com/swift-nav/libsbp/tree/master/haskell) should work.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,422,2016-12-12T08:37:02Z,2017-07-03T14:38:20Z,2017-07-03T14:38:20Z,CLOSED,False,1,0,1,https://github.com/alanz,Tweak stack.yaml for Hackage compatibility,1,[],https://github.com/swift-nav/libsbp/pull/422,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/422#issuecomment-312662637,"This will transparently add upper and lower bounds to all package dependencies not currently having them, based on the snapshot in use, when the package is uploaded via either stack upload or stack sdist.
See https://www.fpcomplete.com/blog/2015/09/stack-pvp","We support more than one LTS version - LTS-5 and LTS-6.  Naively setting upper and lower pvp-bounds would have broken our downstreams. See: #498.
If there are actual issues with this library that anyone's running into with their piksi or sbp data, please get in touch with support.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/423,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji","Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/423#issuecomment-266503649,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji","Also removing:

MSG_CW_RESULTS
MSG_CW_START
MSG_INIT_BASE
MSG_IAR_STATE",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/423#issuecomment-266506440,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji",We should throw out the whole flash.yaml module.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/423#issuecomment-266506677,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji",We should throw out the MSG_BOOTLOADER_ messages.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/mookerji,5,https://github.com/swift-nav/libsbp/pull/423#issuecomment-266507511,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji",üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/mookerji,6,https://github.com/swift-nav/libsbp/pull/423#issuecomment-266509285,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji","@mfine actually, I think I'm going to defer to @denniszollo on this one, in part because we have devices (v2's) in the field that may need some of these messages in the developer console.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/mfine,7,https://github.com/swift-nav/libsbp/pull/423#issuecomment-266511075,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji",We shouldn't support running the console off master with v2 piksis. That's a terrible idea.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/denniszollo,8,https://github.com/swift-nav/libsbp/pull/423#issuecomment-266518457,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji","I don't mean the console so much as just log processing.  I think we should jut be very explicit that our pattern is changing.  Prior to this point all of our messaging was backwards compatibale since the start of libsbp.  Now we are saying that old logfiles and v2 devices are not compatible with master libsbp.
In order to process those logs, you need to explicitly use  an old libsbp release.  This means we will need to keep a compatibility table of device and firmware versions against lisbsbp and console versions in our documentation.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/mfine,9,https://github.com/swift-nav/libsbp/pull/423#issuecomment-266530560,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji","In order to process those logs, you need to explicitly use an old libsbp release. This means we will need to keep a compatibility table of device and firmware versions against lisbsbp and console versions in our documentation.

That sounds like a great idea and was the original intention of our versioning. The original intention was not to carry forward every message we ever came up with. Further, supporting multi-versioning will be an increasingly bleak prospect - we should keep it scoped as originally intended (to major releases).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,423,2016-12-12T17:46:01Z,2017-11-08T15:47:26Z,2017-11-08T15:47:26Z,CLOSED,False,0,720,5,https://github.com/mfine,Remove old deprecateds,6,[],https://github.com/swift-nav/libsbp/pull/423,https://github.com/mookerji,10,https://github.com/swift-nav/libsbp/pull/423#issuecomment-266534731,"Remove deprecated messages that have been removed for awhile. In cleaning things up for 2.0, let's let these old message go.
/cc @denniszollo @ljbade @mookerji","@denniszollo if it's for the case of log processing, I worry that keeping around old message definitions introduces a versioning/interface question and support burden that we're not really well-placed to deal with (or rather, keeping message definitions around in their current form isn't really the right answer to this problem).  Also, on better look at the PR, the vast majority of the messages given here aren't really applicable to any manner of v2 post-processing analysis, and it's unclear to me if the depreciated MSG_OBS, etc. could be particularly useful?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,424,2016-12-13T21:25:56Z,2016-12-13T22:45:42Z,2016-12-13T22:45:44Z,MERGED,True,441,199,11,https://github.com/mfine,New RESET message,3,[],https://github.com/swift-nav/libsbp/pull/424,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/424,"New RESET message.
/cc @gsmcmullin @denniszollo @cbeighley","New RESET message.
/cc @gsmcmullin @denniszollo @cbeighley",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,424,2016-12-13T21:25:56Z,2016-12-13T22:45:42Z,2016-12-13T22:45:44Z,MERGED,True,441,199,11,https://github.com/mfine,New RESET message,3,[],https://github.com/swift-nav/libsbp/pull/424,https://github.com/cbeighley,2,https://github.com/swift-nav/libsbp/pull/424#issuecomment-266873015,"New RESET message.
/cc @gsmcmullin @denniszollo @cbeighley",lgtm,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,425,2016-12-22T23:17:12Z,2017-01-04T00:27:49Z,2017-01-04T00:27:49Z,MERGED,True,73,0,1,https://github.com/denniszollo,add CDC driver,1,[],https://github.com/swift-nav/libsbp/pull/425,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/425,"This adds a CDC driver primarily to support CDC AMC devices on OSX versions past Yosemite.
The ""base driver"" didn't handle disconnection out of the box
the ""pyserial driver"" didn't work on any OSX versions past Yosemite.
I determine that the device is disconnected based upon when reads from the device return nothing.  I'm not sure if this is the best method, but it's the only thing I could get to work without a more sophisticated driver.  Referrd to posix read, the fread in stdlib and python file.read() to decide on the empty string comparison.  IOError is tested to be thrown when the port is disconnected or the CDC device goes offline.
/cc @fnoble @mfine","This adds a CDC driver primarily to support CDC AMC devices on OSX versions past Yosemite.
The ""base driver"" didn't handle disconnection out of the box
the ""pyserial driver"" didn't work on any OSX versions past Yosemite.
I determine that the device is disconnected based upon when reads from the device return nothing.  I'm not sure if this is the best method, but it's the only thing I could get to work without a more sophisticated driver.  Referrd to posix read, the fread in stdlib and python file.read() to decide on the empty string comparison.  IOError is tested to be thrown when the port is disconnected or the CDC device goes offline.
/cc @fnoble @mfine",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,425,2016-12-22T23:17:12Z,2017-01-04T00:27:49Z,2017-01-04T00:27:49Z,MERGED,True,73,0,1,https://github.com/denniszollo,add CDC driver,1,[],https://github.com/swift-nav/libsbp/pull/425,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/425#issuecomment-270233979,"This adds a CDC driver primarily to support CDC AMC devices on OSX versions past Yosemite.
The ""base driver"" didn't handle disconnection out of the box
the ""pyserial driver"" didn't work on any OSX versions past Yosemite.
I determine that the device is disconnected based upon when reads from the device return nothing.  I'm not sure if this is the best method, but it's the only thing I could get to work without a more sophisticated driver.  Referrd to posix read, the fread in stdlib and python file.read() to decide on the empty string comparison.  IOError is tested to be thrown when the port is disconnected or the CDC device goes offline.
/cc @fnoble @mfine","@JoshuaGross @mfine
Can I get a code review of this?  This allows us to use the usb port on Piksi without relying on broken PySerial.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,425,2016-12-22T23:17:12Z,2017-01-04T00:27:49Z,2017-01-04T00:27:49Z,MERGED,True,73,0,1,https://github.com/denniszollo,add CDC driver,1,[],https://github.com/swift-nav/libsbp/pull/425,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/425#issuecomment-270247010,"This adds a CDC driver primarily to support CDC AMC devices on OSX versions past Yosemite.
The ""base driver"" didn't handle disconnection out of the box
the ""pyserial driver"" didn't work on any OSX versions past Yosemite.
I determine that the device is disconnected based upon when reads from the device return nothing.  I'm not sure if this is the best method, but it's the only thing I could get to work without a more sophisticated driver.  Referrd to posix read, the fread in stdlib and python file.read() to decide on the empty string comparison.  IOError is tested to be thrown when the port is disconnected or the CDC device goes offline.
/cc @fnoble @mfine","Works for me so I'm okay merging it, but I'm concerned about the lack of closing the handle?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,425,2016-12-22T23:17:12Z,2017-01-04T00:27:49Z,2017-01-04T00:27:49Z,MERGED,True,73,0,1,https://github.com/denniszollo,add CDC driver,1,[],https://github.com/swift-nav/libsbp/pull/425,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/425#issuecomment-270263058,"This adds a CDC driver primarily to support CDC AMC devices on OSX versions past Yosemite.
The ""base driver"" didn't handle disconnection out of the box
the ""pyserial driver"" didn't work on any OSX versions past Yosemite.
I determine that the device is disconnected based upon when reads from the device return nothing.  I'm not sure if this is the best method, but it's the only thing I could get to work without a more sophisticated driver.  Referrd to posix read, the fread in stdlib and python file.read() to decide on the empty string comparison.  IOError is tested to be thrown when the port is disconnected or the CDC device goes offline.
/cc @fnoble @mfine",I put the close back in and just suppressed my warning.  This is tested to work. thanks for the review.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,426,2017-01-04T00:46:51Z,2017-01-04T01:39:38Z,2017-01-04T01:39:38Z,MERGED,True,267,179,6,https://github.com/denniszollo,V2.1.5 branch,4,[],https://github.com/swift-nav/libsbp/pull/426,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/426,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,427,2017-01-09T10:02:38Z,2017-01-10T07:17:15Z,2017-01-10T07:18:35Z,MERGED,True,6,9,3,https://github.com/dt-exafore,Change description for msg_tracking_state_detailed_t.lock,1,[],https://github.com/swift-nav/libsbp/pull/427,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/427,Based on https://github.com/swift-nav/exafore_planning/issues/497,Based on https://github.com/swift-nav/exafore_planning/issues/497,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,427,2017-01-09T10:02:38Z,2017-01-10T07:17:15Z,2017-01-10T07:18:35Z,MERGED,True,6,9,3,https://github.com/dt-exafore,Change description for msg_tracking_state_detailed_t.lock,1,[],https://github.com/swift-nav/libsbp/pull/427,https://github.com/dt-exafore,2,https://github.com/swift-nav/libsbp/pull/427#issuecomment-271247077,Based on https://github.com/swift-nav/exafore_planning/issues/497,"@adel-mamin Please, review.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,427,2017-01-09T10:02:38Z,2017-01-10T07:17:15Z,2017-01-10T07:18:35Z,MERGED,True,6,9,3,https://github.com/dt-exafore,Change description for msg_tracking_state_detailed_t.lock,1,[],https://github.com/swift-nav/libsbp/pull/427,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/427#issuecomment-271496244,Based on https://github.com/swift-nav/exafore_planning/issues/497,"lgtm, but it seems the pdf did not get updated? Can you update the pdf before merge?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,427,2017-01-09T10:02:38Z,2017-01-10T07:17:15Z,2017-01-10T07:18:35Z,MERGED,True,6,9,3,https://github.com/dt-exafore,Change description for msg_tracking_state_detailed_t.lock,1,[],https://github.com/swift-nav/libsbp/pull/427,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/427#issuecomment-271496790,Based on https://github.com/swift-nav/exafore_planning/issues/497,"@ljbade this is not a public message and shouldn't be showing up in the pdf:
https://github.com/swift-nav/libsbp/blob/master/spec/yaml/swiftnav/sbp/tracking.yaml#L24",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,427,2017-01-09T10:02:38Z,2017-01-10T07:17:15Z,2017-01-10T07:18:35Z,MERGED,True,6,9,3,https://github.com/dt-exafore,Change description for msg_tracking_state_detailed_t.lock,1,[],https://github.com/swift-nav/libsbp/pull/427,https://github.com/ljbade,5,https://github.com/swift-nav/libsbp/pull/427#issuecomment-271498456,Based on https://github.com/swift-nav/exafore_planning/issues/497,"@mfine oh of course, duh! sorry @adel-mamin this is fine to merge",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,429,2017-01-10T14:11:35Z,2017-01-17T21:25:40Z,2017-05-10T10:05:09Z,MERGED,True,19,35,9,https://github.com/nsirola,Accuracy fields implemented in SPP,3,[],https://github.com/swift-nav/libsbp/pull/429,https://github.com/nsirola,1,https://github.com/swift-nav/libsbp/pull/429,"Documentation update: remove the ""not implemented in SPP mode"" notes for ECEF/LLH accuracies","Documentation update: remove the ""not implemented in SPP mode"" notes for ECEF/LLH accuracies",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,429,2017-01-10T14:11:35Z,2017-01-17T21:25:40Z,2017-05-10T10:05:09Z,MERGED,True,19,35,9,https://github.com/nsirola,Accuracy fields implemented in SPP,3,[],https://github.com/swift-nav/libsbp/pull/429,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/429#issuecomment-271704454,"Documentation update: remove the ""not implemented in SPP mode"" notes for ECEF/LLH accuracies",Can you regenerate the files with make all?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,429,2017-01-10T14:11:35Z,2017-01-17T21:25:40Z,2017-05-10T10:05:09Z,MERGED,True,19,35,9,https://github.com/nsirola,Accuracy fields implemented in SPP,3,[],https://github.com/swift-nav/libsbp/pull/429,https://github.com/nsirola,3,https://github.com/swift-nav/libsbp/pull/429#issuecomment-273152170,"Documentation update: remove the ""not implemented in SPP mode"" notes for ECEF/LLH accuracies",Regenerated the pdf as well as other headers where only comments changed. (There were also some lock_time related comments still not updated),True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,429,2017-01-10T14:11:35Z,2017-01-17T21:25:40Z,2017-05-10T10:05:09Z,MERGED,True,19,35,9,https://github.com/nsirola,Accuracy fields implemented in SPP,3,[],https://github.com/swift-nav/libsbp/pull/429,https://github.com/ljbade,4,https://github.com/swift-nav/libsbp/pull/429#issuecomment-273304630,"Documentation update: remove the ""not implemented in SPP mode"" notes for ECEF/LLH accuracies","lgtm, merging",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,430,2017-01-13T02:33:25Z,2017-01-17T23:56:42Z,2019-05-20T16:53:37Z,MERGED,True,12,6,2,https://github.com/denniszollo,"make handler callable threadsafe, Catch pyserial writeTimeoutErrors",2,[],https://github.com/swift-nav/libsbp/pull/430,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/430,"When using skylark on the console, lately we have seen this problem when you try and write something else to the serial port concurrently.
Here we put a mutex around writing to the framer.  This fixes our interaction between skylark and other stuff in the console.  After a review and any comments we can try and cut an sbp release.  Potentially we could do instead this with some kind of queue rather than blocking writes to avoid holding up other threads, but I think this approach is acceptable.
/cc @jkretzmer @mfine @switanis","When using skylark on the console, lately we have seen this problem when you try and write something else to the serial port concurrently.
Here we put a mutex around writing to the framer.  This fixes our interaction between skylark and other stuff in the console.  After a review and any comments we can try and cut an sbp release.  Potentially we could do instead this with some kind of queue rather than blocking writes to avoid holding up other threads, but I think this approach is acceptable.
/cc @jkretzmer @mfine @switanis",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,430,2017-01-13T02:33:25Z,2017-01-17T23:56:42Z,2019-05-20T16:53:37Z,MERGED,True,12,6,2,https://github.com/denniszollo,"make handler callable threadsafe, Catch pyserial writeTimeoutErrors",2,[],https://github.com/swift-nav/libsbp/pull/430,https://github.com/cbeighley,2,https://github.com/swift-nav/libsbp/pull/430#issuecomment-272934822,"When using skylark on the console, lately we have seen this problem when you try and write something else to the serial port concurrently.
Here we put a mutex around writing to the framer.  This fixes our interaction between skylark and other stuff in the console.  After a review and any comments we can try and cut an sbp release.  Potentially we could do instead this with some kind of queue rather than blocking writes to avoid holding up other threads, but I think this approach is acceptable.
/cc @jkretzmer @mfine @switanis",@denniszollo I would use the threading.Lock object for this: http://stackoverflow.com/questions/10525185/python-threading-how-do-i-lock-a-thread.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,430,2017-01-13T02:33:25Z,2017-01-17T23:56:42Z,2019-05-20T16:53:37Z,MERGED,True,12,6,2,https://github.com/denniszollo,"make handler callable threadsafe, Catch pyserial writeTimeoutErrors",2,[],https://github.com/swift-nav/libsbp/pull/430,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/430#issuecomment-273031339,"When using skylark on the console, lately we have seen this problem when you try and write something else to the serial port concurrently.
Here we put a mutex around writing to the framer.  This fixes our interaction between skylark and other stuff in the console.  After a review and any comments we can try and cut an sbp release.  Potentially we could do instead this with some kind of queue rather than blocking writes to avoid holding up other threads, but I think this approach is acceptable.
/cc @jkretzmer @mfine @switanis","This ends up just wrapping the underlying driver's write with a lock. It's not clear that that's not threadsafe, but guess this would be safe to add.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,430,2017-01-13T02:33:25Z,2017-01-17T23:56:42Z,2019-05-20T16:53:37Z,MERGED,True,12,6,2,https://github.com/denniszollo,"make handler callable threadsafe, Catch pyserial writeTimeoutErrors",2,[],https://github.com/swift-nav/libsbp/pull/430,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/430#issuecomment-273284896,"When using skylark on the console, lately we have seen this problem when you try and write something else to the serial port concurrently.
Here we put a mutex around writing to the framer.  This fixes our interaction between skylark and other stuff in the console.  After a review and any comments we can try and cut an sbp release.  Potentially we could do instead this with some kind of queue rather than blocking writes to avoid holding up other threads, but I think this approach is acceptable.
/cc @jkretzmer @mfine @switanis","Outside of the copyright nit, looks good.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,430,2017-01-13T02:33:25Z,2017-01-17T23:56:42Z,2019-05-20T16:53:37Z,MERGED,True,12,6,2,https://github.com/denniszollo,"make handler callable threadsafe, Catch pyserial writeTimeoutErrors",2,[],https://github.com/swift-nav/libsbp/pull/430,https://github.com/denniszollo,5,https://github.com/swift-nav/libsbp/pull/430#issuecomment-273286695,"When using skylark on the console, lately we have seen this problem when you try and write something else to the serial port concurrently.
Here we put a mutex around writing to the framer.  This fixes our interaction between skylark and other stuff in the console.  After a review and any comments we can try and cut an sbp release.  Potentially we could do instead this with some kind of queue rather than blocking writes to avoid holding up other threads, but I think this approach is acceptable.
/cc @jkretzmer @mfine @switanis",I rebased down to the two substantial commits and pushed back up - I think it's ready.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,431,2017-01-19T22:09:05Z,2017-01-20T18:53:16Z,2017-01-20T18:53:16Z,MERGED,True,24,12,1,https://github.com/mookerji,Pass reason with underlying client connection warnings.,2,[],https://github.com/swift-nav/libsbp/pull/431,https://github.com/mookerji,1,https://github.com/swift-nav/libsbp/pull/431,"Passes the message from a Requests connection exception, to be
reflected in the Console. Previously this context was dropped.
/cc @mfine","Passes the message from a Requests connection exception, to be
reflected in the Console. Previously this context was dropped.
/cc @mfine",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,431,2017-01-19T22:09:05Z,2017-01-20T18:53:16Z,2017-01-20T18:53:16Z,MERGED,True,24,12,1,https://github.com/mookerji,Pass reason with underlying client connection warnings.,2,[],https://github.com/swift-nav/libsbp/pull/431,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/431#issuecomment-273915306,"Passes the message from a Requests connection exception, to be
reflected in the Console. Previously this context was dropped.
/cc @mfine",üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,431,2017-01-19T22:09:05Z,2017-01-20T18:53:16Z,2017-01-20T18:53:16Z,MERGED,True,24,12,1,https://github.com/mookerji,Pass reason with underlying client connection warnings.,2,[],https://github.com/swift-nav/libsbp/pull/431,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/431#issuecomment-273916176,"Passes the message from a Requests connection exception, to be
reflected in the Console. Previously this context was dropped.
/cc @mfine",lets get this into release console as well as master,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,431,2017-01-19T22:09:05Z,2017-01-20T18:53:16Z,2017-01-20T18:53:16Z,MERGED,True,24,12,1,https://github.com/mookerji,Pass reason with underlying client connection warnings.,2,[],https://github.com/swift-nav/libsbp/pull/431,https://github.com/mookerji,4,https://github.com/swift-nav/libsbp/pull/431#issuecomment-273918571,"Passes the message from a Requests connection exception, to be
reflected in the Console. Previously this context was dropped.
/cc @mfine","@ljbade yep, i'll take care of it.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,431,2017-01-19T22:09:05Z,2017-01-20T18:53:16Z,2017-01-20T18:53:16Z,MERGED,True,24,12,1,https://github.com/mookerji,Pass reason with underlying client connection warnings.,2,[],https://github.com/swift-nav/libsbp/pull/431,https://github.com/jkretzmer,5,https://github.com/swift-nav/libsbp/pull/431#issuecomment-273919534,"Passes the message from a Requests connection exception, to be
reflected in the Console. Previously this context was dropped.
/cc @mfine",should a similar change also be made to the read calls?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,431,2017-01-19T22:09:05Z,2017-01-20T18:53:16Z,2017-01-20T18:53:16Z,MERGED,True,24,12,1,https://github.com/mookerji,Pass reason with underlying client connection warnings.,2,[],https://github.com/swift-nav/libsbp/pull/431,https://github.com/mookerji,6,https://github.com/swift-nav/libsbp/pull/431#issuecomment-273920099,"Passes the message from a Requests connection exception, to be
reflected in the Console. Previously this context was dropped.
/cc @mfine","Eagle eye, @jkretzmer",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,432,2017-01-23T20:36:25Z,2017-01-24T00:11:36Z,2017-01-24T00:11:40Z,MERGED,True,258,283,11,https://github.com/ljbade,Fix UTC flags,4,[],https://github.com/swift-nav/libsbp/pull/432,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/432,Fixes a double up of bit assignments in the time flags.,Fixes a double up of bit assignments in the time flags.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,432,2017-01-23T20:36:25Z,2017-01-24T00:11:36Z,2017-01-24T00:11:40Z,MERGED,True,258,283,11,https://github.com/ljbade,Fix UTC flags,4,[],https://github.com/swift-nav/libsbp/pull/432,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/432#issuecomment-274610068,Fixes a double up of bit assignments in the time flags.,Make sure to regenerate with the latest tags from master and fix the one nit about adding units to description show the units show up in the comments of the source code.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,433,2017-01-24T08:41:00Z,2017-03-22T20:37:35Z,2020-09-23T23:13:25Z,MERGED,True,6,0,1,https://github.com/denniszollo,python forwarder: add context,1,[],https://github.com/swift-nav/libsbp/pull/433,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/433,"Like the handler, I think we should use context management on the forwarder","Like the handler, I think we should use context management on the forwarder",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,434,2017-01-25T21:53:05Z,2017-01-26T19:27:56Z,2017-01-26T19:27:56Z,CLOSED,False,12,3,1,https://github.com/benjamin0,Add option to initialize with file handle.,1,[],https://github.com/swift-nav/libsbp/pull/434,https://github.com/benjamin0,1,https://github.com/swift-nav/libsbp/pull/434,"I think this should preserve backwards compatibility but also allow us to pass in a file handle.
For example,
JSONLogIterator(handle=sys.stdin)
@mfine @akleeman","I think this should preserve backwards compatibility but also allow us to pass in a file handle.
For example,
JSONLogIterator(handle=sys.stdin)
@mfine @akleeman",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,434,2017-01-25T21:53:05Z,2017-01-26T19:27:56Z,2017-01-26T19:27:56Z,CLOSED,False,12,3,1,https://github.com/benjamin0,Add option to initialize with file handle.,1,[],https://github.com/swift-nav/libsbp/pull/434,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/434#issuecomment-275486198,"I think this should preserve backwards compatibility but also allow us to pass in a file handle.
For example,
JSONLogIterator(handle=sys.stdin)
@mfine @akleeman","Woof. That new interface make things even more complicated. Let's just move to a handle and do the right thing here: #435. Let's not support the backwards interface - it's doing the wrong thing with file manage regardless - e.g., never closing them.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,435,2017-01-26T19:23:33Z,2017-01-27T21:17:24Z,2017-01-27T21:17:26Z,MERGED,True,42,38,2,https://github.com/mfine,Remove filename - use filehandles,2,[],https://github.com/swift-nav/libsbp/pull/435,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/435,"Use filehandles instead of filenames.
The passing in a of a filename is a bad pattern - it bakes in the management of the file into the object, doesn't get cleaned up, etc.
And let's not preserve backwards compatibility - let's just fix things to do the right thing.
/cc @benjamin0","Use filehandles instead of filenames.
The passing in a of a filename is a bad pattern - it bakes in the management of the file into the object, doesn't get cleaned up, etc.
And let's not preserve backwards compatibility - let's just fix things to do the right thing.
/cc @benjamin0",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,435,2017-01-26T19:23:33Z,2017-01-27T21:17:24Z,2017-01-27T21:17:26Z,MERGED,True,42,38,2,https://github.com/mfine,Remove filename - use filehandles,2,[],https://github.com/swift-nav/libsbp/pull/435,https://github.com/benjamin0,2,https://github.com/swift-nav/libsbp/pull/435#issuecomment-275487061,"Use filehandles instead of filenames.
The passing in a of a filename is a bad pattern - it bakes in the management of the file into the object, doesn't get cleaned up, etc.
And let's not preserve backwards compatibility - let's just fix things to do the right thing.
/cc @benjamin0",üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,436,2017-01-30T12:37:14Z,2017-02-01T07:59:13Z,2017-02-01T08:26:06Z,MERGED,True,752,139,11,https://github.com/pmiettinen,Add MSG_NDB_EVENT,1,[],https://github.com/swift-nav/libsbp/pull/436,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/436,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,438,2017-02-01T14:13:47Z,2017-02-01T14:16:35Z,2017-02-01T14:16:35Z,MERGED,True,28,28,6,https://github.com/pmiettinen,Rename member variable to avoid name collision,1,[],https://github.com/swift-nav/libsbp/pull/438,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/438,"'sender' variable name is already taken by default in SBP message, rename.","'sender' variable name is already taken by default in SBP message, rename.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,438,2017-02-01T14:13:47Z,2017-02-01T14:16:35Z,2017-02-01T14:16:35Z,MERGED,True,28,28,6,https://github.com/pmiettinen,Rename member variable to avoid name collision,1,[],https://github.com/swift-nav/libsbp/pull/438,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/438#issuecomment-276667308,"'sender' variable name is already taken by default in SBP message, rename.",Reviewed here #436,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,439,2017-02-02T09:05:45Z,2017-02-02T10:28:40Z,2017-02-02T10:29:12Z,MERGED,True,64,32,6,https://github.com/pmiettinen,Add src_sid field into MSG_NDB_EVENT,1,[],https://github.com/swift-nav/libsbp/pull/439,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/439,"For almanac, we need to know two different SIDs, source SID and which SID the almanac concerns.","For almanac, we need to know two different SIDs, source SID and which SID the almanac concerns.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,440,2017-02-08T20:52:03Z,2017-02-09T23:43:51Z,2020-09-23T23:13:24Z,MERGED,True,14,9,6,https://github.com/denniszollo,Pdf publish version fix,5,[],https://github.com/swift-nav/libsbp/pull/440,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/440,"This uses the makefile's idea of the version for the pdf document
It also adds a distribution target to downloads.swiftnav.com for which you will need s3cmd and aws credentials
/cc @mfine @JoshuaGross","This uses the makefile's idea of the version for the pdf document
It also adds a distribution target to downloads.swiftnav.com for which you will need s3cmd and aws credentials
/cc @mfine @JoshuaGross",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,440,2017-02-08T20:52:03Z,2017-02-09T23:43:51Z,2020-09-23T23:13:24Z,MERGED,True,14,9,6,https://github.com/denniszollo,Pdf publish version fix,5,[],https://github.com/swift-nav/libsbp/pull/440,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/440#issuecomment-278475436,"This uses the makefile's idea of the version for the pdf document
It also adds a distribution target to downloads.swiftnav.com for which you will need s3cmd and aws credentials
/cc @mfine @JoshuaGross",awesome!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,441,2017-02-15T12:51:21Z,2017-02-17T08:24:29Z,2017-02-17T08:24:33Z,MERGED,True,1366,166,11,https://github.com/pmiettinen,Add MsgAlmanacGps and MsgAlmanacGlo,1,[],https://github.com/swift-nav/libsbp/pull/441,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/441,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,441,2017-02-15T12:51:21Z,2017-02-17T08:24:29Z,2017-02-17T08:24:33Z,MERGED,True,1366,166,11,https://github.com/pmiettinen,Add MsgAlmanacGps and MsgAlmanacGlo,1,[],https://github.com/swift-nav/libsbp/pull/441,https://github.com/JoshuaGross,2,https://github.com/swift-nav/libsbp/pull/441#issuecomment-280423559,,looks good!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,442,2017-02-16T20:09:04Z,2017-07-27T00:02:45Z,2017-07-27T00:02:45Z,CLOSED,False,292,499,135,https://github.com/gsmcmullin,Fixes for Java implementation,5,[],https://github.com/swift-nav/libsbp/pull/442,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/442,"Minor fixes to clear build errors
Add missing types for S8, S16 and U64
Remove dead generated classes breaking the build

/cc @zakaswift","Minor fixes to clear build errors
Add missing types for S8, S16 and U64
Remove dead generated classes breaking the build

/cc @zakaswift",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,442,2017-02-16T20:09:04Z,2017-07-27T00:02:45Z,2017-07-27T00:02:45Z,CLOSED,False,292,499,135,https://github.com/gsmcmullin,Fixes for Java implementation,5,[],https://github.com/swift-nav/libsbp/pull/442,https://github.com/zakaswift,2,https://github.com/swift-nav/libsbp/pull/442#issuecomment-280448985,"Minor fixes to clear build errors
Add missing types for S8, S16 and U64
Remove dead generated classes breaking the build

/cc @zakaswift","Thanks Gareth.  Does the Travis build ""build"" and then ""test"" the generated classes?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,442,2017-02-16T20:09:04Z,2017-07-27T00:02:45Z,2017-07-27T00:02:45Z,CLOSED,False,292,499,135,https://github.com/gsmcmullin,Fixes for Java implementation,5,[],https://github.com/swift-nav/libsbp/pull/442,https://github.com/JoshuaGross,3,https://github.com/swift-nav/libsbp/pull/442#issuecomment-281204890,"Minor fixes to clear build errors
Add missing types for S8, S16 and U64
Remove dead generated classes breaking the build

/cc @zakaswift","should fix up the travis tests/compilation before merging:
ERROR: JAVA_HOME is set to an invalid directory: /usr/lib/jvm/default-java",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,442,2017-02-16T20:09:04Z,2017-07-27T00:02:45Z,2017-07-27T00:02:45Z,CLOSED,False,292,499,135,https://github.com/gsmcmullin,Fixes for Java implementation,5,[],https://github.com/swift-nav/libsbp/pull/442,https://github.com/owend,4,https://github.com/swift-nav/libsbp/pull/442#issuecomment-307532011,"Minor fixes to clear build errors
Add missing types for S8, S16 and U64
Remove dead generated classes breaking the build

/cc @zakaswift",What's the status of this PR?  The java build in master is broken at the moment.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,442,2017-02-16T20:09:04Z,2017-07-27T00:02:45Z,2017-07-27T00:02:45Z,CLOSED,False,292,499,135,https://github.com/gsmcmullin,Fixes for Java implementation,5,[],https://github.com/swift-nav/libsbp/pull/442,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/442#issuecomment-318218159,"Minor fixes to clear build errors
Add missing types for S8, S16 and U64
Remove dead generated classes breaking the build

/cc @zakaswift",@owend sorry for the delay - library should be building on master now!,True,{'THUMBS_UP': ['https://github.com/owend']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,443,2017-03-01T01:35:22Z,2017-03-22T20:37:22Z,2017-03-22T20:37:22Z,MERGED,True,4,4,1,https://github.com/mfine,Increase timeouts for connections and reads,2,[],https://github.com/swift-nav/libsbp/pull/443,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/443,"Are timeouts are pretty tight. Especially now that connections will be held waiting for a position. This could improve connection stability on the client.
/cc @denniszollo @mookerji","Are timeouts are pretty tight. Especially now that connections will be held waiting for a position. This could improve connection stability on the client.
/cc @denniszollo @mookerji",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,443,2017-03-01T01:35:22Z,2017-03-22T20:37:22Z,2017-03-22T20:37:22Z,MERGED,True,4,4,1,https://github.com/mfine,Increase timeouts for connections and reads,2,[],https://github.com/swift-nav/libsbp/pull/443,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/443#issuecomment-283243523,"Are timeouts are pretty tight. Especially now that connections will be held waiting for a position. This could improve connection stability on the client.
/cc @denniszollo @mookerji",üëç Thanks! I was thinking about making this change during the hackathon.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,444,2017-03-01T21:24:00Z,2017-03-08T21:56:21Z,2019-05-20T16:53:50Z,MERGED,True,31,8,2,https://github.com/benjamin0,Split sbp_process() into two functions. ,3,[],https://github.com/swift-nav/libsbp/pull/444,https://github.com/benjamin0,1,https://github.com/swift-nav/libsbp/pull/444,"Add sbp_process_payload which allows directly processing a payload.
If this looks good, I'll add a docstring.
@mookerji @denniszollo @mfine cc: @anth-cole","Add sbp_process_payload which allows directly processing a payload.
If this looks good, I'll add a docstring.
@mookerji @denniszollo @mfine cc: @anth-cole",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,444,2017-03-01T21:24:00Z,2017-03-08T21:56:21Z,2019-05-20T16:53:50Z,MERGED,True,31,8,2,https://github.com/benjamin0,Split sbp_process() into two functions. ,3,[],https://github.com/swift-nav/libsbp/pull/444,https://github.com/benjamin0,2,https://github.com/swift-nav/libsbp/pull/444#issuecomment-283746433,"Add sbp_process_payload which allows directly processing a payload.
If this looks good, I'll add a docstring.
@mookerji @denniszollo @mfine cc: @anth-cole",I added a docstring and think this is good to go now.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,448,2017-03-11T00:31:28Z,2017-03-11T01:12:05Z,2017-03-11T01:12:05Z,MERGED,True,52,3,5,https://github.com/denniszollo,V2.1.8 branch,1,[],https://github.com/swift-nav/libsbp/pull/448,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/448,"@mookerji @mfine @JoshuaGross
I'm hoping to release v2.1.8 shortly.  This is the PR with the release notes and the version bump.
After merging this, I push up a tag for the merge commit that is v2.1.8.","@mookerji @mfine @JoshuaGross
I'm hoping to release v2.1.8 shortly.  This is the PR with the release notes and the version bump.
After merging this, I push up a tag for the merge commit that is v2.1.8.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,449,2017-03-14T00:31:12Z,2017-03-16T03:05:54Z,2017-03-16T03:05:58Z,MERGED,True,902,158,12,https://github.com/axlan,Jdiamond/network status,5,[],https://github.com/swift-nav/libsbp/pull/449,https://github.com/axlan,1,https://github.com/swift-nav/libsbp/pull/449,"Added message to query and return state of network adapters. Data is made to reflect output of ifaddrs struct returned by getifaddrs() in c.
The purpose of this message is to be able to determine network state through the piksi console, mainly to allow connecting over TCP after a DHCP configuration.
This is dependency for swift-nav/piksi_buildroot#151, and once both these are in the console will be updated to display this information
@denniszollo","Added message to query and return state of network adapters. Data is made to reflect output of ifaddrs struct returned by getifaddrs() in c.
The purpose of this message is to be able to determine network state through the piksi console, mainly to allow connecting over TCP after a DHCP configuration.
This is dependency for swift-nav/piksi_buildroot#151, and once both these are in the console will be updated to display this information
@denniszollo",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,449,2017-03-14T00:31:12Z,2017-03-16T03:05:54Z,2017-03-16T03:05:58Z,MERGED,True,902,158,12,https://github.com/axlan,Jdiamond/network status,5,[],https://github.com/swift-nav/libsbp/pull/449,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/449#issuecomment-286880443,"Added message to query and return state of network adapters. Data is made to reflect output of ifaddrs struct returned by getifaddrs() in c.
The purpose of this message is to be able to determine network state through the piksi console, mainly to allow connecting over TCP after a DHCP configuration.
This is dependency for swift-nav/piksi_buildroot#151, and once both these are in the console will be updated to display this information
@denniszollo","@axlan , I think this looks good. My only thought would be to update the description of the message to indicate that it's effectively based on ifaddrs (should someone want to make more updates in the future).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,449,2017-03-14T00:31:12Z,2017-03-16T03:05:54Z,2017-03-16T03:05:58Z,MERGED,True,902,158,12,https://github.com/axlan,Jdiamond/network status,5,[],https://github.com/swift-nav/libsbp/pull/449,https://github.com/mookerji,3,https://github.com/swift-nav/libsbp/pull/449#issuecomment-286883782,"Added message to query and return state of network adapters. Data is made to reflect output of ifaddrs struct returned by getifaddrs() in c.
The purpose of this message is to be able to determine network state through the piksi console, mainly to allow connecting over TCP after a DHCP configuration.
This is dependency for swift-nav/piksi_buildroot#151, and once both these are in the console will be updated to display this information
@denniszollo","@axlan also, for future reference, we try to keep commits of message definition and package updates on separate PRs (this might be in the CONTRIBUTING file, but I may be wrong). That being said, keeping this as-is is fine.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,450,2017-03-15T00:30:57Z,2017-03-16T23:39:46Z,2017-03-16T23:39:46Z,MERGED,True,2,1,1,https://github.com/denniszollo,python: pyserial driver.  Add hdw flow control to API,1,[],https://github.com/swift-nav/libsbp/pull/450,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/450,we need hdw flow control options for the serial driver.,we need hdw flow control options for the serial driver.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,450,2017-03-15T00:30:57Z,2017-03-16T23:39:46Z,2017-03-16T23:39:46Z,MERGED,True,2,1,1,https://github.com/denniszollo,python: pyserial driver.  Add hdw flow control to API,1,[],https://github.com/swift-nav/libsbp/pull/450,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/450#issuecomment-286928491,we need hdw flow control options for the serial driver.,"@mookerji @JoshuaGross
Any qualms?
Otherwise it's going in!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,451,2017-03-20T22:12:32Z,2017-03-20T23:26:27Z,2019-05-20T16:53:49Z,MERGED,True,6,0,1,https://github.com/fnoble,Update README to specify explicit Haskell Stack resolver,1,[],https://github.com/swift-nav/libsbp/pull/451,https://github.com/fnoble,1,https://github.com/swift-nav/libsbp/pull/451,cc: @mfine @mookerji,cc: @mfine @mookerji,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,451,2017-03-20T22:12:32Z,2017-03-20T23:26:27Z,2019-05-20T16:53:49Z,MERGED,True,6,0,1,https://github.com/fnoble,Update README to specify explicit Haskell Stack resolver,1,[],https://github.com/swift-nav/libsbp/pull/451,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/451#issuecomment-288529814,cc: @mfine @mookerji,"üëç
Should actually change this to just lts-6 to pick up the latest 6 release:
stack install --resolver lts-6 sbp   
Selected resolver: lts-6.30
Copying from /Users/mark/repos/hitl/.stack-work/install/x86_64-osx/lts-6.30/7.10.3/bin/json2sbp to /Users/mark/.local/bin/json2sbp
Copying from /Users/mark/repos/hitl/.stack-work/install/x86_64-osx/lts-6.30/7.10.3/bin/sbp2json to /Users/mark/.local/bin/sbp2json
Copying from /Users/mark/repos/hitl/.stack-work/install/x86_64-osx/lts-6.30/7.10.3/bin/sbp2yaml to /Users/mark/.local/bin/sbp2yaml

Copied executables to /Users/mark/.local/bin:
- json2sbp
- sbp2json
- sbp2yaml",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,452,2017-03-22T18:06:33Z,2017-03-24T00:04:52Z,2017-03-24T00:04:52Z,MERGED,True,342,343,30,https://github.com/denniszollo,Utc msg fixes,5,[],https://github.com/swift-nav/libsbp/pull/452,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/452,"Stefan and I decided that the UTC message wasn't as user friendly as it could be and decided to quickly redefine it so that it make sense.
Now you don't need to use the GPS TOW in order to get UTC time precise beyond seconds.  The GPS TOW can be considered the way to match up each solution epoch.  The formula for getting the seconds in the minute  is msg.seconds + msg.nanoseconds * 10e-9 which is simple and straightforward.
/cc @switanis @mfine @mookerji @JoshuaGross
Since the message is still not produced by the hardware and hadn't been used, combined with the fact that field widths are identical, I have kept the same message ID the same as before.","Stefan and I decided that the UTC message wasn't as user friendly as it could be and decided to quickly redefine it so that it make sense.
Now you don't need to use the GPS TOW in order to get UTC time precise beyond seconds.  The GPS TOW can be considered the way to match up each solution epoch.  The formula for getting the seconds in the minute  is msg.seconds + msg.nanoseconds * 10e-9 which is simple and straightforward.
/cc @switanis @mfine @mookerji @JoshuaGross
Since the message is still not produced by the hardware and hadn't been used, combined with the fact that field widths are identical, I have kept the same message ID the same as before.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,452,2017-03-22T18:06:33Z,2017-03-24T00:04:52Z,2017-03-24T00:04:52Z,MERGED,True,342,343,30,https://github.com/denniszollo,Utc msg fixes,5,[],https://github.com/swift-nav/libsbp/pull/452,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/452#issuecomment-288502653,"Stefan and I decided that the UTC message wasn't as user friendly as it could be and decided to quickly redefine it so that it make sense.
Now you don't need to use the GPS TOW in order to get UTC time precise beyond seconds.  The GPS TOW can be considered the way to match up each solution epoch.  The formula for getting the seconds in the minute  is msg.seconds + msg.nanoseconds * 10e-9 which is simple and straightforward.
/cc @switanis @mfine @mookerji @JoshuaGross
Since the message is still not produced by the hardware and hadn't been used, combined with the fact that field widths are identical, I have kept the same message ID the same as before.","Are we going to be consistent across all messages with nanoseconds handling? In other areas, it continues to be a range that includes negative numbers.
sbp/ext_events.yaml
41:              from -500000 to 500000)

sbp/gnss.yaml
104:              from -500000 to 500000)

sbp/navigation.yaml
61:              from -500000 to 500000)
598:              from -500000 to 500000)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,452,2017-03-22T18:06:33Z,2017-03-24T00:04:52Z,2017-03-24T00:04:52Z,MERGED,True,342,343,30,https://github.com/denniszollo,Utc msg fixes,5,[],https://github.com/swift-nav/libsbp/pull/452,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/452#issuecomment-288591420,"Stefan and I decided that the UTC message wasn't as user friendly as it could be and decided to quickly redefine it so that it make sense.
Now you don't need to use the GPS TOW in order to get UTC time precise beyond seconds.  The GPS TOW can be considered the way to match up each solution epoch.  The formula for getting the seconds in the minute  is msg.seconds + msg.nanoseconds * 10e-9 which is simple and straightforward.
/cc @switanis @mfine @mookerji @JoshuaGross
Since the message is still not produced by the hardware and hadn't been used, combined with the fact that field widths are identical, I have kept the same message ID the same as before.","Based upon the discussions and feedback, I propose that we change the other ns fields to be called ns_residual as to differentiate them from this ns field.
I also think that having a ""unix epoch"" message doesn't make sense, because if you look at the unix epoch, it is defined from the UTC time message, rather than the other way around and there is no concept of astronomical unix epoch.
http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_16",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,452,2017-03-22T18:06:33Z,2017-03-24T00:04:52Z,2017-03-24T00:04:52Z,MERGED,True,342,343,30,https://github.com/denniszollo,Utc msg fixes,5,[],https://github.com/swift-nav/libsbp/pull/452,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/452#issuecomment-288591622,"Stefan and I decided that the UTC message wasn't as user friendly as it could be and decided to quickly redefine it so that it make sense.
Now you don't need to use the GPS TOW in order to get UTC time precise beyond seconds.  The GPS TOW can be considered the way to match up each solution epoch.  The formula for getting the seconds in the minute  is msg.seconds + msg.nanoseconds * 10e-9 which is simple and straightforward.
/cc @switanis @mfine @mookerji @JoshuaGross
Since the message is still not produced by the hardware and hadn't been used, combined with the fact that field widths are identical, I have kept the same message ID the same as before.","Unfortunately, renaming this field will break a lot of other code when libsbp is upgraded",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,452,2017-03-22T18:06:33Z,2017-03-24T00:04:52Z,2017-03-24T00:04:52Z,MERGED,True,342,343,30,https://github.com/denniszollo,Utc msg fixes,5,[],https://github.com/swift-nav/libsbp/pull/452,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/452#issuecomment-288602149,"Stefan and I decided that the UTC message wasn't as user friendly as it could be and decided to quickly redefine it so that it make sense.
Now you don't need to use the GPS TOW in order to get UTC time precise beyond seconds.  The GPS TOW can be considered the way to match up each solution epoch.  The formula for getting the seconds in the minute  is msg.seconds + msg.nanoseconds * 10e-9 which is simple and straightforward.
/cc @switanis @mfine @mookerji @JoshuaGross
Since the message is still not produced by the hardware and hadn't been used, combined with the fact that field widths are identical, I have kept the same message ID the same as before.","I also think that having a ""unix epoch"" message doesn't make sense, because if you look at the unix epoch, it is defined from the UTC time message, rather than the other way around and there is no concept of astronomical unix epoch.

I don't follow this - what's ""rather than the other way around"" mean? Time is generated from an epoch - the time segments that are being populated in the current message are derivable from an epoch. I don't understand what's missing here.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,452,2017-03-22T18:06:33Z,2017-03-24T00:04:52Z,2017-03-24T00:04:52Z,MERGED,True,342,343,30,https://github.com/denniszollo,Utc msg fixes,5,[],https://github.com/swift-nav/libsbp/pull/452,https://github.com/denniszollo,6,https://github.com/swift-nav/libsbp/pull/452#issuecomment-288893326,"Stefan and I decided that the UTC message wasn't as user friendly as it could be and decided to quickly redefine it so that it make sense.
Now you don't need to use the GPS TOW in order to get UTC time precise beyond seconds.  The GPS TOW can be considered the way to match up each solution epoch.  The formula for getting the seconds in the minute  is msg.seconds + msg.nanoseconds * 10e-9 which is simple and straightforward.
/cc @switanis @mfine @mookerji @JoshuaGross
Since the message is still not produced by the hardware and hadn't been used, combined with the fact that field widths are identical, I have kept the same message ID the same as before.","After our synch up meeting, the following decision were made:

This PR can go in unchanged -
we will additionally define a new message that represents GPS - UTC time delta for the next release
We will plan for release of piksi_buildroot to set a default message mask on UART 1 for release that decimates some messages that are unneeded at a high data rate to alleviate serial port congestion. Messages that will be cut out are:

MSG_BASELINE_ECEF
MSG_POS_ECEF
MSG_VEL_ECEF
because these are not used by console at present.
Messages to be decimated to 1hz
MSG_UTC_TIME
MSG_DGNSS_STATUS
MSG_DOPS",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,453,2017-03-24T02:52:52Z,2017-03-24T16:11:40Z,2017-03-24T16:11:40Z,MERGED,True,28,4,6,https://github.com/denniszollo,V2.2.0 branch,3,[],https://github.com/swift-nav/libsbp/pull/453,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/453,Releasing v2.2.0 of libsbp for console and FW,Releasing v2.2.0 of libsbp for console and FW,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,454,2017-03-29T01:45:15Z,2017-12-12T02:06:55Z,2017-12-12T02:06:55Z,MERGED,True,52555,3376,198,https://github.com/denniszollo,inertial_updates: new messages & navigation changes,22,[],https://github.com/swift-nav/libsbp/pull/454,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/454,"/cc @fnoble @jkretzmer @switanis
These are the proposed messages to support inertial outputs.  They have been rebooted after our recent work.
See doc here:
sbp.pdf","/cc @fnoble @jkretzmer @switanis
These are the proposed messages to support inertial outputs.  They have been rebooted after our recent work.
See doc here:
sbp.pdf",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,456,2017-04-04T11:14:44Z,2017-04-10T07:28:46Z,2017-04-10T07:28:46Z,MERGED,True,17,17,5,https://github.com/dt-exafore,Change MSG_GROUP_DELAY,1,[],https://github.com/swift-nav/libsbp/pull/456,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/456,Based on https://github.com/swift-nav/exafore_planning/issues/676,Based on https://github.com/swift-nav/exafore_planning/issues/676,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,457,2017-04-04T12:36:59Z,2017-04-10T06:02:03Z,2017-04-10T06:02:41Z,MERGED,True,12,12,5,https://github.com/dt-exafore,Change SBP_MSG_EPHEMERIS_*,2,[],https://github.com/swift-nav/libsbp/pull/457,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/457,Based on https://github.com/swift-nav/exafore_planning/issues/687,Based on https://github.com/swift-nav/exafore_planning/issues/687,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,458,2017-04-10T11:14:13Z,2017-04-13T10:49:23Z,2017-04-13T10:49:23Z,MERGED,True,448,129,11,https://github.com/dt-exafore,Add SBP_MSG_FCNS_GLO,1,[],https://github.com/swift-nav/libsbp/pull/458,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/458,Based on https://github.com/swift-nav/exafore_planning/issues/685,Based on https://github.com/swift-nav/exafore_planning/issues/685,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,458,2017-04-10T11:14:13Z,2017-04-13T10:49:23Z,2017-04-13T10:49:23Z,MERGED,True,448,129,11,https://github.com/dt-exafore,Add SBP_MSG_FCNS_GLO,1,[],https://github.com/swift-nav/libsbp/pull/458,https://github.com/dt-exafore,2,https://github.com/swift-nav/libsbp/pull/458#issuecomment-293833576,Based on https://github.com/swift-nav/exafore_planning/issues/685,"@adel-mamin corrected, please review.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,459,2017-04-12T07:25:58Z,2017-04-12T08:08:27Z,2017-04-12T08:08:27Z,MERGED,True,1310,47,7,https://github.com/dt-exafore,Update SBP MSG EPHEMERIS*,4,[],https://github.com/swift-nav/libsbp/pull/459,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/459,Based on https://github.com/swift-nav/exafore_planning/issues/695,Based on https://github.com/swift-nav/exafore_planning/issues/695,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,460,2017-04-12T10:16:18Z,2017-04-13T07:27:29Z,2017-04-13T07:27:29Z,MERGED,True,268,21,7,https://github.com/dt-exafore,Update SBP_MSG_GROUP_DELAY,1,[],https://github.com/swift-nav/libsbp/pull/460,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/460,"Bsed on https://github.com/swift-nav/exafore_planning/issues/696
Needed for https://github.com/swift-nav/exafore_planning/issues/676","Bsed on https://github.com/swift-nav/exafore_planning/issues/696
Needed for https://github.com/swift-nav/exafore_planning/issues/676",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,462,2017-04-20T23:23:15Z,2017-05-11T23:32:31Z,2017-05-11T23:32:31Z,MERGED,True,12,1,1,https://github.com/denniszollo,Pyserial_driver: except termios_error in context management,1,[],https://github.com/swift-nav/libsbp/pull/462,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/462,"Somehow the driver context manager was preventing the gui console from closing.
without this fix.  Open console, unplug serial, then close console.
Result: console hangs on OSX
With this fix repeat:
Result: console closes cleanly
Somewhat related to:
swift-nav/piksi_tools#432","Somehow the driver context manager was preventing the gui console from closing.
without this fix.  Open console, unplug serial, then close console.
Result: console hangs on OSX
With this fix repeat:
Result: console closes cleanly
Somewhat related to:
swift-nav/piksi_tools#432",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,463,2017-04-28T20:12:50Z,2017-04-29T00:12:46Z,2017-04-29T00:12:49Z,MERGED,True,1023,247,32,https://github.com/ljbade,Fix ephemeris time to be in seconds,1,[],https://github.com/swift-nav/libsbp/pull/463,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/463,/cc @denniszollo @mbavaro,/cc @denniszollo @mbavaro,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,464,2017-05-10T10:12:24Z,2017-05-12T01:15:08Z,2017-05-12T07:41:14Z,MERGED,True,6,1,1,https://github.com/nsirola,Add description of the RAIM exclusion bit in MSG_OBS.flags,1,[],https://github.com/swift-nav/libsbp/pull/464,https://github.com/nsirola,1,https://github.com/swift-nav/libsbp/pull/464,Add the description of the RAIM exclusion flag to be populated by https://github.com/swift-nav/piksi_firmware_private/pull/782/,Add the description of the RAIM exclusion flag to be populated by https://github.com/swift-nav/piksi_firmware_private/pull/782/,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,465,2017-05-11T23:35:01Z,2017-05-12T01:14:55Z,2017-05-12T01:14:56Z,MERGED,True,2,2,1,https://github.com/denniszollo,Add decimal SBP MSG_ID to doc,1,[],https://github.com/swift-nav/libsbp/pull/465,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/465,"generated PDF looks like this:
sbp.pdf","generated PDF looks like this:
sbp.pdf",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,465,2017-05-11T23:35:01Z,2017-05-12T01:14:55Z,2017-05-12T01:14:56Z,MERGED,True,2,2,1,https://github.com/denniszollo,Add decimal SBP MSG_ID to doc,1,[],https://github.com/swift-nav/libsbp/pull/465,https://github.com/anth-cole,2,https://github.com/swift-nav/libsbp/pull/465#issuecomment-300948454,"generated PDF looks like this:
sbp.pdf",+1 this will be so useful! another option would be a table at the start that maps them all,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,466,2017-05-12T01:59:49Z,2017-05-12T17:54:06Z,2017-05-12T17:54:06Z,MERGED,True,26,3,5,https://github.com/denniszollo,V2.2.1 branch,2,[],https://github.com/swift-nav/libsbp/pull/466,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/466,Need to do a point release for make piksi_tools console exit cleanly on OSX.,Need to do a point release for make piksi_tools console exit cleanly on OSX.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,468,2017-05-17T03:04:13Z,2017-05-19T19:47:22Z,2017-05-19T19:47:22Z,MERGED,True,7,2,1,https://github.com/denniszollo,Fixup termios.error exception handling for Windows,1,[],https://github.com/swift-nav/libsbp/pull/468,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/468,"Intended as a fix for #467
Anyone have something more pythonic to catch the low level exception on osx and linux but do nothingo n windows?","Intended as a fix for #467
Anyone have something more pythonic to catch the low level exception on osx and linux but do nothingo n windows?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,468,2017-05-17T03:04:13Z,2017-05-19T19:47:22Z,2017-05-19T19:47:22Z,MERGED,True,7,2,1,https://github.com/denniszollo,Fixup termios.error exception handling for Windows,1,[],https://github.com/swift-nav/libsbp/pull/468,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/468#issuecomment-302579221,"Intended as a fix for #467
Anyone have something more pythonic to catch the low level exception on osx and linux but do nothingo n windows?",Looks ok to me.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,468,2017-05-17T03:04:13Z,2017-05-19T19:47:22Z,2017-05-19T19:47:22Z,MERGED,True,7,2,1,https://github.com/denniszollo,Fixup termios.error exception handling for Windows,1,[],https://github.com/swift-nav/libsbp/pull/468,https://github.com/jck,3,https://github.com/swift-nav/libsbp/pull/468#issuecomment-302740512,"Intended as a fix for #467
Anyone have something more pythonic to catch the low level exception on osx and linux but do nothingo n windows?","looks good.
Atleast, this is a good solution without trying to dig into where specifically the termios.error exception is raised.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,469,2017-05-19T21:58:11Z,2017-05-22T18:17:01Z,2017-05-22T18:59:39Z,MERGED,True,676,247,17,https://github.com/wltr,New MSG_TRACKING_STATE.,1,[],https://github.com/swift-nav/libsbp/pull/469,https://github.com/wltr,1,https://github.com/swift-nav/libsbp/pull/469,"The previous MSG_TRACKING_STATE only supports up to 24 tracking channels. Now it supports up to 63 tracking channels and has a GLONASS FCN field.
(Also, fixes the units of the device monitor message.)
/cc @ljbade @mfine @JoshuaGross @mbavaro @cbeighley","The previous MSG_TRACKING_STATE only supports up to 24 tracking channels. Now it supports up to 63 tracking channels and has a GLONASS FCN field.
(Also, fixes the units of the device monitor message.)
/cc @ljbade @mfine @JoshuaGross @mbavaro @cbeighley",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,469,2017-05-19T21:58:11Z,2017-05-22T18:17:01Z,2017-05-22T18:59:39Z,MERGED,True,676,247,17,https://github.com/wltr,New MSG_TRACKING_STATE.,1,[],https://github.com/swift-nav/libsbp/pull/469,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/469#issuecomment-302821513,"The previous MSG_TRACKING_STATE only supports up to 24 tracking channels. Now it supports up to 63 tracking channels and has a GLONASS FCN field.
(Also, fixes the units of the device monitor message.)
/cc @ljbade @mfine @JoshuaGross @mbavaro @cbeighley","That message id is taken:
 - MSG_ACQ_RESULT:
    id: 0x0014

otherwise looks great!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,469,2017-05-19T21:58:11Z,2017-05-22T18:17:01Z,2017-05-22T18:59:39Z,MERGED,True,676,247,17,https://github.com/wltr,New MSG_TRACKING_STATE.,1,[],https://github.com/swift-nav/libsbp/pull/469,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/469#issuecomment-302823932,"The previous MSG_TRACKING_STATE only supports up to 24 tracking channels. Now it supports up to 63 tracking channels and has a GLONASS FCN field.
(Also, fixes the units of the device monitor message.)
/cc @ljbade @mfine @JoshuaGross @mbavaro @cbeighley",also please generate code for the new messages!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,469,2017-05-19T21:58:11Z,2017-05-22T18:17:01Z,2017-05-22T18:59:39Z,MERGED,True,676,247,17,https://github.com/wltr,New MSG_TRACKING_STATE.,1,[],https://github.com/swift-nav/libsbp/pull/469,https://github.com/wltr,4,https://github.com/swift-nav/libsbp/pull/469#issuecomment-302839450,"The previous MSG_TRACKING_STATE only supports up to 24 tracking channels. Now it supports up to 63 tracking channels and has a GLONASS FCN field.
(Also, fixes the units of the device monitor message.)
/cc @ljbade @mfine @JoshuaGross @mbavaro @cbeighley",@mfine Generated the code as well. Do I also need to bump a version somewhere or is that done by tagging?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,469,2017-05-19T21:58:11Z,2017-05-22T18:17:01Z,2017-05-22T18:59:39Z,MERGED,True,676,247,17,https://github.com/wltr,New MSG_TRACKING_STATE.,1,[],https://github.com/swift-nav/libsbp/pull/469,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/469#issuecomment-302851776,"The previous MSG_TRACKING_STATE only supports up to 24 tracking channels. Now it supports up to 63 tracking channels and has a GLONASS FCN field.
(Also, fixes the units of the device monitor message.)
/cc @ljbade @mfine @JoshuaGross @mbavaro @cbeighley",Don't need to bump the version - done by tagging.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,469,2017-05-19T21:58:11Z,2017-05-22T18:17:01Z,2017-05-22T18:59:39Z,MERGED,True,676,247,17,https://github.com/wltr,New MSG_TRACKING_STATE.,1,[],https://github.com/swift-nav/libsbp/pull/469,https://github.com/wltr,6,https://github.com/swift-nav/libsbp/pull/469#issuecomment-303161361,"The previous MSG_TRACKING_STATE only supports up to 24 tracking channels. Now it supports up to 63 tracking channels and has a GLONASS FCN field.
(Also, fixes the units of the device monitor message.)
/cc @ljbade @mfine @JoshuaGross @mbavaro @cbeighley",Generated all files. Merging.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/470,"self explanatory, not decorated much yet","self explanatory, not decorated much yet",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/470#issuecomment-303198032,"self explanatory, not decorated much yet",What is specan? Is that a term of art around spectrum analysis?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mbavaro,3,https://github.com/swift-nav/libsbp/pull/470#issuecomment-303201303,"self explanatory, not decorated much yet","@mfine yeah, not the best choice but it's the same as in PFWP
@mookerji I rebased, modified table.py and related examples .. do you think it is OK now?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/470#issuecomment-303202452,"self explanatory, not decorated much yet",@mbavaro are there going to be more spectrum analyzer messages? It seems overkill to start a new file/group for this - can we just put it in piksi instead?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mbavaro,5,https://github.com/swift-nav/libsbp/pull/470#issuecomment-303204486,"self explanatory, not decorated much yet","@mfine more messages might be defined in the future: we don't deal much with interference right now, but I could envisage some messages to configure the spectrum analyzer traces (channels, bandwidths, averages, windows, ...), as well as messages for changing IF filter parameters or setting notches there. Unless it hurts anyone's sense of beautiful code, I would leave like this.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mfine,6,https://github.com/swift-nav/libsbp/pull/470#issuecomment-303205506,"self explanatory, not decorated much yet","@mbavaro well we can always add the grouping later - I'd would roll this into piksi.yaml. Other ""single"" groupings like ext-events haven't really been worth the split out and file pollution.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mookerji,7,https://github.com/swift-nav/libsbp/pull/470#issuecomment-303206793,"self explanatory, not decorated much yet","@mbavaro ack, yeah, I was going to echo @mfine's comment before but didn't finish the review. As an alternative to piksi.yaml, I would also recommend acquisition.yaml or logging.yaml. If the configuration you're describing comes to fruition, then the acquisition module might be more appropriate.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mbavaro,8,https://github.com/swift-nav/libsbp/pull/470#issuecomment-303207292,"self explanatory, not decorated much yet",I see it hurts your sense of beauty. OK I am moving it to piksi.yaml.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mfine,9,https://github.com/swift-nav/libsbp/pull/470#issuecomment-303227992,"self explanatory, not decorated much yet","Looks great, thanks!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,470,2017-05-20T00:49:24Z,2017-05-22T22:05:44Z,2017-05-22T22:05:44Z,MERGED,True,502,166,9,https://github.com/mbavaro,adding the spectrum analyzer message,7,[],https://github.com/swift-nav/libsbp/pull/470,https://github.com/mookerji,10,https://github.com/swift-nav/libsbp/pull/470#issuecomment-303232793,"self explanatory, not decorated much yet",,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,471,2017-05-22T00:48:00Z,2017-05-23T02:53:55Z,2017-05-23T02:53:55Z,MERGED,True,16,0,2,https://github.com/brentalanmiller,"Adding `extern ""C""` to sbp.h for inclusion into C++ programs",2,[],https://github.com/swift-nav/libsbp/pull/471,https://github.com/brentalanmiller,1,https://github.com/swift-nav/libsbp/pull/471,Otherwise linking will fail with messages like undefined reference to 'sbp_state_init(sbp_state_t*)',Otherwise linking will fail with messages like undefined reference to 'sbp_state_init(sbp_state_t*)',True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,471,2017-05-22T00:48:00Z,2017-05-23T02:53:55Z,2017-05-23T02:53:55Z,MERGED,True,16,0,2,https://github.com/brentalanmiller,"Adding `extern ""C""` to sbp.h for inclusion into C++ programs",2,[],https://github.com/swift-nav/libsbp/pull/471,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/471#issuecomment-303168714,Otherwise linking will fail with messages like undefined reference to 'sbp_state_init(sbp_state_t*)',"@brentalanmiller thank you this is excellent!
Can you also wrap include/libsbp/edc.h? That is the only other file with extern functions.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,471,2017-05-22T00:48:00Z,2017-05-23T02:53:55Z,2017-05-23T02:53:55Z,MERGED,True,16,0,2,https://github.com/brentalanmiller,"Adding `extern ""C""` to sbp.h for inclusion into C++ programs",2,[],https://github.com/swift-nav/libsbp/pull/471,https://github.com/brentalanmiller,3,https://github.com/swift-nav/libsbp/pull/471#issuecomment-303269118,Otherwise linking will fail with messages like undefined reference to 'sbp_state_init(sbp_state_t*)',"@ljbade Sure, no problem. Just committed.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,471,2017-05-22T00:48:00Z,2017-05-23T02:53:55Z,2017-05-23T02:53:55Z,MERGED,True,16,0,2,https://github.com/brentalanmiller,"Adding `extern ""C""` to sbp.h for inclusion into C++ programs",2,[],https://github.com/swift-nav/libsbp/pull/471,https://github.com/mookerji,4,https://github.com/swift-nav/libsbp/pull/471#issuecomment-303276025,Otherwise linking will fail with messages like undefined reference to 'sbp_state_init(sbp_state_t*)',"Excellent, thanks @brentalanmiller and @ljbade !",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,473,2017-05-31T07:23:13Z,2020-06-17T02:18:29Z,2020-06-17T02:18:29Z,CLOSED,False,2315,719,27,https://github.com/pmiettinen,Performance enhancements,15,[],https://github.com/swift-nav/libsbp/pull/473,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/473,"Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35","Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,473,2017-05-31T07:23:13Z,2020-06-17T02:18:29Z,2020-06-17T02:18:29Z,CLOSED,False,2315,719,27,https://github.com/pmiettinen,Performance enhancements,15,[],https://github.com/swift-nav/libsbp/pull/473,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/473#issuecomment-305109545,"Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35","Some examples of the improvements
table.py:56 dispatch function which calls the constructors for every message type indicates t_avg 0.371 ms vs 0.861 ms which is ~57% less (better).
PySerialDriver.read t_avg 0.023 ms | 0.064 ms
_SBPQueueIterator.next t_avg 0.008 ms |  0.197 ms",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,473,2017-05-31T07:23:13Z,2020-06-17T02:18:29Z,2020-06-17T02:18:29Z,CLOSED,False,2315,719,27,https://github.com/pmiettinen,Performance enhancements,15,[],https://github.com/swift-nav/libsbp/pull/473,https://github.com/pmiettinen,3,https://github.com/swift-nav/libsbp/pull/473#issuecomment-305114307,"Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35","PR:

master:",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,473,2017-05-31T07:23:13Z,2020-06-17T02:18:29Z,2020-06-17T02:18:29Z,CLOSED,False,2315,719,27,https://github.com/pmiettinen,Performance enhancements,15,[],https://github.com/swift-nav/libsbp/pull/473,https://github.com/pmiettinen,4,https://github.com/swift-nav/libsbp/pull/473#issuecomment-305118567,"Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35","Increasing the serial port timeout would help on the CPU load but console ""real-timeness"" suffers due to increased delays.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,473,2017-05-31T07:23:13Z,2020-06-17T02:18:29Z,2020-06-17T02:18:29Z,CLOSED,False,2315,719,27,https://github.com/pmiettinen,Performance enhancements,15,[],https://github.com/swift-nav/libsbp/pull/473,https://github.com/denniszollo,5,https://github.com/swift-nav/libsbp/pull/473#issuecomment-306584629,"Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35","Can we split this up split this up into a few commits with structure like the following?
1st: change to generator and requirements
2nd: generated code
3rd: Change to python client code for reading multiple bytes at a time and timeout
4th: Changes to python client for dequeu",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,473,2017-05-31T07:23:13Z,2020-06-17T02:18:29Z,2020-06-17T02:18:29Z,CLOSED,False,2315,719,27,https://github.com/pmiettinen,Performance enhancements,15,[],https://github.com/swift-nav/libsbp/pull/473,https://github.com/pmiettinen,6,https://github.com/swift-nav/libsbp/pull/473#issuecomment-306723139,"Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35","Addressed review comments, rebased and splitted to smaller commits.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,473,2017-05-31T07:23:13Z,2020-06-17T02:18:29Z,2020-06-17T02:18:29Z,CLOSED,False,2315,719,27,https://github.com/pmiettinen,Performance enhancements,15,[],https://github.com/swift-nav/libsbp/pull/473,https://github.com/denniszollo,7,https://github.com/swift-nav/libsbp/pull/473#issuecomment-306974959,"Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35","Lets not do any more work with respect to the numpy portion of this PR because @jck and I are having trouble that is makes a difference across all platforms.  The command line quote above isn't really an apples to apples comparison with what is implemented.
We think it is important to repeat perf tests on Windows before investing any time in the replacing construct with numpy portion PR.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,473,2017-05-31T07:23:13Z,2020-06-17T02:18:29Z,2020-06-17T02:18:29Z,CLOSED,False,2315,719,27,https://github.com/pmiettinen,Performance enhancements,15,[],https://github.com/swift-nav/libsbp/pull/473,https://github.com/silverjam,8,https://github.com/swift-nav/libsbp/pull/473#issuecomment-470268950,"Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35",@pmiettinen any chance this can be resurrected?  Or this no longer applicable to the current code base?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,473,2017-05-31T07:23:13Z,2020-06-17T02:18:29Z,2020-06-17T02:18:29Z,CLOSED,False,2315,719,27,https://github.com/pmiettinen,Performance enhancements,15,[],https://github.com/swift-nav/libsbp/pull/473,https://github.com/pmiettinen,9,https://github.com/swift-nav/libsbp/pull/473#issuecomment-470542749,"Msg decoding from construct to numpy
_SBPQueueIterator internals from Queue to deque
PySerialDriver read

PR CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000134  4.929672  4.929672
..handler.py:46 Handler._recv_thread  1      0.064880  4.929537  4.929537
..bp/client/framer.py:64 Framer.next  4700   0.053170  4.649743  0.000989
..lient/framer.py:99 Framer._receive  4723   0.600478  4.468708  0.000946
..py2.7.egg/sbp/table.py:56 dispatch  4699   0.100224  1.745657  0.000371
..bservation.py:1005 MsgObs.__init__  882    0.015912  0.978820  0.001110
..rvation.py:1035 MsgObs.from_binary  882    0.070853  0.960264  0.001089
..n.py:228 PackedObsContent.__init__  4116   0.016826  0.770654  0.000187
..y:250 PackedObsContent.from_binary  4116   0.307912  0.753828  0.000183
..627b-py2.7.egg/sbp/msg.py:61 crc16  4699   0.492355  0.682192  0.000145
..lient/framer.py:75 Framer._readall  14099  0.362817  0.624950  0.000044
..core/_internal.py:151 _commastring  4700   0.320664  0.572828  0.000122
..l_driver.py:69 PySerialDriver.read  18822  0.151017  0.426449  0.000023
..ial/serialposix.py:453 Serial.read  859    0.068900  0.252343  0.000294
..lient/handler.py:163 Handler._call  4699   0.072073  0.214897  0.000046
..1019 MsgTrackingStateDepB.__init__  59     0.001038  0.141885  0.002405
..8 MsgTrackingStateDepB.from_binary  59     0.012502  0.140493  0.002381
..p/client/framer.py:54 Framer._time  4699   0.043678  0.127866  0.000027
.. TrackingChannelStateDepB.__init__  1416   0.004914  0.123774  0.000087
../gnss.py:412 CarrierPhase.__init__  4116   0.016526  0.123169  0.000030
..p/gnss.py:54 GnssSignal16.__init__  4226   0.015869  0.121829  0.000029
..bservation.py:126 Doppler.__init__  4116   0.017472  0.121517  0.000030
..ackingChannelStateDepB.from_binary  1416   0.049233  0.118860  0.000084
../sbp/client/handler.py:84 feediter  9398   0.060285  0.110733  0.000012
..ss.py:429 CarrierPhase.from_binary  4116   0.083712  0.106643  0.000026
..nss.py:71 GnssSignal16.from_binary  4226   0.082619  0.105961  0.000025
..rvation.py:143 Doppler.from_binary  4116   0.080705  0.104044  0.000025
..n.py:57 ObservationHeader.__init__  882    0.005541  0.095457  0.000108
..y:74 ObservationHeader.from_binary  882    0.028407  0.089917  0.000102
..dler.py:270 _SBPQueueIterator.next  930..  0.040519  0.070078  0.000008
..ksi.py:891 MsgThreadState.__init__  285    0.004105  0.066876  0.000235
..bp/gnss.py:129 GnssSignal.__init__  1561   0.006120  0.066417  0.000043
...py:922 MsgThreadState.from_binary  285    0.017536  0.061632  0.000216
..gnss.py:147 GnssSignal.from_binary  1561   0.046846  0.060297  0.000039
..p/gnss.py:342 GPSTimeNano.__init__  882    0.004867  0.056588  0.000064
..nss.py:360 GPSTimeNano.from_binary  882    0.040458  0.051721  0.000059
...py:263 _SBPQueueIterator.__call__  9398   0.038272  0.050448  0.000005
..tem.py:223 MsgDgnssStatus.__init__  295    0.006887  0.047792  0.000162
...7.egg/sbp/msg.py:107 SBP.__init__  9398   0.044625  0.044625  0.000005
..igation.py:275 MsgUtcTime.__init__  294    0.004830  0.041403  0.000141
..navigation.py:448 MsgDops.__init__  294    0.005827  0.040619  0.000138
...py:255 MsgDgnssStatus.from_binary  295    0.023253  0.039932  0.000135
..on.py:1154 MsgBaselineNED.__init__  294    0.005147  0.039542  0.000134
..vigation.py:803 MsgPosLLH.__init__  294    0.004596  0.037556  0.000128
..igation.py:1507 MsgVelNED.__init__  294    0.004859  0.036852  0.000125
..on.py:976 MsgBaselineECEF.__init__  294    0.004678  0.035692  0.000121
..tion.py:312 MsgUtcTime.from_binary  294    0.025454  0.035602  0.000121
..igation.py:623 MsgPosECEF.__init__  294    0.004741  0.034793  0.000118
..gation.py:1327 MsgVelECEF.__init__  294    0.004814  0.034633  0.000118
..igation.py:483 MsgDops.from_binary  294    0.024764  0.033658  0.000114
..py:1190 MsgBaselineNED.from_binary  294    0.024685  0.033097  0.000113
..dler.py:152 Handler._get_callbacks  4699   0.032090  0.032090  0.000007
..ation.py:839 MsgPosLLH.from_binary  294    0.022883  0.031750  0.000108
..tion.py:1543 MsgVelNED.from_binary  294    0.023180  0.030949  0.000105
..y:1011 MsgBaselineECEF.from_binary  294    0.021971  0.029594  0.000101
..tion.py:658 MsgPosECEF.from_binary  294    0.021321  0.028807  0.000098
..ion.py:1362 MsgVelECEF.from_binary  294    0.020944  0.028674  0.000098
..2.7.egg/sbp/piksi.py:961 <genexpr>  5985   0.019623  0.026772  0.000004
..vigation.py:99 MsgGPSTime.__init__  294    0.005332  0.025256  0.000086
piksi_tools/serial_link.py:295 main   1      0.000180  0.021922  0.021922
..tion.py:131 MsgGPSTime.from_binary  294    0.014160  0.018927  0.000064
..py:1805 MsgAgeCorrections.__init__  295    0.005050  0.018806  0.000064
..on.py:647 MsgAcqSvProfile.__init__  29     0.000581  0.017219  0.000594
..py:676 MsgAcqSvProfile.from_binary  29     0.001505  0.016467  0.000568
..ition.py:107 AcqSvProfile.__init__  67     0.000337  0.014511  0.000217
..on.py:134 AcqSvProfile.from_binary  67     0.008224  0.014174  0.000212
..iksi.py:1053 MsgUartState.__init__  30     0.000564  0.013790  0.000460
..i.py:1086 MsgUartState.from_binary  30     0.002429  0.013094  0.000436
..1835 MsgAgeCorrections.from_binary  295    0.009562  0.012276  0.000042
..l_logger.py:17 NullLogger.__call__  9303   0.012137  0.012137  0.000001
..bp/ndb.py:108 MsgNdbEvent.__init__  55     0.000941  0.011917  0.000217
..ition.py:207 MsgAcqResult.__init__  67     0.001062  0.011098  0.000166
..ndb.py:144 MsgNdbEvent.from_binary  55     0.005311  0.010823  0.000197
..ools/serial_link.py:120 get_driver  1      0.000051  0.010396  0.010396
..s/list_ports_linux.py:135 comports  1      0.000068  0.009640  0.009640
..on.py:239 MsgAcqResult.from_binary  67     0.004300  0.009556  0.000143
piksi_tools/serial_link.py:259 run    1      0.001106  0.008663  0.008663
..p/piksi.py:84 UARTChannel.__init__  90     0.000393  0.006643  0.000074
..:1549 MsgEphemerisGPSDepE.__init__  11     0.000236  0.006479  0.000589
..ksi.py:105 UARTChannel.from_binary  90     0.004770  0.006250  0.000069
..00 MsgEphemerisGPSDepE.from_binary  11     0.002229  0.006137  0.000558
..ls/list_ports_linux.py:97 describe  33     0.000150  0.005643  0.000171
..i_tools/serial_link.py:98 get_args  1      0.000536  0.004492  0.004492
..ports_linux.py:79 usb_lsusb_string  1      0.000038  0.004263  0.004263
..r/lib/python2.7/re.py:226 _compile  51     0.000162  0.003843  0.000075
..thon2.7/sre_compile.py:493 compile  11     0.000127  0.003609  0.000328
...7.egg/sbp/system.py:294 <genexpr>  295    0.003354  0.003354  0.000011
..phemerisCommonContentDepA.__init__  11     0.000099  0.002632  0.000239
..merisCommonContentDepA.from_binary  11     0.000799  0.002533  0.000230
../serial_link.py:51 base_cl_options  1      0.000036  0.002503  0.002503
..ls/list_ports_linux.py:52 re_group  5      0.000029  0.002404  0.000481
/usr/lib/python2.7/re.py:139 search   5      0.000016  0.002373  0.000475
/usr/lib/python2.7/glob.py:18 glob    3      0.000032  0.002077  0.000692
/usr/lib/python2.7/glob.py:29 iglob   36     0.000059  0.002045  0.000057
..b/python2.7/sre_parse.py:675 parse  11     0.000085  0.002016  0.000183
..ols/list_ports_linux.py:115 hwinfo  33     0.000235  0.001852  0.000056
..ystem.py:367 MsgHeartbeat.__init__  29     0.000571  0.001838  0.000063
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000096  0.001827  0.000107
../sbp/piksi.py:251 Latency.__init__  30     0.000148  0.001817  0.000061
/usr/lib/python2.7/glob.py:66 glob1   3      0.000022  0.001802  0.000601
..g/sbp/piksi.py:169 Period.__init__  30     0.000138  0.001734  0.000058
../python2.7/sre_parse.py:379 _parse  18/12  0.000656  0.001718  0.000095
..tools/list_ports_linux.py:26 popen  1      0.000029  0.001704  0.001704
..p/piksi.py:270 Latency.from_binary  30     0.001301  0.001670  0.000056
..2.7/subprocess.py:544 check_output  1      0.000050  0.001663  0.001663
..bp/piksi.py:188 Period.from_binary  30     0.001180  0.001596  0.000053
..python2.7/genericpath.py:15 exists  186    0.000325  0.001577  0.000008
..py:4565 MsgGroupDelayDepA.__init__  6      0.000111  0.001563  0.000260
..se.py:1545 ArgumentParser.__init__  1      0.000032  0.001545  0.001545
..7/threading.py:308 _Condition.wait  4      0.000466  0.001504  0.000376
..y:1252 ArgumentParser.add_argument  19     0.000175  0.001488  0.000078
..4599 MsgGroupDelayDepA.from_binary  6      0.000542  0.001429  0.000238
..python2.7/sre_compile.py:478 _code  11     0.000045  0.001416  0.000129
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001394  0.000032
..7/subprocess.py:650 Popen.__init__  1      0.000053  0.001332  0.001332
..ent/handler.py:64 Handler.__exit__  1      0.000017  0.001288  0.001288
..client/handler.py:188 Handler.stop  1      0.000041  0.001271  0.001271
..lib/python2.7/fnmatch.py:45 filter  3      0.000264  0.001241  0.000414
..on2.7/threading.py:911 Thread.join  1      0.000139  0.001224  0.001224
..g/sbp/gnss.py:198 GPSTime.__init__  28     0.000149  0.001177  0.000042
..em.py:396 MsgHeartbeat.from_binary  29     0.000949  0.001133  0.000039
..ocess.py:1187 Popen._execute_child  1      0.000228  0.001121  0.001121
..ython2.7/posixpath.py:379 realpath  4      0.000013  0.001068  0.000267
..bp/gnss.py:215 GPSTime.from_binary  28     0.000828  0.001027  0.000037
...py:1634 MsgDeviceMonitor.__init__  10     0.000173  0.001005  0.000100
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000226  0.000970  0.000081
..nt/handler.py:198 Handler.is_alive  30     0.000264  0.000895  0.000030
..:1667 MsgDeviceMonitor.from_binary  10     0.000596  0.000792  0.000079
..thon2.7/sre_compile.py:32 _compile  41/11  0.000378  0.000766  0.000019
../python2.7/argparse.py:62 <module>  1      0.000628  0.000746  0.000746
..n2.7/threading.py:726 Thread.start  3      0.000040  0.000707  0.000236
..iver.py:43 PySerialDriver.__init__  1      0.000063  0.000704  0.000704
...7/threading.py:995 Thread.isAlive  30     0.000544  0.000630  0.000021
..se.py:1171 ArgumentParser.__init__  3      0.000056  0.000613  0.000204
..7/sre_compile.py:359 _compile_info  11     0.000302  0.000603  0.000055
..2315 ArgumentParser._get_formatter  19     0.000037  0.000599  0.000032
..b/python2.7/gettext.py:580 gettext  3      0.000006  0.000582  0.000194
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000576  0.000192
..thon2.7/gettext.py:476 translation  3      0.000011  0.000563  0.000188
..arse.py:154 HelpFormatter.__init__  19     0.000155  0.000562  0.000030
../lib/python2.7/gettext.py:421 find  3      0.000087  0.000552  0.000184
..on2.7/threading.py:602 _Event.wait  3      0.000030  0.000516  0.000172
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000156  0.000511  0.000003
..nt/handler.py:60 Handler.__enter__  1      0.000005  0.000493  0.000493
..lient/handler.py:182 Handler.start  1      0.000003  0.000487  0.000487
..rial/__init__.py:32 serial_for_url  1      0.000029  0.000484  0.000484
..lib/python2.7/posixpath.py:68 join  139    0.000289  0.000459  0.000003
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000420  0.000420
..96 ArgumentParser.parse_known_args  1      0.000032  0.000417  0.000417
../sre_parse.py:182 Tokenizer.__next  188    0.000290  0.000406  0.000002
..ial/serialposix.py:279 Serial.open  1      0.000068  0.000396  0.000396
../python2.7/posixpath.py:139 islink  80     0.000112  0.000365  0.000005
..1 ArgumentParser._parse_known_args  1      0.000051  0.000354  0.000354
..s/list_ports_linux.py:42 read_line  6      0.000033  0.000284  0.000047
..arse.py:130 SubPattern.__getitem__  159    0.000201  0.000280  0.000002
..ubprocess.py:768 Popen.communicate  1      0.000048  0.000275  0.000275
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000012  0.000274  0.000274
..six.py:311 Serial._reconfigurePort  4      0.000119  0.000272  0.000068
../argparse.py:1799 consume_optional  2      0.000012  0.000253  0.000126
..forwarder.py:32 Forwarder.__init__  2      0.000135  0.000245  0.000122
..ubprocess.py:473 _eintr_retry_call  3      0.000024  0.000242  0.000081
..7/threading.py:656 Thread.__init__  3      0.000065  0.000226  0.000075
..e_parse.py:140 SubPattern.getwidth  63/33  0.000179  0.000218  0.000003
..lient/framer.py:35 Framer.__init__  1      0.000028  0.000218  0.000218
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000196  0.000033
..erial_link.py:344 signal_handler_c  1      0.000192  0.000192  0.000192
..009 ArgumentParser._match_argument  2      0.000013  0.000188  0.000094
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000072  0.000186  0.000186
..py:1669 ArgumentParser._add_action  19     0.000020  0.000182  0.000010
../lib/python2.7/glob.py:77 <lambda>  606    0.000176  0.000176  0.000000
..rgumentParser._get_optional_kwargs  19     0.000114  0.000169  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000167  0.000084
..ent/handler.py:37 Handler.__init__  1      0.000040  0.000165  0.000165
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000163  0.000009
...py:573 HelpFormatter._format_args  19     0.000086  0.000143  0.000008
..sre_parse.py:138 SubPattern.append  114    0.000095  0.000134  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000011  0.000134  0.000067
..ib/python2.7/posixpath.py:89 split  39     0.000091  0.000134  0.000003
..process.py:1099 Popen._get_handles  1      0.000009  0.000130  0.000130
..py:1309 _ArgumentGroup._add_action  19     0.000067  0.000123  0.000006
..ss.py:1148 Popen._set_cloexec_flag  4      0.000012  0.000105  0.000026
..ython2.7/posixpath.py:119 basename  69     0.000067  0.000100  0.000001
..rialutil.py:333 Serial.setBaudrate  2      0.000016  0.000098  0.000049
..ent/handler.py:93 Handler.__iter__  2      0.000010  0.000095  0.000048
..re_compile.py:178 _compile_charset  13     0.000050  0.000094  0.000007
..2.7/threading.py:866 Thread.__stop  1      0.000027  0.000092  0.000092
..re_parse.py:126 SubPattern.__len__  96     0.000067  0.000092  0.000001
..n2.7/threading.py:569 _Event.isSet  37     0.000092  0.000092  0.000002
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000061  0.000091  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000091  0.000015
..b/python2.7/threading.py:541 Event  3      0.000011  0.000090  0.000030
..thon2.7/sre_compile.py:354 _simple  22     0.000047  0.000087  0.000004
.. ArgumentParser.add_argument_group  2      0.000008  0.000086  0.000043
..lient/handler.py:72 Handler.filter  2      0.000057  0.000085  0.000042
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..thon2.7/threading.py:241 Condition  6      0.000022  0.000082  0.000014
..7/threading.py:560 _Event.__init__  3      0.000015  0.000079  0.000026
..se.py:1475 _ArgumentGroup.__init__  2      0.000014  0.000078  0.000039
.._init__.py:52 create_string_buffer  1      0.000073  0.000076  0.000076
..ython2.7/posixpath.py:336 normpath  4      0.000044  0.000070  0.000018
..re_parse.py:178 Tokenizer.__init__  11     0.000023  0.000062  0.000006
..reading.py:259 _Condition.__init__  6      0.000056  0.000060  0.000010
..eading.py:399 _Condition.notifyAll  1      0.000017  0.000060  0.000060
..python2.7/argparse.py:95 _callable  44     0.000035  0.000058  0.000001
..4 ArgumentParser._pop_action_class  19     0.000029  0.000058  0.000003
../python2.7/fnmatch.py:81 translate  3      0.000020  0.000057  0.000019
...7/threading.py:1152 currentThread  4      0.000049  0.000056  0.000014
../serialutil.py:234 Serial.__init__  1      0.000041  0.000055  0.000055
..7/sre_parse.py:195 Tokenizer.match  73     0.000040  0.000053  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000014  0.000052  0.000026
..se.py:1223 ArgumentParser.register  34     0.000039  0.000051  0.000001
..:1227 ArgumentParser._registry_get  44     0.000036  0.000051  0.000001
..n2.7/subprocess.py:1371 Popen.wait  1      0.000022  0.000050  0.000050
..serDict.py:18 _Environ.__getitem__  22     0.000028  0.000049  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000030  0.000044  0.000044
...7/locale.py:347 _replace_encoding  3      0.000019  0.000043  0.000014
..andler.py:100 Handler.add_callback  4      0.000033  0.000043  0.000011
..hreading.py:709 Thread._set_daemon  3      0.000021  0.000042  0.000014
..threading.py:372 _Condition.notify  1      0.000026  0.000041  0.000041
..python2.7/sre_parse.py:257 _escape  20     0.000027  0.000041  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000032  0.000040  0.000002
..erialutil.py:393 Serial.setTimeout  2      0.000007  0.000038  0.000019
..ython2.7/uuid.py:101 UUID.__init__  1      0.000026  0.000037  0.000037
..e.py:865 _StoreTrueAction.__init__  8      0.000013  0.000037  0.000005
/usr/lib/python2.7/re.py:204 escape   16     0.000032  0.000037  0.000002
..eading.py:299 _Condition._is_owned  5      0.000026  0.000035  0.000007
..b/python2.7/argparse.py:566 format  19     0.000022  0.000035  0.000002
..e_compile.py:207 _optimize_charset  13     0.000034  0.000034  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000033  0.000033  0.000002
..py:2189 ArgumentParser._get_values  2      0.000016  0.000032  0.000016
...py:2241 ArgumentParser._get_value  6      0.000014  0.000031  0.000005
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000031  0.000031  0.000000
..hon2.7/UserDict.py:58 _Environ.get  12     0.000021  0.000029  0.000002
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000029  0.000003
..re_parse.py:90 SubPattern.__init__  41     0.000028  0.000028  0.000001
..py:296 _Condition._acquire_restore  4      0.000017  0.000024  0.000006
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000024  0.000003
..on2.7/threading.py:63 Thread._note  11     0.000023  0.000023  0.000002
..7/sre_parse.py:67 Pattern.__init__  11     0.000023  0.000023  0.000002
..n2.7/argparse.py:147 HelpFormatter  1      0.000022  0.000022  0.000022
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000022  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000010  0.000021  0.000002
..serialutil.py:441 Serial.setRtsCts  2      0.000003  0.000020  0.000010
../__init__.py:49 normalize_encoding  3      0.000011  0.000020  0.000007
..ubprocess.py:1208 _close_in_parent  1      0.000013  0.000019  0.000019
..ng.py:293 _Condition._release_save  4      0.000014  0.000017  0.000004
..py:266 _SBPQueueIterator.breakiter  2      0.000013  0.000016  0.000008
..437 _ArgumentGroup._check_conflict  19     0.000015  0.000015  0.000001
..7 HelpFormatter._metavar_formatter  19     0.000015  0.000015  0.000001
../sre_parse.py:72 Pattern.opengroup  6      0.000011  0.000014  0.000002
..ools/serial_link.py:42 logfilename  1      0.000003  0.000014  0.000014
..gparse.py:983 _HelpAction.__init__  1      0.000004  0.000014  0.000014
..python2.7/posixpath.py:127 dirname  4      0.000008  0.000013  0.000003
../argparse.py:199 _Section.__init__  19     0.000011  0.000011  0.000001
...7/threading.py:58 Thread.__init__  12     0.000011  0.000011  0.000001
..arse.py:134 SubPattern.__setitem__  22     0.000011  0.000011  0.000000
..rialposix.py:526 Serial.flushInput  1      0.000006  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000011  0.000011
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..y:1428 ArgumentParser._get_handler  3      0.000007  0.000010  0.000003
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000009  0.000009
...7/threading.py:1024 Thread.daemon  3      0.000007  0.000009  0.000003
.._.py:23 VendorImporter.find_module  2      0.000006  0.000007  0.000003
...7/subprocess.py:754 Popen.__del__  1      0.000006  0.000007  0.000007
.. ArgumentParser._get_nargs_pattern  2      0.000004  0.000007  0.000003
..erDict.py:70 _Environ.__contains__  12     0.000007  0.000007  0.000001
..l/serialutil.py:307 Serial.setPort  2      0.000006  0.000006  0.000003
..ools/serial_link.py:151 get_logger  1      0.000006  0.000006  0.000006
..l_logger.py:35 NullLogger.__exit__  2      0.000006  0.000006  0.000003
...py:256 _SBPQueueIterator.__init__  2      0.000006  0.000006  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..on2.7/subprocess.py:802 Popen.poll  1      0.000005  0.000006  0.000006
..ient/framer.py:47 Framer.breakiter  1      0.000006  0.000006  0.000006
...7/argparse.py:1473 _ArgumentGroup  1      0.000006  0.000006  0.000006
..reading.py:1008 _MainThread.daemon  3      0.000005  0.000005  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000004  0.000004  0.000004
..python2.7/uuid.py:197 UUID.__str__  1      0.000004  0.000004  0.000004
..4 _SixMetaPathImporter.find_module  2      0.000004  0.000004  0.000002
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..iver.py:23 PySerialDriver.__init__  1      0.000003  0.000003  0.000003
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
..thon2.7/subprocess.py:458 _cleanup  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
...7/gettext.py:173 NullTranslations  1      0.000003  0.000003  0.000003
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
...7/argparse.py:1000 _VersionAction  1      0.000002  0.000002  0.000002
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
../argparse.py:705 ArgumentTypeError  1      0.000002  0.000002  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..lient/framer.py:43 Framer.__iter__  1      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000000
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:805 _StoreAction  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..rial_link.py:171 get_append_logger  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:685 ArgumentError  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000000  0.000000  0.000000
..ient/forwarder.py:39 Forwarder.run  2      0.000000  0.000000  0.000000

name           id     tid              ttot      scnt        
Forwarder      3      139824986769152  0.489911  63        
Forwarder      2      139824978376448  0.489881  61        
Thread         1      139824969983744  0.489824  133       
_MainThread    0      139825076565824  0.104408  36

Master b3eab78 CPU profile (30 seconds wall time)
Clock type: CPU
Ordered by: totaltime, desc

name                                  ncall  tsub      ttot      tavg      
..hon2.7/threading.py:752 Thread.run  1      0.000041  7.467627  7.467627
..handler.py:43 Handler._recv_thread  1      0.056838  7.467586  7.467586
..bp/client/framer.py:62 Framer.next  4777   0.052543  6.541999  0.001369
..lient/framer.py:96 Framer._receive  4880   0.189594  6.378164  0.001307
..py2.7.egg/sbp/table.py:56 dispatch  4776   0.047098  4.111740  0.000861
..construct/core.py:180 Struct.parse  4776   0.027236  3.695312  0.000774
..ct/core.py:190 Struct.parse_stream  4776   0.051040  3.645202  0.000763
..onstruct/core.py:657 Struct._parse  507..  1.104910  3.546414  0.000070
..observation.py:698 MsgObs.__init__  899    0.014159  2.435000  0.002709
..construct/core.py:515 Range._parse  1287   0.063602  2.434687  0.001892
..ervation.py:728 MsgObs.from_binary  899    0.015267  2.417802  0.002689
..struct/core.py:270 Reconfig._parse  232..  0.063825  2.393546  0.000103
..ient/forwarder.py:39 Forwarder.run  2      0.132859  2.033064  1.016532
..dler.py:267 _SBPQueueIterator.next  9554   0.051575  1.884516  0.000197
..b/python2.7/Queue.py:150 Queue.get  9553   0.231279  1.832928  0.000192
..l_driver.py:68 PySerialDriver.read  19212  0.099288  1.233932  0.000064
..ial/serialposix.py:453 Serial.read  19212  0.424618  1.134644  0.000059
..7/threading.py:308 _Condition.wait  9215   0.225904  1.085722  0.000118
..tainer.py:36 Container.__setitem__  241..  0.791155  0.988724  0.000004
..lient/framer.py:73 Framer._readall  14332  0.130173  0.896638  0.000063
..uct/core.py:361 FormatField._parse  78513  0.340438  0.874119  0.000011
..lient/handler.py:160 Handler._call  4776   0.071612  0.868614  0.000182
../sbp/client/handler.py:81 feediter  9552   0.068792  0.772333  0.000081
...py:260 _SBPQueueIterator.__call__  9552   0.052185  0.703541  0.000074
..threading.py:372 _Condition.notify  19110  0.191746  0.659106  0.000034
..b/python2.7/Queue.py:107 Queue.put  9554   0.131708  0.651461  0.000068
..ab78-py2.7.egg/sbp/msg.py:57 crc16  9554   0.487286  0.629580  0.000066
..container.py:27 Container.__init__  60258  0.305059  0.494303  0.000008
..construct/core.py:300 _read_stream  79097  0.303458  0.455700  0.000006
..eading.py:299 _Condition._is_owned  28325  0.118670  0.363445  0.000013
..:685 MsgTrackingStateDepB.__init__  60     0.000702  0.321024  0.005350
..4 MsgTrackingStateDepB.from_binary  60     0.000816  0.320032  0.005334
..py:296 _Condition._acquire_restore  9215   0.041935  0.170513  0.000019
..igation.py:208 MsgUtcTime.__init__  300    0.004315  0.118995  0.000397
..tion.py:245 MsgUtcTime.from_binary  300    0.008761  0.113628  0.000379
..igation.py:1038 MsgVelNED.__init__  300    0.004251  0.112266  0.000374
..ion.py:800 MsgBaselineNED.__init__  299    0.004245  0.111972  0.000374
..p/client/framer.py:52 Framer._time  4776   0.038072  0.111291  0.000023
..vigation.py:564 MsgPosLLH.__init__  300    0.004043  0.111078  0.000370
..navigation.py:324 MsgDops.__init__  301    0.004541  0.110031  0.000366
..tion.py:1074 MsgVelNED.from_binary  300    0.008982  0.107217  0.000357
...py:836 MsgBaselineNED.from_binary  299    0.008586  0.106411  0.000356
..igation.py:442 MsgPosECEF.__init__  300    0.004164  0.106102  0.000354
..ation.py:600 MsgPosLLH.from_binary  300    0.008313  0.105755  0.000353
..igation.py:916 MsgVelECEF.__init__  301    0.004370  0.105360  0.000350
..igation.py:359 MsgDops.from_binary  301    0.008381  0.104163  0.000346
..on.py:680 MsgBaselineECEF.__init__  300    0.004859  0.103639  0.000345
..tainer.py:40 Container.__delitem__  22965  0.073200  0.101733  0.000004
..tion.py:477 MsgPosECEF.from_binary  300    0.007896  0.100712  0.000336
..tion.py:951 MsgVelECEF.from_binary  301    0.008078  0.099866  0.000332
..py:715 MsgBaselineECEF.from_binary  300    0.007874  0.097740  0.000326
..tem.py:162 MsgDgnssStatus.__init__  299    0.003752  0.092601  0.000310
...py:194 MsgDgnssStatus.from_binary  299    0.005671  0.087839  0.000294
..vigation.py:91 MsgGPSTime.__init__  300    0.004555  0.075237  0.000251
..ython2.7/Queue.py:200 Queue._qsize  18765  0.050332  0.070243  0.000004
..tion.py:123 MsgGPSTime.from_binary  300    0.006166  0.069452  0.000232
..ksi.py:693 MsgThreadState.__init__  285    0.003768  0.063921  0.000224
...py:724 MsgThreadState.from_binary  285    0.004621  0.058961  0.000207
..py:1230 MsgAgeCorrections.__init__  299    0.004088  0.050733  0.000170
..1260 MsgAgeCorrections.from_binary  299    0.004452  0.045680  0.000153
..2.7.egg/sbp/msg.py:85 SBP.__init__  9552   0.042978  0.042978  0.000004
..ng.py:293 _Condition._release_save  9215   0.026716  0.042364  0.000005
../python2.7/Queue.py:208 Queue._get  9553   0.032438  0.041979  0.000004
..7/threading.py:63 _Condition._note  28324  0.041059  0.041059  0.000001
../python2.7/Queue.py:204 Queue._put  9554   0.030271  0.038815  0.000004
..tainer.py:31 Container.__getattr__  25265  0.038439  0.038439  0.000002
..on.py:445 MsgAcqSvProfile.__init__  29     0.000358  0.035311  0.001218
..py:474 MsgAcqSvProfile.from_binary  29     0.000360  0.034857  0.001202
..t/core.py:287 StringAdapter._parse  584    0.005411  0.031414  0.000054
..piksi.py:800 MsgUartState.__init__  30     0.000405  0.028743  0.000958
..si.py:833 MsgUartState.from_binary  30     0.000582  0.028236  0.000941
..sbp/ndb.py:96 MsgNdbEvent.__init__  44     0.001057  0.027590  0.000627
..ndb.py:132 MsgNdbEvent.from_binary  44     0.001510  0.026287  0.000597
..ition.py:164 MsgAcqResult.__init__  67     0.000960  0.025595  0.000382
..dler.py:149 Handler._get_callbacks  4776   0.024668  0.024668  0.000005
..on.py:196 MsgAcqResult.from_binary  67     0.001314  0.024143  0.000360
piksi_tools/serial_link.py:295 main   1      0.000315  0.020534  0.020534
..:1063 MsgEphemerisGPSDepE.__init__  11     0.000165  0.015021  0.001366
..l_logger.py:17 NullLogger.__call__  9552   0.014868  0.014868  0.000002
..14 MsgEphemerisGPSDepE.from_binary  11     0.000817  0.014819  0.001347
..ools/serial_link.py:120 get_driver  1      0.000105  0.011771  0.011771
..uct/core.py:327 StaticField._parse  584    0.002130  0.010302  0.000018
..s/list_ports_linux.py:135 comports  1      0.000072  0.010045  0.010045
..ion.py:3378 MsgAlmanacGPS.__init__  12     0.000135  0.008315  0.000693
...py:3416 MsgAlmanacGPS.from_binary  12     0.000366  0.008138  0.000678
..pters.py:153 StringAdapter._decode  584    0.004414  0.007936  0.000014
..ls/list_ports_linux.py:97 describe  33     0.000170  0.005717  0.000173
..ports_linux.py:79 usb_lsusb_string  1      0.000041  0.004236  0.004236
..i_tools/serial_link.py:98 get_args  1      0.000416  0.004149  0.004149
..r/lib/python2.7/re.py:226 _compile  51     0.000249  0.003882  0.000076
piksi_tools/serial_link.py:259 run    1      0.000830  0.003762  0.003762
..ystem.py:255 MsgHeartbeat.__init__  30     0.000306  0.003588  0.000120
..thon2.7/sre_compile.py:493 compile  11     0.000098  0.003570  0.000325
..em.py:284 MsgHeartbeat.from_binary  30     0.000306  0.003144  0.000105
...py:1169 MsgDeviceMonitor.__init__  10     0.000119  0.002520  0.000252
..ls/list_ports_linux.py:52 re_group  5      0.000034  0.002503  0.000501
/usr/lib/python2.7/re.py:139 search   5      0.000020  0.002468  0.000494
..:1202 MsgDeviceMonitor.from_binary  10     0.000225  0.002372  0.000237
..n2.7/threading.py:726 Thread.start  3      0.000142  0.002327  0.000776
../serial_link.py:51 base_cl_options  1      0.000028  0.002319  0.002319
/usr/lib/python2.7/glob.py:18 glob    3      0.000026  0.002265  0.000755
/usr/lib/python2.7/glob.py:29 iglob   36     0.000055  0.002239  0.000062
/usr/lib/python2.7/glob.py:66 glob1   3      0.000028  0.002074  0.000691
..ols/list_ports_linux.py:115 hwinfo  33     0.000220  0.001991  0.000060
..b/python2.7/sre_parse.py:675 parse  11     0.000079  0.001913  0.000174
..python2.7/genericpath.py:15 exists  186    0.000376  0.001766  0.000009
..hon2.7/sre_parse.py:301 _parse_sub  17/11  0.000092  0.001710  0.000101
..iver.py:43 PySerialDriver.__init__  1      0.000114  0.001619  0.001619
../python2.7/sre_parse.py:379 _parse  18/12  0.000599  0.001607  0.000089
..tools/list_ports_linux.py:26 popen  1      0.000022  0.001548  0.001548
..2.7/subprocess.py:544 check_output  1      0.000043  0.001516  0.001516
..python2.7/sre_compile.py:478 _code  11     0.000046  0.001506  0.000137
..se.py:1545 ArgumentParser.__init__  1      0.000027  0.001464  0.001464
..lib/python2.7/fnmatch.py:45 filter  3      0.000272  0.001450  0.000483
..y:1252 ArgumentParser.add_argument  19     0.000183  0.001368  0.000072
/usr/lib/python2.7/re.py:188 compile  44     0.000042  0.001366  0.000031
..ython2.7/posixpath.py:379 realpath  4      0.000014  0.001217  0.000304
..7/subprocess.py:650 Popen.__init__  1      0.000041  0.001175  0.001175
..2.7/posixpath.py:387 _joinrealpath  12/4   0.000254  0.001119  0.000093
..ocess.py:1187 Popen._execute_child  1      0.000241  0.001052  0.001052
..rial/__init__.py:32 serial_for_url  1      0.000030  0.001003  0.001003
..ial/serialposix.py:279 Serial.open  1      0.000136  0.000917  0.000917
..7/threading.py:656 Thread.__init__  3      0.000183  0.000906  0.000302
..on2.7/threading.py:602 _Event.wait  3      0.000083  0.000895  0.000298
..forwarder.py:32 Forwarder.__init__  2      0.000330  0.000870  0.000435
..thon2.7/threading.py:241 Condition  12     0.000166  0.000850  0.000071
..six.py:311 Serial._reconfigurePort  4      0.000388  0.000845  0.000211
..thon2.7/sre_compile.py:32 _compile  41/11  0.000428  0.000843  0.000021
..ent/handler.py:90 Handler.__iter__  2      0.000044  0.000822  0.000411
..lient/handler.py:69 Handler.filter  2      0.000141  0.000778  0.000389
../python2.7/argparse.py:62 <module>  1      0.000520  0.000704  0.000704
..nt/handler.py:57 Handler.__enter__  1      0.000022  0.000700  0.000700
..reading.py:259 _Condition.__init__  12     0.000587  0.000684  0.000057
..lient/handler.py:179 Handler.start  1      0.000012  0.000678  0.000678
..7/sre_compile.py:359 _compile_info  11     0.000284  0.000614  0.000056
..nt/handler.py:195 Handler.is_alive  30     0.000206  0.000589  0.000020
..b/python2.7/gettext.py:580 gettext  3      0.000005  0.000587  0.000196
../python2.7/gettext.py:542 dgettext  3      0.000011  0.000582  0.000194
..thon2.7/gettext.py:476 translation  3      0.000009  0.000569  0.000190
...py:253 _SBPQueueIterator.__init__  2      0.000041  0.000561  0.000281
../lib/python2.7/gettext.py:421 find  3      0.000083  0.000561  0.000187
..se.py:1171 ArgumentParser.__init__  3      0.000039  0.000557  0.000186
..thon2.7/Queue.py:26 Queue.__init__  2      0.000076  0.000520  0.000260
..lient/framer.py:33 Framer.__init__  1      0.000067  0.000518  0.000518
..ent/handler.py:34 Handler.__init__  1      0.000106  0.000510  0.000510
..2.7/sre_parse.py:201 Tokenizer.get  167    0.000178  0.000499  0.000003
..2315 ArgumentParser._get_formatter  19     0.000038  0.000487  0.000026
..arse.py:154 HelpFormatter.__init__  19     0.000131  0.000450  0.000024
/usr/lib/python2.7/uuid.py:546 uuid4  1      0.000156  0.000436  0.000436
...py:1689 ArgumentParser.parse_args  1      0.000003  0.000424  0.000424
..96 ArgumentParser.parse_known_args  1      0.000034  0.000421  0.000421
../python2.7/posixpath.py:139 islink  80     0.000114  0.000418  0.000005
..lib/python2.7/posixpath.py:68 join  139    0.000269  0.000398  0.000003
...7/threading.py:995 Thread.isAlive  30     0.000297  0.000383  0.000013
../sre_parse.py:182 Tokenizer.__next  188    0.000276  0.000368  0.000002
..1 ArgumentParser._parse_known_args  1      0.000070  0.000358  0.000358
..ent/handler.py:61 Handler.__exit__  1      0.000008  0.000336  0.000336
..client/handler.py:185 Handler.stop  1      0.000032  0.000328  0.000328
..thon2.7/dist-packages/six.py:642 b  299    0.000324  0.000324  0.000001
..b/python2.7/threading.py:541 Event  3      0.000024  0.000313  0.000104
..rialutil.py:333 Serial.setBaudrate  2      0.000027  0.000308  0.000154
..on2.7/threading.py:911 Thread.join  1      0.000055  0.000293  0.000293
..7/threading.py:560 _Event.__init__  3      0.000056  0.000289  0.000096
..ubprocess.py:768 Popen.communicate  1      0.000046  0.000289  0.000289
..arse.py:130 SubPattern.__getitem__  159    0.000199  0.000284  0.000002
..al/serialposix.py:433 Serial.close  1      0.000022  0.000261  0.000261
..ubprocess.py:473 _eintr_retry_call  3      0.000022  0.000258  0.000086
..s/list_ports_linux.py:42 read_line  6      0.000036  0.000250  0.000042
..e_parse.py:140 SubPattern.getwidth  63/33  0.000202  0.000243  0.000004
../argparse.py:1799 consume_optional  2      0.000014  0.000236  0.000118
..ts_linux.py:65 usb_sysfs_hw_string  1      0.000010  0.000227  0.000227
..py:1669 ArgumentParser._add_action  19     0.000020  0.000201  0.000011
../lib/python2.7/glob.py:77 <lambda>  606    0.000185  0.000185  0.000000
.._init__.py:52 create_string_buffer  1      0.000174  0.000182  0.000182
..py:1497 _ArgumentGroup._add_action  19     0.000034  0.000181  0.000010
..009 ArgumentParser._match_argument  2      0.000011  0.000172  0.000086
..hon2.7/gettext.py:130 _expand_lang  6      0.000064  0.000166  0.000028
..hreading.py:709 Thread._set_daemon  3      0.000058  0.000164  0.000055
..rgumentParser._get_optional_kwargs  19     0.000113  0.000163  0.000009
/usr/lib/python2.7/re.py:134 match    2      0.000004  0.000151  0.000075
..ib/python2.7/posixpath.py:89 split  39     0.000098  0.000143  0.000004
..py:1309 _ArgumentGroup._add_action  19     0.000066  0.000142  0.000007
..erialutil.py:393 Serial.setTimeout  2      0.000021  0.000135  0.000067
..py:263 _SBPQueueIterator.breakiter  2      0.000025  0.000130  0.000065
..sre_parse.py:138 SubPattern.append  114    0.000090  0.000127  0.000001
..handler.py:97 Handler.add_callback  4      0.000088  0.000120  0.000030
...py:573 HelpFormatter._format_args  19     0.000060  0.000116  0.000006
..re_compile.py:178 _compile_charset  13     0.000058  0.000106  0.000008
..ython2.7/posixpath.py:119 basename  69     0.000066  0.000099  0.000001
..re_parse.py:126 SubPattern.__len__  96     0.000073  0.000099  0.000001
..ython2.7/uuid.py:101 UUID.__init__  1      0.000075  0.000099  0.000099
..n2.7/threading.py:569 _Event.isSet  37     0.000098  0.000098  0.000003
..thon2.7/sre_compile.py:354 _simple  22     0.000053  0.000096  0.000004
..n2.7/argparse.py:147 HelpFormatter  1      0.000088  0.000089  0.000089
..r/lib/python2.7/stat.py:55 S_ISLNK  80     0.000059  0.000087  0.000001
../python2.7/locale.py:363 normalize  6      0.000031  0.000086  0.000014
..python2.7/posixpath.py:365 abspath  4      0.000010  0.000085  0.000021
..hreading.py:58 _Condition.__init__  6      0.000083  0.000083  0.000014
.. ArgumentParser.add_argument_group  2      0.000008  0.000080  0.000040
../threading.py:866 Forwarder.__stop  2      0.000033  0.000072  0.000036
..se.py:1475 _ArgumentGroup.__init__  2      0.000012  0.000072  0.000036
..ython2.7/posixpath.py:336 normpath  4      0.000041  0.000070  0.000018
..reading.py:1008 _MainThread.daemon  3      0.000065  0.000065  0.000022
../python2.7/fnmatch.py:81 translate  3      0.000023  0.000064  0.000021
..4 ArgumentParser._pop_action_class  19     0.000029  0.000060  0.000003
..serialutil.py:441 Serial.setRtsCts  2      0.000006  0.000057  0.000029
..n2.7/subprocess.py:1371 Popen.wait  1      0.000028  0.000056  0.000056
..python2.7/argparse.py:95 _callable  44     0.000035  0.000055  0.000001
..:1227 ArgumentParser._registry_get  44     0.000041  0.000055  0.000001
..process.py:1161 Popen.pipe_cloexec  2      0.000009  0.000054  0.000027
..re_parse.py:178 Tokenizer.__init__  11     0.000020  0.000054  0.000005
..process.py:1099 Popen._get_handles  1      0.000009  0.000053  0.000053
../serialutil.py:234 Serial.__init__  1      0.000039  0.000052  0.000052
..7/sre_parse.py:195 Tokenizer.match  73     0.000038  0.000051  0.000001
..on2.7/argparse.py:1778 take_action  2      0.000015  0.000050  0.000025
...7/threading.py:1152 currentThread  4      0.000042  0.000050  0.000013
..eading.py:399 _Condition.notifyAll  3      0.000014  0.000049  0.000016
..serDict.py:18 _Environ.__getitem__  22     0.000027  0.000047  0.000002
..b/python2.7/gettext.py:11 <module>  1      0.000027  0.000042  0.000042
..python2.7/sre_parse.py:257 _escape  20     0.000028  0.000042  0.000002
..se.py:1223 ArgumentParser.register  34     0.000031  0.000040  0.000001
/usr/lib/python2.7/re.py:204 escape   16     0.000035  0.000040  0.000003
...7/locale.py:347 _replace_encoding  3      0.000015  0.000038  0.000013
...7/threading.py:58 Thread.__init__  12     0.000038  0.000038  0.000003
..e_compile.py:207 _optimize_charset  13     0.000037  0.000037  0.000003
..e.py:865 _StoreTrueAction.__init__  8      0.000014  0.000034  0.000004
...7/threading.py:1024 Thread.daemon  3      0.000028  0.000034  0.000011
..b/python2.7/argparse.py:566 format  19     0.000020  0.000034  0.000002
..hon2.7/sre_compile.py:472 isstring  22     0.000026  0.000033  0.000001
..2.7/threading.py:866 Thread.__stop  1      0.000011  0.000033  0.000033
...py:2241 ArgumentParser._get_value  6      0.000014  0.000030  0.000005
..hon2.7/UserDict.py:58 _Environ.get  12     0.000020  0.000030  0.000003
..py:2189 ArgumentParser._get_values  2      0.000014  0.000030  0.000015
..python2.7/Queue.py:197 Queue._init  2      0.000030  0.000030  0.000015
..rialposix.py:526 Serial.flushInput  1      0.000014  0.000030  0.000030
..ss.py:1148 Popen._set_cloexec_flag  4      0.000013  0.000030  0.000007
/usr/lib/python2.7/stat.py:24 S_IFMT  80     0.000029  0.000029  0.000000
..parse.py:807 _StoreAction.__init__  10     0.000017  0.000028  0.000003
..erial_link.py:344 signal_handler_c  1      0.000028  0.000028  0.000028
..re_parse.py:90 SubPattern.__init__  41     0.000026  0.000026  0.000001
..ib/python2.7/posixpath.py:59 isabs  16     0.000015  0.000024  0.000001
..on2.7/threading.py:63 Thread._note  9      0.000024  0.000024  0.000003
..gparse.py:765 _HelpAction.__init__  19     0.000023  0.000023  0.000001
..lib/python2.7/glob.py:94 has_magic  9      0.000011  0.000023  0.000003
..ubprocess.py:1208 _close_in_parent  1      0.000015  0.000021  0.000021
..e.py:842 _StoreTrueAction.__init__  8      0.000011  0.000021  0.000003
../__init__.py:49 normalize_encoding  3      0.000011  0.000018  0.000006
..437 _ArgumentGroup._check_conflict  19     0.000016  0.000016  0.000001
../argparse.py:199 _Section.__init__  19     0.000016  0.000016  0.000001
..python2.7/uuid.py:197 UUID.__str__  1      0.000015  0.000015  0.000015
..ools/serial_link.py:42 logfilename  1      0.000002  0.000014  0.000014
..7 HelpFormatter._metavar_formatter  19     0.000014  0.000014  0.000001
..python2.7/posixpath.py:127 dirname  4      0.000009  0.000013  0.000003
../python2.7/Queue.py:93 Queue.empty  1      0.000008  0.000013  0.000013
..arse.py:134 SubPattern.__setitem__  22     0.000012  0.000012  0.000001
..gparse.py:983 _HelpAction.__init__  1      0.000008  0.000011  0.000011
..n2.7/argparse.py:685 ArgumentError  1      0.000011  0.000011  0.000011
..sre_parse.py:83 Pattern.closegroup  6      0.000008  0.000011  0.000002
../sre_parse.py:72 Pattern.opengroup  6      0.000008  0.000011  0.000002
..gparse.py:1876 consume_positionals  1      0.000006  0.000010  0.000010
..argparse.py:1025 _SubParsersAction  1      0.000010  0.000010  0.000010
..7/sre_parse.py:67 Pattern.__init__  11     0.000010  0.000010  0.000001
.._.py:23 VendorImporter.find_module  2      0.000008  0.000010  0.000005
..on2.7/subprocess.py:802 Popen.poll  1      0.000008  0.000009  0.000009
..erDict.py:70 _Environ.__contains__  12     0.000008  0.000008  0.000001
.. ArgumentParser._get_nargs_pattern  2      0.000005  0.000008  0.000004
..s.py:1330 Popen._handle_exitstatus  1      0.000005  0.000008  0.000008
..y:1428 ArgumentParser._get_handler  3      0.000005  0.000008  0.000003
...7/argparse.py:1527 ArgumentParser  1      0.000006  0.000006  0.000006
..iver.py:23 PySerialDriver.__init__  1      0.000006  0.000006  0.000006
..l/serialutil.py:307 Serial.setPort  2      0.000005  0.000005  0.000003
..lient/framer.py:41 Framer.__iter__  1      0.000005  0.000005  0.000005
...7/subprocess.py:754 Popen.__del__  1      0.000004  0.000005  0.000005
..ools/serial_link.py:151 get_logger  1      0.000005  0.000005  0.000005
...7/gettext.py:173 NullTranslations  1      0.000004  0.000004  0.000004
..l_logger.py:35 NullLogger.__exit__  2      0.000004  0.000004  0.000002
..argparse.py:1169 _ActionsContainer  1      0.000003  0.000003  0.000003
..044 ArgumentParser._parse_optional  4      0.000003  0.000003  0.000001
..parse.py:836 _StoreAction.__call__  2      0.000002  0.000003  0.000002
.._logger.py:20 NullLogger.__enter__  2      0.000003  0.000003  0.000002
..ient/framer.py:45 Framer.breakiter  1      0.000003  0.000003  0.000003
..entParser._match_arguments_partial  1      0.000002  0.000003  0.000003
..arse.py:128 SubPattern.__delitem__  4      0.000003  0.000003  0.000001
..thon2.7/subprocess.py:458 _cleanup  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..mentParser._get_positional_actions  1      0.000002  0.000002  0.000002
..rialutil.py:354 Serial.setByteSize  1      0.000002  0.000002  0.000002
..on2.7/argparse.py:805 _StoreAction  1      0.000002  0.000002  0.000002
..rial_link.py:171 get_append_logger  1      0.000002  0.000002  0.000002
..ocess.py:1344 Popen._internal_poll  2      0.000002  0.000002  0.000001
..ython2.7/argparse.py:1591 identity  6      0.000002  0.000002  0.000000
..serialutil.py:367 Serial.setParity  1      0.000002  0.000002  0.000002
..rialutil.py:380 Serial.setStopbits  1      0.000002  0.000002  0.000002
..4 _SixMetaPathImporter.find_module  2      0.000002  0.000002  0.000001
..y:2266 ArgumentParser._check_value  2      0.000001  0.000001  0.000001
..2.7/gettext.py:257 GNUTranslations  1      0.000001  0.000001  0.000001
..b/python2.7/argparse.py:714 Action  1      0.000001  0.000001  0.000001
..python2.7/posixpath.py:51 normcase  3      0.000001  0.000001  0.000000
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
../argparse.py:705 ArgumentTypeError  1      0.000001  0.000001  0.000001
..4 _SixMetaPathImporter.find_module  2      0.000001  0.000001  0.000001
..thon2.7/argparse.py:1146 Namespace  1      0.000001  0.000001  0.000001
..7/argparse.py:112 _AttributeHolder  1      0.000001  0.000001  0.000001
..rgparse.py:1153 Namespace.__init__  1      0.000001  0.000001  0.000001
..util.py:411 Serial.setWriteTimeout  1      0.000001  0.000001  0.000001
..ython2.7/argparse.py:1102 FileType  1      0.000001  0.000001  0.000001
..argparse.py:934 _AppendConstAction  1      0.000001  0.000001  0.000001
..se.py:1507 _MutuallyExclusiveGroup  1      0.000001  0.000001  0.000001
...7/argparse.py:1473 _ArgumentGroup  1      0.000001  0.000001  0.000001
..py:629 RawDescriptionHelpFormatter  1      0.000001  0.000001  0.000001
../argparse.py:840 _StoreConstAction  1      0.000001  0.000001  0.000001
..python2.7/argparse.py:197 _Section  1      0.000001  0.000001  0.000001
..n2.7/argparse.py:897 _AppendAction  1      0.000001  0.000001  0.000001
..on2.7/argparse.py:960 _CountAction  1      0.000001  0.000001  0.000001
..hon2.7/argparse.py:981 _HelpAction  1      0.000001  0.000001  0.000001
../argparse.py:880 _StoreFalseAction  1      0.000001  0.000001  0.000001
..7/argparse.py:863 _StoreTrueAction  1      0.000001  0.000001  0.000001
..serialutil.py:452 Serial.setDsrDtr  1      0.000001  0.000001  0.000001
...7/argparse.py:1000 _VersionAction  1      0.000001  0.000001  0.000001
..:651 ArgumentDefaultsHelpFormatter  1      0.000001  0.000001  0.000001
..gparse.py:640 RawTextHelpFormatter  1      0.000001  0.000001  0.000001
..erialutil.py:430 Serial.setXonXoff  1      0.000001  0.000001  0.000001
..parse.py:1027 _ChoicesPseudoAction  1      0.000001  0.000001  0.000001
...py:468 Serial.setInterCharTimeout  1      0.000001  0.000001  0.000001

name           id     tid              ttot      scnt        
Forwarder      3      140154975020800  0.421855  7402      
Forwarder      2      140154983413504  0.421485  6978      
Thread         1      140155059455744  0.420860  11168     
_MainThread    0      140155139008320  0.107140  35","@silverjam - less than pretty rebase here #662, hopefully it enables you to run the benchmarking.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,474,2017-05-31T09:16:41Z,2017-06-05T07:12:56Z,2017-06-05T07:13:13Z,MERGED,True,321,13,7,https://github.com/dt-exafore,Add FCN and d_tau to MSG_EPHEMERIS_GLO,2,[],https://github.com/swift-nav/libsbp/pull/474,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/474,Based on https://github.com/swift-nav/exafore_planning/issues/750,Based on https://github.com/swift-nav/exafore_planning/issues/750,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,474,2017-05-31T09:16:41Z,2017-06-05T07:12:56Z,2017-06-05T07:13:13Z,MERGED,True,321,13,7,https://github.com/dt-exafore,Add FCN and d_tau to MSG_EPHEMERIS_GLO,2,[],https://github.com/swift-nav/libsbp/pull/474,https://github.com/dt-exafore,2,https://github.com/swift-nav/libsbp/pull/474#issuecomment-305410785,Based on https://github.com/swift-nav/exafore_planning/issues/750,"@mfine I generated it again and it removes ""-dirty"", however the version is still 2.2.3, should it be 2.2.4?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,474,2017-05-31T09:16:41Z,2017-06-05T07:12:56Z,2017-06-05T07:13:13Z,MERGED,True,321,13,7,https://github.com/dt-exafore,Add FCN and d_tau to MSG_EPHEMERIS_GLO,2,[],https://github.com/swift-nav/libsbp/pull/474,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/474#issuecomment-305538874,Based on https://github.com/swift-nav/exafore_planning/issues/750,"@dt-exafore no, that usually happens during the releasing of the library.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,474,2017-05-31T09:16:41Z,2017-06-05T07:12:56Z,2017-06-05T07:13:13Z,MERGED,True,321,13,7,https://github.com/dt-exafore,Add FCN and d_tau to MSG_EPHEMERIS_GLO,2,[],https://github.com/swift-nav/libsbp/pull/474,https://github.com/nsirola,4,https://github.com/swift-nav/libsbp/pull/474#issuecomment-305594606,Based on https://github.com/swift-nav/exafore_planning/issues/750,"Before merging, let's check if there were any more GLO ephemeris fields that we could add in the same go.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,474,2017-05-31T09:16:41Z,2017-06-05T07:12:56Z,2017-06-05T07:13:13Z,MERGED,True,321,13,7,https://github.com/dt-exafore,Add FCN and d_tau to MSG_EPHEMERIS_GLO,2,[],https://github.com/swift-nav/libsbp/pull/474,https://github.com/nsirola,5,https://github.com/swift-nav/libsbp/pull/474#issuecomment-305805532,Based on https://github.com/swift-nav/exafore_planning/issues/750,"GLO ephemeris / non-immediate data elements that are not yet being reported in the SBP message (ICD section 4.4):
P - technological parameter (not relevant?)
P1 - flag of the immediate data updating (not relevant, already included in fit interval?)
P2 - flag of oddness or evenness of the value t_b (not relevant??)
P3 - flag indicating a number of satellites for which almanac is
transmitted within given frame (not relevant?)
P4 - flag to show that ephemeris parameters are present (not relevant?)
Additionally there's the GLONASS almanac contains the Keplerian orbit elements etc. that is not decoded yet, save for:
tau_c - GLONASS time scale correction to UTC(SU) time
tau_gps - correction to GPS time relative to GLONASS time",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,474,2017-05-31T09:16:41Z,2017-06-05T07:12:56Z,2017-06-05T07:13:13Z,MERGED,True,321,13,7,https://github.com/dt-exafore,Add FCN and d_tau to MSG_EPHEMERIS_GLO,2,[],https://github.com/swift-nav/libsbp/pull/474,https://github.com/anth-cole,6,https://github.com/swift-nav/libsbp/pull/474#issuecomment-305832299,Based on https://github.com/swift-nav/exafore_planning/issues/750,lgtm - I don't think the others are needed in the ephemeris,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,475,2017-06-01T22:15:27Z,2020-02-03T18:40:30Z,2020-02-03T18:40:30Z,CLOSED,False,3,1,1,https://github.com/gsmcmullin,python: handle bad exception from pyserial on EINTR.,1,[],https://github.com/swift-nav/libsbp/pull/475,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/475,"The port is still perfectly usable after an interrupted system call.  This should be handled internally in pyserial, but here's a workaround.","The port is still perfectly usable after an interrupted system call.  This should be handled internally in pyserial, but here's a workaround.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,475,2017-06-01T22:15:27Z,2020-02-03T18:40:30Z,2020-02-03T18:40:30Z,CLOSED,False,3,1,1,https://github.com/gsmcmullin,python: handle bad exception from pyserial on EINTR.,1,[],https://github.com/swift-nav/libsbp/pull/475,https://github.com/jck,2,https://github.com/swift-nav/libsbp/pull/475#issuecomment-305935785,"The port is still perfectly usable after an interrupted system call.  This should be handled internally in pyserial, but here's a workaround.","It looks like this is fixed in pyserial
https://github.com/pyserial/pyserial/blob/master/serial/serialposix.py#L514",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,476,2017-06-02T22:11:30Z,2017-06-05T18:42:56Z,2017-06-05T18:42:56Z,MERGED,True,15384,3,6,https://github.com/JoshuaGross,"Generate bundled, browser-friendly version of libsbp ",3,[],https://github.com/swift-nav/libsbp/pull/476,https://github.com/JoshuaGross,1,https://github.com/swift-nav/libsbp/pull/476,"Generate bundled, browser-friendly version of libsbp in make javascript, and make sure it gets published to npm.
cc @mfine @mookerji","Generate bundled, browser-friendly version of libsbp in make javascript, and make sure it gets published to npm.
cc @mfine @mookerji",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,477,2017-06-07T23:28:52Z,2017-06-08T00:12:49Z,2017-06-08T00:12:49Z,CLOSED,False,7,133,4,https://github.com/jck,use setuptools_scm instead of version.py,2,[],https://github.com/swift-nav/libsbp/pull/477,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/477,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,477,2017-06-07T23:28:52Z,2017-06-08T00:12:49Z,2017-06-08T00:12:49Z,CLOSED,False,7,133,4,https://github.com/jck,use setuptools_scm instead of version.py,2,[],https://github.com/swift-nav/libsbp/pull/477,https://github.com/jck,2,https://github.com/swift-nav/libsbp/pull/477#issuecomment-306961788,,I'm going to redo this carefully.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,478,2017-06-08T23:52:09Z,2017-06-10T00:04:59Z,2019-05-20T16:53:47Z,MERGED,True,9,9,3,https://github.com/denniszollo,Python deps,4,[],https://github.com/swift-nav/libsbp/pull/478,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/478,Harmonize python dependencies with piksi_tools,Harmonize python dependencies with piksi_tools,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/479,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/479#issuecomment-314296582,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos",I will merge this shortly unless I hear objections.  Reviewed by @fnoble a few weeks back and he thought it looked good.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/479#issuecomment-314577109,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","This is kind of nasty. Is there a conventional/idiomatic way to handle this? My preference would be to avoid the top defines and just do all the macro preprocessing directly - it's generated code, and I don't think the extra macro abstractions bring much.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/479#issuecomment-314611658,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","You are okay with the macros like ""TOOLCHAIN_ATTR_PACKED"", but would rather have the toolchain detected and this macro defined in each file instead of the extra layer of indirection in common.h?
I did quite a lot of research and didn't find an agreed upon strategy for this, and I think my version has been used before.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/jck,5,https://github.com/swift-nav/libsbp/pull/479#issuecomment-314612589,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos",I prefer defines vs modifying the generator,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/mfine,6,https://github.com/swift-nav/libsbp/pull/479#issuecomment-314679895,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","You are okay with the macros like ""TOOLCHAIN_ATTR_PACKED"", but would rather have the toolchain detected and this macro defined in each file instead of the extra layer of indirection in common.h?

Not ok with that macro either. I would have removed the toolchain detection in common.h and just done the check on each usage. Around each struct definition, I would have done:
#ifndef _MSC_VER
typedef struct __attribute__((packed)) {
#else
typedef struct {
#endif
At the beginning of the message file, I would have done:
#ifdef _MSC_VER
pack(1)
#endif
At the end of the message file, I would have done:
#ifdef  _MSC_VER
#pragma pack()
#endif
Already, the common #define of TOOLCHAIN_ATTR_PACKED in all of the messages file is way redundant, and you're locating it there just to line it up with the weird MSC behavior of beginning and end of file.
Also note above how there's no brittle error on not detecting GCC or MSC - there's no other compiler type detections in the library and there's other non windows compilers besides GCC that also support packed attributes (we have downstreams that use other compilers than GCC and would seemingly get broken by this change). By testing just MSC, you make a minimal change that impacts only the functionality you're trying to bring in, and not everyone else.
I don't think building abstractions in macros is a good idea - I think it makes the code a lot harder to read than being direct with what the macros are doing. And especially because its generated code, it's easy to generate all of the boilerplate and be direct about it.

I prefer defines vs modifying the generator

In the code you'll see the defines are defined in the generator for each messages file. There shouldn't ever be any issue with updating the generator.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/mfine,7,https://github.com/swift-nav/libsbp/pull/479#issuecomment-314680176,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","Actually, I would have not made the first check negative logic - positive instead:
#ifdef _MSC_VER
typedef struct {
#else
typedef struct __attribute__((packed)) {
#endif",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/mfine,8,https://github.com/swift-nav/libsbp/pull/479#issuecomment-314682665,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos",See: master...mfine:mfine/msc,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/ljbade,9,https://github.com/swift-nav/libsbp/pull/479#issuecomment-314889047,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","@mark your approach makes sense, and detecting just the Microsoft compiler for these sort of quirks is what I have seen before in other larger codebases
We should probably put in the readme a list of the compilers/versions that we have tested/support",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/gsmcmullin,10,https://github.com/swift-nav/libsbp/pull/479#issuecomment-314898909,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","GCC supports #pragma pack but it makes me want to puke: https://gcc.gnu.org/onlinedocs/gcc-7.1.0/gcc/Structure-Layout-Pragmas.html#Structure-Layout-Pragmas
It's still probably better than doing both and using ugly macros.
You can also make the attribute go away by doing #define __attribute__(x) or -D__attribute__\(x\)= in the Makefile.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/denniszollo,11,https://github.com/swift-nav/libsbp/pull/479#issuecomment-315841052,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","I do not understand why we want to treat the microsoft compiler as a ""one-off"".  Many other C compilers are lacking in the attribute type of interface (the intel c compiler for one).
I think that having the toolchain macro makes it extendible to other systems that we don't know about.   This is the embedded world; there are lots of strange toolchains.   If we put the MSV_V inline like this, we are making it very hard for someone to use these headers on a complier we aren't planning for.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/mfine,12,https://github.com/swift-nav/libsbp/pull/479#issuecomment-315843786,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","Checks can be for different compilers can be added as needed - don't see what the issue is with extending to support other compilers as needed. You could swap the logic, but then you'll need to cover all the known supported platforms - GCC, CLANG, etc. - which seems more risky.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/denniszollo,13,https://github.com/swift-nav/libsbp/pull/479#issuecomment-315846291,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","The use case I'm worried about is for someone who isn't at Swift and can't generate the code but wants to use the headers.
If they don't have _attribute packed in their toolchain but they aren't Windows, in Mark's approach they will have to define _MSC_VER, which I don't feel that comfortable with.  It would be necessary to hand modify all the headers in that case most likely.
Does anyone think that use case is probable or something to consider?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/mfine,14,https://github.com/swift-nav/libsbp/pull/479#issuecomment-315849057,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos",I'm not saying to define _MSC_VER - we can add more toolchain checks on behalf of customers as they need them.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/michaelaeriksen,15,https://github.com/swift-nav/libsbp/pull/479#issuecomment-381815532,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos",Any plans to merge this?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/denniszollo,16,https://github.com/swift-nav/libsbp/pull/479#issuecomment-388151042,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","After a year of this languishing, I am reviving this PR.  I think I have a good compromise between my original implementation and Mark's comments that the abstraction was indirect and overblown.
There is no toolchain or extra abstraction, and the logic means that it tends towards the GCC version.  It does not rely on any unclear macros in my opinion
However, if a user has the code as an artifact and no regeneration capabilities, they could specify the behavior they want in the header file by defining TOOLCHAIN_PRAGMA_PACK.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/mfine,17,https://github.com/swift-nav/libsbp/pull/479#issuecomment-388517230,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos",This approach looks ok to me - /cc @silverjam for more feedback around this approach.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/silverjam,18,https://github.com/swift-nav/libsbp/pull/479#issuecomment-388527747,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","My 2c: I would make common macros in common.h that handle the pragma pack and the __attribute__ gymnastics, then detect and configure the macros in common.h based on specific compilers versions... With the final fall through  (when we don't know what compiler it is) being ""you configure things"".
But... I've seen this done both ways, I think the more common approach is to make the code generic by inserting macro wrappers.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/silverjam,19,https://github.com/swift-nav/libsbp/pull/479#issuecomment-388587516,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos","Addendum: the current PR looks OK, but would prefer a common compiler config file for allowing us to add checks for different compilers (as well as allowing users to configure things themselves).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,479,2017-06-09T17:17:20Z,2019-03-06T01:33:23Z,2019-03-06T01:33:24Z,CLOSED,False,838,0,23,https://github.com/denniszollo,Windows c,3,[],https://github.com/swift-nav/libsbp/pull/479,https://github.com/silverjam,20,https://github.com/swift-nav/libsbp/pull/479#issuecomment-469929875,"Allow libsbp c binding to be compiled by msvc compiler:

Uses attribute packed for gcc
Uses #pragma pack for msvc
Attempts to autodetect the compiler in common.h
if not autodetected, you will need to use preprocessor to define toolchain macro

Next step, an example that can compile cross platform, add extern C into structure definitinos",Support for this was merged in #568,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,480,2017-06-09T19:22:59Z,2017-06-19T17:37:21Z,2017-06-19T17:37:24Z,MERGED,True,15,11,6,https://github.com/jck,generator cleanup,3,[],https://github.com/swift-nav/libsbp/pull/480,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/480,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,480,2017-06-09T19:22:59Z,2017-06-19T17:37:21Z,2017-06-19T17:37:24Z,MERGED,True,15,11,6,https://github.com/jck,generator cleanup,3,[],https://github.com/swift-nav/libsbp/pull/480,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/480#issuecomment-307516006,,looks good to me.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,481,2017-06-09T20:46:52Z,2017-06-10T00:05:11Z,2019-05-20T16:53:46Z,MERGED,True,4,8,2,https://github.com/denniszollo,remove not implemented notes,2,[],https://github.com/swift-nav/libsbp/pull/481,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/481,These are implemented,These are implemented,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,482,2017-06-10T00:29:38Z,2017-06-10T00:39:19Z,2017-06-10T00:39:19Z,MERGED,True,64,35,11,https://github.com/denniszollo,V2.2.4 branch,3,[],https://github.com/swift-nav/libsbp/pull/482,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/482,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,483,2017-06-10T01:46:22Z,2017-06-13T02:55:58Z,2017-06-13T02:56:04Z,MERGED,True,0,0,1,https://github.com/jck,renamed MANIFEST.IN to make it work on linux,1,[],https://github.com/swift-nav/libsbp/pull/483,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/483,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,484,2017-06-16T05:58:08Z,2017-06-16T06:52:58Z,2017-06-16T07:44:16Z,CLOSED,False,101,1,2,https://github.com/ljbade,Add sbpmux,2,[],https://github.com/swift-nav/libsbp/pull/484,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/484,"Still needs some tidying

parameterize the file names and queue depth
set base sender ID to zero

/cc @mfine","Still needs some tidying

parameterize the file names and queue depth
set base sender ID to zero

/cc @mfine",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,484,2017-06-16T05:58:08Z,2017-06-16T06:52:58Z,2017-06-16T07:44:16Z,CLOSED,False,101,1,2,https://github.com/ljbade,Add sbpmux,2,[],https://github.com/swift-nav/libsbp/pull/484,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/484#issuecomment-308945843,"Still needs some tidying

parameterize the file names and queue depth
set base sender ID to zero

/cc @mfine",This doesn't belong here.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,484,2017-06-16T05:58:08Z,2017-06-16T06:52:58Z,2017-06-16T07:44:16Z,CLOSED,False,101,1,2,https://github.com/ljbade,Add sbpmux,2,[],https://github.com/swift-nav/libsbp/pull/484,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/484#issuecomment-308948381,"Still needs some tidying

parameterize the file names and queue depth
set base sender ID to zero

/cc @mfine",I'll make a new repo then for this tool,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,485,2017-06-19T17:44:04Z,2017-06-19T22:22:33Z,2017-06-19T22:22:33Z,MERGED,True,2,7,1,https://github.com/jck,use setuptools_scm for python versioning,1,[],https://github.com/swift-nav/libsbp/pull/485,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/485,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,486,2017-06-19T18:04:47Z,2017-06-19T20:34:45Z,2017-06-19T20:38:28Z,MERGED,True,1802,910,13,https://github.com/mbavaro,added channel ID tag to spectrum analyzer,1,[],https://github.com/swift-nav/libsbp/pull/486,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/486,"FW has never produced this message, and before it does it might be beneficial to have total overlap with the message defined here https://paper.dropbox.com/doc/Spectrum-Analyzer-Project-OhZuyQq5UvBsZOsw2Osx5 to ease integration in console","FW has never produced this message, and before it does it might be beneficial to have total overlap with the message defined here https://paper.dropbox.com/doc/Spectrum-Analyzer-Project-OhZuyQq5UvBsZOsw2Osx5 to ease integration in console",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,486,2017-06-19T18:04:47Z,2017-06-19T20:34:45Z,2017-06-19T20:38:28Z,MERGED,True,1802,910,13,https://github.com/mbavaro,added channel ID tag to spectrum analyzer,1,[],https://github.com/swift-nav/libsbp/pull/486,https://github.com/mbavaro,2,https://github.com/swift-nav/libsbp/pull/486#issuecomment-309519968,"FW has never produced this message, and before it does it might be beneficial to have total overlap with the message defined here https://paper.dropbox.com/doc/Spectrum-Analyzer-Project-OhZuyQq5UvBsZOsw2Osx5 to ease integration in console","oh, and it's apparently lifted some other uncommitted changes on Glonass ephemeris handling..",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,486,2017-06-19T18:04:47Z,2017-06-19T20:34:45Z,2017-06-19T20:38:28Z,MERGED,True,1802,910,13,https://github.com/mbavaro,added channel ID tag to spectrum analyzer,1,[],https://github.com/swift-nav/libsbp/pull/486,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/486#issuecomment-309561798,"FW has never produced this message, and before it does it might be beneficial to have total overlap with the message defined here https://paper.dropbox.com/doc/Spectrum-Analyzer-Project-OhZuyQq5UvBsZOsw2Osx5 to ease integration in console","As long as this has never been emitted yet, should be fine to modify in place. Otherwise, would need to create a new message type, otherwise parsers break.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,486,2017-06-19T18:04:47Z,2017-06-19T20:34:45Z,2017-06-19T20:38:28Z,MERGED,True,1802,910,13,https://github.com/mbavaro,added channel ID tag to spectrum analyzer,1,[],https://github.com/swift-nav/libsbp/pull/486,https://github.com/mbavaro,4,https://github.com/swift-nav/libsbp/pull/486#issuecomment-309562734,"FW has never produced this message, and before it does it might be beneficial to have total overlap with the message defined here https://paper.dropbox.com/doc/Spectrum-Analyzer-Project-OhZuyQq5UvBsZOsw2Osx5 to ease integration in console",I can confirm this has never been produced (in fact I am putting a PR up now in PFWP)....,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,486,2017-06-19T18:04:47Z,2017-06-19T20:34:45Z,2017-06-19T20:38:28Z,MERGED,True,1802,910,13,https://github.com/mbavaro,added channel ID tag to spectrum analyzer,1,[],https://github.com/swift-nav/libsbp/pull/486,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/486#issuecomment-309562948,"FW has never produced this message, and before it does it might be beneficial to have total overlap with the message defined here https://paper.dropbox.com/doc/Spectrum-Analyzer-Project-OhZuyQq5UvBsZOsw2Osx5 to ease integration in console",Sounds good.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,486,2017-06-19T18:04:47Z,2017-06-19T20:34:45Z,2017-06-19T20:38:28Z,MERGED,True,1802,910,13,https://github.com/mbavaro,added channel ID tag to spectrum analyzer,1,[],https://github.com/swift-nav/libsbp/pull/486,https://github.com/mbavaro,6,https://github.com/swift-nav/libsbp/pull/486#issuecomment-309566689,"FW has never produced this message, and before it does it might be beneficial to have total overlap with the message defined here https://paper.dropbox.com/doc/Spectrum-Analyzer-Project-OhZuyQq5UvBsZOsw2Osx5 to ease integration in console","thanks Mark, PFWP PR up now...
https://github.com/swift-nav/piksi_firmware_private/pull/859",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,487,2017-06-20T09:57:35Z,2017-06-21T05:42:24Z,2017-06-23T03:18:44Z,MERGED,True,396,119,8,https://github.com/dt-exafore,Add IOD to SBP_MSG_EPHEMERIS_GLO,1,[],https://github.com/swift-nav/libsbp/pull/487,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/487,Based on @anth-cole request here https://github.com/swift-nav/piksi_firmware_private/pull/840,Based on @anth-cole request here https://github.com/swift-nav/piksi_firmware_private/pull/840,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,487,2017-06-20T09:57:35Z,2017-06-21T05:42:24Z,2017-06-23T03:18:44Z,MERGED,True,396,119,8,https://github.com/dt-exafore,Add IOD to SBP_MSG_EPHEMERIS_GLO,1,[],https://github.com/swift-nav/libsbp/pull/487,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/487#issuecomment-310560408,Based on @anth-cole request here https://github.com/swift-nav/piksi_firmware_private/pull/840,@dt-exafore added a small comment on some more detail we should add to the field description,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,488,2017-06-20T23:23:05Z,2017-06-21T23:00:37Z,2017-06-21T23:00:37Z,MERGED,True,269,1,10,https://github.com/lbara,Command output,2,[],https://github.com/swift-nav/libsbp/pull/488,https://github.com/lbara,1,https://github.com/swift-nav/libsbp/pull/488,Added COMMAND_OUTPUT to libsbp,Added COMMAND_OUTPUT to libsbp,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,489,2017-06-21T21:31:12Z,2017-06-27T00:12:15Z,2017-06-27T00:12:15Z,MERGED,True,995,866,30,https://github.com/jck,generator and python library improvements,15,[],https://github.com/swift-nav/libsbp/pull/489,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/489,/cc @mookerji @denniszollo,/cc @mookerji @denniszollo,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,489,2017-06-21T21:31:12Z,2017-06-27T00:12:15Z,2017-06-27T00:12:15Z,MERGED,True,995,866,30,https://github.com/jck,generator and python library improvements,15,[],https://github.com/swift-nav/libsbp/pull/489,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/489#issuecomment-310214596,/cc @mookerji @denniszollo,"@jck see comments about comments.
Have you tried using this with gnss-analysis and the console yet?
(This is great.)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,489,2017-06-21T21:31:12Z,2017-06-27T00:12:15Z,2017-06-27T00:12:15Z,MERGED,True,995,866,30,https://github.com/jck,generator and python library improvements,15,[],https://github.com/swift-nav/libsbp/pull/489,https://github.com/jck,3,https://github.com/swift-nav/libsbp/pull/489#issuecomment-310214774,/cc @mookerji @denniszollo,"Yes, I've tried with both! and it does not seem to break.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,489,2017-06-21T21:31:12Z,2017-06-27T00:12:15Z,2017-06-27T00:12:15Z,MERGED,True,995,866,30,https://github.com/jck,generator and python library improvements,15,[],https://github.com/swift-nav/libsbp/pull/489,https://github.com/mookerji,4,https://github.com/swift-nav/libsbp/pull/489#issuecomment-310215761,/cc @mookerji @denniszollo,@jck sweet.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,489,2017-06-21T21:31:12Z,2017-06-27T00:12:15Z,2017-06-27T00:12:15Z,MERGED,True,995,866,30,https://github.com/jck,generator and python library improvements,15,[],https://github.com/swift-nav/libsbp/pull/489,https://github.com/jck,5,https://github.com/swift-nav/libsbp/pull/489#issuecomment-310217310,/cc @mookerji @denniszollo,"Forgot to mention, console needs changes since it has a bunch of star imports which clash with new construct variables.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,489,2017-06-21T21:31:12Z,2017-06-27T00:12:15Z,2017-06-27T00:12:15Z,MERGED,True,995,866,30,https://github.com/jck,generator and python library improvements,15,[],https://github.com/swift-nav/libsbp/pull/489,https://github.com/mookerji,6,https://github.com/swift-nav/libsbp/pull/489#issuecomment-311214946,/cc @mookerji @denniszollo,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,489,2017-06-21T21:31:12Z,2017-06-27T00:12:15Z,2017-06-27T00:12:15Z,MERGED,True,995,866,30,https://github.com/jck,generator and python library improvements,15,[],https://github.com/swift-nav/libsbp/pull/489,https://github.com/mookerji,7,https://github.com/swift-nav/libsbp/pull/489#issuecomment-311214996,/cc @mookerji @denniszollo,Let's plan on cutting a separate release for gnss-analysis later this week.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,490,2017-06-21T22:54:11Z,2017-06-21T23:06:40Z,2017-06-21T23:06:42Z,MERGED,True,1,112,3,https://github.com/mfine,Pull out S3 Multi Log Iterator,1,[],https://github.com/swift-nav/libsbp/pull/490,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/490,"Nothing uses this.
/cc @mookerji","Nothing uses this.
/cc @mookerji",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,490,2017-06-21T22:54:11Z,2017-06-21T23:06:40Z,2017-06-21T23:06:42Z,MERGED,True,1,112,3,https://github.com/mfine,Pull out S3 Multi Log Iterator,1,[],https://github.com/swift-nav/libsbp/pull/490,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/490#issuecomment-310227988,"Nothing uses this.
/cc @mookerji",,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,491,2017-06-27T06:49:28Z,2017-08-09T12:56:43Z,2017-08-09T12:56:43Z,CLOSED,False,399,419,18,https://github.com/dt-exafore,Make MSG_FCN_GLO comment more clear,2,[],https://github.com/swift-nav/libsbp/pull/491,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/491,"Based on @wltr note https://snav.slack.com/archives/C0HM25UNA/p1497976178280280
@wltr, @kimvaarala please, take a look. Is the description is better now?","Based on @wltr note https://snav.slack.com/archives/C0HM25UNA/p1497976178280280
@wltr, @kimvaarala please, take a look. Is the description is better now?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,491,2017-06-27T06:49:28Z,2017-08-09T12:56:43Z,2017-08-09T12:56:43Z,CLOSED,False,399,419,18,https://github.com/dt-exafore,Make MSG_FCN_GLO comment more clear,2,[],https://github.com/swift-nav/libsbp/pull/491,https://github.com/jck,2,https://github.com/swift-nav/libsbp/pull/491#issuecomment-312754143,"Based on @wltr note https://snav.slack.com/archives/C0HM25UNA/p1497976178280280
@wltr, @kimvaarala please, take a look. Is the description is better now?","Looks good, but you should regenerate all languages instead of just C.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,491,2017-06-27T06:49:28Z,2017-08-09T12:56:43Z,2017-08-09T12:56:43Z,CLOSED,False,399,419,18,https://github.com/dt-exafore,Make MSG_FCN_GLO comment more clear,2,[],https://github.com/swift-nav/libsbp/pull/491,https://github.com/dt-exafore,3,https://github.com/swift-nav/libsbp/pull/491#issuecomment-321247109,"Based on @wltr note https://snav.slack.com/archives/C0HM25UNA/p1497976178280280
@wltr, @kimvaarala please, take a look. Is the description is better now?",Not actual anymore.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,493,2017-06-28T17:03:11Z,2017-06-28T17:04:43Z,2017-06-28T17:04:45Z,MERGED,True,2,3,1,https://github.com/ljbade,Remove dupe httpretty in requirements.txt and sort by alphabet,1,[],https://github.com/swift-nav/libsbp/pull/493,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/493,Fixes #492,Fixes #492,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,494,2017-06-30T21:37:07Z,2017-06-30T22:09:01Z,2017-06-30T22:09:05Z,MERGED,True,8,4,5,https://github.com/jck,fixes before 2.2.7 pypi release,2,[],https://github.com/swift-nav/libsbp/pull/494,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/494,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,496,2017-06-30T23:51:23Z,2017-07-01T00:15:45Z,2017-07-01T00:15:45Z,CLOSED,False,286,168,5,https://github.com/ljbade,Fix Java build and get Travis to test,3,[],https://github.com/swift-nav/libsbp/pull/496,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/496,For #495,For #495,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,496,2017-06-30T23:51:23Z,2017-07-01T00:15:45Z,2017-07-01T00:15:45Z,CLOSED,False,286,168,5,https://github.com/ljbade,Fix Java build and get Travis to test,3,[],https://github.com/swift-nav/libsbp/pull/496,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/496#issuecomment-312397727,For #495,Closing in favour of https://github.com/swift-nav/libsbp/pull/442/files,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,498,2017-07-03T14:13:19Z,2017-07-03T14:29:52Z,2017-07-03T14:29:56Z,MERGED,True,828,862,39,https://github.com/mfine,Support lts-8,8,[],https://github.com/swift-nav/libsbp/pull/498,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/498,"Add support for lts-8.
Also add explicit configuration for lts-5 and lts-6.
Add lower pvp bounds configuration - this should only be run with lts-5.
Add strict designations to message fields.","Add support for lts-8.
Also add explicit configuration for lts-5 and lts-6.
Add lower pvp bounds configuration - this should only be run with lts-5.
Add strict designations to message fields.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,498,2017-07-03T14:13:19Z,2017-07-03T14:29:52Z,2017-07-03T14:29:56Z,MERGED,True,828,862,39,https://github.com/mfine,Support lts-8,8,[],https://github.com/swift-nav/libsbp/pull/498,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/498#issuecomment-312660482,"Add support for lts-8.
Also add explicit configuration for lts-5 and lts-6.
Add lower pvp bounds configuration - this should only be run with lts-5.
Add strict designations to message fields.",resolves #422,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,499,2017-07-10T23:27:32Z,2017-11-08T18:32:03Z,2017-11-08T18:32:03Z,CLOSED,False,1,0,1,https://github.com/jck,add makefile target to generate all langauges,1,[],https://github.com/swift-nav/libsbp/pull/499,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/499,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,500,2017-07-11T22:47:29Z,2017-07-12T18:28:38Z,2017-07-12T18:40:22Z,MERGED,True,15,12,3,https://github.com/jck,use tox to create and manage venv,1,[],https://github.com/swift-nav/libsbp/pull/500,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/500,Avoids the need of recreating the venv constantly,Avoids the need of recreating the venv constantly,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,500,2017-07-11T22:47:29Z,2017-07-12T18:28:38Z,2017-07-12T18:40:22Z,MERGED,True,15,12,3,https://github.com/jck,use tox to create and manage venv,1,[],https://github.com/swift-nav/libsbp/pull/500,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/500#issuecomment-314859680,Avoids the need of recreating the venv constantly,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,501,2017-07-12T22:25:27Z,2018-08-29T23:41:34Z,2019-05-20T16:53:04Z,CLOSED,False,19,2,2,https://github.com/mbavaro,Mbavaro/change return errors,1,[],https://github.com/swift-nav/libsbp/pull/501,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/501,I am trying to add more instrumentation around failure codes for SBP writes.,I am trying to add more instrumentation around failure codes for SBP writes.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,503,2017-07-25T18:17:02Z,2017-07-26T23:20:24Z,2017-07-26T23:20:24Z,MERGED,True,1724,1512,41,https://github.com/mbavaro,Update sbp.pdf,1,[],https://github.com/swift-nav/libsbp/pull/503,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/503,"Not adding any functionality, just updating the documentation on the repo.","Not adding any functionality, just updating the documentation on the repo.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,504,2017-07-26T04:49:49Z,2017-07-26T05:11:04Z,2017-07-26T05:11:09Z,MERGED,True,862,1087,30,https://github.com/mfine,Decode JSON on payload value + cleanup,1,[],https://github.com/swift-nav/libsbp/pull/504,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/504,"Overhaul the Haskell code and start decoding JSON on the payload field.
Fixes #461","Overhaul the Haskell code and start decoding JSON on the payload field.
Fixes #461",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,505,2017-07-26T21:54:06Z,2017-07-26T23:19:42Z,2017-07-26T23:19:45Z,MERGED,True,325,445,31,https://github.com/mfine,Refactoring haskell sdk,1,[],https://github.com/swift-nav/libsbp/pull/505,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/505,More cleanup around the haskell code.,More cleanup around the haskell code.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,506,2017-07-26T22:56:22Z,2017-07-27T00:02:21Z,2017-07-27T00:02:25Z,MERGED,True,461,678,156,https://github.com/mfine,Building java.,1,[],https://github.com/swift-nav/libsbp/pull/506,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/506,"Updating #442.
/cc @gsmcmullin","Updating #442.
/cc @gsmcmullin",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,506,2017-07-26T22:56:22Z,2017-07-27T00:02:21Z,2017-07-27T00:02:25Z,MERGED,True,461,678,156,https://github.com/mfine,Building java.,1,[],https://github.com/swift-nav/libsbp/pull/506,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/506#issuecomment-318207149,"Updating #442.
/cc @gsmcmullin",Fixes #495.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,507,2017-08-03T11:54:01Z,2017-08-09T12:53:46Z,2017-08-09T12:53:51Z,MERGED,True,1507,1705,40,https://github.com/dt-exafore,Remove MSG_FCNS_GLO,2,[],https://github.com/swift-nav/libsbp/pull/507,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/507,See https://github.com/swift-nav/exafore_planning/issues/805,See https://github.com/swift-nav/exafore_planning/issues/805,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,509,2017-09-07T03:26:56Z,2017-09-08T21:20:37Z,2017-09-08T21:20:40Z,MERGED,True,1414,1299,19,https://github.com/jck,"python client cleanup, improvements",3,[],https://github.com/swift-nav/libsbp/pull/509,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/509,"convert to pep8(4 spaces)
add support for TCPDriver reconnect","convert to pep8(4 spaces)
add support for TCPDriver reconnect",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,509,2017-09-07T03:26:56Z,2017-09-08T21:20:37Z,2017-09-08T21:20:40Z,MERGED,True,1414,1299,19,https://github.com/jck,"python client cleanup, improvements",3,[],https://github.com/swift-nav/libsbp/pull/509,https://github.com/jck,2,https://github.com/swift-nav/libsbp/pull/509#issuecomment-327878178,"convert to pep8(4 spaces)
add support for TCPDriver reconnect",@pmiettinen great suggestions. The third commit(1d582b9) is the only non stylistic change in this PR. Will address the other comments in another PR.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,510,2017-09-19T22:00:24Z,2017-09-19T22:47:13Z,2017-09-19T22:47:50Z,MERGED,True,1,1,1,https://github.com/jck,python: pin pyftdi version to 0.13.4,1,[],https://github.com/swift-nav/libsbp/pull/510,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/510,This is the last version of pyftdi which supports python 2.,This is the last version of pyftdi which supports python 2.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,511,2017-09-26T00:20:30Z,2017-09-26T20:19:29Z,2017-09-26T20:20:01Z,MERGED,True,5,1,2,https://github.com/jkretzmer,"added tox as requirement to readme - added gnss, imu, and user to msg.js",1,[],https://github.com/swift-nav/libsbp/pull/511,https://github.com/jkretzmer,1,https://github.com/swift-nav/libsbp/pull/511,"added pip install tox to readme
added gnss, imu, and user to msg.js","added pip install tox to readme
added gnss, imu, and user to msg.js",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,511,2017-09-26T00:20:30Z,2017-09-26T20:19:29Z,2017-09-26T20:20:01Z,MERGED,True,5,1,2,https://github.com/jkretzmer,"added tox as requirement to readme - added gnss, imu, and user to msg.js",1,[],https://github.com/swift-nav/libsbp/pull/511,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/511#issuecomment-332289060,"added pip install tox to readme
added gnss, imu, and user to msg.js",@jkretzmer see question about tox.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,511,2017-09-26T00:20:30Z,2017-09-26T20:19:29Z,2017-09-26T20:20:01Z,MERGED,True,5,1,2,https://github.com/jkretzmer,"added tox as requirement to readme - added gnss, imu, and user to msg.js",1,[],https://github.com/swift-nav/libsbp/pull/511,https://github.com/jkretzmer,3,https://github.com/swift-nav/libsbp/pull/511#issuecomment-332317630,"added pip install tox to readme
added gnss, imu, and user to msg.js",@mookerji - see above explanation re: tox - are we good to merge?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,511,2017-09-26T00:20:30Z,2017-09-26T20:19:29Z,2017-09-26T20:20:01Z,MERGED,True,5,1,2,https://github.com/jkretzmer,"added tox as requirement to readme - added gnss, imu, and user to msg.js",1,[],https://github.com/swift-nav/libsbp/pull/511,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/511#issuecomment-332322632,"added pip install tox to readme
added gnss, imu, and user to msg.js",,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,511,2017-09-26T00:20:30Z,2017-09-26T20:19:29Z,2017-09-26T20:20:01Z,MERGED,True,5,1,2,https://github.com/jkretzmer,"added tox as requirement to readme - added gnss, imu, and user to msg.js",1,[],https://github.com/swift-nav/libsbp/pull/511,https://github.com/mookerji,5,https://github.com/swift-nav/libsbp/pull/511#issuecomment-332323077,"added pip install tox to readme
added gnss, imu, and user to msg.js",thanks @jkretzmer !,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,512,2017-09-27T19:32:37Z,2017-09-27T20:01:26Z,2017-09-27T20:01:27Z,MERGED,True,2,0,1,https://github.com/ebethon,Added ndb and signal messages to msg.js,1,[],https://github.com/swift-nav/libsbp/pull/512,https://github.com/ebethon,1,https://github.com/swift-nav/libsbp/pull/512,Added ndb and signal messages to msg.js,Added ndb and signal messages to msg.js,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,514,2017-09-29T05:32:17Z,2017-09-29T17:45:53Z,2017-09-29T17:45:57Z,MERGED,True,12,1,1,https://github.com/silverjam,"Change default baud rate, make example more verbose",1,[],https://github.com/swift-nav/libsbp/pull/514,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/514,"Change the default baudrate to 115200 since this is more common?  Configuring to 1000000 cause the example to fail with Piksi Multi on OS X.
Add some print statement so we have an of what the app is trying to do, since this isn't a unix utility it shouldn't be a big deal to make it a little more verbose.","Change the default baudrate to 115200 since this is more common?  Configuring to 1000000 cause the example to fail with Piksi Multi on OS X.
Add some print statement so we have an of what the app is trying to do, since this isn't a unix utility it shouldn't be a big deal to make it a little more verbose.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,514,2017-09-29T05:32:17Z,2017-09-29T17:45:53Z,2017-09-29T17:45:57Z,MERGED,True,12,1,1,https://github.com/silverjam,"Change default baud rate, make example more verbose",1,[],https://github.com/swift-nav/libsbp/pull/514,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/514#issuecomment-333037136,"Change the default baudrate to 115200 since this is more common?  Configuring to 1000000 cause the example to fail with Piksi Multi on OS X.
Add some print statement so we have an of what the app is trying to do, since this isn't a unix utility it shouldn't be a big deal to make it a little more verbose.",,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,515,2017-09-29T05:33:35Z,2017-10-02T19:08:26Z,2019-05-20T16:53:51Z,MERGED,True,14,15,1,https://github.com/silverjam,Remove `deps` target; fix help/hint text,1,[],https://github.com/swift-nav/libsbp/pull/515,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/515,"The 'deps' target doesn't exist anymore, deps are installed as part of building the libs for a particular language so it seems unnecessary.
Fix the ""hint"" text that's displayed to help the user install the right dependenvies prior to building.  The echo command needs '-e' to evaluate \n as a newline.","The 'deps' target doesn't exist anymore, deps are installed as part of building the libs for a particular language so it seems unnecessary.
Fix the ""hint"" text that's displayed to help the user install the right dependenvies prior to building.  The echo command needs '-e' to evaluate \n as a newline.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,515,2017-09-29T05:33:35Z,2017-10-02T19:08:26Z,2019-05-20T16:53:51Z,MERGED,True,14,15,1,https://github.com/silverjam,Remove `deps` target; fix help/hint text,1,[],https://github.com/swift-nav/libsbp/pull/515,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/515#issuecomment-333608317,"The 'deps' target doesn't exist anymore, deps are installed as part of building the libs for a particular language so it seems unnecessary.
Fix the ""hint"" text that's displayed to help the user install the right dependenvies prior to building.  The echo command needs '-e' to evaluate \n as a newline.","/cc @mookerji @JoshuaGross any objections?  Minor fixes, but I deleted the deps target, which didn't exist anymore...",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,515,2017-09-29T05:33:35Z,2017-10-02T19:08:26Z,2019-05-20T16:53:51Z,MERGED,True,14,15,1,https://github.com/silverjam,Remove `deps` target; fix help/hint text,1,[],https://github.com/swift-nav/libsbp/pull/515,https://github.com/mookerji,3,https://github.com/swift-nav/libsbp/pull/515#issuecomment-333623854,"The 'deps' target doesn't exist anymore, deps are installed as part of building the libs for a particular language so it seems unnecessary.
Fix the ""hint"" text that's displayed to help the user install the right dependenvies prior to building.  The echo command needs '-e' to evaluate \n as a newline.",!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,516,2017-10-04T19:12:48Z,2021-09-28T03:07:02Z,2021-09-28T03:07:02Z,CLOSED,False,57,8,1,https://github.com/denniszollo,wip: serial double buffering,1,[],https://github.com/swift-nav/libsbp/pull/516,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/516,Making this PR so I can add comments,Making this PR so I can add comments,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,517,2017-10-06T20:30:19Z,2017-10-06T20:31:55Z,2017-10-06T20:37:08Z,CLOSED,False,263,196,2,https://github.com/jonrwat,Update Java parser API,1,[],https://github.com/swift-nav/libsbp/pull/517,https://github.com/jonrwat,1,https://github.com/swift-nav/libsbp/pull/517,"The architecture of the Java parser is updated to be consistent with the
SnapCam project.  This includes development of the parser which does not
execute its own thread, but instead ingests supplied serial data a byte at
the time, and returns the parsed message once an entire message is
received.","The architecture of the Java parser is updated to be consistent with the
SnapCam project.  This includes development of the parser which does not
execute its own thread, but instead ingests supplied serial data a byte at
the time, and returns the parsed message once an entire message is
received.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,517,2017-10-06T20:30:19Z,2017-10-06T20:31:55Z,2017-10-06T20:37:08Z,CLOSED,False,263,196,2,https://github.com/jonrwat,Update Java parser API,1,[],https://github.com/swift-nav/libsbp/pull/517,https://github.com/jonrwat,2,https://github.com/swift-nav/libsbp/pull/517#issuecomment-334862985,"The architecture of the Java parser is updated to be consistent with the
SnapCam project.  This includes development of the parser which does not
execute its own thread, but instead ingests supplied serial data a byte at
the time, and returns the parsed message once an entire message is
received.",Did not mean to open pull-request to swift repository.  Making update to forked branch.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,518,2017-10-25T00:18:17Z,2017-10-25T20:19:52Z,2017-10-25T20:19:52Z,MERGED,True,251,6,5,https://github.com/denniszollo,V2.2.15 tag for pm firmware release,3,[],https://github.com/swift-nav/libsbp/pull/518,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/518,/cc @jck @jkretzmer,/cc @jck @jkretzmer,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,519,2017-10-25T20:40:30Z,2017-11-08T18:30:47Z,2019-05-20T16:53:59Z,MERGED,True,5,5,2,https://github.com/mfine,Rename the js library to sbp.,1,[],https://github.com/swift-nav/libsbp/pull/519,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/519,Be consistent with other packages.,Be consistent with other packages.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,519,2017-10-25T20:40:30Z,2017-11-08T18:30:47Z,2019-05-20T16:53:59Z,MERGED,True,5,5,2,https://github.com/mfine,Rename the js library to sbp.,1,[],https://github.com/swift-nav/libsbp/pull/519,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/519#issuecomment-342728782,Be consistent with other packages.,"lgtm, but should deprecate libsbp on npm, and add a note that points to sbp see https://docs.npmjs.com/cli/deprecate
also make sure to create the sbp package under the swiftnav org in npm",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,519,2017-10-25T20:40:30Z,2017-11-08T18:30:47Z,2019-05-20T16:53:59Z,MERGED,True,5,5,2,https://github.com/mfine,Rename the js library to sbp.,1,[],https://github.com/swift-nav/libsbp/pull/519,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/519#issuecomment-342908916,Be consistent with other packages.,@ljbade can you create the sbp package under the swiftnav org?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,519,2017-10-25T20:40:30Z,2017-11-08T18:30:47Z,2019-05-20T16:53:59Z,MERGED,True,5,5,2,https://github.com/mfine,Rename the js library to sbp.,1,[],https://github.com/swift-nav/libsbp/pull/519,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/519#issuecomment-342909124,Be consistent with other packages.,@ljbade can you create the sbp package under the swiftnav org?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,520,2017-10-30T22:14:27Z,2017-11-08T17:51:14Z,2019-05-20T16:53:57Z,MERGED,True,2277,1701,68,https://github.com/axlan,Added Magnetometer,9,[],https://github.com/swift-nav/libsbp/pull/520,https://github.com/axlan,1,https://github.com/swift-nav/libsbp/pull/520,PR just currently just has C and Python bindings generated,PR just currently just has C and Python bindings generated,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,521,2017-10-31T02:50:03Z,2017-11-14T01:22:55Z,2017-11-14T01:22:55Z,CLOSED,False,1396,1145,33,https://github.com/scarcanague,[Hackaton] Add elevation and azimuth,2,[],https://github.com/swift-nav/libsbp/pull/521,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/521,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,522,2017-11-06T18:59:08Z,2017-11-08T18:28:25Z,2019-05-20T16:53:58Z,MERGED,True,7101,2246,115,https://github.com/mfine,Move off GnssSignal,1,[],https://github.com/swift-nav/libsbp/pull/522,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/522,"GnssSignal is a PRN-1 value - GnssSignal16 is not. Remove the existing GnssSignal messages.
/cc @denniszollo @anth-cole","GnssSignal is a PRN-1 value - GnssSignal16 is not. Remove the existing GnssSignal messages.
/cc @denniszollo @anth-cole",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,522,2017-11-06T18:59:08Z,2017-11-08T18:28:25Z,2019-05-20T16:53:58Z,MERGED,True,7101,2246,115,https://github.com/mfine,Move off GnssSignal,1,[],https://github.com/swift-nav/libsbp/pull/522,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/522#issuecomment-342250536,"GnssSignal is a PRN-1 value - GnssSignal16 is not. Remove the existing GnssSignal messages.
/cc @denniszollo @anth-cole","Note - as this goes ins, I think we should move GnssSignal to GnssSignalDep and GnssSignal16 to GnssSignal.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,522,2017-11-06T18:59:08Z,2017-11-08T18:28:25Z,2019-05-20T16:53:58Z,MERGED,True,7101,2246,115,https://github.com/mfine,Move off GnssSignal,1,[],https://github.com/swift-nav/libsbp/pull/522,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/522#issuecomment-342253731,"GnssSignal is a PRN-1 value - GnssSignal16 is not. Remove the existing GnssSignal messages.
/cc @denniszollo @anth-cole",Here's moving from GnssSignal16 to GnssSignal: #523,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,522,2017-11-06T18:59:08Z,2017-11-08T18:28:25Z,2019-05-20T16:53:58Z,MERGED,True,7101,2246,115,https://github.com/mfine,Move off GnssSignal,1,[],https://github.com/swift-nav/libsbp/pull/522,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/522#issuecomment-342636597,"GnssSignal is a PRN-1 value - GnssSignal16 is not. Remove the existing GnssSignal messages.
/cc @denniszollo @anth-cole","Impacted messages:
New Messages                           >  Deprecated Messages
=====================================  >  ========================================
MSG_ACQ_RESULT               0x2F  47  >  MSG_ACQ_RESULT_DEP_C             0x1F  31
MSG_ACQ_SV_PROFILE           0x2E  46  >  MSG_ACQ_SV_PROFILE_DEP           0x1E  30
MSG_GROUP_DELAY              0x94 148  >  MSG_GROUP_DELAY_DEP_B            0x93 147
MSG_ALMANAC_GPS              0x72 114  >  MSG_ALMANAC_GPS_DEP              0x70 112
MSG_ALMANAC_GLO              0x73 115  >  MSG_ALMANAC_GLO_DEP              0x71 113
MSG_MASK_SATELLITE           0x2B  43  >  MSG_MASK_SATELLITE_DEP           0x1B  27
MSG_TRACKING_STATE_DETAILED  0x21  33  >  MSG_TRACKING_STATE_DETAILED_DEP  0x11  17
MSG_TRACKING_IQ              0x2C  44  >  MSG_TRACKING_IQ_DEP              0x1C  28",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,522,2017-11-06T18:59:08Z,2017-11-08T18:28:25Z,2019-05-20T16:53:58Z,MERGED,True,7101,2246,115,https://github.com/mfine,Move off GnssSignal,1,[],https://github.com/swift-nav/libsbp/pull/522,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/522#issuecomment-342687534,"GnssSignal is a PRN-1 value - GnssSignal16 is not. Remove the existing GnssSignal messages.
/cc @denniszollo @anth-cole","All 3 PRs are passing currently:
#522
https://github.com/swift-nav/libswiftnav-private/pull/1047
swift-nav/piksi_firmware_private#1355
HITL results:
https://gnss-analysis.swiftnav.com/metrics_preset=pass_fail&scenario=live-roof-1543-mission&build_type=pr&firmware_versions=v1.2.0-develop-2017110323-9-g0783328f
https://gnss-analysis.swiftnav.com/metrics_preset=detailed&scenario=live-roof-1543-mission&build_type=pr&firmware_versions=v1.2.0-develop-2017110323-9-g0783328f",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,522,2017-11-06T18:59:08Z,2017-11-08T18:28:25Z,2019-05-20T16:53:58Z,MERGED,True,7101,2246,115,https://github.com/mfine,Move off GnssSignal,1,[],https://github.com/swift-nav/libsbp/pull/522,https://github.com/mfine,6,https://github.com/swift-nav/libsbp/pull/522#issuecomment-342718527,"GnssSignal is a PRN-1 value - GnssSignal16 is not. Remove the existing GnssSignal messages.
/cc @denniszollo @anth-cole","Fixes swift-nav/piksi_v3_bug_tracking#826.
I've added the removal of standardization of GPSTime to GPSTimeNano as well.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,522,2017-11-06T18:59:08Z,2017-11-08T18:28:25Z,2019-05-20T16:53:58Z,MERGED,True,7101,2246,115,https://github.com/mfine,Move off GnssSignal,1,[],https://github.com/swift-nav/libsbp/pull/522,https://github.com/ljbade,7,https://github.com/swift-nav/libsbp/pull/522#issuecomment-342728397,"GnssSignal is a PRN-1 value - GnssSignal16 is not. Remove the existing GnssSignal messages.
/cc @denniszollo @anth-cole",Sweet! We had hoped to make a clean break with Piksi Multi 1.0 but it didn't quite happen,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,523,2017-11-06T19:11:28Z,2017-11-06T22:38:56Z,2019-05-20T16:53:56Z,MERGED,True,29,30,6,https://github.com/mfine,Get rid of GnssSignal16,1,[],https://github.com/swift-nav/libsbp/pull/523,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/523,Standardize on GnssSignal16 as GnssSignal.,Standardize on GnssSignal16 as GnssSignal.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,524,2017-11-14T02:20:09Z,2017-11-15T22:53:51Z,2019-05-20T16:54:00Z,MERGED,True,544,199,11,https://github.com/scarcanague,Adding GLONASS code-phase bias message,1,[],https://github.com/swift-nav/libsbp/pull/524,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/524,"The purpose of this message is to provide the GLONASS code-phase bias. This message is notably expected to be filled in with the RTCM 1230 message.
I was not planning on adding the GLONASS Code-Phase bias indicator, as it is simply a sign instruction.
@anth-cole : Could you make a review? You should simply review the yaml file, as all the rest is generated automatically","The purpose of this message is to provide the GLONASS code-phase bias. This message is notably expected to be filled in with the RTCM 1230 message.
I was not planning on adding the GLONASS Code-Phase bias indicator, as it is simply a sign instruction.
@anth-cole : Could you make a review? You should simply review the yaml file, as all the rest is generated automatically",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,524,2017-11-14T02:20:09Z,2017-11-15T22:53:51Z,2019-05-20T16:54:00Z,MERGED,True,544,199,11,https://github.com/scarcanague,Adding GLONASS code-phase bias message,1,[],https://github.com/swift-nav/libsbp/pull/524,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/524#issuecomment-344314747,"The purpose of this message is to provide the GLONASS code-phase bias. This message is notably expected to be filled in with the RTCM 1230 message.
I was not planning on adding the GLONASS Code-Phase bias indicator, as it is simply a sign instruction.
@anth-cole : Could you make a review? You should simply review the yaml file, as all the rest is generated automatically",File generation looks ok - looks like you just need to bump the message count check in python.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,525,2017-11-22T20:44:03Z,2017-11-29T17:32:47Z,2017-11-29T17:32:52Z,MERGED,True,1150,744,11,https://github.com/gsmcmullin, Add MSG_SETTINGS_WRITE_RESP,3,[],https://github.com/swift-nav/libsbp/pull/525,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/525,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,526,2017-11-30T02:12:33Z,2017-12-01T23:36:45Z,2017-12-01T23:36:48Z,MERGED,True,50,0,1,https://github.com/bryanbrady,adding tcp client example,2,[],https://github.com/swift-nav/libsbp/pull/526,https://github.com/bryanbrady,1,https://github.com/swift-nav/libsbp/pull/526,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,528,2017-12-01T22:19:33Z,2017-12-04T20:56:21Z,2017-12-04T20:56:24Z,MERGED,True,205,0,2,https://github.com/bryanbrady,adding fftmonitor,5,[],https://github.com/swift-nav/libsbp/pull/528,https://github.com/bryanbrady,1,https://github.com/swift-nav/libsbp/pull/528,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,529,2017-12-07T19:56:49Z,2017-12-11T22:01:41Z,2017-12-11T22:01:52Z,MERGED,True,136,3,2,https://github.com/bryanbrady,Bb/monitor updates,4,[],https://github.com/swift-nav/libsbp/pull/529,https://github.com/bryanbrady,1,https://github.com/swift-nav/libsbp/pull/529,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,529,2017-12-07T19:56:49Z,2017-12-11T22:01:41Z,2017-12-11T22:01:52Z,MERGED,True,136,3,2,https://github.com/bryanbrady,Bb/monitor updates,4,[],https://github.com/swift-nav/libsbp/pull/529,https://github.com/bryanbrady,2,https://github.com/swift-nav/libsbp/pull/529#issuecomment-350389567,,@axlan Thanks for the feedback. I've added comments and a usage example.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,530,2017-12-12T00:43:46Z,2017-12-12T01:29:34Z,2017-12-12T01:29:37Z,MERGED,True,48,1,1,https://github.com/bryanbrady,version 2.3.3,2,[],https://github.com/swift-nav/libsbp/pull/530,https://github.com/bryanbrady,1,https://github.com/swift-nav/libsbp/pull/530,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,531,2017-12-12T15:20:12Z,2017-12-12T17:38:38Z,2017-12-12T17:38:43Z,MERGED,True,1,0,1,https://github.com/bryanbrady,add util subpackage to setup.py,1,[],https://github.com/swift-nav/libsbp/pull/531,https://github.com/bryanbrady,1,https://github.com/swift-nav/libsbp/pull/531,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,532,2017-12-12T19:02:22Z,2021-09-28T03:07:03Z,2021-09-28T03:07:03Z,CLOSED,False,292,292,3,https://github.com/denniszollo,Deterministic java,3,[],https://github.com/swift-nav/libsbp/pull/532,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/532,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,532,2017-12-12T19:02:22Z,2021-09-28T03:07:03Z,2021-09-28T03:07:03Z,CLOSED,False,292,292,3,https://github.com/denniszollo,Deterministic java,3,[],https://github.com/swift-nav/libsbp/pull/532,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/532#issuecomment-351156744,,Awesome - I tried this but failed - I missed a sorted! Thank!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,533,2017-12-12T23:39:49Z,2017-12-14T23:50:44Z,2017-12-14T23:50:49Z,MERGED,True,6,1,1,https://github.com/lstrz,"Add a flag that is high when antenna is shorted, according to MAX4829 IC",3,[],https://github.com/swift-nav/libsbp/pull/533,https://github.com/lstrz,1,https://github.com/swift-nav/libsbp/pull/533,"Design Notes
Documents heartbeat message changes introduced in swift-nav/piksi_firmware_private#1497, when fixing swift-nav/firmware_team_planning#394.","Design Notes
Documents heartbeat message changes introduced in swift-nav/piksi_firmware_private#1497, when fixing swift-nav/firmware_team_planning#394.",True,{'THUMBS_UP': ['https://github.com/gsmcmullin']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,533,2017-12-12T23:39:49Z,2017-12-14T23:50:44Z,2017-12-14T23:50:49Z,MERGED,True,6,1,1,https://github.com/lstrz,"Add a flag that is high when antenna is shorted, according to MAX4829 IC",3,[],https://github.com/swift-nav/libsbp/pull/533,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/533#issuecomment-351868441,"Design Notes
Documents heartbeat message changes introduced in swift-nav/piksi_firmware_private#1497, when fixing swift-nav/firmware_team_planning#394.",lgtm,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,535,2017-12-21T19:46:03Z,2018-08-09T20:28:05Z,2018-08-09T20:28:06Z,MERGED,True,2,1,1,https://github.com/denniszollo,Update pdf doc with better links,1,[],https://github.com/swift-nav/libsbp/pull/535,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/535,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,536,2018-01-02T13:51:00Z,2018-01-24T02:54:39Z,2019-05-20T16:54:02Z,MERGED,True,2875,1054,314,https://github.com/scarcanague,Precise orbit and clock message,3,[],https://github.com/swift-nav/libsbp/pull/536,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/536,"This PR adds a message to be able to support RTCM-like orbit/clock precise correction message.
cc: @benjamin0 @swiftnav-simon","This PR adds a message to be able to support RTCM-like orbit/clock precise correction message.
cc: @benjamin0 @swiftnav-simon",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,537,2018-01-08T14:21:53Z,2018-01-18T14:04:55Z,2018-01-18T14:04:59Z,MERGED,True,2091,1103,16,https://github.com/pmiettinen,Add MSG_SBAS_RAW,2,[],https://github.com/swift-nav/libsbp/pull/537,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/537,https://paper.dropbox.com/doc/SBAS-Correction-usage-in-Starling-lj63ycGD0rhdeQ7zt8KTl#:uid=034412587439856993266169&h2=SBP-message,https://paper.dropbox.com/doc/SBAS-Correction-usage-in-Starling-lj63ycGD0rhdeQ7zt8KTl#:uid=034412587439856993266169&h2=SBP-message,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,537,2018-01-08T14:21:53Z,2018-01-18T14:04:55Z,2018-01-18T14:04:59Z,MERGED,True,2091,1103,16,https://github.com/pmiettinen,Add MSG_SBAS_RAW,2,[],https://github.com/swift-nav/libsbp/pull/537,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/537#issuecomment-356285744,https://paper.dropbox.com/doc/SBAS-Correction-usage-in-Starling-lj63ycGD0rhdeQ7zt8KTl#:uid=034412587439856993266169&h2=SBP-message,Waiting for confirmation for the actual spec.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,537,2018-01-08T14:21:53Z,2018-01-18T14:04:55Z,2018-01-18T14:04:59Z,MERGED,True,2091,1103,16,https://github.com/pmiettinen,Add MSG_SBAS_RAW,2,[],https://github.com/swift-nav/libsbp/pull/537,https://github.com/kimvaarala,3,https://github.com/swift-nav/libsbp/pull/537#issuecomment-358270719,https://paper.dropbox.com/doc/SBAS-Correction-usage-in-Starling-lj63ycGD0rhdeQ7zt8KTl#:uid=034412587439856993266169&h2=SBP-message,"@anth-cole Was there an approval for the proposed SBAS RAW data message (as suggested here: https://paper.dropbox.com/doc/SBAS-Correction-usage-in-Starling-lj63ycGD0rhdeQ7zt8KTl#:uid=034412587439856993266169&h2=SBP-message).
This PR is the implementation of that message.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,537,2018-01-08T14:21:53Z,2018-01-18T14:04:55Z,2018-01-18T14:04:59Z,MERGED,True,2091,1103,16,https://github.com/pmiettinen,Add MSG_SBAS_RAW,2,[],https://github.com/swift-nav/libsbp/pull/537,https://github.com/anth-cole,4,https://github.com/swift-nav/libsbp/pull/537#issuecomment-358489237,https://paper.dropbox.com/doc/SBAS-Correction-usage-in-Starling-lj63ycGD0rhdeQ7zt8KTl#:uid=034412587439856993266169&h2=SBP-message,"@pmiettinen if you can make those couple of nit changes, this is good to merge",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,538,2018-01-15T09:56:40Z,2018-01-15T12:10:47Z,2018-01-15T12:11:12Z,MERGED,True,549,346,8,https://github.com/dt-exafore,Remove SBP_MSG_TRACKING_STATE_DETAILED message,3,[],https://github.com/swift-nav/libsbp/pull/538,https://github.com/dt-exafore,1,https://github.com/swift-nav/libsbp/pull/538,Reference to the issue: https://github.com/swift-nav/exafore_planning/issues/947,Reference to the issue: https://github.com/swift-nav/exafore_planning/issues/947,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,539,2018-01-18T17:55:14Z,2018-01-19T15:27:44Z,2018-01-19T15:27:50Z,MERGED,True,24,25,12,https://github.com/mfine,Update templates around Copyright and POC,1,[],https://github.com/swift-nav/libsbp/pull/539,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/539,"Update the templates. Code not generated.
/cc @pmiettinen","Update the templates. Code not generated.
/cc @pmiettinen",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,540,2018-01-22T22:15:05Z,2018-04-04T17:27:07Z,2018-04-04T17:27:07Z,MERGED,True,975,1692,15,https://github.com/denniszollo,Libsbp crl,4,[],https://github.com/swift-nav/libsbp/pull/540,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/540,"A few small libsbp changes to support CRL integration per action items.

Rename misleading ""variance"" fields to ""accuracy"" in orientation messages
Redefine flags in INS_STATUS message to get closer to our intended implementation

/cc @nicolekelley @jkretzmer","A few small libsbp changes to support CRL integration per action items.

Rename misleading ""variance"" fields to ""accuracy"" in orientation messages
Redefine flags in INS_STATUS message to get closer to our intended implementation

/cc @nicolekelley @jkretzmer",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,540,2018-01-22T22:15:05Z,2018-04-04T17:27:07Z,2018-04-04T17:27:07Z,MERGED,True,975,1692,15,https://github.com/denniszollo,Libsbp crl,4,[],https://github.com/swift-nav/libsbp/pull/540,https://github.com/jkretzmer,2,https://github.com/swift-nav/libsbp/pull/540#issuecomment-378680016,"A few small libsbp changes to support CRL integration per action items.

Rename misleading ""variance"" fields to ""accuracy"" in orientation messages
Redefine flags in INS_STATUS message to get closer to our intended implementation

/cc @nicolekelley @jkretzmer","LGTM, merging.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,541,2018-01-26T21:58:33Z,2018-01-26T23:29:06Z,2018-01-26T23:29:06Z,MERGED,True,728,699,9,https://github.com/scarcanague,s16 to s8 change for yaw rate,4,[],https://github.com/swift-nav/libsbp/pull/541,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/541,@mfine,@mfine,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,541,2018-01-26T21:58:33Z,2018-01-26T23:29:06Z,2018-01-26T23:29:06Z,MERGED,True,728,699,9,https://github.com/scarcanague,s16 to s8 change for yaw rate,4,[],https://github.com/swift-nav/libsbp/pull/541,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/541#issuecomment-360916060,@mfine,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,542,2018-02-03T02:24:58Z,2018-02-03T02:25:05Z,2018-02-03T02:25:05Z,MERGED,True,0,0,1,https://github.com/denniszollo,Update sbp doc,1,[],https://github.com/swift-nav/libsbp/pull/542,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/542,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,543,2018-02-05T19:44:13Z,2019-01-12T00:16:27Z,2019-01-12T00:16:27Z,CLOSED,False,64,8,3,https://github.com/jck,[wip] serial double buffering,2,[],https://github.com/swift-nav/libsbp/pull/543,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/543,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,544,2018-02-16T03:09:33Z,2018-03-09T04:32:56Z,2018-03-09T04:32:56Z,MERGED,True,442,182,25,https://github.com/denniszollo,Settings doc clarity (WIP),6,[],https://github.com/swift-nav/libsbp/pull/544,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/544,Users have been confused quite a bit about settings interface lately so I am attempting to improve incrementally.,Users have been confused quite a bit about settings interface lately so I am attempting to improve incrementally.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,544,2018-02-16T03:09:33Z,2018-03-09T04:32:56Z,2018-03-09T04:32:56Z,MERGED,True,442,182,25,https://github.com/denniszollo,Settings doc clarity (WIP),6,[],https://github.com/swift-nav/libsbp/pull/544,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/544#issuecomment-366133925,Users have been confused quite a bit about settings interface lately so I am attempting to improve incrementally.,/cc @swift-nav/appseng @mfine,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,545,2018-02-21T00:14:39Z,2018-02-21T00:26:31Z,2018-02-21T00:26:31Z,MERGED,True,40,0,1,https://github.com/denniszollo,Add file driver that exits when file is complete,1,[],https://github.com/swift-nav/libsbp/pull/545,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/545,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,546,2018-02-21T02:50:04Z,2018-02-22T01:30:07Z,2018-02-22T01:30:46Z,MERGED,True,25,25,9,https://github.com/jck,upgrade to construct v2.9.33,5,[],https://github.com/swift-nav/libsbp/pull/546,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/546,"This version of construct has a bunch of API changes and performance improvements.
time python -m piksi_tools.serial_link -l --file -p tests/data/20170513-180207.1.1.26.bin goes from ~33s to ~25s","This version of construct has a bunch of API changes and performance improvements.
time python -m piksi_tools.serial_link -l --file -p tests/data/20170513-180207.1.1.26.bin goes from ~33s to ~25s",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,546,2018-02-21T02:50:04Z,2018-02-22T01:30:07Z,2018-02-22T01:30:46Z,MERGED,True,25,25,9,https://github.com/jck,upgrade to construct v2.9.33,5,[],https://github.com/swift-nav/libsbp/pull/546,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/546#issuecomment-367533810,"This version of construct has a bunch of API changes and performance improvements.
time python -m piksi_tools.serial_link -l --file -p tests/data/20170513-180207.1.1.26.bin goes from ~33s to ~25s",lgtm,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,547,2018-02-22T20:25:31Z,2018-03-05T21:36:45Z,2019-03-22T00:02:05Z,MERGED,True,766,270,10,https://github.com/benjaminaltieri,[WIP] Add NetworkUsage struct and MSG_NETWORK_BANDWIDTH_USAGE,1,[],https://github.com/swift-nav/libsbp/pull/547,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/547,"To support async bandwidth metrics to be reported to the console the following message is being added to the piksi module:
MSG_NETWORK_BANDWIDTH_USAGE 0x00BD
While there is alignment to some degree with the MSG_NETWORK_STATE_* messages, the interface string being a common field, this is meant to me emitted as streaming data from the system to indicate real time data usage.","To support async bandwidth metrics to be reported to the console the following message is being added to the piksi module:
MSG_NETWORK_BANDWIDTH_USAGE 0x00BD
While there is alignment to some degree with the MSG_NETWORK_STATE_* messages, the interface string being a common field, this is meant to me emitted as streaming data from the system to indicate real time data usage.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,547,2018-02-22T20:25:31Z,2018-03-05T21:36:45Z,2019-03-22T00:02:05Z,MERGED,True,766,270,10,https://github.com/benjaminaltieri,[WIP] Add NetworkUsage struct and MSG_NETWORK_BANDWIDTH_USAGE,1,[],https://github.com/swift-nav/libsbp/pull/547,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/547#issuecomment-367811001,"To support async bandwidth metrics to be reported to the console the following message is being added to the piksi module:
MSG_NETWORK_BANDWIDTH_USAGE 0x00BD
While there is alignment to some degree with the MSG_NETWORK_STATE_* messages, the interface string being a common field, this is meant to me emitted as streaming data from the system to indicate real time data usage.",LGTM!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,547,2018-02-22T20:25:31Z,2018-03-05T21:36:45Z,2019-03-22T00:02:05Z,MERGED,True,766,270,10,https://github.com/benjaminaltieri,[WIP] Add NetworkUsage struct and MSG_NETWORK_BANDWIDTH_USAGE,1,[],https://github.com/swift-nav/libsbp/pull/547,https://github.com/benjaminaltieri,3,https://github.com/swift-nav/libsbp/pull/547#issuecomment-367811379,"To support async bandwidth metrics to be reported to the console the following message is being added to the piksi module:
MSG_NETWORK_BANDWIDTH_USAGE 0x00BD
While there is alignment to some degree with the MSG_NETWORK_STATE_* messages, the interface string being a common field, this is meant to me emitted as streaming data from the system to indicate real time data usage.",Thanks @mfine! Do I need to commit any of the generated artifacts (or any other steps)? This is my first time adding to libsbp,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,547,2018-02-22T20:25:31Z,2018-03-05T21:36:45Z,2019-03-22T00:02:05Z,MERGED,True,766,270,10,https://github.com/benjaminaltieri,[WIP] Add NetworkUsage struct and MSG_NETWORK_BANDWIDTH_USAGE,1,[],https://github.com/swift-nav/libsbp/pull/547,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/547#issuecomment-367812081,"To support async bandwidth metrics to be reported to the console the following message is being added to the piksi module:
MSG_NETWORK_BANDWIDTH_USAGE 0x00BD
While there is alignment to some degree with the MSG_NETWORK_STATE_* messages, the interface string being a common field, this is meant to me emitted as streaming data from the system to indicate real time data usage.","Yes! So it's good to do an initial commit like this, collect feedback - maybe from others like @denniszollo - and then generate the languages. I usually just generate things with:
 $ make deps-generator gen-c gen-python gen-javascript gen-java gen-haskell",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,547,2018-02-22T20:25:31Z,2018-03-05T21:36:45Z,2019-03-22T00:02:05Z,MERGED,True,766,270,10,https://github.com/benjaminaltieri,[WIP] Add NetworkUsage struct and MSG_NETWORK_BANDWIDTH_USAGE,1,[],https://github.com/swift-nav/libsbp/pull/547,https://github.com/benjaminaltieri,5,https://github.com/swift-nav/libsbp/pull/547#issuecomment-368945455,"To support async bandwidth metrics to be reported to the console the following message is being added to the piksi module:
MSG_NETWORK_BANDWIDTH_USAGE 0x00BD
While there is alignment to some degree with the MSG_NETWORK_STATE_* messages, the interface string being a common field, this is meant to me emitted as streaming data from the system to indicate real time data usage.","Alright I've run the generator and added the new source. Can I get a final thumbs up? @denniszollo any gotchas?
Edit: ok it looks like I broke travis. will investigate and repost when fixed.
I had to change the message ID since there was a conflict with MSG_COMMAND_OUTPUT.
Edit: also had to change a magic number in test_table.py
I've also squashed the changes to have an atom commit for the PR",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,548,2018-02-23T20:14:12Z,2018-02-26T08:54:59Z,2018-02-26T08:55:01Z,MERGED,True,39,0,1,https://github.com/jck,py: add json bin logger,1,[],https://github.com/swift-nav/libsbp/pull/548,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/548,"The JSONBinLogger class is the same as JSONLogger except that it doesn't actually expand the fields.  Using JSONBinLogger improves the performance of the console while logging.
The JSONLogIterator can still be used to parse these logs.","The JSONBinLogger class is the same as JSONLogger except that it doesn't actually expand the fields.  Using JSONBinLogger improves the performance of the console while logging.
The JSONLogIterator can still be used to parse these logs.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,549,2018-03-09T05:13:42Z,2018-03-09T06:18:24Z,2018-03-09T06:18:24Z,MERGED,True,112,5,6,https://github.com/denniszollo,Push v2.3.10 release updates,1,[],https://github.com/swift-nav/libsbp/pull/549,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/549,"after merging, then we push tag per HOW_TO.md","after merging, then we push tag per HOW_TO.md",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,550,2018-03-09T23:36:53Z,2018-03-09T23:52:18Z,2018-03-09T23:52:21Z,MERGED,True,6,1,1,https://github.com/jck,TCPDriver ignore interrupted system call exeption,1,[],https://github.com/swift-nav/libsbp/pull/550,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/550,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,551,2018-03-12T22:32:30Z,2018-03-20T05:24:16Z,2018-03-20T05:24:16Z,MERGED,True,2395,10,25,https://github.com/mfine,Protocol buffers for SBP,11,[],https://github.com/swift-nav/libsbp/pull/551,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/551,"Generated protocol buffers for SBP.
/cc @jck @benjaminaltieri","Generated protocol buffers for SBP.
/cc @jck @benjaminaltieri",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,551,2018-03-12T22:32:30Z,2018-03-20T05:24:16Z,2018-03-20T05:24:16Z,MERGED,True,2395,10,25,https://github.com/mfine,Protocol buffers for SBP,11,[],https://github.com/swift-nav/libsbp/pull/551,https://github.com/mookerji,2,https://github.com/swift-nav/libsbp/pull/551#issuecomment-372492734,"Generated protocol buffers for SBP.
/cc @jck @benjaminaltieri",üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,552,2018-03-13T21:36:57Z,2018-03-15T19:52:56Z,2018-03-15T19:53:11Z,CLOSED,False,4332,0,46,https://github.com/benjaminaltieri,[Do not merge] Protobuf c bindings build scripts,2,[],https://github.com/swift-nav/libsbp/pull/552,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/552,Crack at a source generation step. Cmake script can build a library from generated sources.,Crack at a source generation step. Cmake script can build a library from generated sources.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,552,2018-03-13T21:36:57Z,2018-03-15T19:52:56Z,2018-03-15T19:53:11Z,CLOSED,False,4332,0,46,https://github.com/benjaminaltieri,[Do not merge] Protobuf c bindings build scripts,2,[],https://github.com/swift-nav/libsbp/pull/552,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/552#issuecomment-373502363,Crack at a source generation step. Cmake script can build a library from generated sources.,Will move into buildroot package,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,553,2018-03-13T22:53:42Z,2018-03-20T05:23:33Z,2018-03-20T05:23:33Z,MERGED,True,442,396,32,https://github.com/anth-cole,Add SBAS position quality,8,[],https://github.com/swift-nav/libsbp/pull/553,https://github.com/anth-cole,1,https://github.com/swift-nav/libsbp/pull/553,"This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo","This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,553,2018-03-13T22:53:42Z,2018-03-20T05:23:33Z,2018-03-20T05:23:33Z,MERGED,True,442,396,32,https://github.com/anth-cole,Add SBAS position quality,8,[],https://github.com/swift-nav/libsbp/pull/553,https://github.com/cbeighley,2,https://github.com/swift-nav/libsbp/pull/553#issuecomment-372848589,"This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo",@anth-cole I don't think you should be revv'ing any message ID's here - I think we simply define 5 to be SBAS for all relevant messages.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,553,2018-03-13T22:53:42Z,2018-03-20T05:23:33Z,2018-03-20T05:23:33Z,MERGED,True,442,396,32,https://github.com/anth-cole,Add SBAS position quality,8,[],https://github.com/swift-nav/libsbp/pull/553,https://github.com/anth-cole,3,https://github.com/swift-nav/libsbp/pull/553#issuecomment-372851556,"This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo","Thanks, removed the message ID rev's that makes the PR pretty simple thanks!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,553,2018-03-13T22:53:42Z,2018-03-20T05:23:33Z,2018-03-20T05:23:33Z,MERGED,True,442,396,32,https://github.com/anth-cole,Add SBAS position quality,8,[],https://github.com/swift-nav/libsbp/pull/553,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/553#issuecomment-373469905,"This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo","What about velocities? Won't corrections from SBAS impact the doppler derived velocity solution?  Especially if the velocities are coming out of the full Kalman Filter?
what about Time; won't SBAS code corrections impact our timing accuracy as well?
what about our ranges; are we going to correct or change observations at all on the way out based upon info from SBAS?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,553,2018-03-13T22:53:42Z,2018-03-20T05:23:33Z,2018-03-20T05:23:33Z,MERGED,True,442,396,32,https://github.com/anth-cole,Add SBAS position quality,8,[],https://github.com/swift-nav/libsbp/pull/553,https://github.com/anth-cole,5,https://github.com/swift-nav/libsbp/pull/553#issuecomment-373489200,"This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo","@cbeighley done - good point
@denniszollo it'll impact them marginally, but currently we don't apply the rate of change to the doppler obs, and so the velocity solution will still be dominated by the doppler observations and should be roughly the same quality.
SBAS won't impact our time as this comes from the ME single epoch solution and this won't have the SBAS corrections applied. Also, the impact will be really minimal overall even if they were applied. Time also only gets marked 'gps derived' or not gps derived so this fits even with SBAS.
Ranges won't be affected, they'll be broadcast in raw form, and the SBAS corrections also broadcast, so they would need to be applied for any post-processing results",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,553,2018-03-13T22:53:42Z,2018-03-20T05:23:33Z,2018-03-20T05:23:33Z,MERGED,True,442,396,32,https://github.com/anth-cole,Add SBAS position quality,8,[],https://github.com/swift-nav/libsbp/pull/553,https://github.com/switanis,6,https://github.com/swift-nav/libsbp/pull/553#issuecomment-373729490,"This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo","What about NMEA output? How SBAS will be mapped there?
While a separate value will be easier for us and our testing I'm afraid it will be harder for customers as they will have to modify their code to use the new mode. In situation like this we should think about customer first.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,553,2018-03-13T22:53:42Z,2018-03-20T05:23:33Z,2018-03-20T05:23:33Z,MERGED,True,442,396,32,https://github.com/anth-cole,Add SBAS position quality,8,[],https://github.com/swift-nav/libsbp/pull/553,https://github.com/nsirola,7,https://github.com/swift-nav/libsbp/pull/553#issuecomment-373732103,"This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo","@switanis NMEA specification says ""D = Differential mode Corrections from ground stations or Satellite Based Augmentation System (SBAS)"", so it will map both DGNSS and SBAS enums to this same indicator.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,553,2018-03-13T22:53:42Z,2018-03-20T05:23:33Z,2018-03-20T05:23:33Z,MERGED,True,442,396,32,https://github.com/anth-cole,Add SBAS position quality,8,[],https://github.com/swift-nav/libsbp/pull/553,https://github.com/anth-cole,8,https://github.com/swift-nav/libsbp/pull/553#issuecomment-373747097,"This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo","@switanis this is purely the SBP PR, NMEA is handled in a PR in PFWP, that will obviously need updating after this goes in. We have pretty clear design guidelines that prioritize doing a 'clean' design over servicing legacy systems, and I think this fits in that boat.
@cbeighley is this good for you now?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,553,2018-03-13T22:53:42Z,2018-03-20T05:23:33Z,2018-03-20T05:23:33Z,MERGED,True,442,396,32,https://github.com/anth-cole,Add SBAS position quality,8,[],https://github.com/swift-nav/libsbp/pull/553,https://github.com/cbeighley,9,https://github.com/swift-nav/libsbp/pull/553#issuecomment-374283860,"This is the proposal for how to handle SBAS position quality.
I've gone the route of specifying a new position quality flag to indicate SBAS, rather than using the existing DGNSS flag with a second flag indicating SBAS for the following reasons

This is a more 'correct' design, SBAS is not a DGNSS position even if it has similar gross error characteristics
This method actually saves a bit, rather than using a reserved bit for an SBAS indicator on top of the DGNSS flag

Still to do

Add generated code

@denniszollo","@anth-cole Under messages for which only differential solutions are relevant (baseline, heading, others?) you might add - 6: Reserved so that no one uses the SBAS flag for someone else on these messages.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,554,2018-03-15T17:05:12Z,2021-09-28T03:07:03Z,2021-09-28T03:07:03Z,CLOSED,False,8114,5,34,https://github.com/gsmcmullin,Partial Rust support,10,[],https://github.com/swift-nav/libsbp/pull/554,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/554,"This PR implements the SBP message structure definitions and message parsing in Rust from my hackathon project.  There is no message building implemented, and the client code is a little thin.","This PR implements the SBP message structure definitions and message parsing in Rust from my hackathon project.  There is no message building implemented, and the client code is a little thin.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,555,2018-03-18T05:00:11Z,2021-09-28T03:07:04Z,2021-09-28T03:07:04Z,CLOSED,False,26,0,1,https://github.com/kuasha,Update C example to include position/time output,1,[],https://github.com/swift-nav/libsbp/pull/555,https://github.com/kuasha,1,https://github.com/swift-nav/libsbp/pull/555,"The C example for libsbp is great but it took some time to go through the documentation to figure out how to add other callbacks. Adding two more callbacks by default may make the example more clear.
I have added time of week and lat/lon/height output to the example.
Sharing in the hope that others will find it useful as well.","The C example for libsbp is great but it took some time to go through the documentation to figure out how to add other callbacks. Adding two more callbacks by default may make the example more clear.
I have added time of week and lat/lon/height output to the example.
Sharing in the hope that others will find it useful as well.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,556,2018-03-20T23:43:07Z,2018-03-22T16:58:43Z,2019-03-22T00:01:58Z,MERGED,True,1296,876,10,https://github.com/benjaminaltieri,Cell Modem Status Message,3,[],https://github.com/swift-nav/libsbp/pull/556,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/556,"This new message facilitates the reporting of cell modem signal levels. As other information may be beneficial I have looked at a few standard commands and added fields accordingly:
AT+CSQ -> signal_strength, signal_error_rate
AT+CCID -> sim_id
AT+COPS? -> network operator (if present)
AT+CPIN?/AT+CREG?/AT+CGREG? - sim_status (roughly mapped to no sim/unregistered/registered on network)
As this may not be exhaustive, an unspecified field as a variable length array allows for extra length left at the end for as-of-yet unknown fields.
If an argument is made to only include what I currently need for cell signal reporting, I am totally fine doing that as well.","This new message facilitates the reporting of cell modem signal levels. As other information may be beneficial I have looked at a few standard commands and added fields accordingly:
AT+CSQ -> signal_strength, signal_error_rate
AT+CCID -> sim_id
AT+COPS? -> network operator (if present)
AT+CPIN?/AT+CREG?/AT+CGREG? - sim_status (roughly mapped to no sim/unregistered/registered on network)
As this may not be exhaustive, an unspecified field as a variable length array allows for extra length left at the end for as-of-yet unknown fields.
If an argument is made to only include what I currently need for cell signal reporting, I am totally fine doing that as well.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,556,2018-03-20T23:43:07Z,2018-03-22T16:58:43Z,2019-03-22T00:01:58Z,MERGED,True,1296,876,10,https://github.com/benjaminaltieri,Cell Modem Status Message,3,[],https://github.com/swift-nav/libsbp/pull/556,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/556#issuecomment-375082928,"This new message facilitates the reporting of cell modem signal levels. As other information may be beneficial I have looked at a few standard commands and added fields accordingly:
AT+CSQ -> signal_strength, signal_error_rate
AT+CCID -> sim_id
AT+COPS? -> network operator (if present)
AT+CPIN?/AT+CREG?/AT+CGREG? - sim_status (roughly mapped to no sim/unregistered/registered on network)
As this may not be exhaustive, an unspecified field as a variable length array allows for extra length left at the end for as-of-yet unknown fields.
If an argument is made to only include what I currently need for cell signal reporting, I am totally fine doing that as well.","I've removed the currently unused fields and switched the last floating parameter to reserved as suggested.
Generated the products and all tests pass. Final approval anyone?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,557,2018-04-06T21:53:56Z,2018-04-10T02:06:15Z,2018-04-10T02:06:15Z,MERGED,True,62,0,2,https://github.com/mfine,json2json,2,[],https://github.com/swift-nav/libsbp/pull/557,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/557,"re-inflate the sbp json.
/cc @bryanbrady @denniszollo","re-inflate the sbp json.
/cc @bryanbrady @denniszollo",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,558,2018-04-11T23:57:57Z,2018-04-16T18:00:32Z,2018-04-16T18:00:32Z,MERGED,True,1,1,1,https://github.com/mfine,Add Z to end of timestamp,1,[],https://github.com/swift-nav/libsbp/pull/558,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/558,"Append the missing Z to the end of the timestamp. This seems to be the optimal way to handle this in python.
/cc @jck @denniszollo","Append the missing Z to the end of the timestamp. This seems to be the optimal way to handle this in python.
/cc @jck @denniszollo",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,558,2018-04-11T23:57:57Z,2018-04-16T18:00:32Z,2018-04-16T18:00:32Z,MERGED,True,1,1,1,https://github.com/mfine,Add Z to end of timestamp,1,[],https://github.com/swift-nav/libsbp/pull/558,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/558#issuecomment-380631955,"Append the missing Z to the end of the timestamp. This seems to be the optimal way to handle this in python.
/cc @jck @denniszollo",While we're in here... what do you guys think of removing the session-uid - that seems to have been a miss for the most part.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,558,2018-04-11T23:57:57Z,2018-04-16T18:00:32Z,2018-04-16T18:00:32Z,MERGED,True,1,1,1,https://github.com/mfine,Add Z to end of timestamp,1,[],https://github.com/swift-nav/libsbp/pull/558,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/558#issuecomment-381671628,"Append the missing Z to the end of the timestamp. This seems to be the optimal way to handle this in python.
/cc @jck @denniszollo",Ping! Going to bring this in today.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,559,2018-04-13T22:11:13Z,2018-04-17T16:45:54Z,2018-08-01T23:14:50Z,MERGED,True,2207,1043,22,https://github.com/mbavaro,Added Measurement Engine basic tracking state message,4,[],https://github.com/swift-nav/libsbp/pull/559,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/559,"It is instrumental to communicate the state about >63 channels (up to 85) in a single SBP message tracking state. Yes, we are at that point üí™","It is instrumental to communicate the state about >63 channels (up to 85) in a single SBP message tracking state. Yes, we are at that point üí™",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,559,2018-04-13T22:11:13Z,2018-04-17T16:45:54Z,2018-08-01T23:14:50Z,MERGED,True,2207,1043,22,https://github.com/mbavaro,Added Measurement Engine basic tracking state message,4,[],https://github.com/swift-nav/libsbp/pull/559,https://github.com/mbavaro,2,https://github.com/swift-nav/libsbp/pull/559#issuecomment-381291174,"It is instrumental to communicate the state about >63 channels (up to 85) in a single SBP message tracking state. Yes, we are at that point üí™","OK, all green. There is no rush, but unless there are objections this might go in next week.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,559,2018-04-13T22:11:13Z,2018-04-17T16:45:54Z,2018-08-01T23:14:50Z,MERGED,True,2207,1043,22,https://github.com/mbavaro,Added Measurement Engine basic tracking state message,4,[],https://github.com/swift-nav/libsbp/pull/559,https://github.com/mbavaro,3,https://github.com/swift-nav/libsbp/pull/559#issuecomment-382057486,"It is instrumental to communicate the state about >63 channels (up to 85) in a single SBP message tracking state. Yes, we are at that point üí™","no functionality change, simply updated description of the sat field in GnssSignal",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,560,2018-04-28T00:03:32Z,2018-05-08T00:00:02Z,2018-05-08T00:00:02Z,MERGED,True,5,3,3,https://github.com/denniszollo,Add patch version for c source,1,[],https://github.com/swift-nav/libsbp/pull/560,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/560,Per @switanis request.  Informative only.  We might consider same for pdf.,Per @switanis request.  Informative only.  We might consider same for pdf.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,560,2018-04-28T00:03:32Z,2018-05-08T00:00:02Z,2018-05-08T00:00:02Z,MERGED,True,5,3,3,https://github.com/denniszollo,Add patch version for c source,1,[],https://github.com/swift-nav/libsbp/pull/560,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/560#issuecomment-385122804,Per @switanis request.  Informative only.  We might consider same for pdf.,This might break some of the non-C things.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,560,2018-04-28T00:03:32Z,2018-05-08T00:00:02Z,2018-05-08T00:00:02Z,MERGED,True,5,3,3,https://github.com/denniszollo,Add patch version for c source,1,[],https://github.com/swift-nav/libsbp/pull/560,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/560#issuecomment-387237585,Per @switanis request.  Informative only.  We might consider same for pdf.,"I only put it in for the c makefile target, so I think it's okay.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,560,2018-04-28T00:03:32Z,2018-05-08T00:00:02Z,2018-05-08T00:00:02Z,MERGED,True,5,3,3,https://github.com/denniszollo,Add patch version for c source,1,[],https://github.com/swift-nav/libsbp/pull/560,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/560#issuecomment-387237992,Per @switanis request.  Informative only.  We might consider same for pdf.,"Ahh, yeah - that would be good.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/Paakkit,1,https://github.com/swift-nav/libsbp/pull/561,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/Paakkit,2,https://github.com/swift-nav/libsbp/pull/561#issuecomment-386587778,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45",First libsbp PR... let's see how it goes.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/Paakkit,3,https://github.com/swift-nav/libsbp/pull/561#issuecomment-386587967,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45",Lots of auto generated changes...,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/mbavaro,4,https://github.com/swift-nav/libsbp/pull/561#issuecomment-386648695,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","Beidou eph significant bits:

GPS

Galileo",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/mbavaro,5,https://github.com/swift-nav/libsbp/pull/561#issuecomment-386656385,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","also, there is a reason why GNSS send semi-circles and not radians.. that is not to embed the definition of PI in the parameter.. not for this PR because it would have a massive impact on LSNP too, but eventually might make sense to do the same and leave PI to the user",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/Paakkit,6,https://github.com/swift-nav/libsbp/pull/561#issuecomment-386991808,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","pdf contained question marks.
Doc generation needed to be run twice to resolve Latex links.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/Paakkit,7,https://github.com/swift-nav/libsbp/pull/561#issuecomment-386999837,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","@mbavaro I'll update this PR to use floats for Beidou.
Let's consider a new PR for changing the existing messages.
Also, I'd consider this a good moment to introduce the Galileo message.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/Paakkit,8,https://github.com/swift-nav/libsbp/pull/561#issuecomment-387026519,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","I spoke too soon about the floats - array of floats gives an error.
The array of doubles is in https://github.com/swift-nav/libsbp/blob/master/java/src/com/swiftnav/sbp/SBPMessage.java, but floats are not handled.
Having float tgd1 and float tgd2 would work fine.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/mbavaro,9,https://github.com/swift-nav/libsbp/pull/561#issuecomment-387126681,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","I insist... I think adding getArrayofFloat() like this:
https://github.com/swift-nav/libsbp/blob/master/java/src/com/swiftnav/sbp/SBPMessage.java#L159-L164
should be possible.
SBP has some contradictions.. it's designed for minimal payloads (so much that messages are constrained to 255 Bytes) but then our ephemeris messages are completely bloated. Giving it a quick glance, full use of floats here should reduce the bandwidth of that message to around 67% of the original, and show to the GNSS community that we know what we are doing and aren't just using doubles to be on the safe side :)
Happy to hear about your Galileo proposition, let me know if you want to take it or I should.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/anth-cole,10,https://github.com/swift-nav/libsbp/pull/561#issuecomment-387251559,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","so I'll chime in - I absolutely do not want to have the situation where we have BDS ephemeris (and GAL) using floats and the GPS and GAL ones using doubles. Talking to @denniszollo this morning, he suggested if we're trying to optimise bandwidth, is it worth considering going to the raw nav bits? @mbavaro thoughts on this approach? I'm worried about needing to implement an ephemeris decoder everywhere, but it would optimise out throughput.
With the question of floats, I'd either like to convert GPS and GLO messages first and propagate that change through, then add consistent BDS+GAL eph messages, or discuss the idea of adding raw nav messages. I very much agree the current messages are bloated and cause us to have bandwidth spikes.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/Paakkit,11,https://github.com/swift-nav/libsbp/pull/561#issuecomment-387636704,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","This PR has been updated with the suggested changes.
In the meanwhile I'll open a new PR for applying the float changes to the existing ephemeris messages.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/Paakkit,12,https://github.com/swift-nav/libsbp/pull/561#issuecomment-388285162,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","Rebased, and now Travis passes again.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/anth-cole,13,https://github.com/swift-nav/libsbp/pull/561#issuecomment-390375177,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45",lgtm - please merge,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,561,2018-05-04T12:34:53Z,2018-05-21T06:32:26Z,2018-05-21T06:32:31Z,MERGED,True,1078,268,12,https://github.com/Paakkit,Add Beidou ephemeris message,1,[],https://github.com/swift-nav/libsbp/pull/561,https://github.com/mbavaro,14,https://github.com/swift-nav/libsbp/pull/561#issuecomment-390411758,"This PR adds Beidou SBP message.
Beidou has 2 tgd parameters in ephemeris, and thus cannot re-use GPS ephemeris message.
https://swift-nav.atlassian.net/projects/EX/issues/EX-45","@Paakkit I merged the Galileo and broke yours, which I now rebased so it should be good to put in when you're back in the office",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,563,2018-05-08T19:07:45Z,2018-05-19T04:06:20Z,2018-08-01T23:14:48Z,MERGED,True,9307,22138,17,https://github.com/mbavaro,SBP Galileo ephemeris,3,[],https://github.com/swift-nav/libsbp/pull/563,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/563,Adds yet another ephemeris message,Adds yet another ephemeris message,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,564,2018-05-09T10:05:24Z,2018-05-31T10:18:52Z,2018-05-31T10:18:55Z,MERGED,True,2247,434,23,https://github.com/Paakkit,New SBP ephemeris messages with floats,8,[],https://github.com/swift-nav/libsbp/pull/564,https://github.com/Paakkit,1,https://github.com/swift-nav/libsbp/pull/564,"This PR

Adds new GPS, GLO and SBAS ephemeris messages with floats
Adds new EphemerisCommon with float
Adds support for array of floats

Floats for parameters that have significantly less than 23 bit significand.
https://swift-nav.atlassian.net/projects/EX/issues/EX-88","This PR

Adds new GPS, GLO and SBAS ephemeris messages with floats
Adds new EphemerisCommon with float
Adds support for array of floats

Floats for parameters that have significantly less than 23 bit significand.
https://swift-nav.atlassian.net/projects/EX/issues/EX-88",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,564,2018-05-09T10:05:24Z,2018-05-31T10:18:52Z,2018-05-31T10:18:55Z,MERGED,True,2247,434,23,https://github.com/Paakkit,New SBP ephemeris messages with floats,8,[],https://github.com/swift-nav/libsbp/pull/564,https://github.com/Paakkit,2,https://github.com/swift-nav/libsbp/pull/564#issuecomment-388285257,"This PR

Adds new GPS, GLO and SBAS ephemeris messages with floats
Adds new EphemerisCommon with float
Adds support for array of floats

Floats for parameters that have significantly less than 23 bit significand.
https://swift-nav.atlassian.net/projects/EX/issues/EX-88","Rebased, and now Travis passes again.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,565,2018-05-09T16:09:11Z,2018-05-09T16:15:30Z,2018-05-09T16:15:30Z,CLOSED,False,0,0,0,https://github.com/mfine,Fix node,0,[],https://github.com/swift-nav/libsbp/pull/565,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/565,Fix the node builds.,Fix the node builds.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,566,2018-05-09T16:20:49Z,2018-05-09T17:09:49Z,2019-05-20T16:54:11Z,MERGED,True,92,54,3,https://github.com/mfine,Fix node,3,[],https://github.com/swift-nav/libsbp/pull/566,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/566,Fox the node builds.,Fox the node builds.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,567,2018-05-16T09:16:21Z,2018-05-21T10:41:44Z,2018-05-21T10:41:45Z,CLOSED,False,4826,2348,26,https://github.com/Paakkit,[Do not merge] New sbp messages HITL test branch,9,[],https://github.com/swift-nav/libsbp/pull/567,https://github.com/Paakkit,1,https://github.com/swift-nav/libsbp/pull/567,"For HITL testing only.
This PR combines the PRs for new SBP messages.
I'll make some HITL tests to see how various tools behave.","For HITL testing only.
This PR combines the PRs for new SBP messages.
I'll make some HITL tests to see how various tools behave.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,567,2018-05-16T09:16:21Z,2018-05-21T10:41:44Z,2018-05-21T10:41:45Z,CLOSED,False,4826,2348,26,https://github.com/Paakkit,[Do not merge] New sbp messages HITL test branch,9,[],https://github.com/swift-nav/libsbp/pull/567,https://github.com/Paakkit,2,https://github.com/swift-nav/libsbp/pull/567#issuecomment-390619139,"For HITL testing only.
This PR combines the PRs for new SBP messages.
I'll make some HITL tests to see how various tools behave.","Closing this PR.
#564 can be used for testing of new messages.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,568,2018-05-17T20:59:12Z,2018-07-24T19:53:37Z,2018-07-24T19:53:37Z,MERGED,True,287,175,23,https://github.com/denniszollo,Windows c again,3,[],https://github.com/swift-nav/libsbp/pull/568,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/568,"Supercedes #479  @silverjam  How does this suite you based upon feedback from #479?
In Common.h we define TOOLCHAIN_ATTR_PACK.  If MSC is used ,it also defines TOOLCHAIN_PRAGMA PACK.  Header files use these macros.
I think this is the way to go and it is what I had originally.
I really want to get this in, and afterwards then some tests on appveyor and a fleshed out example that Stefan has written.","Supercedes #479  @silverjam  How does this suite you based upon feedback from #479?
In Common.h we define TOOLCHAIN_ATTR_PACK.  If MSC is used ,it also defines TOOLCHAIN_PRAGMA PACK.  Header files use these macros.
I think this is the way to go and it is what I had originally.
I really want to get this in, and afterwards then some tests on appveyor and a fleshed out example that Stefan has written.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,568,2018-05-17T20:59:12Z,2018-07-24T19:53:37Z,2018-07-24T19:53:37Z,MERGED,True,287,175,23,https://github.com/denniszollo,Windows c again,3,[],https://github.com/swift-nav/libsbp/pull/568,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/568#issuecomment-407219250,"Supercedes #479  @silverjam  How does this suite you based upon feedback from #479?
In Common.h we define TOOLCHAIN_ATTR_PACK.  If MSC is used ,it also defines TOOLCHAIN_PRAGMA PACK.  Header files use these macros.
I think this is the way to go and it is what I had originally.
I really want to get this in, and afterwards then some tests on appveyor and a fleshed out example that Stefan has written.","Stefan's feedback on which I am updating for the last time:

put GNU check first in common as it is default
don't use SBP as prefix for macros as it implies it is something about Swift, when in reality it is related to the complier
error if compiler unknown and macros not overridden since this is really an error condition that people should fix sooner rather than later.  This is the conservative approach.

@switanis @ebethon",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,569,2018-05-17T21:58:14Z,2019-04-15T16:17:53Z,2019-04-17T20:45:42Z,MERGED,True,1556,901,12,https://github.com/scarcanague,Correction message,2,[],https://github.com/swift-nav/libsbp/pull/569,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/569,Define an observation-like correction message,Define an observation-like correction message,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,569,2018-05-17T21:58:14Z,2019-04-15T16:17:53Z,2019-04-17T20:45:42Z,MERGED,True,1556,901,12,https://github.com/scarcanague,Correction message,2,[],https://github.com/swift-nav/libsbp/pull/569,https://github.com/benjamin0,2,https://github.com/swift-nav/libsbp/pull/569#issuecomment-482730990,Define an observation-like correction message,üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,570,2018-05-22T01:28:09Z,2021-09-28T03:07:04Z,2021-09-28T03:07:04Z,CLOSED,False,12,8,2,https://github.com/ljbade,Add note on carrier phase observation alignment,3,['User-facing Documentation'],https://github.com/swift-nav/libsbp/pull/570,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/570,"Please check that this matches what we do in firmware. If we decide to add any signal alignments in the future for Galileo we should update this note.
Sorry for the whitespace changes but my editor automatically strips extra whitespace.","Please check that this matches what we do in firmware. If we decide to add any signal alignments in the future for Galileo we should update this note.
Sorry for the whitespace changes but my editor automatically strips extra whitespace.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,571,2018-05-29T11:58:02Z,2018-05-31T11:31:50Z,2018-05-31T11:31:57Z,CLOSED,False,2694,881,25,https://github.com/Paakkit,[Do not merge] sbp message test,10,[],https://github.com/swift-nav/libsbp/pull/571,https://github.com/Paakkit,1,https://github.com/swift-nav/libsbp/pull/571,For testing new SBP messages.,For testing new SBP messages.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,571,2018-05-29T11:58:02Z,2018-05-31T11:31:50Z,2018-05-31T11:31:57Z,CLOSED,False,2694,881,25,https://github.com/Paakkit,[Do not merge] sbp message test,10,[],https://github.com/swift-nav/libsbp/pull/571,https://github.com/Paakkit,2,https://github.com/swift-nav/libsbp/pull/571#issuecomment-393501289,For testing new SBP messages.,"Testing done, and the functionality has been now merged on master.
Closing.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,572,2018-05-29T11:59:41Z,2018-05-31T05:20:24Z,2018-05-31T05:20:27Z,MERGED,True,440,440,12,https://github.com/Paakkit,BDS and GAL ephemeris size fix,3,[],https://github.com/swift-nav/libsbp/pull/572,https://github.com/Paakkit,1,https://github.com/swift-nav/libsbp/pull/572,"Float precision is not enough for idot and dn parameters, due to multiplication with PI.","Float precision is not enough for idot and dn parameters, due to multiplication with PI.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,575,2018-06-13T23:06:53Z,2018-06-13T23:42:26Z,2019-05-20T16:54:14Z,MERGED,True,112,112,2,https://github.com/mfine,Update mocha away from a security vulnerability in growl,1,[],https://github.com/swift-nav/libsbp/pull/575,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/575,"There's a security vulnerability in the dev dependency growl pulled in by mocha. Update mocha.
/cc @cbeighley @nicolekelley","There's a security vulnerability in the dev dependency growl pulled in by mocha. Update mocha.
/cc @cbeighley @nicolekelley",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,576,2018-06-14T03:48:53Z,2019-03-06T01:31:43Z,2019-05-20T16:54:19Z,CLOSED,False,4,1,1,https://github.com/mfine,Force newer python 2.7,4,[],https://github.com/swift-nav/libsbp/pull/576,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/576,Try and force a newer python.,Try and force a newer python.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,577,2018-06-14T05:57:36Z,2018-06-14T06:31:45Z,2018-06-14T06:31:49Z,CLOSED,False,2,0,1,https://github.com/pmiettinen,Set specific python version,1,[],https://github.com/swift-nav/libsbp/pull/577,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/577,As title states.,As title states.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,577,2018-06-14T05:57:36Z,2018-06-14T06:31:45Z,2018-06-14T06:31:49Z,CLOSED,False,2,0,1,https://github.com/pmiettinen,Set specific python version,1,[],https://github.com/swift-nav/libsbp/pull/577,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/577#issuecomment-397186378,As title states.,No desired effect.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,578,2018-06-14T18:07:26Z,2018-06-14T19:04:38Z,2018-06-14T19:04:42Z,MERGED,True,2,1,1,https://github.com/jck,python: pin httpretty to fix tests on travis,1,[],https://github.com/swift-nav/libsbp/pull/578,https://github.com/jck,1,https://github.com/swift-nav/libsbp/pull/578,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,578,2018-06-14T18:07:26Z,2018-06-14T19:04:38Z,2018-06-14T19:04:42Z,MERGED,True,2,1,1,https://github.com/jck,python: pin httpretty to fix tests on travis,1,[],https://github.com/swift-nav/libsbp/pull/578,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/578#issuecomment-397388362,,if it passes,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,579,2018-07-13T15:18:47Z,2018-07-20T10:19:07Z,2018-07-20T10:19:11Z,MERGED,True,1192,332,17,https://github.com/adel-mamin,"SBP_MSG_GNSS_CAPB added, SBP_MSG_SV_CONFIGURATION_GPS removed.",2,[],https://github.com/swift-nav/libsbp/pull/579,https://github.com/adel-mamin,1,https://github.com/swift-nav/libsbp/pull/579,"The planning issue https://swift-nav.atlassian.net/browse/EX-177
Most of it is an autogenerated code.
The only hand-edited code is here:
https://github.com/swift-nav/libsbp/pull/579/files#diff-24386b11c519ebc3cbb3b7728fcf5847R1831","The planning issue https://swift-nav.atlassian.net/browse/EX-177
Most of it is an autogenerated code.
The only hand-edited code is here:
https://github.com/swift-nav/libsbp/pull/579/files#diff-24386b11c519ebc3cbb3b7728fcf5847R1831",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,579,2018-07-13T15:18:47Z,2018-07-20T10:19:07Z,2018-07-20T10:19:11Z,MERGED,True,1192,332,17,https://github.com/adel-mamin,"SBP_MSG_GNSS_CAPB added, SBP_MSG_SV_CONFIGURATION_GPS removed.",2,[],https://github.com/swift-nav/libsbp/pull/579,https://github.com/adel-mamin,2,https://github.com/swift-nav/libsbp/pull/579#issuecomment-406183568,"The planning issue https://swift-nav.atlassian.net/browse/EX-177
Most of it is an autogenerated code.
The only hand-edited code is here:
https://github.com/swift-nav/libsbp/pull/579/files#diff-24386b11c519ebc3cbb3b7728fcf5847R1831",@mbavaro I added b28e8d8 to address your request.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,580,2018-07-27T21:38:01Z,2018-07-31T16:57:12Z,2018-07-31T17:21:24Z,MERGED,True,1,1,1,https://github.com/GuillaumeDec,Update Readme.md,2,[],https://github.com/swift-nav/libsbp/pull/580,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/580,"Later version of lts and sbp were built succesfully.
Previous version did not include json2json.","Later version of lts and sbp were built succesfully.
Previous version did not include json2json.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,581,2018-08-01T18:23:18Z,2018-08-09T20:17:38Z,2018-08-09T20:17:38Z,MERGED,True,10,3,2,https://github.com/denniszollo,Inertial note,1,[],https://github.com/swift-nav/libsbp/pull/581,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/581,/cc @switanis,/cc @switanis,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,582,2018-08-01T20:35:20Z,2018-08-01T23:54:21Z,2019-05-20T16:54:20Z,MERGED,True,7,0,1,https://github.com/mbavaro,CortexA7 rule,1,[],https://github.com/swift-nav/libsbp/pull/582,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/582,"for CMake, self explanatory?","for CMake, self explanatory?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,583,2018-08-01T23:20:11Z,2018-08-02T13:08:00Z,2019-05-20T16:54:21Z,MERGED,True,21,26,1,https://github.com/mbavaro,Put memory packing outside the COMMON_INT_TYPES macro,1,[],https://github.com/swift-nav/libsbp/pull/583,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/583,When combined with LSN/common.h the current arrangement causes quite a bit of problems..,When combined with LSN/common.h the current arrangement causes quite a bit of problems..,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,583,2018-08-01T23:20:11Z,2018-08-02T13:08:00Z,2019-05-20T16:54:21Z,MERGED,True,21,26,1,https://github.com/mbavaro,Put memory packing outside the COMMON_INT_TYPES macro,1,[],https://github.com/swift-nav/libsbp/pull/583,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/583#issuecomment-409790269,When combined with LSN/common.h the current arrangement causes quite a bit of problems..,"Man, I'm not good with this stuff - I think @denniszollo had something around this #479 back in the day.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,583,2018-08-01T23:20:11Z,2018-08-02T13:08:00Z,2019-05-20T16:54:21Z,MERGED,True,21,26,1,https://github.com/mbavaro,Put memory packing outside the COMMON_INT_TYPES macro,1,[],https://github.com/swift-nav/libsbp/pull/583,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/583#issuecomment-409793031,When combined with LSN/common.h the current arrangement causes quite a bit of problems..,What kind of problems does it cause? @mbavaro?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,583,2018-08-01T23:20:11Z,2018-08-02T13:08:00Z,2019-05-20T16:54:21Z,MERGED,True,21,26,1,https://github.com/mbavaro,Put memory packing outside the COMMON_INT_TYPES macro,1,[],https://github.com/swift-nav/libsbp/pull/583,https://github.com/mbavaro,4,https://github.com/swift-nav/libsbp/pull/583#issuecomment-409801798,When combined with LSN/common.h the current arrangement causes quite a bit of problems..,"When compiling code that has dependencies with both libswiftnav and libsbp, one bumps on this
https://github.com/swift-nav/libswiftnav/blob/master/include/libswiftnav/common.h#L30
which defines our int types (s8, u16, ...) and just those.
However, the #ifdef in libsbp holds these packing pragmas too..
https://github.com/swift-nav/libsbp/blob/master/c/include/libsbp/common.h#L27-L48
So depending on the include order (if the LSN common.h is included first) those aren't seen by the pre-compiler and so a bunch of declarations like
https://github.com/swift-nav/libsbp/blob/master/c/include/libsbp/gnss.h#L28
and
https://github.com/swift-nav/libsbp/blob/master/c/include/libsbp/gnss.h#L48
throw errors...
I don't see why those pre-processor macros should go inside COMMON_INT_TYPES.. I must be missing something?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,583,2018-08-01T23:20:11Z,2018-08-02T13:08:00Z,2019-05-20T16:54:21Z,MERGED,True,21,26,1,https://github.com/mbavaro,Put memory packing outside the COMMON_INT_TYPES macro,1,[],https://github.com/swift-nav/libsbp/pull/583,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/583#issuecomment-409823349,When combined with LSN/common.h the current arrangement causes quite a bit of problems..,"@mbavaro I wanted to double check the actual error, but given that, this change looks correct, it definitely makes sense that it shouldn't be inside the COMMON_INT_TYPES guard.",True,{'THUMBS_UP': ['https://github.com/mbavaro']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,583,2018-08-01T23:20:11Z,2018-08-02T13:08:00Z,2019-05-20T16:54:21Z,MERGED,True,21,26,1,https://github.com/mbavaro,Put memory packing outside the COMMON_INT_TYPES macro,1,[],https://github.com/swift-nav/libsbp/pull/583,https://github.com/denniszollo,6,https://github.com/swift-nav/libsbp/pull/583#issuecomment-411874833,When combined with LSN/common.h the current arrangement causes quite a bit of problems..,Don't we need another preprocessor guard so these macros aren't redefined each time the file is included then ?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,583,2018-08-01T23:20:11Z,2018-08-02T13:08:00Z,2019-05-20T16:54:21Z,MERGED,True,21,26,1,https://github.com/mbavaro,Put memory packing outside the COMMON_INT_TYPES macro,1,[],https://github.com/swift-nav/libsbp/pull/583,https://github.com/denniszollo,7,https://github.com/swift-nav/libsbp/pull/583#issuecomment-411874937,When combined with LSN/common.h the current arrangement causes quite a bit of problems..,My bad team.  Glad you sorted it out.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,584,2018-08-04T00:25:04Z,2018-08-28T19:13:05Z,2018-08-28T19:13:06Z,MERGED,True,2,0,1,https://github.com/denniszollo,Propagated time flag,1,[],https://github.com/swift-nav/libsbp/pull/584,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/584,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,585,2018-08-04T00:56:11Z,2018-08-29T23:22:17Z,2019-05-20T16:53:09Z,MERGED,True,314,292,132,https://github.com/mbavaro,Change `read()` and `write()` api from `size_t` to `ssize_t`,6,[],https://github.com/swift-nav/libsbp/pull/585,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/585,"It's a long story.. but right now sbp_process() does not have a way to distinguish a failed read() from a timed-out read() as the return type is u32:
u32 (*read)(u8 *buff, u32 n, void* context)
In order to align the function prototype with the common Linux man read(2), the prototype is changed to signed int (rather than unsigned) and a SBP error is thrown when the read() fails.
This helps distinguishing error conditions like a USB-serial adapter cable being disconnected from short
reads.
Also, clang-format applied with the standards in LSN.","It's a long story.. but right now sbp_process() does not have a way to distinguish a failed read() from a timed-out read() as the return type is u32:
u32 (*read)(u8 *buff, u32 n, void* context)
In order to align the function prototype with the common Linux man read(2), the prototype is changed to signed int (rather than unsigned) and a SBP error is thrown when the read() fails.
This helps distinguishing error conditions like a USB-serial adapter cable being disconnected from short
reads.
Also, clang-format applied with the standards in LSN.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,585,2018-08-04T00:56:11Z,2018-08-29T23:22:17Z,2019-05-20T16:53:09Z,MERGED,True,314,292,132,https://github.com/mbavaro,Change `read()` and `write()` api from `size_t` to `ssize_t`,6,[],https://github.com/swift-nav/libsbp/pull/585,https://github.com/gsmcmullin,2,https://github.com/swift-nav/libsbp/pull/585#issuecomment-410568492,"It's a long story.. but right now sbp_process() does not have a way to distinguish a failed read() from a timed-out read() as the return type is u32:
u32 (*read)(u8 *buff, u32 n, void* context)
In order to align the function prototype with the common Linux man read(2), the prototype is changed to signed int (rather than unsigned) and a SBP error is thrown when the read() fails.
This helps distinguishing error conditions like a USB-serial adapter cable being disconnected from short
reads.
Also, clang-format applied with the standards in LSN.","I agree signed values should be returned by read/write and errors should be propagated up.
It's very difficult to separate the signal from the noise in the diff. I seriously question the 37,865 lines removed, and the clang-format makes it harder to read.  What happened to Linux style?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,585,2018-08-04T00:56:11Z,2018-08-29T23:22:17Z,2019-05-20T16:53:09Z,MERGED,True,314,292,132,https://github.com/mbavaro,Change `read()` and `write()` api from `size_t` to `ssize_t`,6,[],https://github.com/swift-nav/libsbp/pull/585,https://github.com/mbavaro,3,https://github.com/swift-nav/libsbp/pull/585#issuecomment-410714265,"It's a long story.. but right now sbp_process() does not have a way to distinguish a failed read() from a timed-out read() as the return type is u32:
u32 (*read)(u8 *buff, u32 n, void* context)
In order to align the function prototype with the common Linux man read(2), the prototype is changed to signed int (rather than unsigned) and a SBP error is thrown when the read() fails.
This helps distinguishing error conditions like a USB-serial adapter cable being disconnected from short
reads.
Also, clang-format applied with the standards in LSN.","Thanks Gareth, I agree across the board with your comments.
I also just intended to change the API, but then tests started failing. I think some of them are automatically generated, but not all. I cleaned the tests folder and that is why so many lines of codes went.  I will split this PR in 3 parts:

minimal API change
propagate API change to sbp_process() with the addition of a new SBP_ return value
add a .clang_format for the C library.. did you mean this one https://github.com/torvalds/linux/blob/master/.clang-format ?

update: what I'll actually do:

minimal API and generator change (some tests will be broken in Travis)
commit that adds the auto-generated tests (still failing)
replace the duplicated code which isn't auto-generated so that tests pass
add a .clang_format for the C library.. perhaps this one https://github.com/torvalds/linux/blob/master/.clang-format ?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,585,2018-08-04T00:56:11Z,2018-08-29T23:22:17Z,2019-05-20T16:53:09Z,MERGED,True,314,292,132,https://github.com/mbavaro,Change `read()` and `write()` api from `size_t` to `ssize_t`,6,[],https://github.com/swift-nav/libsbp/pull/585,https://github.com/mbavaro,4,https://github.com/swift-nav/libsbp/pull/585#issuecomment-410761746,"It's a long story.. but right now sbp_process() does not have a way to distinguish a failed read() from a timed-out read() as the return type is u32:
u32 (*read)(u8 *buff, u32 n, void* context)
In order to align the function prototype with the common Linux man read(2), the prototype is changed to signed int (rather than unsigned) and a SBP error is thrown when the read() fails.
This helps distinguishing error conditions like a USB-serial adapter cable being disconnected from short
reads.
Also, clang-format applied with the standards in LSN.","@gsmcmullin I believe this is the minimum required to change the API to signed.
Note that this change is not even propagated in sbp_process() yet.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,585,2018-08-04T00:56:11Z,2018-08-29T23:22:17Z,2019-05-20T16:53:09Z,MERGED,True,314,292,132,https://github.com/mbavaro,Change `read()` and `write()` api from `size_t` to `ssize_t`,6,[],https://github.com/swift-nav/libsbp/pull/585,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/585#issuecomment-410773671,"It's a long story.. but right now sbp_process() does not have a way to distinguish a failed read() from a timed-out read() as the return type is u32:
u32 (*read)(u8 *buff, u32 n, void* context)
In order to align the function prototype with the common Linux man read(2), the prototype is changed to signed int (rather than unsigned) and a SBP error is thrown when the read() fails.
This helps distinguishing error conditions like a USB-serial adapter cable being disconnected from short
reads.
Also, clang-format applied with the standards in LSN.","@mbavaro if you change the passed in values to signed, should you not also update the logic in sbp_process to handle negative returned values instead of just adding it to s->n_read which is common?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,585,2018-08-04T00:56:11Z,2018-08-29T23:22:17Z,2019-05-20T16:53:09Z,MERGED,True,314,292,132,https://github.com/mbavaro,Change `read()` and `write()` api from `size_t` to `ssize_t`,6,[],https://github.com/swift-nav/libsbp/pull/585,https://github.com/denniszollo,6,https://github.com/swift-nav/libsbp/pull/585#issuecomment-410800737,"It's a long story.. but right now sbp_process() does not have a way to distinguish a failed read() from a timed-out read() as the return type is u32:
u32 (*read)(u8 *buff, u32 n, void* context)
In order to align the function prototype with the common Linux man read(2), the prototype is changed to signed int (rather than unsigned) and a SBP error is thrown when the read() fails.
This helps distinguishing error conditions like a USB-serial adapter cable being disconnected from short
reads.
Also, clang-format applied with the standards in LSN.","I think we also need to update example here:
https://github.com/swift-nav/libsbp/blob/master/c/example/example.c#L69",True,{'THUMBS_UP': ['https://github.com/mbavaro']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,585,2018-08-04T00:56:11Z,2018-08-29T23:22:17Z,2019-05-20T16:53:09Z,MERGED,True,314,292,132,https://github.com/mbavaro,Change `read()` and `write()` api from `size_t` to `ssize_t`,6,[],https://github.com/swift-nav/libsbp/pull/585,https://github.com/mbavaro,7,https://github.com/swift-nav/libsbp/pull/585#issuecomment-411888163,"It's a long story.. but right now sbp_process() does not have a way to distinguish a failed read() from a timed-out read() as the return type is u32:
u32 (*read)(u8 *buff, u32 n, void* context)
In order to align the function prototype with the common Linux man read(2), the prototype is changed to signed int (rather than unsigned) and a SBP error is thrown when the read() fails.
This helps distinguishing error conditions like a USB-serial adapter cable being disconnected from short
reads.
Also, clang-format applied with the standards in LSN.","I think it depends on compiler settings.. it does not seem to upset the example;
https://github.com/swift-nav/libsbp/blob/master/c/example/example.c#L74
that we convert from signed
https://www.sigrok.org/api/libserialport/0.1.0/a00008.html#ga4c6aa5ea99d787e9336bab9d977463e4
to u32 before returning...
another approach would be to update the API to the new and deprecate explicitly the current https://github.com/swift-nav/libsbp/blob/master/c/example/example.c#L69
as it is done for messages..",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,585,2018-08-04T00:56:11Z,2018-08-29T23:22:17Z,2019-05-20T16:53:09Z,MERGED,True,314,292,132,https://github.com/mbavaro,Change `read()` and `write()` api from `size_t` to `ssize_t`,6,[],https://github.com/swift-nav/libsbp/pull/585,https://github.com/mbavaro,8,https://github.com/swift-nav/libsbp/pull/585#issuecomment-417138908,"It's a long story.. but right now sbp_process() does not have a way to distinguish a failed read() from a timed-out read() as the return type is u32:
u32 (*read)(u8 *buff, u32 n, void* context)
In order to align the function prototype with the common Linux man read(2), the prototype is changed to signed int (rather than unsigned) and a SBP error is thrown when the read() fails.
This helps distinguishing error conditions like a USB-serial adapter cable being disconnected from short
reads.
Also, clang-format applied with the standards in LSN.",Going to merge these changes!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,586,2018-08-07T04:29:37Z,2018-08-07T04:37:35Z,2019-05-20T16:54:24Z,MERGED,True,2,5,3,https://github.com/mfine,Turn off extra warnings,2,[],https://github.com/swift-nav/libsbp/pull/586,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/586,And remove old includes.,And remove old includes.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,587,2018-08-08T00:04:05Z,2018-08-08T00:04:45Z,2018-08-08T00:04:45Z,MERGED,True,3,0,1,https://github.com/denniszollo,Add units for magnetometer,1,[],https://github.com/swift-nav/libsbp/pull/587,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/587,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,588,2018-08-08T01:00:43Z,2018-08-08T17:56:59Z,2018-08-08T17:56:59Z,MERGED,True,85,399,9,https://github.com/denniszollo,V2.4.0 branch,2,[],https://github.com/swift-nav/libsbp/pull/588,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/588,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,589,2018-08-14T00:51:14Z,2018-08-14T00:51:23Z,2018-08-14T00:51:23Z,MERGED,True,12,8,2,https://github.com/denniszollo,Note about carrier phase alignment,3,[],https://github.com/swift-nav/libsbp/pull/589,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/589,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,590,2018-08-15T17:05:02Z,2018-08-20T23:09:59Z,2018-08-20T23:09:59Z,MERGED,True,4,0,2,https://github.com/denniszollo,Doc signal bds gal,4,[],https://github.com/swift-nav/libsbp/pull/590,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/590,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,591,2018-08-24T16:05:57Z,2018-08-26T00:54:27Z,2019-05-20T16:54:26Z,MERGED,True,5,1,2,https://github.com/scarcanague,Add SSR messages to Libsbp,1,[],https://github.com/swift-nav/libsbp/pull/591,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/591,"SSR messages are currently rejected by GNSS analysis:
No message found for msg_type id 1510 for msg <SBP...

as they are not in the sbp table","SSR messages are currently rejected by GNSS analysis:
No message found for msg_type id 1510 for msg <SBP...

as they are not in the sbp table",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,592,2018-08-27T18:15:52Z,2018-10-03T15:58:37Z,2018-10-03T15:59:42Z,CLOSED,False,3,5,2,https://github.com/mbavaro,Build `libsbp.a` instead of `libsbp-static.a`,2,[],https://github.com/swift-nav/libsbp/pull/592,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/592,"This works better for me in a CMake driven build system where specifying cmake ../ -DCMAKE_SYSTEM_NAME=Linux -DBUILD_SHARED_LIBS=OFF naturally links statically LIBSBP.
Without this, the linker needs to know the libsbp static library is called something else (libsbp-static.a). I am not sure why that would be as the name wouldn't conflict with the dynamically linked one..","This works better for me in a CMake driven build system where specifying cmake ../ -DCMAKE_SYSTEM_NAME=Linux -DBUILD_SHARED_LIBS=OFF naturally links statically LIBSBP.
Without this, the linker needs to know the libsbp static library is called something else (libsbp-static.a). I am not sure why that would be as the name wouldn't conflict with the dynamically linked one..",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,592,2018-08-27T18:15:52Z,2018-10-03T15:58:37Z,2018-10-03T15:59:42Z,CLOSED,False,3,5,2,https://github.com/mbavaro,Build `libsbp.a` instead of `libsbp-static.a`,2,[],https://github.com/swift-nav/libsbp/pull/592,https://github.com/mbavaro,2,https://github.com/swift-nav/libsbp/pull/592#issuecomment-426692673,"This works better for me in a CMake driven build system where specifying cmake ../ -DCMAKE_SYSTEM_NAME=Linux -DBUILD_SHARED_LIBS=OFF naturally links statically LIBSBP.
Without this, the linker needs to know the libsbp static library is called something else (libsbp-static.a). I am not sure why that would be as the name wouldn't conflict with the dynamically linked one..",Obsoleted by #594 I think,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,593,2018-08-30T00:49:53Z,2018-10-03T00:05:14Z,2018-10-03T00:05:16Z,CLOSED,False,491,434,23,https://github.com/mbavaro,Regenerated files,1,[],https://github.com/swift-nav/libsbp/pull/593,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/593,For some reasons these have not been regenerated (so the documentation isn't up to date),For some reasons these have not been regenerated (so the documentation isn't up to date),True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,594,2018-09-19T01:11:57Z,2018-09-20T21:43:51Z,2018-09-20T21:43:54Z,MERGED,True,30,17,1,https://github.com/martin-swift,Get rid of separate target for static library and stop fiddling BUILD‚Ä¶,1,[],https://github.com/swift-nav/libsbp/pull/594,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/594,‚Ä¶_SHARED_LIBS flag.,‚Ä¶_SHARED_LIBS flag.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,594,2018-09-19T01:11:57Z,2018-09-20T21:43:51Z,2018-09-20T21:43:54Z,MERGED,True,30,17,1,https://github.com/martin-swift,Get rid of separate target for static library and stop fiddling BUILD‚Ä¶,1,[],https://github.com/swift-nav/libsbp/pull/594,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/594#issuecomment-422623133,‚Ä¶_SHARED_LIBS flag.,"Trying understand if this would be breaking any downstream projects, a quick github search definitely shows that if nothing else we should document this change in behavior.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,594,2018-09-19T01:11:57Z,2018-09-20T21:43:51Z,2018-09-20T21:43:54Z,MERGED,True,30,17,1,https://github.com/martin-swift,Get rid of separate target for static library and stop fiddling BUILD‚Ä¶,1,[],https://github.com/swift-nav/libsbp/pull/594,https://github.com/martin-swift,3,https://github.com/swift-nav/libsbp/pull/594#issuecomment-422646239,‚Ä¶_SHARED_LIBS flag.,"@benjaminaltieri actually, yeah, let me look at that tomorrow.  as far as I can tell, we should not be setting BUILD_SHARED_LIBS at all in the CMake.  We can then pass it in as a build option and get either a static or dynamic linkage cooked to order.  If there are places where it only makes sense to do something in one case or the other, we can test it.  I am aware that it might cause (hopefully minor) breakage downstream, but my thesis is that we should update their CMake if it happens.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,594,2018-09-19T01:11:57Z,2018-09-20T21:43:51Z,2018-09-20T21:43:54Z,MERGED,True,30,17,1,https://github.com/martin-swift,Get rid of separate target for static library and stop fiddling BUILD‚Ä¶,1,[],https://github.com/swift-nav/libsbp/pull/594,https://github.com/nsirola,4,https://github.com/swift-nav/libsbp/pull/594#issuecomment-422717360,‚Ä¶_SHARED_LIBS flag.,At least piksi_firmware_private builds with minimal changes: https://github.com/swift-nav/piksi_firmware_private/pull/2350,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,594,2018-09-19T01:11:57Z,2018-09-20T21:43:51Z,2018-09-20T21:43:54Z,MERGED,True,30,17,1,https://github.com/martin-swift,Get rid of separate target for static library and stop fiddling BUILD‚Ä¶,1,[],https://github.com/swift-nav/libsbp/pull/594,https://github.com/martin-swift,5,https://github.com/swift-nav/libsbp/pull/594#issuecomment-423336067,‚Ä¶_SHARED_LIBS flag.,I want to merge this; @mbavaro has given his approval - last call for objections!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,594,2018-09-19T01:11:57Z,2018-09-20T21:43:51Z,2018-09-20T21:43:54Z,MERGED,True,30,17,1,https://github.com/martin-swift,Get rid of separate target for static library and stop fiddling BUILD‚Ä¶,1,[],https://github.com/swift-nav/libsbp/pull/594,https://github.com/benjaminaltieri,6,https://github.com/swift-nav/libsbp/pull/594#issuecomment-423337342,‚Ä¶_SHARED_LIBS flag.,go for it!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,595,2018-09-19T20:27:22Z,2018-09-22T05:37:03Z,2018-09-22T05:37:09Z,MERGED,True,48,4,2,https://github.com/silverjam,Setup Travis CI to build Haskell based SBP tools,3,[],https://github.com/swift-nav/libsbp/pull/595,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/595,"Setup Travis CI so we can publish Debian Stretch based builds of sbp2json, sbp2yaml, json2sbp, and json2json


Fix the Python version on Travis to 2.7.13, Travis seemed to have regressed to a version prior to 2.7.9 (or possibly 2.7.14) where the SSLContext object was not present in the ssl package.  See travis-ci/travis-ci#8097 and gabrielfalcao/HTTPretty#340.","Setup Travis CI so we can publish Debian Stretch based builds of sbp2json, sbp2yaml, json2sbp, and json2json


Fix the Python version on Travis to 2.7.13, Travis seemed to have regressed to a version prior to 2.7.9 (or possibly 2.7.14) where the SSLContext object was not present in the ssl package.  See travis-ci/travis-ci#8097 and gabrielfalcao/HTTPretty#340.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,595,2018-09-19T20:27:22Z,2018-09-22T05:37:03Z,2018-09-22T05:37:09Z,MERGED,True,48,4,2,https://github.com/silverjam,Setup Travis CI to build Haskell based SBP tools,3,[],https://github.com/swift-nav/libsbp/pull/595,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/595#issuecomment-423374511,"Setup Travis CI so we can publish Debian Stretch based builds of sbp2json, sbp2yaml, json2sbp, and json2json


Fix the Python version on Travis to 2.7.13, Travis seemed to have regressed to a version prior to 2.7.9 (or possibly 2.7.14) where the SSLContext object was not present in the ssl package.  See travis-ci/travis-ci#8097 and gabrielfalcao/HTTPretty#340.",@mfine @dzollo Can I merge this,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,595,2018-09-19T20:27:22Z,2018-09-22T05:37:03Z,2018-09-22T05:37:09Z,MERGED,True,48,4,2,https://github.com/silverjam,Setup Travis CI to build Haskell based SBP tools,3,[],https://github.com/swift-nav/libsbp/pull/595,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/595#issuecomment-423378600,"Setup Travis CI so we can publish Debian Stretch based builds of sbp2json, sbp2yaml, json2sbp, and json2json


Fix the Python version on Travis to 2.7.13, Travis seemed to have regressed to a version prior to 2.7.9 (or possibly 2.7.14) where the SSLContext object was not present in the ssl package.  See travis-ci/travis-ci#8097 and gabrielfalcao/HTTPretty#340.",sure,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,595,2018-09-19T20:27:22Z,2018-09-22T05:37:03Z,2018-09-22T05:37:09Z,MERGED,True,48,4,2,https://github.com/silverjam,Setup Travis CI to build Haskell based SBP tools,3,[],https://github.com/swift-nav/libsbp/pull/595,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/595#issuecomment-423381640,"Setup Travis CI so we can publish Debian Stretch based builds of sbp2json, sbp2yaml, json2sbp, and json2json


Fix the Python version on Travis to 2.7.13, Travis seemed to have regressed to a version prior to 2.7.9 (or possibly 2.7.14) where the SSLContext object was not present in the ssl package.  See travis-ci/travis-ci#8097 and gabrielfalcao/HTTPretty#340.",merge away.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,596,2018-09-20T01:09:18Z,2021-09-28T03:07:04Z,2021-09-28T03:07:04Z,CLOSED,False,2065,1972,25,https://github.com/ljbade,Update MSG_BASELINE_NED description,4,[],https://github.com/swift-nav/libsbp/pull/596,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/596,"Updates the MSG_BASELINE_NED documentation to reflect swift-nav/piksi_firmware_private#2355 as well as the bug in earlier firmware versions.
Not sure exactly which firmware we will put this into, but will update version number if needed.","Updates the MSG_BASELINE_NED documentation to reflect swift-nav/piksi_firmware_private#2355 as well as the bug in earlier firmware versions.
Not sure exactly which firmware we will put this into, but will update version number if needed.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,597,2018-09-20T04:57:45Z,2018-10-02T23:37:52Z,2019-05-20T16:53:05Z,MERGED,True,488,431,23,https://github.com/mbavaro,Regenerated files,1,[],https://github.com/swift-nav/libsbp/pull/597,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/597,This passes locally,This passes locally,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,598,2018-09-21T20:35:09Z,2018-09-25T17:27:18Z,2018-09-25T17:38:26Z,CLOSED,False,15,14,2,https://github.com/jkretzmer,Updated INS Status message,5,[],https://github.com/swift-nav/libsbp/pull/598,https://github.com/jkretzmer,1,https://github.com/swift-nav/libsbp/pull/598,This PR updates the definition of the INS Status message based on discussions with CRL.,This PR updates the definition of the INS Status message based on discussions with CRL.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,598,2018-09-21T20:35:09Z,2018-09-25T17:27:18Z,2018-09-25T17:38:26Z,CLOSED,False,15,14,2,https://github.com/jkretzmer,Updated INS Status message,5,[],https://github.com/swift-nav/libsbp/pull/598,https://github.com/jkretzmer,2,https://github.com/swift-nav/libsbp/pull/598#issuecomment-424431162,This PR updates the definition of the INS Status message based on discussions with CRL.,cleaning up against current master.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,599,2018-09-21T22:57:38Z,2018-10-03T00:56:26Z,2019-05-20T16:56:53Z,MERGED,True,18,18,8,https://github.com/scarcanague,SSR IOD should be 10bits for GAL and BDS,2,[],https://github.com/swift-nav/libsbp/pull/599,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/599,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,601,2018-09-25T17:43:00Z,2018-09-26T17:38:23Z,2019-05-20T16:56:46Z,MERGED,True,16,15,1,https://github.com/jkretzmer,new ins status message definition as discussed with CRL,1,[],https://github.com/swift-nav/libsbp/pull/601,https://github.com/jkretzmer,1,https://github.com/swift-nav/libsbp/pull/601,adding new ins status definition.,adding new ins status definition.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,601,2018-09-25T17:43:00Z,2018-09-26T17:38:23Z,2019-05-20T16:56:46Z,MERGED,True,16,15,1,https://github.com/jkretzmer,new ins status message definition as discussed with CRL,1,[],https://github.com/swift-nav/libsbp/pull/601,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/601#issuecomment-424795471,adding new ins status definition.,LGTM,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,602,2018-10-01T17:52:30Z,2018-10-02T23:35:19Z,2019-05-20T16:56:47Z,MERGED,True,2,1,1,https://github.com/kmdade,Add sentence explaining how to find the measurement units.,1,[],https://github.com/swift-nav/libsbp/pull/602,https://github.com/kmdade,1,https://github.com/swift-nav/libsbp/pull/602,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,603,2018-10-03T00:47:11Z,2018-10-03T00:47:33Z,2018-10-03T00:47:34Z,MERGED,True,1,1,1,https://github.com/denniszollo,re-add space on ins-status message description,1,[],https://github.com/swift-nav/libsbp/pull/603,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/603,Avoiding unnecessary changes in generated files by re-adding this errant space,Avoiding unnecessary changes in generated files by re-adding this errant space,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,604,2018-10-03T01:09:08Z,2018-10-03T01:09:14Z,2018-10-03T01:09:14Z,MERGED,True,225,196,12,https://github.com/denniszollo,V2.4.1 branch,2,[],https://github.com/swift-nav/libsbp/pull/604,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/604,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,605,2018-10-03T01:11:36Z,2018-10-03T01:11:42Z,2018-10-03T01:11:42Z,MERGED,True,0,0,1,https://github.com/denniszollo,Add 2.4.1 pdf,1,[],https://github.com/swift-nav/libsbp/pull/605,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/605,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,606,2018-10-03T01:26:31Z,2018-10-16T23:12:47Z,2018-10-16T23:12:47Z,MERGED,True,229,229,2,https://github.com/denniszollo,Make generator for java have deterministic ordering,1,[],https://github.com/swift-nav/libsbp/pull/606,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/606,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,607,2018-10-03T17:54:47Z,2018-10-08T14:34:57Z,2018-10-08T14:34:57Z,MERGED,True,179,0,3,https://github.com/denniszollo,Jkretzmer/tcp example,2,[],https://github.com/swift-nav/libsbp/pull/607,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/607,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,608,2018-10-04T23:55:19Z,2018-10-05T00:26:39Z,2019-05-20T16:56:52Z,MERGED,True,278,278,9,https://github.com/scarcanague,IOD of the SSR corrections,2,[],https://github.com/swift-nav/libsbp/pull/608,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/608,To be able to fit the IODCRC from Beidou which is on 24 bits,To be able to fit the IODCRC from Beidou which is on 24 bits,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,609,2018-10-05T18:48:23Z,2018-10-05T21:29:56Z,2019-05-20T16:56:50Z,MERGED,True,762,207,11,https://github.com/scarcanague,Deprecate old orbit/clock message,3,[],https://github.com/swift-nav/libsbp/pull/609,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/609,In order to ensure retro-compatibility,In order to ensure retro-compatibility,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,610,2018-10-08T17:17:28Z,2018-10-10T03:39:10Z,2018-10-10T03:39:10Z,MERGED,True,10,4,1,https://github.com/yiiiyang2010,Add cmake toolchain support for cortex-m7,5,[],https://github.com/swift-nav/libsbp/pull/610,https://github.com/yiiiyang2010,1,https://github.com/swift-nav/libsbp/pull/610,set fpu as -mfpu=fpv5-d16 for supporting double precision floating point for fpu v5.,set fpu as -mfpu=fpv5-d16 for supporting double precision floating point for fpu v5.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,612,2018-10-17T05:50:47Z,2018-10-27T01:24:37Z,2018-10-27T01:24:42Z,MERGED,True,2419,11,29,https://github.com/silverjam,Resource monitor support [DEVC-1074],11,[],https://github.com/swift-nav/libsbp/pull/612,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/612,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,613,2018-10-27T01:38:17Z,2018-10-27T01:39:01Z,2018-10-27T01:39:06Z,MERGED,True,13,0,1,https://github.com/silverjam,Release v2.4.2,1,[],https://github.com/swift-nav/libsbp/pull/613,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/613,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,614,2018-11-09T00:06:59Z,2021-09-28T03:07:05Z,2021-09-28T03:07:05Z,CLOSED,False,115,2,4,https://github.com/denniszollo,Perf test only,4,[],https://github.com/swift-nav/libsbp/pull/614,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/614,"This PR adds some dead simple performance tests to Python clients with real live Piksi Multi Data.  Right now, we fail the performance tests as written.  I think, however, that we should be able to iterate through the 195 kB log used for the tests in one second.
Coming soon: a version that CAN pass these tests.","This PR adds some dead simple performance tests to Python clients with real live Piksi Multi Data.  Right now, we fail the performance tests as written.  I think, however, that we should be able to iterate through the 195 kB log used for the tests in one second.
Coming soon: a version that CAN pass these tests.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,615,2018-11-09T00:10:42Z,2021-09-28T03:07:05Z,2021-09-28T03:07:05Z,CLOSED,False,172,3,6,https://github.com/denniszollo,Hand code msg obs,7,[],https://github.com/swift-nav/libsbp/pull/615,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/615,"This PR replaces the stock parser for MsgObs with a hand coded one that uses a little less recursion that the constructs ""greedy"" processor will.  The goal is to show a performance improvement by reducing reliance on construct.","This PR replaces the stock parser for MsgObs with a hand coded one that uses a little less recursion that the constructs ""greedy"" processor will.  The goal is to show a performance improvement by reducing reliance on construct.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,616,2018-11-09T17:33:17Z,2018-11-13T22:15:30Z,2018-11-13T22:15:31Z,MERGED,True,593,5,15,https://github.com/yiiiyang2010,Resource monitor file descriptor query sbp message[ESD-231][ESD-232],3,[],https://github.com/swift-nav/libsbp/pull/616,https://github.com/yiiiyang2010,1,https://github.com/swift-nav/libsbp/pull/616,Added message SBP_MSG_LINUX_PROCESS_FD_SUMMARY and SBP_MSG_LINUX_PROCESS_FD_COUNT for [ESD-231][ESD-232],Added message SBP_MSG_LINUX_PROCESS_FD_SUMMARY and SBP_MSG_LINUX_PROCESS_FD_COUNT for [ESD-231][ESD-232],True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,617,2018-11-13T05:40:20Z,2018-11-13T23:54:41Z,2019-03-22T00:01:52Z,MERGED,True,5,4,1,https://github.com/benjaminaltieri,Modify initial connect logic for piksi_tools to catch on timeouts [ESD-632],5,[],https://github.com/swift-nav/libsbp/pull/617,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/617,Proposed fix for https://swift-nav.atlassian.net/browse/ESD-632,Proposed fix for https://swift-nav.atlassian.net/browse/ESD-632,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,617,2018-11-13T05:40:20Z,2018-11-13T23:54:41Z,2019-03-22T00:01:52Z,MERGED,True,5,4,1,https://github.com/benjaminaltieri,Modify initial connect logic for piksi_tools to catch on timeouts [ESD-632],5,[],https://github.com/swift-nav/libsbp/pull/617,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/617#issuecomment-438371850,Proposed fix for https://swift-nav.atlassian.net/browse/ESD-632,Great. @dzollo let me know if you see any issues - otherwise I'll go ahead and merge,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,618,2018-11-14T21:35:53Z,2018-11-15T00:27:18Z,2018-11-15T00:27:18Z,MERGED,True,13,4,6,https://github.com/yiiiyang2010,release libsbp 2.4.3,2,[],https://github.com/swift-nav/libsbp/pull/618,https://github.com/yiiiyang2010,1,https://github.com/swift-nav/libsbp/pull/618,Release 2.4.3 for buildroot update(File descriptor query for resource_monitor),Release 2.4.3 for buildroot update(File descriptor query for resource_monitor),True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,619,2018-11-15T23:32:28Z,2018-11-15T23:39:18Z,2018-11-15T23:39:18Z,MERGED,True,1,0,1,https://github.com/chenosaurus,fix missing require for sbas messages,1,[],https://github.com/swift-nav/libsbp/pull/619,https://github.com/chenosaurus,1,https://github.com/swift-nav/libsbp/pull/619,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,620,2018-11-16T10:43:49Z,2018-11-19T08:15:27Z,2018-11-19T08:15:31Z,MERGED,True,6,7,1,https://github.com/pmiettinen,Replace deprecated CMAKE_FORCE_<lang>_COMPILER macros,1,[],https://github.com/swift-nav/libsbp/pull/620,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/620,https://github.com/swift-nav/piksi_firmware_private/pull/2508,https://github.com/swift-nav/piksi_firmware_private/pull/2508,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,621,2018-11-20T01:31:32Z,2018-11-20T01:31:46Z,2018-11-20T01:31:46Z,MERGED,True,40,34,7,https://github.com/denniszollo,2.4.4 branch,1,[],https://github.com/swift-nav/libsbp/pull/621,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/621,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,622,2018-11-21T03:55:39Z,2018-11-22T02:28:22Z,2018-11-22T02:30:36Z,MERGED,True,556,6,13,https://github.com/denniszollo,Msg Timing Telem,3,[],https://github.com/swift-nav/libsbp/pull/622,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/622,These messages will allow us to generically encode string telemetry from common clocks.,These messages will allow us to generically encode string telemetry from common clocks.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,622,2018-11-21T03:55:39Z,2018-11-22T02:28:22Z,2018-11-22T02:30:36Z,MERGED,True,556,6,13,https://github.com/denniszollo,Msg Timing Telem,3,[],https://github.com/swift-nav/libsbp/pull/622,https://github.com/cbeighley,2,https://github.com/swift-nav/libsbp/pull/622#issuecomment-440818002,These messages will allow us to generically encode string telemetry from common clocks.,"@dzollo I don't think changing this is strictly necessary if you don't feel like we have the time, but ideally I think this would be much more strongly typed struct of specific values rather than a comma separated string.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,622,2018-11-21T03:55:39Z,2018-11-22T02:28:22Z,2018-11-22T02:30:36Z,MERGED,True,556,6,13,https://github.com/denniszollo,Msg Timing Telem,3,[],https://github.com/swift-nav/libsbp/pull/622,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/622#issuecomment-440859038,These messages will allow us to generically encode string telemetry from common clocks.,We discussed and decided these messages are okay since they are as close as possible to what is actually on the wire from the timing device and the published timing device serial API.  This telemetry concept is very extensible for future timing devices and/or timing device firmware updates.  If we require a tighter integration feedback loop between our receiver and timing module in future I agree that the string version of the message can be deprecated and replaced with a new strongly typed message.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,622,2018-11-21T03:55:39Z,2018-11-22T02:28:22Z,2018-11-22T02:30:36Z,MERGED,True,556,6,13,https://github.com/denniszollo,Msg Timing Telem,3,[],https://github.com/swift-nav/libsbp/pull/622,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/622#issuecomment-440894069,These messages will allow us to generically encode string telemetry from common clocks.,It's a good thing I didn't assume anything about the strings either as I see sometimes the device we are using replaces something that is normally a number with a string.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,623,2018-11-28T21:19:46Z,2018-11-28T21:19:52Z,2018-11-28T21:19:52Z,MERGED,True,13,5,6,https://github.com/denniszollo,v2.4.5 files,1,[],https://github.com/swift-nav/libsbp/pull/623,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/623,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,624,2018-11-29T21:21:47Z,2018-12-03T21:10:32Z,2018-12-03T21:10:35Z,MERGED,True,821,4527,3,https://github.com/silverjam,Attempt to resolve JavaScript security warnings,3,[],https://github.com/swift-nav/libsbp/pull/624,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/624,"Responding to this warning from GitHub:

I ran npm audit fix, which bumped the version of request and webpack that we use.  I manually updated the webpack-cli version per recommendation here: webpack/webpack#8082 (comment).
Also:

Re-ran webpack with npm run webpack
Manually checked that unit tests still pass
Ran npm install to update the package.lock
Updated the binary-parser library to point to a repo under the swift-nav org","Responding to this warning from GitHub:

I ran npm audit fix, which bumped the version of request and webpack that we use.  I manually updated the webpack-cli version per recommendation here: webpack/webpack#8082 (comment).
Also:

Re-ran webpack with npm run webpack
Manually checked that unit tests still pass
Ran npm install to update the package.lock
Updated the binary-parser library to point to a repo under the swift-nav org",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,624,2018-11-29T21:21:47Z,2018-12-03T21:10:32Z,2018-12-03T21:10:35Z,MERGED,True,821,4527,3,https://github.com/silverjam,Attempt to resolve JavaScript security warnings,3,[],https://github.com/swift-nav/libsbp/pull/624,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/624#issuecomment-443004655,"Responding to this warning from GitHub:

I ran npm audit fix, which bumped the version of request and webpack that we use.  I manually updated the webpack-cli version per recommendation here: webpack/webpack#8082 (comment).
Also:

Re-ran webpack with npm run webpack
Manually checked that unit tests still pass
Ran npm install to update the package.lock
Updated the binary-parser library to point to a repo under the swift-nav org",@jkretzmer Any more validation that we need to do for this?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,624,2018-11-29T21:21:47Z,2018-12-03T21:10:32Z,2018-12-03T21:10:35Z,MERGED,True,821,4527,3,https://github.com/silverjam,Attempt to resolve JavaScript security warnings,3,[],https://github.com/swift-nav/libsbp/pull/624,https://github.com/jkretzmer,3,https://github.com/swift-nav/libsbp/pull/624#issuecomment-443869376,"Responding to this warning from GitHub:

I ran npm audit fix, which bumped the version of request and webpack that we use.  I manually updated the webpack-cli version per recommendation here: webpack/webpack#8082 (comment).
Also:

Re-ran webpack with npm run webpack
Manually checked that unit tests still pass
Ran npm install to update the package.lock
Updated the binary-parser library to point to a repo under the swift-nav org",@silverjam - i don't believe any additional validation is necessary.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,625,2018-11-30T01:14:52Z,2018-11-30T01:49:38Z,2018-11-30T01:49:48Z,MERGED,True,5,4,1,https://github.com/silverjam,Use OpenJDK 8 so we aren't chasing Oracle [ESD-940],1,[],https://github.com/swift-nav/libsbp/pull/625,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/625,"See:

travis-ci/travis-ci#10247
travis-ci/travis-ci#9512

Since we're not using the travis java template, manually install OpenJDK 8 per:

travis-ci/travis-ci#6483 (comment)","See:

travis-ci/travis-ci#10247
travis-ci/travis-ci#9512

Since we're not using the travis java template, manually install OpenJDK 8 per:

travis-ci/travis-ci#6483 (comment)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,627,2018-12-17T20:10:04Z,2019-01-11T22:33:45Z,2019-01-11T22:33:45Z,MERGED,True,78,91,2,https://github.com/denniszollo,Improve java example,2,[],https://github.com/swift-nav/libsbp/pull/627,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/627,"The java example was broken due to redefinition of MsgTrackingState without update:
To fix, I have updated the java example by:

removing any skylark stuff for now
using MsgPosLLH to explain what to read from device (the most likely thing a user would start out with)
fixing up readme to not refer to non-existent json logging","The java example was broken due to redefinition of MsgTrackingState without update:
To fix, I have updated the java example by:

removing any skylark stuff for now
using MsgPosLLH to explain what to read from device (the most likely thing a user would start out with)
fixing up readme to not refer to non-existent json logging",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,628,2018-12-20T01:59:12Z,2019-01-03T20:09:23Z,2019-01-03T20:09:28Z,MERGED,True,6,2,1,https://github.com/yizow,Update settings write response docs [ESD-970],2,[],https://github.com/swift-nav/libsbp/pull/628,https://github.com/yizow,1,https://github.com/swift-nav/libsbp/pull/628,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,628,2018-12-20T01:59:12Z,2019-01-03T20:09:23Z,2019-01-03T20:09:28Z,MERGED,True,6,2,1,https://github.com/yizow,Update settings write response docs [ESD-970],2,[],https://github.com/swift-nav/libsbp/pull/628,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/628#issuecomment-451257480,,"As you can see, I think we need to shorten the descriptions from a page formatting perpsective.",True,{'THUMBS_UP': ['https://github.com/benjaminaltieri']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,628,2018-12-20T01:59:12Z,2019-01-03T20:09:23Z,2019-01-03T20:09:28Z,MERGED,True,6,2,1,https://github.com/yizow,Update settings write response docs [ESD-970],2,[],https://github.com/swift-nav/libsbp/pull/628,https://github.com/benjaminaltieri,3,https://github.com/swift-nav/libsbp/pull/628#issuecomment-451259604,,"Ok great, thanks @dzollo - @yizow can we update and merge? can update repo with gen'd files in a separate commit",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,629,2019-01-02T22:40:33Z,2019-01-02T22:40:45Z,2019-01-02T22:40:46Z,MERGED,True,21,7,6,https://github.com/denniszollo,"v2.4.6 generated files, pdf, and changelog",1,[],https://github.com/swift-nav/libsbp/pull/629,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/629,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,630,2019-01-04T06:28:53Z,2019-02-13T05:23:23Z,2019-02-13T05:23:27Z,CLOSED,False,243554,0,1688,https://github.com/silverjam,Update links to v2.4.6 version,13,[],https://github.com/swift-nav/libsbp/pull/630,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/630,Replace links to v0.33 with links to v2.4.6,Replace links to v0.33 with links to v2.4.6,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,630,2019-01-04T06:28:53Z,2019-02-13T05:23:23Z,2019-02-13T05:23:27Z,CLOSED,False,243554,0,1688,https://github.com/silverjam,Update links to v2.4.6 version,13,[],https://github.com/swift-nav/libsbp/pull/630,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/630#issuecomment-462482738,Replace links to v0.33 with links to v2.4.6,I missed this review request and already forced pushed 2.4.7 to gh_pages.  Did those changes address the aim of this pull request?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,630,2019-01-04T06:28:53Z,2019-02-13T05:23:23Z,2019-02-13T05:23:27Z,CLOSED,False,243554,0,1688,https://github.com/silverjam,Update links to v2.4.6 version,13,[],https://github.com/swift-nav/libsbp/pull/630,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/630#issuecomment-462483767,Replace links to v0.33 with links to v2.4.6,"I think gh-pages is in good shape now, I cherry-picked your change and updated to 2.4.7 which is the libsbp release corresponding to v2.2 Piksi Firmware release",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,630,2019-01-04T06:28:53Z,2019-02-13T05:23:23Z,2019-02-13T05:23:27Z,CLOSED,False,243554,0,1688,https://github.com/silverjam,Update links to v2.4.6 version,13,[],https://github.com/swift-nav/libsbp/pull/630,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/630#issuecomment-463063384,Replace links to v0.33 with links to v2.4.6,"cool, thanks",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,631,2019-01-10T11:15:20Z,2019-02-07T10:39:09Z,2019-02-07T10:39:12Z,MERGED,True,321,17,12,https://github.com/pmiettinen,Add MSG_SETTINGS_REGISTER_RESP [ESD-1012],2,[],https://github.com/swift-nav/libsbp/pull/631,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/631,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,632,2019-01-14T23:55:24Z,2019-01-14T23:55:33Z,2019-01-14T23:55:33Z,MERGED,True,16,7,7,https://github.com/denniszollo,v2.4.7 release files,1,[],https://github.com/swift-nav/libsbp/pull/632,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/632,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,633,2019-01-15T12:37:59Z,2019-02-15T17:20:07Z,2019-02-15T17:20:44Z,MERGED,True,344,301,48,https://github.com/tn-exafore,Python 3 support [EX-476],4,[],https://github.com/swift-nav/libsbp/pull/633,https://github.com/tn-exafore,1,https://github.com/swift-nav/libsbp/pull/633,"finalizing python 3 support while also maintaining python 2.7 compatibility
based on https://github.com/swift-nav/libsbp/commits/silverjam/py3","finalizing python 3 support while also maintaining python 2.7 compatibility
based on https://github.com/swift-nav/libsbp/commits/silverjam/py3",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,634,2019-01-16T23:41:33Z,2019-01-18T23:35:29Z,2019-01-18T23:40:56Z,MERGED,True,324,3,13,https://github.com/denniszollo,Front end gain message,4,[],https://github.com/swift-nav/libsbp/pull/634,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/634,"This PR adds a new SBP message to provide the gain values in RF frontends from Swift Receivers.  Its goal is to provide human friendly messages that can be used to assess receiver health and purposely divorces itself from hardware implementation.  If a future frontend doesn't have an AGC for one of the stages, we have a way to encode it as invalid or missing.

@ericsenant @mbavaro @nsirola @fnoble","This PR adds a new SBP message to provide the gain values in RF frontends from Swift Receivers.  Its goal is to provide human friendly messages that can be used to assess receiver health and purposely divorces itself from hardware implementation.  If a future frontend doesn't have an AGC for one of the stages, we have a way to encode it as invalid or missing.

@ericsenant @mbavaro @nsirola @fnoble",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,634,2019-01-16T23:41:33Z,2019-01-18T23:35:29Z,2019-01-18T23:40:56Z,MERGED,True,324,3,13,https://github.com/denniszollo,Front end gain message,4,[],https://github.com/swift-nav/libsbp/pull/634,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/634#issuecomment-455661929,"This PR adds a new SBP message to provide the gain values in RF frontends from Swift Receivers.  Its goal is to provide human friendly messages that can be used to assess receiver health and purposely divorces itself from hardware implementation.  If a future frontend doesn't have an AGC for one of the stages, we have a way to encode it as invalid or missing.

@ericsenant @mbavaro @nsirola @fnoble",I think I didn't generate all languages after updating description.  I will fix.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,634,2019-01-16T23:41:33Z,2019-01-18T23:35:29Z,2019-01-18T23:40:56Z,MERGED,True,324,3,13,https://github.com/denniszollo,Front end gain message,4,[],https://github.com/swift-nav/libsbp/pull/634,https://github.com/switanis,3,https://github.com/swift-nav/libsbp/pull/634#issuecomment-455665795,"This PR adds a new SBP message to provide the gain values in RF frontends from Swift Receivers.  Its goal is to provide human friendly messages that can be used to assess receiver health and purposely divorces itself from hardware implementation.  If a future frontend doesn't have an AGC for one of the stages, we have a way to encode it as invalid or missing.

@ericsenant @mbavaro @nsirola @fnoble","Max can be 255 not 256 I think.
The usable (valid) range will be 0 to 100. I mean no any scaling. Please confirm.
Otherwise good. I like it.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,634,2019-01-16T23:41:33Z,2019-01-18T23:35:29Z,2019-01-18T23:40:56Z,MERGED,True,324,3,13,https://github.com/denniszollo,Front end gain message,4,[],https://github.com/swift-nav/libsbp/pull/634,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/634#issuecomment-455721283,"This PR adds a new SBP message to provide the gain values in RF frontends from Swift Receivers.  Its goal is to provide human friendly messages that can be used to assess receiver health and purposely divorces itself from hardware implementation.  If a future frontend doesn't have an AGC for one of the stages, we have a way to encode it as invalid or missing.

@ericsenant @mbavaro @nsirola @fnoble",@switanis . I ended up using a signed 8 bit integer and noted that the max value of 127 would mean channel is missing and a negative value would mean some kind of error.  valid range is from 0 to 100.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,634,2019-01-16T23:41:33Z,2019-01-18T23:35:29Z,2019-01-18T23:40:56Z,MERGED,True,324,3,13,https://github.com/denniszollo,Front end gain message,4,[],https://github.com/swift-nav/libsbp/pull/634,https://github.com/switanis,5,https://github.com/swift-nav/libsbp/pull/634#issuecomment-455722345,"This PR adds a new SBP message to provide the gain values in RF frontends from Swift Receivers.  Its goal is to provide human friendly messages that can be used to assess receiver health and purposely divorces itself from hardware implementation.  If a future frontend doesn't have an AGC for one of the stages, we have a way to encode it as invalid or missing.

@ericsenant @mbavaro @nsirola @fnoble",Sounds good. Thx.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,635,2019-01-18T22:52:28Z,2019-01-18T22:59:59Z,2019-01-18T22:59:59Z,MERGED,True,139,138,13,https://github.com/mfine,Parens around sign operators,1,[],https://github.com/swift-nav/libsbp/pull/635,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/635,Wrap these operators in parens.,Wrap these operators in parens.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,636,2019-01-18T23:56:01Z,2019-01-18T23:56:14Z,2019-01-18T23:56:14Z,MERGED,True,157,147,20,https://github.com/denniszollo,2.4.8 release,3,[],https://github.com/swift-nav/libsbp/pull/636,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/636,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,637,2019-01-24T23:53:41Z,2019-02-06T17:37:11Z,2019-02-06T17:37:19Z,MERGED,True,3,1,1,https://github.com/martin-swift,Compile c library with -fPIC.,1,[],https://github.com/swift-nav/libsbp/pull/637,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/637,"As I was moving things around in the repo refactor, I got an error related to this.  Seems like a good thing to have in a library and I am not aware of any downsides.","As I was moving things around in the repo refactor, I got an error related to this.  Seems like a good thing to have in a library and I am not aware of any downsides.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,637,2019-01-24T23:53:41Z,2019-02-06T17:37:11Z,2019-02-06T17:37:19Z,MERGED,True,3,1,1,https://github.com/martin-swift,Compile c library with -fPIC.,1,[],https://github.com/swift-nav/libsbp/pull/637,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/637#issuecomment-457415613,"As I was moving things around in the repo refactor, I got an error related to this.  Seems like a good thing to have in a library and I am not aware of any downsides.",@martin-swift what was the error that you got?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,637,2019-01-24T23:53:41Z,2019-02-06T17:37:11Z,2019-02-06T17:37:19Z,MERGED,True,3,1,1,https://github.com/martin-swift,Compile c library with -fPIC.,1,[],https://github.com/swift-nav/libsbp/pull/637,https://github.com/martin-swift,3,https://github.com/swift-nav/libsbp/pull/637#issuecomment-460835906,"As I was moving things around in the repo refactor, I got an error related to this.  Seems like a good thing to have in a library and I am not aware of any downsides.","@silverjam
/usr/bin/ld: sbp/src/libsbp-build/src/libsbp.a(sbp.c.o): relocation R_X86_64_PC32 against symbol `sbp_clear_callbacks' can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: final link failed: Bad value",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,638,2019-01-25T06:26:02Z,2019-01-30T19:40:36Z,2019-01-30T19:40:45Z,MERGED,True,20,7,2,https://github.com/silverjam,Allow multiple messages be sent at once [ESD-1038],1,[],https://github.com/swift-nav/libsbp/pull/638,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/638,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,638,2019-01-25T06:26:02Z,2019-01-30T19:40:36Z,2019-01-30T19:40:45Z,MERGED,True,20,7,2,https://github.com/silverjam,Allow multiple messages be sent at once [ESD-1038],1,[],https://github.com/swift-nav/libsbp/pull/638,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/638#issuecomment-458302959,,"@denniszollo This isn't really an interface change since we're changing from send(msg, **metadata) to send(*msgs, **metadata) which allows any call in the form send(msg) to remain unchanged.  To send multiple message the invocation looks like this send(msg1, msg2) or if you have a list of messages then it's: send(*msgs).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,640,2019-01-29T19:41:52Z,2019-02-25T21:32:50Z,2019-02-25T21:32:53Z,CLOSED,False,33,4,1,https://github.com/silverjam,"[WIP] Allow install from git, parse version manually",1,[],https://github.com/swift-nav/libsbp/pull/640,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/640,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,641,2019-01-30T13:05:52Z,2019-01-31T07:03:49Z,2019-01-31T07:04:13Z,MERGED,True,10,12,2,https://github.com/tn-exafore,Small python fixes [EX-476],2,[],https://github.com/swift-nav/libsbp/pull/641,https://github.com/tn-exafore,1,https://github.com/swift-nav/libsbp/pull/641,These are not directly related to python 3 but two things that I spotted along the way.,These are not directly related to python 3 but two things that I spotted along the way.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,642,2019-02-05T08:11:08Z,2019-02-08T07:28:31Z,2019-02-08T18:50:27Z,MERGED,True,1,456,13,https://github.com/tn-exafore,Remove obsolete examples and SBP_MSG_TWEET [EX-476],3,[],https://github.com/swift-nav/libsbp/pull/642,https://github.com/tn-exafore,1,https://github.com/swift-nav/libsbp/pull/642,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,642,2019-02-05T08:11:08Z,2019-02-08T07:28:31Z,2019-02-08T18:50:27Z,MERGED,True,1,456,13,https://github.com/tn-exafore,Remove obsolete examples and SBP_MSG_TWEET [EX-476],3,[],https://github.com/swift-nav/libsbp/pull/642,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/642#issuecomment-461905957,,"Super late to the party here... but technically we shouldn't remove messages... right?  I think SBP_MSG_TWEET might be an exception here, but future ""obsoleted"" or removed messages should remain in the yaml with their original message IDs but be renamed to reflect their status.  E.g. SBP_MSG_TWEET_OBSOLETE.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,643,2019-02-07T20:22:06Z,2019-02-07T21:10:11Z,2019-02-08T05:33:45Z,MERGED,True,16,5,6,https://github.com/benjaminaltieri,2.4.9 Release,3,[],https://github.com/swift-nav/libsbp/pull/643,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/643,"Release Tasks

Re-gen sources using 2.4.9 tag
Updated sbp.pdf
Updated Changelog","Release Tasks

Re-gen sources using 2.4.9 tag
Updated sbp.pdf
Updated Changelog",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,644,2019-02-08T18:52:36Z,2019-02-14T00:07:02Z,2019-02-14T00:07:06Z,MERGED,True,605,26,18,https://github.com/silverjam,"New messages: SBP_MSG_FILEIO_CONFIG_{REQ,RESP}",13,[],https://github.com/swift-nav/libsbp/pull/644,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/644,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,645,2019-02-09T01:43:26Z,2019-02-13T20:51:49Z,2019-02-13T20:51:54Z,MERGED,True,240,60,13,https://github.com/silverjam,Remove dependency on setuptools_scm [ESD-1038],9,[],https://github.com/swift-nav/libsbp/pull/645,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/645,"Remove setuptools_scm since it prevents us from installing from a git URL via pip, adapt a new setup.py from enthought's traitsui package.


Add default.nix for running make all","Remove setuptools_scm since it prevents us from installing from a git URL via pip, adapt a new setup.py from enthought's traitsui package.


Add default.nix for running make all",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,645,2019-02-09T01:43:26Z,2019-02-13T20:51:49Z,2019-02-13T20:51:54Z,MERGED,True,240,60,13,https://github.com/silverjam,Remove dependency on setuptools_scm [ESD-1038],9,[],https://github.com/swift-nav/libsbp/pull/645,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/645#issuecomment-462565324,"Remove setuptools_scm since it prevents us from installing from a git URL via pip, adapt a new setup.py from enthought's traitsui package.


Add default.nix for running make all","I'm also a fan of unlocking this for developer ease of use, the current issues look to be centered around the downstream dependency interactions (i.e. (piksi_tools) bash-3.2$ python setup.py install error in piksi_tools setup command: 'install_requires' must be a string or list of strings containing valid project/version requirement specifiers; Invalid requirement, parse error at ""'+https:/'"") and the added manual process of updating python/setup.py which just need to be properly specified in docs",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,645,2019-02-09T01:43:26Z,2019-02-13T20:51:49Z,2019-02-13T20:51:54Z,MERGED,True,240,60,13,https://github.com/silverjam,Remove dependency on setuptools_scm [ESD-1038],9,[],https://github.com/swift-nav/libsbp/pull/645,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/645#issuecomment-463050307,"Remove setuptools_scm since it prevents us from installing from a git URL via pip, adapt a new setup.py from enthought's traitsui package.


Add default.nix for running make all","@benjaminaltieri that is/was a problem with piksi_tools -- not libsbp itself, see swift-nav/piksi_tools#977",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,645,2019-02-09T01:43:26Z,2019-02-13T20:51:49Z,2019-02-13T20:51:54Z,MERGED,True,240,60,13,https://github.com/silverjam,Remove dependency on setuptools_scm [ESD-1038],9,[],https://github.com/swift-nav/libsbp/pull/645,https://github.com/benjaminaltieri,4,https://github.com/swift-nav/libsbp/pull/645#issuecomment-463350403,"Remove setuptools_scm since it prevents us from installing from a git URL via pip, adapt a new setup.py from enthought's traitsui package.


Add default.nix for running make all","awesome, this is great.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,646,2019-02-12T20:23:57Z,2019-03-21T17:46:38Z,2019-05-20T16:53:02Z,MERGED,True,657,123,17,https://github.com/mbavaro,[ME-166] Add 16 bit correlator message,2,[],https://github.com/swift-nav/libsbp/pull/646,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/646,A new message with 16-bit complex correlator outputs,A new message with 16-bit complex correlator outputs,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,646,2019-02-12T20:23:57Z,2019-03-21T17:46:38Z,2019-05-20T16:53:02Z,MERGED,True,657,123,17,https://github.com/mbavaro,[ME-166] Add 16 bit correlator message,2,[],https://github.com/swift-nav/libsbp/pull/646,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/646#issuecomment-463876069,A new message with 16-bit complex correlator outputs,"Looks good to me, but please split up the YAML change from the generated code change into two commits.  It makes it easier to collaborate.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,646,2019-02-12T20:23:57Z,2019-03-21T17:46:38Z,2019-05-20T16:53:02Z,MERGED,True,657,123,17,https://github.com/mbavaro,[ME-166] Add 16 bit correlator message,2,[],https://github.com/swift-nav/libsbp/pull/646,https://github.com/mbavaro,3,https://github.com/swift-nav/libsbp/pull/646#issuecomment-465218915,A new message with 16-bit complex correlator outputs,"Is this a new practice?
@dzollo Please review again.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/647,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:","Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/647#issuecomment-463093511,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:",@mkurkela please check this against GTT when you have spare time.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/martin-swift,3,https://github.com/swift-nav/libsbp/pull/647#issuecomment-463248873,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:","Pardon my ignorance, but what is GTT?  Yes, we have STATIC declared all over the place, which I am not a fan of.  We should be able flip that switch from the command line as needed.  We have plans to refactor a lot of the CMake, but that will be a big job...",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/pmiettinen,4,https://github.com/swift-nav/libsbp/pull/647#issuecomment-463250429,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:","https://github.com/swift-nav/gt
And
https://github.com/swift-nav/gt/blob/master/sw/mod/proto/sbp/sbp.c",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/denniszollo,5,https://github.com/swift-nav/libsbp/pull/647#issuecomment-463292384,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:","It seems like perhaps we could keep some of the same flags translated to MSVC's options:
https://docs.microsoft.com/en-us/cpp/build/reference/compiler-options-listed-alphabetically?view=vs-2017",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/martin-swift,6,https://github.com/swift-nav/libsbp/pull/647#issuecomment-463691202,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:","Also, what do you mean by ""See if sbp.dll should be build also.""  Are you asking if that is a requirement for this project, or if sbp.dll should have been produced?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/pmiettinen,7,https://github.com/swift-nav/libsbp/pull/647#issuecomment-463692270,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:","I meant from the GTT point of view if dynamic linkage is preferred. But yes in more general one can ask also

is it a requirement
should it have produced",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/martin-swift,8,https://github.com/swift-nav/libsbp/pull/647#issuecomment-463701385,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:",try cmake .. -DBUILD_SHARED_LIBS=ON and see if that gives you a dll.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/pmiettinen,9,https://github.com/swift-nav/libsbp/pull/647#issuecomment-463925023,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:",I am going to wait how this PR plays out #652,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,647,2019-02-13T07:44:30Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,7,2,2,https://github.com/pmiettinen,[WIP] win32 build for GTT,3,[],https://github.com/swift-nav/libsbp/pull/647,https://github.com/martin-swift,10,https://github.com/swift-nav/libsbp/pull/647#issuecomment-464163845,"Currently GTT has SBP module as statically copied files, which is not good. Some investigations for providing SBP as actual library on win32 platform.
Initial build produces only static sbp.lib. See if sbp.dll should be build also.
How to build in Native Tools Command Prompt for VS 2017:
Short:
md build
cd build
cmake ..
msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""

Details:
c:\xoodi\github\sn\libsettings\libsbp\c>md build

c:\xoodi\github\sn\libsettings\libsbp\c>cd build

c:\xoodi\github\sn\libsettings\libsbp\c\build>cmake ..
-- Building for: Visual Studio 15 2017
-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.17134.
-- The C compiler identification is MSVC 19.16.27026.1
-- The CXX compiler identification is MSVC 19.16.27026.1
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- libsbp version: v2.4.9-dirty
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
CMake Warning at docs/CMakeLists.txt:7 (message):
  Doxygen not found, the documentation will not be built.


-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)
-- Checking for one of the modules 'check'
-- Could NOT find CHECK
-- Skipping unit tests, Check library not found!
-- Configuring done
-- Generating done
-- Build files have been written to: C:/xoodi/github/sn/libsettings/libsbp/c/build

c:\xoodi\github\sn\libsettings\libsbp\c\build>msbuild libsbp.sln /p:Configuration=""Release"" /p:Platform=""Win32""
Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
Build started 13.2.2019 9:31:12.
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" on node 1 (default targets).
ValidateSolutionConfiguration:
  Building solution configuration ""Release|Win32"".
ValidateProjects:
  The project ""INSTALL"" is not selected for building in solution configuration ""Release|Win32"".
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (1) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (
2) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vc
xproj"" (3) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ZERO_CHECK\"".
  Creating directory ""c:\xoodi\github\sn\libsettings\libsbp\c\build\Release\"".
  Creating directory ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Checking Build System
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/docs/CMakeFiles/generate.stamp is up-to-date.
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/test/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ZERO_CHECK\ZERO_CHECK.tlog\ZERO_CHECK.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ZERO_CHECK.vcxproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxpr
oj.metaproj"" (4) on node 1 (default targets).
Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (4) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj
"" (5) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""sbp.dir\Release\"".
  Creating directory ""C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\"".
  Creating directory ""sbp.dir\Release\sbp.tlog\"".
InitializeBuildStatus:
  Creating ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/src/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/src/CMakeFiles/generate.stamp is up-to-date.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\CL.exe /c /IC:\xoodi\github\sn\libsettings\libsbp\c\
  include /nologo /W3 /WX- /diagnostics:classic /O2 /Ob2 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D ""CMAKE_INTDIR=\""Release\"""" /D _MBCS /Gm- /MD /GS /fp:precise /Z
  c:wchar_t /Zc:forScope /Zc:inline /Fo""sbp.dir\Release\\"" /Fd""sbp.dir\Release\sbp.pdb"" /Gd /TC /analyze- /errorReport:queue C:\xoodi\github\sn\libsettings\lib
  sbp\c\src\edc.c C:\xoodi\github\sn\libsettings\libsbp\c\src\sbp.c
  edc.c
  sbp.c
  Generating Code...
Lib:
  C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Tools\MSVC\14.16.27023\bin\HostX86\x86\Lib.exe /OUT:""C:\xoodi\github\sn\libsettings\libsbp\
  c\build\src\Release\sbp.lib"" /NOLOGO  /machine:X86 sbp.dir\Release\edc.obj
  sbp.dir\Release\sbp.obj
  sbp.vcxproj -> C:\xoodi\github\sn\libsettings\libsbp\c\build\src\Release\sbp.lib
FinalizeBuildStatus:
  Deleting file ""sbp.dir\Release\sbp.tlog\unsuccessfulbuild"".
  Touching ""sbp.dir\Release\sbp.tlog\sbp.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\src\sbp.vcxproj.metaproj"" (default targets).

Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (2) is building ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcx
proj"" (6) on node 1 (default targets).
PrepareForBuild:
  Creating directory ""Win32\Release\ALL_BUILD\"".
  Creating directory ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\"".
InitializeBuildStatus:
  Creating ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.
CustomBuild:
  Building Custom Rule C:/xoodi/github/sn/libsettings/libsbp/c/CMakeLists.txt
  CMake does not need to re-run because C:/xoodi/github/sn/libsettings/libsbp/c/build/CMakeFiles/generate.stamp is up-to-date.
FinalizeBuildStatus:
  Deleting file ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild"".
  Touching ""Win32\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate"".
Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\ALL_BUILD.vcxproj.metaproj"" (default targets).

Done Building Project ""c:\xoodi\github\sn\libsettings\libsbp\c\build\libsbp.sln"" (default targets).


Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:04.09

Output:",syntax might actually be cmake .. -DBUILD_SHARED_LIBS:BOOL=ON  Haven't tested personally...,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,648,2019-02-13T21:12:42Z,2019-02-13T21:56:53Z,2019-02-13T21:56:57Z,MERGED,True,1,1,1,https://github.com/silverjam,Bump Python version to latest 2.7,2,[],https://github.com/swift-nav/libsbp/pull/648,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/648,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,649,2019-02-13T22:50:50Z,2019-02-13T22:51:43Z,2019-02-13T22:51:45Z,MERGED,True,1,1,1,https://github.com/silverjam,Try updating the deploy key for sbp_linux_tools,1,[],https://github.com/swift-nav/libsbp/pull/649,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/649,This is so we can get an up-to-date version of sbp2json and friends published whenever libsbp is released/tagged.,This is so we can get an up-to-date version of sbp2json and friends published whenever libsbp is released/tagged.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,650,2019-02-14T01:00:31Z,2019-02-14T01:01:19Z,2019-02-14T01:01:23Z,MERGED,True,938,925,15,https://github.com/silverjam,Release 2.4.10,3,[],https://github.com/swift-nav/libsbp/pull/650,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/650,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,651,2019-02-14T03:03:52Z,2019-02-19T21:24:33Z,2019-02-19T21:24:41Z,MERGED,True,72,8,5,https://github.com/silverjam,"Use twine/nix to push to PyPI, auto-mangle IS_RELEASED [ESD-1038]",8,[],https://github.com/swift-nav/libsbp/pull/651,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/651,"Add a target for just deploying Python


Automatically mangle the IS_RELEASED flag in setup.py


Add nix spec for running a deployment","Add a target for just deploying Python


Automatically mangle the IS_RELEASED flag in setup.py


Add nix spec for running a deployment",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,651,2019-02-14T03:03:52Z,2019-02-19T21:24:33Z,2019-02-19T21:24:41Z,MERGED,True,72,8,5,https://github.com/silverjam,"Use twine/nix to push to PyPI, auto-mangle IS_RELEASED [ESD-1038]",8,[],https://github.com/swift-nav/libsbp/pull/651,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/651#issuecomment-463875764,"Add a target for just deploying Python


Automatically mangle the IS_RELEASED flag in setup.py


Add nix spec for running a deployment","Code looks good, but can you explain the human workflow for a release / deploy to help me understand?
Will the wheel work for mac and windows users too or do those users get a tarball of the python source?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,651,2019-02-14T03:03:52Z,2019-02-19T21:24:33Z,2019-02-19T21:24:41Z,MERGED,True,72,8,5,https://github.com/silverjam,"Use twine/nix to push to PyPI, auto-mangle IS_RELEASED [ESD-1038]",8,[],https://github.com/swift-nav/libsbp/pull/651,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/651#issuecomment-465269551,"Add a target for just deploying Python


Automatically mangle the IS_RELEASED flag in setup.py


Add nix spec for running a deployment","@denniszollo The libsbp wheels are source based (no compiled libs), so they'll work on any platform.  Release flow should be fairly similar.  To release just Python it would be:
make PYPI_USERNAME=xyz PYPI_PASSWORD=password dist-python 

Or, all together:
make PYPI_USERNAME=xyz PYPI_PASSWORD=password dist",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,651,2019-02-14T03:03:52Z,2019-02-19T21:24:33Z,2019-02-19T21:24:41Z,MERGED,True,72,8,5,https://github.com/silverjam,"Use twine/nix to push to PyPI, auto-mangle IS_RELEASED [ESD-1038]",8,[],https://github.com/swift-nav/libsbp/pull/651,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/651#issuecomment-465315695,"Add a target for just deploying Python


Automatically mangle the IS_RELEASED flag in setup.py


Add nix spec for running a deployment",@dzollo if you have concerns I'll address in a follow-up PR,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,652,2019-02-14T20:40:47Z,2019-02-19T22:42:21Z,2019-11-12T04:05:04Z,MERGED,True,38,197,6,https://github.com/jbangelo,Updated CMake files,6,[],https://github.com/swift-nav/libsbp/pull/652,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/652,"Cleaned out apparently unused CMake files and variables.
Switched to setting target properties for C standard and warnings.
Exported targets to the build tree to make building as an external project easier.","Cleaned out apparently unused CMake files and variables.
Switched to setting target properties for C standard and warnings.
Exported targets to the build tree to make building as an external project easier.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,652,2019-02-14T20:40:47Z,2019-02-19T22:42:21Z,2019-11-12T04:05:04Z,MERGED,True,38,197,6,https://github.com/jbangelo,Updated CMake files,6,[],https://github.com/swift-nav/libsbp/pull/652,https://github.com/kmdade,2,https://github.com/swift-nav/libsbp/pull/652#issuecomment-464214583,"Cleaned out apparently unused CMake files and variables.
Switched to setting target properties for C standard and warnings.
Exported targets to the build tree to make building as an external project easier.",awesome.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,653,2019-02-20T21:07:43Z,2019-04-18T04:36:53Z,2019-04-18T04:36:57Z,MERGED,True,3,2,1,https://github.com/silverjam,Log a warning for dispatch exceptions,1,[],https://github.com/swift-nav/libsbp/pull/653,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/653,"Just in case an exception is occurring here, we don't want it to be silent... add a warning so we can at least have visibility if this happens.","Just in case an exception is occurring here, we don't want it to be silent... add a warning so we can at least have visibility if this happens.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,654,2019-02-26T01:28:36Z,2019-02-28T20:05:41Z,2019-02-28T20:05:44Z,MERGED,True,18,1,1,https://github.com/ekalosak,added virtualenv instructions for the python bindings for libsbp,2,[],https://github.com/swift-nav/libsbp/pull/654,https://github.com/ekalosak,1,https://github.com/swift-nav/libsbp/pull/654,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,655,2019-02-27T03:28:26Z,2019-04-03T23:26:50Z,2019-04-03T23:26:50Z,CLOSED,False,1439,62,29,https://github.com/silverjam,"[WIP] Add JIT for crc, build into existing buffer to avoid copies",10,[],https://github.com/swift-nav/libsbp/pull/655,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/655,"Changed the behavior of Framer to stop when ""iterator"" (the remote connection or file) is no longer producing data.  This seems to be a more standard behavior and it allows us to create an sbp2json utility that will stop when no more data is available.  We can potentially drop these changes if we can't easily figure out how to harmonize this with the rest of the code base.


Framer now use an ""into_buffer"" function to avoid copying data


Use numba to accellerate the crc function, running this shows the following speed-ups (first number is with JIT, second is without):


$ ./bench/crc.py
Start: building random data...
End: building random data.
1.06078910828
19.5082828999

TODO:


Need to abstract build_payload and the creation of the StreamPayload object, currently there's a lot of unnecessary duplicated code between generated objects.


Remove http support and fix unit tests.  HTTP related tests are currently failing and I suspect many of the unit tests need to updated to account for the new behavior of the Framer iterator.","Changed the behavior of Framer to stop when ""iterator"" (the remote connection or file) is no longer producing data.  This seems to be a more standard behavior and it allows us to create an sbp2json utility that will stop when no more data is available.  We can potentially drop these changes if we can't easily figure out how to harmonize this with the rest of the code base.


Framer now use an ""into_buffer"" function to avoid copying data


Use numba to accellerate the crc function, running this shows the following speed-ups (first number is with JIT, second is without):


$ ./bench/crc.py
Start: building random data...
End: building random data.
1.06078910828
19.5082828999

TODO:


Need to abstract build_payload and the creation of the StreamPayload object, currently there's a lot of unnecessary duplicated code between generated objects.


Remove http support and fix unit tests.  HTTP related tests are currently failing and I suspect many of the unit tests need to updated to account for the new behavior of the Framer iterator.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,655,2019-02-27T03:28:26Z,2019-04-03T23:26:50Z,2019-04-03T23:26:50Z,CLOSED,False,1439,62,29,https://github.com/silverjam,"[WIP] Add JIT for crc, build into existing buffer to avoid copies",10,[],https://github.com/swift-nav/libsbp/pull/655,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/655#issuecomment-479693973,"Changed the behavior of Framer to stop when ""iterator"" (the remote connection or file) is no longer producing data.  This seems to be a more standard behavior and it allows us to create an sbp2json utility that will stop when no more data is available.  We can potentially drop these changes if we can't easily figure out how to harmonize this with the rest of the code base.


Framer now use an ""into_buffer"" function to avoid copying data


Use numba to accellerate the crc function, running this shows the following speed-ups (first number is with JIT, second is without):


$ ./bench/crc.py
Start: building random data...
End: building random data.
1.06078910828
19.5082828999

TODO:


Need to abstract build_payload and the creation of the StreamPayload object, currently there's a lot of unnecessary duplicated code between generated objects.


Remove http support and fix unit tests.  HTTP related tests are currently failing and I suspect many of the unit tests need to updated to account for the new behavior of the Framer iterator.",Split into #656 and #658,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/656,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/656#issuecomment-476086678,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","make python failure on Ubuntu 16.04. Rebased on top of master.
========================================================================================== test session starts ==========================================================================================
platform linux2 -- Python 2.7.12, pytest-3.1.2, py-1.8.0, pluggy-0.4.0 -- /mnt/users/pasi/swiftnav/libsbp/python/.tox/py27/bin/python2.7
cachedir: .cache
rootdir: /mnt/users/pasi/swiftnav/libsbp/python, inifile: pytest.ini
plugins: cov-2.5.1
collected 32 items

tests/sbp/test_messages.py::test_messages PASSED
tests/sbp/test_numba.py::test_get_string PASSED
tests/sbp/test_numba.py::test_get_string_no_null PASSED
tests/sbp/test_numba.py::test_get_string_offset_no_null PASSED
tests/sbp/test_numba.py::test_get_string_offset PASSED
tests/sbp/test_numba.py::test_get_fixed_string_offset PASSED
tests/sbp/test_numba.py::test_parse PASSED
tests/sbp/test_numba.py::test_jit PASSED
tests/sbp/test_table.py::test_table_count PASSED
tests/sbp/test_table.py::test_table_unqiue_count PASSED
tests/sbp/test_table.py::test_available_messages PASSED
tests/sbp/client/test_driver.py::test_http_test_pass <- .tox/py27/local/lib/python2.7/site-packages/httpretty/core.py FAILED
tests/sbp/client/test_driver.py::test_http_test_fail <- .tox/py27/local/lib/python2.7/site-packages/httpretty/core.py FAILED
tests/sbp/client/test_driver.py::test_http_test_pass_streaming <- .tox/py27/local/lib/python2.7/site-packages/httpretty/core.py FAILED
tests/sbp/client/test_driver.py::test_http_test_pass_retry <- .tox/py27/local/lib/python2.7/site-packages/httpretty/core.py PASSED
tests/sbp/client/test_driver.py::test_tcp_logger PASSED
tests/sbp/client/test_handler.py::test_framer_receive_empty FAILED
tests/sbp/client/test_handler.py::test_framer_receive_bad_preamble PASSED
tests/sbp/client/test_handler.py::test_framer_bad_crc PASSED
tests/sbp/client/test_handler.py::test_framer_ok PASSED
tests/sbp/client/test_handler.py::test_handler_callbacks PASSED
tests/sbp/client/test_handler.py::test_multiple_handler_callbacks PASSED
tests/sbp/client/test_handler.py::test_child_iter PASSED
tests/sbp/client/test_handler.py::test_filter PASSED
tests/sbp/client/test_handler.py::test_dead_gc PASSED
tests/sbp/client/test_handler.py::test_late_iter PASSED
tests/sbp/client/test_logger.py::test_log PASSED
tests/sbp/client/test_logger.py::test_json_log PASSED
tests/sbp/client/test_logger.py::test_non_utf8_json_log PASSED
tests/sbp/client/test_logger.py::test_msg_print xfail
tests/sbp/client/test_logger.py::test_udp_logger PASSED
----------------------------------------
Exception happened during processing of request from ('127.0.0.1', 51053)
Traceback (most recent call last):
tests/sbp/client/test_logger.py::test_rolling_json_log   File ""/usr/lib/python2.7/SocketServer.py"", line 596, in process_request_thread
PASSED

=============================================================================================== FAILURES ================================================================================================
__________________________________________________________________________________________ test_http_test_pass __________________________________________________________________________________________

args = (), kw = {}

    @functools.wraps(test)
    def wrapper(*args, **kw):
        with httprettized():
>           return test(*args, **kw)

.tox/py27/local/lib/python2.7/site-packages/httpretty/core.py:1627:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/sbp/client/test_driver.py:80: in test_http_test_pass
    content_type=b""application/vnd.swiftnav.broker.v1+sbp2"")
.tox/py27/local/lib/python2.7/site-packages/httpretty/core.py:1303: in register_uri
    cls.Response(method=method, uri=uri, **headers),
.tox/py27/local/lib/python2.7/site-packages/httpretty/core.py:1346: in Response
    return Entry(method, uri, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <[AttributeError(""'Entry' object has no attribute 'status'"") raised in repr()] SafeRepr object at 0x7fdec7506758>, method = 'GET', uri = 'http://broker.testing.skylark.swiftnav.com/'
body = array([ 85,  16,   0,  66,   0,   4,  97,  98,  99, 100, 193, 207],
      dtype=uint8), adding_headers = None, forcing_headers = None, status = 200, streaming = False
headers = {'content_type': 'application/vnd.swiftnav.broker.v1+sbp2'}

    def __init__(self, method, uri, body,
                 adding_headers=None,
                 forcing_headers=None,
                 status=200,
                 streaming=False,
                 **headers):

        self.method = method
        self.uri = uri
        self.info = None
        self.request = None

        self.body_is_callable = False
        if hasattr(body, ""__call__""):
            self.callable_body = body
            self.body = None
            self.body_is_callable = True
        elif isinstance(body, text_type):
            self.body = utf8(body)
        else:
            self.body = body

        self.streaming = streaming
        if not streaming and not self.body_is_callable:
>           self.body_length = len(self.body or '')
E           ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

.tox/py27/local/lib/python2.7/site-packages/httpretty/core.py:673: ValueError
__________________________________________________________________________________________ test_http_test_fail __________________________________________________________________________________________

args = (), kw = {}

    @functools.wraps(test)
    def wrapper(*args, **kw):
        with httprettized():
>           return test(*args, **kw)

.tox/py27/local/lib/python2.7/site-packages/httpretty/core.py:1627:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/sbp/client/test_driver.py:116: in test_http_test_fail
    status=400)
.tox/py27/local/lib/python2.7/site-packages/httpretty/core.py:1303: in register_uri
    cls.Response(method=method, uri=uri, **headers),
.tox/py27/local/lib/python2.7/site-packages/httpretty/core.py:1346: in Response
    return Entry(method, uri, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <[AttributeError(""'Entry' object has no attribute 'status'"") raised in repr()] SafeRepr object at 0x7fdec8414e18>, method = 'GET', uri = 'http://broker.testing.skylark.swiftnav.com/'
body = array([ 85,  16,   0,  66,   0,   4,  97,  98,  99, 100, 193, 207],
      dtype=uint8), adding_headers = None, forcing_headers = None, status = 400, streaming = False
headers = {'content_type': 'application/vnd.swiftnav.broker.v1+sbp2'}

    def __init__(self, method, uri, body,
                 adding_headers=None,
                 forcing_headers=None,
                 status=200,
                 streaming=False,
                 **headers):

        self.method = method
        self.uri = uri
        self.info = None
        self.request = None

        self.body_is_callable = False
        if hasattr(body, ""__call__""):
            self.callable_body = body
            self.body = None
            self.body_is_callable = True
        elif isinstance(body, text_type):
            self.body = utf8(body)
        else:
            self.body = body

        self.streaming = streaming
        if not streaming and not self.body_is_callable:
>           self.body_length = len(self.body or '')
E           ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

.tox/py27/local/lib/python2.7/site-packages/httpretty/core.py:673: ValueError
_____________________________________________________________________________________ test_http_test_pass_streaming _____________________________________________________________________________________

args = (), kw = {}

    @functools.wraps(test)
    def wrapper(*args, **kw):
        with httprettized():
>           return test(*args, **kw)

.tox/py27/local/lib/python2.7/site-packages/httpretty/core.py:1627:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    @activate
    def test_http_test_pass_streaming():
      assert is_enabled()
      msgs = [MsgPrintDep(text=b'foo'),
              MsgPrintDep(text=b'bar'),
              MsgPrintDep(text=b'baz')]
      register_uri(GET,
                   BASE_STATION_URI,
                   mock_streaming_msgs([m.to_binary() for m in msgs]),
                   content_type=b""application/vnd.swiftnav.broker.v1+sbp2"",
                   streaming=True)
      register_uri(PUT,
                   BASE_STATION_URI,
                   body=b'',
                   content_type=b""application/vnd.swiftnav.broker.v1+sbp2"",
                   streaming=True)
      with HTTPDriver(device_uid=b""Swift22"", url=BASE_STATION_URI) as driver:
        assert driver.connect_read()
        assert driver.read_ok
>       assert driver.read(size=255) == b''.join([m.to_binary() for m in msgs])
E       TypeError: sequence item 0: expected string, numpy.ndarray found

tests/sbp/client/test_driver.py:152: TypeError
_______________________________________________________________________________________ test_framer_receive_empty _______________________________________________________________________________________

    def test_framer_receive_empty():
      source = io.BytesIO(b"""")
      framer = Framer(source.read, None)
>     assert framer._receive() == None

tests/sbp/client/test_handler.py:37:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <sbp.client.framer.Framer object at 0x7fdec7523cd0>

    def _receive(self):
        """"""
            Read and build SBP message.
            """"""
        # preamble - not readall(1) to allow breaking before messages,
        # empty input
        preamble = self._read(1)
        if not preamble:
>           raise StopIteration
E           StopIteration

sbp/client/framer.py:118: StopIteration
=========================================================================================== warnings summary ============================================================================================
tests/sbp/client/test_logger.py::test_rolling_json_log
  /mnt/users/pasi/swiftnav/libsbp/python/tests/sbp/client/test_logger.py:89: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
    assert data == self.request[0].strip()

-- Docs: http://doc.pytest.org/en/latest/warnings.html
====================================================================== 4 failed, 27 passed, 1 xfailed, 1 warnings in 15.96 seconds ======================================================================
ERROR: InvocationError: '/mnt/users/pasi/swiftnav/libsbp/python/.tox/py27/bin/py.test -v tests/'
py35 create: /mnt/users/pasi/swiftnav/libsbp/python/.tox/py35
py35 installdeps: -r/mnt/users/pasi/swiftnav/libsbp/python/requirements.txt, -r/mnt/users/pasi/swiftnav/libsbp/python/test_requirements.txt
py35 inst: /mnt/users/pasi/swiftnav/libsbp/python/.tox/dist/sbp-2.5.0.dev18+g4680db9.zip
py35 installed: certifi==2019.3.9,cffi==1.12.2,chardet==3.0.4,construct==2.9.33,cov-core==1.15.0,coverage==4.4.1,filelock==3.0.10,futures==3.1.1,httpretty==0.9.4,idna==2.8,llvmlite==0.28.0,numba==0.43.0,numpy==1.16.2,pluggy==0.9.0,py==1.8.0,pybase64==0.5.0,pycparser==2.19,pyftdi==0.13.4,pylibftdi==0.17.0,pyserial==3.4,pytest==3.1.2,pytest-cov==2.5.1,pyusb==1.0.2,requests==2.21.0,requests-futures==0.9.9,ruamel.yaml==0.15.89,sbp==2.5.0.dev18+g4680db9,six==1.12.0,toml==0.10.0,tox==3.7.0,urllib3==1.24.1,virtualenv==16.4.3
py35 runtests: PYTHONHASHSEED='2715266942'
py35 runtests: commands[0] | py.test -v tests/
========================================================================================== test session starts ==========================================================================================
platform linux -- Python 3.5.2, pytest-3.1.2, py-1.8.0, pluggy-0.4.0 -- /mnt/users/pasi/swiftnav/libsbp/python/.tox/py35/bin/python3.5
cachedir: .cache
rootdir: /mnt/users/pasi/swiftnav/libsbp/python, inifile: pytest.ini
plugins: cov-2.5.1
collected 25 items / 2 errors

================================================================================================ ERRORS =================================================================================================
_______________________________________________________________________________ ERROR collecting tests/sbp/test_numba.py ________________________________________________________________________________
tests/sbp/test_numba.py:5: in <module>
    from sbp.jit.file_io import MsgFileioWriteReq as MsgFileioWriteReq_j
sbp/jit/file_io.py:27: in <module>
    from sbp.jit.msg import SBP, SENDER_ID
sbp/jit/msg.py:23: in <module>
    from sbp.jit import parse_float_c
E   ImportError: dynamic module does not define module export function (PyInit_parse_float_c)
_______________________________________________________________________________ ERROR collecting tests/sbp/test_numba.py ________________________________________________________________________________
ImportError while importing test module '/mnt/users/pasi/swiftnav/libsbp/python/tests/sbp/test_numba.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
tests/sbp/test_numba.py:5: in <module>
    from sbp.jit.file_io import MsgFileioWriteReq as MsgFileioWriteReq_j
sbp/jit/file_io.py:27: in <module>
    from sbp.jit.msg import SBP, SENDER_ID
sbp/jit/msg.py:23: in <module>
    from sbp.jit import parse_float_c
E   ImportError: dynamic module does not define module export function (PyInit_parse_float_c)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 2 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
======================================================================================== 2 error in 3.62 seconds ========================================================================================
ERROR: InvocationError: '/mnt/users/pasi/swiftnav/libsbp/python/.tox/py35/bin/py.test -v tests/'
py37 create: /mnt/users/pasi/swiftnav/libsbp/python/.tox/py37
ERROR: InterpreterNotFound: python3.7
________________________________________________________________________________________________ summary ________________________________________________________________________________________________
ERROR:   py27: commands failed
ERROR:   py35: commands failed
SKIPPED:  py37: InterpreterNotFound: python3.7
Makefile:214: recipe for target 'test-python' failed
make: *** [test-python] Error 1
pasi@pasi-linux:~/swiftnav/libsbp$ ls -la python/sbp/jit/parse_float*
-rw-r--r-- 1 pasi users 24368 Mar 25 09:15 python/sbp/jit/parse_float_c.c
-rw-r--r-- 1 pasi users 36256 Mar 25 09:16 python/sbp/jit/parse_float_c.o
-rwxr-xr-x 1 pasi users 30336 Mar 25 09:16 python/sbp/jit/parse_float_c.so
-rw-r--r-- 1 pasi users   975 Mar 25 09:30 python/sbp/jit/parse_float.py",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,3,https://github.com/swift-nav/libsbp/pull/656#issuecomment-476151294,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Changes for Python 2.7. Not sure how legit these are.
pasi@pasi-linux:~/swiftnav/libsbp$ git diff
diff --git a/python/sbp/client/framer.py b/python/sbp/client/framer.py
index d846b97..ab148d0 100644
--- a/python/sbp/client/framer.py
+++ b/python/sbp/client/framer.py
@@ -115,7 +115,7 @@ class Framer(six.Iterator):
         # empty input
         preamble = self._read(1)
         if not preamble:
-            raise StopIteration
+            return None
         elif ord(preamble) != SBP_PREAMBLE:
             if self._verbose:
                 print(""Host Side Unhandled byte: 0x%02x"" % ord(preamble))
diff --git a/python/sbp/tracking.py b/python/sbp/tracking.py
index c11bacf..56e0dbf 100644
--- a/python/sbp/tracking.py
+++ b/python/sbp/tracking.py
@@ -1126,6 +1126,26 @@ update interval.
     self.payload = MsgTrackingIqDepB._parser.build(c)
     return self.pack()

+  def into_buffer(self, buf, offset):
+    """"""Produce a framed/packed SBP message into the provided buffer and offset.
+
+    """"""
+    self.payload = containerize(exclude_fields(self))
+    def build_payload(buf, offset, payload):
+        total_length = [0]
+        class StreamPayload(object):
+            def write(self, data):
+                try:
+                    length = len(data)
+                    buf[offset:offset+length] = bytearray(data)
+                    total_length[0] += length
+                    return length
+                except Exception as exc:
+                    print(exc)
+        MsgTrackingIqDepB._parser.build_stream(payload, StreamPayload())
+        return total_length[0]
+    return self.pack_into(buf, offset, build_payload)
+
   def to_json_dict(self):
     self.to_binary()
     d = super( MsgTrackingIqDepB, self).to_json_dict()
@@ -1232,7 +1252,7 @@ class MsgTrackingIqDepA(SBP):
                     return length
                 except Exception as exc:
                     print(exc)
-        MsgTrackingIqDep._parser.build_stream(payload, StreamPayload())
+        MsgTrackingIqDepA._parser.build_stream(payload, StreamPayload())
         return total_length[0]
     return self.pack_into(buf, offset, build_payload)

diff --git a/python/tests/sbp/client/test_driver.py b/python/tests/sbp/client/test_driver.py
index bd43959..f3334b5 100755
--- a/python/tests/sbp/client/test_driver.py
+++ b/python/tests/sbp/client/test_driver.py
@@ -38,7 +38,7 @@ def tcp_server(handler):
   return (ip, port)

 def test_tcp_logger():
-  handler = tcp_handler(MsgPrintDep(text=b'abc').to_binary())
+  handler = tcp_handler(MsgPrintDep(text=b'abc').to_binary().tostring())
   ip, port = tcp_server(handler)
   port = ""socket://%s:%s"" % (ip, port)
   baud = 115200
@@ -76,7 +76,7 @@ def test_http_test_pass():
   msg = MsgPrintDep(text=b'abcd')
   register_uri(GET,
                BASE_STATION_URI,
-               msg.to_binary(),
+               msg.to_binary().tostring(),
                content_type=b""application/vnd.swiftnav.broker.v1+sbp2"")
   register_uri(PUT,
                BASE_STATION_URI,
@@ -86,7 +86,7 @@ def test_http_test_pass():
     assert not driver.read_ok
     assert driver.connect_read()
     assert driver.read_ok
-    assert driver.read(size=255) == msg.to_binary()
+    assert driver.read(size=255) == msg.to_binary().tostring()
     with pytest.raises(IOError):
       assert driver.read(size=255)
     assert not driver.read_close()
@@ -111,7 +111,7 @@ def test_http_test_fail():
   msg = MsgPrintDep(text=b'abcd')
   register_uri(GET,
                BASE_STATION_URI,
-               msg.to_binary(),
+               msg.to_binary().tolist(),
                content_type=b""application/vnd.swiftnav.broker.v1+sbp2"",
                status=400)
   register_uri(PUT,
@@ -138,7 +138,7 @@ def test_http_test_pass_streaming():
           MsgPrintDep(text=b'baz')]
   register_uri(GET,
                BASE_STATION_URI,
-               mock_streaming_msgs([m.to_binary() for m in msgs]),
+               mock_streaming_msgs([m.to_binary().tostring() for m in msgs]),
                content_type=b""application/vnd.swiftnav.broker.v1+sbp2"",
                streaming=True)
   register_uri(PUT,
@@ -149,7 +149,7 @@ def test_http_test_pass_streaming():
   with HTTPDriver(device_uid=b""Swift22"", url=BASE_STATION_URI) as driver:
     assert driver.connect_read()
     assert driver.read_ok
-    assert driver.read(size=255) == b''.join([m.to_binary() for m in msgs])
+    assert driver.read(size=255) == b''.join([m.to_binary().tostring() for m in msgs])
     assert driver.read(size=255) == b''
     assert not driver.read_close()
     assert driver.read_response is None
pasi@pasi-linux:~/swiftnav/libsbp$

After this Python 3.5 still failing
========================================================================================== test session starts ==========================================================================================
platform linux -- Python 3.5.0, pytest-3.1.2, py-1.8.0, pluggy-0.4.0 -- /mnt/users/pasi/swiftnav/libsbp/python/.tox/py35/bin/python
cachedir: .cache
rootdir: /mnt/users/pasi/swiftnav/libsbp/python, inifile: pytest.ini
plugins: cov-2.5.1
collected 32 items

tests/sbp/test_messages.py::test_messages PASSED
tests/sbp/test_numba.py::test_get_string FAILED
tests/sbp/test_numba.py::test_get_string_no_null FAILED
tests/sbp/test_numba.py::test_get_string_offset_no_null FAILED
tests/sbp/test_numba.py::test_get_string_offset FAILED
tests/sbp/test_numba.py::test_get_fixed_string_offset FAILED
tests/sbp/test_numba.py::test_parse PASSED
tests/sbp/test_numba.py::test_jit PASSED
tests/sbp/test_table.py::test_table_count PASSED
tests/sbp/test_table.py::test_table_unqiue_count PASSED
tests/sbp/test_table.py::test_available_messages PASSED
tests/sbp/client/test_driver.py::test_tcp_logger PASSED
tests/sbp/client/test_driver.py::test_http_test_pass PASSED
tests/sbp/client/test_driver.py::test_http_test_fail PASSED
tests/sbp/client/test_driver.py::test_http_test_pass_streaming PASSED
tests/sbp/client/test_driver.py::test_http_test_pass_retry PASSED
tests/sbp/client/test_handler.py::test_framer_receive_empty PASSED
tests/sbp/client/test_handler.py::test_framer_receive_bad_preamble PASSED
tests/sbp/client/test_handler.py::test_framer_bad_crc PASSED
tests/sbp/client/test_handler.py::test_framer_ok PASSED
tests/sbp/client/test_handler.py::test_handler_callbacks PASSED
tests/sbp/client/test_handler.py::test_multiple_handler_callbacks PASSED
tests/sbp/client/test_handler.py::test_child_iter PASSED
tests/sbp/client/test_handler.py::test_filter PASSED
tests/sbp/client/test_handler.py::test_dead_gc PASSED
tests/sbp/client/test_handler.py::test_late_iter PASSED
tests/sbp/client/test_logger.py::test_log PASSED
tests/sbp/client/test_logger.py::test_json_log PASSED
tests/sbp/client/test_logger.py::test_non_utf8_json_log PASSED
tests/sbp/client/test_logger.py::test_msg_print xfail
tests/sbp/client/test_logger.py::test_udp_logger PASSED
tests/sbp/client/test_logger.py::test_rolling_json_log PASSED

=============================================================================================== FAILURES ================================================================================================
____________________________________________________________________________________________ test_get_string ____________________________________________________________________________________________

    def test_get_string():
>       s = _mk_string('thisisastring')

tests/sbp/test_numba.py:21:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

val = 'thisisastring', null = '\x00'

    def _mk_string(val, null='\x00'):
>       ba = bytearray(val + (null if null is not None else ''))
E       TypeError: string argument without an encoding

tests/sbp/test_numba.py:16: TypeError
________________________________________________________________________________________ test_get_string_no_null ________________________________________________________________________________________

    def test_get_string_no_null():
>       s = _mk_string('thisisastring', null=None)

tests/sbp/test_numba.py:28:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

val = 'thisisastring', null = None

    def _mk_string(val, null='\x00'):
>       ba = bytearray(val + (null if null is not None else ''))
E       TypeError: string argument without an encoding

tests/sbp/test_numba.py:16: TypeError
____________________________________________________________________________________ test_get_string_offset_no_null _____________________________________________________________________________________

    def test_get_string_offset_no_null():
>       s = _mk_string('________thisisastring', null=None)

tests/sbp/test_numba.py:35:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

val = '________thisisastring', null = None

    def _mk_string(val, null='\x00'):
>       ba = bytearray(val + (null if null is not None else ''))
E       TypeError: string argument without an encoding

tests/sbp/test_numba.py:16: TypeError
________________________________________________________________________________________ test_get_string_offset _________________________________________________________________________________________

    def test_get_string_offset():
>       s = _mk_string('________thisisastring')

tests/sbp/test_numba.py:42:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

val = '________thisisastring', null = '\x00'

    def _mk_string(val, null='\x00'):
>       ba = bytearray(val + (null if null is not None else ''))
E       TypeError: string argument without an encoding

tests/sbp/test_numba.py:16: TypeError
_____________________________________________________________________________________ test_get_fixed_string_offset ______________________________________________________________________________________

    def test_get_fixed_string_offset():
>       s = _mk_string('________thisisastring')

tests/sbp/test_numba.py:49:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

val = '________thisisastring', null = '\x00'

    def _mk_string(val, null='\x00'):
>       ba = bytearray(val + (null if null is not None else ''))
E       TypeError: string argument without an encoding

tests/sbp/test_numba.py:16: TypeError
=========================================================================================== warnings summary ============================================================================================
tests/sbp/client/test_logger.py::test_rolling_json_log
  /mnt/users/pasi/swiftnav/libsbp/python/tests/sbp/client/test_logger.py:89: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
    assert data == self.request[0].strip()

-- Docs: http://doc.pytest.org/en/latest/warnings.html
====================================================================== 5 failed, 26 passed, 1 xfailed, 1 warnings in 13.83 seconds ======================================================================",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,4,https://github.com/swift-nav/libsbp/pull/656#issuecomment-476158956,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Changes for py3
pasi@pasi-linux:~/swiftnav/libsbp$ git diff python/tests/sbp/test_numba.py
diff --git a/python/tests/sbp/test_numba.py b/python/tests/sbp/test_numba.py
index fc5dbaf..bf4cfcc 100644
--- a/python/tests/sbp/test_numba.py
+++ b/python/tests/sbp/test_numba.py
@@ -13,7 +13,7 @@ from sbp.jit.table import dispatch


 def _mk_string(val, null='\x00'):
-    ba = bytearray(val + (null if null is not None else ''))
+    ba = bytearray(val + (null if null is not None else ''), 'ascii')
     return np.array(ba, dtype=np.uint8)


@@ -21,35 +21,35 @@ def test_get_string():
     s = _mk_string('thisisastring')
     out, offset, length = get_string(s, 0, len(s))
     assert len(out) == len('thisisastring')
-    assert out == 'thisisastring'
+    assert out == b'thisisastring'


 def test_get_string_no_null():
     s = _mk_string('thisisastring', null=None)
     out, offset, length = get_string(s, 0, len(s))
     assert len(out) == len('thisisastring')
-    assert out == 'thisisastring'
+    assert out == b'thisisastring'


 def test_get_string_offset_no_null():
     s = _mk_string('________thisisastring', null=None)
     out, offset, length = get_string(s, 8, len(s) - 8)
     assert len(out) == len('thisisastring')
-    assert out == 'thisisastring'
+    assert out == b'thisisastring'


 def test_get_string_offset():
     s = _mk_string('________thisisastring')
     out, offset, length = get_string(s, 8, len(s))
     assert len(out) == len('thisisastring')
-    assert out == 'thisisastring'
+    assert out == b'thisisastring'


pasi@pasi-linux:~/swiftnav/libsbp$",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,5,https://github.com/swift-nav/libsbp/pull/656#issuecomment-476553701,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Floating point parsing produces different results than the original serial_link.py approach.
I have a log from one TTFF run and fix reported in the json file from
sbp2json.py
""lat"":61.44696044921875,""lon"":23.858476638793945
serial_link.py
""lat"":61.44696172596402,""lon"":23.8584758593452
Latter matches with Haskell sbp2json. Random online calculator gives 15 cm distance between these points.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,6,https://github.com/swift-nav/libsbp/pull/656#issuecomment-476580168,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Solution for above: get_f64 in parse_float.py needs to return double, not float.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,7,https://github.com/swift-nav/libsbp/pull/656#issuecomment-476606101,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","String handling doesn't cope with the settings NULL delimiter
Got:
{""crc"":9354,""length"":43,""msg_type"":175,""payload"":""AHVhcnQxAGZsb3dfY29udHJvbABOb25lAGVudW06Tm9uZSxSVFMvQ1RTAA==\n"",""setting"":""uart1"",""status"":0}
Expected:
{""crc"":9354,""length"":43,""msg_type"":175,""payload"":""AHVhcnQxAGZsb3dfY29udHJvbABOb25lAGVudW06Tm9uZSxSVFMvQ1RTAA=="",""preamble"":85,""sender"":45490,""setting"":""uart1\u0000flow_control\u0000None\u0000enum:None,RTS/CTS\u0000"",""status"":0}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,8,https://github.com/swift-nav/libsbp/pull/656#issuecomment-476607329,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s",parse_members should store nb.float32 and nb.float64 instead of Python builtin float. See this JIRA issue comment for details.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,9,https://github.com/swift-nav/libsbp/pull/656#issuecomment-476622817,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Possible solution for the settings NULL delimiter issue:
@nb.jit('Tuple((u1[:],u4,u4))(u1[:],u4,u4)', nopython=True, nogil=True)
def _get_string(buf_in, offset, length):
    buf_out = np.zeros(256, dtype=np.uint8)
    i = nb.u4(0)
    while i < length:
        buf_out[i] = buf_in[offset + i]
        i = nb.u4(i + nb.u4(1))

    return buf_out[:i], offset + i, i",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,10,https://github.com/swift-nav/libsbp/pull/656#issuecomment-476640094,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","At the end of every payload there's extra \n for some reason.
Example:
""payload"":""AHVhcnQxAGZsb3dfY29udHJvbABOb25lAGVudW06Tm9uZSxSVFMvQ1RTAA==\n""",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,11,https://github.com/swift-nav/libsbp/pull/656#issuecomment-479428189,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Possible solution for the settings NULL delimiter issue:
@nb.jit('Tuple((u1[:],u4,u4))(u1[:],u4,u4)', nopython=True, nogil=True)
def _get_string(buf_in, offset, length):
    buf_out = np.zeros(256, dtype=np.uint8)
    i = nb.u4(0)
    while i < length:
        buf_out[i] = buf_in[offset + i]
        i = nb.u4(i + nb.u4(1))

    return buf_out[:i], offset + i, i


This doesn't work with MsgFileioWriteReq.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,12,https://github.com/swift-nav/libsbp/pull/656#issuecomment-479447291,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Something like this instead:
@nb.jit('Tuple((u1[:],u4,u4))(u1[:],u4,u4)', nopython=True, nogil=True)
def _get_setting(buf_in, offset, length):
    buf_out = np.zeros(256, dtype=np.uint8)
    i = nb.u4(0)
    while i < length:
        buf_out[i] = buf_in[offset + i]
        i = nb.u4(i + nb.u4(1))

    return buf_out[:i], offset + i, i

def get_setting(buf, offset, length):
    buf, offset, length = _get_setting(buf, offset, length)
    return buf.tobytes(), offset, length

    ((*- if f.identifier == 'setting' *))
    o_1, __setting_type, (__setting, offset, length) = offset, 'None', get_setting(buf, offset, length)
    ((* else *))
    o_1, __(((f.identifier)))_type, (__(((f.identifier))), offset, length) = offset, '((( f.type_id | numba_float_type )))', ((( f | numba_py )))(buf, offset, length)
    ((* endif *))",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,13,https://github.com/swift-nav/libsbp/pull/656#issuecomment-479472512,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Regarding the newline on the payload value.
https://buildmedia.readthedocs.org/media/pdf/pybase64/latest/pybase64.pdf

2.3 Legacy API Reference
pybase64.encodebytes(s)
Encode bytes into a bytes object with newlines (b‚Äô ‚Äò) inserted after every 76 bytes of output, and ensuring that there is a trailing newline, as per RFC 2045 (MIME).
Argument s is a bytes-like object to encode.
The result is returned as a bytes object.

To mitigate it and convert to str object at the same time:
res['payload'] = pybase64.encodebytes(self.payload.tobytes()).decode('ascii').strip('\n')",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,14,https://github.com/swift-nav/libsbp/pull/656#issuecomment-479478323,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Some failure happening and empty JSON object is printed in case of few messages
sbp2json.py
{""crc"":4949,""flags"":2147615488,""length"":4,""msg_type"":65535,""payload"":""AAMCgA==""}
{}
{}
{""cpu"":1,""crc"":3664,""length"":26,""msg_type"":23,""name"":""rpmsg"",""payload"":""cnBtc2cAAAAAAAAAAAAAAAAAAAABAPwNAAA="",""stack_free"":3580}
{}
{}
{""cpu"":0,""crc"":44965,""length"":26,""msg_type"":23,""name"":""manage PV"",""payload"":""bWFuYWdlIFBWAAAAAAAAAAAAAAAAAMwEAAA="",""stack_free"":1228}
{}
{""cpu"":0,""crc"":19574,""length"":26,""msg_type"":23,""name"":""IMU aux"",""payload"":""SU1VIGF1eAAAAAAAAAAAAAAAAAAAAAQJAAA="",""stack_free"":2308}
{}

Expected
{""crc"":4949,""flags"":2147615488,""length"":4,""msg_type"":65535,""payload"":""AAMCgA=="",""preamble"":85,""sender"":45490}
{""cpu"":3,""crc"":60639,""length"":26,""msg_type"":23,""name"":""main\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"",""payload"":""bWFpbgAAAAAAAAAAAAAAAAAAAAADALxzAAA="",""preamble"":85,""sender"":45490,""stack_free"":29628}
{""cpu"":955,""crc"":18613,""length"":26,""msg_type"":23,""name"":""idle\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"",""payload"":""aWRsZQAAAAAAAAAAAAAAAAAAAAC7A3wAAAA="",""preamble"":85,""sender"":45490,""stack_free"":124}
{""cpu"":1,""crc"":3664,""length"":26,""msg_type"":23,""name"":""rpmsg\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"",""payload"":""cnBtc2cAAAAAAAAAAAAAAAAAAAABAPwNAAA="",""preamble"":85,""sender"":45490,""stack_free"":3580}
{""cpu"":1,""crc"":21969,""length"":26,""msg_type"":23,""name"":""SBP\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"",""payload"":""U0JQAAAAAAAAAAAAAAAAAAAAAAABAPz/AAA="",""preamble"":85,""sender"":45490,""stack_free"":65532}
{""cpu"":0,""crc"":60142,""length"":26,""msg_type"":23,""name"":""NAP\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"",""payload"":""TkFQAAAAAAAAAAAAAAAAAAAAAAAAAMSAAAA="",""preamble"":85,""sender"":45490,""stack_free"":32964}
{""cpu"":0,""crc"":44965,""length"":26,""msg_type"":23,""name"":""manage PV\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"",""payload"":""bWFuYWdlIFBWAAAAAAAAAAAAAAAAAMwEAAA="",""preamble"":85,""sender"":45490,""stack_free"":1228}
{""cpu"":0,""crc"":26710,""length"":26,""msg_type"":23,""name"":""IMU\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"",""payload"":""SU1VAAAAAAAAAAAAAAAAAAAAAAAAAPwHAAA="",""preamble"":85,""sender"":45490,""stack_free"":2044}
{""cpu"":0,""crc"":19574,""length"":26,""msg_type"":23,""name"":""IMU aux\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"",""payload"":""SU1VIGF1eAAAAAAAAAAAAAAAAAAAAAQJAAA="",""preamble"":85,""sender"":45490,""stack_free"":2308}
{""cpu"":0,""crc"":59610,""length"":26,""msg_type"":23,""name"":""ndb\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"",""payload"":""bmRiAAAAAAAAAAAAAAAAAAAAAAAAAGwNAAA="",""preamble"":85,""sender"":45490,""stack_free"":3436}

Note also preamble and sender elements missing.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,15,https://github.com/swift-nav/libsbp/pull/656#issuecomment-480186931,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","In case of CRC failure, few following messages are lost compared to non-jit sbp2json.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,16,https://github.com/swift-nav/libsbp/pull/656#issuecomment-480260689,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","My short test file is now producing exactly identical outputs for haskell and JIT python. Looks promising for the floating point formatting being solved.
Moving to longer file. First finding, message seems to be output twice, only difference is the crc being 0. Multiple cases, investigating. 0 crc version is not present in haskell output.
{""crc"":0,""flags"":1,""length"":11,""msg_type"":258,""ns_residual"":0,""payload"":""7gcMQI4MAAAAAAE="",""preamble"":85,""sender"":45490,""tow"":210649100,""wn"":2030}
{""crc"":10447,""flags"":1,""length"":11,""msg_type"":258,""ns_residual"":0,""payload"":""7gcMQI4MAAAAAAE="",""preamble"":85,""sender"":45490,""tow"":210649100,""wn"":2030}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,17,https://github.com/swift-nav/libsbp/pull/656#issuecomment-480265087,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","get_fixed_array is cut short in SbasMsgRaw.
py
{""crc"":37711,""data"":[0,0,255,63,255,0,15,245,255,80,0,255,192,0],""length"":34,""message_type"":2,""msg_type"":30583,""payload"":""ewKVNo0MAgAA/z//AA/1/1AA/8AAAFABAAAA5V5W5eZe4A=="",""preamble"":85,""sender"":45490,""sid"":{""code"":2,""sat"":123},""tow"":210581141}

hs
{""crc"":37711,""data"":[0,0,255,63,255,0,15,245,255,80,0,255,192,0,0,80,1,0,0,0,229,94,86,229,230,94,224],""length"":34,""message_type"":2,""msg_type"":30583,""payload"":""ewKVNo0MAgAA/z//AA/1/1AA/8AAAFABAAAA5V5W5eZe4A=="",""preamble"":85,""sender"":45490,""sid"":{""code"":2,""sat"":123},""tow"":210581141}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,18,https://github.com/swift-nav/libsbp/pull/656#issuecomment-480285830,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","MsgEphemeris parsing has anomalies.
12179c12179
< {""acc"":[-9.313226e-7,-1.8626451e-6,-1.8626451e-6],""common"":{""fit_interval"":2400,""health_bits"":0,""sid"":{""code"":3,""sat"":14},""toe"":{""tow"":211518,""wn"":2030},""ura"":5,""valid"":1},""crc"":53129,""d_tau"":5.5879354e-9,""fcn"":1,""gamma"":0,""iod"":92,""length"":92,""msg_type"":139,""payload"":""DgM+OgMA7gcAAKBAYAkAAAEAAAAAAAAPDbgAAMAxAAAA5F2TUUEAAMAnmuRxQQAAwN3Mz29BAAAAflyElMAAAACw9iydwAAAAB8ZQaNAAAB6tQAA+rUAAPq1AVw="",""pos"":[4607351.5625,1.8762146484375e7,1.66785029296875e7],""preamble"":85,""sender"":45490,""tau"":-3.363099e-5,""vel"":[-1313.0903244018555,-1867.2409057617188,2464.5490646362305]}
---
> {""acc"":[81,65,0],""common"":{""fit_interval"":2400,""health_bits"":0,""sid"":{""code"":3,""sat"":14},""toe"":{""tow"":211518,""wn"":2030},""ura"":5,""valid"":1},""crc"":53129,""d_tau"":5.5879354e-9,""fcn"":0,""gamma"":0,""iod"":192,""length"":92,""msg_type"":139,""payload"":""DgM+OgMA7gcAAKBAYAkAAAEAAAAAAAAPDbgAAMAxAAAA5F2TUUEAAMAnmuRxQQAAwN3Mz29BAAAAflyElMAAAACw9iydwAAAAB8ZQaNAAAB6tQAA+rUAAPq1AVw="",""pos"":[0,0,0],""preamble"":85,""sender"":45490,""tau"":-3.363099e-5,""vel"":[228,93,147]}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,19,https://github.com/swift-nav/libsbp/pull/656#issuecomment-480290235,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","acc values are of type double but they are fetched using get_u8 hence the anomalies in MsgEphemeris.
    (__acc, offset, length) = get_fixed_array(get_u8, 3, 1)(buf, offset, length)
    ret['acc'] = __acc",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,20,https://github.com/swift-nav/libsbp/pull/656#issuecomment-480846211,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","get_fixed_array sorted out. One more rounding issue present with doubles (see last values of the example).
12181c12181
< {""acc"":[4.656613e-6,0,-2.7939677e-6],""common"":{""fit_interval"":2400,""health_bits"":1,""sid"":{""code"":3,""sat"":26},""toe"":{""tow"":211518,""wn"":2030},""ura"":16,""valid"":1},""crc"":8051,""d_tau"":3.7252903e-9,""fcn"":3,""gamma"":1.8189894e-12,""iod"":92,""length"":92,""msg_type"":139,""payload"":""GgM+OgMA7gcAAIBBYAkAAAEBAAAALAD4B7cAAIAxAADwxEvfdUEAAMB1UwtbwQAA4Fg9ZWBBAAAA1I3DkUAAAADgGEp3wAAAAAiWKarAAECcNgAAAIAAgDu2A1w="",""pos"":[2.293471630859375e7,-7089485.83984375,8595946.77734375],""preamble"":85,""sender"":45490,""tau"":-8.104369e-6,""vel"":[1136.8885040283203,-372.6310729980469,-3348.7930297851563]}
---
> {""acc"":[4.656613e-6,0,-2.7939677e-6],""common"":{""fit_interval"":2400,""health_bits"":1,""sid"":{""code"":3,""sat"":26},""toe"":{""tow"":211518,""wn"":2030},""ura"":16,""valid"":1},""crc"":8051,""d_tau"":3.7252903e-9,""fcn"":3,""gamma"":1.8189894e-12,""iod"":92,""length"":92,""msg_type"":139,""payload"":""GgM+OgMA7gcAAIBBYAkAAAEBAAAALAD4B7cAAIAxAADwxEvfdUEAAMB1UwtbwQAA4Fg9ZWBBAAAA1I3DkUAAAADgGEp3wAAAAAiWKarAAECcNgAAAIAAgDu2A1w="",""pos"":[2.293471630859375e7,-7089485.83984375,8595946.77734375],""preamble"":85,""sender"":45490,""tau"":-8.104369e-6,""vel"":[1136.8885040283203,-372.6310729980469,-3348.7930297851562]}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,21,https://github.com/swift-nav/libsbp/pull/656#issuecomment-480852143,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s",Rounding diff is most likely numpy using unbiased and haskell using biased rounding.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,22,https://github.com/swift-nav/libsbp/pull/656#issuecomment-480875026,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Few more details on the rounding this far. Precision is 14 decimals. If the last digits are ...25, numpy rounds it to ...2 and haskell to ...3.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,23,https://github.com/swift-nav/libsbp/pull/656#issuecomment-481231651,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","With current changes my longer test SBP log (~78MB) against pretty haskell produces now diff
4288,4292c4288,4292
< null
< null
< null
< null
< null
---
> {}
> {}
> {}
> {}
> {}

So there's 5 unknown messages left producing the garbage lines. Investigating...",True,{'HOORAY': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,24,https://github.com/swift-nav/libsbp/pull/656#issuecomment-481595508,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","The mystic message is MSG_SETTINGS_READ_BY_INDEX_DONE  which has no payload. Python prints {} and haskell null. I think both are incorrect. Should be something like
{""crc"":xx""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,25,https://github.com/swift-nav/libsbp/pull/656#issuecomment-481631724,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s","Python side fixed
pasi@pasi-linux:~/swiftnav/libsbp/tmp$ diff hask_pretty.json jit.json
4288,4292c4288,4292
< null
< null
< null
< null
< null
---
> {""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
> {""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
> {""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
> {""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
> {""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}

Issue for Haskell https://swift-nav.atlassian.net/browse/ESD-1238",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/pmiettinen,26,https://github.com/swift-nav/libsbp/pull/656#issuecomment-490449151,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s",#667 currently contains exactly the same commits as this PR so in that sense this can be closed.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,656,2019-02-27T04:30:19Z,2019-05-08T18:11:37Z,2019-05-08T18:11:37Z,CLOSED,False,14799,11,39,https://github.com/silverjam,Python: Numba based SBP parsing [ESD-1154],30,[],https://github.com/swift-nav/libsbp/pull/656,https://github.com/silverjam,27,https://github.com/swift-nav/libsbp/pull/656#issuecomment-490592594,"This is paired with the following piksi_tools PR: swift-nav/piksi_tools#985
Design notes
Numba based parsing for SBP classes.  Adds various numba accelerated get_* functions used to parse SBP data.
Parsing floats
Floats are parsed using a module generated by another library, cffi -- https://cffi.readthedocs.io/en/latest/ -- this is used to generate a Python native module that can parse and re-assemble float and double values from a stream of bytes.  This was done because numba was unable to generate code that could do the necessary bit banging.
To generate this module, run the following:
source <my/libsbp/virtualenv/bin/activate>
cd python/sbp/jit
python parse_float.py

This will generate parse_float_c.so (and parse_float_c.c) which will be loadable by Python.
Next steps
The next step from here would be to make the various MsgWhatever.parse_members methods able to be JIT generated.  This would require some more clever use of Tuple(( ... )) for the return values of the .parse_member method.
Testing results


Without JIT‚Äôd unpack/parse (with JIT‚Äôd crc routine though):
$ NOJIT=y time python ./sbp2json.py <sbp16m.bin  >/dev/null
   247.10 real       227.52 user         1.40 sys



With JIT‚Äôd crc/unpack/parse:
$ time python ./sbp2json.py <sbp16m.bin  >/dev/null

real    0m11.632s 
user    0m10.813s
sys     0m0.338s



Haskell sbp2json for reference:
$ time sbp2json <sbp16m.bin  >/dev/null

real    0m6.563s
user    0m8.168s
sys     0m0.667s",Closing in favor of #667,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,657,2019-02-28T04:30:01Z,2021-09-28T03:07:06Z,2021-09-28T03:07:06Z,CLOSED,False,37,4,1,https://github.com/mdleiton,Updated Java example to include some types of messages.,1,[],https://github.com/swift-nav/libsbp/pull/657,https://github.com/mdleiton,1,https://github.com/swift-nav/libsbp/pull/657,Updated Java example to include some types of messages and the default output to know types of received messages.,Updated Java example to include some types of messages and the default output to know types of received messages.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,658,2019-02-28T16:54:24Z,2019-03-27T04:23:10Z,2019-03-27T04:23:12Z,MERGED,True,1558,65,29,https://github.com/silverjam,"Add JIT for crc, build into existing buffer to avoid copies [ESD-1108]",8,[],https://github.com/swift-nav/libsbp/pull/658,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/658,"Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits","Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,658,2019-02-28T16:54:24Z,2019-03-27T04:23:10Z,2019-03-27T04:23:12Z,MERGED,True,1558,65,29,https://github.com/silverjam,"Add JIT for crc, build into existing buffer to avoid copies [ESD-1108]",8,[],https://github.com/swift-nav/libsbp/pull/658,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/658#issuecomment-471646409,"Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits","Three questions:

Do you plan to replace the callable of the handler / framer with these new ""into_buffer"" features that reduce copying?
Should the ""bench"" features be turned into unit tests type features instead?
Can you try the receive path benchmarking with files in which MsgObs which dominate the stream?  These messages are usually big (255 bytes) so the CRC and copying might eat a larger proportion of CPU for streams dominated by the Obs, which will likely show that these changes will have a bigger performance impact.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,658,2019-02-28T16:54:24Z,2019-03-27T04:23:10Z,2019-03-27T04:23:12Z,MERGED,True,1558,65,29,https://github.com/silverjam,"Add JIT for crc, build into existing buffer to avoid copies [ESD-1108]",8,[],https://github.com/swift-nav/libsbp/pull/658,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/658#issuecomment-471647099,"Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits",Wait I see you already setup into_buffer as part of the framer here: https://github.com/swift-nav/libsbp/pull/658/files#diff-f7e7ceb9c48458bb44be66283049a27bR162 so you can ignore my question about whether the python drivers use these features yet.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,658,2019-02-28T16:54:24Z,2019-03-27T04:23:10Z,2019-03-27T04:23:12Z,MERGED,True,1558,65,29,https://github.com/silverjam,"Add JIT for crc, build into existing buffer to avoid copies [ESD-1108]",8,[],https://github.com/swift-nav/libsbp/pull/658,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/658#issuecomment-471696371,"Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits","@denniszollo I think the bench scripts should be run regularly, but I don't think it should be part of CI-- maybe we can set these up in the Travis ""cron"" to run weekly or so.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,658,2019-02-28T16:54:24Z,2019-03-27T04:23:10Z,2019-03-27T04:23:12Z,MERGED,True,1558,65,29,https://github.com/silverjam,"Add JIT for crc, build into existing buffer to avoid copies [ESD-1108]",8,[],https://github.com/swift-nav/libsbp/pull/658,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/658#issuecomment-471732855,"Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits","@denniszollo Benchmarking obs would be good for the next task I have planned, which is to add an ""into_buffer"" variant for the receive path.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,658,2019-02-28T16:54:24Z,2019-03-27T04:23:10Z,2019-03-27T04:23:12Z,MERGED,True,1558,65,29,https://github.com/silverjam,"Add JIT for crc, build into existing buffer to avoid copies [ESD-1108]",8,[],https://github.com/swift-nav/libsbp/pull/658,https://github.com/pmiettinen,6,https://github.com/swift-nav/libsbp/pull/658#issuecomment-472466663,"Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits","make python problems on Ubuntu 16.04, concerns py35 and py37.
Failed to build numba llvmlite
Installing collected packages: construct, futures, six, httpretty, pyserial, pyusb, pyftdi, pylibftdi, chardet, urllib3, idna, certifi, requests, requests-futures, numpy, llvmlite, numba, py, pytest, coverage, pytest-cov, cov-core, virtualenv, toml, pluggy, filelock, tox, ruamel.yaml
  Running setup.py install for llvmlite: started
    Running setup.py install for llvmlite: finished with status 'error'
    Complete output from command /mnt/users/pasi/swiftnav/libsbp/python/.tox/py35/bin/python3.5 -u -c ""import setuptools, tokenize;__file__='/tmp/pip-install-sp_tmt65/llvmlite/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /tmp/pip-record-qxxtn93f/install-record.txt --single-version-externally-managed --compile --install-headers /mnt/users/pasi/swiftnav/libsbp/python/.tox/py35/include/site/python3.5/llvmlite:
    running install
    running build
    got version from file /tmp/pip-install-sp_tmt65/llvmlite/llvmlite/_version.py {'version': '0.27.1', 'full': 'f008359c1f9ee5e8a6a98f2095ea460f09f57edb'}
    running build_ext
    /mnt/users/pasi/swiftnav/libsbp/python/.tox/py35/bin/python3.5 /tmp/pip-install-sp_tmt65/llvmlite/ffi/build.py
    LLVM version... make[1]: Entering directory '/tmp/pip-install-sp_tmt65/llvmlite/ffi'
    # static-libstdc++ avoids runtime dependencies on a
    # particular libstdc++ version.
    g++  -shared -I/usr/lib/llvm-7/include -fno-exceptions -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-rtti -g -flto assembly.cpp bitcode.cpp core.cpp initfini.cpp module.cpp value.cpp executionengine.cpp transforms.cpp passmanagers.cpp targets.cpp dylib.cpp linker.cpp object_file.cpp -o libllvmlite.so  -L/usr/lib/llvm-7/lib -flto -Wl,--exclude-libs=ALL -lLLVM-7
    transforms.cpp:10:32: warning: ‚Äòunwrap‚Äô violates the C++ One Definition Rule  [-Wodr]
         inline PassManagerBuilder *unwrap(LLVMPassManagerBuilderRef P) {
                                    ^
    executionengine.cpp:53:27: note: return value type mismatch
         inline TargetMachine *unwrap(LLVMTargetMachineRef P) {
                               ^
    /usr/lib/llvm-7/include/llvm/Target/TargetMachine.h:59:7: note: type name ‚Äòllvm::TargetMachine‚Äô should match type name ‚Äòllvm::PassManagerBuilder‚Äô
     class TargetMachine {
           ^
    /usr/lib/llvm-7/include/llvm/Transforms/IPO/PassManagerBuilder.h:59:7: note: the incompatible type is defined here
     class PassManagerBuilder {
           ^
    executionengine.cpp:53:27: note: ‚Äòunwrap‚Äô was previously declared here
         inline TargetMachine *unwrap(LLVMTargetMachineRef P) {
                               ^
    executionengine.cpp:53:27: note: code may be misoptimized unless -fno-strict-aliasing is used
    /usr/bin/x86_64-linux-gnu-ld: /tmp/ccqf68sU.ltrans0.ltrans.o: relocation R_X86_64_32S against `_ZN4llvm3sys14DynamicLibrary7InvalidE' can not be used when making a shared object; recompile with -fPIC
    /tmp/ccqf68sU.ltrans0.ltrans.o: error adding symbols: Bad value
    collect2: error: ld returned 1 exit status
    Makefile.linux:20: recipe for target 'libllvmlite.so' failed
    make[1]: *** [libllvmlite.so] Error 1
    make[1]: Leaving directory '/tmp/pip-install-sp_tmt65/llvmlite/ffi'
    7.0.1

    SVML not detected
    Traceback (most recent call last):
      File ""/tmp/pip-install-sp_tmt65/llvmlite/ffi/build.py"", line 167, in <module>
        main()
      File ""/tmp/pip-install-sp_tmt65/llvmlite/ffi/build.py"", line 157, in main
        main_posix('linux', '.so')
      File ""/tmp/pip-install-sp_tmt65/llvmlite/ffi/build.py"", line 149, in main_posix
        subprocess.check_call(['make', '-f', makefile])
      File ""/usr/lib/python3.5/subprocess.py"", line 581, in check_call
        raise CalledProcessError(retcode, cmd)
    subprocess.CalledProcessError: Command '['make', '-f', 'Makefile.linux']' returned non-zero exit status 2
    error: command '/mnt/users/pasi/swiftnav/libsbp/python/.tox/py35/bin/python3.5' failed with exit status 1
Google finding https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=912790",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,658,2019-02-28T16:54:24Z,2019-03-27T04:23:10Z,2019-03-27T04:23:12Z,MERGED,True,1558,65,29,https://github.com/silverjam,"Add JIT for crc, build into existing buffer to avoid copies [ESD-1108]",8,[],https://github.com/swift-nav/libsbp/pull/658,https://github.com/benjaminaltieri,7,https://github.com/swift-nav/libsbp/pull/658#issuecomment-472526057,"Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits","@silverjam I haven't had a chance to review/test, but would it be difficult to encapsulate numpy/numba into an optional feature with a subset of cross-platform support, while retaining the un-optimized functionality across all previously supported platforms? that way a user external to Swift who may want to avoid these dependencies can do so, while internally we can benefit from the speedups you are introducing",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,658,2019-02-28T16:54:24Z,2019-03-27T04:23:10Z,2019-03-27T04:23:12Z,MERGED,True,1558,65,29,https://github.com/silverjam,"Add JIT for crc, build into existing buffer to avoid copies [ESD-1108]",8,[],https://github.com/swift-nav/libsbp/pull/658,https://github.com/silverjam,8,https://github.com/swift-nav/libsbp/pull/658#issuecomment-472620447,"Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits","@benjaminaltieri @pmiettinen Fixed Ubuntu 16.04 by pinning the numba/llvmlite versions to something that doesn't require LLVM 7.  The eventual goal with these speed-ups is to not require numba for ""deployed"" versions of libsbp (that is, what we push to PyPI) since numba supports ahead of time compilation of accelerated functions (cffi, which is used in the Numba based parsing prototype, also supports this).",True,{'THUMBS_UP': ['https://github.com/benjaminaltieri']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,658,2019-02-28T16:54:24Z,2019-03-27T04:23:10Z,2019-03-27T04:23:12Z,MERGED,True,1558,65,29,https://github.com/silverjam,"Add JIT for crc, build into existing buffer to avoid copies [ESD-1108]",8,[],https://github.com/swift-nav/libsbp/pull/658,https://github.com/silverjam,9,https://github.com/swift-nav/libsbp/pull/658#issuecomment-472647377,"Design notes
Two general SBP parsing improvements:

To avoid buffer copies add an ""into"" variant for filling a buffer with SBP data, this allows the handler object to re-use one buffer and simply fill it with SBP data as needed -- note this only improves things on the send path, a similar variant on the recv path needs to be added.
Add a Numba based CRC routine to speed up CRC calculations

Testing

Send path copies/JIT:

Send path without reduced copies (and JIT):

95.13, 108.14, 114.50
Average: 105.92


Send path with reduced copies and JIT:

91.16, 94.41, 94.80
Average: 93.46


11.76% improvement
Send path with reduced copies (and without JIT):

147.58, 121.28, 107.57
Average: 125.47


Send path without reduced copies (and without JIT):

111.83, 111.30, 102.92
Average: 108.68


13.38% improvement


Receive path JIT:

Receive path with JIT:

96.90, 99.66, 98.34, 99.38, 96.23, 95.08
Average: 97.60


Receive path without JIT:

100.71, 100.55, 102.90, 100.26, 99.76, 101.41
Average: 100.93


3.3% improvement



Todo

 Re-enable JIT routines for CRCs
 Re-stack git commits","The continuous-integration/travis-ci/push failure is weird, both the push and pr travis check seem to be running the same unit test code (with ""localhost"" wrapped in getaddressbyname for the tcp test).  On the push build py35 fails (but everything else succeeds)-- on the pr build all Python versions succeed... the one that's succeeding is the version that represents a merge to master, so this likely means the unit test will be fine once this PR is merged?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,659,2019-03-01T07:39:05Z,2019-03-01T09:06:47Z,2019-03-01T09:06:54Z,MERGED,True,35,14,10,https://github.com/silverjam,Release 2.5.0,5,[],https://github.com/swift-nav/libsbp/pull/659,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/659,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,660,2019-03-04T05:50:36Z,2019-03-06T03:50:47Z,2019-03-06T03:50:52Z,MERGED,True,3,1,2,https://github.com/woodfell,Close serial port fd when piksi disconnects [ESD-1111],2,[],https://github.com/swift-nav/libsbp/pull/660,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/660,"When a piksi is connected to a host via USB cable it will create
3 virtual serial ports which appear on linux systems as /dev/ttyACM*.
When Piksi resets or the USB cable is disconnected the kernel will
remove these device nodes automatically.
When console connects to Piksi via one of these ports is will
detect the disconnect event and raise a message in the log. However
it will not close the file descriptor. The kernel will be unable to
fully remove the device since a FD is still open.
When the Piksi reboots and tries to recreate its virtual ports the
linux kernel will be unable to reuse the same device number as before
so long as the previous console process is still running.
Solution - When console detects the piksi disconnect event it should
close the handle. This allows the kernel to reuse the previous device
node as soon as piksi reboots.
Testing

Open console, connect to a running Piksi via USB cable, eg /dev/ttyACM0
Keep console open, reset Piksi
Observe ""Piksi disconnected"" log
When Piksi reboots check /dev or the output of dmesg for the serial ports. /dev/ttyACM0 should have been recreated","When a piksi is connected to a host via USB cable it will create
3 virtual serial ports which appear on linux systems as /dev/ttyACM*.
When Piksi resets or the USB cable is disconnected the kernel will
remove these device nodes automatically.
When console connects to Piksi via one of these ports is will
detect the disconnect event and raise a message in the log. However
it will not close the file descriptor. The kernel will be unable to
fully remove the device since a FD is still open.
When the Piksi reboots and tries to recreate its virtual ports the
linux kernel will be unable to reuse the same device number as before
so long as the previous console process is still running.
Solution - When console detects the piksi disconnect event it should
close the handle. This allows the kernel to reuse the previous device
node as soon as piksi reboots.
Testing

Open console, connect to a running Piksi via USB cable, eg /dev/ttyACM0
Keep console open, reset Piksi
Observe ""Piksi disconnected"" log
When Piksi reboots check /dev or the output of dmesg for the serial ports. /dev/ttyACM0 should have been recreated",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,661,2019-03-06T21:43:58Z,2019-03-06T23:38:14Z,2019-03-06T23:38:16Z,MERGED,True,13,5,2,https://github.com/silverjam,Patch lodash to resolve GH security warning,2,[],https://github.com/swift-nav/libsbp/pull/661,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/661,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,662,2019-03-07T10:15:12Z,2021-09-28T03:07:07Z,2021-09-28T03:07:07Z,CLOSED,False,3320,1064,35,https://github.com/pmiettinen,[WIP] CPU rework rebase,16,[],https://github.com/swift-nav/libsbp/pull/662,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/662,"Rebase of #473
Not pretty. Unfortunately the generated files are mixed in the commits etc.
Unit tests pass with py27, py35, py37. Sanity check with console over TCP OK.","Rebase of #473
Not pretty. Unfortunately the generated files are mixed in the commits etc.
Unit tests pass with py27, py35, py37. Sanity check with console over TCP OK.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,663,2019-03-14T11:59:23Z,2019-03-15T08:17:18Z,2019-03-15T08:17:22Z,MERGED,True,26,8,2,https://github.com/pmiettinen,Add option to omit metadata [ESD-1170],1,[],https://github.com/swift-nav/libsbp/pull/663,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/663,swift-nav/piksi_tools#989,swift-nav/piksi_tools#989,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,663,2019-03-14T11:59:23Z,2019-03-15T08:17:18Z,2019-03-15T08:17:22Z,MERGED,True,26,8,2,https://github.com/pmiettinen,Add option to omit metadata [ESD-1170],1,[],https://github.com/swift-nav/libsbp/pull/663,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/663#issuecomment-473044518,swift-nav/piksi_tools#989,"Looks good, but as far as I'm concerned without the metadata we should just be recording straight binary, not json.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,664,2019-03-15T13:12:37Z,2019-03-20T07:18:40Z,2019-03-20T07:18:43Z,MERGED,True,98,26,4,https://github.com/pmiettinen,Sort JSON by keys [ESD-1169],4,[],https://github.com/swift-nav/libsbp/pull/664,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/664,Sorting is not done by default to avoid decrease in efficiency.,Sorting is not done by default to avoid decrease in efficiency.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,664,2019-03-15T13:12:37Z,2019-03-20T07:18:40Z,2019-03-20T07:18:43Z,MERGED,True,98,26,4,https://github.com/pmiettinen,Sort JSON by keys [ESD-1169],4,[],https://github.com/swift-nav/libsbp/pull/664,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/664#issuecomment-473282134,Sorting is not done by default to avoid decrease in efficiency.,@mfine How big task would it be to add similar option to haskell sbp2json? I tried to figure out myself but there's just too much cryptic stuff for a person with near 0 haskell experience.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,664,2019-03-15T13:12:37Z,2019-03-20T07:18:40Z,2019-03-20T07:18:43Z,MERGED,True,98,26,4,https://github.com/pmiettinen,Sort JSON by keys [ESD-1169],4,[],https://github.com/swift-nav/libsbp/pull/664,https://github.com/mfine,3,https://github.com/swift-nav/libsbp/pull/664#issuecomment-473312557,Sorting is not done by default to avoid decrease in efficiency.,"@pmiettinen there's a module aeson-pretty that can sort the JSON keys on encoding.
But do you need to build it into the utilities? jq will do this for you with -S:
‚ûú  c/tests/data git:(bf2cf4b) cat nmea.sbp | sbp2json  | head -2
{""length"":24,""status"":0,""preamble"":85,""sender"":48492,""msg_type"":175,""setting"":""udp_server1\u0000port\u000055558\u0000"",""payload"":""AHVkcF9zZXJ2ZXIxAHBvcnQANTU1NTgA"",""crc"":29999}
{""length"":64,""status"":0,""preamble"":85,""sender"":48492,""msg_type"":175,""setting"":""udp_client0\u0000mode\u0000Disabled\u0000enum:Disabled,RTCMv3 IN,NMEA OUT,SBP\u0000"",""payload"":""AHVkcF9jbGllbnQwAG1vZGUARGlzYWJsZWQAZW51bTpEaXNhYmxlZCxSVENNdjMgSU4sTk1FQSBPVVQsU0JQAA=="",""crc"":58399}
‚ûú  c/tests/data git:(bf2cf4b) cat nmea.sbp | sbp2json  | head -2 | jq -rcS 
{""crc"":29999,""length"":24,""msg_type"":175,""payload"":""AHVkcF9zZXJ2ZXIxAHBvcnQANTU1NTgA"",""preamble"":85,""sender"":48492,""setting"":""udp_server1\u0000port\u000055558\u0000"",""status"":0}
{""crc"":58399,""length"":64,""msg_type"":175,""payload"":""AHVkcF9jbGllbnQwAG1vZGUARGlzYWJsZWQAZW51bTpEaXNhYmxlZCxSVENNdjMgSU4sTk1FQSBPVVQsU0JQAA=="",""preamble"":85,""sender"":48492,""setting"":""udp_client0\u0000mode\u0000Disabled\u0000enum:Disabled,RTCMv3 IN,NMEA OUT,SBP\u0000"",""status"":0}
‚ûú  c/tests/data git:(bf2cf4b)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,664,2019-03-15T13:12:37Z,2019-03-20T07:18:40Z,2019-03-20T07:18:43Z,MERGED,True,98,26,4,https://github.com/pmiettinen,Sort JSON by keys [ESD-1169],4,[],https://github.com/swift-nav/libsbp/pull/664,https://github.com/pmiettinen,4,https://github.com/swift-nav/libsbp/pull/664#issuecomment-473320308,Sorting is not done by default to avoid decrease in efficiency.,"@mfine I think jq is enough for my purposes for now. Thanks.
I found the aeson-pretty module also myself but I have too many holes in my understanding of the Haskell syntax (among other things) that I didn't figure out how to use it.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,664,2019-03-15T13:12:37Z,2019-03-20T07:18:40Z,2019-03-20T07:18:43Z,MERGED,True,98,26,4,https://github.com/pmiettinen,Sort JSON by keys [ESD-1169],4,[],https://github.com/swift-nav/libsbp/pull/664,https://github.com/mfine,5,https://github.com/swift-nav/libsbp/pull/664#issuecomment-473327719,Sorting is not done by default to avoid decrease in efficiency.,"@pmiettinen the SBP2JSON doesn't take options presently (at the time, that was the idea to keep it simple and based on stdin stdout - probably should have added options support). To keep things as they are, you could do a SBP2PRETTYJSON or something, similar to SBP2JSON, but change the encoding to use aseon-pretty:
https://github.com/swift-nav/libsbp/blob/master/haskell/main/SBP2JSON.hs#L28",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,664,2019-03-15T13:12:37Z,2019-03-20T07:18:40Z,2019-03-20T07:18:43Z,MERGED,True,98,26,4,https://github.com/pmiettinen,Sort JSON by keys [ESD-1169],4,[],https://github.com/swift-nav/libsbp/pull/664,https://github.com/pmiettinen,6,https://github.com/swift-nav/libsbp/pull/664#issuecomment-473348095,Sorting is not done by default to avoid decrease in efficiency.,@mfine SBP2PRETTYJSON.hs is now added. Please check what you think. I am still thinking of adding the pretty print config as an optional command line argument.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,664,2019-03-15T13:12:37Z,2019-03-20T07:18:40Z,2019-03-20T07:18:43Z,MERGED,True,98,26,4,https://github.com/pmiettinen,Sort JSON by keys [ESD-1169],4,[],https://github.com/swift-nav/libsbp/pull/664,https://github.com/silverjam,7,https://github.com/swift-nav/libsbp/pull/664#issuecomment-473979119,Sorting is not done by default to avoid decrease in efficiency.,Would prefer if we can make this a CLI switch for Haskell somehow and expose the Python option through a switch to (I guess) serial_link.,True,{'THUMBS_UP': ['https://github.com/benjaminaltieri']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,664,2019-03-15T13:12:37Z,2019-03-20T07:18:40Z,2019-03-20T07:18:43Z,MERGED,True,98,26,4,https://github.com/pmiettinen,Sort JSON by keys [ESD-1169],4,[],https://github.com/swift-nav/libsbp/pull/664,https://github.com/mfine,8,https://github.com/swift-nav/libsbp/pull/664#issuecomment-474035755,Sorting is not done by default to avoid decrease in efficiency.,I'm good with the separate binary for Haskell.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,664,2019-03-15T13:12:37Z,2019-03-20T07:18:40Z,2019-03-20T07:18:43Z,MERGED,True,98,26,4,https://github.com/pmiettinen,Sort JSON by keys [ESD-1169],4,[],https://github.com/swift-nav/libsbp/pull/664,https://github.com/silverjam,9,https://github.com/swift-nav/libsbp/pull/664#issuecomment-474047286,Sorting is not done by default to avoid decrease in efficiency.,"ok, we'll go with your preference @mfine",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,665,2019-03-18T13:44:50Z,2019-03-20T06:25:47Z,2019-03-20T06:25:50Z,MERGED,True,11,3,2,https://github.com/pmiettinen,Add option for explicit start [ESD-1166],1,[],https://github.com/swift-nav/libsbp/pull/665,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/665,If receive thread is started before all the callbacks are added and sink is ready it is highly probable that some of the messages at start are lost.,If receive thread is started before all the callbacks are added and sink is ready it is highly probable that some of the messages at start are lost.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,666,2019-03-18T20:45:38Z,2019-04-03T23:25:23Z,2019-04-03T23:25:26Z,CLOSED,False,22,0,2,https://github.com/silverjam,Add SBP wrapper for NMEA GSV sentence,1,[],https://github.com/swift-nav/libsbp/pull/666,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/666,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,666,2019-03-18T20:45:38Z,2019-04-03T23:25:23Z,2019-04-03T23:25:26Z,CLOSED,False,22,0,2,https://github.com/silverjam,Add SBP wrapper for NMEA GSV sentence,1,[],https://github.com/swift-nav/libsbp/pull/666,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/666#issuecomment-479693717,,real support for this has been merged,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,667,2019-03-19T08:40:35Z,2019-05-13T11:37:36Z,2019-05-13T11:39:23Z,MERGED,True,14888,26,46,https://github.com/pmiettinen,Automated Travis benchmark [ESD-1158],40,[],https://github.com/swift-nav/libsbp/pull/667,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/667,"This is done on top of #656
And paired with swift-nav/piksi_tools#985","This is done on top of #656
And paired with swift-nav/piksi_tools#985",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,667,2019-03-19T08:40:35Z,2019-05-13T11:37:36Z,2019-05-13T11:39:23Z,MERGED,True,14888,26,46,https://github.com/pmiettinen,Automated Travis benchmark [ESD-1158],40,[],https://github.com/swift-nav/libsbp/pull/667,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/667#issuecomment-482185659,"This is done on top of #656
And paired with swift-nav/piksi_tools#985","travis.yml based approach seems cumbersome, investigate more tox related approach.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,667,2019-03-19T08:40:35Z,2019-05-13T11:37:36Z,2019-05-13T11:39:23Z,MERGED,True,14888,26,46,https://github.com/pmiettinen,Automated Travis benchmark [ESD-1158],40,[],https://github.com/swift-nav/libsbp/pull/667,https://github.com/pmiettinen,3,https://github.com/swift-nav/libsbp/pull/667#issuecomment-483232991,"This is done on top of #656
And paired with swift-nav/piksi_tools#985",Working locally. Some tune up TODO for docker cooperation.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,667,2019-03-19T08:40:35Z,2019-05-13T11:37:36Z,2019-05-13T11:39:23Z,MERGED,True,14888,26,46,https://github.com/pmiettinen,Automated Travis benchmark [ESD-1158],40,[],https://github.com/swift-nav/libsbp/pull/667,https://github.com/pmiettinen,4,https://github.com/swift-nav/libsbp/pull/667#issuecomment-484050998,"This is done on top of #656
And paired with swift-nav/piksi_tools#985","Based on the runs this far, the performance ratio threshold could be set somewhere around 1.8.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,668,2019-03-22T09:30:15Z,2019-03-25T06:32:43Z,2019-03-25T06:32:46Z,MERGED,True,12,8,1,https://github.com/pmiettinen,sbp2prettyjson: Filter out SBPMsgBadCrc and SBPMsgUnknown [ESD-1189],1,[],https://github.com/swift-nav/libsbp/pull/668,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/668,Commit is self-explanatory.,Commit is self-explanatory.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,669,2019-03-25T23:50:07Z,2019-03-26T17:01:50Z,2019-03-26T17:01:50Z,MERGED,True,4,2,2,https://github.com/woodfell,Use system defined install paths,1,[],https://github.com/swift-nav/libsbp/pull/669,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/669,Use the cmake module GNUInstallDirs to define standard system install paths. This module works well when providing an installation prefix or destdir to cmake/make. This will replace all hard coded installation paths,Use the cmake module GNUInstallDirs to define standard system install paths. This module works well when providing an installation prefix or destdir to cmake/make. This will replace all hard coded installation paths,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,670,2019-03-26T14:35:30Z,2019-03-29T13:40:03Z,2019-03-29T13:40:08Z,MERGED,True,465,4,13,https://github.com/nsirola,EX-569: new message for SV azimuths/elevations,2,[],https://github.com/swift-nav/libsbp/pull/670,https://github.com/nsirola,1,https://github.com/swift-nav/libsbp/pull/670,Add a new message to enable NMEA GSV sentence generation from SBP data.,Add a new message to enable NMEA GSV sentence generation from SBP data.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,670,2019-03-26T14:35:30Z,2019-03-29T13:40:03Z,2019-03-29T13:40:08Z,MERGED,True,465,4,13,https://github.com/nsirola,EX-569: new message for SV azimuths/elevations,2,[],https://github.com/swift-nav/libsbp/pull/670,https://github.com/nsirola,2,https://github.com/swift-nav/libsbp/pull/670#issuecomment-477983590,Add a new message to enable NMEA GSV sentence generation from SBP data.,Rebased the yaml and unit test changes into one commit and all the generated files into another. Ready to merge.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,670,2019-03-26T14:35:30Z,2019-03-29T13:40:03Z,2019-03-29T13:40:08Z,MERGED,True,465,4,13,https://github.com/nsirola,EX-569: new message for SV azimuths/elevations,2,[],https://github.com/swift-nav/libsbp/pull/670,https://github.com/anth-cole,3,https://github.com/swift-nav/libsbp/pull/670#issuecomment-477987599,Add a new message to enable NMEA GSV sentence generation from SBP data.,lgtm,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,671,2019-03-28T19:51:15Z,2019-05-21T05:16:10Z,2019-06-02T22:14:09Z,CLOSED,False,379,39,13,https://github.com/woodfell,Standardise cmake dependency system,1,[],https://github.com/swift-nav/libsbp/pull/671,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/671,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,672,2019-03-29T19:18:52Z,2019-03-29T19:53:34Z,2019-03-29T19:53:39Z,MERGED,True,3,2,3,https://github.com/silverjam,Release version 2.5.1,1,[],https://github.com/swift-nav/libsbp/pull/672,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/672,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,673,2019-04-03T23:18:18Z,2019-04-04T20:16:49Z,2019-04-05T05:36:56Z,MERGED,True,2,2,1,https://github.com/silverjam,py3 compat: use errno attribute for socket.error,2,[],https://github.com/swift-nav/libsbp/pull/673,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/673,"In Python version 2.6 socket.error was changed to be a subclass of IOError, which supports a .errno attribute, in Python 3 support for treating socket.error as a tuple was dropped.","In Python version 2.6 socket.error was changed to be a subclass of IOError, which supports a .errno attribute, in Python 3 support for treating socket.error as a tuple was dropped.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,673,2019-04-03T23:18:18Z,2019-04-04T20:16:49Z,2019-04-05T05:36:56Z,MERGED,True,2,2,1,https://github.com/silverjam,py3 compat: use errno attribute for socket.error,2,[],https://github.com/swift-nav/libsbp/pull/673,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/673#issuecomment-479761660,"In Python version 2.6 socket.error was changed to be a subclass of IOError, which supports a .errno attribute, in Python 3 support for treating socket.error as a tuple was dropped.","I wonder how this is still failing
=================================== FAILURES ===================================
_______________________________ test_tcp_logger ________________________________
    def test_tcp_logger():
      handler = tcp_handler(MsgPrintDep(text=b'abc').to_binary())
      ip, port = tcp_server(handler)
      port = ""socket://%s:%s"" % (ip, port)
      baud = 115200
      t0 = time.time()
      sleep = 0.1
      timeout = 1.0
      cb_context = {'assert_logger_called': False}
      def assert_logger(s, **metadata):
        cb_context['assert_logger_called'] = True
        assert s.preamble==0x55
        assert s.msg_type==0x10
        assert s.sender==66
        assert s.length==3
        assert s.payload==b'abc'
        assert s.crc==0xDAEE
      with PySerialDriver(port, baud) as driver:
        with Handler(Framer(driver.read, None, verbose=False), autostart=False) as link:
          link.add_callback(assert_logger)
          link.start()
          while True:
            if time.time() - t0 > timeout or cb_context['assert_logger_called']:
              break
            time.sleep(sleep)
>     assert cb_context['assert_logger_called'], ""SBP msg callback function was not called""
E     AssertionError: SBP msg callback function was not called
E     assert False",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,673,2019-04-03T23:18:18Z,2019-04-04T20:16:49Z,2019-04-05T05:36:56Z,MERGED,True,2,2,1,https://github.com/silverjam,py3 compat: use errno attribute for socket.error,2,[],https://github.com/swift-nav/libsbp/pull/673,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/673#issuecomment-480042712,"In Python version 2.6 socket.error was changed to be a subclass of IOError, which supports a .errno attribute, in Python 3 support for treating socket.error as a tuple was dropped.",@pmiettinen the failure is intermittent,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,673,2019-04-03T23:18:18Z,2019-04-04T20:16:49Z,2019-04-05T05:36:56Z,MERGED,True,2,2,1,https://github.com/silverjam,py3 compat: use errno attribute for socket.error,2,[],https://github.com/swift-nav/libsbp/pull/673,https://github.com/pmiettinen,4,https://github.com/swift-nav/libsbp/pull/673#issuecomment-480154190,"In Python version 2.6 socket.error was changed to be a subclass of IOError, which supports a .errno attribute, in Python 3 support for treating socket.error as a tuple was dropped.","Yep, I just thought that the Handler autostart disablement would have fixed this.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,674,2019-04-04T00:07:59Z,2019-04-04T20:05:12Z,2019-04-04T20:05:15Z,MERGED,True,8,3,1,https://github.com/silverjam,Add base into_buffer method for messages with no payload [ESD-1154],1,[],https://github.com/swift-nav/libsbp/pull/674,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/674,"Fixes the following error for messages that have no payload to parse:
Traceback (most recent call last):
  File ""/Users/jason/miniconda3/envs/dev_piksi_tools/lib/python3.5/site-packages/traits/trait_notifiers.py"", line 340, in __call__
    self.handler( *args )
  File ""/Users/jason/dev/piksi_tools/piksi_tools/console/sbp_relay_view.py"", line 529, in _network_refresh_button_fired
    self.link(MsgNetworkStateReq())
  File ""/Users/jason/dev/piksi_tools/libsbp/python/sbp/client/handler.py"", line 282, in __call__
    self._source(*msgs, **metadata)
  File ""/Users/jason/dev/piksi_tools/libsbp/python/sbp/client/framer.py"", line 165, in __call__
    index += msg.into_buffer(self._buffer, index)
AttributeError: 'MsgNetworkStateReq' object has no attribute 'into_buffer'","Fixes the following error for messages that have no payload to parse:
Traceback (most recent call last):
  File ""/Users/jason/miniconda3/envs/dev_piksi_tools/lib/python3.5/site-packages/traits/trait_notifiers.py"", line 340, in __call__
    self.handler( *args )
  File ""/Users/jason/dev/piksi_tools/piksi_tools/console/sbp_relay_view.py"", line 529, in _network_refresh_button_fired
    self.link(MsgNetworkStateReq())
  File ""/Users/jason/dev/piksi_tools/libsbp/python/sbp/client/handler.py"", line 282, in __call__
    self._source(*msgs, **metadata)
  File ""/Users/jason/dev/piksi_tools/libsbp/python/sbp/client/framer.py"", line 165, in __call__
    index += msg.into_buffer(self._buffer, index)
AttributeError: 'MsgNetworkStateReq' object has no attribute 'into_buffer'",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,675,2019-04-04T21:19:56Z,2019-04-04T21:22:04Z,2019-04-04T21:22:29Z,MERGED,True,80,68,11,https://github.com/silverjam,Release version 2.5.2,2,[],https://github.com/swift-nav/libsbp/pull/675,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/675,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,676,2019-04-08T12:12:07Z,2019-04-08T16:54:33Z,2019-04-09T05:42:54Z,MERGED,True,10,2,1,https://github.com/pmiettinen,Write payload if given,1,[],https://github.com/swift-nav/libsbp/pull/676,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/676,https://snav.slack.com/archives/C03V0SS40/p1554716529001600,https://snav.slack.com/archives/C03V0SS40/p1554716529001600,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,676,2019-04-08T12:12:07Z,2019-04-08T16:54:33Z,2019-04-09T05:42:54Z,MERGED,True,10,2,1,https://github.com/pmiettinen,Write payload if given,1,[],https://github.com/swift-nav/libsbp/pull/676,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/676#issuecomment-480848666,https://snav.slack.com/archives/C03V0SS40/p1554716529001600,@silverjam @benjaminaltieri Can we cut 2.5.3 ASAP?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,676,2019-04-08T12:12:07Z,2019-04-08T16:54:33Z,2019-04-09T05:42:54Z,MERGED,True,10,2,1,https://github.com/pmiettinen,Write payload if given,1,[],https://github.com/swift-nav/libsbp/pull/676,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/676#issuecomment-480879393,https://snav.slack.com/archives/C03V0SS40/p1554716529001600,"Will cut today
On Mon, Apr 8, 2019 at 7:12 AM Pasi Miettinen ***@***.***> wrote:
 @silverjam <https://github.com/silverjam> @benjaminaltieri
 <https://github.com/benjaminaltieri> Can we cut 2.5.3 for ASAP?

 ‚Äî
 You are receiving this because you were mentioned.


 Reply to this email directly, view it on GitHub
 <#676 (comment)>, or mute
 the thread
 <https://github.com/notifications/unsubscribe-auth/AALMjMbfEd5RQY0bsLxuHjQdf3FzX9x5ks5ve05egaJpZM4ciBeS>
 .

-- 
Jason Mobarak
*Embedded Software Lead*
m: +1 650.735.2517
a: 650 Townsend, Ste 410
  San Francisco, CA 94103
e: jason@swift-nav.com",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,677,2019-04-08T19:53:50Z,2019-04-08T20:06:02Z,2019-04-08T20:06:15Z,MERGED,True,45,15,7,https://github.com/silverjam,Release 2.5.3,5,[],https://github.com/swift-nav/libsbp/pull/677,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/677,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,678,2019-04-09T01:23:05Z,2019-04-10T04:26:33Z,2019-04-10T04:42:06Z,MERGED,True,43,399,3,https://github.com/silverjam,"Add TCP reconnect, purge ""Skylark broker"" support",2,[],https://github.com/swift-nav/libsbp/pull/678,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/678,Pairs with this piksi_tools PR: swift-nav/piksi_tools#1014 -- adds support for attempting to reconnect a TCP connection so momentary drops in TCP connectivity won't force you to re-open the console (which should help in testing console memory usage over a long period of time).,Pairs with this piksi_tools PR: swift-nav/piksi_tools#1014 -- adds support for attempting to reconnect a TCP connection so momentary drops in TCP connectivity won't force you to re-open the console (which should help in testing console memory usage over a long period of time).,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,679,2019-04-10T04:44:57Z,2019-04-10T05:18:33Z,2019-04-10T05:19:03Z,MERGED,True,14,5,7,https://github.com/silverjam,Release 2.5.4,1,[],https://github.com/swift-nav/libsbp/pull/679,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/679,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,679,2019-04-10T04:44:57Z,2019-04-10T05:18:33Z,2019-04-10T05:19:03Z,MERGED,True,14,5,7,https://github.com/silverjam,Release 2.5.4,1,[],https://github.com/swift-nav/libsbp/pull/679,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/679#issuecomment-481537223,,"Non haskell build checks succeeded, merging.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,680,2019-04-12T13:00:40Z,2019-04-15T05:54:42Z,2019-04-15T05:54:46Z,MERGED,True,26,22,3,https://github.com/pmiettinen,[ESD-1238] Do not call nullary constructors in Haskell ToJSON,3,[],https://github.com/swift-nav/libsbp/pull/680,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/680,"Testing

 Compare against Python output

{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}","Testing

 Compare against Python output

{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}
{""crc"":23106,""length"":0,""msg_type"":166,""payload"":"""",""preamble"":85,""sender"":45490}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,682,2019-05-03T12:15:07Z,2020-03-13T07:36:28Z,2020-03-13T07:36:28Z,CLOSED,False,1100,947,26,https://github.com/pmiettinen,Copyless receive [ESD-1155],5,[],https://github.com/swift-nav/libsbp/pull/682,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/682,"TODO

 Implement readinto(buf) at least with FileDriver?
 Generated files
 Implement from_binary() for messages without payload
 Resolve why locally passing unit tests are failing on Travis","TODO

 Implement readinto(buf) at least with FileDriver?
 Generated files
 Implement from_binary() for messages without payload
 Resolve why locally passing unit tests are failing on Travis",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,682,2019-05-03T12:15:07Z,2020-03-13T07:36:28Z,2020-03-13T07:36:28Z,CLOSED,False,1100,947,26,https://github.com/pmiettinen,Copyless receive [ESD-1155],5,[],https://github.com/swift-nav/libsbp/pull/682,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/682#issuecomment-490430652,"TODO

 Implement readinto(buf) at least with FileDriver?
 Generated files
 Implement from_binary() for messages without payload
 Resolve why locally passing unit tests are failing on Travis","Benchmarking with command (JSON not expanded)
time PYTHONPATH=../python/ python ../../piksi_tools/piksi_tools/serial_link.py  --file -p 0001.sbp --log --logfilename ./sbp_c.json --skip-metadata
processing the ~80MB log file used in the Travis benchmark PR.
The improvement seems to be somewhat questionable:

with master I have clocked results between 5m0s..5m22s, usually closer to the slower end
unknown what is occasionally giving the performance boost, maybe the OS handling the file reads sometimes treats the script favorably?
copy free PR in greedy mode performs more steadily around 5m7s area, worst cases seen around 5m15s

Conclusions:

in master branch the parsing of the data is clearly the dominant time consumer
the average improvement could be said to be around 10s (few percents of the total ~5minutes) but the variance is also high compared to the amount of improvement
unknown how well this improvement transfers to the JITted version

Notes:

sbp2json.py with sbp.jit processes the same file in 40-50 seconds including the JSON expansion but it bypasses the handler-framer apparatus using its own buffering mechanism
Haskell compatible run using sbp2json.py with sbp.jit takes around 2m20s if I recall correctly",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,682,2019-05-03T12:15:07Z,2020-03-13T07:36:28Z,2020-03-13T07:36:28Z,CLOSED,False,1100,947,26,https://github.com/pmiettinen,Copyless receive [ESD-1155],5,[],https://github.com/swift-nav/libsbp/pull/682,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/682#issuecomment-598590367,"TODO

 Implement readinto(buf) at least with FileDriver?
 Generated files
 Implement from_binary() for messages without payload
 Resolve why locally passing unit tests are failing on Travis",Closing since this didn't bear fruit,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,683,2019-05-03T20:24:14Z,2019-05-14T19:43:41Z,2019-07-16T20:06:23Z,CLOSED,False,955,4,14,https://github.com/jbangelo,Added messages for separate orbit corrections and clock corrections,2,[],https://github.com/swift-nav/libsbp/pull/683,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/683,"Added messages for separate SSR orbit corrections and SSR clock corrections.
I followed the example for the other messages, where each message contains the corrections for a single signal. I think this would imply a single RTCM message could result in multiple SBP messages.","Added messages for separate SSR orbit corrections and SSR clock corrections.
I followed the example for the other messages, where each message contains the corrections for a single signal. I think this would imply a single RTCM message could result in multiple SBP messages.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,683,2019-05-03T20:24:14Z,2019-05-14T19:43:41Z,2019-07-16T20:06:23Z,CLOSED,False,955,4,14,https://github.com/jbangelo,Added messages for separate orbit corrections and clock corrections,2,[],https://github.com/swift-nav/libsbp/pull/683,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/683#issuecomment-492377655,"Added messages for separate SSR orbit corrections and SSR clock corrections.
I followed the example for the other messages, where each message contains the corrections for a single signal. I think this would imply a single RTCM message could result in multiple SBP messages.",@scarcanague Should we just close this PR?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,683,2019-05-03T20:24:14Z,2019-05-14T19:43:41Z,2019-07-16T20:06:23Z,CLOSED,False,955,4,14,https://github.com/jbangelo,Added messages for separate orbit corrections and clock corrections,2,[],https://github.com/swift-nav/libsbp/pull/683,https://github.com/scarcanague,3,https://github.com/swift-nav/libsbp/pull/683#issuecomment-492381745,"Added messages for separate SSR orbit corrections and SSR clock corrections.
I followed the example for the other messages, where each message contains the corrections for a single signal. I think this would imply a single RTCM message could result in multiple SBP messages.",@jbangelo Let's close it for now,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,684,2019-05-03T20:26:54Z,2019-05-09T15:06:27Z,2019-05-09T15:06:31Z,MERGED,True,2,0,1,https://github.com/jbangelo,Added additional checks for tools in the Makefile,1,[],https://github.com/swift-nav/libsbp/pull/684,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/684,Noticed some required commands that weren't being checked for when re-building everything on a relatively clean machine.,Noticed some required commands that weren't being checked for when re-building everything on a relatively clean machine.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,685,2019-05-10T17:14:03Z,2021-09-28T03:07:07Z,2021-09-28T03:07:07Z,CLOSED,False,18099,26,46,https://github.com/pmiettinen,[WIP] parse_members optimizing [ESD-1157],42,[],https://github.com/swift-nav/libsbp/pull/685,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/685,"Original idea is to numba.jit the parse_member() but it appears to be tricky or even impossible because numba isn't able to interpret the complex/mixed datatypes.
While experimenting I got sidetracked quite far but made some interesting findings.
This is a result form using numpy's frombuffer() function which appears to do the parsing from buffer quickly but the problem is that there appears to be no naive way to convert structured numpy arrays to dictionary or JSON.

Profile shows that biggest part of the time is spent unpacking the results from numpy array to dictionary.. Actual parsing takes ~1/10 compared to the unpacking. (MsgObs context). Due to the slowness of unpacking the overall result is ~20-30% worse than current numba performance. If unpacking can be solved to be quicker, this approach shows good potential though.
For comparison the numba profile with same log:

Time values are not comparable between the runs. Reasoning is that the much larger amount of function calls is overwhelming the profiler in the numba case. Rather concentrate on which function are most heavy inside each run.","Original idea is to numba.jit the parse_member() but it appears to be tricky or even impossible because numba isn't able to interpret the complex/mixed datatypes.
While experimenting I got sidetracked quite far but made some interesting findings.
This is a result form using numpy's frombuffer() function which appears to do the parsing from buffer quickly but the problem is that there appears to be no naive way to convert structured numpy arrays to dictionary or JSON.

Profile shows that biggest part of the time is spent unpacking the results from numpy array to dictionary.. Actual parsing takes ~1/10 compared to the unpacking. (MsgObs context). Due to the slowness of unpacking the overall result is ~20-30% worse than current numba performance. If unpacking can be solved to be quicker, this approach shows good potential though.
For comparison the numba profile with same log:

Time values are not comparable between the runs. Reasoning is that the much larger amount of function calls is overwhelming the profiler in the numba case. Rather concentrate on which function are most heavy inside each run.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,685,2019-05-10T17:14:03Z,2021-09-28T03:07:07Z,2021-09-28T03:07:07Z,CLOSED,False,18099,26,46,https://github.com/pmiettinen,[WIP] parse_members optimizing [ESD-1157],42,[],https://github.com/swift-nav/libsbp/pull/685,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/685#issuecomment-491436052,"Original idea is to numba.jit the parse_member() but it appears to be tricky or even impossible because numba isn't able to interpret the complex/mixed datatypes.
While experimenting I got sidetracked quite far but made some interesting findings.
This is a result form using numpy's frombuffer() function which appears to do the parsing from buffer quickly but the problem is that there appears to be no naive way to convert structured numpy arrays to dictionary or JSON.

Profile shows that biggest part of the time is spent unpacking the results from numpy array to dictionary.. Actual parsing takes ~1/10 compared to the unpacking. (MsgObs context). Due to the slowness of unpacking the overall result is ~20-30% worse than current numba performance. If unpacking can be solved to be quicker, this approach shows good potential though.
For comparison the numba profile with same log:

Time values are not comparable between the runs. Reasoning is that the much larger amount of function calls is overwhelming the profiler in the numba case. Rather concentrate on which function are most heavy inside each run.","@pmiettinen I think it's appropriate to table this PR for now, but for future reference, can you push new generated code?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,686,2019-05-10T22:00:52Z,2019-05-23T20:38:00Z,2019-05-23T20:38:06Z,MERGED,True,2798,106,42,https://github.com/martin-swift,Added three new messages for gridded atmospheric SSR corrections.,9,[],https://github.com/swift-nav/libsbp/pull/686,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/686,"Implementing messages from https://drive.google.com/file/d/1jMLC2cjvVk6TUDGuktVLeK3kPyn4yi7S/view and https://drive.google.com/file/d/1RKjSgyBlxBhFz7ipExKh_Z2gFU_Yb0gR/view
I tried to be fairly faithful to the spec, but I tried to avoid things like bit packing and I was also working with the constraints of SBP, particularly the 255 max message size and the fact you can only have one variable length array in a message.","Implementing messages from https://drive.google.com/file/d/1jMLC2cjvVk6TUDGuktVLeK3kPyn4yi7S/view and https://drive.google.com/file/d/1RKjSgyBlxBhFz7ipExKh_Z2gFU_Yb0gR/view
I tried to be fairly faithful to the spec, but I tried to avoid things like bit packing and I was also working with the constraints of SBP, particularly the 255 max message size and the fact you can only have one variable length array in a message.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,686,2019-05-10T22:00:52Z,2019-05-23T20:38:00Z,2019-05-23T20:38:06Z,MERGED,True,2798,106,42,https://github.com/martin-swift,Added three new messages for gridded atmospheric SSR corrections.,9,[],https://github.com/swift-nav/libsbp/pull/686,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/686#issuecomment-494589761,"Implementing messages from https://drive.google.com/file/d/1jMLC2cjvVk6TUDGuktVLeK3kPyn4yi7S/view and https://drive.google.com/file/d/1RKjSgyBlxBhFz7ipExKh_Z2gFU_Yb0gR/view
I tried to be fairly faithful to the spec, but I tried to avoid things like bit packing and I was also working with the constraints of SBP, particularly the 255 max message size and the fact you can only have one variable length array in a message.","A general improvement would be to include the units of the different fields in the description, that way the SBP spec is self contained and you don't need to go look up the units from the proposal docs",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,686,2019-05-10T22:00:52Z,2019-05-23T20:38:00Z,2019-05-23T20:38:06Z,MERGED,True,2798,106,42,https://github.com/martin-swift,Added three new messages for gridded atmospheric SSR corrections.,9,[],https://github.com/swift-nav/libsbp/pull/686,https://github.com/martin-swift,3,https://github.com/swift-nav/libsbp/pull/686#issuecomment-495215276,"Implementing messages from https://drive.google.com/file/d/1jMLC2cjvVk6TUDGuktVLeK3kPyn4yi7S/view and https://drive.google.com/file/d/1RKjSgyBlxBhFz7ipExKh_Z2gFU_Yb0gR/view
I tried to be fairly faithful to the spec, but I tried to avoid things like bit packing and I was also working with the constraints of SBP, particularly the 255 max message size and the fact you can only have one variable length array in a message.",Everyone happy?  I want to push the button on this today.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,686,2019-05-10T22:00:52Z,2019-05-23T20:38:00Z,2019-05-23T20:38:06Z,MERGED,True,2798,106,42,https://github.com/martin-swift,Added three new messages for gridded atmospheric SSR corrections.,9,[],https://github.com/swift-nav/libsbp/pull/686,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/686#issuecomment-495374532,"Implementing messages from https://drive.google.com/file/d/1jMLC2cjvVk6TUDGuktVLeK3kPyn4yi7S/view and https://drive.google.com/file/d/1RKjSgyBlxBhFz7ipExKh_Z2gFU_Yb0gR/view
I tried to be fairly faithful to the spec, but I tried to avoid things like bit packing and I was also working with the constraints of SBP, particularly the 255 max message size and the fact you can only have one variable length array in a message.","@martin-swift Travis failure is the same semi-transient error we've seen for a while, I think this is good to merge.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/687,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/687#issuecomment-492627617,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","CFFI initial concept OK.
Numba CC compiler getting stuck in pytest context. Investigating.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,3,https://github.com/swift-nav/libsbp/pull/687#issuecomment-492631173,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","pasi@pasi-linux:~/swiftnav/libsbp/python$ py.test -v tests/ -s
======================================================================================================== test session starts ========================================================================================================
platform linux2 -- Python 2.7.12, pytest-4.5.0, py-1.7.0, pluggy-0.9.0 -- /usr/bin/python
cachedir: .pytest_cache
rootdir: /mnt/users/pasi/swiftnav/libsbp/python, inifile: pytest.ini
plugins: xdist-1.26.1, forked-1.0.2, cov-2.5.1
collecting ... cc1plus: warning: command line option ‚Äò-Wstrict-prototypes‚Äô is valid for C/ObjC but not for C++
generating LLVM code for 'parse_jit' into /tmp/pycc-build-parse_jit-_CyTzb/parse_jit.o
C compiler: x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fno-strict-aliasing -Wdate-time -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security -fPIC

creating /tmp/pycc-build-parse_jit-_CyTzb/mnt
creating /tmp/pycc-build-parse_jit-_CyTzb/mnt/users
creating /tmp/pycc-build-parse_jit-_CyTzb/mnt/users/pasi
creating /tmp/pycc-build-parse_jit-_CyTzb/mnt/users/pasi/.local
creating /tmp/pycc-build-parse_jit-_CyTzb/mnt/users/pasi/.local/lib
creating /tmp/pycc-build-parse_jit-_CyTzb/mnt/users/pasi/.local/lib/python2.7
creating /tmp/pycc-build-parse_jit-_CyTzb/mnt/users/pasi/.local/lib/python2.7/site-packages
creating /tmp/pycc-build-parse_jit-_CyTzb/mnt/users/pasi/.local/lib/python2.7/site-packages/numba
creating /tmp/pycc-build-parse_jit-_CyTzb/mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc
creating /tmp/pycc-build-parse_jit-_CyTzb/mnt/users/pasi/.local/lib/python2.7/site-packages/numba/runtime
compile options: '-DPYCC_MODULE_NAME=parse_jit -DPYCC_USE_NRT=1 -I/usr/include/python2.7 -I/usr/local/lib/python2.7/dist-packages/numpy/core/include -c'
x86_64-linux-gnu-gcc: /mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/../runtime/nrt.c
x86_64-linux-gnu-gcc: /mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/modulemixin.c
**HANG**",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,4,https://github.com/swift-nav/libsbp/pull/687#issuecomment-492636534,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","Not reproducible in standalone compilation, only one unrelated warning:
pasi@pasi-linux:~/tmp$ x86_64-linux-gnu-gcc -DPYCC_MODULE_NAME=parse_jit -DPYCC_USE_NRT=1 -I/usr/include/python2.7 -I/usr/local/lib/python2.7/dist-packages/numpy/core/include -c /mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/modulemixin.c
In file included from /mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/modulemixin.c:16:0:
/mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/../_helperlib.c: In function ‚Äòimport_cython_function‚Äô:
/mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/../_helperlib.c:578:42: warning: passing argument 2 of ‚ÄòPyMapping_GetItemString‚Äô discards ‚Äòconst‚Äô qualifier from pointer target type [-Wdiscarded-qualifiers]
     cobj = PyMapping_GetItemString(capi, function_name);
                                          ^
In file included from /usr/include/python2.7/Python.h:133:0,
                 from /mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/../_pymodule.h:6,
                 from /mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/modulemixin.c:8:
/usr/include/python2.7/abstract.h:1356:29: note: expected ‚Äòchar *‚Äô but argument is of type ‚Äòconst char *‚Äô
      PyAPI_FUNC(PyObject *) PyMapping_GetItemString(PyObject *o, char *key);",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,5,https://github.com/swift-nav/libsbp/pull/687#issuecomment-492645159,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","Seems to be somehow related to Python version.
python -c ""from sbp.jit import msg"" reproduces the issue with 2.7 which uses x86_64-linux-gnu-gcc for compiling.
On 3.5.0 build does not hang and it uses gcc.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,6,https://github.com/swift-nav/libsbp/pull/687#issuecomment-492926094,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050",numba.pycc issue with py27 replicates with the example code from https://numba.pydata.org/numba-doc/dev/user/pycc.html,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,7,https://github.com/swift-nav/libsbp/pull/687#issuecomment-492931014,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050",Replicates on OSX with clang compiler so it's not about the compiler.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,8,https://github.com/swift-nav/libsbp/pull/687#issuecomment-492947773,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","To record the current status:
pycc.py standalone example
from numba.pycc import CC

cc = CC('my_module')
# Uncomment the following line to print out the compilation steps
cc.verbose = True

@cc.export('multf', 'f8(f8, f8)')
@cc.export('multi', 'i4(i4, i4)')
def mult(a, b):
    return a * b

@cc.export('square', 'f8(f8)')
def square(a):
    return a ** 2

cc.compile()
py35 success
pasi@pasi-linux:~/tmp$ python -c ""import pycc""
cc1plus: warning: command line option ‚Äò-Wstrict-prototypes‚Äô is valid for C/ObjC but not for C++
generating LLVM code for 'my_module' into /tmp/pycc-build-my_module-nu_7foug/my_module.cpython-35m-x86_64-linux-gnu.o
C compiler: gcc -pthread -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC

creating /tmp/pycc-build-my_module-nu_7foug/mnt
creating /tmp/pycc-build-my_module-nu_7foug/mnt/users
creating /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi
creating /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local
creating /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local/lib
creating /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local/lib/python3.5
creating /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local/lib/python3.5/site-packages
creating /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local/lib/python3.5/site-packages/numba
creating /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local/lib/python3.5/site-packages/numba/pycc
creating /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local/lib/python3.5/site-packages/numba/runtime
compile options: '-DPYCC_MODULE_NAME=my_module -DPYCC_USE_NRT=1 -I/mnt/users/pasi/.pyenv/versions/3.5.0/include/python3.5m -I/mnt/users/pasi/.local/lib/python3.5/site-packages/numpy/core/include -c'
gcc: /mnt/users/pasi/.local/lib/python3.5/site-packages/numba/pycc/../_math_c99.c
gcc: /mnt/users/pasi/.local/lib/python3.5/site-packages/numba/pycc/modulemixin.c
gcc: /mnt/users/pasi/.local/lib/python3.5/site-packages/numba/pycc/../runtime/nrt.c
gcc -pthread -shared -L/mnt/users/pasi/.pyenv/versions/3.5.0/lib /tmp/pycc-build-my_module-nu_7foug/my_module.cpython-35m-x86_64-linux-gnu.o /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local/lib/python3.5/site-packages/numba/pycc/modulemixin.o /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local/lib/python3.5/site-packages/numba/_math_c99.o /tmp/pycc-build-my_module-nu_7foug/mnt/users/pasi/.local/lib/python3.5/site-packages/numba/runtime/nrt.o -L/mnt/users/pasi/.local/lib/python3.5/site-packages/numpy/core/lib -lnpymath -lm -o /mnt/users/pasi/tmp/my_module.cpython-35m-x86_64-linux-gnu.so

py27 hangs
pasi@pasi-linux:~/tmp$ python -c ""import pycc""
cc1plus: warning: command line option ‚Äò-Wstrict-prototypes‚Äô is valid for C/ObjC but not for C++
generating LLVM code for 'my_module' into /tmp/pycc-build-my_module-Qq8jC8/my_module.o
C compiler: x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fno-strict-aliasing -Wdate-time -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security -fPIC

creating /tmp/pycc-build-my_module-Qq8jC8/mnt
creating /tmp/pycc-build-my_module-Qq8jC8/mnt/users
creating /tmp/pycc-build-my_module-Qq8jC8/mnt/users/pasi
creating /tmp/pycc-build-my_module-Qq8jC8/mnt/users/pasi/.local
creating /tmp/pycc-build-my_module-Qq8jC8/mnt/users/pasi/.local/lib
creating /tmp/pycc-build-my_module-Qq8jC8/mnt/users/pasi/.local/lib/python2.7
creating /tmp/pycc-build-my_module-Qq8jC8/mnt/users/pasi/.local/lib/python2.7/site-packages
creating /tmp/pycc-build-my_module-Qq8jC8/mnt/users/pasi/.local/lib/python2.7/site-packages/numba
creating /tmp/pycc-build-my_module-Qq8jC8/mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc
creating /tmp/pycc-build-my_module-Qq8jC8/mnt/users/pasi/.local/lib/python2.7/site-packages/numba/runtime
compile options: '-DPYCC_MODULE_NAME=my_module -DPYCC_USE_NRT=1 -I/usr/include/python2.7 -I/mnt/users/pasi/.local/lib/python2.7/site-packages/numpy/core/include -c'
x86_64-linux-gnu-gcc: /mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/../_math_c99.c
x86_64-linux-gnu-gcc: /mnt/users/pasi/.local/lib/python2.7/site-packages/numba/pycc/../runtime/nrt.c

After narrowing down the scope with added debug prints in numba.pycc files, hanging seems to happen inside distutils.ccompiler.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,9,https://github.com/swift-nav/libsbp/pull/687#issuecomment-492972431,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","Appears that build uses numpy.distutils.ccompiler and the part of the code that hangs:
    if len(build) > 1 and jobs > 1:
        # build parallel
        import multiprocessing.pool
        pool = multiprocessing.pool.ThreadPool(jobs)
        pool.map(single_compile, build_items)
        pool.close()

Code is identical in both py27 and py35 numpy installations.
After forcing serial build, build doesn't hang.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,10,https://github.com/swift-nav/libsbp/pull/687#issuecomment-492981195,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050",Narrowed down to subprocess.check_output(cmd) hanging in numpy.distutils.ccompiler when doing parallel build.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,11,https://github.com/swift-nav/libsbp/pull/687#issuecomment-493024730,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","Monkeypatching to serial build only helps. Needs to be investigated how rugged solution this is.
from numba.pycc import CC

from distutils.ccompiler import CCompiler
from numpy.distutils.misc_util import get_num_build_jobs
from numpy.distutils.ccompiler import _global_lock, _job_semaphore, _processing_files
from numpy.distutils import log

import sys
import types

def replace_method(klass, method_name, func):
    if sys.version_info[0] < 3:
        m = types.MethodType(func, None, klass)
        setattr(klass, method_name, m)

def CCompiler_compile(self, sources, output_dir=None, macros=None,
                      include_dirs=None, debug=0, extra_preargs=None,
                      extra_postargs=None, depends=None):
    """"""
    Compile one or more source files.

    Please refer to the Python distutils API reference for more details.

    Parameters
    ----------
    sources : list of str
        A list of filenames
    output_dir : str, optional
        Path to the output directory.
    macros : list of tuples
        A list of macro definitions.
    include_dirs : list of str, optional
        The directories to add to the default include file search path for
        this compilation only.
    debug : bool, optional
        Whether or not to output debug symbols in or alongside the object
        file(s).
    extra_preargs, extra_postargs : ?
        Extra pre- and post-arguments.
    depends : list of str, optional
        A list of file names that all targets depend on.

    Returns
    -------
    objects : list of str
        A list of object file names, one per source file `sources`.

    Raises
    ------
    CompileError
        If compilation fails.

    """"""
    # This method is effective only with Python >=2.3 distutils.
    # Any changes here should be applied also to fcompiler.compile
    # method to support pre Python 2.3 distutils.
    global _job_semaphore

    jobs = get_num_build_jobs()

    # setup semaphore to not exceed number of compile jobs when parallelized at
    # extension level (python >= 3.5)
    with _global_lock:
        if _job_semaphore is None:
            _job_semaphore = threading.Semaphore(jobs)

    if not sources:
        return []

    ccomp = self.compiler_so
    display = ""C compiler: %s\n"" % (' '.join(ccomp),)
    log.info(display)
    macros, objects, extra_postargs, pp_opts, build = \
            self._setup_compile(output_dir, macros, include_dirs, sources,
                                depends, extra_postargs)
    cc_args = self._get_cc_args(pp_opts, debug, extra_preargs)
    display = ""compile options: '%s'"" % (' '.join(cc_args))
    if extra_postargs:
        display += ""\nextra options: '%s'"" % (' '.join(extra_postargs))
    log.info(display)

    def single_compile(args):
        obj, (src, ext) = args

        # check if we are currently already processing the same object
        # happens when using the same source in multiple extensions
        while True:
            # need explicit lock as there is no atomic check and add with GIL
            with _global_lock:
                # file not being worked on, start working
                if obj not in _processing_files:
                    _processing_files.add(obj)
                    break
            # wait for the processing to end
            time.sleep(0.1)

        try:
            # retrieve slot from our #job semaphore and build
            with _job_semaphore:
                self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts)
        finally:
            # register being done processing
            with _global_lock:
                _processing_files.remove(obj)

    for o in build.items():
        single_compile(o)

    # Return *all* object filenames, not just the ones we just built.
    return objects

replace_method(CCompiler, 'compile', CCompiler_compile)


cc = CC('my_module')
# Uncomment the following line to print out the compilation steps
cc.verbose = True

@cc.export('multf', 'f8(f8, f8)')
@cc.export('multi', 'i4(i4, i4)')
def mult(a, b):
    return a * b

@cc.export('square', 'f8(f8)')
def square(a):
    return a ** 2

cc.compile()",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,12,https://github.com/swift-nav/libsbp/pull/687#issuecomment-493058374,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050",Next problem. tox/py35 environment doesn't recognize for which Python version the parse_jit module is built and tries to use parse_jit.so built for py27 when it should trigger a build for parse_jit.cpython-35m-x86_64-linux-gnu.so and use it as is the case on native py35 environment.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,13,https://github.com/swift-nav/libsbp/pull/687#issuecomment-493059249,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050",Actual integration to distutils in case of numba needs to be investigated. Main problem being that libsbp uses actually setuptools and not distutils so the numba example is not applicable as-is. Might need some monkeypatching also there.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,14,https://github.com/swift-nav/libsbp/pull/687#issuecomment-493344839,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","Next some problem with the benchmark script:
ERROR: InvocationError for command /home/travis/build/swift-nav/libsbp/python/../test_data/benchmark.sh /home/travis/build/swift-nav/libsbp/haskell (exited with code 1)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/pmiettinen,15,https://github.com/swift-nav/libsbp/pull/687#issuecomment-497671251,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050",@silverjam to review the latest changes and decide on the merging.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,687,2019-05-14T12:24:09Z,2019-06-05T20:39:31Z,2019-06-05T20:39:35Z,MERGED,True,761,404,20,https://github.com/pmiettinen,Integrate numba into setuptools [ESD-1156],26,[],https://github.com/swift-nav/libsbp/pull/687,https://github.com/silverjam,16,https://github.com/swift-nav/libsbp/pull/687#issuecomment-498376993,"https://swift-nav.atlassian.net/projects/ESD/issues/ESD-1156
Depends swift-nav/piksi_tools#1050","Changes look good but I can't figure out how to build on Windows, will try to spend a few minutes working this out, otherwise we'll need to revisit later.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,688,2019-05-16T03:15:23Z,2019-05-16T18:24:48Z,2019-05-20T16:52:59Z,MERGED,True,1564,19,15,https://github.com/mbavaro,Add source to gal eph,2,[],https://github.com/swift-nav/libsbp/pull/688,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/688,This is to distinguish a F/NAV ephemeris from a I/NAV ephemeris,This is to distinguish a F/NAV ephemeris from a I/NAV ephemeris,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,689,2019-05-16T15:57:12Z,2019-05-16T19:05:03Z,2019-05-16T19:05:07Z,MERGED,True,1,3,1,https://github.com/pmiettinen,Use piksi_tools master in benchmark,1,[],https://github.com/swift-nav/libsbp/pull/689,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/689,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,690,2019-05-16T19:28:55Z,2019-05-16T20:09:02Z,2019-05-16T20:09:02Z,MERGED,True,31,732,12,https://github.com/silverjam,Release version 2.5.5,6,[],https://github.com/swift-nav/libsbp/pull/690,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/690,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,691,2019-05-20T16:54:24Z,2021-09-28T03:07:08Z,2021-09-28T03:07:08Z,CLOSED,False,5,1,1,https://github.com/ipswift,Conditional use of pthread library.,4,[],https://github.com/swift-nav/libsbp/pull/691,https://github.com/ipswift,1,https://github.com/swift-nav/libsbp/pull/691,Library pthread should be used only when PLATFORM_IMPLEMENTATION_NO_PTHREAD is ON. It was found while building starling for Android where pthread is included into libandroid.,Library pthread should be used only when PLATFORM_IMPLEMENTATION_NO_PTHREAD is ON. It was found while building starling for Android where pthread is included into libandroid.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,692,2019-05-21T05:16:37Z,2019-06-06T05:03:38Z,2019-06-06T05:03:38Z,MERGED,True,46,98,6,https://github.com/woodfell,"Import standard cmake modules, standardise dependency resolution [ESD-1246] [ESD-1247]",28,[],https://github.com/swift-nav/libsbp/pull/692,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/692,"Integrates with swift-nav/cmake#2
Import common cmake repository. Set up package cmake options to enable/disable unit tests and documentation. This repository does not have any dependencies.","Integrates with swift-nav/cmake#2
Import common cmake repository. Set up package cmake options to enable/disable unit tests and documentation. This repository does not have any dependencies.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,693,2019-05-21T22:43:08Z,2019-05-21T23:27:28Z,2019-05-21T23:27:31Z,MERGED,True,0,221,1,https://github.com/silverjam,Remove unused build_test_data.py [ESD-1086],1,[],https://github.com/swift-nav/libsbp/pull/693,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/693,"Script looks interesting, but it's not run anywhere, referenced, or mentioned in any docs.","Script looks interesting, but it's not run anywhere, referenced, or mentioned in any docs.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,694,2019-06-05T21:50:00Z,2019-06-05T21:51:02Z,2019-06-05T21:51:23Z,MERGED,True,48,156,14,https://github.com/silverjam,libsbp release 2.6.0,1,[],https://github.com/swift-nav/libsbp/pull/694,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/694,"CMake build tweaks


Resolve javascript package vulnerability


Version bumps


Update haskell generator to template sbp.cabal: some kind of snafu broke the templating of sbp.cabal, restore this.","CMake build tweaks


Resolve javascript package vulnerability


Version bumps


Update haskell generator to template sbp.cabal: some kind of snafu broke the templating of sbp.cabal, restore this.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,695,2019-06-06T05:57:06Z,2019-06-06T15:54:32Z,2019-06-06T15:54:32Z,MERGED,True,790,4,12,https://github.com/mbavaro,Add QZSS eph,2,[],https://github.com/swift-nav/libsbp/pull/695,https://github.com/mbavaro,1,https://github.com/swift-nav/libsbp/pull/695,A duplicate of the GPS ephemeris needed for QZSS,A duplicate of the GPS ephemeris needed for QZSS,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,696,2019-06-06T17:45:21Z,2019-06-06T17:48:12Z,2019-06-06T17:48:16Z,MERGED,True,19,8,9,https://github.com/silverjam,Version 2.6.1,5,[],https://github.com/swift-nav/libsbp/pull/696,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/696,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,697,2019-06-06T23:14:29Z,2019-06-06T23:15:02Z,2019-06-06T23:15:07Z,MERGED,True,12,11,8,https://github.com/silverjam,v2.6.2,5,[],https://github.com/swift-nav/libsbp/pull/697,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/697,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,698,2019-06-07T22:28:13Z,2019-06-10T23:04:43Z,2019-06-10T23:17:13Z,MERGED,True,974,120,17,https://github.com/silverjam,Deprecate MSG_INIT_BASE [ESD-1286],5,[],https://github.com/swift-nav/libsbp/pull/698,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/698,"Per #681 we don't plan to support this any time soon, so we're going to deprecate the message to avoid confusion.
Note: there's some additional change to sbp.jit folded into this since it wasn't (until now) part of the all target for updating generated code.","Per #681 we don't plan to support this any time soon, so we're going to deprecate the message to avoid confusion.
Note: there's some additional change to sbp.jit folded into this since it wasn't (until now) part of the all target for updating generated code.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,698,2019-06-07T22:28:13Z,2019-06-10T23:04:43Z,2019-06-10T23:17:13Z,MERGED,True,974,120,17,https://github.com/silverjam,Deprecate MSG_INIT_BASE [ESD-1286],5,[],https://github.com/swift-nav/libsbp/pull/698,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/698#issuecomment-500625342,"Per #681 we don't plan to support this any time soon, so we're going to deprecate the message to avoid confusion.
Note: there's some additional change to sbp.jit folded into this since it wasn't (until now) part of the all target for updating generated code.",Travis failure looks like a (hopefully) transient issue with the sbp2json benchmark,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,699,2019-06-07T23:55:32Z,2019-06-08T17:11:16Z,2019-06-08T17:11:24Z,MERGED,True,213,5,8,https://github.com/silverjam,Move sbp2json to libsbp from piksi_tools [ESD-1374],6,[],https://github.com/swift-nav/libsbp/pull/699,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/699,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,700,2019-06-11T00:14:16Z,2019-06-11T00:19:14Z,2019-06-11T00:35:00Z,MERGED,True,14,5,7,https://github.com/silverjam,Version 2.6.3,7,[],https://github.com/swift-nav/libsbp/pull/700,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/700,Release 2.6.3 mostly so that sbp2json can be part of the released PyPI version.,Release 2.6.3 mostly so that sbp2json can be part of the released PyPI version.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,701,2019-06-12T01:01:02Z,2019-06-13T22:52:14Z,2019-06-13T22:52:14Z,MERGED,True,14,3,2,https://github.com/woodfell,Don't use hardcoded include/link paths,2,[],https://github.com/swift-nav/libsbp/pull/701,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/701,/usr/local/(include|lib) are hardcoded in to the cmake system. This throws an error when trying to cross compile using buildroot. These paths should not be needed anyway.,/usr/local/(include|lib) are hardcoded in to the cmake system. This throws an error when trying to cross compile using buildroot. These paths should not be needed anyway.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,701,2019-06-12T01:01:02Z,2019-06-13T22:52:14Z,2019-06-13T22:52:14Z,MERGED,True,14,3,2,https://github.com/woodfell,Don't use hardcoded include/link paths,2,[],https://github.com/swift-nav/libsbp/pull/701,https://github.com/woodfell,2,https://github.com/swift-nav/libsbp/pull/701#issuecomment-501094082,/usr/local/(include|lib) are hardcoded in to the cmake system. This throws an error when trying to cross compile using buildroot. These paths should not be needed anyway.,"Ah ok, in that case we can just wrap it up in an if(APPLE). Unfortunately the buildroot crosscompiler throws an error when passing -L/usr/local/lib",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,702,2019-06-19T20:17:33Z,2019-06-27T01:52:02Z,2019-06-27T01:52:05Z,MERGED,True,495,218,45,https://github.com/silverjam,Purge llvmlite and numba dependencies from generated Python code [ESD-1396],5,[],https://github.com/swift-nav/libsbp/pull/702,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/702,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,703,2019-06-20T00:14:02Z,2019-06-20T23:57:33Z,2019-06-20T23:57:37Z,MERGED,True,40,40,11,https://github.com/martin-swift,Change ssr_update_interval to u8.,2,[],https://github.com/swift-nav/libsbp/pull/703,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/703,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,703,2019-06-20T00:14:02Z,2019-06-20T23:57:33Z,2019-06-20T23:57:37Z,MERGED,True,40,40,11,https://github.com/martin-swift,Change ssr_update_interval to u8.,2,[],https://github.com/swift-nav/libsbp/pull/703,https://github.com/martin-swift,2,https://github.com/swift-nav/libsbp/pull/703#issuecomment-503791601,,@silverjam - can you help me with the autogenerated code again?  Did you ever manage to dockerize that?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,703,2019-06-20T00:14:02Z,2019-06-20T23:57:33Z,2019-06-20T23:57:37Z,MERGED,True,40,40,11,https://github.com/martin-swift,Change ssr_update_interval to u8.,2,[],https://github.com/swift-nav/libsbp/pull/703,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/703#issuecomment-504225497,,"@martin-swift looks good to me. Only other improvement I can think of (but not really critical) is you could use GpsTimeSec instead of GpsTime, the former has whole second resolution latter has nanosecond resolution, I noticed our other SSR messages only use the second resolution type.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,704,2019-06-21T10:48:50Z,2019-06-24T08:42:27Z,2019-06-24T08:42:33Z,MERGED,True,430,287,18,https://github.com/ljbade,SSR STEC and gridded correction message refinements,3,[],https://github.com/swift-nav/libsbp/pull/704,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/704,"Further refinements to the SSR STEC and gridded correction messages for consistency with the existing SSR messages.
I also fleshed out the description and unit fields to make it easier for someone to use the messages without having to cross reference back to the CLAS spec.","Further refinements to the SSR STEC and gridded correction messages for consistency with the existing SSR messages.
I also fleshed out the description and unit fields to make it easier for someone to use the messages without having to cross reference back to the CLAS spec.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,706,2019-06-25T07:00:43Z,2019-10-25T22:35:23Z,2019-10-25T23:27:58Z,MERGED,True,4,0,1,https://github.com/silverjam,Modify to work with Rust's bindgen,3,[],https://github.com/swift-nav/libsbp/pull/706,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/706,"This change allows me to write an ""entrypoint"" header for bindgen so that I can automatically generate FFI bindings.","This change allows me to write an ""entrypoint"" header for bindgen so that I can automatically generate FFI bindings.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,706,2019-06-25T07:00:43Z,2019-10-25T22:35:23Z,2019-10-25T23:27:58Z,MERGED,True,4,0,1,https://github.com/silverjam,Modify to work with Rust's bindgen,3,[],https://github.com/swift-nav/libsbp/pull/706,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/706#issuecomment-546534652,"This change allows me to write an ""entrypoint"" header for bindgen so that I can automatically generate FFI bindings.","FYI, going to merge this, seems low risk",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,707,2019-06-26T19:44:03Z,2019-07-22T17:55:02Z,2019-07-22T17:55:06Z,MERGED,True,4,0,1,https://github.com/denniszollo,Update README.md,1,[],https://github.com/swift-nav/libsbp/pull/707,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/707,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,708,2019-06-27T17:50:22Z,2019-07-22T17:54:26Z,2019-07-22T17:54:29Z,MERGED,True,3,3,1,https://github.com/silverjam,Update requests to resolve security issue,1,[],https://github.com/swift-nav/libsbp/pull/708,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/708,"Fix other reqs to explicitly specify what part of the semver is allowed to ""float"".","Fix other reqs to explicitly specify what part of the semver is allowed to ""float"".",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,709,2019-07-02T21:32:48Z,2019-07-03T01:34:37Z,2019-07-03T01:34:40Z,MERGED,True,4,4,2,https://github.com/silverjam,"Pin minor rev versions, security fix for requests",2,[],https://github.com/swift-nav/libsbp/pull/709,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/709,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,710,2019-07-03T00:16:57Z,2019-07-03T22:21:35Z,2019-07-03T22:21:39Z,MERGED,True,38,5,7,https://github.com/wurmmi,Add code coverage [ESD-1407],13,[],https://github.com/swift-nav/libsbp/pull/710,https://github.com/wurmmi,1,https://github.com/swift-nav/libsbp/pull/710,This PR only targets the C code in this repository.,This PR only targets the C code in this repository.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,710,2019-07-03T00:16:57Z,2019-07-03T22:21:35Z,2019-07-03T22:21:39Z,MERGED,True,38,5,7,https://github.com/wurmmi,Add code coverage [ESD-1407],13,[],https://github.com/swift-nav/libsbp/pull/710,https://github.com/codecov-io,2,https://github.com/swift-nav/libsbp/pull/710#issuecomment-508211994,This PR only targets the C code in this repository.,"Codecov Report

‚ùó No coverage uploaded for pull request base (master@188e29b). Click here to learn what that means.
The diff coverage is n/a.


@@            Coverage Diff            @@
##             master     #710   +/-   ##
=========================================
  Coverage          ?   30.83%           
=========================================
  Files             ?      132           
  Lines             ?    26997           
  Branches          ?        0           
=========================================
  Hits              ?     8325           
  Misses            ?    18672           
  Partials          ?        0

Continue to review full report at Codecov.

Legend - Click here to learn more
Œî = absolute <relative> (impact), √∏ = not affected, ? = missing data
Powered by Codecov. Last update 188e29b...1a4f16b. Read the comment docs.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,711,2019-07-03T01:59:07Z,2019-07-03T02:01:51Z,2019-07-03T02:01:55Z,MERGED,True,4,4,5,https://github.com/silverjam,libsbp v2.6.5,1,[],https://github.com/swift-nav/libsbp/pull/711,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/711,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,712,2019-07-10T18:28:56Z,2019-07-23T13:55:11Z,2019-09-20T16:40:56Z,MERGED,True,151,59,3,https://github.com/silverjam,Support running w/o Numba/Numpy installed,3,[],https://github.com/swift-nav/libsbp/pull/712,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/712,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,712,2019-07-10T18:28:56Z,2019-07-23T13:55:11Z,2019-09-20T16:40:56Z,MERGED,True,151,59,3,https://github.com/silverjam,Support running w/o Numba/Numpy installed,3,[],https://github.com/swift-nav/libsbp/pull/712,https://github.com/codecov-io,2,https://github.com/swift-nav/libsbp/pull/712#issuecomment-510197513,,"Codecov Report

Merging #712 into master will not change coverage.
The diff coverage is n/a.


@@           Coverage Diff           @@
##           master     #712   +/-   ##
=======================================
  Coverage   30.83%   30.83%           
=======================================
  Files         132      132           
  Lines       26997    26997           
=======================================
  Hits         8325     8325           
  Misses      18672    18672

Continue to review full report at Codecov.

Legend - Click here to learn more
Œî = absolute <relative> (impact), √∏ = not affected, ? = missing data
Powered by Codecov. Last update 0a91774...d3cd7c9. Read the comment docs.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,712,2019-07-10T18:28:56Z,2019-07-23T13:55:11Z,2019-09-20T16:40:56Z,MERGED,True,151,59,3,https://github.com/silverjam,Support running w/o Numba/Numpy installed,3,[],https://github.com/swift-nav/libsbp/pull/712,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/712#issuecomment-514032175,,@denniszollo I added some documentation around expected failure cases,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,713,2019-07-10T20:10:13Z,2019-07-15T03:21:37Z,2019-07-15T03:21:39Z,MERGED,True,13,43,10,https://github.com/martin-swift,Remove redundant field.,2,[],https://github.com/swift-nav/libsbp/pull/713,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/713,@silverjam Can you do the honors again for the autogen?,@silverjam Can you do the honors again for the autogen?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,713,2019-07-10T20:10:13Z,2019-07-15T03:21:37Z,2019-07-15T03:21:39Z,MERGED,True,13,43,10,https://github.com/martin-swift,Remove redundant field.,2,[],https://github.com/swift-nav/libsbp/pull/713,https://github.com/martin-swift,2,https://github.com/swift-nav/libsbp/pull/713#issuecomment-511133968,@silverjam Can you do the honors again for the autogen?,bumpity bump bump... @ljbade can you confirm that this is what you initially intended?  @silverjam - if you don't have the bandwidth to auto-gen I can take a shot at dockerizing it; lemme know...,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,713,2019-07-10T20:10:13Z,2019-07-15T03:21:37Z,2019-07-15T03:21:39Z,MERGED,True,13,43,10,https://github.com/martin-swift,Remove redundant field.,2,[],https://github.com/swift-nav/libsbp/pull/713,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/713#issuecomment-511157886,@silverjam Can you do the honors again for the autogen?,@martin-swift updated,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,713,2019-07-10T20:10:13Z,2019-07-15T03:21:37Z,2019-07-15T03:21:39Z,MERGED,True,13,43,10,https://github.com/martin-swift,Remove redundant field.,2,[],https://github.com/swift-nav/libsbp/pull/713,https://github.com/martin-swift,4,https://github.com/swift-nav/libsbp/pull/713#issuecomment-511162241,@silverjam Can you do the honors again for the autogen?,thanks @silverjam ; anyone know what's up with the travis failures?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,713,2019-07-10T20:10:13Z,2019-07-15T03:21:37Z,2019-07-15T03:21:39Z,MERGED,True,13,43,10,https://github.com/martin-swift,Remove redundant field.,2,[],https://github.com/swift-nav/libsbp/pull/713,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/713#issuecomment-511168075,@silverjam Can you do the honors again for the autogen?,"Since this isn't really published or used externally yet I don't think it
matters that we're deleting a field.

The only risk here is if a consumer of these messages uses a version that's
out of sync.  Since we are in control of all these consumers the risk is
low.

External consumers of these messages are far enough away that this probably
isn't very much of a risk.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,713,2019-07-10T20:10:13Z,2019-07-15T03:21:37Z,2019-07-15T03:21:39Z,MERGED,True,13,43,10,https://github.com/martin-swift,Remove redundant field.,2,[],https://github.com/swift-nav/libsbp/pull/713,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/713#issuecomment-511168117,@silverjam Can you do the honors again for the autogen?,Travis failure is a hopefully transient download issue.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,714,2019-07-17T23:35:59Z,2019-07-23T15:10:21Z,2019-07-23T15:43:08Z,MERGED,True,13008,6,35,https://github.com/jbangelo,Initial rust implementation,28,[],https://github.com/swift-nav/libsbp/pull/714,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/714,"I scaled back my initial intentions, this is a few small tweaks on top of Gareth's SBP message generator work. I added a sender ID field to each full message struct, and added a very bare bones SBPMessage trait which has a message type constant, and functions for getting and setting the sender ID.
In addition to the message structure I added a simple parser type that reads through a source and tries to extract an SBP message. It's similar to the C parser, except that it buffers data, to try and avoid system call overhead.
Currently there is only parsing capabilities implemented. Eventually it would be nice to add a function to the SBPMessage trait to convert the message into a Vec<u8>, essentially a complete SBP frame.","I scaled back my initial intentions, this is a few small tweaks on top of Gareth's SBP message generator work. I added a sender ID field to each full message struct, and added a very bare bones SBPMessage trait which has a message type constant, and functions for getting and setting the sender ID.
In addition to the message structure I added a simple parser type that reads through a source and tries to extract an SBP message. It's similar to the C parser, except that it buffers data, to try and avoid system call overhead.
Currently there is only parsing capabilities implemented. Eventually it would be nice to add a function to the SBPMessage trait to convert the message into a Vec<u8>, essentially a complete SBP frame.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,714,2019-07-17T23:35:59Z,2019-07-23T15:10:21Z,2019-07-23T15:43:08Z,MERGED,True,13008,6,35,https://github.com/jbangelo,Initial rust implementation,28,[],https://github.com/swift-nav/libsbp/pull/714,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/714#issuecomment-512618248,"I scaled back my initial intentions, this is a few small tweaks on top of Gareth's SBP message generator work. I added a sender ID field to each full message struct, and added a very bare bones SBPMessage trait which has a message type constant, and functions for getting and setting the sender ID.
In addition to the message structure I added a simple parser type that reads through a source and tries to extract an SBP message. It's similar to the C parser, except that it buffers data, to try and avoid system call overhead.
Currently there is only parsing capabilities implemented. Eventually it would be nice to add a function to the SBPMessage trait to convert the message into a Vec<u8>, essentially a complete SBP frame.",Should the rust code be compiled by Travis?,True,"{'THUMBS_UP': ['https://github.com/benjaminaltieri', 'https://github.com/silverjam']}"
swift-nav/libsbp,https://github.com/swift-nav/libsbp,714,2019-07-17T23:35:59Z,2019-07-23T15:10:21Z,2019-07-23T15:43:08Z,MERGED,True,13008,6,35,https://github.com/jbangelo,Initial rust implementation,28,[],https://github.com/swift-nav/libsbp/pull/714,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/714#issuecomment-513857216,"I scaled back my initial intentions, this is a few small tweaks on top of Gareth's SBP message generator work. I added a sender ID field to each full message struct, and added a very bare bones SBPMessage trait which has a message type constant, and functions for getting and setting the sender ID.
In addition to the message structure I added a simple parser type that reads through a source and tries to extract an SBP message. It's similar to the C parser, except that it buffers data, to try and avoid system call overhead.
Currently there is only parsing capabilities implemented. Eventually it would be nice to add a function to the SBPMessage trait to convert the message into a Vec<u8>, essentially a complete SBP frame.","Here are some remaining open questions I have:

Do we want to publish this to crates.io immediately? (Could see an argument to work with it a bit internally before publishing)
If we want to publish to crates.io, do we want to do that manually or have travis do it?
Do we see much benefit in generating tests from the YAML spec?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,714,2019-07-17T23:35:59Z,2019-07-23T15:10:21Z,2019-07-23T15:43:08Z,MERGED,True,13008,6,35,https://github.com/jbangelo,Initial rust implementation,28,[],https://github.com/swift-nav/libsbp/pull/714,https://github.com/jbangelo,4,https://github.com/swift-nav/libsbp/pull/714#issuecomment-513867014,"I scaled back my initial intentions, this is a few small tweaks on top of Gareth's SBP message generator work. I added a sender ID field to each full message struct, and added a very bare bones SBPMessage trait which has a message type constant, and functions for getting and setting the sender ID.
In addition to the message structure I added a simple parser type that reads through a source and tries to extract an SBP message. It's similar to the C parser, except that it buffers data, to try and avoid system call overhead.
Currently there is only parsing capabilities implemented. Eventually it would be nice to add a function to the SBPMessage trait to convert the message into a Vec<u8>, essentially a complete SBP frame.","Here is a todo list:

 Error handling could be improved. More descriptive error states could be added to make it easier to tell what failed (i.e. CRC failure). Do we want to leverage an error handling library, like Failure?
 Add SBP output functionality.
 Move away from byteorder crate for parsing primitive types. The primitive types should all have a from_le_bytes() function as of version 1.32.0

These don't have to be addressed in this PR, but should probably be tracked somewhere. As github issues maybe?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,714,2019-07-17T23:35:59Z,2019-07-23T15:10:21Z,2019-07-23T15:43:08Z,MERGED,True,13008,6,35,https://github.com/jbangelo,Initial rust implementation,28,[],https://github.com/swift-nav/libsbp/pull/714,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/714#issuecomment-513967630,"I scaled back my initial intentions, this is a few small tweaks on top of Gareth's SBP message generator work. I added a sender ID field to each full message struct, and added a very bare bones SBPMessage trait which has a message type constant, and functions for getting and setting the sender ID.
In addition to the message structure I added a simple parser type that reads through a source and tries to extract an SBP message. It's similar to the C parser, except that it buffers data, to try and avoid system call overhead.
Currently there is only parsing capabilities implemented. Eventually it would be nice to add a function to the SBPMessage trait to convert the message into a Vec<u8>, essentially a complete SBP frame.","On Jul 22, 2019, at 9:31 AM, Joseph Angelo ***@***.***> wrote:

 Here are some remaining open questions I have:

 Do we want to publish this to crates.io immediately? (Could see an argument to work with it a bit internally before publishing)
I think we can go either way here, I haven‚Äôt seen any external demand for this, so publishing would be for our own internal convenience.  Also, I‚Äôm not sure it adds that much convenience since Cargo can easily build and use crates directly from GitHub.  So, the benefit of publishing would just be an easier installation line in `Cargo.toml`, and having the docs published on docs.rs <http://docs.rs/> automatically.  If we publish, we can also state in the release that it‚Äôs a pre-release or alpha, and state explicitly what the functionality is, in order to manage expectations.
 If we want to publish to crates.io, do we want to do that manually or have travis do it?
All other publishing is manual at the moment, so it makes sense for this to be too, at the moment.
 Do we see much benefit in generating tests from the YAML spec?
If it‚Äôs not terribly hard I don‚Äôt think it‚Äôll hurt since it would provide a better idea that the parsing is correct across all of the message types.   If we have some other way of convincing ourselves that the parsing is correct (via sbp2json output like we did for the Python JIT support) then I think we can avoid it.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,714,2019-07-17T23:35:59Z,2019-07-23T15:10:21Z,2019-07-23T15:43:08Z,MERGED,True,13008,6,35,https://github.com/jbangelo,Initial rust implementation,28,[],https://github.com/swift-nav/libsbp/pull/714,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/714#issuecomment-513968020,"I scaled back my initial intentions, this is a few small tweaks on top of Gareth's SBP message generator work. I added a sender ID field to each full message struct, and added a very bare bones SBPMessage trait which has a message type constant, and functions for getting and setting the sender ID.
In addition to the message structure I added a simple parser type that reads through a source and tries to extract an SBP message. It's similar to the C parser, except that it buffers data, to try and avoid system call overhead.
Currently there is only parsing capabilities implemented. Eventually it would be nice to add a function to the SBPMessage trait to convert the message into a Vec<u8>, essentially a complete SBP frame.","On Jul 22, 2019, at 9:59 AM, Joseph Angelo ***@***.***> wrote:
...
 These don't have to be addressed in this PR, but should probably be tracked somewhere. As github issues maybe?

GitHub issues that don‚Äôt get tracked internally don‚Äôt tend to get worked on :-)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,714,2019-07-17T23:35:59Z,2019-07-23T15:10:21Z,2019-07-23T15:43:08Z,MERGED,True,13008,6,35,https://github.com/jbangelo,Initial rust implementation,28,[],https://github.com/swift-nav/libsbp/pull/714,https://github.com/jbangelo,7,https://github.com/swift-nav/libsbp/pull/714#issuecomment-513998169,"I scaled back my initial intentions, this is a few small tweaks on top of Gareth's SBP message generator work. I added a sender ID field to each full message struct, and added a very bare bones SBPMessage trait which has a message type constant, and functions for getting and setting the sender ID.
In addition to the message structure I added a simple parser type that reads through a source and tries to extract an SBP message. It's similar to the C parser, except that it buffers data, to try and avoid system call overhead.
Currently there is only parsing capabilities implemented. Eventually it would be nice to add a function to the SBPMessage trait to convert the message into a Vec<u8>, essentially a complete SBP frame.","@silverjam I'll leave figuring out about publishing to crates.io for later then. I'd prefer to get at least one internal project using this to fix out the major issues before pushing it out to the general public.
And for the tests, do you want to see them in this PR? I can work on adding them, but it'll take some time.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,714,2019-07-17T23:35:59Z,2019-07-23T15:10:21Z,2019-07-23T15:43:08Z,MERGED,True,13008,6,35,https://github.com/jbangelo,Initial rust implementation,28,[],https://github.com/swift-nav/libsbp/pull/714,https://github.com/silverjam,8,https://github.com/swift-nav/libsbp/pull/714#issuecomment-514267230,"I scaled back my initial intentions, this is a few small tweaks on top of Gareth's SBP message generator work. I added a sender ID field to each full message struct, and added a very bare bones SBPMessage trait which has a message type constant, and functions for getting and setting the sender ID.
In addition to the message structure I added a simple parser type that reads through a source and tries to extract an SBP message. It's similar to the C parser, except that it buffers data, to try and avoid system call overhead.
Currently there is only parsing capabilities implemented. Eventually it would be nice to add a function to the SBPMessage trait to convert the message into a Vec<u8>, essentially a complete SBP frame.",,True,{'HEART': ['https://github.com/jbangelo']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,715,2019-07-18T15:55:59Z,2019-07-18T18:36:54Z,2019-07-18T18:36:57Z,CLOSED,False,13062,6,35,https://github.com/jbangelo,Jbangelo/test travis rust,22,[],https://github.com/swift-nav/libsbp/pull/715,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/715,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,717,2019-07-23T16:09:11Z,2019-07-23T18:46:21Z,2019-07-23T18:46:25Z,MERGED,True,69,102,2,https://github.com/silverjam,Remove lodash from JavaScript deps,3,[],https://github.com/swift-nav/libsbp/pull/717,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/717,"It doesn't seem to be used by any of our current JavaScript code and seems to be a source of security vulnerabilities pretty often.
Run npm audit fix to resolve a number of other security issues that npm reported.  Tests still seem to pass with these changes.","It doesn't seem to be used by any of our current JavaScript code and seems to be a source of security vulnerabilities pretty often.
Run npm audit fix to resolve a number of other security issues that npm reported.  Tests still seem to pass with these changes.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,719,2019-08-06T02:52:21Z,2019-09-02T05:44:49Z,2019-09-02T10:32:17Z,MERGED,True,1239,896,38,https://github.com/ljbade,ORI-594 Fix up SSR atmospherics documentation,5,[],https://github.com/swift-nav/libsbp/pull/719,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/719,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,719,2019-08-06T02:52:21Z,2019-09-02T05:44:49Z,2019-09-02T10:32:17Z,MERGED,True,1239,896,38,https://github.com/ljbade,ORI-594 Fix up SSR atmospherics documentation,5,[],https://github.com/swift-nav/libsbp/pull/719,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/719#issuecomment-525046171,,@ljbade @martin-swift generated code should be ready to go,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,719,2019-08-06T02:52:21Z,2019-09-02T05:44:49Z,2019-09-02T10:32:17Z,MERGED,True,1239,896,38,https://github.com/ljbade,ORI-594 Fix up SSR atmospherics documentation,5,[],https://github.com/swift-nav/libsbp/pull/719,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/719#issuecomment-525055623,,@silverjam thank you!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,719,2019-08-06T02:52:21Z,2019-09-02T05:44:49Z,2019-09-02T10:32:17Z,MERGED,True,1239,896,38,https://github.com/ljbade,ORI-594 Fix up SSR atmospherics documentation,5,[],https://github.com/swift-nav/libsbp/pull/719,https://github.com/ljbade,4,https://github.com/swift-nav/libsbp/pull/719#issuecomment-527097063,,@silverjam after merging this I have discovered the c code didn't generate,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,721,2019-08-13T16:51:22Z,2019-08-13T19:47:55Z,2019-08-13T19:47:55Z,MERGED,True,3,3,1,https://github.com/Lucas-dOliveira,Changing java CRC16 class modifiers to enable external access (#720),1,[],https://github.com/swift-nav/libsbp/pull/721,https://github.com/Lucas-dOliveira,1,https://github.com/swift-nav/libsbp/pull/721,"Changing the CRC16 class and methods modifiers to public, to allow the CRC16 calculation from softwares that are using this library.","Changing the CRC16 class and methods modifiers to public, to allow the CRC16 calculation from softwares that are using this library.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,722,2019-08-26T21:13:05Z,2019-08-26T23:11:52Z,2019-08-26T23:11:56Z,MERGED,True,27,17,4,https://github.com/silverjam,Dynamic import generator output modules,3,[],https://github.com/swift-nav/libsbp/pull/722,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/722,"Importing all top-level generator modules was causing certain modules to overwrite global data that was in use by other generators.  In the case of Java and Rust, the Rust generator was overwriting things used by the Java generator (which caused Rust code to show in the generated Java code).
Add misc fix-ups for Python 3.","Importing all top-level generator modules was causing certain modules to overwrite global data that was in use by other generators.  In the case of Java and Rust, the Rust generator was overwriting things used by the Java generator (which caused Rust code to show in the generated Java code).
Add misc fix-ups for Python 3.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,723,2019-09-03T17:59:34Z,2019-09-06T22:16:31Z,2019-09-06T22:16:31Z,CLOSED,False,228,2,4,https://github.com/denniszollo,Add c api to call user function for every successfully deframed SBP message. [ESD-998],3,[],https://github.com/swift-nav/libsbp/pull/723,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/723,"This allows a user to use sbp_process_generic and call the user function for every sbp message.  It doesn't change our API at all and could simplify many things like logging SBP messages to a file without needing to copy over the sbp deframing code.
ESD-998","This allows a user to use sbp_process_generic and call the user function for every sbp message.  It doesn't change our API at all and could simplify many things like logging SBP messages to a file without needing to copy over the sbp deframing code.
ESD-998",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,723,2019-09-03T17:59:34Z,2019-09-06T22:16:31Z,2019-09-06T22:16:31Z,CLOSED,False,228,2,4,https://github.com/denniszollo,Add c api to call user function for every successfully deframed SBP message. [ESD-998],3,[],https://github.com/swift-nav/libsbp/pull/723,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/723#issuecomment-527579734,"This allows a user to use sbp_process_generic and call the user function for every sbp message.  It doesn't change our API at all and could simplify many things like logging SBP messages to a file without needing to copy over the sbp deframing code.
ESD-998",had a backlog item to add this feature (https://swift-nav.atlassian.net/browse/ESD-998). thanks for picking this up!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,723,2019-09-03T17:59:34Z,2019-09-06T22:16:31Z,2019-09-06T22:16:31Z,CLOSED,False,228,2,4,https://github.com/denniszollo,Add c api to call user function for every successfully deframed SBP message. [ESD-998],3,[],https://github.com/swift-nav/libsbp/pull/723,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/723#issuecomment-528208625,"This allows a user to use sbp_process_generic and call the user function for every sbp message.  It doesn't change our API at all and could simplify many things like logging SBP messages to a file without needing to copy over the sbp deframing code.
ESD-998",I've updated one more time in such a way that there is no change to existing API.  I've also added unit tests.,True,{'THUMBS_UP': ['https://github.com/benjaminaltieri']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,723,2019-09-03T17:59:34Z,2019-09-06T22:16:31Z,2019-09-06T22:16:31Z,CLOSED,False,228,2,4,https://github.com/denniszollo,Add c api to call user function for every successfully deframed SBP message. [ESD-998],3,[],https://github.com/swift-nav/libsbp/pull/723,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/723#issuecomment-529032273,"This allows a user to use sbp_process_generic and call the user function for every sbp message.  It doesn't change our API at all and could simplify many things like logging SBP messages to a file without needing to copy over the sbp deframing code.
ESD-998",Superceded by #725,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,724,2019-09-06T18:20:26Z,2019-09-18T20:24:20Z,2019-09-18T20:24:20Z,MERGED,True,4,1,1,https://github.com/ebethon,JSONLogIterator - Fix the iteration if the JSON is already unwrapped,1,[],https://github.com/swift-nav/libsbp/pull/724,https://github.com/ebethon,1,https://github.com/swift-nav/libsbp/pull/724,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,724,2019-09-06T18:20:26Z,2019-09-18T20:24:20Z,2019-09-18T20:24:20Z,MERGED,True,4,1,1,https://github.com/ebethon,JSONLogIterator - Fix the iteration if the JSON is already unwrapped,1,[],https://github.com/swift-nav/libsbp/pull/724,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/724#issuecomment-529041538,,Seems good and is an improvement.  It might be nice to print out useful error messages explaining what flavors of JSON the tool supports if none of the keys are there.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,725,2019-09-06T22:16:01Z,2019-09-16T18:16:41Z,2019-09-16T18:16:41Z,MERGED,True,661,66,3,https://github.com/denniszollo,Frame callback implementation & tests,5,[],https://github.com/swift-nav/libsbp/pull/725,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/725,"This PR adds a new type of callback to the c SBP Library to handle the entire SBP frame.  It leaves the external API unchanged except for these additions.
This new frame callback feature will allow for easier raw logging in applications including Piksi Multi's standalone logger.  It also allows adding a frame callback of type SBP_MSG_ALL to fire a callback for any msg_type.  A convenient helper function is added to the API for registering a callback for every msg_type.  Implementation details were discussed internally quite a bit and I think this represents the consensus.
I've added unit tests for the new functionality and some missing unit tests like testing the max_size of SBP messages.","This PR adds a new type of callback to the c SBP Library to handle the entire SBP frame.  It leaves the external API unchanged except for these additions.
This new frame callback feature will allow for easier raw logging in applications including Piksi Multi's standalone logger.  It also allows adding a frame callback of type SBP_MSG_ALL to fire a callback for any msg_type.  A convenient helper function is added to the API for registering a callback for every msg_type.  Implementation details were discussed internally quite a bit and I think this represents the consensus.
I've added unit tests for the new functionality and some missing unit tests like testing the max_size of SBP messages.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,725,2019-09-06T22:16:01Z,2019-09-16T18:16:41Z,2019-09-16T18:16:41Z,MERGED,True,661,66,3,https://github.com/denniszollo,Frame callback implementation & tests,5,[],https://github.com/swift-nav/libsbp/pull/725,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/725#issuecomment-529169375,"This PR adds a new type of callback to the c SBP Library to handle the entire SBP frame.  It leaves the external API unchanged except for these additions.
This new frame callback feature will allow for easier raw logging in applications including Piksi Multi's standalone logger.  It also allows adding a frame callback of type SBP_MSG_ALL to fire a callback for any msg_type.  A convenient helper function is added to the API for registering a callback for every msg_type.  Implementation details were discussed internally quite a bit and I think this represents the consensus.
I've added unit tests for the new functionality and some missing unit tests like testing the max_size of SBP messages.",Put these changes together to help illustrate the ideas: https://github.com/swift-nav/libsbp/tree/benaltieri/frame_callback_ideas,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,725,2019-09-06T22:16:01Z,2019-09-16T18:16:41Z,2019-09-16T18:16:41Z,MERGED,True,661,66,3,https://github.com/denniszollo,Frame callback implementation & tests,5,[],https://github.com/swift-nav/libsbp/pull/725,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/725#issuecomment-530585819,"This PR adds a new type of callback to the c SBP Library to handle the entire SBP frame.  It leaves the external API unchanged except for these additions.
This new frame callback feature will allow for easier raw logging in applications including Piksi Multi's standalone logger.  It also allows adding a frame callback of type SBP_MSG_ALL to fire a callback for any msg_type.  A convenient helper function is added to the API for registering a callback for every msg_type.  Implementation details were discussed internally quite a bit and I think this represents the consensus.
I've added unit tests for the new functionality and some missing unit tests like testing the max_size of SBP messages.",Ready for review.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,725,2019-09-06T22:16:01Z,2019-09-16T18:16:41Z,2019-09-16T18:16:41Z,MERGED,True,661,66,3,https://github.com/denniszollo,Frame callback implementation & tests,5,[],https://github.com/swift-nav/libsbp/pull/725,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/725#issuecomment-531354609,"This PR adds a new type of callback to the c SBP Library to handle the entire SBP frame.  It leaves the external API unchanged except for these additions.
This new frame callback feature will allow for easier raw logging in applications including Piksi Multi's standalone logger.  It also allows adding a frame callback of type SBP_MSG_ALL to fire a callback for any msg_type.  A convenient helper function is added to the API for registering a callback for every msg_type.  Implementation details were discussed internally quite a bit and I think this represents the consensus.
I've added unit tests for the new functionality and some missing unit tests like testing the max_size of SBP messages.",Doxygen looks pretty good:,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,725,2019-09-06T22:16:01Z,2019-09-16T18:16:41Z,2019-09-16T18:16:41Z,MERGED,True,661,66,3,https://github.com/denniszollo,Frame callback implementation & tests,5,[],https://github.com/swift-nav/libsbp/pull/725,https://github.com/denniszollo,5,https://github.com/swift-nav/libsbp/pull/725#issuecomment-531374464,"This PR adds a new type of callback to the c SBP Library to handle the entire SBP frame.  It leaves the external API unchanged except for these additions.
This new frame callback feature will allow for easier raw logging in applications including Piksi Multi's standalone logger.  It also allows adding a frame callback of type SBP_MSG_ALL to fire a callback for any msg_type.  A convenient helper function is added to the API for registering a callback for every msg_type.  Implementation details were discussed internally quite a bit and I think this represents the consensus.
I've added unit tests for the new functionality and some missing unit tests like testing the max_size of SBP messages.","I've made a few changes. I added a helper function to go from u8[] to u16 and remove confusing endianness comments, renamed SBP_TYPE_CALLBACK to SBP_PAYLOAD_CB, and updated the docs a lot per Jason's suggestions and thoughts.  If approved I will plan to rebase and merge as is with the relatively fine-grained commit history.
If requested, I am willing and able to squash into three logical commits.

code changes for frame_callback
comment and doc updates for frame callback
unit test additions for frame_callback",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,725,2019-09-06T22:16:01Z,2019-09-16T18:16:41Z,2019-09-16T18:16:41Z,MERGED,True,661,66,3,https://github.com/denniszollo,Frame callback implementation & tests,5,[],https://github.com/swift-nav/libsbp/pull/725,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/725#issuecomment-531431788,"This PR adds a new type of callback to the c SBP Library to handle the entire SBP frame.  It leaves the external API unchanged except for these additions.
This new frame callback feature will allow for easier raw logging in applications including Piksi Multi's standalone logger.  It also allows adding a frame callback of type SBP_MSG_ALL to fire a callback for any msg_type.  A convenient helper function is added to the API for registering a callback for every msg_type.  Implementation details were discussed internally quite a bit and I think this represents the consensus.
I've added unit tests for the new functionality and some missing unit tests like testing the max_size of SBP messages.","@denniszollo I think some squashing is in order, whatever seems appropriate to you is fine.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,725,2019-09-06T22:16:01Z,2019-09-16T18:16:41Z,2019-09-16T18:16:41Z,MERGED,True,661,66,3,https://github.com/denniszollo,Frame callback implementation & tests,5,[],https://github.com/swift-nav/libsbp/pull/725,https://github.com/denniszollo,7,https://github.com/swift-nav/libsbp/pull/725#issuecomment-531874798,"This PR adds a new type of callback to the c SBP Library to handle the entire SBP frame.  It leaves the external API unchanged except for these additions.
This new frame callback feature will allow for easier raw logging in applications including Piksi Multi's standalone logger.  It also allows adding a frame callback of type SBP_MSG_ALL to fire a callback for any msg_type.  A convenient helper function is added to the API for registering a callback for every msg_type.  Implementation details were discussed internally quite a bit and I think this represents the consensus.
I've added unit tests for the new functionality and some missing unit tests like testing the max_size of SBP messages.","After working with this new API quite a bit on Friday, it became clear to me that the new return code (SBP_READ_TOO_MANY_ERROR)  could result in a change in behavior depending on how the *read function pointer was implemented, as such Ben and I decided to remove it.  I am going to merge the newly squashed version of this with only this one change.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,725,2019-09-06T22:16:01Z,2019-09-16T18:16:41Z,2019-09-16T18:16:41Z,MERGED,True,661,66,3,https://github.com/denniszollo,Frame callback implementation & tests,5,[],https://github.com/swift-nav/libsbp/pull/725,https://github.com/benjaminaltieri,8,https://github.com/swift-nav/libsbp/pull/725#issuecomment-531888723,"This PR adds a new type of callback to the c SBP Library to handle the entire SBP frame.  It leaves the external API unchanged except for these additions.
This new frame callback feature will allow for easier raw logging in applications including Piksi Multi's standalone logger.  It also allows adding a frame callback of type SBP_MSG_ALL to fire a callback for any msg_type.  A convenient helper function is added to the API for registering a callback for every msg_type.  Implementation details were discussed internally quite a bit and I think this represents the consensus.
I've added unit tests for the new functionality and some missing unit tests like testing the max_size of SBP messages.","@denniszollo squashing helped, my only nit would be that the macro commit should be before the commit that uses the macros implemented there. one example is SBP_MAX_FRAME_LEN use in sbp_state_t my suggestion would be to squash that or just reorder. The reason being is that if someone is looking at the full code in that single functional commit, they will not see the definition of those macros",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,726,2019-09-09T20:54:21Z,2019-09-09T21:54:53Z,2019-09-09T21:54:53Z,MERGED,True,0,4,1,https://github.com/benjamin0,Remove OWNERS.md file.,1,[],https://github.com/swift-nav/libsbp/pull/726,https://github.com/benjamin0,1,https://github.com/swift-nav/libsbp/pull/726,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,727,2019-09-18T20:42:56Z,2021-09-28T03:07:08Z,2021-09-28T03:07:08Z,CLOSED,False,43,0,1,https://github.com/denniszollo,Example main for sbp2json with new frame callback,1,[],https://github.com/swift-nav/libsbp/pull/727,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/727,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,728,2019-09-19T00:54:18Z,2019-09-19T01:05:13Z,2019-09-19T01:05:13Z,MERGED,True,31,1,3,https://github.com/denniszollo,Make a msg_buff pointer for backwards compatibility,2,[],https://github.com/swift-nav/libsbp/pull/728,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/728,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,729,2019-09-19T01:53:09Z,2019-09-19T05:37:22Z,2019-09-19T05:37:28Z,MERGED,True,27,16,7,https://github.com/silverjam,Replace ujson with rapidjson [STA-1009],4,[],https://github.com/swift-nav/libsbp/pull/729,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/729,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,730,2019-09-19T04:25:53Z,2019-09-19T05:40:33Z,2019-09-19T18:36:58Z,MERGED,True,726,720,29,https://github.com/silverjam,libsbp version 2.7.0,7,[],https://github.com/swift-nav/libsbp/pull/730,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/730,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,730,2019-09-19T04:25:53Z,2019-09-19T05:40:33Z,2019-09-19T18:36:58Z,MERGED,True,726,720,29,https://github.com/silverjam,libsbp version 2.7.0,7,[],https://github.com/swift-nav/libsbp/pull/730,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/730#issuecomment-532960180,,"@jbangelo FYI, the rust generator doesn't appear to produce stable output, the mod.rs in this release is jumbled from the previous time rust was generated.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,730,2019-09-19T04:25:53Z,2019-09-19T05:40:33Z,2019-09-19T18:36:58Z,MERGED,True,726,720,29,https://github.com/silverjam,libsbp version 2.7.0,7,[],https://github.com/swift-nav/libsbp/pull/730,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/730#issuecomment-533203008,,Odd. Looks like I'm able to reproducible locally. Will look into it when I have time. Do the other generators need to do anything special to keep their output consistent? Seems like it could be inconsistent ordering of the message definitions.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,730,2019-09-19T04:25:53Z,2019-09-19T05:40:33Z,2019-09-19T18:36:58Z,MERGED,True,726,720,29,https://github.com/silverjam,libsbp version 2.7.0,7,[],https://github.com/swift-nav/libsbp/pull/730,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/730#issuecomment-533256622,,"I think the java generator had similar issues, a fix is probably as simple just sorting the list of keys you get back from a dictionary.",True,{'THUMBS_UP': ['https://github.com/jbangelo']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,731,2019-09-19T18:12:25Z,2019-09-20T00:25:25Z,2019-09-20T00:25:28Z,MERGED,True,42,24,3,https://github.com/silverjam,Remove explicit Python 2 build in dist/deploy sciprt,4,[],https://github.com/swift-nav/libsbp/pull/731,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/731,Don't need separate build on Python since Numba JIT is disabled.,Don't need separate build on Python since Numba JIT is disabled.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,732,2019-09-20T06:39:00Z,2019-09-20T06:46:22Z,2019-09-20T06:46:25Z,MERGED,True,20,7,9,https://github.com/silverjam,Version 2.7.1,7,[],https://github.com/swift-nav/libsbp/pull/732,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/732,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,733,2019-09-20T16:25:45Z,2019-09-20T16:26:14Z,2019-09-20T16:26:17Z,MERGED,True,3,3,2,https://github.com/silverjam,Update libsbp ARM builders,2,[],https://github.com/swift-nav/libsbp/pull/733,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/733,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,734,2019-10-02T00:45:16Z,2019-10-22T01:37:43Z,2019-10-22T01:37:43Z,CLOSED,False,47,11,1,https://github.com/silverjam,Add option to annotate with timestamp (simulate Swift Console output),3,[],https://github.com/swift-nav/libsbp/pull/734,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/734,"Attempting to add an option to the Python sbp2json to take in SBP binary and output something similar to what the console outputs.  Timestamps are somewhat synthetic since they follow a GPS epoch rather than the current system time.  The UUID is completely synthetic and fixed, with the intent that it could be used to identify a file that was converted using this tool rather than coming from the Swift Console.","Attempting to add an option to the Python sbp2json to take in SBP binary and output something similar to what the console outputs.  Timestamps are somewhat synthetic since they follow a GPS epoch rather than the current system time.  The UUID is completely synthetic and fixed, with the intent that it could be used to identify a file that was converted using this tool rather than coming from the Swift Console.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,734,2019-10-02T00:45:16Z,2019-10-22T01:37:43Z,2019-10-22T01:37:43Z,CLOSED,False,47,11,1,https://github.com/silverjam,Add option to annotate with timestamp (simulate Swift Console output),3,[],https://github.com/swift-nav/libsbp/pull/734,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/734#issuecomment-537309485,"Attempting to add an option to the Python sbp2json to take in SBP binary and output something similar to what the console outputs.  Timestamps are somewhat synthetic since they follow a GPS epoch rather than the current system time.  The UUID is completely synthetic and fixed, with the intent that it could be used to identify a file that was converted using this tool rather than coming from the Swift Console.","I understand that this is fulfilling some kind of need, but isn't there a way to modify the consumer of the json to not require the timestamp?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,734,2019-10-02T00:45:16Z,2019-10-22T01:37:43Z,2019-10-22T01:37:43Z,CLOSED,False,47,11,1,https://github.com/silverjam,Add option to annotate with timestamp (simulate Swift Console output),3,[],https://github.com/swift-nav/libsbp/pull/734,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/734#issuecomment-544774307,"Attempting to add an option to the Python sbp2json to take in SBP binary and output something similar to what the console outputs.  Timestamps are somewhat synthetic since they follow a GPS epoch rather than the current system time.  The UUID is completely synthetic and fixed, with the intent that it could be used to identify a file that was converted using this tool rather than coming from the Swift Console.","I think I'm find with ditching this, the right answer was what you suggested, just change the client to use the ""non-annotated"" JSON",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,735,2019-10-02T03:56:04Z,2019-10-25T21:19:41Z,2019-10-25T21:19:44Z,MERGED,True,18018,19,170,https://github.com/silverjam,Generate JSON schema definitions for web clients,11,[],https://github.com/swift-nav/libsbp/pull/735,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/735,"To aide in building various web clients, generate JSON schema definitions to parse the output of sbp2json.  This allows web clients (like the drive demo UI) to dispatch on the msg_type field in a JSON dictionary and build a fully native object using the JSON fields that are present.
For example, in JavaScript, something like this would be possible:
import { Convert, MsgVelNED} from ""./SbpModule.ts"";

const json = getJsonBlob();

if (json['msg_type'] === 529) {
    const msgVelNED = Convert.toMsgVelNED(json);
    // ... do stuff with msgVelNED
}","To aide in building various web clients, generate JSON schema definitions to parse the output of sbp2json.  This allows web clients (like the drive demo UI) to dispatch on the msg_type field in a JSON dictionary and build a fully native object using the JSON fields that are present.
For example, in JavaScript, something like this would be possible:
import { Convert, MsgVelNED} from ""./SbpModule.ts"";

const json = getJsonBlob();

if (json['msg_type'] === 529) {
    const msgVelNED = Convert.toMsgVelNED(json);
    // ... do stuff with msgVelNED
}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,735,2019-10-02T03:56:04Z,2019-10-25T21:19:41Z,2019-10-25T21:19:44Z,MERGED,True,18018,19,170,https://github.com/silverjam,Generate JSON schema definitions for web clients,11,[],https://github.com/swift-nav/libsbp/pull/735,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/735#issuecomment-537587514,"To aide in building various web clients, generate JSON schema definitions to parse the output of sbp2json.  This allows web clients (like the drive demo UI) to dispatch on the msg_type field in a JSON dictionary and build a fully native object using the JSON fields that are present.
For example, in JavaScript, something like this would be possible:
import { Convert, MsgVelNED} from ""./SbpModule.ts"";

const json = getJsonBlob();

if (json['msg_type'] === 529) {
    const msgVelNED = Convert.toMsgVelNED(json);
    // ... do stuff with msgVelNED
}",Can you add your note on the PR about the schema and how to use it to the javascript readme here: https://github.com/swift-nav/libsbp/blob/master/javascript/README.md too ?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,735,2019-10-02T03:56:04Z,2019-10-25T21:19:41Z,2019-10-25T21:19:44Z,MERGED,True,18018,19,170,https://github.com/silverjam,Generate JSON schema definitions for web clients,11,[],https://github.com/swift-nav/libsbp/pull/735,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/735#issuecomment-546517143,"To aide in building various web clients, generate JSON schema definitions to parse the output of sbp2json.  This allows web clients (like the drive demo UI) to dispatch on the msg_type field in a JSON dictionary and build a fully native object using the JSON fields that are present.
For example, in JavaScript, something like this would be possible:
import { Convert, MsgVelNED} from ""./SbpModule.ts"";

const json = getJsonBlob();

if (json['msg_type'] === 529) {
    const msgVelNED = Convert.toMsgVelNED(json);
    // ... do stuff with msgVelNED
}","merging, failure was an (errant) performance regression in python",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,736,2019-10-04T00:27:34Z,2019-10-07T18:22:48Z,2019-10-07T18:22:48Z,MERGED,True,23,1,2,https://github.com/denniszollo,Star 833,2,[],https://github.com/swift-nav/libsbp/pull/736,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/736,This will allow us to instrument source of loosely coupled solution as well as status of odometer.,This will allow us to instrument source of loosely coupled solution as well as status of odometer.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,737,2019-10-10T22:50:43Z,2019-10-17T17:25:17Z,2019-10-17T17:25:21Z,MERGED,True,557,2,15,https://github.com/jbangelo,[STAR-789] Add proposed Protection Level message,2,[],https://github.com/swift-nav/libsbp/pull/737,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/737,"Split this into two commits. The first contains the update to the spec, the second contains all of the regenerated code.","Split this into two commits. The first contains the update to the spec, the second contains all of the regenerated code.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,738,2019-10-10T23:51:50Z,2019-10-11T17:58:30Z,2019-10-11T17:58:32Z,MERGED,True,4817,5139,25,https://github.com/jbangelo,Fix Rust generation to generate in the same order,2,[],https://github.com/swift-nav/libsbp/pull/738,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/738,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,738,2019-10-10T23:51:50Z,2019-10-11T17:58:30Z,2019-10-11T17:58:32Z,MERGED,True,4817,5139,25,https://github.com/jbangelo,Fix Rust generation to generate in the same order,2,[],https://github.com/swift-nav/libsbp/pull/738,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/738#issuecomment-541153966,,,True,{'LAUGH': ['https://github.com/jbangelo']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,739,2019-10-21T20:42:36Z,2019-10-24T21:14:17Z,2019-10-24T21:14:21Z,MERGED,True,1493,0,9,https://github.com/jbangelo,Add C++ support,2,[],https://github.com/swift-nav/libsbp/pull/739,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/739,"This PR adds a few lightweight C++ classes that wrap around the existing libsbp C interface. The main item of interest here is the MessageHandler. This class automates the infrastructure for registering a callback to have a member function called upon receipt of a sbp message.
Here is an example of how it would be used
class ECEFHandler : private sbp::MessageHandler<msg_gps_time_t, msg_pos_ecef_t, msg_pos_ecef_cov_t> {
 public:
  ECEFHandler(sbp::State *state) : private sbp::MessageHandler<msg_gps_time_t, msg_pos_ecef_t, msg_pos_ecef_cov_t>(state)
  {
    /* Do other constructor stuff */
  }

 private:
  void handle_sbp_msg(uint16_t sender_id, uint8_t message_length, const msg_gps_time_t& msg)
  {
    /* handle GPS time message */
  }

  void handle_sbp_msg(uint16_t sender_id, uint8_t message_length, const msg_pos_ecef_t& msg)
  {
    /* handle pos ECEF message */
  }

  void handle_sbp_msg(uint16_t sender_id, uint8_t message_length, const msg_pos_ecef_cov_t& msg)
  {
    /* handle pos ecef cov message */
  }
};

The instantiation and registration of the sbp_msg_callbacks_node_t objects are all taken care of automatically by the sbp::MessageHandler constructor, and are unregistered in the destructor. The derived class is able to publicly or privately inherit from sbp::MessageHandler, and the handle_sbp_msg member functions can be public or private. Each handle_sbp_msg is a virtual member function so additional levels of inheritance can be employed, though we do incur the overhead of the vtable lookup at run time. The mapping of message struct to message ID is achieved via a set of type traits that are automatically generated from the specification YAML. Currently only the message ID is included in the message type traits, but additional information could be added in the future if deemed useful.
The other classes are thin wrappers around the existing C structs, and probably don't need much explanation.","This PR adds a few lightweight C++ classes that wrap around the existing libsbp C interface. The main item of interest here is the MessageHandler. This class automates the infrastructure for registering a callback to have a member function called upon receipt of a sbp message.
Here is an example of how it would be used
class ECEFHandler : private sbp::MessageHandler<msg_gps_time_t, msg_pos_ecef_t, msg_pos_ecef_cov_t> {
 public:
  ECEFHandler(sbp::State *state) : private sbp::MessageHandler<msg_gps_time_t, msg_pos_ecef_t, msg_pos_ecef_cov_t>(state)
  {
    /* Do other constructor stuff */
  }

 private:
  void handle_sbp_msg(uint16_t sender_id, uint8_t message_length, const msg_gps_time_t& msg)
  {
    /* handle GPS time message */
  }

  void handle_sbp_msg(uint16_t sender_id, uint8_t message_length, const msg_pos_ecef_t& msg)
  {
    /* handle pos ECEF message */
  }

  void handle_sbp_msg(uint16_t sender_id, uint8_t message_length, const msg_pos_ecef_cov_t& msg)
  {
    /* handle pos ecef cov message */
  }
};

The instantiation and registration of the sbp_msg_callbacks_node_t objects are all taken care of automatically by the sbp::MessageHandler constructor, and are unregistered in the destructor. The derived class is able to publicly or privately inherit from sbp::MessageHandler, and the handle_sbp_msg member functions can be public or private. Each handle_sbp_msg is a virtual member function so additional levels of inheritance can be employed, though we do incur the overhead of the vtable lookup at run time. The mapping of message struct to message ID is achieved via a set of type traits that are automatically generated from the specification YAML. Currently only the message ID is included in the message type traits, but additional information could be added in the future if deemed useful.
The other classes are thin wrappers around the existing C structs, and probably don't need much explanation.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,740,2019-10-21T23:39:12Z,2019-10-23T22:55:11Z,2019-10-23T22:55:14Z,MERGED,True,28,28,3,https://github.com/woodfell,Use common test targets module,2,[],https://github.com/swift-nav/libsbp/pull/740,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/740,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,741,2019-10-25T05:55:42Z,2019-10-28T22:36:57Z,2019-10-28T22:36:59Z,MERGED,True,35,35,2,https://github.com/silverjam,Remove extra \\ from non-printable escaping,1,[],https://github.com/swift-nav/libsbp/pull/741,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/741,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,741,2019-10-25T05:55:42Z,2019-10-28T22:36:57Z,2019-10-28T22:36:59Z,MERGED,True,35,35,2,https://github.com/silverjam,Remove extra \\ from non-printable escaping,1,[],https://github.com/swift-nav/libsbp/pull/741,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/741#issuecomment-547161522,,"I may have made a mistake on the escape sequences.
On other news, I think we need to replace the platform dependent ""llu"" and similar things with the portable format specifiers in <inttypes.h>",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,741,2019-10-25T05:55:42Z,2019-10-28T22:36:57Z,2019-10-28T22:36:59Z,MERGED,True,35,35,2,https://github.com/silverjam,Remove extra \\ from non-printable escaping,1,[],https://github.com/swift-nav/libsbp/pull/741,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/741#issuecomment-547167216,,"@denniszollo yeah, we can fix on the main PR",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,741,2019-10-25T05:55:42Z,2019-10-28T22:36:57Z,2019-10-28T22:36:59Z,MERGED,True,35,35,2,https://github.com/silverjam,Remove extra \\ from non-printable escaping,1,[],https://github.com/swift-nav/libsbp/pull/741,https://github.com/jkretzmer,4,https://github.com/swift-nav/libsbp/pull/741#issuecomment-547167483,,"This looks good to me, but obviously will be a breaking change for Syrinx (which is fine).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,742,2019-10-25T06:41:35Z,2019-10-29T00:58:59Z,2019-10-29T00:59:02Z,MERGED,True,6,3,5,https://github.com/woodfell,Import libcheck as submodule,1,[],https://github.com/swift-nav/libsbp/pull/742,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/742,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,743,2019-10-26T00:02:12Z,2019-10-26T06:11:15Z,2019-10-26T06:11:19Z,MERGED,True,4,3,2,https://github.com/silverjam,Fix compiler warnings found in libsettings build,3,[],https://github.com/swift-nav/libsbp/pull/743,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/743,See https://travis-ci.org/swift-nav/libsettings/jobs/603079287?utm_medium=notification&utm_source=github_status,See https://travis-ci.org/swift-nav/libsettings/jobs/603079287?utm_medium=notification&utm_source=github_status,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,744,2019-10-29T01:33:10Z,2021-09-28T03:07:09Z,2021-09-28T03:07:09Z,CLOSED,False,7903,255,81,https://github.com/silverjam,Jkretzmer/sbp2json update,6,['draft'],https://github.com/swift-nav/libsbp/pull/744,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/744,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,745,2019-10-30T19:55:40Z,2019-11-01T04:48:47Z,2019-11-01T04:48:50Z,MERGED,True,19683,92,75,https://github.com/jbangelo,Add unit tests for Rust,6,[],https://github.com/swift-nav/libsbp/pull/745,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/745,"This PR adds generation of the test cases for Rust. The tests are built and run as a part of the typical build process for the rust bindings. I took the route of generating the tests instead of writing tests that read and process the YAML directly because of Rust's lack of reflection it seemed difficult to do a member wise comparison of the values without either learning to write a macro or autogenerating at least some part of the tests.
A couple of additional minor changes were made to fix issues found while implementing these tests:

The SBPMessage was not marked as public, so it's fields could not be accessed from outside the crate.
Several of the YAML specifications for tests contained values without a decimal point for float values. This meant that the generators for the tests would emit the literal values as integers. Rust doesn't allow these implicit type conversions, so the YAML was modified to contain values with a decimal point so the test generator knew to emit the correct floating point comparison.

The template for the tests were based on the existing C test template. Besides the syntactic changes the floating point comparisons were changed significantly to be more strict. The difference between the literal value and the unpacked value are compared against a a scaled multiple of the Epsilon of the floating point type. This should make sure that our unpacked floating point values are correct to within about 5 counts of the original value specified in the YAML. In addition the test generator now emits the expected floating point literals to 17 decimal places to ensure the literal is precise enough.","This PR adds generation of the test cases for Rust. The tests are built and run as a part of the typical build process for the rust bindings. I took the route of generating the tests instead of writing tests that read and process the YAML directly because of Rust's lack of reflection it seemed difficult to do a member wise comparison of the values without either learning to write a macro or autogenerating at least some part of the tests.
A couple of additional minor changes were made to fix issues found while implementing these tests:

The SBPMessage was not marked as public, so it's fields could not be accessed from outside the crate.
Several of the YAML specifications for tests contained values without a decimal point for float values. This meant that the generators for the tests would emit the literal values as integers. Rust doesn't allow these implicit type conversions, so the YAML was modified to contain values with a decimal point so the test generator knew to emit the correct floating point comparison.

The template for the tests were based on the existing C test template. Besides the syntactic changes the floating point comparisons were changed significantly to be more strict. The difference between the literal value and the unpacked value are compared against a a scaled multiple of the Epsilon of the floating point type. This should make sure that our unpacked floating point values are correct to within about 5 counts of the original value specified in the YAML. In addition the test generator now emits the expected floating point literals to 17 decimal places to ensure the literal is precise enough.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,746,2019-10-30T22:42:21Z,2019-10-30T23:52:22Z,2019-10-30T23:52:25Z,MERGED,True,1,1,1,https://github.com/jbangelo,Update check,1,[],https://github.com/swift-nav/libsbp/pull/746,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/746,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,747,2019-10-31T04:21:22Z,2019-11-01T23:07:36Z,2019-11-01T23:09:46Z,MERGED,True,737,430,29,https://github.com/jbangelo,Added optional serialize feature to rust crate,4,[],https://github.com/swift-nav/libsbp/pull/747,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/747,"Added a compile time feature, called serialize, which pulls in the base serde crate and derives all message types from the serde serialize and deserialize traits. In addition I updated the sbp crate to use the 2018 edition and fixed a few minor issues in the rust file templates.","Added a compile time feature, called serialize, which pulls in the base serde crate and derives all message types from the serde serialize and deserialize traits. In addition I updated the sbp crate to use the 2018 edition and fixed a few minor issues in the rust file templates.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,747,2019-10-31T04:21:22Z,2019-11-01T23:07:36Z,2019-11-01T23:09:46Z,MERGED,True,737,430,29,https://github.com/jbangelo,Added optional serialize feature to rust crate,4,[],https://github.com/swift-nav/libsbp/pull/747,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/747#issuecomment-548913135,"Added a compile time feature, called serialize, which pulls in the base serde crate and derives all message types from the serde serialize and deserialize traits. In addition I updated the sbp crate to use the 2018 edition and fixed a few minor issues in the rust file templates.","One thing that came to mind was to add tests of the JSON serialization feature. The YAML tests contain JSON payload of the message, we could add tests that serialize a message object and make sure the resultant JSON is equivalent to the pre-generated JSON.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,747,2019-10-31T04:21:22Z,2019-11-01T23:07:36Z,2019-11-01T23:09:46Z,MERGED,True,737,430,29,https://github.com/jbangelo,Added optional serialize feature to rust crate,4,[],https://github.com/swift-nav/libsbp/pull/747,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/747#issuecomment-548953449,"Added a compile time feature, called serialize, which pulls in the base serde crate and derives all message types from the serde serialize and deserialize traits. In addition I updated the sbp crate to use the 2018 edition and fixed a few minor issues in the rust file templates.","@silverjam Agreed that it would significantly increase the size/complexity of this PR. Was just bringing it up in case anyone thought it would be prudent to include from the get go. I'll consider it a ""nice to have"" for the future.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,747,2019-10-31T04:21:22Z,2019-11-01T23:07:36Z,2019-11-01T23:09:46Z,MERGED,True,737,430,29,https://github.com/jbangelo,Added optional serialize feature to rust crate,4,[],https://github.com/swift-nav/libsbp/pull/747,https://github.com/jbangelo,4,https://github.com/swift-nav/libsbp/pull/747#issuecomment-548979404,"Added a compile time feature, called serialize, which pulls in the base serde crate and derives all message types from the serde serialize and deserialize traits. In addition I updated the sbp crate to use the 2018 edition and fixed a few minor issues in the rust file templates.","Merging as is. It looks like travis somehow missed the update. There's one failure in the travis build, but it's the pythong/haskell speed comparison which occasionally fails anyways.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,747,2019-10-31T04:21:22Z,2019-11-01T23:07:36Z,2019-11-01T23:09:46Z,MERGED,True,737,430,29,https://github.com/jbangelo,Added optional serialize feature to rust crate,4,[],https://github.com/swift-nav/libsbp/pull/747,https://github.com/jbangelo,5,https://github.com/swift-nav/libsbp/pull/747#issuecomment-548979806,"Added a compile time feature, called serialize, which pulls in the base serde crate and derives all message types from the serde serialize and deserialize traits. In addition I updated the sbp crate to use the 2018 edition and fixed a few minor issues in the rust file templates.",@benjaminaltieri There isn't an example at the moment. I'll have to resurrect my sbp2json in rust.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,748,2019-10-31T21:59:27Z,2019-11-01T20:37:25Z,2019-11-01T20:37:28Z,MERGED,True,4,4,1,https://github.com/jbangelo,Changed C++ wrapper to not require non-const access to the buffer when sending,1,[],https://github.com/swift-nav/libsbp/pull/748,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/748,"This is an attempt to fix the poor const choices made in the C API. The write function in the C API takes the output buffer as a non-const pointer, but the writer should not be modifying the buffer (see fwrite for an example).
The C++ API now accepts a const qualified buffer, casts away the constness of that buffer when calling the C sbp_send_message function, but inside of the sbp::State::write_func function the buffer's constness is added when forwarding o the sbp::IWriter::write function. This should be safe since the C library doesn't do any modifications of the buffer, so the actual constness is never violated in reality.","This is an attempt to fix the poor const choices made in the C API. The write function in the C API takes the output buffer as a non-const pointer, but the writer should not be modifying the buffer (see fwrite for an example).
The C++ API now accepts a const qualified buffer, casts away the constness of that buffer when calling the C sbp_send_message function, but inside of the sbp::State::write_func function the buffer's constness is added when forwarding o the sbp::IWriter::write function. This should be safe since the C library doesn't do any modifications of the buffer, so the actual constness is never violated in reality.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,748,2019-10-31T21:59:27Z,2019-11-01T20:37:25Z,2019-11-01T20:37:28Z,MERGED,True,4,4,1,https://github.com/jbangelo,Changed C++ wrapper to not require non-const access to the buffer when sending,1,[],https://github.com/swift-nav/libsbp/pull/748,https://github.com/scarcanague,2,https://github.com/swift-nav/libsbp/pull/748#issuecomment-548940734,"This is an attempt to fix the poor const choices made in the C API. The write function in the C API takes the output buffer as a non-const pointer, but the writer should not be modifying the buffer (see fwrite for an example).
The C++ API now accepts a const qualified buffer, casts away the constness of that buffer when calling the C sbp_send_message function, but inside of the sbp::State::write_func function the buffer's constness is added when forwarding o the sbp::IWriter::write function. This should be safe since the C library doesn't do any modifications of the buffer, so the actual constness is never violated in reality.",Looks good!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,749,2019-11-01T19:13:14Z,2019-11-01T20:15:36Z,2019-11-02T00:59:33Z,MERGED,True,1,0,1,https://github.com/sn-oseagbadu,Added typescript module declaration file,1,[],https://github.com/swift-nav/libsbp/pull/749,https://github.com/sn-oseagbadu,1,https://github.com/swift-nav/libsbp/pull/749,"Type script declaration file ""index.d.ts"" added to allow module import.","Type script declaration file ""index.d.ts"" added to allow module import.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,750,2019-11-01T23:06:00Z,2019-11-02T00:06:21Z,2019-11-02T00:06:25Z,MERGED,True,16,1,2,https://github.com/jbangelo,Added check for a couple of needed commands to build rust.,1,[],https://github.com/swift-nav/libsbp/pull/750,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/750,Also added a basic README for the rust subdirectory with installation instructions.,Also added a basic README for the rust subdirectory with installation instructions.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,750,2019-11-01T23:06:00Z,2019-11-02T00:06:21Z,2019-11-02T00:06:25Z,MERGED,True,16,1,2,https://github.com/jbangelo,Added check for a couple of needed commands to build rust.,1,[],https://github.com/swift-nav/libsbp/pull/750,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/750#issuecomment-548988538,Also added a basic README for the rust subdirectory with installation instructions.,The Travis failure is the python vs Haskell speed comparison. Merging despite that,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,751,2019-11-04T20:53:20Z,2019-11-04T20:57:27Z,2019-11-04T20:57:31Z,CLOSED,False,5657,5658,19,https://github.com/martin-swift,Can't compare int and NoneType by default in python3.,1,[],https://github.com/swift-nav/libsbp/pull/751,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/751,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,751,2019-11-04T20:53:20Z,2019-11-04T20:57:27Z,2019-11-04T20:57:31Z,CLOSED,False,5657,5658,19,https://github.com/martin-swift,Can't compare int and NoneType by default in python3.,1,[],https://github.com/swift-nav/libsbp/pull/751,https://github.com/martin-swift,2,https://github.com/swift-nav/libsbp/pull/751#issuecomment-549542147,,gah. let me pull master.  must have moved.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,752,2019-11-04T21:03:57Z,2019-11-04T23:13:55Z,2019-11-04T23:14:05Z,MERGED,True,4746,4746,17,https://github.com/martin-swift,Cannot compare int and NoneType in python3,2,[],https://github.com/swift-nav/libsbp/pull/752,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/752,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,752,2019-11-04T21:03:57Z,2019-11-04T23:13:55Z,2019-11-04T23:14:05Z,MERGED,True,4746,4746,17,https://github.com/martin-swift,Cannot compare int and NoneType in python3,2,[],https://github.com/swift-nav/libsbp/pull/752,https://github.com/martin-swift,2,https://github.com/swift-nav/libsbp/pull/752#issuecomment-549554593,,ok; what is package-lock.json?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,752,2019-11-04T21:03:57Z,2019-11-04T23:13:55Z,2019-11-04T23:14:05Z,MERGED,True,4746,4746,17,https://github.com/martin-swift,Cannot compare int and NoneType in python3,2,[],https://github.com/swift-nav/libsbp/pull/752,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/752#issuecomment-549556795,,"@martin-swift it's the javascript package ""lock"" for npm, in order to create reproducible builds, npm ""locks"" the packages it actually installs with this file.  So, we should only commit this file if we add new deps to package.json (the npm package spec).",True,{'THUMBS_UP': ['https://github.com/martin-swift']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,752,2019-11-04T21:03:57Z,2019-11-04T23:13:55Z,2019-11-04T23:14:05Z,MERGED,True,4746,4746,17,https://github.com/martin-swift,Cannot compare int and NoneType in python3,2,[],https://github.com/swift-nav/libsbp/pull/752,https://github.com/martin-swift,4,https://github.com/swift-nav/libsbp/pull/752#issuecomment-549557680,,"@martin-swift it's the javascript package ""lock"" for npm, in order to create reproducible builds, npm ""locks"" the packages it actually installs with this file. So, we should only commit this file if we add new deps to package.json (the npm package spec).

So what changes it?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,752,2019-11-04T21:03:57Z,2019-11-04T23:13:55Z,2019-11-04T23:14:05Z,MERGED,True,4746,4746,17,https://github.com/martin-swift,Cannot compare int and NoneType in python3,2,[],https://github.com/swift-nav/libsbp/pull/752,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/752#issuecomment-549558635,,"@martin-swift when we gen javascript, we invoke npm, it looks like npm (because it's newer than when this package-lock.json was generated) is adjusting the syntax of the lock file to be more modern.  At some point we should commit these syntax changes with a recent version of npm, but probably as a separate PR?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,753,2019-11-07T05:24:20Z,2019-11-07T07:00:13Z,2019-11-07T07:00:13Z,MERGED,True,9,3,3,https://github.com/benjaminaltieri,Get rust example building,3,[],https://github.com/swift-nav/libsbp/pull/753,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/753,Just update the example project under the rust folder and add it to CI so that it continues to build. (If it should be changed/updates/removed I'll leave that for discussion),Just update the example project under the rust folder and add it to CI so that it continues to build. (If it should be changed/updates/removed I'll leave that for discussion),True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,754,2019-11-07T06:04:13Z,2019-11-08T03:44:09Z,2019-11-08T03:44:12Z,MERGED,True,73,29,4,https://github.com/jbangelo,Miscellaneous clean up of Rust bindings,4,[],https://github.com/swift-nav/libsbp/pull/754,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/754,"Just a few odds and ends that I felt should be cleaned up. Already split up into logical commits if you prefer.

Added a few ""keywords"" to the Cargo.toml
Fixed a crash in the parser caused when the buffer ran out of data and didn't get refilled
Added a very bare bones description of the crate for the doc generation
Added a more formally defined Result and Error type for the crate to use","Just a few odds and ends that I felt should be cleaned up. Already split up into logical commits if you prefer.

Added a few ""keywords"" to the Cargo.toml
Fixed a crash in the parser caused when the buffer ran out of data and didn't get refilled
Added a very bare bones description of the crate for the doc generation
Added a more formally defined Result and Error type for the crate to use",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,754,2019-11-07T06:04:13Z,2019-11-08T03:44:09Z,2019-11-08T03:44:12Z,MERGED,True,73,29,4,https://github.com/jbangelo,Miscellaneous clean up of Rust bindings,4,[],https://github.com/swift-nav/libsbp/pull/754,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/754#issuecomment-550938636,"Just a few odds and ends that I felt should be cleaned up. Already split up into logical commits if you prefer.

Added a few ""keywords"" to the Cargo.toml
Fixed a crash in the parser caused when the buffer ran out of data and didn't get refilled
Added a very bare bones description of the crate for the doc generation
Added a more formally defined Result and Error type for the crate to use","I got this warning when compiling using make test-rust, with rustc==1.3.8:
warning: trait objects without an explicit `dyn` are deprecated
warning: trait objects without an explicit `dyn` are deprecated
   --> src/parser/mod.rs:134:30
    |
134 | pub fn read_string(buf: &mut Read) -> Result<String, ::Error> {
    |                              ^^^^ help: use `dyn`: `dyn Read`
    |
    = note: `#[warn(bare_trait_objects)]` on by default

   --> src/parser/mod.rs:134:30
    |
134 | pub fn read_string(buf: &mut Read) -> Result<String, ::Error> {
    |                              ^^^^ help: use `dyn`: `dyn Read`
    |
    = note: `#[warn(bare_trait_objects)]` on by default

warning: trait objects without an explicit `dyn` are deprecated
   --> src/parser/mod.rs:140:36
    |
140 | pub fn read_string_limit(buf: &mut Read, n: u64) -> Result<String, ::Error> {
    |                                    ^^^^ help: use `dyn`: `dyn Read`

warning: trait objects without an explicit `dyn` are deprecated
   --> src/parser/mod.rs:140:36
    |
140 | pub fn read_string_limit(buf: &mut Read, n: u64) -> Result<String, ::Error> {
    |                                    ^^^^ help: use `dyn`: `dyn Read`

Worth addressing?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,754,2019-11-07T06:04:13Z,2019-11-08T03:44:09Z,2019-11-08T03:44:12Z,MERGED,True,73,29,4,https://github.com/jbangelo,Miscellaneous clean up of Rust bindings,4,[],https://github.com/swift-nav/libsbp/pull/754,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/754#issuecomment-551371613,"Just a few odds and ends that I felt should be cleaned up. Already split up into logical commits if you prefer.

Added a few ""keywords"" to the Cargo.toml
Fixed a crash in the parser caused when the buffer ran out of data and didn't get refilled
Added a very bare bones description of the crate for the doc generation
Added a more formally defined Result and Error type for the crate to use",@benjaminaltieri I think you're on the wrong branch? The dyn has already been added there.,True,{'THUMBS_UP': ['https://github.com/benjaminaltieri']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,755,2019-11-12T05:19:14Z,2019-11-19T19:54:59Z,2019-11-19T19:55:03Z,MERGED,True,9091,2457,80,https://github.com/jbangelo,[TTI-16] Add rust message serialization,9,[],https://github.com/swift-nav/libsbp/pull/755,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/755,"The approach taken is to define a trait (SbpSerialize) which defines functions for how a type can be serialized according to the SBP specification. Several basic types have the serialize trait implemented, along with any type in the YAML spec which doesn't have a message ID associated with it.  I also added an into_frame() function to the  SBPMessage trait which consumes the message struct and converts it into a Vec<u8> representing a full SBP frame. The message definitions in the YAML spec have the into_frame function defined for them.
In addition this PR adds code to implement the  the SBPMessage trait for the SBP enum. This should make it easier to handle generic messages coming out of the parser, along with handling specific messages coming out of the parser using a match expression. It also changes the message type from an associated const value to be accessible via a function, this should make it possible to make trait objects for the SBPMessage trait (nothing in the PR requires it, but this limitation was noticed while testing).","The approach taken is to define a trait (SbpSerialize) which defines functions for how a type can be serialized according to the SBP specification. Several basic types have the serialize trait implemented, along with any type in the YAML spec which doesn't have a message ID associated with it.  I also added an into_frame() function to the  SBPMessage trait which consumes the message struct and converts it into a Vec<u8> representing a full SBP frame. The message definitions in the YAML spec have the into_frame function defined for them.
In addition this PR adds code to implement the  the SBPMessage trait for the SBP enum. This should make it easier to handle generic messages coming out of the parser, along with handling specific messages coming out of the parser using a match expression. It also changes the message type from an associated const value to be accessible via a function, this should make it possible to make trait objects for the SBPMessage trait (nothing in the PR requires it, but this limitation was noticed while testing).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,755,2019-11-12T05:19:14Z,2019-11-19T19:54:59Z,2019-11-19T19:55:03Z,MERGED,True,9091,2457,80,https://github.com/jbangelo,[TTI-16] Add rust message serialization,9,[],https://github.com/swift-nav/libsbp/pull/755,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/755#issuecomment-554612851,"The approach taken is to define a trait (SbpSerialize) which defines functions for how a type can be serialized according to the SBP specification. Several basic types have the serialize trait implemented, along with any type in the YAML spec which doesn't have a message ID associated with it.  I also added an into_frame() function to the  SBPMessage trait which consumes the message struct and converts it into a Vec<u8> representing a full SBP frame. The message definitions in the YAML spec have the into_frame function defined for them.
In addition this PR adds code to implement the  the SBPMessage trait for the SBP enum. This should make it easier to handle generic messages coming out of the parser, along with handling specific messages coming out of the parser using a match expression. It also changes the message type from an associated const value to be accessible via a function, this should make it possible to make trait objects for the SBPMessage trait (nothing in the PR requires it, but this limitation was noticed while testing).","I've pushed an updated approach to things.

The SBP enum now has a function to get a &dyn SBPMessage reference to the underlying message. This was the best I could figure out how to do this, and it still ended up with a giant match expression. @silverjam I would love to talk with you next week about alternative approaches, I went through a bunch and ended up with this.
I've added a dedicated Unknown message struct for holding unknown message types.
I've reorganized the serialize trait to put into a vector instead of returning a new vector. This makes it a little bit more clunky to use but I think will make the code more effecicent.
I've added a framer module to contain the logic of creating a Vec<u8> representing a frame from a message object. The framing function no longer consumes the message, this is because it takes in a &dyn SBPMessage to make it easier to use with the SBP enum.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,756,2019-11-13T18:35:38Z,2019-11-13T22:12:36Z,2019-11-13T22:12:39Z,MERGED,True,10,3,2,https://github.com/silverjam,Allow max reconnects to be specified as a parameter [ESD-1603] [TTI-2],2,[],https://github.com/swift-nav/libsbp/pull/756,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/756,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,757,2019-11-14T02:47:59Z,2019-11-14T03:37:37Z,2019-11-14T03:37:40Z,MERGED,True,211,285,83,https://github.com/silverjam,Release 2.7.3,12,[],https://github.com/swift-nav/libsbp/pull/757,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/757,Skipped release 2.7.2 become a snafu with Python deployment,Skipped release 2.7.2 become a snafu with Python deployment,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,758,2019-11-16T20:48:19Z,2019-11-18T20:05:46Z,2019-11-18T20:05:46Z,MERGED,True,888,1,26,https://github.com/benjaminaltieri,Example: rust message serialization plus trait to_frame method,4,[],https://github.com/swift-nav/libsbp/pull/758,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/758,"just putting this up for fun, curious if it makes sense or if we should just stick with using sbp::framer::into_frame manually","just putting this up for fun, curious if it makes sense or if we should just stick with using sbp::framer::into_frame manually",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,759,2019-11-19T20:46:54Z,2019-11-20T20:57:22Z,2019-11-20T20:57:27Z,MERGED,True,1423,81,23,https://github.com/martin-swift,Add variances to SSR atmospheric messages. ,8,[],https://github.com/swift-nav/libsbp/pull/759,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/759,"In order to widelane fix in SSR mode, we need the variances for iono and tropo atmo delays (much like we have in OSR).  The only important file to look at is ssr.yaml; all the others are auto-generated language bindings (unless you are interested in verifying the generation happened correctly).","In order to widelane fix in SSR mode, we need the variances for iono and tropo atmo delays (much like we have in OSR).  The only important file to look at is ssr.yaml; all the others are auto-generated language bindings (unless you are interested in verifying the generation happened correctly).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,759,2019-11-19T20:46:54Z,2019-11-20T20:57:22Z,2019-11-20T20:57:27Z,MERGED,True,1423,81,23,https://github.com/martin-swift,Add variances to SSR atmospheric messages. ,8,[],https://github.com/swift-nav/libsbp/pull/759,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/759#issuecomment-555716375,"In order to widelane fix in SSR mode, we need the variances for iono and tropo atmo delays (much like we have in OSR).  The only important file to look at is ssr.yaml; all the others are auto-generated language bindings (unless you are interested in verifying the generation happened correctly).",Do we want to burn this message ID and use a new one? Any code that processes the old messages with this definition isn't going to be happy.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,759,2019-11-19T20:46:54Z,2019-11-20T20:57:22Z,2019-11-20T20:57:27Z,MERGED,True,1423,81,23,https://github.com/martin-swift,Add variances to SSR atmospheric messages. ,8,[],https://github.com/swift-nav/libsbp/pull/759,https://github.com/martin-swift,3,https://github.com/swift-nav/libsbp/pull/759#issuecomment-555717504,"In order to widelane fix in SSR mode, we need the variances for iono and tropo atmo delays (much like we have in OSR).  The only important file to look at is ssr.yaml; all the others are auto-generated language bindings (unless you are interested in verifying the generation happened correctly).","Do we want to burn this message ID and use a new one? Any code that processes the old messages with this definition isn't going to be happy.

? I don't think so; I have starling pull too that will fix all that code.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,759,2019-11-19T20:46:54Z,2019-11-20T20:57:22Z,2019-11-20T20:57:27Z,MERGED,True,1423,81,23,https://github.com/martin-swift,Add variances to SSR atmospheric messages. ,8,[],https://github.com/swift-nav/libsbp/pull/759,https://github.com/benjamin0,4,https://github.com/swift-nav/libsbp/pull/759#issuecomment-555717562,"In order to widelane fix in SSR mode, we need the variances for iono and tropo atmo delays (much like we have in OSR).  The only important file to look at is ssr.yaml; all the others are auto-generated language bindings (unless you are interested in verifying the generation happened correctly).","@jbangelo Great point, we should make it a separate message number.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,759,2019-11-19T20:46:54Z,2019-11-20T20:57:22Z,2019-11-20T20:57:27Z,MERGED,True,1423,81,23,https://github.com/martin-swift,Add variances to SSR atmospheric messages. ,8,[],https://github.com/swift-nav/libsbp/pull/759,https://github.com/martin-swift,5,https://github.com/swift-nav/libsbp/pull/759#issuecomment-555718142,"In order to widelane fix in SSR mode, we need the variances for iono and tropo atmo delays (much like we have in OSR).  The only important file to look at is ssr.yaml; all the others are auto-generated language bindings (unless you are interested in verifying the generation happened correctly).","oh, I see.  old versions....",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,759,2019-11-19T20:46:54Z,2019-11-20T20:57:22Z,2019-11-20T20:57:27Z,MERGED,True,1423,81,23,https://github.com/martin-swift,Add variances to SSR atmospheric messages. ,8,[],https://github.com/swift-nav/libsbp/pull/759,https://github.com/jbangelo,6,https://github.com/swift-nav/libsbp/pull/759#issuecomment-555718932,"In order to widelane fix in SSR mode, we need the variances for iono and tropo atmo delays (much like we have in OSR).  The only important file to look at is ssr.yaml; all the others are auto-generated language bindings (unless you are interested in verifying the generation happened correctly).",@martin-swift Exactly. I should have been more clear.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,760,2019-11-19T20:52:06Z,2019-11-19T23:54:51Z,2019-11-19T23:54:54Z,MERGED,True,10,12,4,https://github.com/jbangelo,Moved the rust example inside of the sbp crate,2,[],https://github.com/swift-nav/libsbp/pull/760,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/760,Just noticed that this was a possibility. It seemed like a good idea to keep the sbp crate more or less self contained.,Just noticed that this was a possibility. It seemed like a good idea to keep the sbp crate more or less self contained.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,760,2019-11-19T20:52:06Z,2019-11-19T23:54:51Z,2019-11-19T23:54:54Z,MERGED,True,10,12,4,https://github.com/jbangelo,Moved the rust example inside of the sbp crate,2,[],https://github.com/swift-nav/libsbp/pull/760,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/760#issuecomment-555722740,Just noticed that this was a possibility. It seemed like a good idea to keep the sbp crate more or less self contained.,@benjaminaltieri Good suggestion. I added a little note in this PR about that.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,761,2019-11-22T06:21:11Z,2019-11-22T07:40:30Z,2019-11-22T08:19:07Z,MERGED,True,81,1423,23,https://github.com/benjamin0,"Revert ""Add stddev to SSR atmospheric messages.  (#759)""",1,[],https://github.com/swift-nav/libsbp/pull/761,https://github.com/benjamin0,1,https://github.com/swift-nav/libsbp/pull/761,This reverts commit 9cbbfc3.,This reverts commit 9cbbfc3.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,762,2019-11-26T00:49:00Z,2020-01-10T21:54:01Z,2020-01-10T21:54:01Z,CLOSED,False,1464,86,24,https://github.com/martin-swift,"Revert ""Revert ""Add stddev to SSR atmospheric messages.  (#759)""""",2,[],https://github.com/swift-nav/libsbp/pull/762,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/762,This reverts commit 6aa86d1.,This reverts commit 6aa86d1.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,762,2019-11-26T00:49:00Z,2020-01-10T21:54:01Z,2020-01-10T21:54:01Z,CLOSED,False,1464,86,24,https://github.com/martin-swift,"Revert ""Revert ""Add stddev to SSR atmospheric messages.  (#759)""""",2,[],https://github.com/swift-nav/libsbp/pull/762,https://github.com/martin-swift,2,https://github.com/swift-nav/libsbp/pull/762#issuecomment-573219965,This reverts commit 6aa86d1.,closing this in favor of #771; was easier to just re-branch off master.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,763,2019-11-27T04:01:15Z,2020-01-09T23:19:18Z,2020-01-09T23:19:21Z,MERGED,True,27,7,3,https://github.com/silverjam,Changes needed to libsbp for road runner [INFRA-35],3,[],https://github.com/swift-nav/libsbp/pull/763,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/763,"sbp2json: tools like ubx2sbp produce small amount of output (because of the small amount of data processed), in order for sbp2json to be responsive we need to disable buffering of stdin and stdout


In the handler code, since we spawn a thread, there's currently no way to ""percolate"" an exception that happens in the handler thread back to caller... the prevents code from doing things like reconnecting when a tcp connect dies... for example:

https://github.com/swift-nav/swiftcar/pull/42/files#diff-60beabf3ee14b8a53421a34aa6f05cdbR238
or: https://github.com/swift-nav/swiftcar/pull/42/files#diff-60beabf3ee14b8a53421a34aa6f05cdbR678
.
These functions handle exceptions in order to know that a device is not responding and retry the connection as needed.","sbp2json: tools like ubx2sbp produce small amount of output (because of the small amount of data processed), in order for sbp2json to be responsive we need to disable buffering of stdin and stdout


In the handler code, since we spawn a thread, there's currently no way to ""percolate"" an exception that happens in the handler thread back to caller... the prevents code from doing things like reconnecting when a tcp connect dies... for example:

https://github.com/swift-nav/swiftcar/pull/42/files#diff-60beabf3ee14b8a53421a34aa6f05cdbR238
or: https://github.com/swift-nav/swiftcar/pull/42/files#diff-60beabf3ee14b8a53421a34aa6f05cdbR678
.
These functions handle exceptions in order to know that a device is not responding and retry the connection as needed.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,763,2019-11-27T04:01:15Z,2020-01-09T23:19:18Z,2020-01-09T23:19:21Z,MERGED,True,27,7,3,https://github.com/silverjam,Changes needed to libsbp for road runner [INFRA-35],3,[],https://github.com/swift-nav/libsbp/pull/763,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/763#issuecomment-572801351,"sbp2json: tools like ubx2sbp produce small amount of output (because of the small amount of data processed), in order for sbp2json to be responsive we need to disable buffering of stdin and stdout


In the handler code, since we spawn a thread, there's currently no way to ""percolate"" an exception that happens in the handler thread back to caller... the prevents code from doing things like reconnecting when a tcp connect dies... for example:

https://github.com/swift-nav/swiftcar/pull/42/files#diff-60beabf3ee14b8a53421a34aa6f05cdbR238
or: https://github.com/swift-nav/swiftcar/pull/42/files#diff-60beabf3ee14b8a53421a34aa6f05cdbR678
.
These functions handle exceptions in order to know that a device is not responding and retry the connection as needed.","@denniszollo
I don't think this will affect piksi_tools or the console for a couple of reasons:

existing failures on this path would've cause the tool to hang and stop working, now it'll at least crash and stop
the console uses the reconnect feature of the TCPDriver, so it shouldn't hit this code

We probably do need to test how this interacts with the serial port support though-- I added https://swift-nav.atlassian.net/browse/INFRA-51 to cover this.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,764,2019-11-27T22:42:41Z,2019-11-27T23:51:29Z,2019-11-27T23:51:42Z,MERGED,True,1,0,1,https://github.com/RReichert,updated swift libraries with namespace,1,[],https://github.com/swift-nav/libsbp/pull/764,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/764,"Added a namespace to the sbp library as per the discussion in the ""cmake"" slack channel.
NOTE: I'm not sure why the CMakeLists.txt file has the below code:
export(EXPORT sbp-export
        NAMESPACE LibSbp::
        FILE ${PROJECT_BINARY_DIR}/LibSbpImport.cmake)

I'm not sure what this is trying to achieve since it installs the LibSbpImport.cmake file onto the build directory. If the main intension was suppose to be something that gets installed, it would need to be install(EXPORT sbp-export ...). The reason I bring this up is because the namespace specified there LibSbp:: conflicts with the swiftnav::. Anyone using this library publicly probably won't use the exported LibSbpImport.cmake anyways. Anyone have any issues with just leaving the LibSbp namespace on the export command as it is for now?","Added a namespace to the sbp library as per the discussion in the ""cmake"" slack channel.
NOTE: I'm not sure why the CMakeLists.txt file has the below code:
export(EXPORT sbp-export
        NAMESPACE LibSbp::
        FILE ${PROJECT_BINARY_DIR}/LibSbpImport.cmake)

I'm not sure what this is trying to achieve since it installs the LibSbpImport.cmake file onto the build directory. If the main intension was suppose to be something that gets installed, it would need to be install(EXPORT sbp-export ...). The reason I bring this up is because the namespace specified there LibSbp:: conflicts with the swiftnav::. Anyone using this library publicly probably won't use the exported LibSbpImport.cmake anyways. Anyone have any issues with just leaving the LibSbp namespace on the export command as it is for now?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,765,2019-11-28T01:17:56Z,2019-11-28T01:58:30Z,2019-11-28T01:58:34Z,MERGED,True,2,0,1,https://github.com/RReichert,Added virtual destructor to sbp::State,1,[],https://github.com/swift-nav/libsbp/pull/765,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/765,"Without a virtual destructor the sbp::State class isn't really safe to inherit from, as per good C++ practise. I've added that in as its currently blocking developers from creating the following class:
class SbpProcessor : public sbp::State, private sbp::MessageHandler<msg_pos_llh_t> {
public:
  SbpProcessor() : : sbp::State(), sbp::MessageHandler<msg_pos_llh_t>(this) {
    // fill this in
  }

  void handle_sbp_msg(uint16_t sender_id, uint8_t message_length, const msg_pos_llh_t &msg) override {
    // fill this in
  }
};

SbpProcessor sbp_processor;
sbp_processor.set_reader(&file_reader);  // lets assume he have an sbp::IReader that reads files
while(sbp_processor.process() >= 0) {}","Without a virtual destructor the sbp::State class isn't really safe to inherit from, as per good C++ practise. I've added that in as its currently blocking developers from creating the following class:
class SbpProcessor : public sbp::State, private sbp::MessageHandler<msg_pos_llh_t> {
public:
  SbpProcessor() : : sbp::State(), sbp::MessageHandler<msg_pos_llh_t>(this) {
    // fill this in
  }

  void handle_sbp_msg(uint16_t sender_id, uint8_t message_length, const msg_pos_llh_t &msg) override {
    // fill this in
  }
};

SbpProcessor sbp_processor;
sbp_processor.set_reader(&file_reader);  // lets assume he have an sbp::IReader that reads files
while(sbp_processor.process() >= 0) {}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,766,2019-12-03T21:29:53Z,2019-12-11T02:10:18Z,2020-09-23T23:13:03Z,MERGED,True,4097,3,18,https://github.com/denniszollo,Dzollo/star 748/position messages,3,[],https://github.com/swift-nav/libsbp/pull/766,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/766,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,766,2019-12-03T21:29:53Z,2019-12-11T02:10:18Z,2020-09-23T23:13:03Z,MERGED,True,4097,3,18,https://github.com/denniszollo,Dzollo/star 748/position messages,3,[],https://github.com/swift-nav/libsbp/pull/766,https://github.com/switanis,2,https://github.com/swift-nav/libsbp/pull/766#issuecomment-562806826,,"Looks good, except one message where flags are not made reserved. See comments above.
Thanks for doing this!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,767,2020-01-03T20:31:32Z,2020-01-09T16:36:24Z,2020-01-09T16:36:27Z,MERGED,True,236,3,3,https://github.com/jbangelo,Added classes for handling specific frame types and any frame,2,[],https://github.com/swift-nav/libsbp/pull/767,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/767,"It was recently brought up that it might be helpful to have a way to handle any SBP message using the C++ classes. This PR adds the missing wrappers for handling raw frames of specific classes (corresponding to the sbp_register_frame_callback() C function), and for handling all incoming frames/messages (corresponding to the sbp_register_all_msg_callback() C function).
The interface for these were meant to be similar to the existing MessageHandler class. They differ in that they only define a single virtual function to be implemented instead of one for each message type. This was done since these classes would typically be used for lower level access than is typical, and the such application code would probably want access to the raw bytes of data instead of a type safe reference.
In addition to the code and example usage, a minor issue with the CMake files for the example was fixed as a part of this PR to help test the example.","It was recently brought up that it might be helpful to have a way to handle any SBP message using the C++ classes. This PR adds the missing wrappers for handling raw frames of specific classes (corresponding to the sbp_register_frame_callback() C function), and for handling all incoming frames/messages (corresponding to the sbp_register_all_msg_callback() C function).
The interface for these were meant to be similar to the existing MessageHandler class. They differ in that they only define a single virtual function to be implemented instead of one for each message type. This was done since these classes would typically be used for lower level access than is typical, and the such application code would probably want access to the raw bytes of data instead of a type safe reference.
In addition to the code and example usage, a minor issue with the CMake files for the example was fixed as a part of this PR to help test the example.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,768,2020-01-03T21:12:43Z,2020-01-06T16:11:17Z,2020-01-06T16:11:21Z,MERGED,True,2,2,1,https://github.com/jbangelo,Fixed a few minor typos in the comments for the C++ wrapper classes,1,[],https://github.com/swift-nav/libsbp/pull/768,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/768,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,769,2020-01-07T23:28:40Z,2020-01-07T23:35:42Z,2020-01-07T23:35:48Z,MERGED,True,1,1,1,https://github.com/martin-swift,Bump cmake to master.,1,[],https://github.com/swift-nav/libsbp/pull/769,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/769,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,770,2020-01-09T23:51:53Z,2020-01-10T00:49:07Z,2020-01-10T00:49:10Z,MERGED,True,1,30,1,https://github.com/jbangelo,Changed the CMake to install all headers,1,[],https://github.com/swift-nav/libsbp/pull/770,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/770,"@lkloh noticed that we don't install the C++ libsbp headers, this PR is meant to fix that. I tried simply adding the headers to the existing list but the install command didn't put them in a cpp/ subdirectory. This approach seemed cleaner than making a second variable and second install command.","@lkloh noticed that we don't install the C++ libsbp headers, this PR is meant to fix that. I tried simply adding the headers to the existing list but the install command didn't put them in a cpp/ subdirectory. This approach seemed cleaner than making a second variable and second install command.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,770,2020-01-09T23:51:53Z,2020-01-10T00:49:07Z,2020-01-10T00:49:10Z,MERGED,True,1,30,1,https://github.com/jbangelo,Changed the CMake to install all headers,1,[],https://github.com/swift-nav/libsbp/pull/770,https://github.com/lkloh,2,https://github.com/swift-nav/libsbp/pull/770#issuecomment-572818321,"@lkloh noticed that we don't install the C++ libsbp headers, this PR is meant to fix that. I tried simply adding the headers to the existing list but the install command didn't put them in a cpp/ subdirectory. This approach seemed cleaner than making a second variable and second install command.","@lkloh noticed that we don't install the C++ libsbp headers, this PR is meant to fix that. I tried simply adding the headers to the existing list but the install command didn't put them in a cpp/ subdirectory. This approach seemed cleaner than making a second variable and second install command.

thanks for fixing!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,771,2020-01-10T21:53:06Z,2020-01-31T21:35:45Z,2020-01-31T21:35:49Z,MERGED,True,3146,164,27,https://github.com/martin-swift,Add message for tropo and iono with variances.,3,[],https://github.com/swift-nav/libsbp/pull/771,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/771,"should be ready, but no rush - I want to get the end-to-end system working before I merge this.","should be ready, but no rush - I want to get the end-to-end system working before I merge this.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,772,2020-01-14T18:56:07Z,2020-01-15T21:04:32Z,2020-01-15T21:04:36Z,MERGED,True,111,0,2,https://github.com/martin-swift,Dockerfile for building libsbp binding.  Uses debian buster.,8,[],https://github.com/swift-nav/libsbp/pull/772,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/772,cc: @jbangelo @ljbade @woodfell @schniedergers @mfine @benjamin0,cc: @jbangelo @ljbade @woodfell @schniedergers @mfine @benjamin0,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,772,2020-01-14T18:56:07Z,2020-01-15T21:04:32Z,2020-01-15T21:04:36Z,MERGED,True,111,0,2,https://github.com/martin-swift,Dockerfile for building libsbp binding.  Uses debian buster.,8,[],https://github.com/swift-nav/libsbp/pull/772,https://github.com/martin-swift,2,https://github.com/swift-nav/libsbp/pull/772#issuecomment-574321322,cc: @jbangelo @ljbade @woodfell @schniedergers @mfine @benjamin0,"same file from this pull:
https://github.com/swift-nav/docker-recipes/pull/30",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,773,2020-01-14T22:26:40Z,2020-02-21T17:04:28Z,2020-02-21T19:48:48Z,MERGED,True,4,0,1,https://github.com/lkloh,Disallow copying of State,2,[],https://github.com/swift-nav/libsbp/pull/773,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/773,"To support the coding guidelines that ban copying into functions.
RE: https://github.com/swift-nav/interleaver/pull/2/files#r366537476","To support the coding guidelines that ban copying into functions.
RE: https://github.com/swift-nav/interleaver/pull/2/files#r366537476",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,773,2020-01-14T22:26:40Z,2020-02-21T17:04:28Z,2020-02-21T19:48:48Z,MERGED,True,4,0,1,https://github.com/lkloh,Disallow copying of State,2,[],https://github.com/swift-nav/libsbp/pull/773,https://github.com/lkloh,2,https://github.com/swift-nav/libsbp/pull/773#issuecomment-589807889,"To support the coding guidelines that ban copying into functions.
RE: https://github.com/swift-nav/interleaver/pull/2/files#r366537476",Thanks for finishing it off! Gonna merge the submodule updates since they passed,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,774,2020-01-16T04:37:25Z,2020-01-16T19:50:32Z,2020-01-16T19:50:33Z,MERGED,True,2,2,1,https://github.com/horverno,tcp_example error fix (signed /unsigned mismatch),1,[],https://github.com/swift-nav/libsbp/pull/774,https://github.com/horverno,1,https://github.com/swift-nav/libsbp/pull/774,"fixing a small forgetfulness in the TCP example, the return of socket_read should be s32 instead of u32","fixing a small forgetfulness in the TCP example, the return of socket_read should be s32 instead of u32",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,775,2020-02-10T21:27:58Z,2020-02-20T20:53:36Z,2020-02-27T21:58:52Z,MERGED,True,70,14,5,https://github.com/denniszollo,Record total bytes read/written in python sbp driver,4,[],https://github.com/swift-nav/libsbp/pull/775,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/775,I added this feature to enable a bits in bits out view for the console (swift-nav/piksi_tools#1131),I added this feature to enable a bits in bits out view for the console (swift-nav/piksi_tools#1131),True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,775,2020-02-10T21:27:58Z,2020-02-20T20:53:36Z,2020-02-27T21:58:52Z,MERGED,True,70,14,5,https://github.com/denniszollo,Record total bytes read/written in python sbp driver,4,[],https://github.com/swift-nav/libsbp/pull/775,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/775#issuecomment-588511016,I added this feature to enable a bits in bits out view for the console (swift-nav/piksi_tools#1131),Per slack disscusion we'll roll the counter at 32-bits and move the record keeping logic to the base class.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,776,2020-02-19T13:39:42Z,2020-03-04T18:54:53Z,2020-03-04T18:54:54Z,CLOSED,False,96,38,4,https://github.com/pmiettinen,Add JSON log iterator with functionality matching Framer class,3,[],https://github.com/swift-nav/libsbp/pull/776,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/776,Enabler for swift-nav/piksi_tools#1137,Enabler for swift-nav/piksi_tools#1137,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,776,2020-02-19T13:39:42Z,2020-03-04T18:54:53Z,2020-03-04T18:54:54Z,CLOSED,False,96,38,4,https://github.com/pmiettinen,Add JSON log iterator with functionality matching Framer class,3,[],https://github.com/swift-nav/libsbp/pull/776,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/776#issuecomment-588376322,Enabler for swift-nav/piksi_tools#1137,"Can you comment as to how this is different than the existing JsonLogIterator and the reasoning behind needing a new iterator rather than updating the existing JsonLogIterator?  I couldn't tell by inspecting the code.
I think we tried to make the existing iterator capable of handling all three types of json serialized SBP; but perhaps that was a bad idea.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,776,2020-02-19T13:39:42Z,2020-03-04T18:54:53Z,2020-03-04T18:54:54Z,CLOSED,False,96,38,4,https://github.com/pmiettinen,Add JSON log iterator with functionality matching Framer class,3,[],https://github.com/swift-nav/libsbp/pull/776,https://github.com/pmiettinen,3,https://github.com/swift-nav/libsbp/pull/776#issuecomment-588453456,Enabler for swift-nav/piksi_tools#1137,"@denniszollo the main problem is the yield inside of __next__. It leads to a ""we put an iterator into your iterator"" kind of deal. I think it's somewhat mentioned in the class documentation also, see ""Notes"" here https://github.com/swift-nav/libsbp/blob/master/python/sbp/client/loggers/json_logger.py#L128",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,776,2020-02-19T13:39:42Z,2020-03-04T18:54:53Z,2020-03-04T18:54:54Z,CLOSED,False,96,38,4,https://github.com/pmiettinen,Add JSON log iterator with functionality matching Framer class,3,[],https://github.com/swift-nav/libsbp/pull/776,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/776#issuecomment-589306866,Enabler for swift-nav/piksi_tools#1137,replace with #779 due to merge conflict,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,776,2020-02-19T13:39:42Z,2020-03-04T18:54:53Z,2020-03-04T18:54:54Z,CLOSED,False,96,38,4,https://github.com/pmiettinen,Add JSON log iterator with functionality matching Framer class,3,[],https://github.com/swift-nav/libsbp/pull/776,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/776#issuecomment-594750084,Enabler for swift-nav/piksi_tools#1137,closing since #779 was merged,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,777,2020-02-19T16:29:04Z,2020-02-20T20:22:55Z,2020-02-20T20:22:55Z,MERGED,True,45,1,2,https://github.com/reimerix,[SEN-138] Add message for accumulated wheeltick count,1,[],https://github.com/swift-nav/libsbp/pull/777,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/777,"I'm still trying to generate the bindings but here's my proposal for a wheel tick message. While trying to implement the message that we had agreed upon, I noticed it has a fatal flaw: we really need timestamps for the latest tick count for every single wheel, especially if we don't have many ticks per revolution.
There are still some reserved bits in the flags field which could be used to communicate additional information, but IMHO the producing side should handle a lot of what was in our initial proposal, e.g. it should provide the logic to reverse the counting direction if the direction signal changes polarity.","I'm still trying to generate the bindings but here's my proposal for a wheel tick message. While trying to implement the message that we had agreed upon, I noticed it has a fatal flaw: we really need timestamps for the latest tick count for every single wheel, especially if we don't have many ticks per revolution.
There are still some reserved bits in the flags field which could be used to communicate additional information, but IMHO the producing side should handle a lot of what was in our initial proposal, e.g. it should provide the logic to reverse the counting direction if the direction signal changes polarity.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,777,2020-02-19T16:29:04Z,2020-02-20T20:22:55Z,2020-02-20T20:22:55Z,MERGED,True,45,1,2,https://github.com/reimerix,[SEN-138] Add message for accumulated wheeltick count,1,[],https://github.com/swift-nav/libsbp/pull/777,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/777#issuecomment-588356066,"I'm still trying to generate the bindings but here's my proposal for a wheel tick message. While trying to implement the message that we had agreed upon, I noticed it has a fatal flaw: we really need timestamps for the latest tick count for every single wheel, especially if we don't have many ticks per revolution.
There are still some reserved bits in the flags field which could be used to communicate additional information, but IMHO the producing side should handle a lot of what was in our initial proposal, e.g. it should provide the logic to reverse the counting direction if the direction signal changes polarity.","If we want to go with this route, we could also consider adding a ENUM into the flags field into the existing MSG_ODOMETRY to indicate whether the units are accumulated distance or velocity (mm/s).  I was basically trying to map the typical auto ABS message directly into SBP.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,777,2020-02-19T16:29:04Z,2020-02-20T20:22:55Z,2020-02-20T20:22:55Z,MERGED,True,45,1,2,https://github.com/reimerix,[SEN-138] Add message for accumulated wheeltick count,1,[],https://github.com/swift-nav/libsbp/pull/777,https://github.com/GuillaumeDec,3,https://github.com/swift-nav/libsbp/pull/777#issuecomment-588488186,"I'm still trying to generate the bindings but here's my proposal for a wheel tick message. While trying to implement the message that we had agreed upon, I noticed it has a fatal flaw: we really need timestamps for the latest tick count for every single wheel, especially if we don't have many ticks per revolution.
There are still some reserved bits in the flags field which could be used to communicate additional information, but IMHO the producing side should handle a lot of what was in our initial proposal, e.g. it should provide the logic to reverse the counting direction if the direction signal changes polarity.","I'm still trying to generate the bindings but here's my proposal for a wheel tick message. While trying to implement the message that we had agreed upon, I noticed it has a fatal flaw: we really need timestamps for the latest tick count for every single wheel, especially if we don't have many ticks per revolution.
There are still some reserved bits in the flags field which could be used to communicate additional information, but IMHO the producing side should handle a lot of what was in our initial proposal, e.g. it should provide the logic to reverse the counting direction if the direction signal changes polarity.

I'm good with that. Any ""status"" (valid / invalid etc.) flag could be stuffed into the flags [2-7].",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,778,2020-02-19T22:40:26Z,2020-02-20T20:22:54Z,2020-02-24T18:13:10Z,MERGED,True,480,3,14,https://github.com/denniszollo,Dzollo/sen 138/wheel odometry,4,[],https://github.com/swift-nav/libsbp/pull/778,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/778,@GuillaumeDec mentioned @reimerix may have had trouble generating source; I took the liberty of generating the source from the spec.,@GuillaumeDec mentioned @reimerix may have had trouble generating source; I took the liberty of generating the source from the spec.,True,{'HOORAY': ['https://github.com/GuillaumeDec']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,779,2020-02-20T20:59:59Z,2020-02-24T18:32:43Z,2020-02-27T21:58:46Z,MERGED,True,96,38,4,https://github.com/denniszollo,Dzollo/expand sbp json payload,3,[],https://github.com/swift-nav/libsbp/pull/779,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/779,After merge conflicts I rebased this one.  My goal is to merge and cut a new SBP release today.,After merge conflicts I rebased this one.  My goal is to merge and cut a new SBP release today.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,779,2020-02-20T20:59:59Z,2020-02-24T18:32:43Z,2020-02-27T21:58:46Z,MERGED,True,96,38,4,https://github.com/denniszollo,Dzollo/expand sbp json payload,3,[],https://github.com/swift-nav/libsbp/pull/779,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/779#issuecomment-589540182,After merge conflicts I rebased this one.  My goal is to merge and cut a new SBP release today.,Unit test update was added to the original PR.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,779,2020-02-20T20:59:59Z,2020-02-24T18:32:43Z,2020-02-27T21:58:46Z,MERGED,True,96,38,4,https://github.com/denniszollo,Dzollo/expand sbp json payload,3,[],https://github.com/swift-nav/libsbp/pull/779,https://github.com/denniszollo,3,https://github.com/swift-nav/libsbp/pull/779#issuecomment-590449999,After merge conflicts I rebased this one.  My goal is to merge and cut a new SBP release today.,"Pulled in unit tests, thanks @pmiettinen.  Goal slipped one day but lets get an SBP release out.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,780,2020-02-24T21:11:09Z,2020-03-05T21:15:27Z,2020-03-05T21:15:29Z,MERGED,True,224,0,11,https://github.com/lkloh,Add library support to read and write SBP files,4,[],https://github.com/swift-nav/libsbp/pull/780,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/780,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,781,2020-02-24T23:21:08Z,2020-02-25T00:23:56Z,2020-09-23T23:13:01Z,MERGED,True,66,1079,7,https://github.com/denniszollo,V2.7.4 branch,3,[],https://github.com/swift-nav/libsbp/pull/781,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/781,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,782,2020-02-26T13:46:05Z,2020-03-13T07:56:04Z,2020-03-13T07:56:05Z,MERGED,True,67,5,1,https://github.com/pmiettinen,File playback driver,2,[],https://github.com/swift-nav/libsbp/pull/782,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/782,"Motivation
Dennis' comment here swift-nav/piksi_tools#1137 (review)
Related
swift-nav/piksi_tools#1138
In practice
Playing back from SBP JSON log:","Motivation
Dennis' comment here swift-nav/piksi_tools#1137 (review)
Related
swift-nav/piksi_tools#1138
In practice
Playing back from SBP JSON log:",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,782,2020-02-26T13:46:05Z,2020-03-13T07:56:04Z,2020-03-13T07:56:05Z,MERGED,True,67,5,1,https://github.com/pmiettinen,File playback driver,2,[],https://github.com/swift-nav/libsbp/pull/782,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/782#issuecomment-591433823,"Motivation
Dennis' comment here swift-nav/piksi_tools#1137 (review)
Related
swift-nav/piksi_tools#1138
In practice
Playing back from SBP JSON log:",Not production worthy yet but good for initial comments if it makes any sense.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,782,2020-02-26T13:46:05Z,2020-03-13T07:56:04Z,2020-03-13T07:56:05Z,MERGED,True,67,5,1,https://github.com/pmiettinen,File playback driver,2,[],https://github.com/swift-nav/libsbp/pull/782,https://github.com/pmiettinen,3,https://github.com/swift-nav/libsbp/pull/782#issuecomment-592360014,"Motivation
Dennis' comment here swift-nav/piksi_tools#1137 (review)
Related
swift-nav/piksi_tools#1138
In practice
Playing back from SBP JSON log:",At least the console/serial_link needs some rearranging to enable the different combinations of the options.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,782,2020-02-26T13:46:05Z,2020-03-13T07:56:04Z,2020-03-13T07:56:05Z,MERGED,True,67,5,1,https://github.com/pmiettinen,File playback driver,2,[],https://github.com/swift-nav/libsbp/pull/782,https://github.com/pmiettinen,4,https://github.com/swift-nav/libsbp/pull/782#issuecomment-592395260,"Motivation
Dennis' comment here swift-nav/piksi_tools#1137 (review)
Related
swift-nav/piksi_tools#1138
In practice
Playing back from SBP JSON log:","If the timestamp metadata is not present, maybe TOW could be utilized instead. Would need to account for rollovers though.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,782,2020-02-26T13:46:05Z,2020-03-13T07:56:04Z,2020-03-13T07:56:05Z,MERGED,True,67,5,1,https://github.com/pmiettinen,File playback driver,2,[],https://github.com/swift-nav/libsbp/pull/782,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/782#issuecomment-598589433,"Motivation
Dennis' comment here swift-nav/piksi_tools#1137 (review)
Related
swift-nav/piksi_tools#1138
In practice
Playing back from SBP JSON log:",@pmiettinen I believe we're fine to merge this,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,783,2020-03-05T22:20:51Z,2020-03-11T03:18:52Z,2020-03-11T03:18:53Z,MERGED,True,1,0,2,https://github.com/gsmcmullin,Add IMU type code for ST ASM330LLH [STEP-63],2,[],https://github.com/swift-nav/libsbp/pull/783,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/783,"Implemented for STEP in:

swift-nav/tc3p-meta-swift#47
swift-nav/tc3p-m3-loader#8","Implemented for STEP in:

swift-nav/tc3p-meta-swift#47
swift-nav/tc3p-m3-loader#8",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,783,2020-03-05T22:20:51Z,2020-03-11T03:18:52Z,2020-03-11T03:18:53Z,MERGED,True,1,0,2,https://github.com/gsmcmullin,Add IMU type code for ST ASM330LLH [STEP-63],2,[],https://github.com/swift-nav/libsbp/pull/783,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/783#issuecomment-596678499,"Implemented for STEP in:

swift-nav/tc3p-meta-swift#47
swift-nav/tc3p-m3-loader#8",looks like you will need to rebase and regenerate the pdf @gsmcmullin,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,784,2020-03-06T13:06:42Z,2020-03-11T06:53:52Z,2020-03-11T06:53:53Z,MERGED,True,95,50,15,https://github.com/pmiettinen,[INFRA-114] Nojit fixes and unit testing,10,[],https://github.com/swift-nav/libsbp/pull/784,https://github.com/pmiettinen,1,https://github.com/swift-nav/libsbp/pull/784,"Motivated by https://swift-nav.atlassian.net/browse/INFRA-114
numba and llvmlite versions are bumped because it was the easiest way to resolve errors when setupping py38 environment.","Motivated by https://swift-nav.atlassian.net/browse/INFRA-114
numba and llvmlite versions are bumped because it was the easiest way to resolve errors when setupping py38 environment.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,784,2020-03-06T13:06:42Z,2020-03-11T06:53:52Z,2020-03-11T06:53:53Z,MERGED,True,95,50,15,https://github.com/pmiettinen,[INFRA-114] Nojit fixes and unit testing,10,[],https://github.com/swift-nav/libsbp/pull/784,https://github.com/pmiettinen,2,https://github.com/swift-nav/libsbp/pull/784#issuecomment-596412760,"Motivated by https://swift-nav.atlassian.net/browse/INFRA-114
numba and llvmlite versions are bumped because it was the easiest way to resolve errors when setupping py38 environment.","nojit sanity checks register warnings (no error returned though):
py38-nojit run-test: commands[1] | /home/travis/build/swift-nav/libsbp/python/../test_data/sanity.sh /home/travis/build/swift-nav/libsbp/haskell
/home/travis/build/swift-nav/libsbp/python/sbp/table.py:93: RuntimeWarning: No message found for msg_type id 84 for msg <SBP (preamble=0x55, msg_type=0x54, sender=6397, length=85, payload=b'\xaf\x00\xb2\xb1\x1a\x00tcp_client0\x00address\x00None\x00\xad\r\nU\xaf\x00\xb2\xb1\x1a\x00tcp_client0\x00address\x00None\x00\xad\r\nU\xaf\x00\xb2\xb1K\x00tcp_clien', crc=0x3074)>.
  warnings.warn(warn, RuntimeWarning)
/home/travis/build/swift-nav/libsbp/python/sbp/table.py:93: RuntimeWarning: No message found for msg_type id 11348 for msg <SBP (preamble=0x55, msg_type=0x2C54, sender=16979, length=80, payload=b"",RTCMv3 OUT\x00'\x0cU\xaf\x00\xb2\xb1\x1a\x00tcp_client1\x00address\x00None\x00Q\xa4U\xaf\x00\xb2\xb1K\x00tcp_client1\x00mode\x00Disabled"", crc=0x6500)>.
  warnings.warn(warn, RuntimeWarning)
/home/travis/build/swift-nav/libsbp/python/sbp/table.py:93: RuntimeWarning: No message found for msg_type id 11348 for msg <SBP (preamble=0x55, msg_type=0x2C54, sender=16979, length=80, payload=b',RTCMv3 OUT\x00u\xd2U\xaf\x00\xb2\xb1\x18\x00udp_server0\x00port\x0055557\x00S\x0bU\xaf\x00\xb2\xb1K\x00udp_server0\x00mode\x00Disabled\x00e', crc=0x756E)>.
  warnings.warn(warn, RuntimeWarning)
/home/travis/build/swift-nav/libsbp/python/sbp/table.py:93: RuntimeWarning: No message found for msg_type id 11348 for msg <SBP (preamble=0x55, msg_type=0x2C54, sender=16979, length=80, payload=b',RTCMv3 OUT\x00\xe7\xe0U\xaf\x00\xb2\xb1\x18\x00udp_server1\x00port\x0055558\x00\x0e^U\xaf\x00\xb2\xb1K\x00udp_server1\x00mode\x00Disabled\x00e', crc=0x756E)>.
  warnings.warn(warn, RuntimeWarning)
/home/travis/build/swift-nav/libsbp/python/sbp/table.py:93: RuntimeWarning: No message found for msg_type id 11348 for msg <SBP (preamble=0x55, msg_type=0x2C54, sender=16979, length=80, payload=b',RTCMv3 OUT\x00\xb5>U\xaf\x00\xb2\xb1)\x00udp_client0\x00address\x00192.168.1.224:55557\x00\xc3;U\xaf\x00\xb2\xb1K\x00udp_client', crc=0x30)>.
  warnings.warn(warn, RuntimeWarning)
/home/travis/build/swift-nav/libsbp/python/sbp/table.py:93: RuntimeWarning: No message found for msg_type id 11348 for msg <SBP (preamble=0x55, msg_type=0x2C54, sender=16979, length=80, payload=b',RTCMv3 OUT\x00\xa8QU\xaf\x00\xb2\xb1\x16\x00udp_client1\x00address\x00\x00\x9d\xb1U\xaf\x00\xb2\xb1K\x00udp_client1\x00mode\x00Disabled\x00enu', crc=0x3A6D)>.
  warnings.warn(warn, RuntimeWarning)
/home/travis/build/swift-nav/libsbp/python/sbp/table.py:93: RuntimeWarning: No message found for msg_type id 11348 for msg <SBP (preamble=0x55, msg_type=0x2C54, sender=16979, length=80, payload=b',RTCMv3 OUT\x00\xfa\x8fU\xaf\x00\xb2\xb1^\x00uart0\x00baudrate\x00230400\x00enum:1200,2400,4800,9600,19200,38400,', crc=0x3735)>.
  warnings.warn(warn, RuntimeWarning)
/home/travis/build/swift-nav/libsbp/python/sbp/table.py:93: RuntimeWarning: No message found for msg_type id 24864 for msg <SBP (preamble=0x55, msg_type=0x6120, sender=30837, length=0, payload=b'', crc=0x0)>.
  warnings.warn(warn, RuntimeWarning)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,784,2020-03-06T13:06:42Z,2020-03-11T06:53:52Z,2020-03-11T06:53:53Z,MERGED,True,95,50,15,https://github.com/pmiettinen,[INFRA-114] Nojit fixes and unit testing,10,[],https://github.com/swift-nav/libsbp/pull/784,https://github.com/pmiettinen,3,https://github.com/swift-nav/libsbp/pull/784#issuecomment-596431947,"Motivated by https://swift-nav.atlassian.net/browse/INFRA-114
numba and llvmlite versions are bumped because it was the easiest way to resolve errors when setupping py38 environment.","Looks like some more garbage at the start of the short.sbp.
jit path discards the messages fully and doesn't show them at all in the log.
Comparison:
nojit
{""preamble"":85,""msg_type"":175,""sender"":45490,""length"":46,""payload"":""AHJ0Y21fb3V0AGFudF9kZXNjcmlwdG9yAEhYQ0dQUzUwMCAgICAgICBOT05FAA=="",""crc"":39656,""status"":0,""setting"":""rtcm_out\u0000ant_descriptor\u0000HXCGPS500       NONE\u0000""}
{""preamble"":85,""msg_type"":175,""sender"":45490,""length"":31,""payload"":""AHJ0Y21zYWJsZWQsUlRDTXYzIElOLE5NRUEgT1VULA=="",""crc"":59600,""status"":0,""setting"":""rtcmsabled,RTCMv3 IN,NMEA OUT,""}
{""preamble"":85,""msg_type"":84,""sender"":6397,""length"":85,""payload"":""rwCysRoAdGNwX2NsaWVudDAAYWRkcmVzcwBOb25lAK0NClWvALKxGgB0Y3BfY2xpZW50MABhZGRyZXNzAE5vbmUArQ0KVa8AsrFLAHRjcF9jbGllbg=="",""crc"":12404}
{""preamble"":85,""msg_type"":11348,""sender"":16979,""length"":80,""payload"":""LFJUQ012MyBPVVQAJwxVrwCysRoAdGNwX2NsaWVudDEAYWRkcmVzcwBOb25lAFGkVa8AsrFLAHRjcF9jbGllbnQxAG1vZGUARGlzYWJsZWQ="",""crc"":25856}
{""preamble"":85,""msg_type"":11348,""sender"":16979,""length"":80,""payload"":""LFJUQ012MyBPVVQAddJVrwCysRgAdWRwX3NlcnZlcjAAcG9ydAA1NTU1NwBTC1WvALKxSwB1ZHBfc2VydmVyMABtb2RlAERpc2FibGVkAGU="",""crc"":30062}
{""preamble"":85,""msg_type"":11348,""sender"":16979,""length"":80,""payload"":""LFJUQ012MyBPVVQA5+BVrwCysRgAdWRwX3NlcnZlcjEAcG9ydAA1NTU1OAAOXlWvALKxSwB1ZHBfc2VydmVyMQBtb2RlAERpc2FibGVkAGU="",""crc"":30062}
{""preamble"":85,""msg_type"":11348,""sender"":16979,""length"":80,""payload"":""LFJUQ012MyBPVVQAtT5VrwCysSkAdWRwX2NsaWVudDAAYWRkcmVzcwAxOTIuMTY4LjEuMjI0OjU1NTU3AMM7Va8AsrFLAHVkcF9jbGllbnQ="",""crc"":48}
{""preamble"":85,""msg_type"":11348,""sender"":16979,""length"":80,""payload"":""LFJUQ012MyBPVVQAqFFVrwCysRYAdWRwX2NsaWVudDEAYWRkcmVzcwAAnbFVrwCysUsAdWRwX2NsaWVudDEAbW9kZQBEaXNhYmxlZABlbnU="",""crc"":14957}
{""preamble"":85,""msg_type"":11348,""sender"":16979,""length"":80,""payload"":""LFJUQ012MyBPVVQA+o9VrwCysV4AdWFydDAAYmF1ZHJhdGUAMjMwNDAwAGVudW06MTIwMCwyNDAwLDQ4MDAsOTYwMCwxOTIwMCwzODQwMCw="",""crc"":14133}
{""preamble"":85,""msg_type"":175,""sender"":45490,""length"":94,""payload"":""AHVhcnQxAGJhdWRyYXRlADIzMDQwMABlbnVtOjEyMDAsMjQwMCw0ODAwLDk2MDAsMTkyMDAsMzg0MDAsNTc2MDAsMTE1MjAwLDIzMDQwMCw0NjA4MDAsOTIxNjAwAA=="",""crc"":19164,""status"":0,""setting"":""uart1\u0000baudrate\u0000230400\u0000enum:1200,2400,4800,9600,19200,38400,57600,115200,230400,460800,921600\u0000""}

jit
{""crc"":39656,""length"":46,""msg_type"":175,""payload"":""AHJ0Y21fb3V0AGFudF9kZXNjcmlwdG9yAEhYQ0dQUzUwMCAgICAgICBOT05FAA=="",""preamble"":85,""sender"":45490,""setting"":""rtcm_out\u0000ant_descriptor\u0000HXCGPS500       NONE\u0000"",""status"":0}
{""crc"":19164,""length"":94,""msg_type"":175,""payload"":""AHVhcnQxAGJhdWRyYXRlADIzMDQwMABlbnVtOjEyMDAsMjQwMCw0ODAwLDk2MDAsMTkyMDAsMzg0MDAsNTc2MDAsMTE1MjAwLDIzMDQwMCw0NjA4MDAsOTIxNjAwAA=="",""preamble"":85,""sender"":45490,""setting"":""uart1\u0000baudrate\u0000230400\u0000enum:1200,2400,4800,9600,19200,38400,57600,115200,230400,460800,921600\u0000"",""status"":0}

Suggest to make the nojit behavior similar to jit.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,784,2020-03-06T13:06:42Z,2020-03-11T06:53:52Z,2020-03-11T06:53:53Z,MERGED,True,95,50,15,https://github.com/pmiettinen,[INFRA-114] Nojit fixes and unit testing,10,[],https://github.com/swift-nav/libsbp/pull/784,https://github.com/pmiettinen,4,https://github.com/swift-nav/libsbp/pull/784#issuecomment-596434256,"Motivated by https://swift-nav.atlassian.net/browse/INFRA-114
numba and llvmlite versions are bumped because it was the easiest way to resolve errors when setupping py38 environment.",Actually the garbage message should probably do somekind of CRC failure.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,785,2020-03-10T16:53:20Z,2020-03-10T19:08:44Z,2020-03-10T19:08:45Z,MERGED,True,7,5,1,https://github.com/lkloh,Update haskell installation instructions,2,[],https://github.com/swift-nav/libsbp/pull/785,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/785,"The README for Haskell currently instructs users to install a very old version of SBP version that causes this bug. Installing a higher version fixes the bug.
Comments about other places in the codebase/confluence to update instructions are welcome.","The README for Haskell currently instructs users to install a very old version of SBP version that causes this bug. Installing a higher version fixes the bug.
Comments about other places in the codebase/confluence to update instructions are welcome.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,785,2020-03-10T16:53:20Z,2020-03-10T19:08:44Z,2020-03-10T19:08:45Z,MERGED,True,7,5,1,https://github.com/lkloh,Update haskell installation instructions,2,[],https://github.com/swift-nav/libsbp/pull/785,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/785#issuecomment-597199024,"The README for Haskell currently instructs users to install a very old version of SBP version that causes this bug. Installing a higher version fixes the bug.
Comments about other places in the codebase/confluence to update instructions are welcome.","You can choose the SBP version to install without having to change the LTS version:
$ stack install sbp-2.6.3

Just annoying to continuously update the README to indicate that. Can rev the LTS here, but note we've generally been pinned to LTS-10 everywhere, so like publishing against LTS-15 would potentially cause problems elsewhere.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,785,2020-03-10T16:53:20Z,2020-03-10T19:08:44Z,2020-03-10T19:08:45Z,MERGED,True,7,5,1,https://github.com/lkloh,Update haskell installation instructions,2,[],https://github.com/swift-nav/libsbp/pull/785,https://github.com/lkloh,3,https://github.com/swift-nav/libsbp/pull/785#issuecomment-597215164,"The README for Haskell currently instructs users to install a very old version of SBP version that causes this bug. Installing a higher version fixes the bug.
Comments about other places in the codebase/confluence to update instructions are welcome.","You can choose the SBP version to install without having to change the LTS version:
$ stack install sbp-2.6.3

Just annoying to continuously update the README to indicate that. Can rev the LTS here, but note we've generally been pinned to LTS-10 everywhere, so like publishing against LTS-15 would potentially cause problems elsewhere.

I updated the README to recommend installing the latest sbp version listed on the snapshots page, with an example on how to do so. Reverted LTS to LTS-10 recommendation.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,785,2020-03-10T16:53:20Z,2020-03-10T19:08:44Z,2020-03-10T19:08:45Z,MERGED,True,7,5,1,https://github.com/lkloh,Update haskell installation instructions,2,[],https://github.com/swift-nav/libsbp/pull/785,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/785#issuecomment-597224903,"The README for Haskell currently instructs users to install a very old version of SBP version that causes this bug. Installing a higher version fixes the bug.
Comments about other places in the codebase/confluence to update instructions are welcome.",üëç,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,786,2020-03-12T06:39:32Z,2020-03-12T22:06:41Z,2020-03-12T22:06:43Z,MERGED,True,9,6,2,https://github.com/silverjam,rust: expose crc errors [INFRA-125],2,[],https://github.com/swift-nav/libsbp/pull/786,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/786,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,787,2020-03-12T16:03:15Z,2020-03-12T17:23:17Z,2020-03-12T17:23:18Z,MERGED,True,2282,301,34,https://github.com/silverjam,libsbp release 2.7.6,8,[],https://github.com/swift-nav/libsbp/pull/787,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/787,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,788,2020-03-23T05:04:57Z,2020-03-23T19:06:41Z,2020-03-23T19:06:42Z,MERGED,True,47,4,3,https://github.com/silverjam,rust: nom parsing fix-up for eof error [INFRA-125],8,[],https://github.com/swift-nav/libsbp/pull/788,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/788,"Apparently nom has two cases were it can return ""not enough data"", there's an Incomplete return type and an EOF error.  I'm not sure in what cases it would return one vs the other, but the EOF error here would cause us the drop messages in the Rust version of sbp2json (which was surfaced while testing the Rust variant of json2sbp).
TODO:

 Add unit test","Apparently nom has two cases were it can return ""not enough data"", there's an Incomplete return type and an EOF error.  I'm not sure in what cases it would return one vs the other, but the EOF error here would cause us the drop messages in the Rust version of sbp2json (which was surfaced while testing the Rust variant of json2sbp).
TODO:

 Add unit test",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,788,2020-03-23T05:04:57Z,2020-03-23T19:06:41Z,2020-03-23T19:06:42Z,MERGED,True,47,4,3,https://github.com/silverjam,rust: nom parsing fix-up for eof error [INFRA-125],8,[],https://github.com/swift-nav/libsbp/pull/788,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/788#issuecomment-602697748,"Apparently nom has two cases were it can return ""not enough data"", there's an Incomplete return type and an EOF error.  I'm not sure in what cases it would return one vs the other, but the EOF error here would cause us the drop messages in the Rust version of sbp2json (which was surfaced while testing the Rust variant of json2sbp).
TODO:

 Add unit test","Good catch! Would we want to up the version number for this?

You mean make a new release? Yeah, I'll do that sometime this week.",True,{'THUMBS_UP': ['https://github.com/jbangelo']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,789,2020-03-24T18:59:33Z,2020-03-24T19:02:31Z,2020-03-24T19:04:24Z,MERGED,True,155,155,13,https://github.com/mfine,INFRA-137: wrap integer gets in parens,2,[],https://github.com/swift-nav/libsbp/pull/789,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/789,Wrap the getting of integer in parens (puts were already wrapped). The first (used) integer array showed up and had problems with precedence around getting the array of integers.,Wrap the getting of integer in parens (puts were already wrapped). The first (used) integer array showed up and had problems with precedence around getting the array of integers.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,789,2020-03-24T18:59:33Z,2020-03-24T19:02:31Z,2020-03-24T19:04:24Z,MERGED,True,155,155,13,https://github.com/mfine,INFRA-137: wrap integer gets in parens,2,[],https://github.com/swift-nav/libsbp/pull/789,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/789#issuecomment-603448896,Wrap the getting of integer in parens (puts were already wrapped). The first (used) integer array showed up and had problems with precedence around getting the array of integers.,ü§ò,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,790,2020-03-27T04:56:30Z,2020-04-01T04:29:32Z,2020-04-01T04:29:33Z,MERGED,True,5440,384,73,https://github.com/silverjam,"rust: implement sbp2json, json2sbp, json2json [INFRA-125]",48,[],https://github.com/swift-nav/libsbp/pull/790,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/790,"Formalize the Rust variant of the sbp2json, json2sbp, and json2json tools, once merged we'll be able to install these tools with cargo via cargo install --git https://github.com/swift-nav/libsbp.git --bins.


The tools are tested with various ""round trip"" tests that ensure that data converted into and out of the JSON representation of the tool is bit-for-bit identical.


Introduce a benchmark framework for the Haskell, Python and Rust versions of these tools using hyperfine.


Adds builds on Mac OS X and Windows so that we can provide more platform specific builds of the sbp2json, json2sbp, and json2json tools.


Behavior difference with Haskell: the float formatting of Haskell's sbp2json uses GHC's showFloat behavior for formatting float values, which is explained in Python sbp2json tool source -- the Python sbp2json tool matches this formatting exactly, the Rust tool does not.  The Rust tool attempts to provide some compatibility with a --float-compat switch but falls short of the Python variant.  This behavior difference does not impact actual float values stored in SBP binary (for example when converting Rust SBP JSON output back to SBP binary with json2sbp).


Behavior difference with Haskell: the sbp2json tool in Haskell would pass through ""messages"" that failed CRC validation.  It's unclear of this choice was intentional but it makes the Haskell tool not ""bit-for-bit"" compatible with the Rust tool if the data stream includes ""junk"".  The Rust tool will drop the invalid data.  The Haskell tool will pass through the junk data, but as a JSON blob with just common fields such as ""message type"", ""payload"" and ""crc""-- even if these fields represent junk data.","Formalize the Rust variant of the sbp2json, json2sbp, and json2json tools, once merged we'll be able to install these tools with cargo via cargo install --git https://github.com/swift-nav/libsbp.git --bins.


The tools are tested with various ""round trip"" tests that ensure that data converted into and out of the JSON representation of the tool is bit-for-bit identical.


Introduce a benchmark framework for the Haskell, Python and Rust versions of these tools using hyperfine.


Adds builds on Mac OS X and Windows so that we can provide more platform specific builds of the sbp2json, json2sbp, and json2json tools.


Behavior difference with Haskell: the float formatting of Haskell's sbp2json uses GHC's showFloat behavior for formatting float values, which is explained in Python sbp2json tool source -- the Python sbp2json tool matches this formatting exactly, the Rust tool does not.  The Rust tool attempts to provide some compatibility with a --float-compat switch but falls short of the Python variant.  This behavior difference does not impact actual float values stored in SBP binary (for example when converting Rust SBP JSON output back to SBP binary with json2sbp).


Behavior difference with Haskell: the sbp2json tool in Haskell would pass through ""messages"" that failed CRC validation.  It's unclear of this choice was intentional but it makes the Haskell tool not ""bit-for-bit"" compatible with the Rust tool if the data stream includes ""junk"".  The Rust tool will drop the invalid data.  The Haskell tool will pass through the junk data, but as a JSON blob with just common fields such as ""message type"", ""payload"" and ""crc""-- even if these fields represent junk data.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,791,2020-03-28T02:47:03Z,2020-03-28T03:40:26Z,2020-03-28T03:40:27Z,MERGED,True,6,6,1,https://github.com/silverjam,Fix JavaScript security warning,1,[],https://github.com/swift-nav/libsbp/pull/791,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/791,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,792,2020-04-10T17:25:40Z,2021-09-28T03:07:09Z,2021-09-28T03:07:09Z,CLOSED,False,2922,188,34,https://github.com/martin-swift,add tile set id and grid id to ssr atmo messages,15,[],https://github.com/swift-nav/libsbp/pull/792,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/792,"Will need these to support multiple tiles.
cc: @benjamin0","Will need these to support multiple tiles.
cc: @benjamin0",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,792,2020-04-10T17:25:40Z,2021-09-28T03:07:09Z,2021-09-28T03:07:09Z,CLOSED,False,2922,188,34,https://github.com/martin-swift,add tile set id and grid id to ssr atmo messages,15,[],https://github.com/swift-nav/libsbp/pull/792,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/792#issuecomment-612247885,"Will need these to support multiple tiles.
cc: @benjamin0","Should we look at aligning the grid definition to be closer to the final 3GPP message? (perhaps without the list option for the moment)
Specifically having a reference corner lat/lon, number of steps wide/high and the step distance in each dimension.
And ditch the RLE stuff with a bitmask.
Considering the hassle to change libsbp everywhere it's probably worth doing it at same time.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,792,2020-04-10T17:25:40Z,2021-09-28T03:07:09Z,2021-09-28T03:07:09Z,CLOSED,False,2922,188,34,https://github.com/martin-swift,add tile set id and grid id to ssr atmo messages,15,[],https://github.com/swift-nav/libsbp/pull/792,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/792#issuecomment-612248280,"Will need these to support multiple tiles.
cc: @benjamin0",Also we might need to rev the message IDs so that things don't crash when people try to run this on old logs...,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,792,2020-04-10T17:25:40Z,2021-09-28T03:07:09Z,2021-09-28T03:07:09Z,CLOSED,False,2922,188,34,https://github.com/martin-swift,add tile set id and grid id to ssr atmo messages,15,[],https://github.com/swift-nav/libsbp/pull/792,https://github.com/martin-swift,4,https://github.com/swift-nav/libsbp/pull/792#issuecomment-612257256,"Will need these to support multiple tiles.
cc: @benjamin0",for sure - this was just meant to get the ball rolling.  I didn't even generate the bindings yet.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,792,2020-04-10T17:25:40Z,2021-09-28T03:07:09Z,2021-09-28T03:07:09Z,CLOSED,False,2922,188,34,https://github.com/martin-swift,add tile set id and grid id to ssr atmo messages,15,[],https://github.com/swift-nav/libsbp/pull/792,https://github.com/martin-swift,5,https://github.com/swift-nav/libsbp/pull/792#issuecomment-612257411,"Will need these to support multiple tiles.
cc: @benjamin0","yes, 100% in favor of re-doing the grid def. message and the RLE stuff.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,792,2020-04-10T17:25:40Z,2021-09-28T03:07:09Z,2021-09-28T03:07:09Z,CLOSED,False,2922,188,34,https://github.com/martin-swift,add tile set id and grid id to ssr atmo messages,15,[],https://github.com/swift-nav/libsbp/pull/792,https://github.com/ljbade,6,https://github.com/swift-nav/libsbp/pull/792#issuecomment-626078494,"Will need these to support multiple tiles.
cc: @benjamin0",The change of the SBP SSR messages will be put on hold until we finish out the other internal components needed for multiple tiles. We will then have a better idea of exactly what changes we will need to make and can carefully roll it out. Otherwise we will end up with multiple iterations of these messages which is a lot of effort.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,794,2020-04-14T20:50:44Z,2020-04-15T15:06:46Z,2020-04-15T15:06:48Z,MERGED,True,17,16,3,https://github.com/martin-swift,Fix-up Python binding generation,1,[],https://github.com/swift-nav/libsbp/pull/794,https://github.com/martin-swift,1,https://github.com/swift-nav/libsbp/pull/794,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,795,2020-04-17T23:18:51Z,2020-04-18T00:02:24Z,2020-04-18T00:02:25Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Merge pull request #51 from swift-nav/lkloh_cmake,1,[],https://github.com/swift-nav/libsbp/pull/795,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/795,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2169/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2169/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,796,2020-04-17T23:57:33Z,2020-04-28T23:19:03Z,2020-04-28T23:19:04Z,MERGED,True,808,185,3,https://github.com/silverjam,npm audit fix [INFRA-184],3,[],https://github.com/swift-nav/libsbp/pull/796,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/796,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,797,2020-04-22T15:41:55Z,2020-04-22T20:43:05Z,2020-04-22T20:43:07Z,MERGED,True,988,1006,9,https://github.com/reimerix,[SEN-235] Fix IMURAW docstring,4,[],https://github.com/swift-nav/libsbp/pull/797,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/797,The doctsring for MSG_IMURAW was missing the time status enum in the two MSBs of the tow field. This PR adds them to the documentation.,The doctsring for MSG_IMURAW was missing the time status enum in the two MSBs of the tow field. This PR adds them to the documentation.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,797,2020-04-22T15:41:55Z,2020-04-22T20:43:05Z,2020-04-22T20:43:07Z,MERGED,True,988,1006,9,https://github.com/reimerix,[SEN-235] Fix IMURAW docstring,4,[],https://github.com/swift-nav/libsbp/pull/797,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/797#issuecomment-617880613,The doctsring for MSG_IMURAW was missing the time status enum in the two MSBs of the tow field. This PR adds them to the documentation.,cc @gsmcmullin,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,798,2020-05-02T02:48:56Z,2020-05-05T18:01:12Z,2020-05-05T18:01:14Z,MERGED,True,37,2,2,https://github.com/jbangelo,Improve how the rust parser handles errors,1,[],https://github.com/swift-nav/libsbp/pull/798,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/798,"This changes the Rust parser to advance its internal buffer by the number of processed bytes in the case of any error. Includes a new test of the CRC failure handling, making sure that we continue to parse subsequent messages after such an error.
This should fix issue #793.","This changes the Rust parser to advance its internal buffer by the number of processed bytes in the case of any error. Includes a new test of the CRC failure handling, making sure that we continue to parse subsequent messages after such an error.
This should fix issue #793.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,799,2020-05-05T13:44:00Z,2020-05-05T15:09:08Z,2020-05-05T15:09:12Z,CLOSED,False,1,0,1,https://github.com/richarddeurloo,Add a new SBP IMU type,1,[],https://github.com/swift-nav/libsbp/pull/799,https://github.com/richarddeurloo,1,https://github.com/swift-nav/libsbp/pull/799,This PR extends the list of supported IMU types in the SBP IMU_AUX message,This PR extends the list of supported IMU types in the SBP IMU_AUX message,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,800,2020-05-06T09:36:34Z,2020-05-06T12:13:44Z,2020-05-06T12:13:46Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Add FindSwiftlets.cmake (#53),1,[],https://github.com/swift-nav/libsbp/pull/800,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/800,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2383/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2383/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,801,2020-05-08T19:56:16Z,2020-09-11T19:26:22Z,2020-09-11T19:26:22Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - [POS-51] Update the FindStarling modules (#52),1,[],https://github.com/swift-nav/libsbp/pull/801,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/801,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2417/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2417/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,802,2020-05-08T23:47:18Z,2020-09-11T19:26:21Z,2020-09-11T19:26:21Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,"Auto submodule update: cmake - Revert ""Fix cross compiling system includes (#45)"" (#54)",1,[],https://github.com/swift-nav/libsbp/pull/802,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/802,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2428/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2428/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,803,2020-05-12T23:05:25Z,2020-05-13T16:41:00Z,2020-05-13T16:41:01Z,MERGED,True,243,244,28,https://github.com/silverjam,rust: derive clone,2,[],https://github.com/swift-nav/libsbp/pull/803,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/803,"So we can have a way to easily detach message objects from their source lifetimes, implement clone.
This enables us to implement something like:
https://gist.github.com/silverjam/43b543c58f37cb39575b01487f10779e","So we can have a way to easily detach message objects from their source lifetimes, implement clone.
This enables us to implement something like:
https://gist.github.com/silverjam/43b543c58f37cb39575b01487f10779e",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,803,2020-05-12T23:05:25Z,2020-05-13T16:41:00Z,2020-05-13T16:41:01Z,MERGED,True,243,244,28,https://github.com/silverjam,rust: derive clone,2,[],https://github.com/swift-nav/libsbp/pull/803,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/803#issuecomment-627696373,"So we can have a way to easily detach message objects from their source lifetimes, implement clone.
This enables us to implement something like:
https://gist.github.com/silverjam/43b543c58f37cb39575b01487f10779e","@jbangelo nothing jumps out at me, except maybe we should be Copy instead of Clone?  I picked .clone() since it's more explicit, and SBP structs can be 256 bytes (not sure what the threshold should be for picking copy over clone w.r.t. memory size).  In support of copy: SBP messages have a fixed maximum size, and we don't contain anything that's not copy-able.  Not in support of copy: structs can be large-ish.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,803,2020-05-12T23:05:25Z,2020-05-13T16:41:00Z,2020-05-13T16:41:01Z,MERGED,True,243,244,28,https://github.com/silverjam,rust: derive clone,2,[],https://github.com/swift-nav/libsbp/pull/803,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/803#issuecomment-628104398,"So we can have a way to easily detach message objects from their source lifetimes, implement clone.
This enables us to implement something like:
https://gist.github.com/silverjam/43b543c58f37cb39575b01487f10779e","@silverjam I think the log message contains a string (others might as well), which would prevent deriving Copy for it. I think only deriving Clone is probably good enough. Given the variable size of the messages I don't think it's in the spirit of the Copy trait too potentially be copying 255 bytes.",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/IsakTjernberg,1,https://github.com/swift-nav/libsbp/pull/804,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629429166,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,Why is this needed?  Can we add more description to the PR?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/IsakTjernberg,3,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629430019,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,@silverjam I updated the description with some more details.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629431923,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,"@IsakTjernberg @jbangelo Could we expose this state in the iterator instead?  E.g. store the last exception that occurs, or record a flag and expose a new interface for that?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/IsakTjernberg,5,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629439116,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,"@silverjam well, wouldn't that complicate things unnecessarily? The sendMessage() method is already public.
How would someone with a SBPHandler while looping over the iterator check for that exception/flag?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/jbangelo,6,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629440936,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,Can Java Iterable objects not throw exceptions from their getNext() implementations?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/silverjam,7,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629442011,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,"@IsakTjernberg  I‚Äôm thinking we should maintain the existing abstractions if possible, how does making this public fix the problem?  Don‚Äôt you need to create your own reader / iterator logic in order to detect the error?
I was thinking SBPHandler would just gain a lastException() method that would return null or the last exception so you could detect why the iterator broke.
Or, we could create a variant of SBPHandler that doesn‚Äôt swallow the error.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/IsakTjernberg,8,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629451421,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,"@silverjam Ok, fair point. Does the iterator() in SBPHandler ever break though? What happens in ReceiveThread in SBPHandler if source throws a NoSuchElementException? Does the thread just end and then the SBPQueueIterator will be waiting forever for a new item to be put in its BlockingQueue?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/silverjam,9,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629464601,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,"@IsakTjernberg SBPIterable.hasNext should return false in that case and terminate the iterator, I believe?  The pattern we have in Python is for the iterator to record it's exception, then the termination of the threaded stuff propagates the exception when the iterator stops (so SBPQueueIterator.hasNext would need to look for an exception recorded by the source in ReceiveThread and propagate/throw it.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/silverjam,10,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629465579,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,"For reference, were the threaded iterator records the IO exception:

https://github.com/swift-nav/libsbp/blob/master/python/sbp/client/handler.py#L69

And the ""propagation"":

https://github.com/swift-nav/libsbp/blob/master/python/sbp/client/handler.py#L332",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/silverjam,11,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629466971,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,"In other words, we had this exact problem with the original design of the Python sbp client library (with it swallowing exceptions, so you couldn't detect connection drops)-- and it looks like the Java sbp client library mirrors Python in terms of trying to put the blocking receive logic on a thread, so it's not surprising that it has the same issue.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/IsakTjernberg,12,https://github.com/swift-nav/libsbp/pull/804#issuecomment-629470289,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,"@silverjam Ok, thanks! I'll try to replicate it similarly in the Java parts.",True,{'HOORAY': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,804,2020-05-15T19:00:18Z,2020-05-18T19:08:39Z,2020-05-18T19:08:40Z,MERGED,True,33,4,2,https://github.com/IsakTjernberg,Public receive method in SBPFramer Java class,4,[],https://github.com/swift-nav/libsbp/pull/804,https://github.com/IsakTjernberg,13,https://github.com/swift-nav/libsbp/pull/804#issuecomment-630034215,Need this method as public to be able to see if the connection is broken or not. Access outside package was only available through an iterator in SBPHandler which swallows the exception.,"@silverjam The new commit stops the iterator from forever waiting for new messages, but unfortunately does not expose the underlying exception. In SBPHandler the source is abstracted as a Iterable<SBPMessage>, whose iterator can only throw NoSuchElementException. So it is difficult to get the exception back up the chain without changing the type of source, which I did not want to do.
I'm happy to keep discussing if you see a better way.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,805,2020-05-19T02:03:38Z,2020-05-22T00:26:58Z,2020-05-22T00:26:59Z,MERGED,True,379,123,46,https://github.com/silverjam,Handle invalid UTF-8 sequences [INFRA-196],14,[],https://github.com/swift-nav/libsbp/pull/805,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/805,"Any SBP message with a string member can contain data that is not a valid UTF-8 sequence, since we're using Rust's String type which requires valid UTF-8 we need to do a lossy conversion in the presence of invalid UTF-8 data.
High level changes:


Use SbpString (which wraps Vec<u8>) to store SBP string data instead of String directly and convert to String or Vec<u8> as needed


Use String::from_utf8_lossyto deal with invalid UTF-8 sequences when converting-- this is identical to Haskell's behavior when converting to a JSON string


Call lock() on stdin/stdout objects upfront so we don't have to do it within each read/write call (which happens implicitly in the stdlib)-- this bumps up performance on some benchmarks by 20-30%.


Add pub(crate) to functions that probably don‚Äôt need to be part of our public API



Details: since we were previously using String to store strings from SBP messages there's a mismatch between what SBP strings allow and what String in Rust allows.  In Rust you either panic or do a lossy conversion for invalid UTF-8 data *, so when we avoid the panic using from_ut8_lossy we get a String that's 2 bytes too large (the one invalid byte gets converted to 3 bytes to encode the Unicode ""unknown"" character).
This causes us to size the SBP message incorrectly, because the size of the String member object doesn't match what was in the SBP message, so our sbp_size() method reports the wrong value, which obviously messes up the encoding of the message.
This is an example message from bug that causes an issue (this is index 8 of a sbp settings ""read by index"" response):
‚ùØ cat invalid_utf8.bin | od -tx1
0000000 55 a7 00 00 10 48 08 00 73 6f 6c 75 74 69 6f 6e
0000020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
0000100 00 00 00 00 00 00 00 00 00 00 00 00 00 b6 e8 ab
0000120

This is obviously a garbage message, and it's not clear why the device would be generating this... but the last byte before the crc \xb6 is invalid because it starts with 10xx xxxx and there's no preceding 110 x xxxx pattern to indicate that it's part of a multi-byte UTF-8 sequence.  So, again this gets replaced with the Unicode unknown character.
To fix this we need to not use String, but (as implemented here) a wrapper type around Vec<u8> which converts to String or Vec<u8> when needed.

*: We can force Rust to store a &[u8] as UTF-8 without validating it with the unsafe method String::from_utf8_unchecked but this panics when you attempt to access the last byte of the buffer from a message like the one above.","Any SBP message with a string member can contain data that is not a valid UTF-8 sequence, since we're using Rust's String type which requires valid UTF-8 we need to do a lossy conversion in the presence of invalid UTF-8 data.
High level changes:


Use SbpString (which wraps Vec<u8>) to store SBP string data instead of String directly and convert to String or Vec<u8> as needed


Use String::from_utf8_lossyto deal with invalid UTF-8 sequences when converting-- this is identical to Haskell's behavior when converting to a JSON string


Call lock() on stdin/stdout objects upfront so we don't have to do it within each read/write call (which happens implicitly in the stdlib)-- this bumps up performance on some benchmarks by 20-30%.


Add pub(crate) to functions that probably don‚Äôt need to be part of our public API



Details: since we were previously using String to store strings from SBP messages there's a mismatch between what SBP strings allow and what String in Rust allows.  In Rust you either panic or do a lossy conversion for invalid UTF-8 data *, so when we avoid the panic using from_ut8_lossy we get a String that's 2 bytes too large (the one invalid byte gets converted to 3 bytes to encode the Unicode ""unknown"" character).
This causes us to size the SBP message incorrectly, because the size of the String member object doesn't match what was in the SBP message, so our sbp_size() method reports the wrong value, which obviously messes up the encoding of the message.
This is an example message from bug that causes an issue (this is index 8 of a sbp settings ""read by index"" response):
‚ùØ cat invalid_utf8.bin | od -tx1
0000000 55 a7 00 00 10 48 08 00 73 6f 6c 75 74 69 6f 6e
0000020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
0000100 00 00 00 00 00 00 00 00 00 00 00 00 00 b6 e8 ab
0000120

This is obviously a garbage message, and it's not clear why the device would be generating this... but the last byte before the crc \xb6 is invalid because it starts with 10xx xxxx and there's no preceding 110 x xxxx pattern to indicate that it's part of a multi-byte UTF-8 sequence.  So, again this gets replaced with the Unicode unknown character.
To fix this we need to not use String, but (as implemented here) a wrapper type around Vec<u8> which converts to String or Vec<u8> when needed.

*: We can force Rust to store a &[u8] as UTF-8 without validating it with the unsafe method String::from_utf8_unchecked but this panics when you attempt to access the last byte of the buffer from a message like the one above.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,805,2020-05-19T02:03:38Z,2020-05-22T00:26:58Z,2020-05-22T00:26:59Z,MERGED,True,379,123,46,https://github.com/silverjam,Handle invalid UTF-8 sequences [INFRA-196],14,[],https://github.com/swift-nav/libsbp/pull/805,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/805#issuecomment-631146225,"Any SBP message with a string member can contain data that is not a valid UTF-8 sequence, since we're using Rust's String type which requires valid UTF-8 we need to do a lossy conversion in the presence of invalid UTF-8 data.
High level changes:


Use SbpString (which wraps Vec<u8>) to store SBP string data instead of String directly and convert to String or Vec<u8> as needed


Use String::from_utf8_lossyto deal with invalid UTF-8 sequences when converting-- this is identical to Haskell's behavior when converting to a JSON string


Call lock() on stdin/stdout objects upfront so we don't have to do it within each read/write call (which happens implicitly in the stdlib)-- this bumps up performance on some benchmarks by 20-30%.


Add pub(crate) to functions that probably don‚Äôt need to be part of our public API



Details: since we were previously using String to store strings from SBP messages there's a mismatch between what SBP strings allow and what String in Rust allows.  In Rust you either panic or do a lossy conversion for invalid UTF-8 data *, so when we avoid the panic using from_ut8_lossy we get a String that's 2 bytes too large (the one invalid byte gets converted to 3 bytes to encode the Unicode ""unknown"" character).
This causes us to size the SBP message incorrectly, because the size of the String member object doesn't match what was in the SBP message, so our sbp_size() method reports the wrong value, which obviously messes up the encoding of the message.
This is an example message from bug that causes an issue (this is index 8 of a sbp settings ""read by index"" response):
‚ùØ cat invalid_utf8.bin | od -tx1
0000000 55 a7 00 00 10 48 08 00 73 6f 6c 75 74 69 6f 6e
0000020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
0000100 00 00 00 00 00 00 00 00 00 00 00 00 00 b6 e8 ab
0000120

This is obviously a garbage message, and it's not clear why the device would be generating this... but the last byte before the crc \xb6 is invalid because it starts with 10xx xxxx and there's no preceding 110 x xxxx pattern to indicate that it's part of a multi-byte UTF-8 sequence.  So, again this gets replaced with the Unicode unknown character.
To fix this we need to not use String, but (as implemented here) a wrapper type around Vec<u8> which converts to String or Vec<u8> when needed.

*: We can force Rust to store a &[u8] as UTF-8 without validating it with the unsafe method String::from_utf8_unchecked but this panics when you attempt to access the last byte of the buffer from a message like the one above.","By the way, do we know why we're getting non-UTF-8 strings? I know that SBP doesn't technically specify the string encoding, but I thought the Piksi basically sends ASCII and thought UTF-8 was a strict superset of ASCII.

It's a weird situation, and it actually points to a larger issue.  Since we're using String to store strings from SBP messages there's a mismatch between what SBP strings allow and what String in Rust allows.  In Rust you either panic or do a lossy conversion for invalid UTF-8 data *, so when we avoid the panic using from_ut8_lossy we get a String that's 2 bytes too large (the one invalid byte gets converted to 3 bytes to encode the Unicode ""unknown"" character).
This causes us to size the SBP message incorrectly, because the size of the String member object doesn't match what was in the SBP message, so our sbp_size() method reports the wrong value, which obviously messes up the encoding of the message.
This is an example message from bug that causes an issue (this is index 8 of a sbp settings ""read by index"" response):
‚ùØ cat invalid_utf8.bin | od -tx1                                                                       (libsbp)
0000000 55 a7 00 00 10 48 08 00 73 6f 6c 75 74 69 6f 6e
0000020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
0000100 00 00 00 00 00 00 00 00 00 00 00 00 00 b6 e8 ab
0000120

This is obviously a garbage message, and I'm not sure why the device would be generating this... but the last byte before the crc \xb6 is invalid because it starts with 10xx xxxx and there's no preceding 110 x xxxx pattern to indicate that it's part of a multi-byte sequence.  So, again this gets replaced with the Unicode unknown character.
To fix this we need to not use String, but (as I've implemented here) a wrapper type around Vec<u8> which converts to String or Vec<u8> when needed.

*: We can force Rust to store a &[u8] as UTF-8 without validating it with the unsafe method String::from_utf8_unchecked but this panics when you attempt to access the last byte of the buffer from a message like the one above.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,805,2020-05-19T02:03:38Z,2020-05-22T00:26:58Z,2020-05-22T00:26:59Z,MERGED,True,379,123,46,https://github.com/silverjam,Handle invalid UTF-8 sequences [INFRA-196],14,[],https://github.com/swift-nav/libsbp/pull/805,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/805#issuecomment-632369129,"Any SBP message with a string member can contain data that is not a valid UTF-8 sequence, since we're using Rust's String type which requires valid UTF-8 we need to do a lossy conversion in the presence of invalid UTF-8 data.
High level changes:


Use SbpString (which wraps Vec<u8>) to store SBP string data instead of String directly and convert to String or Vec<u8> as needed


Use String::from_utf8_lossyto deal with invalid UTF-8 sequences when converting-- this is identical to Haskell's behavior when converting to a JSON string


Call lock() on stdin/stdout objects upfront so we don't have to do it within each read/write call (which happens implicitly in the stdlib)-- this bumps up performance on some benchmarks by 20-30%.


Add pub(crate) to functions that probably don‚Äôt need to be part of our public API



Details: since we were previously using String to store strings from SBP messages there's a mismatch between what SBP strings allow and what String in Rust allows.  In Rust you either panic or do a lossy conversion for invalid UTF-8 data *, so when we avoid the panic using from_ut8_lossy we get a String that's 2 bytes too large (the one invalid byte gets converted to 3 bytes to encode the Unicode ""unknown"" character).
This causes us to size the SBP message incorrectly, because the size of the String member object doesn't match what was in the SBP message, so our sbp_size() method reports the wrong value, which obviously messes up the encoding of the message.
This is an example message from bug that causes an issue (this is index 8 of a sbp settings ""read by index"" response):
‚ùØ cat invalid_utf8.bin | od -tx1
0000000 55 a7 00 00 10 48 08 00 73 6f 6c 75 74 69 6f 6e
0000020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
0000100 00 00 00 00 00 00 00 00 00 00 00 00 00 b6 e8 ab
0000120

This is obviously a garbage message, and it's not clear why the device would be generating this... but the last byte before the crc \xb6 is invalid because it starts with 10xx xxxx and there's no preceding 110 x xxxx pattern to indicate that it's part of a multi-byte UTF-8 sequence.  So, again this gets replaced with the Unicode unknown character.
To fix this we need to not use String, but (as implemented here) a wrapper type around Vec<u8> which converts to String or Vec<u8> when needed.

*: We can force Rust to store a &[u8] as UTF-8 without validating it with the unsafe method String::from_utf8_unchecked but this panics when you attempt to access the last byte of the buffer from a message like the one above.","I'm still curious why we would ever be generating a string with \x86 at the end, but that's not really critical for merging this PR.
On a side note, should we update the SBP spec to note that strings might not be strictly UTF-8?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,805,2020-05-19T02:03:38Z,2020-05-22T00:26:58Z,2020-05-22T00:26:59Z,MERGED,True,379,123,46,https://github.com/silverjam,Handle invalid UTF-8 sequences [INFRA-196],14,[],https://github.com/swift-nav/libsbp/pull/805,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/805#issuecomment-632371912,"Any SBP message with a string member can contain data that is not a valid UTF-8 sequence, since we're using Rust's String type which requires valid UTF-8 we need to do a lossy conversion in the presence of invalid UTF-8 data.
High level changes:


Use SbpString (which wraps Vec<u8>) to store SBP string data instead of String directly and convert to String or Vec<u8> as needed


Use String::from_utf8_lossyto deal with invalid UTF-8 sequences when converting-- this is identical to Haskell's behavior when converting to a JSON string


Call lock() on stdin/stdout objects upfront so we don't have to do it within each read/write call (which happens implicitly in the stdlib)-- this bumps up performance on some benchmarks by 20-30%.


Add pub(crate) to functions that probably don‚Äôt need to be part of our public API



Details: since we were previously using String to store strings from SBP messages there's a mismatch between what SBP strings allow and what String in Rust allows.  In Rust you either panic or do a lossy conversion for invalid UTF-8 data *, so when we avoid the panic using from_ut8_lossy we get a String that's 2 bytes too large (the one invalid byte gets converted to 3 bytes to encode the Unicode ""unknown"" character).
This causes us to size the SBP message incorrectly, because the size of the String member object doesn't match what was in the SBP message, so our sbp_size() method reports the wrong value, which obviously messes up the encoding of the message.
This is an example message from bug that causes an issue (this is index 8 of a sbp settings ""read by index"" response):
‚ùØ cat invalid_utf8.bin | od -tx1
0000000 55 a7 00 00 10 48 08 00 73 6f 6c 75 74 69 6f 6e
0000020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
0000100 00 00 00 00 00 00 00 00 00 00 00 00 00 b6 e8 ab
0000120

This is obviously a garbage message, and it's not clear why the device would be generating this... but the last byte before the crc \xb6 is invalid because it starts with 10xx xxxx and there's no preceding 110 x xxxx pattern to indicate that it's part of a multi-byte UTF-8 sequence.  So, again this gets replaced with the Unicode unknown character.
To fix this we need to not use String, but (as implemented here) a wrapper type around Vec<u8> which converts to String or Vec<u8> when needed.

*: We can force Rust to store a &[u8] as UTF-8 without validating it with the unsafe method String::from_utf8_unchecked but this panics when you attempt to access the last byte of the buffer from a message like the one above.","On a side note, should we update the SBP spec to note that strings might not be strictly UTF-8?

I think this would be prudent, but I think it only happens when there's a bug and the device spits out some uninitialized memory, but since we don't have any mechanism to prevent invalid UTF-8 from being emitted it's possible for it to happen.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,806,2020-05-21T08:27:15Z,2020-05-21T10:32:46Z,2020-05-21T10:32:47Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Merge pull request #57 from swift-nav/joint-work/valgrind-integration,1,[],https://github.com/swift-nav/libsbp/pull/806,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/806,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2532/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2532/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,807,2020-05-21T21:02:01Z,2020-05-27T21:12:56Z,2020-05-27T21:12:57Z,MERGED,True,7,3,2,https://github.com/gsmcmullin,Support building with ARMCC,2,[],https://github.com/swift-nav/libsbp/pull/807,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/807,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,807,2020-05-21T21:02:01Z,2020-05-27T21:12:56Z,2020-05-27T21:12:57Z,MERGED,True,7,3,2,https://github.com/gsmcmullin,Support building with ARMCC,2,[],https://github.com/swift-nav/libsbp/pull/807,https://github.com/gsmcmullin,2,https://github.com/swift-nav/libsbp/pull/807#issuecomment-633318885,,Depends on merging swift-nav/cmake#58 and updating cmake submodule pointer.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,808,2020-05-22T16:14:03Z,2020-05-29T07:42:27Z,2020-05-29T07:42:28Z,MERGED,True,835,204,18,https://github.com/reimerix,[SEN-311] Add INS update status message,6,[],https://github.com/swift-nav/libsbp/pull/808,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/808,"This PR adds a new message (MSG_INS_UPDATES, ID 0xFF06) which contains information about the number of attempted and executed measurement updates since the epoch before.","This PR adds a new message (MSG_INS_UPDATES, ID 0xFF06) which contains information about the number of attempted and executed measurement updates since the epoch before.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,809,2020-05-22T19:54:14Z,2020-05-22T22:09:32Z,2020-05-22T22:09:33Z,MERGED,True,734,469,29,https://github.com/silverjam,Explicitly flush stdout [INFRA-196],3,[],https://github.com/swift-nav/libsbp/pull/809,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/809,"The change in stdout handling introduced a bug, we need to manually flush stdout now.","The change in stdout handling introduced a bug, we need to manually flush stdout now.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,810,2020-05-26T04:55:15Z,2020-09-11T19:26:20Z,2020-09-11T19:26:20Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Merge pull request #58 from swift-nav/gareth/coverage_allow_c,1,[],https://github.com/swift-nav/libsbp/pull/810,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/810,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2558/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2558/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,811,2020-05-27T06:10:47Z,2020-06-02T05:24:15Z,2020-06-02T05:24:25Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - ESD-1836: added additional massif options (#59),1,[],https://github.com/swift-nav/libsbp/pull/811,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/811,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2563/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2563/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,812,2020-06-01T17:55:26Z,2020-06-03T18:59:57Z,2020-06-03T18:59:58Z,MERGED,True,423,156,4,https://github.com/silverjam,"README typos, pin deps for sbp2json in Cargo.lock",2,[],https://github.com/swift-nav/libsbp/pull/812,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/812,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,813,2020-06-08T19:52:40Z,2020-06-08T20:53:53Z,2020-06-08T20:53:55Z,MERGED,True,20,7,1,https://github.com/denniszollo,Dzollo/python sender id whitelist,4,[],https://github.com/swift-nav/libsbp/pull/813,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/813,required for swift-nav/piksi_tools#1162,required for swift-nav/piksi_tools#1162,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,814,2020-06-12T06:02:37Z,2020-08-06T09:20:40Z,2020-08-06T09:20:41Z,MERGED,True,17,9,1,https://github.com/ljbade,[SSR-95] Clarify the ephemeris IOD definitions,1,[],https://github.com/swift-nav/libsbp/pull/814,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/814,Updating the descriptions to match what we actually have been sending to avoid confusion.,Updating the descriptions to match what we actually have been sending to avoid confusion.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,815,2020-06-30T02:00:50Z,2021-09-28T03:07:09Z,2021-09-28T03:07:09Z,CLOSED,False,61,25,1,https://github.com/pgrgich,Update BDS eph to include AODE/AODC parameters.,1,['draft'],https://github.com/swift-nav/libsbp/pull/815,https://github.com/pgrgich,1,https://github.com/swift-nav/libsbp/pull/815,One part of a change that will involve adding a new SBP message for BDS ephs. The problem is that the current one round trips by storing the AODE/AODC in the IODE/IODC parameters. This is confusing and we also want to use the IODE/IODC as a unique key (in a later PR).,One part of a change that will involve adding a new SBP message for BDS ephs. The problem is that the current one round trips by storing the AODE/AODC in the IODE/IODC parameters. This is confusing and we also want to use the IODE/IODC as a unique key (in a later PR).,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,815,2020-06-30T02:00:50Z,2021-09-28T03:07:09Z,2021-09-28T03:07:09Z,CLOSED,False,61,25,1,https://github.com/pgrgich,Update BDS eph to include AODE/AODC parameters.,1,['draft'],https://github.com/swift-nav/libsbp/pull/815,https://github.com/pgrgich,2,https://github.com/swift-nav/libsbp/pull/815#issuecomment-652045789,One part of a change that will involve adding a new SBP message for BDS ephs. The problem is that the current one round trips by storing the AODE/AODC in the IODE/IODC parameters. This is confusing and we also want to use the IODE/IODC as a unique key (in a later PR).,"Since this PR changes rtcm_msg_eph, we'll have to pass that on to msg_ephemeris_bds_t and because that's in msg_ephemeris_t, ephemeris_t will also need to change. We'll also need to ensure that SIP is aligned (https://github.com/swift-nav/sip/blob/master/proto/sip.proto#L230-L278 and https://github.com/swift-nav/sip/blob/master/src/rtcm_decoder.cc#L485, at least).  https://github.com/swift-nav/libsbp/blob/master/HOWTO.md should be adhered to and the PR posted on the libsbp channel.
As a result of all these complications, I think I'll put it on the backburner for now.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,816,2020-07-09T13:05:08Z,2020-09-11T19:26:18Z,2020-09-11T19:26:18Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - nanopb (#63),1,[],https://github.com/swift-nav/libsbp/pull/816,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/816,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2801/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2801/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,817,2020-07-13T00:19:02Z,2020-07-13T01:04:44Z,2020-07-13T01:04:46Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Standardize system include targets (#62),1,[],https://github.com/swift-nav/libsbp/pull/817,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/817,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2837/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2837/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,818,2020-07-13T00:19:55Z,2020-07-13T04:32:56Z,2020-07-13T04:34:46Z,MERGED,True,1,3,1,https://github.com/silverjam,python: remove accidental numpy import [INFRA-243],1,[],https://github.com/swift-nav/libsbp/pull/818,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/818,"numpy is supposed to be an optional dependency, remove the import and use a bytearray object instead of a numpy array","numpy is supposed to be an optional dependency, remove the import and use a bytearray object instead of a numpy array",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,818,2020-07-13T00:19:55Z,2020-07-13T04:32:56Z,2020-07-13T04:34:46Z,MERGED,True,1,3,1,https://github.com/silverjam,python: remove accidental numpy import [INFRA-243],1,[],https://github.com/swift-nav/libsbp/pull/818,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/818#issuecomment-657352501,"numpy is supposed to be an optional dependency, remove the import and use a bytearray object instead of a numpy array","fyi @denniszollo -- I think this was a bug I wrote... noticed this in an environment where I hadn't installed numpy yet, anywhere that imports numpy needs to do it conditionally so that it can remain an optional dependency, for environments where numpy isn't readily available (like arm)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,819,2020-07-14T01:13:24Z,2020-07-14T01:45:09Z,2020-07-14T01:45:10Z,MERGED,True,1,1,1,https://github.com/RReichert,bump cmake to master,1,[],https://github.com/swift-nav/libsbp/pull/819,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/819,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,820,2020-07-14T21:49:25Z,2020-07-23T20:20:33Z,2020-07-23T20:20:34Z,MERGED,True,1,1,1,https://github.com/GuillaumeDec,Update README.md,1,[],https://github.com/swift-nav/libsbp/pull/820,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/820,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,821,2020-07-15T19:27:17Z,2020-07-27T18:15:00Z,2020-07-27T18:15:01Z,MERGED,True,6,3,2,https://github.com/denniszollo,Dzollo/pyserial timeout remove,2,[],https://github.com/swift-nav/libsbp/pull/821,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/821,"This change is to address bug report below:
The recent console does not receive Piksi data if I power down Piksi for a some time.
Windows PC
Piksi over serial port

Procedure:
Start Piksi
connect console
power off Piksi
wait a minute
power up Piksi -> there will be no any data on console

After painful investigation, the bug was traced down to this change in the framer behavior when encountering a zero length byte array from the driver and on Windows only.  2d2d1f4#diff-f7e7ceb9c48458bb44be66283049a27bL106
Basically, since there was a 1 second timeout on the pyserial driver if it didn't get data in one second it could cause the framer to start iterating nothing to the handler which caused the handler to yield none.
As a side note, I sort of think we might need to throw an exception here: https://github.com/swift-nav/libsbp/blob/master/python/sbp/client/handler.py#L72 , so that at least the handler communicates that it is no longer iterating correctly.  But I'm not sure what to do there so I left as is.","This change is to address bug report below:
The recent console does not receive Piksi data if I power down Piksi for a some time.
Windows PC
Piksi over serial port

Procedure:
Start Piksi
connect console
power off Piksi
wait a minute
power up Piksi -> there will be no any data on console

After painful investigation, the bug was traced down to this change in the framer behavior when encountering a zero length byte array from the driver and on Windows only.  2d2d1f4#diff-f7e7ceb9c48458bb44be66283049a27bL106
Basically, since there was a 1 second timeout on the pyserial driver if it didn't get data in one second it could cause the framer to start iterating nothing to the handler which caused the handler to yield none.
As a side note, I sort of think we might need to throw an exception here: https://github.com/swift-nav/libsbp/blob/master/python/sbp/client/handler.py#L72 , so that at least the handler communicates that it is no longer iterating correctly.  But I'm not sure what to do there so I left as is.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,821,2020-07-15T19:27:17Z,2020-07-27T18:15:00Z,2020-07-27T18:15:01Z,MERGED,True,6,3,2,https://github.com/denniszollo,Dzollo/pyserial timeout remove,2,[],https://github.com/swift-nav/libsbp/pull/821,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/821#issuecomment-663212087,"This change is to address bug report below:
The recent console does not receive Piksi data if I power down Piksi for a some time.
Windows PC
Piksi over serial port

Procedure:
Start Piksi
connect console
power off Piksi
wait a minute
power up Piksi -> there will be no any data on console

After painful investigation, the bug was traced down to this change in the framer behavior when encountering a zero length byte array from the driver and on Windows only.  2d2d1f4#diff-f7e7ceb9c48458bb44be66283049a27bL106
Basically, since there was a 1 second timeout on the pyserial driver if it didn't get data in one second it could cause the framer to start iterating nothing to the handler which caused the handler to yield none.
As a side note, I sort of think we might need to throw an exception here: https://github.com/swift-nav/libsbp/blob/master/python/sbp/client/handler.py#L72 , so that at least the handler communicates that it is no longer iterating correctly.  But I'm not sure what to do there so I left as is.",@denniszollo merge?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,822,2020-07-16T04:26:36Z,2020-07-16T05:03:22Z,2020-07-16T05:03:23Z,MERGED,True,4,12,1,https://github.com/apps/dependabot,Bump lodash from 4.17.15 to 4.17.19,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/822,https://github.com/apps/dependabot,1,https://github.com/swift-nav/libsbp/pull/822,"Bumps lodash from 4.17.15 to 4.17.19.

Release notes
Sourced from lodash's releases.

4.17.16



Commits

d7fbc52 Bump to v4.17.19
2e1c0f2 Add npm-package
1b6c282 Bump to v4.17.18
a370ac8 Bump to v4.17.17
1144918 Rebuild lodash and docs
3a3b0fd Bump to v4.17.16
c84fe82 fix(zipObjectDeep): prototype pollution (#4759)
e7b28ea Sanitize sourceURL so it cannot affect evaled code (#4518)
0cec225 Fix lodash.isEqual for circular references (#4320) (#4515)
94c3a81 Document matches* shorthands for over* methods (#4510) (#4514)
Additional commits viewable in compare view



Maintainer changes
This version was pushed to npm by mathias, a new releaser for lodash since your current version.



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps lodash from 4.17.15 to 4.17.19.

Release notes
Sourced from lodash's releases.

4.17.16



Commits

d7fbc52 Bump to v4.17.19
2e1c0f2 Add npm-package
1b6c282 Bump to v4.17.18
a370ac8 Bump to v4.17.17
1144918 Rebuild lodash and docs
3a3b0fd Bump to v4.17.16
c84fe82 fix(zipObjectDeep): prototype pollution (#4759)
e7b28ea Sanitize sourceURL so it cannot affect evaled code (#4518)
0cec225 Fix lodash.isEqual for circular references (#4320) (#4515)
94c3a81 Document matches* shorthands for over* methods (#4510) (#4514)
Additional commits viewable in compare view



Maintainer changes
This version was pushed to npm by mathias, a new releaser for lodash since your current version.



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,823,2020-07-17T06:08:16Z,2020-07-17T15:13:40Z,2020-07-21T20:39:56Z,MERGED,True,1116,1096,5,https://github.com/silverjam,Update javascript generator to handle variable array of u16 values,1,[],https://github.com/swift-nav/libsbp/pull/823,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/823,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,824,2020-07-17T16:34:27Z,2020-07-21T21:53:54Z,2020-07-21T23:30:56Z,MERGED,True,1371,485,37,https://github.com/GuillaumeDec,[SO-17] Guillaume/so 7/add leader group message,9,[],https://github.com/swift-nav/libsbp/pull/824,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/824,"Add sbp definition of new leader/leading message for Solution Groups.
SBP_MSG_GROUP_META.
As per Design Doc of new Starling Output MVP.
The point of this message is to facilitate consumption of output data,
in particular that of the fuzed Solution Group, aka ""Fuzed Wagon"".
Could be used for the GNSS (ARP) Wagon too.
Had to update parsers for Rust & Javascript b/c a new type (array of u16 for the group_msgs field) was introduced.","Add sbp definition of new leader/leading message for Solution Groups.
SBP_MSG_GROUP_META.
As per Design Doc of new Starling Output MVP.
The point of this message is to facilitate consumption of output data,
in particular that of the fuzed Solution Group, aka ""Fuzed Wagon"".
Could be used for the GNSS (ARP) Wagon too.
Had to update parsers for Rust & Javascript b/c a new type (array of u16 for the group_msgs field) was introduced.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,824,2020-07-17T16:34:27Z,2020-07-21T21:53:54Z,2020-07-21T23:30:56Z,MERGED,True,1371,485,37,https://github.com/GuillaumeDec,[SO-17] Guillaume/so 7/add leader group message,9,[],https://github.com/swift-nav/libsbp/pull/824,https://github.com/GuillaumeDec,2,https://github.com/swift-nav/libsbp/pull/824#issuecomment-662093779,"Add sbp definition of new leader/leading message for Solution Groups.
SBP_MSG_GROUP_META.
As per Design Doc of new Starling Output MVP.
The point of this message is to facilitate consumption of output data,
in particular that of the fuzed Solution Group, aka ""Fuzed Wagon"".
Could be used for the GNSS (ARP) Wagon too.
Had to update parsers for Rust & Javascript b/c a new type (array of u16 for the group_msgs field) was introduced.","Left a couple of comments - I think it would be good if the time source flags field would follow one convention throughout the SBP protocol, and since it was there first in MSG_IMU_RAW, I would tend to follow that convention, even if it admittedly makes less sense than your proposal.

After much consideration, I agree with your suggestion, let's stick to the legacy. Not ideal perhaps, but the 0 meaning ""invalid"" isn't necessarily a fundamental law either: one could argue that 0 means ""default"" state. And GNSS-referenced tow/tom are quite the default in this house :-)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,825,2020-07-17T19:28:24Z,2020-07-17T20:46:07Z,2020-07-17T20:47:05Z,MERGED,True,1,3484,24,https://github.com/silverjam,python: remove generation of the sbp.jit _payload_size method,1,[],https://github.com/swift-nav/libsbp/pull/825,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/825,"This method was not used, and the genreated code wasn't correct when the
message included an unsized member like a string or a variable sized
array.","This method was not used, and the genreated code wasn't correct when the
message included an unsized member like a string or a variable sized
array.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,825,2020-07-17T19:28:24Z,2020-07-17T20:46:07Z,2020-07-17T20:47:05Z,MERGED,True,1,3484,24,https://github.com/silverjam,python: remove generation of the sbp.jit _payload_size method,1,[],https://github.com/swift-nav/libsbp/pull/825,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/825#issuecomment-660299200,"This method was not used, and the genreated code wasn't correct when the
message included an unsized member like a string or a variable sized
array.","@GuillaumeDec FYI, noticed this while reviewing your PR",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,825,2020-07-17T19:28:24Z,2020-07-17T20:46:07Z,2020-07-17T20:47:05Z,MERGED,True,1,3484,24,https://github.com/silverjam,python: remove generation of the sbp.jit _payload_size method,1,[],https://github.com/swift-nav/libsbp/pull/825,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/825#issuecomment-660330525,"This method was not used, and the genreated code wasn't correct when the
message included an unsized member like a string or a variable sized
array.",@GuillaumeDec since this is merged you'll need to merge and regenerate Python prior to merging your PR (#824),True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,826,2020-07-20T08:54:45Z,2020-07-21T07:16:06Z,2020-07-21T07:16:07Z,MERGED,True,1669,1107,40,https://github.com/reimerix,[HS-56] Add time offset message,8,[],https://github.com/swift-nav/libsbp/pull/826,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/826,This PR adds the MSG_GNSS_TIME_OFFSET to the SBP protocol. It contains the offset between a local time (unique to the sender ID emitting the messages) and the GNSS time scale.,This PR adds the MSG_GNSS_TIME_OFFSET to the SBP protocol. It contains the offset between a local time (unique to the sender ID emitting the messages) and the GNSS time scale.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,826,2020-07-20T08:54:45Z,2020-07-21T07:16:06Z,2020-07-21T07:16:07Z,MERGED,True,1669,1107,40,https://github.com/reimerix,[HS-56] Add time offset message,8,[],https://github.com/swift-nav/libsbp/pull/826,https://github.com/reimerix,2,https://github.com/swift-nav/libsbp/pull/826#issuecomment-661680646,This PR adds the MSG_GNSS_TIME_OFFSET to the SBP protocol. It contains the offset between a local time (unique to the sender ID emitting the messages) and the GNSS time scale.,"@lloydmaza If a device has multiple sensors connected, it should be using the same clock to timestamp them. I don't think we would need more than one time offset by sender. If a device happens to timestamp different sensors with different clocks, it could also send out these messages with different sender ids.
@GuillaumeDec No other untracked files üôÇ",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,827,2020-07-21T19:32:59Z,2020-07-23T20:18:22Z,2020-07-23T20:18:24Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Add additional profiling tools,1,[],https://github.com/swift-nav/libsbp/pull/827,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/827,"Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2939/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
This comment was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/2939/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,828,2020-07-22T05:06:25Z,2020-07-22T05:46:04Z,2020-07-22T05:46:05Z,MERGED,True,156,1,3,https://github.com/mfine,SBP 2 NMEA implementation,3,[],https://github.com/swift-nav/libsbp/pull/828,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/828,"Converts SBP binary to NMEA GGA sentences. Sample run:
‚ûú  ~  cat sample.sbp | sbp2nmea | head
$GPGGA,050309.800,3745.2354639,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*41
$GPGGA,050309.900,3745.2354638,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*41
$GPGGA,050310.000,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4e
$GPGGA,050310.100,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4f
$GPGGA,050310.200,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4c
$GPGGA,050310.300,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4d
$GPGGA,050310.400,3745.2354636,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*4a
$GPGGA,050310.500,3745.2354637,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*4a
$GPGGA,050310.600,3745.2354638,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*46
$GPGGA,050310.700,3745.2354636,N,12228.4093109,W,4,15,0.0,112.43,M,0.0,M,,*41
‚ûú  ~","Converts SBP binary to NMEA GGA sentences. Sample run:
‚ûú  ~  cat sample.sbp | sbp2nmea | head
$GPGGA,050309.800,3745.2354639,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*41
$GPGGA,050309.900,3745.2354638,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*41
$GPGGA,050310.000,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4e
$GPGGA,050310.100,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4f
$GPGGA,050310.200,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4c
$GPGGA,050310.300,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4d
$GPGGA,050310.400,3745.2354636,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*4a
$GPGGA,050310.500,3745.2354637,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*4a
$GPGGA,050310.600,3745.2354638,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*46
$GPGGA,050310.700,3745.2354636,N,12228.4093109,W,4,15,0.0,112.43,M,0.0,M,,*41
‚ûú  ~",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,828,2020-07-22T05:06:25Z,2020-07-22T05:46:04Z,2020-07-22T05:46:05Z,MERGED,True,156,1,3,https://github.com/mfine,SBP 2 NMEA implementation,3,[],https://github.com/swift-nav/libsbp/pull/828,https://github.com/mfine,2,https://github.com/swift-nav/libsbp/pull/828#issuecomment-662244214,"Converts SBP binary to NMEA GGA sentences. Sample run:
‚ûú  ~  cat sample.sbp | sbp2nmea | head
$GPGGA,050309.800,3745.2354639,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*41
$GPGGA,050309.900,3745.2354638,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*41
$GPGGA,050310.000,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4e
$GPGGA,050310.100,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4f
$GPGGA,050310.200,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4c
$GPGGA,050310.300,3745.2354637,N,12228.4093111,W,4,15,0.0,112.43,M,0.0,M,,*4d
$GPGGA,050310.400,3745.2354636,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*4a
$GPGGA,050310.500,3745.2354637,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*4a
$GPGGA,050310.600,3745.2354638,N,12228.4093110,W,4,15,0.0,112.43,M,0.0,M,,*46
$GPGGA,050310.700,3745.2354636,N,12228.4093109,W,4,15,0.0,112.43,M,0.0,M,,*41
‚ûú  ~",/cc @ericsenant,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,829,2020-07-23T17:44:51Z,2020-07-24T13:25:41Z,2020-07-24T13:25:42Z,MERGED,True,6979,11,24,https://github.com/GuillaumeDec,[HS-64] Update docs and description for FastStart specs,5,[],https://github.com/swift-nav/libsbp/pull/829,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/829,"first pass, second bullet point of:
https://swift-nav.atlassian.net/browse/HS-64","first pass, second bullet point of:
https://swift-nav.atlassian.net/browse/HS-64",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,830,2020-07-24T18:27:27Z,2021-09-28T03:05:51Z,2021-09-28T03:05:54Z,CLOSED,False,1,1,1,https://github.com/GuillaumeDec,Update navigation.rs,1,[],https://github.com/swift-nav/libsbp/pull/830,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/830,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,831,2020-07-31T17:46:41Z,2020-07-31T19:07:08Z,2020-07-31T19:07:09Z,MERGED,True,35,179,15,https://github.com/mfine,Update LICENSE to MIT,3,[],https://github.com/swift-nav/libsbp/pull/831,https://github.com/mfine,1,https://github.com/swift-nav/libsbp/pull/831,Move the LICENSE to MIT.,Move the LICENSE to MIT.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,832,2020-08-05T19:47:03Z,2020-08-07T03:29:43Z,2020-08-07T03:29:44Z,MERGED,True,2557,29,52,https://github.com/GuillaumeDec,[SO-6] Add SOLN_META message for Fuzed Wagon,16,[],https://github.com/swift-nav/libsbp/pull/832,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/832,https://swift-nav.atlassian.net/browse/SO-6,https://swift-nav.atlassian.net/browse/SO-6,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,833,2020-08-11T01:52:51Z,2020-08-11T02:57:02Z,2020-08-11T02:57:03Z,MERGED,True,13,14,8,https://github.com/GuillaumeDec,Make alignment status flags more sensible,1,[],https://github.com/swift-nav/libsbp/pull/833,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/833,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,834,2020-08-13T05:19:48Z,2020-08-20T13:16:33Z,2020-08-24T18:47:09Z,MERGED,True,3919,1175,44,https://github.com/ljbade,Update SSR atmo correction messages to allow multiple tiles.,3,[],https://github.com/swift-nav/libsbp/pull/834,https://github.com/ljbade,1,https://github.com/swift-nav/libsbp/pull/834,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,835,2020-08-14T04:44:17Z,2020-08-14T05:55:18Z,2020-08-14T05:55:19Z,MERGED,True,46,39,3,https://github.com/GuillaumeDec,Update the docs and reorder bits for readability,1,[],https://github.com/swift-nav/libsbp/pull/835,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/835,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,836,2020-08-21T20:08:13Z,2020-08-21T22:49:00Z,2020-08-21T22:49:01Z,MERGED,True,1239,1160,16,https://github.com/GuillaumeDec,Guillaume/so 6/quick update group meta,3,[],https://github.com/swift-nav/libsbp/pull/836,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/836,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,837,2020-08-22T03:35:40Z,2020-08-22T04:00:12Z,2020-08-22T04:00:12Z,CLOSED,False,58,45,6,https://github.com/anth-cole,Adjust time in meta message,3,[],https://github.com/swift-nav/libsbp/pull/837,https://github.com/anth-cole,1,https://github.com/swift-nav/libsbp/pull/837,Initial draft,Initial draft,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,838,2020-08-23T17:08:37Z,2020-08-23T17:46:40Z,2020-08-23T17:46:41Z,MERGED,True,1439,230,42,https://github.com/GuillaumeDec,Anthony/adjust meta msg,3,[],https://github.com/swift-nav/libsbp/pull/838,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/838,"Following discussions on SO Design changes, we add _GNSS suffix to gps_time and utc_time msgs for use in GNSS Wagon. The plain, non _GNSS ones will go into the Fuzed Wagon. The group_meta msg, part of Fuzed wagon, is stripped out of its time data b/c it will now be carried by the other two aforementioned ones.","Following discussions on SO Design changes, we add _GNSS suffix to gps_time and utc_time msgs for use in GNSS Wagon. The plain, non _GNSS ones will go into the Fuzed Wagon. The group_meta msg, part of Fuzed wagon, is stripped out of its time data b/c it will now be carried by the other two aforementioned ones.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,839,2020-08-25T17:28:45Z,2020-08-27T01:13:52Z,2020-08-27T01:13:53Z,MERGED,True,1253,806,14,https://github.com/jbangelo,[SSR-17] Update SSR Tile IDs,2,[],https://github.com/swift-nav/libsbp/pull/839,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/839,Update the SSR Tile IDs to be u16s instead to better match LPP.,Update the SSR Tile IDs to be u16s instead to better match LPP.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,839,2020-08-25T17:28:45Z,2020-08-27T01:13:52Z,2020-08-27T01:13:53Z,MERGED,True,1253,806,14,https://github.com/jbangelo,[SSR-17] Update SSR Tile IDs,2,[],https://github.com/swift-nav/libsbp/pull/839,https://github.com/ljbade,2,https://github.com/swift-nav/libsbp/pull/839#issuecomment-680309585,Update the SSR Tile IDs to be u16s instead to better match LPP.,"@jbangelo is it worth going to full 32 bits? that would then match SIP. Unless we want to drop SIP to 16 bits, that way we won't have to worry about overflow when translating",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,839,2020-08-25T17:28:45Z,2020-08-27T01:13:52Z,2020-08-27T01:13:53Z,MERGED,True,1253,806,14,https://github.com/jbangelo,[SSR-17] Update SSR Tile IDs,2,[],https://github.com/swift-nav/libsbp/pull/839,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/839#issuecomment-680321842,Update the SSR Tile IDs to be u16s instead to better match LPP.,"I don't see much need for a full 32-bits here, 8 bits is a bit small for long term growth but 16 bits would seem to give us more than enough room. I'm not sure if there's a real need for the addition 4 bytes in the message if they probably aren't going to be used.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,839,2020-08-25T17:28:45Z,2020-08-27T01:13:52Z,2020-08-27T01:13:53Z,MERGED,True,1253,806,14,https://github.com/jbangelo,[SSR-17] Update SSR Tile IDs,2,[],https://github.com/swift-nav/libsbp/pull/839,https://github.com/ljbade,4,https://github.com/swift-nav/libsbp/pull/839#issuecomment-680463603,Update the SSR Tile IDs to be u16s instead to better match LPP.,"@jbangelo fair enough
do you mind fixing up this bit of the SSR docs I just noticed was wrong for STECSatElement.stec_coeff
units: C00 = 0.05 TECU, C01/C10 = 0.02 TECU/deg, C11 0.02 TECU/deg^2",True,{'THUMBS_UP': ['https://github.com/jbangelo']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,839,2020-08-25T17:28:45Z,2020-08-27T01:13:52Z,2020-08-27T01:13:53Z,MERGED,True,1253,806,14,https://github.com/jbangelo,[SSR-17] Update SSR Tile IDs,2,[],https://github.com/swift-nav/libsbp/pull/839,https://github.com/jbangelo,5,https://github.com/swift-nav/libsbp/pull/839#issuecomment-681052907,Update the SSR Tile IDs to be u16s instead to better match LPP.,Done @ljbade,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,840,2020-08-26T10:45:51Z,2020-08-26T11:48:00Z,2020-08-26T11:48:02Z,MERGED,True,1291,178,32,https://github.com/reimerix,Merge starling output changes to master,8,[],https://github.com/swift-nav/libsbp/pull/840,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/840,This PR merges the starling output changes into master.,This PR merges the starling output changes into master.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,841,2020-08-27T04:49:02Z,2020-09-04T21:43:49Z,2020-09-04T21:43:50Z,MERGED,True,2662,2,32,https://github.com/denniszollo,generate bitfield macros [INFRA-265],4,[],https://github.com/swift-nav/libsbp/pull/841,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/841,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,841,2020-08-27T04:49:02Z,2020-09-04T21:43:49Z,2020-09-04T21:43:50Z,MERGED,True,2662,2,32,https://github.com/denniszollo,generate bitfield macros [INFRA-265],4,[],https://github.com/swift-nav/libsbp/pull/841,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/841#issuecomment-682203367,,"I was trying to come up with a way to separate message name from field
name.  Happy to remove if you think it fails at that goal.
‚Ä¶
On Thu, Aug 27, 2020, 2:05 PM Ben Altieri ***@***.***> wrote:
 ***@***.**** commented on this pull request.

 I really like this! It may not necessarily work out to the prettiest macro
 defines but it does the trick
 ------------------------------

 In c/include/libsbp/orientation.h
 <#841 (comment)>:

 > @@ -36,6 +36,17 @@ SBP_PACK_START

   * that time-matched RTK mode is used when the base station is moving.

   */

  #define SBP_MSG_BASELINE_HEADING 0x020F

 +#define SBP_BASELINE_HEADING__FIX_MODE_MASK (0x7)


 any reason a double underscore is needed? I can see an argument for
 readability, but it doesn't work on my eyes üëÄ

 ‚Äî
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub
 <#841 (review)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ACWBDZRHEFFP2T5SEWQHET3SC3DA3ANCNFSM4QMRSSQA>
 .",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,841,2020-08-27T04:49:02Z,2020-09-04T21:43:49Z,2020-09-04T21:43:50Z,MERGED,True,2662,2,32,https://github.com/denniszollo,generate bitfield macros [INFRA-265],4,[],https://github.com/swift-nav/libsbp/pull/841,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/841#issuecomment-682208885,,"I was trying to come up with a way to separate message name from field name. Happy to remove if you think it fails at that goal.

The goal makes sense, but it's enough of a departure from standard naming conventions that I would prefer not to include this.  So would prefer just _ instead of __.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,841,2020-08-27T04:49:02Z,2020-09-04T21:43:49Z,2020-09-04T21:43:50Z,MERGED,True,2662,2,32,https://github.com/denniszollo,generate bitfield macros [INFRA-265],4,[],https://github.com/swift-nav/libsbp/pull/841,https://github.com/denniszollo,4,https://github.com/swift-nav/libsbp/pull/841#issuecomment-683999080,,@jason; removed trailing semicolon and rebased a bit for clean rebase and merge on GH.,True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,841,2020-08-27T04:49:02Z,2020-09-04T21:43:49Z,2020-09-04T21:43:50Z,MERGED,True,2662,2,32,https://github.com/denniszollo,generate bitfield macros [INFRA-265],4,[],https://github.com/swift-nav/libsbp/pull/841,https://github.com/denniszollo,5,https://github.com/swift-nav/libsbp/pull/841#issuecomment-684012373,,I'm waiting to collect a bit more feedback; once we put these in we can't really rename them or take them out so I want to get it right.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,842,2020-08-27T18:27:31Z,2020-09-01T05:31:00Z,2020-09-01T05:31:01Z,MERGED,True,31,31,11,https://github.com/jbangelo,[SSR-117] SSR Lat/Lon sign,2,[],https://github.com/swift-nav/libsbp/pull/842,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/842,"Changed the latitude and longitude in the SSR grid definition to be signed. Also changed the point validity field to be an array of u8, which should allow us to invalidate many more points.","Changed the latitude and longitude in the SSR grid definition to be signed. Also changed the point validity field to be an array of u8, which should allow us to invalidate many more points.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,843,2020-08-28T21:49:57Z,2020-08-28T22:28:01Z,2020-08-28T22:28:02Z,MERGED,True,74,16,6,https://github.com/silverjam,"json2json: maintain fields other than ""data"" [INFRA-266]",1,[],https://github.com/swift-nav/libsbp/pull/843,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/843,"If we're running json2json and there are fields in the input struct
other than ""data"" we need to maintain those fields.  The use case here
is for HITL, where there's metadata (a ""time"" field) that needs to
be kept.","If we're running json2json and there are fields in the input struct
other than ""data"" we need to maintain those fields.  The use case here
is for HITL, where there's metadata (a ""time"" field) that needs to
be kept.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,843,2020-08-28T21:49:57Z,2020-08-28T22:28:01Z,2020-08-28T22:28:02Z,MERGED,True,74,16,6,https://github.com/silverjam,"json2json: maintain fields other than ""data"" [INFRA-266]",1,[],https://github.com/swift-nav/libsbp/pull/843,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/843#issuecomment-683173061,"If we're running json2json and there are fields in the input struct
other than ""data"" we need to maintain those fields.  The use case here
is for HITL, where there's metadata (a ""time"" field) that needs to
be kept.","Merging, this seems correct, and no apparent regressions in the benchmark",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,844,2020-09-03T00:13:15Z,2020-09-04T00:24:16Z,2020-09-04T00:24:17Z,MERGED,True,347,632,45,https://github.com/denniszollo,Improve SBP protocol PDF documentation [INFRA-280],12,[],https://github.com/swift-nav/libsbp/pull/844,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/844,"I made quite a few changes to try to get an improved PDF document.

Add to the schema to avoid XXXInputType and all being called real messages according to docs and generated code
rename some linux draft messages so they look better on the PDF (not the best idea, but they were draft anyway!)
allow ctrl-f for MSG_ including underscore character
Fixup table widths to avoid running off of page
Fixup table widths to avoid columns running into eachother.","I made quite a few changes to try to get an improved PDF document.

Add to the schema to avoid XXXInputType and all being called real messages according to docs and generated code
rename some linux draft messages so they look better on the PDF (not the best idea, but they were draft anyway!)
allow ctrl-f for MSG_ including underscore character
Fixup table widths to avoid running off of page
Fixup table widths to avoid columns running into eachother.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,844,2020-09-03T00:13:15Z,2020-09-04T00:24:16Z,2020-09-04T00:24:17Z,MERGED,True,347,632,45,https://github.com/denniszollo,Improve SBP protocol PDF documentation [INFRA-280],12,[],https://github.com/swift-nav/libsbp/pull/844,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/844#issuecomment-686184746,"I made quite a few changes to try to get an improved PDF document.

Add to the schema to avoid XXXInputType and all being called real messages according to docs and generated code
rename some linux draft messages so they look better on the PDF (not the best idea, but they were draft anyway!)
allow ctrl-f for MSG_ including underscore character
Fixup table widths to avoid running off of page
Fixup table widths to avoid columns running into eachother.","allow ctrl-f for MSG_ including underscore character



cc @jaredw42",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,845,2020-09-03T09:28:55Z,2020-09-17T07:02:42Z,2020-09-17T07:02:43Z,MERGED,True,24,2,4,https://github.com/GuillaumeDec,Add bits for ins motion state,8,[],https://github.com/swift-nav/libsbp/pull/845,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/845,"Add bits in MSG_INS_STATUS for INS motion state

Sorry @denniszollo, forgor that it would go in after your PDF changes... how can I prevent the pdf from becoming ugly again with overlapping text etc.? Is the generator itself updated so I don't have to worry about it, or do I need to tweak a bit the generated latex before pdf-ization?
(ignore the checked-in pdf for now -- Surprisingly, I've re-built twice from scratch and the PDF doesn't seem to pick up my new flags in MSG_INS_STATUS ü§î ü§Ø )
is there some kind of 'lock' in place?
@denniszollo mind giving it a spin? Basically just trying to make docs ... üôè
[update] looks like i found the culprit:
!pdfTeX error: pdflatex (file ebmr8): Font ebmr8 at 375 not found

gonna rebuild my Docker image with the latest Dockerfile and retry
This texlive-fonts-extra will hopefully do the trick (it contains the ebmr8 font..)

[update2]
Got my whole new Docker image built after 3hrs üòÖ  but still doesn't work :-(","Add bits in MSG_INS_STATUS for INS motion state

Sorry @denniszollo, forgor that it would go in after your PDF changes... how can I prevent the pdf from becoming ugly again with overlapping text etc.? Is the generator itself updated so I don't have to worry about it, or do I need to tweak a bit the generated latex before pdf-ization?
(ignore the checked-in pdf for now -- Surprisingly, I've re-built twice from scratch and the PDF doesn't seem to pick up my new flags in MSG_INS_STATUS ü§î ü§Ø )
is there some kind of 'lock' in place?
@denniszollo mind giving it a spin? Basically just trying to make docs ... üôè
[update] looks like i found the culprit:
!pdfTeX error: pdflatex (file ebmr8): Font ebmr8 at 375 not found

gonna rebuild my Docker image with the latest Dockerfile and retry
This texlive-fonts-extra will hopefully do the trick (it contains the ebmr8 font..)

[update2]
Got my whole new Docker image built after 3hrs üòÖ  but still doesn't work :-(",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,845,2020-09-03T09:28:55Z,2020-09-17T07:02:42Z,2020-09-17T07:02:43Z,MERGED,True,24,2,4,https://github.com/GuillaumeDec,Add bits for ins motion state,8,[],https://github.com/swift-nav/libsbp/pull/845,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/845#issuecomment-689024301,"Add bits in MSG_INS_STATUS for INS motion state

Sorry @denniszollo, forgor that it would go in after your PDF changes... how can I prevent the pdf from becoming ugly again with overlapping text etc.? Is the generator itself updated so I don't have to worry about it, or do I need to tweak a bit the generated latex before pdf-ization?
(ignore the checked-in pdf for now -- Surprisingly, I've re-built twice from scratch and the PDF doesn't seem to pick up my new flags in MSG_INS_STATUS ü§î ü§Ø )
is there some kind of 'lock' in place?
@denniszollo mind giving it a spin? Basically just trying to make docs ... üôè
[update] looks like i found the culprit:
!pdfTeX error: pdflatex (file ebmr8): Font ebmr8 at 375 not found

gonna rebuild my Docker image with the latest Dockerfile and retry
This texlive-fonts-extra will hopefully do the trick (it contains the ebmr8 font..)

[update2]
Got my whole new Docker image built after 3hrs üòÖ  but still doesn't work :-(","It should be okay, we just need to generate the PDF.
‚Ä¶
On Fri, Sep 4, 2020 at 1:40 AM Guillaume D ***@***.***> wrote:

    - Add bits in MSG_INS_STATUS for INS motion state

 Sorry @denniszollo <https://github.com/denniszollo>, forgor that it would
 go in after your PDF changes... how can I prevent the pdf from becoming
 ugly again with overlapping text etc.? Is the generator itself updated so I
 don't have to worry about it, or do I need to tweak a bit the generated
 latex before pdf-ization?
 ------------------------------
 You can view, comment on, or merge this pull request online at:

   #845
 Commit Summary

    - Add bits for ins motion state

 File Changes

    - *M* spec/yaml/swiftnav/sbp/system.yaml
    <https://github.com/swift-nav/libsbp/pull/845/files#diff-4165d2ee760dcd1158d1fef91aef4007>
    (10)

 Patch Links:

    - https://github.com/swift-nav/libsbp/pull/845.patch
    - https://github.com/swift-nav/libsbp/pull/845.diff

 ‚Äî
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#845>, or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/ACWBDZSH5NLZQ5MJTC5PCVTSECRXFANCNFSM4QURM5RQ>
 .",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,845,2020-09-03T09:28:55Z,2020-09-17T07:02:42Z,2020-09-17T07:02:43Z,MERGED,True,24,2,4,https://github.com/GuillaumeDec,Add bits for ins motion state,8,[],https://github.com/swift-nav/libsbp/pull/845,https://github.com/reimerix,3,https://github.com/swift-nav/libsbp/pull/845#issuecomment-689488337,"Add bits in MSG_INS_STATUS for INS motion state

Sorry @denniszollo, forgor that it would go in after your PDF changes... how can I prevent the pdf from becoming ugly again with overlapping text etc.? Is the generator itself updated so I don't have to worry about it, or do I need to tweak a bit the generated latex before pdf-ization?
(ignore the checked-in pdf for now -- Surprisingly, I've re-built twice from scratch and the PDF doesn't seem to pick up my new flags in MSG_INS_STATUS ü§î ü§Ø )
is there some kind of 'lock' in place?
@denniszollo mind giving it a spin? Basically just trying to make docs ... üôè
[update] looks like i found the culprit:
!pdfTeX error: pdflatex (file ebmr8): Font ebmr8 at 375 not found

gonna rebuild my Docker image with the latest Dockerfile and retry
This texlive-fonts-extra will hopefully do the trick (it contains the ebmr8 font..)

[update2]
Got my whole new Docker image built after 3hrs üòÖ  but still doesn't work :-(","@denniszollo I just tried to do that using the docker image, but the recently added \usepackage[T1]{fontenc} in swiftnav.sty causes the error messages that @GuillaumeDec was mentioning earlier. We might need to update the docker image to include whatever is missing?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,845,2020-09-03T09:28:55Z,2020-09-17T07:02:42Z,2020-09-17T07:02:43Z,MERGED,True,24,2,4,https://github.com/GuillaumeDec,Add bits for ins motion state,8,[],https://github.com/swift-nav/libsbp/pull/845,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/845#issuecomment-691422818,"Add bits in MSG_INS_STATUS for INS motion state

Sorry @denniszollo, forgor that it would go in after your PDF changes... how can I prevent the pdf from becoming ugly again with overlapping text etc.? Is the generator itself updated so I don't have to worry about it, or do I need to tweak a bit the generated latex before pdf-ization?
(ignore the checked-in pdf for now -- Surprisingly, I've re-built twice from scratch and the PDF doesn't seem to pick up my new flags in MSG_INS_STATUS ü§î ü§Ø )
is there some kind of 'lock' in place?
@denniszollo mind giving it a spin? Basically just trying to make docs ... üôè
[update] looks like i found the culprit:
!pdfTeX error: pdflatex (file ebmr8): Font ebmr8 at 375 not found

gonna rebuild my Docker image with the latest Dockerfile and retry
This texlive-fonts-extra will hopefully do the trick (it contains the ebmr8 font..)

[update2]
Got my whole new Docker image built after 3hrs üòÖ  but still doesn't work :-(",@reimerix @denniszollo @GuillaumeDec I was able to fix the pdf generation in the docker container with this change e0686bc but it introduces some layout issues with the new bits:,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,845,2020-09-03T09:28:55Z,2020-09-17T07:02:42Z,2020-09-17T07:02:43Z,MERGED,True,24,2,4,https://github.com/GuillaumeDec,Add bits for ins motion state,8,[],https://github.com/swift-nav/libsbp/pull/845,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/845#issuecomment-691549263,"Add bits in MSG_INS_STATUS for INS motion state

Sorry @denniszollo, forgor that it would go in after your PDF changes... how can I prevent the pdf from becoming ugly again with overlapping text etc.? Is the generator itself updated so I don't have to worry about it, or do I need to tweak a bit the generated latex before pdf-ization?
(ignore the checked-in pdf for now -- Surprisingly, I've re-built twice from scratch and the PDF doesn't seem to pick up my new flags in MSG_INS_STATUS ü§î ü§Ø )
is there some kind of 'lock' in place?
@denniszollo mind giving it a spin? Basically just trying to make docs ... üôè
[update] looks like i found the culprit:
!pdfTeX error: pdflatex (file ebmr8): Font ebmr8 at 375 not found

gonna rebuild my Docker image with the latest Dockerfile and retry
This texlive-fonts-extra will hopefully do the trick (it contains the ebmr8 font..)

[update2]
Got my whole new Docker image built after 3hrs üòÖ  but still doesn't work :-(","Merged the PDF generation fix into master and merged master to this branch.
@GuillaumeDec FYI, you typically don't need to build the docker container yourself, you can use the prebuilt version with docker run  -v $PWD:/mnt/workspace -i -t swiftnav/libsbp-build:2020.08.28 -- if you need to play around with package modifications you can launch the pre-built container then just use sudo apt update and sudo apt install ... to install new packages or otherwise modify the system (which is faster than rebuilding the whole thing) -- once you've figured out the new changes then you can build the container locally, or you can use the docker-recipes repo to make jenkins build it for you.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,846,2020-09-09T07:11:15Z,2020-09-11T15:55:58Z,2020-09-11T15:56:01Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Update profiling tools,1,[],https://github.com/swift-nav/libsbp/pull/846,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/846,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  211ebcca  ->  abfa56da

abfa56da  :  Update profiling tools

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3450/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  211ebcca  ->  abfa56da

abfa56da  :  Update profiling tools

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3450/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,848,2020-09-10T14:58:44Z,2020-09-10T16:02:22Z,2020-09-10T16:02:23Z,MERGED,True,4,4,1,https://github.com/IsakTjernberg,Fix bugs in Java array decoding,1,[],https://github.com/swift-nav/libsbp/pull/848,https://github.com/IsakTjernberg,1,https://github.com/swift-nav/libsbp/pull/848,"Found a bug when decoding array of U16 in Java. It would try to decode as many U16s as there were bytes left in the buffer, causing the buffer to run out halfway there.
I believe the same logic goes for the float and double versions, but I have not tested these myself.
This was triggered by the MSG_GROUP_META, not sure if these functions are used from somewhere else.","Found a bug when decoding array of U16 in Java. It would try to decode as many U16s as there were bytes left in the buffer, causing the buffer to run out halfway there.
I believe the same logic goes for the float and double versions, but I have not tested these myself.
This was triggered by the MSG_GROUP_META, not sure if these functions are used from somewhere else.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,849,2020-09-10T19:06:33Z,2020-09-10T19:33:21Z,2020-09-10T19:33:22Z,MERGED,True,3,2,2,https://github.com/silverjam,"use generic class if message is unknown, replace on unicode errors [INFRA-282]",1,[],https://github.com/swift-nav/libsbp/pull/849,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/849,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,850,2020-09-11T14:23:50Z,2020-09-11T15:55:41Z,2020-09-11T15:55:43Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Change implementation of working directory,1,[],https://github.com/swift-nav/libsbp/pull/850,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/850,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  211ebcca  ->  f29c5fae

f29c5fae  :  Change implementation of working directory
abfa56da  :  Update profiling tools

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3476/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  211ebcca  ->  f29c5fae

f29c5fae  :  Change implementation of working directory
abfa56da  :  Update profiling tools

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3476/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,851,2020-09-12T04:15:35Z,2020-09-14T17:20:19Z,2020-09-14T17:20:20Z,MERGED,True,29,18,1,https://github.com/silverjam,python: add reconnect logic to network write,3,[],https://github.com/swift-nav/libsbp/pull/851,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/851,Addresses EN-12,Addresses EN-12,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,851,2020-09-12T04:15:35Z,2020-09-14T17:20:19Z,2020-09-14T17:20:20Z,MERGED,True,29,18,1,https://github.com/silverjam,python: add reconnect logic to network write,3,[],https://github.com/swift-nav/libsbp/pull/851,https://github.com/switanis,2,https://github.com/swift-nav/libsbp/pull/851#issuecomment-692196503,Addresses EN-12,Tested yesterday. Works well on Windows.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,852,2020-09-12T21:31:31Z,2020-09-14T15:39:54Z,2020-09-14T15:39:55Z,MERGED,True,1717,1638,954,https://github.com/silverjam,Normalize contact addresses,3,[],https://github.com/swift-nav/libsbp/pull/852,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/852,Addresses EN-15,Addresses EN-15,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,852,2020-09-12T21:31:31Z,2020-09-14T15:39:54Z,2020-09-14T15:39:55Z,MERGED,True,1717,1638,954,https://github.com/silverjam,Normalize contact addresses,3,[],https://github.com/swift-nav/libsbp/pull/852,https://github.com/switanis,2,https://github.com/swift-nav/libsbp/pull/852#issuecomment-691553358,Addresses EN-15,I really prefer website URL rather than email.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,853,2020-09-14T21:26:44Z,2020-09-21T20:44:27Z,2020-09-21T20:44:28Z,MERGED,True,15,5,3,https://github.com/silverjam,fix tox tests for Python 3.5,2,[],https://github.com/swift-nav/libsbp/pull/853,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/853,"We support Python 3.5 (this is what the console uses) but our tests don't currently succeed on 3.5, fix this...","We support Python 3.5 (this is what the console uses) but our tests don't currently succeed on 3.5, fix this...",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,853,2020-09-14T21:26:44Z,2020-09-21T20:44:27Z,2020-09-21T20:44:28Z,MERGED,True,15,5,3,https://github.com/silverjam,fix tox tests for Python 3.5,2,[],https://github.com/swift-nav/libsbp/pull/853,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/853#issuecomment-696364706,"We support Python 3.5 (this is what the console uses) but our tests don't currently succeed on 3.5, fix this...",@denniszollo merging so I can unblock testing on #858 -- let me know if you see any issues,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,854,2020-09-14T21:31:40Z,2020-09-16T02:01:50Z,2020-09-16T02:01:51Z,MERGED,True,19,57,2,https://github.com/silverjam,"Add Python 3.5/3.8 to libsbp builder, update ARM",3,[],https://github.com/swift-nav/libsbp/pull/854,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/854,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,855,2020-09-14T23:59:55Z,2020-09-15T06:43:12Z,2020-09-15T06:43:13Z,MERGED,True,17,9,2,https://github.com/silverjam,Fix java examples so they at least compile,1,[],https://github.com/swift-nav/libsbp/pull/855,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/855,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,855,2020-09-14T23:59:55Z,2020-09-15T06:43:12Z,2020-09-15T06:43:13Z,MERGED,True,17,9,2,https://github.com/silverjam,Fix java examples so they at least compile,1,[],https://github.com/swift-nav/libsbp/pull/855,https://github.com/switanis,2,https://github.com/swift-nav/libsbp/pull/855#issuecomment-692394934,,"LGTM, thanks!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,856,2020-09-15T06:31:58Z,2021-09-28T03:07:10Z,2021-09-28T03:07:10Z,CLOSED,False,5787,2,30,https://github.com/denniszollo,Dzollo/test new msgs,3,[],https://github.com/swift-nav/libsbp/pull/856,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/856,"Use the old build_test_data script to generate test for new messages.  Thank @mookerji !
Given we weren't testing new messages, new tests failing is probable and I see that on my desktop.  Either our spec in this library is wrong, or we aren't generating the new messages according to spec.
TODO: investigate and fix any failing tests either in the generator, in the auto-test generator, in the client libraries, or in the producer of the messages.","Use the old build_test_data script to generate test for new messages.  Thank @mookerji !
Given we weren't testing new messages, new tests failing is probable and I see that on my desktop.  Either our spec in this library is wrong, or we aren't generating the new messages according to spec.
TODO: investigate and fix any failing tests either in the generator, in the auto-test generator, in the client libraries, or in the producer of the messages.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,856,2020-09-15T06:31:58Z,2021-09-28T03:07:10Z,2021-09-28T03:07:10Z,CLOSED,False,5787,2,30,https://github.com/denniszollo,Dzollo/test new msgs,3,[],https://github.com/swift-nav/libsbp/pull/856,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/856#issuecomment-695146958,"Use the old build_test_data script to generate test for new messages.  Thank @mookerji !
Given we weren't testing new messages, new tests failing is probable and I see that on my desktop.  Either our spec in this library is wrong, or we aren't generating the new messages according to spec.
TODO: investigate and fix any failing tests either in the generator, in the auto-test generator, in the client libraries, or in the producer of the messages.",Update: This PR is ready to go.  Adds some more unit tests to avoid issues with new messages.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,857,2020-09-17T17:14:30Z,2020-09-17T18:07:20Z,2020-09-17T18:07:21Z,MERGED,True,1,1,1,https://github.com/akleeman,Bump cmake (back) to most recent.,1,[],https://github.com/swift-nav/libsbp/pull/857,https://github.com/akleeman,1,https://github.com/swift-nav/libsbp/pull/857,"PR #845 reverted the cmake submodule, assuming that was an accident @GuillaumeDec ?","PR #845 reverted the cmake submodule, assuming that was an accident @GuillaumeDec ?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,858,2020-09-18T17:30:04Z,2020-09-22T18:26:55Z,2020-09-22T18:26:56Z,MERGED,True,4,2,3,https://github.com/denniszollo,fixup font issue [INFRA-293],4,[],https://github.com/swift-nav/libsbp/pull/858,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/858,"The 45 degree rotated text apparently was some kind of bitmap font and was rendering poorly on some systems.  Removing cmbright fixes.  Note, PDF doc may look and feel different after.","The 45 degree rotated text apparently was some kind of bitmap font and was rendering poorly on some systems.  Removing cmbright fixes.  Note, PDF doc may look and feel different after.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,858,2020-09-18T17:30:04Z,2020-09-22T18:26:55Z,2020-09-22T18:26:56Z,MERGED,True,4,2,3,https://github.com/denniszollo,fixup font issue [INFRA-293],4,[],https://github.com/swift-nav/libsbp/pull/858,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/858#issuecomment-694995095,"The 45 degree rotated text apparently was some kind of bitmap font and was rendering poorly on some systems.  Removing cmbright fixes.  Note, PDF doc may look and feel different after.",/cc @silverjam,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,858,2020-09-18T17:30:04Z,2020-09-22T18:26:55Z,2020-09-22T18:26:56Z,MERGED,True,4,2,3,https://github.com/denniszollo,fixup font issue [INFRA-293],4,[],https://github.com/swift-nav/libsbp/pull/858,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/858#issuecomment-694999785,"The 45 degree rotated text apparently was some kind of bitmap font and was rendering poorly on some systems.  Removing cmbright fixes.  Note, PDF doc may look and feel different after.","Can you please check if the pdf generates successfully inside the libsbp-build docket container?  I think the cmbright font is what was causing issues last time, but would be good to double check.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,858,2020-09-18T17:30:04Z,2020-09-22T18:26:55Z,2020-09-22T18:26:56Z,MERGED,True,4,2,3,https://github.com/denniszollo,fixup font issue [INFRA-293],4,[],https://github.com/swift-nav/libsbp/pull/858,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/858#issuecomment-696343011,"The 45 degree rotated text apparently was some kind of bitmap font and was rendering poorly on some systems.  Removing cmbright fixes.  Note, PDF doc may look and feel different after.",tried to test this but I'm blocked waiting for #853,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,858,2020-09-18T17:30:04Z,2020-09-22T18:26:55Z,2020-09-22T18:26:56Z,MERGED,True,4,2,3,https://github.com/denniszollo,fixup font issue [INFRA-293],4,[],https://github.com/swift-nav/libsbp/pull/858,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/858#issuecomment-696376937,"The 45 degree rotated text apparently was some kind of bitmap font and was rendering poorly on some systems.  Removing cmbright fixes.  Note, PDF doc may look and feel different after.","@denniszollo I was seeing the same issue on the docker environment, picking a font seems to resolve the issue, I used the STIX font based on the recommendation from this web page: https://graphicdesign.stackexchange.com/a/517",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,858,2020-09-18T17:30:04Z,2020-09-22T18:26:55Z,2020-09-22T18:26:56Z,MERGED,True,4,2,3,https://github.com/denniszollo,fixup font issue [INFRA-293],4,[],https://github.com/swift-nav/libsbp/pull/858,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/858#issuecomment-696377168,"The 45 degree rotated text apparently was some kind of bitmap font and was rendering poorly on some systems.  Removing cmbright fixes.  Note, PDF doc may look and feel different after.",Example of how the tables render now:,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,858,2020-09-18T17:30:04Z,2020-09-22T18:26:55Z,2020-09-22T18:26:56Z,MERGED,True,4,2,3,https://github.com/denniszollo,fixup font issue [INFRA-293],4,[],https://github.com/swift-nav/libsbp/pull/858,https://github.com/silverjam,7,https://github.com/swift-nav/libsbp/pull/858#issuecomment-696379378,"The 45 degree rotated text apparently was some kind of bitmap font and was rendering poorly on some systems.  Removing cmbright fixes.  Note, PDF doc may look and feel different after.","Sometimes text will overlap, but it's still readable:",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,859,2020-09-22T05:48:27Z,2020-09-22T16:02:18Z,2020-09-22T16:02:20Z,MERGED,True,26,1,1,https://github.com/silverjam,rust: add explicit to_string for SbpString,1,[],https://github.com/swift-nav/libsbp/pull/859,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/859,There seems to be a to_string method that gets picked up by default and this converts the SbpString to it's debug representation which is not what we want... instad add an explicit to_string implementation.,There seems to be a to_string method that gets picked up by default and this converts the SbpString to it's debug representation which is not what we want... instad add an explicit to_string implementation.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,859,2020-09-22T05:48:27Z,2020-09-22T16:02:18Z,2020-09-22T16:02:20Z,MERGED,True,26,1,1,https://github.com/silverjam,rust: add explicit to_string for SbpString,1,[],https://github.com/swift-nav/libsbp/pull/859,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/859#issuecomment-696816054,There seems to be a to_string method that gets picked up by default and this converts the SbpString to it's debug representation which is not what we want... instad add an explicit to_string implementation.,Merging with failing tests since Haskell stackage servers are down,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,860,2020-09-26T01:17:50Z,2020-09-28T16:33:53Z,2020-09-28T16:33:54Z,MERGED,True,4,4,1,https://github.com/dgburr,Fix example SBP message in SBP Specification,1,[],https://github.com/swift-nav/libsbp/pull/860,https://github.com/dgburr,1,https://github.com/swift-nav/libsbp/pull/860,"The example message shown in Chapter 4 of the SBP Specification is incorrect - the message ID for MSG_BASELINE_ECEF is 523 = 20Bh, not 514 = 202h.","The example message shown in Chapter 4 of the SBP Specification is incorrect - the message ID for MSG_BASELINE_ECEF is 523 = 20Bh, not 514 = 202h.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,860,2020-09-26T01:17:50Z,2020-09-28T16:33:53Z,2020-09-28T16:33:54Z,MERGED,True,4,4,1,https://github.com/dgburr,Fix example SBP message in SBP Specification,1,[],https://github.com/swift-nav/libsbp/pull/860,https://github.com/dgburr,2,https://github.com/swift-nav/libsbp/pull/860#issuecomment-699260471,"The example message shown in Chapter 4 of the SBP Specification is incorrect - the message ID for MSG_BASELINE_ECEF is 523 = 20Bh, not 514 = 202h.","Test code in case you want to double-check my checksum calculation:
import sbp.navigation
import binascii

msg = sbp.navigation.MsgBaselineECEF(sender=1228, tow=416300400, x=-4145, y=-5905, z=6384, accuracy=0, n_sats=5, flags=0)
b = binascii.hexlify(msg.to_binary())
pairs = [str(b[i:i+2]) for i in range(0, len(b), 2)]
print('\n'.join(pairs))",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,860,2020-09-26T01:17:50Z,2020-09-28T16:33:53Z,2020-09-28T16:33:54Z,MERGED,True,4,4,1,https://github.com/dgburr,Fix example SBP message in SBP Specification,1,[],https://github.com/swift-nav/libsbp/pull/860,https://github.com/dgburr,3,https://github.com/swift-nav/libsbp/pull/860#issuecomment-700145844,"The example message shown in Chapter 4 of the SBP Specification is incorrect - the message ID for MSG_BASELINE_ECEF is 523 = 20Bh, not 514 = 202h.","LGTM. I'm surprised we didn't catch this after deprecating MSG_POS_ECEF during SBP 2.0 revamp. Thanks so much for catching and fixing!

I didn't catch it - the problem was actually reported by a customer",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,861,2020-09-28T03:29:00Z,2020-09-28T03:51:19Z,2020-09-28T03:51:21Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Starling third party fix (#65),1,[],https://github.com/swift-nav/libsbp/pull/861,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/861,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  f29c5fae  ->  eadd72ac

eadd72ac  :  Starling third party fix (#65)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3685/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  f29c5fae  ->  eadd72ac

eadd72ac  :  Starling third party fix (#65)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3685/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,863,2020-09-29T14:55:12Z,2020-10-02T09:23:17Z,2020-10-02T09:23:20Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Add script to convert valgrind xml to JUnit xml,1,[],https://github.com/swift-nav/libsbp/pull/863,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/863,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  eadd72ac  ->  dff8c94d

dff8c94d  :  Add script to convert valgrind xml to JUnit xml

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3725/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  eadd72ac  ->  dff8c94d

dff8c94d  :  Add script to convert valgrind xml to JUnit xml

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3725/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,864,2020-09-30T12:59:07Z,2020-10-06T15:03:30Z,2020-10-06T15:23:13Z,MERGED,True,677,116,18,https://github.com/reimerix,[SR-146] Updates to solution meta message,2,[],https://github.com/swift-nav/libsbp/pull/864,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/864,"This PR changes the solution meta message according to @switanis inputs:

Remove the n_sats field
Remove alignment_status field (the plan is to start using some bits of MSG_INS_STATUS for this in the future)
Add tow field
Replace TOW of last used GNSS pos/velocity fields with an age_gnss field.","This PR changes the solution meta message according to @switanis inputs:

Remove the n_sats field
Remove alignment_status field (the plan is to start using some bits of MSG_INS_STATUS for this in the future)
Add tow field
Replace TOW of last used GNSS pos/velocity fields with an age_gnss field.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,864,2020-09-30T12:59:07Z,2020-10-06T15:03:30Z,2020-10-06T15:23:13Z,MERGED,True,677,116,18,https://github.com/reimerix,[SR-146] Updates to solution meta message,2,[],https://github.com/swift-nav/libsbp/pull/864,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/864#issuecomment-702996711,"This PR changes the solution meta message according to @switanis inputs:

Remove the n_sats field
Remove alignment_status field (the plan is to start using some bits of MSG_INS_STATUS for this in the future)
Add tow field
Replace TOW of last used GNSS pos/velocity fields with an age_gnss field.","LGTM. I prefer that we squash down to two commits, one with change to yaml, one with the generated files.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,864,2020-09-30T12:59:07Z,2020-10-06T15:03:30Z,2020-10-06T15:23:13Z,MERGED,True,677,116,18,https://github.com/reimerix,[SR-146] Updates to solution meta message,2,[],https://github.com/swift-nav/libsbp/pull/864,https://github.com/dgburr,3,https://github.com/swift-nav/libsbp/pull/864#issuecomment-704271311,"This PR changes the solution meta message according to @switanis inputs:

Remove the n_sats field
Remove alignment_status field (the plan is to start using some bits of MSG_INS_STATUS for this in the future)
Add tow field
Replace TOW of last used GNSS pos/velocity fields with an age_gnss field.",Which starling release will this changed message be introduced in?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,864,2020-09-30T12:59:07Z,2020-10-06T15:03:30Z,2020-10-06T15:23:13Z,MERGED,True,677,116,18,https://github.com/reimerix,[SR-146] Updates to solution meta message,2,[],https://github.com/swift-nav/libsbp/pull/864,https://github.com/dgburr,4,https://github.com/swift-nav/libsbp/pull/864#issuecomment-704273049,"This PR changes the solution meta message according to @switanis inputs:

Remove the n_sats field
Remove alignment_status field (the plan is to start using some bits of MSG_INS_STATUS for this in the future)
Add tow field
Replace TOW of last used GNSS pos/velocity fields with an age_gnss field.",The TOW field is needed to be able to match information from the fusion stream with information from the PVT stream (e.g. PL values).,True,{'THUMBS_UP': ['https://github.com/reimerix']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,864,2020-09-30T12:59:07Z,2020-10-06T15:03:30Z,2020-10-06T15:23:13Z,MERGED,True,677,116,18,https://github.com/reimerix,[SR-146] Updates to solution meta message,2,[],https://github.com/swift-nav/libsbp/pull/864,https://github.com/reimerix,5,https://github.com/swift-nav/libsbp/pull/864#issuecomment-704332649,"This PR changes the solution meta message according to @switanis inputs:

Remove the n_sats field
Remove alignment_status field (the plan is to start using some bits of MSG_INS_STATUS for this in the future)
Add tow field
Replace TOW of last used GNSS pos/velocity fields with an age_gnss field.","Which starling release will this changed message be introduced in?

@dgburr We're targeting a release with the general 1.2 release slated for the end of this week.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,864,2020-09-30T12:59:07Z,2020-10-06T15:03:30Z,2020-10-06T15:23:13Z,MERGED,True,677,116,18,https://github.com/reimerix,[SR-146] Updates to solution meta message,2,[],https://github.com/swift-nav/libsbp/pull/864,https://github.com/dgburr,6,https://github.com/swift-nav/libsbp/pull/864#issuecomment-704345683,"This PR changes the solution meta message according to @switanis inputs:

Remove the n_sats field
Remove alignment_status field (the plan is to start using some bits of MSG_INS_STATUS for this in the future)
Add tow field
Replace TOW of last used GNSS pos/velocity fields with an age_gnss field.","Is the new 'tow' field guaranteed to have a corresponding epoch in the PVT stream?  Or is this possible:
SBP_MSG_GPS_TIME_GNSS with tow = 999 (due to ublox rounding)
SBP_SOLN_META with tow = 1000",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,864,2020-09-30T12:59:07Z,2020-10-06T15:03:30Z,2020-10-06T15:23:13Z,MERGED,True,677,116,18,https://github.com/reimerix,[SR-146] Updates to solution meta message,2,[],https://github.com/swift-nav/libsbp/pull/864,https://github.com/switanis,7,https://github.com/swift-nav/libsbp/pull/864#issuecomment-704347815,"This PR changes the solution meta message according to @switanis inputs:

Remove the n_sats field
Remove alignment_status field (the plan is to start using some bits of MSG_INS_STATUS for this in the future)
Add tow field
Replace TOW of last used GNSS pos/velocity fields with an age_gnss field.","I hope SOLN META TOW is the same as TOW in all other messages in the BEST POS group.
xxx_GNSS may have different TOW.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,865,2020-10-02T09:17:45Z,2020-10-02T09:51:30Z,2020-10-02T09:51:31Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Add possibility to log total memory from profiling tools into a file,1,[],https://github.com/swift-nav/libsbp/pull/865,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/865,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  eadd72ac  ->  44ddf55d

44ddf55d  :  Add possibility to log total memory from profiling tools into a file
950f182e  :  ESD-1864 Deprecate libpal++ repository (#69)
dff8c94d  :  Add script to convert valgrind xml to JUnit xml

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3780/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  eadd72ac  ->  44ddf55d

44ddf55d  :  Add possibility to log total memory from profiling tools into a file
950f182e  :  ESD-1864 Deprecate libpal++ repository (#69)
dff8c94d  :  Add script to convert valgrind xml to JUnit xml

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/3780/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,866,2020-10-03T00:35:45Z,2021-06-18T18:11:41Z,2021-06-18T18:11:47Z,CLOSED,False,2,2,1,https://github.com/denniszollo,c_bindings: for variable length arrays try [] arrays rather than [0],1,[],https://github.com/swift-nav/libsbp/pull/866,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/866,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,866,2020-10-03T00:35:45Z,2021-06-18T18:11:41Z,2021-06-18T18:11:47Z,CLOSED,False,2,2,1,https://github.com/denniszollo,c_bindings: for variable length arrays try [] arrays rather than [0],1,[],https://github.com/swift-nav/libsbp/pull/866,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/866#issuecomment-703027516,,"you beat me to it #867, but unfortunately doesn't look like a viable fix",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,867,2020-10-03T00:36:10Z,2020-10-03T01:52:36Z,2020-10-03T01:52:55Z,CLOSED,False,2,2,1,https://github.com/benjaminaltieri,Remove zero from variable array C definition gen code,1,[],https://github.com/swift-nav/libsbp/pull/867,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/867,Fix an important issue,Fix an important issue,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,867,2020-10-03T00:36:10Z,2020-10-03T01:52:36Z,2020-10-03T01:52:55Z,CLOSED,False,2,2,1,https://github.com/benjaminaltieri,Remove zero from variable array C definition gen code,1,[],https://github.com/swift-nav/libsbp/pull/867,https://github.com/benjaminaltieri,2,https://github.com/swift-nav/libsbp/pull/867#issuecomment-703027353,Fix an important issue,"this doesn't pass muster unfortunately:
In file included from /mnt/workspace/c/test/auto_check_sbp_acquisition_1.c:19:
/mnt/workspace/c/include/libsbp/acquisition.h:150:20: error: flexible array member in a struct with no named members
   acq_sv_profile_t acq_sv_profile[];  /**< SV profiles during acquisition time */
                    ^~~~~~~~~~~~~~
/mnt/workspace/c/include/libsbp/acquisition.h:161:24: error: flexible array member in a struct with no named members
   acq_sv_profile_dep_t acq_sv_profile[];  /**< SV profiles during acquisition time */
                        ^~~~~~~~~~~~~~",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,868,2020-10-03T02:21:07Z,2021-04-07T01:57:09Z,2021-04-07T01:57:09Z,CLOSED,False,65,60,16,https://github.com/benjaminaltieri,Replace zero is variable arrays with macro for custom replacements [DO NOT MERGE],2,[],https://github.com/swift-nav/libsbp/pull/868,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/868,This would allow a user to define SBP_VARIABLE_ARRAY_SIZE before including sbp.h. This would allow for variable arrays to have either 0 or nothing to be used.,This would allow a user to define SBP_VARIABLE_ARRAY_SIZE before including sbp.h. This would allow for variable arrays to have either 0 or nothing to be used.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,869,2020-10-04T03:53:08Z,2021-04-07T01:57:14Z,2021-04-07T01:57:14Z,CLOSED,False,149,0,16,https://github.com/benjaminaltieri,Optional variable sized arrays,2,[],https://github.com/swift-nav/libsbp/pull/869,https://github.com/benjaminaltieri,1,https://github.com/swift-nav/libsbp/pull/869,"Introduces SBP_DISABLE_VARIABLE_SIZED_ARRAYS define to allow for variable sized arrays to be excluded.
In order to exclude, a user must define the above macro before including any header from include/libsbp either in source or via compiler define.","Introduces SBP_DISABLE_VARIABLE_SIZED_ARRAYS define to allow for variable sized arrays to be excluded.
In order to exclude, a user must define the above macro before including any header from include/libsbp either in source or via compiler define.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,869,2020-10-04T03:53:08Z,2021-04-07T01:57:14Z,2021-04-07T01:57:14Z,CLOSED,False,149,0,16,https://github.com/benjaminaltieri,Optional variable sized arrays,2,[],https://github.com/swift-nav/libsbp/pull/869,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/869#issuecomment-703862433,"Introduces SBP_DISABLE_VARIABLE_SIZED_ARRAYS define to allow for variable sized arrays to be excluded.
In order to exclude, a user must define the above macro before including any header from include/libsbp either in source or via compiler define.",Let's add a compile with -Wpendantic -Werror to the travis matrix?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,869,2020-10-04T03:53:08Z,2021-04-07T01:57:14Z,2021-04-07T01:57:14Z,CLOSED,False,149,0,16,https://github.com/benjaminaltieri,Optional variable sized arrays,2,[],https://github.com/swift-nav/libsbp/pull/869,https://github.com/benjaminaltieri,3,https://github.com/swift-nav/libsbp/pull/869#issuecomment-703863582,"Introduces SBP_DISABLE_VARIABLE_SIZED_ARRAYS define to allow for variable sized arrays to be excluded.
In order to exclude, a user must define the above macro before including any header from include/libsbp either in source or via compiler define.","Let's add a compile with -Wpendantic -Werror to the travis matrix?

yea I don't think CI compiles when the SBP_DISABLE_VARIABLE_SIZED_ARRAYS define is enabled. this is mostly a proof of concept but if it looks worth pursuing we will need to add a step to specifically test this configuration",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,869,2020-10-04T03:53:08Z,2021-04-07T01:57:14Z,2021-04-07T01:57:14Z,CLOSED,False,149,0,16,https://github.com/benjaminaltieri,Optional variable sized arrays,2,[],https://github.com/swift-nav/libsbp/pull/869,https://github.com/mfine,4,https://github.com/swift-nav/libsbp/pull/869#issuecomment-703872777,"Introduces SBP_DISABLE_VARIABLE_SIZED_ARRAYS define to allow for variable sized arrays to be excluded.
In order to exclude, a user must define the above macro before including any header from include/libsbp either in source or via compiler define.",Nice job!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,870,2020-10-08T17:08:21Z,2020-10-09T16:00:12Z,2020-10-09T16:00:13Z,MERGED,True,19,20,6,https://github.com/silverjam,"Per graphic design rec., switch to Roboto",5,[],https://github.com/swift-nav/libsbp/pull/870,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/870,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,870,2020-10-08T17:08:21Z,2020-10-09T16:00:12Z,2020-10-09T16:00:13Z,MERGED,True,19,20,6,https://github.com/silverjam,"Per graphic design rec., switch to Roboto",5,[],https://github.com/swift-nav/libsbp/pull/870,https://github.com/switanis,2,https://github.com/swift-nav/libsbp/pull/870#issuecomment-705706988,,Can you generate the document using Roboto so we can see if it looks correctly?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,870,2020-10-08T17:08:21Z,2020-10-09T16:00:12Z,2020-10-09T16:00:13Z,MERGED,True,19,20,6,https://github.com/silverjam,"Per graphic design rec., switch to Roboto",5,[],https://github.com/swift-nav/libsbp/pull/870,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/870#issuecomment-705707248,,"Can you generate the document using Roboto so we can see if it looks correctly?

https://github.com/swift-nav/libsbp/blob/57e4cc1076e6fb8f22a7434ded6d0a3bb0f904ee/docs/sbp.pdf",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,870,2020-10-08T17:08:21Z,2020-10-09T16:00:12Z,2020-10-09T16:00:13Z,MERGED,True,19,20,6,https://github.com/silverjam,"Per graphic design rec., switch to Roboto",5,[],https://github.com/swift-nav/libsbp/pull/870,https://github.com/switanis,4,https://github.com/swift-nav/libsbp/pull/870#issuecomment-705709801,,"I like it. Looks much better.
But the font size is too big for me.

What's the size there?
I'll also send this to Colin if he has any other suggestions.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,870,2020-10-08T17:08:21Z,2020-10-09T16:00:12Z,2020-10-09T16:00:13Z,MERGED,True,19,20,6,https://github.com/silverjam,"Per graphic design rec., switch to Roboto",5,[],https://github.com/swift-nav/libsbp/pull/870,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/870#issuecomment-705913882,,"@switanis adjusted the font size, let me know if this looks better: https://github.com/swift-nav/libsbp/blob/c283e73c69eb04077300fd5310b094ccfd35ca0b/docs/sbp.pdf",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,871,2020-10-08T18:42:55Z,2020-10-08T19:17:13Z,2020-10-09T01:20:48Z,MERGED,True,20,20,9,https://github.com/GuillaumeDec,Guillaume/sen 444/change age gnss type in solnmeta,3,[],https://github.com/swift-nav/libsbp/pull/871,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/871,Change age_gnss type to u32 in msg_soln_meta,Change age_gnss type to u32 in msg_soln_meta,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,871,2020-10-08T18:42:55Z,2020-10-08T19:17:13Z,2020-10-09T01:20:48Z,MERGED,True,20,20,9,https://github.com/GuillaumeDec,Guillaume/sen 444/change age gnss type in solnmeta,3,[],https://github.com/swift-nav/libsbp/pull/871,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/871#issuecomment-705910459,Change age_gnss type to u32 in msg_soln_meta,"Please take a few moments next time to fix the pull request title before merging.  The Guillaume/sen 444/ prefix wastes 18 characters of git's 50 character commit summary and has no value to someone reading a commit log summary-- so please remove the username prefix and push the JIRA tag to the end, for example: change age gnss type in solnmeta [SEN-44]",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,872,2020-10-08T21:10:39Z,2020-10-14T22:01:53Z,2020-10-14T22:01:54Z,MERGED,True,15,1,1,https://github.com/denniszollo,"odometry: add flags for fwd, park and reverse",2,[],https://github.com/swift-nav/libsbp/pull/872,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/872,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,873,2020-10-12T22:16:26Z,2020-10-12T23:45:17Z,2020-10-12T23:45:18Z,MERGED,True,8,8,2,https://github.com/GuillaumeDec,update sol in default sensor type [SEN-448],4,[],https://github.com/swift-nav/libsbp/pull/873,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/873,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,873,2020-10-12T22:16:26Z,2020-10-12T23:45:17Z,2020-10-12T23:45:18Z,MERGED,True,8,8,2,https://github.com/GuillaumeDec,update sol in default sensor type [SEN-448],4,[],https://github.com/swift-nav/libsbp/pull/873,https://github.com/switanis,2,https://github.com/swift-nav/libsbp/pull/873#issuecomment-707376323,,LGTM,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,874,2020-10-14T22:11:00Z,2020-10-14T22:11:09Z,2020-10-14T22:11:10Z,MERGED,True,1,15,1,https://github.com/denniszollo,"Revert ""odometry: add flags for fwd, park and reverse""",1,[],https://github.com/swift-nav/libsbp/pull/874,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/874,"Reverts #872
I made a mistake in yaml and didn't commit the generated files yet.","Reverts #872
I made a mistake in yaml and didn't commit the generated files yet.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,875,2020-10-16T09:11:26Z,2020-10-19T16:13:09Z,2020-10-19T16:13:10Z,MERGED,True,20,18,11,https://github.com/reimerix,[SEN-456] Update documentation for week rollover on odometry message timestamps,4,[],https://github.com/swift-nav/libsbp/pull/875,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/875,"CPU local time messages need to rollover their timestamp after one week. While the documentation for MSG_IMU_RAW stated this, this requirement was missing for MSG_ODOMETRY and MSG_WHEELTICK.","CPU local time messages need to rollover their timestamp after one week. While the documentation for MSG_IMU_RAW stated this, this requirement was missing for MSG_ODOMETRY and MSG_WHEELTICK.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,876,2020-10-16T19:29:47Z,2020-10-16T20:59:08Z,2020-10-16T20:59:09Z,MERGED,True,46,2,3,https://github.com/denniszollo,Dzollo/vehicle metadata flags,2,[],https://github.com/swift-nav/libsbp/pull/876,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/876,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,877,2020-10-25T20:20:20Z,2020-11-21T08:37:01Z,2020-11-21T08:37:02Z,MERGED,True,87,89,9,https://github.com/dgburr,Specify that 0xFFFF is used to indicate invalid PDOP/HDOP/VDOP,4,[],https://github.com/swift-nav/libsbp/pull/877,https://github.com/dgburr,1,https://github.com/swift-nav/libsbp/pull/877,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,877,2020-10-25T20:20:20Z,2020-11-21T08:37:01Z,2020-11-21T08:37:02Z,MERGED,True,87,89,9,https://github.com/dgburr,Specify that 0xFFFF is used to indicate invalid PDOP/HDOP/VDOP,4,[],https://github.com/swift-nav/libsbp/pull/877,https://github.com/dgburr,2,https://github.com/swift-nav/libsbp/pull/877#issuecomment-716844362,,"Changes LGTM. Do you need a hand with updating the generated files?

Yes, it would be great if you could help out (I thought it would be some automatically by Jenkins).",True,{'THUMBS_UP': ['https://github.com/reimerix']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,877,2020-10-25T20:20:20Z,2020-11-21T08:37:01Z,2020-11-21T08:37:02Z,MERGED,True,87,89,9,https://github.com/dgburr,Specify that 0xFFFF is used to indicate invalid PDOP/HDOP/VDOP,4,[],https://github.com/swift-nav/libsbp/pull/877,https://github.com/reimerix,3,https://github.com/swift-nav/libsbp/pull/877#issuecomment-717301598,,"@dgburr I've added the generated files to this PR. You can build them by:
 docker pull swiftnav/libsbp-build:latest-master
docker run  -v $(pwd):/mnt/workspace -i -t swiftnav/libsbp-build:latest-master
and then, in the container:
make -j16 all",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,877,2020-10-25T20:20:20Z,2020-11-21T08:37:01Z,2020-11-21T08:37:02Z,MERGED,True,87,89,9,https://github.com/dgburr,Specify that 0xFFFF is used to indicate invalid PDOP/HDOP/VDOP,4,[],https://github.com/swift-nav/libsbp/pull/877,https://github.com/GuillaumeDec,4,https://github.com/swift-nav/libsbp/pull/877#issuecomment-717544061,,"@dgburr I've added the generated files to this PR. You can build them by:
 docker pull swiftnav/libsbp-build:latest-master
docker run -v $(pwd):/mnt/workspace -i -t swiftnav/libsbp-build:latest-master
and then, in the container:
make -j16 all

-j16 ü§£ üá©üá™ üí£ üòÇ ü•á !!
Note: I like to add --rm to the docker run command to avoid having tens of inactive containers sitting around, unless you wanna keep the container state for some later time of course. But those who can afford -j16 can probably afford TBs of disk space.... ü§£ ü§£",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,878,2020-10-27T14:45:40Z,2020-10-31T07:57:55Z,2020-10-31T07:57:56Z,MERGED,True,15,2,3,https://github.com/reimerix,Bump check submodule,4,[],https://github.com/swift-nav/libsbp/pull/878,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/878,"This PR bumps the check submodule to fix compiling issues on the latest bundled clang on macOS (Apple clang version 12.0.0 (clang-1200.0.32.2)).
Since the new version of libcheck requires CMake > 3.13, this PR also updates the build images to make a current version available.","This PR bumps the check submodule to fix compiling issues on the latest bundled clang on macOS (Apple clang version 12.0.0 (clang-1200.0.32.2)).
Since the new version of libcheck requires CMake > 3.13, this PR also updates the build images to make a current version available.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,879,2020-10-30T05:28:40Z,2020-10-30T07:21:43Z,2020-10-30T07:21:45Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Disable pal test libs by default (#70),1,[],https://github.com/swift-nav/libsbp/pull/879,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/879,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  44ddf55d  ->  60d75d5c

60d75d5c  :  Disable pal test libs by default (#70)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/4218/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  44ddf55d  ->  60d75d5c

60d75d5c  :  Disable pal test libs by default (#70)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/4218/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,880,2020-11-05T03:35:55Z,2020-11-12T23:48:13Z,2020-11-12T23:48:15Z,MERGED,True,289,28,21,https://github.com/GuillaumeDec,[SEN-466] new flags for fixed fuzed rate,11,[],https://github.com/swift-nav/libsbp/pull/880,https://github.com/GuillaumeDec,1,https://github.com/swift-nav/libsbp/pull/880,"Use highest two bits of age_gnss in msg_soln_meta to indicate whether or not its value can be used to retrive the time of measurement of the fuzed solution. Useful in the context of pre-alignment, where the latest GNSS solution is forwarded at fuzed rate and timestamped from the IMU samples.
Use the 5th bit of pos/vel flags to indicate whether the tow is time of measurement (== time of validity) or not. In almost all but the pre-alignment scenario, this is the case, so default value is 0, which also preserves all backward compatibilities.","Use highest two bits of age_gnss in msg_soln_meta to indicate whether or not its value can be used to retrive the time of measurement of the fuzed solution. Useful in the context of pre-alignment, where the latest GNSS solution is forwarded at fuzed rate and timestamped from the IMU samples.
Use the 5th bit of pos/vel flags to indicate whether the tow is time of measurement (== time of validity) or not. In almost all but the pre-alignment scenario, this is the case, so default value is 0, which also preserves all backward compatibilities.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,880,2020-11-05T03:35:55Z,2020-11-12T23:48:13Z,2020-11-12T23:48:15Z,MERGED,True,289,28,21,https://github.com/GuillaumeDec,[SEN-466] new flags for fixed fuzed rate,11,[],https://github.com/swift-nav/libsbp/pull/880,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/880#issuecomment-723261269,"Use highest two bits of age_gnss in msg_soln_meta to indicate whether or not its value can be used to retrive the time of measurement of the fuzed solution. Useful in the context of pre-alignment, where the latest GNSS solution is forwarded at fuzed rate and timestamped from the IMU samples.
Use the 5th bit of pos/vel flags to indicate whether the tow is time of measurement (== time of validity) or not. In almost all but the pre-alignment scenario, this is the case, so default value is 0, which also preserves all backward compatibilities.",I will review; I think we can reconsider the wording a bit,True,"{'THUMBS_UP': ['https://github.com/GuillaumeDec'], 'ROCKET': ['https://github.com/GuillaumeDec']}"
swift-nav/libsbp,https://github.com/swift-nav/libsbp,880,2020-11-05T03:35:55Z,2020-11-12T23:48:13Z,2020-11-12T23:48:15Z,MERGED,True,289,28,21,https://github.com/GuillaumeDec,[SEN-466] new flags for fixed fuzed rate,11,[],https://github.com/swift-nav/libsbp/pull/880,https://github.com/GuillaumeDec,3,https://github.com/swift-nav/libsbp/pull/880#issuecomment-725508493,"Use highest two bits of age_gnss in msg_soln_meta to indicate whether or not its value can be used to retrive the time of measurement of the fuzed solution. Useful in the context of pre-alignment, where the latest GNSS solution is forwarded at fuzed rate and timestamped from the IMU samples.
Use the 5th bit of pos/vel flags to indicate whether the tow is time of measurement (== time of validity) or not. In almost all but the pre-alignment scenario, this is the case, so default value is 0, which also preserves all backward compatibilities.","I will review; I think we can reconsider the wording a bit

@denniszollo  I'm getting antsy at merging üòÖ üòâ üòÅ ...",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,880,2020-11-05T03:35:55Z,2020-11-12T23:48:13Z,2020-11-12T23:48:15Z,MERGED,True,289,28,21,https://github.com/GuillaumeDec,[SEN-466] new flags for fixed fuzed rate,11,[],https://github.com/swift-nav/libsbp/pull/880,https://github.com/GuillaumeDec,4,https://github.com/swift-nav/libsbp/pull/880#issuecomment-726389764,"Use highest two bits of age_gnss in msg_soln_meta to indicate whether or not its value can be used to retrive the time of measurement of the fuzed solution. Useful in the context of pre-alignment, where the latest GNSS solution is forwarded at fuzed rate and timestamped from the IMU samples.
Use the 5th bit of pos/vel flags to indicate whether the tow is time of measurement (== time of validity) or not. In almost all but the pre-alignment scenario, this is the case, so default value is 0, which also preserves all backward compatibilities.","Rename ""Type of Reported tow"" to ""tow type""
Add exposition about the field at the top of the ""navigation"" yaml where we orient people about what is going on and what ""Time of measurement"" means and what ""other"" means.  Time of Measurement means only ONE thing, ""other"" could be a couple of things.



& 2. done ‚úÖ",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,880,2020-11-05T03:35:55Z,2020-11-12T23:48:13Z,2020-11-12T23:48:15Z,MERGED,True,289,28,21,https://github.com/GuillaumeDec,[SEN-466] new flags for fixed fuzed rate,11,[],https://github.com/swift-nav/libsbp/pull/880,https://github.com/denniszollo,5,https://github.com/swift-nav/libsbp/pull/880#issuecomment-726405835,"Use highest two bits of age_gnss in msg_soln_meta to indicate whether or not its value can be used to retrive the time of measurement of the fuzed solution. Useful in the context of pre-alignment, where the latest GNSS solution is forwarded at fuzed rate and timestamped from the IMU samples.
Use the 5th bit of pos/vel flags to indicate whether the tow is time of measurement (== time of validity) or not. In almost all but the pre-alignment scenario, this is the case, so default value is 0, which also preserves all backward compatibilities.",LGTM.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,881,2020-11-05T09:21:10Z,2020-11-05T23:29:07Z,2020-11-05T23:29:09Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - FindPROJ FindSqlite3,1,[],https://github.com/swift-nav/libsbp/pull/881,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/881,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  60d75d5c  ->  0f6c450a

0f6c450a  :  FindPROJ FindSqlite3

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/4305/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  60d75d5c  ->  0f6c450a

0f6c450a  :  FindPROJ FindSqlite3

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/4305/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,882,2020-11-10T02:32:34Z,2020-11-11T00:56:40Z,2020-11-11T00:56:43Z,CLOSED,False,2202,4,26,https://github.com/jbangelo,Add Rust message handlers,2,[],https://github.com/swift-nav/libsbp/pull/882,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/882,"This PR adds the ability to register message handler objects to the rust parser. Each handler object is able to handle a single message type. As the parser processes SBP messages it calls the appropriate message handler for each message.
This is done by defining a trait (HandleSbpMessage) which has a single function that takes in a reference to a SBP message enum. We then define a struct (Handler) which is generic over an implementor of SBPMessage and an implementor of FnMut(&Msg). We then provide implementations of Handler for each SBP message type, these implementations match on the enum variant that represents the corresponding message type and calls the function object with the unwrapped message or does nothing if the enum variant doesn't match. These implementations are stil generic over the FnMut parameter. Finally the parser has a function that takes in a FnMut object and wraps it in a Handler instance and stores that in a Box<dyn HandleSbpMessage> and stores those in a vector. The parser had to be further modified to explicitly state the lifetime requirements of the handler objects.","This PR adds the ability to register message handler objects to the rust parser. Each handler object is able to handle a single message type. As the parser processes SBP messages it calls the appropriate message handler for each message.
This is done by defining a trait (HandleSbpMessage) which has a single function that takes in a reference to a SBP message enum. We then define a struct (Handler) which is generic over an implementor of SBPMessage and an implementor of FnMut(&Msg). We then provide implementations of Handler for each SBP message type, these implementations match on the enum variant that represents the corresponding message type and calls the function object with the unwrapped message or does nothing if the enum variant doesn't match. These implementations are stil generic over the FnMut parameter. Finally the parser has a function that takes in a FnMut object and wraps it in a Handler instance and stores that in a Box<dyn HandleSbpMessage> and stores those in a vector. The parser had to be further modified to explicitly state the lifetime requirements of the handler objects.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,883,2020-11-14T04:13:34Z,2020-11-16T21:09:04Z,2020-11-16T21:09:05Z,MERGED,True,451,7928,65,https://github.com/jbangelo,Clean up Rust parser implementation,4,[],https://github.com/swift-nav/libsbp/pull/883,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/883,This PR cleans up the Rust parser a bit by making it own the reader object.,This PR cleans up the Rust parser a bit by making it own the reader object.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/884,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct","The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/884#issuecomment-736071874,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct","The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct

Order of fields would make sense for json2json to fail (I think?)-- the comparison there should probably use jq or something that doesn't a non-order sensitive compare.  For json2sbp I think it's comparing the binary SBP data that's produced?  If that's the case, order shouldn't matter there.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/884#issuecomment-738207507,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct","I changed the tests to use serde to compare the json values, so order won't matter. it looks like they are equal now except for the treatment of floats that I mentioned earlier - https://travis-ci.org/github/swift-nav/libsbp/jobs/747307118#L1557",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/notoriaga,4,https://github.com/swift-nav/libsbp/pull/884#issuecomment-744601302,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct","I see why it's done that way, to reduce code reuse, but it still seems a little backwards.

Yeah that was the reasoning. If you build async-first you have block_on_stream to convert to an iterator and stream::iter to go the other direction.
I think either way you are going to pay some cost going one direction to the other. If you start async and expose a sync interface built on top, you're asking sync users to pay for the extra compile time like you mentioned. You also ask them to pay the cost of running an executor. In this case it's the LocalPool executor from the futures crate. That overhead should be pretty minimal, it's a small single threaded executor ... appropriate to poll strictly I/O-bound futures that do very little work in between I/O actions.
Starting sync first and building an async implementation on top is a little different. Imagine you have a natively sync -
pub fn iter_messages<R: Read>(input: R) -> impl Iterator<Item = Result<SBP>>;

I think building a stream_messages variant with the above mentioned block_on_stream would result in a pretty sub-optimal async implementation. This is because our sync iter_messages returns an iterator whose next() method could block (to perform a read). This is problematic because you shouldn't call blocking code from async code (because you'll block the executor, possibly resulting in deadlock). So really what we would have to do is wrap each call to next() in something like spawn_blocking from tokio (not sure what the pure futures equivalent is). That will dispatch each call to next to a dedicated pool of threads for blocking calls. But really, if the user is already writing an async app, they shouldn't have to do that. A native stream_messages performs non-blocking reads and would not have that problem.
With that in mind, I picked async first because the cost sync users pay is mostly compile time, while the cost to async users in the other direction would mostly be runtime.

Is this a typical approach in other libraries that have both blocking and async interfaces, to have the async interface be the default?

Sort of? Take reqwest for example. It's implementation is async, but it provides a blocking wrapper. But that's an http client so it's definitely more async in nature than what we have here. There is an old discussion on this topic from when async was being developed here - rustasync/team#32.
That being said, I don't think it'd actually be that hard to have a native version of each. The Encoder/Decoder traits themselves are sync. It's just the FramedRead/FramedWrite parts that operate on AsyncRead/AsyncWrite. We could write SyncFramedRead/SyncFramedWrite which would operate the same way but on blocking IO, and then probably reuse everything we have setup with the encoding/decoding.
TLDR:

Wanted to keep things DRY
Both conversions sync -> async and async -> sync are not 0 cost
async -> sync cost appears to mostly be compile time while sync -> async appears to mostly be runtime",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/notoriaga,5,https://github.com/swift-nav/libsbp/pull/884#issuecomment-745447786,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct","I was able to get something together such that if you want sync, it pulls in no async stuff and vice versa - #896
I had to sort of cannibalize the futures_codec crate in order to make the changes to add a sync FramedRead, as well as get the feature gating right, but it seems to work",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/884#issuecomment-747110182,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct","I had to sort of cannibalize the futures_codec crate in order to make the changes to add a sync FramedRead, as well as get the feature gating right, but it seems to work

Is this something we could upstream to the futures_codec crate?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/notoriaga,7,https://github.com/swift-nav/libsbp/pull/884#issuecomment-747639222,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct","Is this something we could upstream to the futures_codec crate?

Hard to say, the changes seem kind of out of scope for futures_codec seeing as it's not really related to futures at all. Basically the changes would involve adding blocking::FramedRead and then setting up features such that we could pull in just that and the Encoder/Decoder traits and ignore all the async stuff.
I could fork the crate add try that. Even if we can't get it upstreamed it's still probably cleaner to have this stuff out of sbp itself",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/silverjam,8,https://github.com/swift-nav/libsbp/pull/884#issuecomment-747824762,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct","Is this something we could upstream to the futures_codec crate?

Hard to say, the changes seem kind of out of scope for futures_codec seeing as it's not really related to futures at all. Basically the changes would involve adding blocking::FramedRead and then setting up features such that we could pull in just that and the Encoder/Decoder traits and ignore all the async stuff.
I could fork the crate add try that. Even if we can't get it upstreamed it's still probably cleaner to have this stuff out of sbp itself

We can always send a PR to them and see what they say, even if they're not keen on it, they may have other suggestions.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/silverjam,9,https://github.com/swift-nav/libsbp/pull/884#issuecomment-759136767,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct",@jbangelo Following up: @notoriaga proposed changes to the futures-codec people to support our use case and they didn't seem interested-- to resolve this we created the dencode crate (which is a fork of futures-codec) but adds support for our use case,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,884,2020-11-25T01:41:16Z,2021-01-17T21:25:22Z,2021-01-17T21:25:23Z,MERGED,True,14124,6709,101,https://github.com/notoriaga,Add async rust parser [INFRA-324],25,[],https://github.com/swift-nav/libsbp/pull/884,https://github.com/silverjam,10,https://github.com/swift-nav/libsbp/pull/884#issuecomment-759158294,"The json2sbp/json2json tests aren't passing, but I think that's because this version outputs the json in a different order than the old version. This version outputs the common fields first, then the actual message. I'm not sure what the order of the original is, it seems like the two get mixed somehow. I think that's because the default implementation of the serde_json::Value::Object is technically unordered. The original version would convert the messages into Values then insert the extra fields. This version just directly serializes a struct, which should respect the order of the fields defined in the struct","@jbangelo note, the CI failure is expected, we haven't yet updated the thresholds for the benchmarks",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,885,2020-12-01T18:46:48Z,2021-03-08T23:51:25Z,2021-03-08T23:51:25Z,MERGED,True,953,1,18,https://github.com/gsmcmullin,Add generic system status reporting message [AMZ-168],12,[],https://github.com/swift-nav/libsbp/pull/885,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/885,"Concrete message format suggestion for new status reporting system.
https://swift-nav.atlassian.net/wiki/spaces/~gareth/pages/1121910907/Status+reporting+requirements+Request+for+comments
If this is adopted in principle, more work will be required on the generators to show the value enumerations.
It would also be useful to generate lookup tables to convert these back to strings in the various language bindings.","Concrete message format suggestion for new status reporting system.
https://swift-nav.atlassian.net/wiki/spaces/~gareth/pages/1121910907/Status+reporting+requirements+Request+for+comments
If this is adopted in principle, more work will be required on the generators to show the value enumerations.
It would also be useful to generate lookup tables to convert these back to strings in the various language bindings.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,886,2020-12-04T22:12:36Z,2020-12-12T01:34:22Z,2020-12-12T01:34:23Z,MERGED,True,3,0,3,https://github.com/lkloh,Add B2a to list of signals available in MSG_OBS,4,['Message/Code Generation'],https://github.com/swift-nav/libsbp/pull/886,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/886,"Add B2a to list of signals available:

New docs:
sbp.pdf","Add B2a to list of signals available:

New docs:
sbp.pdf",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,887,2020-12-04T22:51:35Z,2021-04-07T20:12:10Z,2021-04-07T20:12:10Z,MERGED,True,6,2,3,https://github.com/denniszollo,Dzollo/sender id notes,2,[],https://github.com/swift-nav/libsbp/pull/887,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/887,@reimerix,@reimerix,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,887,2020-12-04T22:51:35Z,2021-04-07T20:12:10Z,2021-04-07T20:12:10Z,MERGED,True,6,2,3,https://github.com/denniszollo,Dzollo/sender id notes,2,[],https://github.com/swift-nav/libsbp/pull/887,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/887#issuecomment-739077146,@reimerix,screenshots to save you time on review:,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,888,2020-12-04T23:40:23Z,2021-04-07T20:07:59Z,2021-04-07T20:08:00Z,MERGED,True,0,6,2,https://github.com/denniszollo,Dzollo/ins status one page,2,[],https://github.com/swift-nav/libsbp/pull/888,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/888,Looks like this now.  It used to overflow the page.,Looks like this now.  It used to overflow the page.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,889,2020-12-09T00:03:32Z,2020-12-10T01:36:49Z,2020-12-10T01:36:49Z,MERGED,True,9,15,4,https://github.com/adammacudzinski,Add environment markers to requirements.txt,2,[],https://github.com/swift-nav/libsbp/pull/889,https://github.com/adammacudzinski,1,https://github.com/swift-nav/libsbp/pull/889,"PEP-508 dictates how dependencies are expected to be declared in python packages. Instead of embedding logic into setup.py to dynamically generate the dependency list based on predefined rules, PEP-508 requires that this logic be declared via  Environment Markers embedded in the dependency specification itself.
Since popular Python dependency managers such as Pipenv and Poetry expect packages to abide by PEP-508, this PR will allow sbp to be installable error-free using these tools, whereas currently the poetry install operation is failing with the following exception:
The current project's Python requirement (>=2.7,<3.0) is not compatible with some of the required packages Python requirement:
    - python-rapidjson requires Python >=3.4, so it will not be satisfied for Python >=2.7,<3.0
  
  Because sbp (3.4.4) depends on python-rapidjson (0.9.1) which requires Python >=3.4, sbp is forbidden.
  So, because lumpdk-py2 depends on sbp (3.4.4), version solving failed.","PEP-508 dictates how dependencies are expected to be declared in python packages. Instead of embedding logic into setup.py to dynamically generate the dependency list based on predefined rules, PEP-508 requires that this logic be declared via  Environment Markers embedded in the dependency specification itself.
Since popular Python dependency managers such as Pipenv and Poetry expect packages to abide by PEP-508, this PR will allow sbp to be installable error-free using these tools, whereas currently the poetry install operation is failing with the following exception:
The current project's Python requirement (>=2.7,<3.0) is not compatible with some of the required packages Python requirement:
    - python-rapidjson requires Python >=3.4, so it will not be satisfied for Python >=2.7,<3.0
  
  Because sbp (3.4.4) depends on python-rapidjson (0.9.1) which requires Python >=3.4, sbp is forbidden.
  So, because lumpdk-py2 depends on sbp (3.4.4), version solving failed.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,890,2020-12-10T20:35:25Z,2020-12-12T02:13:40Z,2020-12-12T02:13:41Z,MERGED,True,4,10,1,https://github.com/apps/dependabot,Bump ini from 1.3.5 to 1.3.7,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/890,https://github.com/apps/dependabot,1,https://github.com/swift-nav/libsbp/pull/890,"Bumps ini from 1.3.5 to 1.3.7.

Commits

c74c8af 1.3.7
024b8b5 update deps, add linting
032fbaf Use Object.create(null) to avoid default object property hazards
2da9039 1.3.6
cfea636 better git push script, before publish instead of after
56d2805 do not allow invalid hazardous string as section name
See full diff in compare view



Maintainer changes
This version was pushed to npm by isaacs, a new releaser for ini since your current version.



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps ini from 1.3.5 to 1.3.7.

Commits

c74c8af 1.3.7
024b8b5 update deps, add linting
032fbaf Use Object.create(null) to avoid default object property hazards
2da9039 1.3.6
cfea636 better git push script, before publish instead of after
56d2805 do not allow invalid hazardous string as section name
See full diff in compare view



Maintainer changes
This version was pushed to npm by isaacs, a new releaser for ini since your current version.



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,891,2020-12-11T22:25:32Z,2020-12-11T23:06:33Z,2020-12-11T23:06:34Z,MERGED,True,2,2,1,https://github.com/silverjam,docker: update docs for most recent tag [INFRA-333],1,[],https://github.com/swift-nav/libsbp/pull/891,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/891,requires: swift-nav/docker-recipes#130,requires: swift-nav/docker-recipes#130,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,893,2020-12-14T22:38:12Z,2020-12-15T18:42:18Z,2020-12-15T18:42:21Z,CLOSED,False,0,0,0,https://github.com/silverjam,trigger travis build,1,[],https://github.com/swift-nav/libsbp/pull/893,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/893,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,894,2020-12-15T08:43:02Z,2021-01-28T04:21:49Z,2021-01-28T04:23:59Z,MERGED,True,249,160,15,https://github.com/silverjam,python: better PEP 508 compliance [INFRA-336],32,[],https://github.com/swift-nav/libsbp/pull/894,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/894,"Expanding on #889 -- make the AOT/JIT features fully optional by specifying their requirements as ""extra"" for the Python package.  This requires that users install the sbp package with either pip install sbp[aot] or pip install sbp[jit] in order to get the native code accelerated sbp.jit package.
This was tested (on Windows) by using the new Windows container to build a wheel for the package, and installing the wheel with the aot extra enabled:
pip install .\sbp-3.4.6-cp37-cp37m-win_amd64.whl[jit]

The purpose of the Windows container was two-fold, to make it easier to build an environment for building the Python wheel package, and to workaround a bug that prevented building, which was a combination of certain NumPy versions and Windows versions after 2004 (see this forum post for more details).
Also, added a FILE metavar/argument to the Python sbp2json tool which defaults to sys.stdin, and make it handle missing ""extra"" features more gracefully.","Expanding on #889 -- make the AOT/JIT features fully optional by specifying their requirements as ""extra"" for the Python package.  This requires that users install the sbp package with either pip install sbp[aot] or pip install sbp[jit] in order to get the native code accelerated sbp.jit package.
This was tested (on Windows) by using the new Windows container to build a wheel for the package, and installing the wheel with the aot extra enabled:
pip install .\sbp-3.4.6-cp37-cp37m-win_amd64.whl[jit]

The purpose of the Windows container was two-fold, to make it easier to build an environment for building the Python wheel package, and to workaround a bug that prevented building, which was a combination of certain NumPy versions and Windows versions after 2004 (see this forum post for more details).
Also, added a FILE metavar/argument to the Python sbp2json tool which defaults to sys.stdin, and make it handle missing ""extra"" features more gracefully.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,894,2020-12-15T08:43:02Z,2021-01-28T04:21:49Z,2021-01-28T04:23:59Z,MERGED,True,249,160,15,https://github.com/silverjam,python: better PEP 508 compliance [INFRA-336],32,[],https://github.com/swift-nav/libsbp/pull/894,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/894#issuecomment-768790045,"Expanding on #889 -- make the AOT/JIT features fully optional by specifying their requirements as ""extra"" for the Python package.  This requires that users install the sbp package with either pip install sbp[aot] or pip install sbp[jit] in order to get the native code accelerated sbp.jit package.
This was tested (on Windows) by using the new Windows container to build a wheel for the package, and installing the wheel with the aot extra enabled:
pip install .\sbp-3.4.6-cp37-cp37m-win_amd64.whl[jit]

The purpose of the Windows container was two-fold, to make it easier to build an environment for building the Python wheel package, and to workaround a bug that prevented building, which was a combination of certain NumPy versions and Windows versions after 2004 (see this forum post for more details).
Also, added a FILE metavar/argument to the Python sbp2json tool which defaults to sys.stdin, and make it handle missing ""extra"" features more gracefully.",Should also fix https://swift-nav.atlassian.net/browse/INFRA-308,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,895,2020-12-15T13:11:33Z,2020-12-15T14:10:38Z,2020-12-15T14:10:39Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - clang-format-diff improvements,1,[],https://github.com/swift-nav/libsbp/pull/895,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/895,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  60d75d5c  ->  75d1b2f1

75d1b2f1  :  clang-format-diff improvements
0f6c450a  :  FindPROJ FindSqlite3

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/4640/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  60d75d5c  ->  75d1b2f1

75d1b2f1  :  clang-format-diff improvements
0f6c450a  :  FindPROJ FindSqlite3

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/4640/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,896,2020-12-15T17:33:07Z,2020-12-27T18:06:18Z,2020-12-27T18:06:18Z,CLOSED,False,990,126,14,https://github.com/notoriaga,Better sync support,1,[],https://github.com/swift-nav/libsbp/pull/896,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/896,"This pulls in what we were using out of futures_codec, and adds blocking::FramedRead. So we can reuse all the encoding/decoding stuff, but backed by a sync Read.
Not really sure what the equality for blocking::FramedWrite would look like. For the async version it's centered around the futures Sink trait, and I'm not sure what the equivalent is for iterators (if it exists). So for now there is no blocking equivalent for the conversion functions","This pulls in what we were using out of futures_codec, and adds blocking::FramedRead. So we can reuse all the encoding/decoding stuff, but backed by a sync Read.
Not really sure what the equality for blocking::FramedWrite would look like. For the async version it's centered around the futures Sink trait, and I'm not sure what the equivalent is for iterators (if it exists). So for now there is no blocking equivalent for the conversion functions",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,897,2020-12-16T17:25:52Z,2020-12-17T00:21:33Z,2020-12-17T00:21:34Z,MERGED,True,9,2,1,https://github.com/silverjam,add workaround for MinGW GCC bug [INFRA-329],2,[],https://github.com/swift-nav/libsbp/pull/897,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/897,Works around a bug introduced in MinGW GCC 4.7 that causes it to ignore the __attribute__((packed)) annotation on structures.  See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=52991 and https://wintermade.it/blog/posts/__attribute__packed-on-windows-is-ignored-with-mingw.html for reference.,Works around a bug introduced in MinGW GCC 4.7 that causes it to ignore the __attribute__((packed)) annotation on structures.  See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=52991 and https://wintermade.it/blog/posts/__attribute__packed-on-windows-is-ignored-with-mingw.html for reference.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,898,2020-12-19T09:05:35Z,2020-12-19T21:40:12Z,2020-12-19T21:40:13Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - clang-format-diff: compare to most recent tag on current branch (#73),1,[],https://github.com/swift-nav/libsbp/pull/898,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/898,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  75d1b2f1  ->  dd161e35

dd161e35  :  clang-format-diff: compare to most recent tag on current branch (#73)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/4723/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  75d1b2f1  ->  dd161e35

dd161e35  :  clang-format-diff: compare to most recent tag on current branch (#73)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/4723/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,899,2020-12-19T21:39:59Z,2020-12-19T21:41:23Z,2020-12-19T21:41:24Z,MERGED,True,1,1,1,https://github.com/silverjam,c: toggle C++ on to fix configure error [INFRA-339],1,[],https://github.com/swift-nav/libsbp/pull/899,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/899,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,899,2020-12-19T21:39:59Z,2020-12-19T21:41:23Z,2020-12-19T21:41:24Z,MERGED,True,1,1,1,https://github.com/silverjam,c: toggle C++ on to fix configure error [INFRA-339],1,[],https://github.com/swift-nav/libsbp/pull/899,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/899#issuecomment-748529215,,"@RReichert FYI, thanks for the fix",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,900,2020-12-21T09:25:17Z,2021-01-13T01:03:27Z,2021-01-13T01:03:28Z,MERGED,True,4352,49645,142,https://github.com/reimerix,[INFRA-340] Replace fail_unless with ck_assert_msg,3,[],https://github.com/swift-nav/libsbp/pull/900,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/900,"This PR replaces most of the fail_unless usages with ck_assert_msg, the former has been deprecated for a use with a message in the check library.
Most of the format warnings in the generated C tests are gone. However, a couple of messages like
warning: format '%d' expects argument of type 'int', but argument 5 has type 'u64 {aka long unsigned int}

remain.
I noticed that some of the auto tests were not re-generated and deleted the respective tests. Hence the large number of changed lines.","This PR replaces most of the fail_unless usages with ck_assert_msg, the former has been deprecated for a use with a message in the check library.
Most of the format warnings in the generated C tests are gone. However, a couple of messages like
warning: format '%d' expects argument of type 'int', but argument 5 has type 'u64 {aka long unsigned int}

remain.
I noticed that some of the auto tests were not re-generated and deleted the respective tests. Hence the large number of changed lines.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,900,2020-12-21T09:25:17Z,2021-01-13T01:03:27Z,2021-01-13T01:03:28Z,MERGED,True,4352,49645,142,https://github.com/reimerix,[INFRA-340] Replace fail_unless with ck_assert_msg,3,[],https://github.com/swift-nav/libsbp/pull/900,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/900#issuecomment-749134742,"This PR replaces most of the fail_unless usages with ck_assert_msg, the former has been deprecated for a use with a message in the check library.
Most of the format warnings in the generated C tests are gone. However, a couple of messages like
warning: format '%d' expects argument of type 'int', but argument 5 has type 'u64 {aka long unsigned int}

remain.
I noticed that some of the auto tests were not re-generated and deleted the respective tests. Hence the large number of changed lines.","A little concerned that 40k lines where deleted, which looks like a fair number of tests were deleted-- I think @jbangelo ran in to a similar issue with the rust tests?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,900,2020-12-21T09:25:17Z,2021-01-13T01:03:27Z,2021-01-13T01:03:28Z,MERGED,True,4352,49645,142,https://github.com/reimerix,[INFRA-340] Replace fail_unless with ck_assert_msg,3,[],https://github.com/swift-nav/libsbp/pull/900,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/900#issuecomment-749257959,"This PR replaces most of the fail_unless usages with ck_assert_msg, the former has been deprecated for a use with a message in the check library.
Most of the format warnings in the generated C tests are gone. However, a couple of messages like
warning: format '%d' expects argument of type 'int', but argument 5 has type 'u64 {aka long unsigned int}

remain.
I noticed that some of the auto tests were not re-generated and deleted the respective tests. Hence the large number of changed lines.",I did run into similar behavior where rust test cases weren't getting re-generated. I think I ended up deleting the rust test files that were being generated and didn't root cause the issue. Looks like that is what has been done here as well?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,900,2020-12-21T09:25:17Z,2021-01-13T01:03:27Z,2021-01-13T01:03:28Z,MERGED,True,4352,49645,142,https://github.com/reimerix,[INFRA-340] Replace fail_unless with ck_assert_msg,3,[],https://github.com/swift-nav/libsbp/pull/900,https://github.com/reimerix,4,https://github.com/swift-nav/libsbp/pull/900#issuecomment-749559937,"This PR replaces most of the fail_unless usages with ck_assert_msg, the former has been deprecated for a use with a message in the check library.
Most of the format warnings in the generated C tests are gone. However, a couple of messages like
warning: format '%d' expects argument of type 'int', but argument 5 has type 'u64 {aka long unsigned int}

remain.
I noticed that some of the auto tests were not re-generated and deleted the respective tests. Hence the large number of changed lines.","Looks like that is what has been done here as well?

@jbangelo yes, exactly.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,900,2020-12-21T09:25:17Z,2021-01-13T01:03:27Z,2021-01-13T01:03:28Z,MERGED,True,4352,49645,142,https://github.com/reimerix,[INFRA-340] Replace fail_unless with ck_assert_msg,3,[],https://github.com/swift-nav/libsbp/pull/900,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/900#issuecomment-758834436,"This PR replaces most of the fail_unless usages with ck_assert_msg, the former has been deprecated for a use with a message in the check library.
Most of the format warnings in the generated C tests are gone. However, a couple of messages like
warning: format '%d' expects argument of type 'int', but argument 5 has type 'u64 {aka long unsigned int}

remain.
I noticed that some of the auto tests were not re-generated and deleted the respective tests. Hence the large number of changed lines.","Changes look good to me. Thanks @silverjam for root causing the test generation issue. I guess we just need to be more careful about removing test code when test cases in the YAML are removed?

I think a future improvement could be to make sure that all auto generated files get touched somehow.  By (for example) creating a manifest to track generated files and diff'ing that against what's on disk.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,900,2020-12-21T09:25:17Z,2021-01-13T01:03:27Z,2021-01-13T01:03:28Z,MERGED,True,4352,49645,142,https://github.com/reimerix,[INFRA-340] Replace fail_unless with ck_assert_msg,3,[],https://github.com/swift-nav/libsbp/pull/900,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/900#issuecomment-758836832,"This PR replaces most of the fail_unless usages with ck_assert_msg, the former has been deprecated for a use with a message in the check library.
Most of the format warnings in the generated C tests are gone. However, a couple of messages like
warning: format '%d' expects argument of type 'int', but argument 5 has type 'u64 {aka long unsigned int}

remain.
I noticed that some of the auto tests were not re-generated and deleted the respective tests. Hence the large number of changed lines.","Changes look good to me. Thanks @silverjam for root causing the test generation issue. I guess we just need to be more careful about removing test code when test cases in the YAML are removed?

I think a future improvement could be to make sure that all auto generated files get touched somehow. By (for example) creating a manifest to track generated files and diff'ing that against what's on disk.

Created https://swift-nav.atlassian.net/browse/INFRA-347 to track",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,901,2020-12-31T23:32:01Z,2021-01-05T18:15:26Z,2021-01-05T18:16:12Z,MERGED,True,10,1,1,https://github.com/john-michaelburke,[INFRA-335]Add support for Windows in the Java portion of the Makefile.,2,[],https://github.com/swift-nav/libsbp/pull/901,https://github.com/john-michaelburke,1,https://github.com/swift-nav/libsbp/pull/901,"Addressing the issue risen here: #847
How to Run
In order to run in Windows/Unix set the environment variable first:
make java

Changes
For verify-prereq-generator and verify-prereq-java, the checks for python, pip, and gradle have been changed to check for versions and simultaneously validates they are available on the PATH.
Validation
For both Windows and Ubuntu the first two steps required after cloning the libsbp repo.
cd path/to/libsbp/python && python setup.py install
cd path/to/libspb/generator && pip install -r requirements.txt
Windows 10 Setup:
Git: git version 2.30.0.windows.1
Make: GNU Make 3.81
Java: openjdk version ""1.8.0_275""
Gradle: Gradle 6.7.1
Python: Python 2.7.17
Pip: pip 19.2.3 from c:\python27\lib\site-packages\pip (python 2.7)
Ubuntu 20.4 Setup:
Git: git version 2.25.1
Make: GNU Make 4.2.1
Java: openjdk version ""1.8.0_275""
Gradle: Gradle 6.7.1
Python: Python 2.7.18
Pip: pip 20.3.3 from /usr/local/lib/python2.7/dist-packages/pip (python 2.7)","Addressing the issue risen here: #847
How to Run
In order to run in Windows/Unix set the environment variable first:
make java

Changes
For verify-prereq-generator and verify-prereq-java, the checks for python, pip, and gradle have been changed to check for versions and simultaneously validates they are available on the PATH.
Validation
For both Windows and Ubuntu the first two steps required after cloning the libsbp repo.
cd path/to/libsbp/python && python setup.py install
cd path/to/libspb/generator && pip install -r requirements.txt
Windows 10 Setup:
Git: git version 2.30.0.windows.1
Make: GNU Make 3.81
Java: openjdk version ""1.8.0_275""
Gradle: Gradle 6.7.1
Python: Python 2.7.17
Pip: pip 19.2.3 from c:\python27\lib\site-packages\pip (python 2.7)
Ubuntu 20.4 Setup:
Git: git version 2.25.1
Make: GNU Make 4.2.1
Java: openjdk version ""1.8.0_275""
Gradle: Gradle 6.7.1
Python: Python 2.7.18
Pip: pip 20.3.3 from /usr/local/lib/python2.7/dist-packages/pip (python 2.7)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,901,2020-12-31T23:32:01Z,2021-01-05T18:15:26Z,2021-01-05T18:16:12Z,MERGED,True,10,1,1,https://github.com/john-michaelburke,[INFRA-335]Add support for Windows in the Java portion of the Makefile.,2,[],https://github.com/swift-nav/libsbp/pull/901,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/901#issuecomment-754180998,"Addressing the issue risen here: #847
How to Run
In order to run in Windows/Unix set the environment variable first:
make java

Changes
For verify-prereq-generator and verify-prereq-java, the checks for python, pip, and gradle have been changed to check for versions and simultaneously validates they are available on the PATH.
Validation
For both Windows and Ubuntu the first two steps required after cloning the libsbp repo.
cd path/to/libsbp/python && python setup.py install
cd path/to/libspb/generator && pip install -r requirements.txt
Windows 10 Setup:
Git: git version 2.30.0.windows.1
Make: GNU Make 3.81
Java: openjdk version ""1.8.0_275""
Gradle: Gradle 6.7.1
Python: Python 2.7.17
Pip: pip 19.2.3 from c:\python27\lib\site-packages\pip (python 2.7)
Ubuntu 20.4 Setup:
Git: git version 2.25.1
Make: GNU Make 4.2.1
Java: openjdk version ""1.8.0_275""
Gradle: Gradle 6.7.1
Python: Python 2.7.18
Pip: pip 20.3.3 from /usr/local/lib/python2.7/dist-packages/pip (python 2.7)",Fixes #847,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,902,2021-01-15T23:50:59Z,2021-04-22T20:22:33Z,2021-04-22T20:22:33Z,MERGED,True,792,26,31,https://github.com/jbangelo,[SSR-225] Add Satellite APC message,2,[],https://github.com/swift-nav/libsbp/pull/902,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/902,"This adds a message definition for satellite antenna phase center corrections. The message contains the mean phase center offset and elevation dependent variations for a particular satellite signal. The correction data is based on the IGS ANTEX files, and the field definition references the file format where relevant. Due to the small size of the corrections for a single signal multiple corrections can optionally packed into a single SBP frame.
PDF documentation for the new message:","This adds a message definition for satellite antenna phase center corrections. The message contains the mean phase center offset and elevation dependent variations for a particular satellite signal. The correction data is based on the IGS ANTEX files, and the field definition references the file format where relevant. Due to the small size of the corrections for a single signal multiple corrections can optionally packed into a single SBP frame.
PDF documentation for the new message:",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,902,2021-01-15T23:50:59Z,2021-04-22T20:22:33Z,2021-04-22T20:22:33Z,MERGED,True,792,26,31,https://github.com/jbangelo,[SSR-225] Add Satellite APC message,2,[],https://github.com/swift-nav/libsbp/pull/902,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/902#issuecomment-761260417,"This adds a message definition for satellite antenna phase center corrections. The message contains the mean phase center offset and elevation dependent variations for a particular satellite signal. The correction data is based on the IGS ANTEX files, and the field definition references the file format where relevant. Due to the small size of the corrections for a single signal multiple corrections can optionally packed into a single SBP frame.
PDF documentation for the new message:",As usual I split out the auto-genned files into a separate commit to make reviewing easier.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,902,2021-01-15T23:50:59Z,2021-04-22T20:22:33Z,2021-04-22T20:22:33Z,MERGED,True,792,26,31,https://github.com/jbangelo,[SSR-225] Add Satellite APC message,2,[],https://github.com/swift-nav/libsbp/pull/902,https://github.com/ljbade,3,https://github.com/swift-nav/libsbp/pull/902#issuecomment-761902073,"This adds a message definition for satellite antenna phase center corrections. The message contains the mean phase center offset and elevation dependent variations for a particular satellite signal. The correction data is based on the IGS ANTEX files, and the field definition references the file format where relevant. Due to the small size of the corrections for a single signal multiple corrections can optionally packed into a single SBP frame.
PDF documentation for the new message:",I thought you mentioned that different constellations had a different number of PCV values?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,902,2021-01-15T23:50:59Z,2021-04-22T20:22:33Z,2021-04-22T20:22:33Z,MERGED,True,792,26,31,https://github.com/jbangelo,[SSR-225] Add Satellite APC message,2,[],https://github.com/swift-nav/libsbp/pull/902,https://github.com/jbangelo,4,https://github.com/swift-nav/libsbp/pull/902#issuecomment-763033905,"This adds a message definition for satellite antenna phase center corrections. The message contains the mean phase center offset and elevation dependent variations for a particular satellite signal. The correction data is based on the IGS ANTEX files, and the field definition references the file format where relevant. Due to the small size of the corrections for a single signal multiple corrections can optionally packed into a single SBP frame.
PDF documentation for the new message:",@ljbade The design doc has been updated to address that concern.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,902,2021-01-15T23:50:59Z,2021-04-22T20:22:33Z,2021-04-22T20:22:33Z,MERGED,True,792,26,31,https://github.com/jbangelo,[SSR-225] Add Satellite APC message,2,[],https://github.com/swift-nav/libsbp/pull/902,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/902#issuecomment-768165650,"This adds a message definition for satellite antenna phase center corrections. The message contains the mean phase center offset and elevation dependent variations for a particular satellite signal. The correction data is based on the IGS ANTEX files, and the field definition references the file format where relevant. Due to the small size of the corrections for a single signal multiple corrections can optionally packed into a single SBP frame.
PDF documentation for the new message:",@jbangelo merge?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,903,2021-01-16T18:58:18Z,2021-05-17T18:36:55Z,2021-05-17T18:36:58Z,CLOSED,False,2407,3246,30,https://github.com/jbangelo,[WIP] Take advantage of const generics in the Rust parser,4,['draft'],https://github.com/swift-nav/libsbp/pull/903,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/903,"This is a speculative PR that takes advantage of const generics available in the nightly rust compiler. We might want to consider this (or a similar) change once const generics are stable. This PR is split into two levels of changes with the second completely reworking the first. I'd suggest reviewing the changes in isolation treating the first change as a conservative modification and the second and a more intrusive refactor. We can drop the second set of changes if they are not of interest.
The first change modifies the rust code generator to use fixed size arrays in the message types when the message definition includes a known size. It also changes the existing functions to read fixed size arrays to be generic over array sizes instead of taking array size at runtime. Due to the complexity with our string handling code this change does not modify handling of fixed length strings.
The second change is a much wider refactor of our type parsing code in an attempt to reduce the amount of code that the SBP generator needs to generate. It adds a generic trait called SbpParse for parsing types out of something. We implement this trait for all the basic types and for each message, reading out of a &[u8]. We also have a generic implementation for parsing a Vec<T> or [T; N] for any T which can be parsed. Due to the trait definition we need to have separate types for fixed length strings and unbounded length strings so there can be two different parsing implementations. With the introduction of two string types a trait is added to give them a common interface. All of this has the end result of having to only generate a single parse function for each message type and remove the parse_array and parse_array_limit functions from the generated code.","This is a speculative PR that takes advantage of const generics available in the nightly rust compiler. We might want to consider this (or a similar) change once const generics are stable. This PR is split into two levels of changes with the second completely reworking the first. I'd suggest reviewing the changes in isolation treating the first change as a conservative modification and the second and a more intrusive refactor. We can drop the second set of changes if they are not of interest.
The first change modifies the rust code generator to use fixed size arrays in the message types when the message definition includes a known size. It also changes the existing functions to read fixed size arrays to be generic over array sizes instead of taking array size at runtime. Due to the complexity with our string handling code this change does not modify handling of fixed length strings.
The second change is a much wider refactor of our type parsing code in an attempt to reduce the amount of code that the SBP generator needs to generate. It adds a generic trait called SbpParse for parsing types out of something. We implement this trait for all the basic types and for each message, reading out of a &[u8]. We also have a generic implementation for parsing a Vec<T> or [T; N] for any T which can be parsed. Due to the trait definition we need to have separate types for fixed length strings and unbounded length strings so there can be two different parsing implementations. With the introduction of two string types a trait is added to give them a common interface. All of this has the end result of having to only generate a single parse function for each message type and remove the parse_array and parse_array_limit functions from the generated code.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,903,2021-01-16T18:58:18Z,2021-05-17T18:36:55Z,2021-05-17T18:36:58Z,CLOSED,False,2407,3246,30,https://github.com/jbangelo,[WIP] Take advantage of const generics in the Rust parser,4,['draft'],https://github.com/swift-nav/libsbp/pull/903,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/903#issuecomment-772926816,"This is a speculative PR that takes advantage of const generics available in the nightly rust compiler. We might want to consider this (or a similar) change once const generics are stable. This PR is split into two levels of changes with the second completely reworking the first. I'd suggest reviewing the changes in isolation treating the first change as a conservative modification and the second and a more intrusive refactor. We can drop the second set of changes if they are not of interest.
The first change modifies the rust code generator to use fixed size arrays in the message types when the message definition includes a known size. It also changes the existing functions to read fixed size arrays to be generic over array sizes instead of taking array size at runtime. Due to the complexity with our string handling code this change does not modify handling of fixed length strings.
The second change is a much wider refactor of our type parsing code in an attempt to reduce the amount of code that the SBP generator needs to generate. It adds a generic trait called SbpParse for parsing types out of something. We implement this trait for all the basic types and for each message, reading out of a &[u8]. We also have a generic implementation for parsing a Vec<T> or [T; N] for any T which can be parsed. Due to the trait definition we need to have separate types for fixed length strings and unbounded length strings so there can be two different parsing implementations. With the introduction of two string types a trait is added to give them a common interface. All of this has the end result of having to only generate a single parse function for each message type and remove the parse_array and parse_array_limit functions from the generated code.","@silverjam The original argument I had, and what motivated me to propose this change, was to make the Rust API more representative of the SBP specification. When then spec says that there are exactly X elements in an array it seems better and more honest for the Rust types representing those messages to mirror that fact. [T; X] is self documenting about the length while a Vec<T> could be any length and you need to read through the protocol documentation to know if it's truly variable length or will always be a fixed length. I acknowledge this is a more philosophical argument, and it might not be worth introducing a breaking API change for this.
Performance impact is a good question. In theory I would expect these changes to give a small boost since we are potentially avoiding a system call to allocate memory (assuming that I address @notoriaga's comment about removing the use of Vec in the array parsing function). On the other hand there might be more CPU used for copying when moving an array as compared to moving a vector. In reality I don't think there would be a noticeable change since these are such small arrays and the messages they are in are relatively small. Though we should test/benchmark this assumption to make sure I haven't introduced some slow down.
To be honest this is a fair amount of change for tweaking about 15 messages by my count.",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,903,2021-01-16T18:58:18Z,2021-05-17T18:36:55Z,2021-05-17T18:36:58Z,CLOSED,False,2407,3246,30,https://github.com/jbangelo,[WIP] Take advantage of const generics in the Rust parser,4,['draft'],https://github.com/swift-nav/libsbp/pull/903,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/903#issuecomment-842544070,"This is a speculative PR that takes advantage of const generics available in the nightly rust compiler. We might want to consider this (or a similar) change once const generics are stable. This PR is split into two levels of changes with the second completely reworking the first. I'd suggest reviewing the changes in isolation treating the first change as a conservative modification and the second and a more intrusive refactor. We can drop the second set of changes if they are not of interest.
The first change modifies the rust code generator to use fixed size arrays in the message types when the message definition includes a known size. It also changes the existing functions to read fixed size arrays to be generic over array sizes instead of taking array size at runtime. Due to the complexity with our string handling code this change does not modify handling of fixed length strings.
The second change is a much wider refactor of our type parsing code in an attempt to reduce the amount of code that the SBP generator needs to generate. It adds a generic trait called SbpParse for parsing types out of something. We implement this trait for all the basic types and for each message, reading out of a &[u8]. We also have a generic implementation for parsing a Vec<T> or [T; N] for any T which can be parsed. Due to the trait definition we need to have separate types for fixed length strings and unbounded length strings so there can be two different parsing implementations. With the introduction of two string types a trait is added to give them a common interface. All of this has the end result of having to only generate a single parse function for each message type and remove the parse_array and parse_array_limit functions from the generated code.","I'm going to close this. It doesn't seem like a good trade off at the moment, but we should keep this in mind for any future large scale refactors we do of the Rust parser code.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,904,2021-01-17T03:18:26Z,2021-01-20T00:14:04Z,2021-01-20T00:14:05Z,MERGED,True,4,2,2,https://github.com/jbangelo,Fix the documented offset for fixed length arrays,2,[],https://github.com/swift-nav/libsbp/pull/904,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/904,"The PDF docs weren't properly displaying the offset of fixed length arrays (and fixed length strings) nested in unbounded length arrays. This change fixes that.
Before:

After:","The PDF docs weren't properly displaying the offset of fixed length arrays (and fixed length strings) nested in unbounded length arrays. This change fixes that.
Before:

After:",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/905,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/notoriaga,2,https://github.com/swift-nav/libsbp/pull/905#issuecomment-767918993,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks",Test release - https://github.com/swift-nav/libsbp/releases/tag/v0.0.0-test,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/905#issuecomment-768001589,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","@notoriaga I'm only seeing the Rust workflows running, is there something we need to do to enable the other workflows?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/notoriaga,4,https://github.com/swift-nav/libsbp/pull/905#issuecomment-768437242,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","@notoriaga I'm only seeing the Rust workflows running, is there something we need to do to enable the other workflows?

I was trying out using these as triggers for each language -
on:
  push:
    tags:
      - ""*""
  pull_request:
    paths:
      - ""$lang/**""
So the language specific workflows only run on prs that change that folder. I removed the travis badge from the Cargo.toml which is why it's building rust. This is obviously not how travis is doing it now, but figured it might be nice to save minutes. It runs everything on tags just to be sure. If we wanna run everything on all prs we just need to remove the paths: directive",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/905#issuecomment-772867843,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","@notoriaga I'm only seeing the Rust workflows running, is there something we need to do to enable the other workflows?

I was trying out using these as triggers for each language -
on:
  push:
    tags:
      - ""*""
  pull_request:
    paths:
      - ""$lang/**""
So the language specific workflows only run on prs that change that folder. I removed the travis badge from the Cargo.toml which is why it's building rust. This is obviously not how travis is doing it now, but figured it might be nice to save minutes. It runs everything on tags just to be sure. If we wanna run everything on all prs we just need to remove the paths: directive

Ok, this makes sense, I think it'd also make sense to have a way to force everything to build, (which would be nice for this PR in particular, so we can see everything running).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/905#issuecomment-776282378,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","@notoriaga untagged myself for now, please re-tag me when there's new things to review",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/notoriaga,7,https://github.com/swift-nav/libsbp/pull/905#issuecomment-789308260,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","@silverjam A few updates/questions

Removed the custom actions
Added workflow_dispatch as an event to all the workflows. This lets you trigger them manually. The option doesn't show until you have the workflows on the default branch for some reason. after you do though you can run the workflow on any branch
I changed all the artifacts to .zip to be consistent with how we've been doing it elsewhere. A little worried this might break something, not sure if we have any automation around these release",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/silverjam,8,https://github.com/swift-nav/libsbp/pull/905#issuecomment-789316779,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","@silverjam A few updates/questions
* Removed the custom actions

* Added `workflow_dispatch` as an event to all the workflows. This lets you trigger them manually. The option doesn't show until you have the workflows on the default branch for some reason. after you do though you can run the workflow on any branch


üëç

* I changed all the artifacts to `.zip` to be consistent with how we've been doing it elsewhere. A little worried this might break something, not sure if we have any automation around these release


I don't think this will break anything",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/silverjam,9,https://github.com/swift-nav/libsbp/pull/905#issuecomment-800478259,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks",@notoriaga is this ready for review again?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/notoriaga,10,https://github.com/swift-nav/libsbp/pull/905#issuecomment-800506157,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","@silverjam Yeah should be ready for a look. Only thing I can't figure out is why the rust versions seem to run slower on gh actions compared to travis
Occasionally the benchmarks pass, so wondering if it has to do with gh actions running on shared instances. But I thought that was one of the reasons the benchmarks use docker, for more consistent resource availability across runs",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/notoriaga,11,https://github.com/swift-nav/libsbp/pull/905#issuecomment-803057991,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","please tag the summary with a Jira and then...

@silverjam do you mean by adding the ticket to the pr name?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,905,2021-01-26T23:36:11Z,2021-03-19T19:32:27Z,2021-03-19T19:32:27Z,MERGED,True,815,1371,22,https://github.com/notoriaga,Migrate CI to github actions [INFRA-351],47,[],https://github.com/swift-nav/libsbp/pull/905,https://github.com/silverjam,12,https://github.com/swift-nav/libsbp/pull/905#issuecomment-803058362,"For the most part this tries to be a straight port of what travis did, with a few exceptions -

CI is run on a per-language basis. Tags and pushes to master will trigger everything. You can also manually trigger any of the workflows from the Actions tab.
All release artifacts have a .zip extension (previously a mix of .zip and .tar.gz)

This also includes a few miscellaneous changes to get everything working -

Bumps serialport in the js library
Fixes test-javascript make recipe
Benchmark threshold tweaks","please tag the summary with a Jira and then...

@silverjam do you mean by adding the ticket to the pr name?

Yes",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,908,2021-01-30T01:49:50Z,2021-02-01T03:35:49Z,2021-02-01T03:35:50Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - add swiftlets_ENABLE_TEST_LIBS,1,[],https://github.com/swift-nav/libsbp/pull/908,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/908,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  dd161e35  ->  1a33b04f

1a33b04f  :  add swiftlets_ENABLE_TEST_LIBS

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5041/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  dd161e35  ->  1a33b04f

1a33b04f  :  add swiftlets_ENABLE_TEST_LIBS

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5041/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,909,2021-02-02T05:41:27Z,2021-02-07T23:11:03Z,2021-02-07T23:11:04Z,MERGED,True,181,82,16,https://github.com/woodfell,[ESD-1931] Common compile flags,5,[],https://github.com/swift-nav/libsbp/pull/909,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/909,"Update cmake submodule, use CompileOptions for standard set of compiler flags.
Add .clang-tidy from starling repo, fix all highlighted issues
-Wconversion is left disabled due to numerous compiler issues which on inspection are actually fine
Noticed that clang-format isn't set up in this repo. Is that intentional?","Update cmake submodule, use CompileOptions for standard set of compiler flags.
Add .clang-tidy from starling repo, fix all highlighted issues
-Wconversion is left disabled due to numerous compiler issues which on inspection are actually fine
Noticed that clang-format isn't set up in this repo. Is that intentional?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,909,2021-02-02T05:41:27Z,2021-02-07T23:11:03Z,2021-02-07T23:11:04Z,MERGED,True,181,82,16,https://github.com/woodfell,[ESD-1931] Common compile flags,5,[],https://github.com/swift-nav/libsbp/pull/909,https://github.com/woodfell,2,https://github.com/swift-nav/libsbp/pull/909#issuecomment-772883215,"Update cmake submodule, use CompileOptions for standard set of compiler flags.
Add .clang-tidy from starling repo, fix all highlighted issues
-Wconversion is left disabled due to numerous compiler issues which on inspection are actually fine
Noticed that clang-format isn't set up in this repo. Is that intentional?","These are definitely good formatting changes; a lot of this looks very sloppy now that you've cleaned it up.
As a side note, In general I would prefer to have as little swiftnav DSL cmake in this as possible since it is open source and likely to be included in customer code. To that end.
What do swift_set_language_standards and swift_set_compile_options do? Would it make sense to add a comment for a non-swifter about what is happening? Would it be possible to not use the swift-cmake macros and just explicitly do things in a cmake way where you could refer to cmake documentation to follow what is going on?

swift_set_language_standards sets c99 and c++14 compiler options. swift_set_compile_options is a new function in this PR which sets the same warning flags as are used in other projects. It would be possible to define a different set of flags privately in this repo and get rid of the common cmake repo entirely but that was what was causing problems in the first place. Errors would show up in higher level projects from the headers in low level projects like libsbp because the lower level projects were compiled with a less restrictive set of warning flags than the higher level projects. Doing it this way means that errors should show up at the lower level when the initial PR is created rather than when the submodule gets updated in the higher level project.

I'm not wild about disabling the bitifled test since I expect those macros to work. How can I reproduce the failure to fix up either the code generation or the tests to pass?

Response here",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,909,2021-02-02T05:41:27Z,2021-02-07T23:11:03Z,2021-02-07T23:11:04Z,MERGED,True,181,82,16,https://github.com/woodfell,[ESD-1931] Common compile flags,5,[],https://github.com/swift-nav/libsbp/pull/909,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/909#issuecomment-773635163,"Update cmake submodule, use CompileOptions for standard set of compiler flags.
Add .clang-tidy from starling repo, fix all highlighted issues
-Wconversion is left disabled due to numerous compiler issues which on inspection are actually fine
Noticed that clang-format isn't set up in this repo. Is that intentional?","I'm a bit confused why non of the auto generated code needed to be updated, seems like we'd need to update the templates or exclude the auto-gen code from the checks/warnings added in this PR",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,910,2021-02-04T03:40:03Z,2021-02-04T20:16:50Z,2021-02-04T20:16:51Z,MERGED,True,1,1,1,https://github.com/woodfell,Pin npm to version 6 in CI stage,2,[],https://github.com/swift-nav/libsbp/pull/910,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/910,"See npm/cli#2599
Specify npm@latest-6 during CI setup","See npm/cli#2599
Specify npm@latest-6 during CI setup",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,911,2021-02-04T21:27:42Z,2021-02-26T06:10:12Z,2021-02-26T06:10:20Z,CLOSED,False,19528,13229,100,https://github.com/woodfell,[WIP] enable clang-format,9,[],https://github.com/swift-nav/libsbp/pull/911,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/911,I'm really not sure about this. Probably need to exclude the generated code at a minimum,I'm really not sure about this. Probably need to exclude the generated code at a minimum,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,911,2021-02-04T21:27:42Z,2021-02-26T06:10:12Z,2021-02-26T06:10:20Z,CLOSED,False,19528,13229,100,https://github.com/woodfell,[WIP] enable clang-format,9,[],https://github.com/swift-nav/libsbp/pull/911,https://github.com/denniszollo,2,https://github.com/swift-nav/libsbp/pull/911#issuecomment-773707987,I'm really not sure about this. Probably need to exclude the generated code at a minimum,I feel like we could probably either adjust the templates or the .clang_format file so that no changes are required after generation.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,912,2021-02-07T22:21:09Z,2021-02-07T22:23:24Z,2021-02-07T22:23:24Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - [ESD-1931] Common compiler flags (#74),1,[],https://github.com/swift-nav/libsbp/pull/912,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/912,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  1a33b04f  ->  0bc5243c

0bc5243c  :  ESD-1931 Common compiler flags (#74)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5172/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  1a33b04f  ->  0bc5243c

0bc5243c  :  ESD-1931 Common compiler flags (#74)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5172/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,913,2021-02-08T17:43:57Z,2021-02-08T20:05:16Z,2021-02-08T20:05:17Z,MERGED,True,1,1,1,https://github.com/akleeman,Auto submodule update: check - Merge pull request #307 from jflopezfernandez/docs/format-github-readme,1,[],https://github.com/swift-nav/libsbp/pull/913,https://github.com/akleeman,1,https://github.com/swift-nav/libsbp/pull/913,"Automated PR by Jenkins. If CI has passed successfully, merge away!
check  11970a7e  ->  e0576654

e0576654  :  Merge pull request #307 from jflopezfernandez/docs/format-github-readm
375f759d  :  Center Repology distro list
225f2682  :  Testing formatted README.md
0039b975  :  Merge pull request #305 from vtorri/vtorri_zu
5ed64b30  :  add documentation in libcompat.h
9798e5d7  :  Windows: fix size prefix specifiers of printf()

This pull request was created by manual invocation.","Automated PR by Jenkins. If CI has passed successfully, merge away!
check  11970a7e  ->  e0576654

e0576654  :  Merge pull request #307 from jflopezfernandez/docs/format-github-readm
375f759d  :  Center Repology distro list
225f2682  :  Testing formatted README.md
0039b975  :  Merge pull request #305 from vtorri/vtorri_zu
5ed64b30  :  add documentation in libcompat.h
9798e5d7  :  Windows: fix size prefix specifiers of printf()

This pull request was created by manual invocation.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,914,2021-02-11T22:04:54Z,2021-02-11T23:34:53Z,2021-02-11T23:34:54Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - [ESD-1931] remove no strict aliasing from common compile flags (#75),1,[],https://github.com/swift-nav/libsbp/pull/914,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/914,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  0bc5243c  ->  a3be5628

a3be5628  :  ESD-1931 remove no strict aliasing from common compile flags (#75)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5260/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  0bc5243c  ->  a3be5628

a3be5628  :  ESD-1931 remove no strict aliasing from common compile flags (#75)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5260/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,915,2021-02-17T22:00:26Z,2021-02-18T18:22:26Z,2021-02-18T18:22:26Z,MERGED,True,7,6,4,https://github.com/denniszollo,Dzollo/bitfield macros,4,[],https://github.com/swift-nav/libsbp/pull/915,https://github.com/denniszollo,1,https://github.com/swift-nav/libsbp/pull/915,"A few minor fixups for CLANG on my mac post new CFLAGS
run the skipped test bitfield macro test,
better naming of the enumerated values of the ins_type field in ins_status for the future.","A few minor fixups for CLANG on my mac post new CFLAGS
run the skipped test bitfield macro test,
better naming of the enumerated values of the ins_type field in ins_status for the future.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,916,2021-02-26T04:07:21Z,2021-02-26T16:30:00Z,2021-02-26T16:30:00Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,"Auto submodule update: cmake - Trigger submodules, json encoded",1,[],https://github.com/swift-nav/libsbp/pull/916,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/916,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  a3be5628  ->  5786bff8

5786bff8  :  Trigger submodules, json encoded
e7714000  :  Merge pull request #77 from swift-nav/logingood/kick-off-submodules
03207883  :  Trigger submodules

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5384/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  a3be5628  ->  5786bff8

5786bff8  :  Trigger submodules, json encoded
e7714000  :  Merge pull request #77 from swift-nav/logingood/kick-off-submodules
03207883  :  Trigger submodules

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5384/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,916,2021-02-26T04:07:21Z,2021-02-26T16:30:00Z,2021-02-26T16:30:00Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,"Auto submodule update: cmake - Trigger submodules, json encoded",1,[],https://github.com/swift-nav/libsbp/pull/916,https://github.com/akleeman,2,https://github.com/swift-nav/libsbp/pull/916#issuecomment-786751977,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  a3be5628  ->  5786bff8

5786bff8  :  Trigger submodules, json encoded
e7714000  :  Merge pull request #77 from swift-nav/logingood/kick-off-submodules
03207883  :  Trigger submodules

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5384/.",Failing check seems like a travis issue (particularly considering these are all empty commits).,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,917,2021-02-26T13:10:43Z,2021-02-28T09:21:30Z,2021-02-28T09:21:30Z,MERGED,True,2390,483,97,https://github.com/IsakTjernberg,[STEP-217] Add timestamped versions of resource usage messages,3,[],https://github.com/swift-nav/libsbp/pull/917,https://github.com/IsakTjernberg,1,https://github.com/swift-nav/libsbp/pull/917,"Background
New versions of the Linux resource usage messages, with the addition of timestamps.
See section in design doc.
Also fixes a typo in a previously existing message.
The changes are split into two commits for easier review, the first one is for updating the YAML spec and the second commit holds all the changes as automatically generated by the make step. Will squash them on merge.","Background
New versions of the Linux resource usage messages, with the addition of timestamps.
See section in design doc.
Also fixes a typo in a previously existing message.
The changes are split into two commits for easier review, the first one is for updating the YAML spec and the second commit holds all the changes as automatically generated by the make step. Will squash them on merge.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,917,2021-02-26T13:10:43Z,2021-02-28T09:21:30Z,2021-02-28T09:21:30Z,MERGED,True,2390,483,97,https://github.com/IsakTjernberg,[STEP-217] Add timestamped versions of resource usage messages,3,[],https://github.com/swift-nav/libsbp/pull/917,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/917#issuecomment-786846249,"Background
New versions of the Linux resource usage messages, with the addition of timestamps.
See section in design doc.
Also fixes a typo in a previously existing message.
The changes are split into two commits for easier review, the first one is for updating the YAML spec and the second commit holds all the changes as automatically generated by the make step. Will squash them on merge.","Should the old (non-timestamped) messages be marked as deprecated?

Changes look good, and yes, we should follow the existing convention of renaming the old messages to _DEP_A and have the new messages take the name of the old messages.
FYI, if the Rust build fails, the workaround is to clear the caches on Travis.  Hopefully this issue will be gone once we merge #905 (cc @notoriaga).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,917,2021-02-26T13:10:43Z,2021-02-28T09:21:30Z,2021-02-28T09:21:30Z,MERGED,True,2390,483,97,https://github.com/IsakTjernberg,[STEP-217] Add timestamped versions of resource usage messages,3,[],https://github.com/swift-nav/libsbp/pull/917,https://github.com/IsakTjernberg,3,https://github.com/swift-nav/libsbp/pull/917#issuecomment-786898759,"Background
New versions of the Linux resource usage messages, with the addition of timestamps.
See section in design doc.
Also fixes a typo in a previously existing message.
The changes are split into two commits for easier review, the first one is for updating the YAML spec and the second commit holds all the changes as automatically generated by the make step. Will squash them on merge.","Alright, I made the old ids deprecated and re-used their names for the new messages.
@silverjam How do I clear the cache on Travis? Do I need to be signed in there to see that option somewhere? I haven't authorized Travis with my Github account and don't know if I should.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,917,2021-02-26T13:10:43Z,2021-02-28T09:21:30Z,2021-02-28T09:21:30Z,MERGED,True,2390,483,97,https://github.com/IsakTjernberg,[STEP-217] Add timestamped versions of resource usage messages,3,[],https://github.com/swift-nav/libsbp/pull/917,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/917#issuecomment-786967562,"Background
New versions of the Linux resource usage messages, with the addition of timestamps.
See section in design doc.
Also fixes a typo in a previously existing message.
The changes are split into two commits for easier review, the first one is for updating the YAML spec and the second commit holds all the changes as automatically generated by the make step. Will squash them on merge.","Alright, I made the old ids deprecated and re-used their names for the new messages.
@silverjam How do I clear the cache on Travis? Do I need to be signed in there to see that option somewhere? I haven't authorized Travis with my Github account and don't know if I should.

It's fine to authorize your account with Travis, it's still used for quite a few things (even though we're trying to phase it out).  Once you log in the cache control is pretty easy to find:

Then:",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,918,2021-02-27T02:38:25Z,2021-03-03T01:41:43Z,2021-03-03T01:41:43Z,MERGED,True,10,0,2,https://github.com/lkloh,Update OSR flag in the SBP docs,2,[],https://github.com/swift-nav/libsbp/pull/918,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/918,"We recently updated the OSR flags, update the docs to match too.
Relevant part of change in docs

Related PR
swift-nav/starling#4741","We recently updated the OSR flags, update the docs to match too.
Relevant part of change in docs

Related PR
swift-nav/starling#4741",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,919,2021-02-28T09:00:51Z,2021-02-28T11:32:51Z,2021-02-28T11:32:51Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - ESD-1959 allow for clang-tidy to be parallized by using the run-clang-tidy scr‚Ä¶ (#76),1,[],https://github.com/swift-nav/libsbp/pull/919,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/919,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  5786bff8  ->  fc82f41a

fc82f41a  :  ESD-1959 allow for clang-tidy to be parallized by using the run-clang-

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5423/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  5786bff8  ->  fc82f41a

fc82f41a  :  ESD-1959 allow for clang-tidy to be parallized by using the run-clang-

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5423/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,920,2021-02-28T11:35:39Z,2021-02-28T21:50:45Z,2021-02-28T21:50:46Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - undid previous commit,1,[],https://github.com/swift-nav/libsbp/pull/920,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/920,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  5786bff8  ->  d2b069a2

d2b069a2  :  undid previous commit
fc82f41a  :  ESD-1959 allow for clang-tidy to be parallized by using the run-clang-

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5429/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  5786bff8  ->  d2b069a2

d2b069a2  :  undid previous commit
fc82f41a  :  ESD-1959 allow for clang-tidy to be parallized by using the run-clang-

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5429/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,921,2021-03-03T06:25:20Z,2021-03-03T06:28:23Z,2021-03-03T06:28:24Z,CLOSED,False,0,0,1,https://github.com/lkloh,Fix SBP doc.,1,[],https://github.com/swift-nav/libsbp/pull/921,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/921,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,922,2021-03-03T17:23:58Z,2021-03-03T21:41:18Z,2021-03-03T21:41:18Z,MERGED,True,0,0,1,https://github.com/lkloh,fix SBP docs,2,[],https://github.com/swift-nav/libsbp/pull/922,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/922,"The previous docs had some problems - no content page. This one looks fine.
Before

After","The previous docs had some problems - no content page. This one looks fine.
Before

After",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,923,2021-03-05T03:06:31Z,2021-03-05T04:19:10Z,2021-03-05T04:19:10Z,MERGED,True,29,3,2,https://github.com/lkloh,INFRA-407: Update docs on how to compile Libsbp,1,[],https://github.com/swift-nav/libsbp/pull/923,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/923,"INFRA-407

Link the HOWTO page to the main README page
Add a few additions from here on using docker.","INFRA-407

Link the HOWTO page to the main README page
Add a few additions from here on using docker.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,924,2021-03-08T19:15:38Z,2021-03-10T18:12:44Z,2021-03-10T18:12:44Z,MERGED,True,24,10,1,https://github.com/apps/dependabot,Bump elliptic from 6.5.3 to 6.5.4,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/924,https://github.com/apps/dependabot,1,https://github.com/swift-nav/libsbp/pull/924,"Bumps elliptic from 6.5.3 to 6.5.4.

Commits

43ac7f2 6.5.4
f4bc72b package: bump deps
441b742 ec: validate that a point before deriving keys
e71b2d9 lib: relint using eslint
8421a01 build(deps): bump elliptic from 6.4.1 to 6.5.3 (#231)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps elliptic from 6.5.3 to 6.5.4.

Commits

43ac7f2 6.5.4
f4bc72b package: bump deps
441b742 ec: validate that a point before deriving keys
e71b2d9 lib: relint using eslint
8421a01 build(deps): bump elliptic from 6.4.1 to 6.5.3 (#231)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,924,2021-03-08T19:15:38Z,2021-03-10T18:12:44Z,2021-03-10T18:12:44Z,MERGED,True,24,10,1,https://github.com/apps/dependabot,Bump elliptic from 6.5.3 to 6.5.4,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/924,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/924#issuecomment-795847761,"Bumps elliptic from 6.5.3 to 6.5.4.

Commits

43ac7f2 6.5.4
f4bc72b package: bump deps
441b742 ec: validate that a point before deriving keys
e71b2d9 lib: relint using eslint
8421a01 build(deps): bump elliptic from 6.4.1 to 6.5.3 (#231)
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",@dependabot merge,True,{'THUMBS_UP': ['https://github.com/dependabot%5Bbot%5D']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,925,2021-03-10T00:13:38Z,2021-03-11T20:59:57Z,2021-03-11T20:59:58Z,MERGED,True,1019,0,26,https://github.com/john-michaelburke,[INFRA-389]Add get_message_name function to SBPMessage .rs,3,[],https://github.com/swift-nav/libsbp/pull/925,https://github.com/john-michaelburke,1,https://github.com/swift-nav/libsbp/pull/925,"Adds a get_message_name function to SBPMessage.

I'm not sure if returning Unknown is a better choice than an option/result. This also introduces use serde_json::{json, Value} to all messages which seems unfortunate.","Adds a get_message_name function to SBPMessage.

I'm not sure if returning Unknown is a better choice than an option/result. This also introduces use serde_json::{json, Value} to all messages which seems unfortunate.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,925,2021-03-10T00:13:38Z,2021-03-11T20:59:57Z,2021-03-11T20:59:58Z,MERGED,True,1019,0,26,https://github.com/john-michaelburke,[INFRA-389]Add get_message_name function to SBPMessage .rs,3,[],https://github.com/swift-nav/libsbp/pull/925,https://github.com/john-michaelburke,2,https://github.com/swift-nav/libsbp/pull/925#issuecomment-794735972,"Adds a get_message_name function to SBPMessage.

I'm not sure if returning Unknown is a better choice than an option/result. This also introduces use serde_json::{json, Value} to all messages which seems unfortunate.","@notoriaga I'm not sure what would have caused this to timeout:
https://travis-ci.com/github/swift-nav/libsbp/jobs/489590670",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,925,2021-03-10T00:13:38Z,2021-03-11T20:59:57Z,2021-03-11T20:59:58Z,MERGED,True,1019,0,26,https://github.com/john-michaelburke,[INFRA-389]Add get_message_name function to SBPMessage .rs,3,[],https://github.com/swift-nav/libsbp/pull/925,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/925#issuecomment-794738554,"Adds a get_message_name function to SBPMessage.

I'm not sure if returning Unknown is a better choice than an option/result. This also introduces use serde_json::{json, Value} to all messages which seems unfortunate.","Hmm not sure, I'd probably just restart it and see if it happens again",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,926,2021-03-10T14:52:27Z,2021-03-11T10:05:59Z,2021-03-11T10:06:00Z,MERGED,True,90,7,7,https://github.com/reimerix,[HS-131] Add INS status mode,2,[],https://github.com/swift-nav/libsbp/pull/926,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/926,This PR introduces a new mode value for MSG_INS_STATUS to indicate an unsafe fast start (e.g. using a seed from periodic storage instead of a seed from graceful shutdown).,This PR introduces a new mode value for MSG_INS_STATUS to indicate an unsafe fast start (e.g. using a seed from periodic storage instead of a seed from graceful shutdown).,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,928,2021-03-16T07:33:39Z,2021-05-10T10:38:26Z,2021-05-10T10:38:27Z,MERGED,True,522,5,18,https://github.com/gsmcmullin,Define a message for PPS time [STEP-231] [SEN-567] [SEN-578],9,[],https://github.com/swift-nav/libsbp/pull/928,https://github.com/gsmcmullin,1,https://github.com/swift-nav/libsbp/pull/928,"The PPS time message contains the value of the CPU local time in microseconds at the moment a pulse is detected on the PPS input. This is to be used for synchronization of sensor data sampled with a local timestamp (e.g. IMU or wheeltick messages) where GNSS time is unknown to the sender.
A flags field is included. The first 2 bits are used to indicate the time uncertainty. The remaining bits are reserved for possible future expansion.
Internal design doc: https://swift-nav.atlassian.net/l/c/1BvX0WHm","The PPS time message contains the value of the CPU local time in microseconds at the moment a pulse is detected on the PPS input. This is to be used for synchronization of sensor data sampled with a local timestamp (e.g. IMU or wheeltick messages) where GNSS time is unknown to the sender.
A flags field is included. The first 2 bits are used to indicate the time uncertainty. The remaining bits are reserved for possible future expansion.
Internal design doc: https://swift-nav.atlassian.net/l/c/1BvX0WHm",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,928,2021-03-16T07:33:39Z,2021-05-10T10:38:26Z,2021-05-10T10:38:27Z,MERGED,True,522,5,18,https://github.com/gsmcmullin,Define a message for PPS time [STEP-231] [SEN-567] [SEN-578],9,[],https://github.com/swift-nav/libsbp/pull/928,https://github.com/reimerix,2,https://github.com/swift-nav/libsbp/pull/928#issuecomment-801253370,"The PPS time message contains the value of the CPU local time in microseconds at the moment a pulse is detected on the PPS input. This is to be used for synchronization of sensor data sampled with a local timestamp (e.g. IMU or wheeltick messages) where GNSS time is unknown to the sender.
A flags field is included. The first 2 bits are used to indicate the time uncertainty. The remaining bits are reserved for possible future expansion.
Internal design doc: https://swift-nav.atlassian.net/l/c/1BvX0WHm","@dgburr I think that'd be a good idea. I don't think we'd make much use of a real uncertainty parameter, but maybe we could use a couple of the reserved bits for some ""figure of merit"" indication? e.g. nano- vs. micro- vs. millisecond uncertainty in the time of the pulse.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,928,2021-03-16T07:33:39Z,2021-05-10T10:38:26Z,2021-05-10T10:38:27Z,MERGED,True,522,5,18,https://github.com/gsmcmullin,Define a message for PPS time [STEP-231] [SEN-567] [SEN-578],9,[],https://github.com/swift-nav/libsbp/pull/928,https://github.com/gsmcmullin,3,https://github.com/swift-nav/libsbp/pull/928#issuecomment-801466741,"The PPS time message contains the value of the CPU local time in microseconds at the moment a pulse is detected on the PPS input. This is to be used for synchronization of sensor data sampled with a local timestamp (e.g. IMU or wheeltick messages) where GNSS time is unknown to the sender.
A flags field is included. The first 2 bits are used to indicate the time uncertainty. The remaining bits are reserved for possible future expansion.
Internal design doc: https://swift-nav.atlassian.net/l/c/1BvX0WHm",@reimerix I'm quite happy for you to take ownership of the message format and add whatever uncertainty field you think is useful.  I'll do the implementation on the STEP once this lands.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,928,2021-03-16T07:33:39Z,2021-05-10T10:38:26Z,2021-05-10T10:38:27Z,MERGED,True,522,5,18,https://github.com/gsmcmullin,Define a message for PPS time [STEP-231] [SEN-567] [SEN-578],9,[],https://github.com/swift-nav/libsbp/pull/928,https://github.com/dgburr,4,https://github.com/swift-nav/libsbp/pull/928#issuecomment-825351303,"The PPS time message contains the value of the CPU local time in microseconds at the moment a pulse is detected on the PPS input. This is to be used for synchronization of sensor data sampled with a local timestamp (e.g. IMU or wheeltick messages) where GNSS time is unknown to the sender.
A flags field is included. The first 2 bits are used to indicate the time uncertainty. The remaining bits are reserved for possible future expansion.
Internal design doc: https://swift-nav.atlassian.net/l/c/1BvX0WHm","A couple of thoughts:

Perhaps we want to add a ""sensor type"" field? I can imagine that when integrating onto customer platforms we may have cases where we want to use PPS-based synchronisation for both IMU and WO input from two different sources which have their own concept of ""local CPU time"".
Perhaps we want to consider making the message more generic to allow synchronisation to sources other than PPS, e.g. sensors which provide data with PTP timestamps?
(cc: @larrychangSN)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,928,2021-03-16T07:33:39Z,2021-05-10T10:38:26Z,2021-05-10T10:38:27Z,MERGED,True,522,5,18,https://github.com/gsmcmullin,Define a message for PPS time [STEP-231] [SEN-567] [SEN-578],9,[],https://github.com/swift-nav/libsbp/pull/928,https://github.com/richarddeurloo,5,https://github.com/swift-nav/libsbp/pull/928#issuecomment-825775300,"The PPS time message contains the value of the CPU local time in microseconds at the moment a pulse is detected on the PPS input. This is to be used for synchronization of sensor data sampled with a local timestamp (e.g. IMU or wheeltick messages) where GNSS time is unknown to the sender.
A flags field is included. The first 2 bits are used to indicate the time uncertainty. The remaining bits are reserved for possible future expansion.
Internal design doc: https://swift-nav.atlassian.net/l/c/1BvX0WHm","@dgburr For your second point, how do you see ""synchronisation to sources other than PPS""? For PPS we know implicitly when the pulse happened in GNSS time. So we can derive the offset with GNSS time. For other pulses we do not have that implicit information.
I'm not very familiar with PTP. But isn't a PTP time-stamp a UTC time-stamp? Can we not treat this as an local time-stamp for which the customer platform needs to send a MSG_GNSS_TIME_OFFSET or MSG_PPS_TIME? Or, alternatively, introduce a new time status of the MSG_IMU_RAW such as ""Full UTC time"".",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,928,2021-03-16T07:33:39Z,2021-05-10T10:38:26Z,2021-05-10T10:38:27Z,MERGED,True,522,5,18,https://github.com/gsmcmullin,Define a message for PPS time [STEP-231] [SEN-567] [SEN-578],9,[],https://github.com/swift-nav/libsbp/pull/928,https://github.com/dgburr,6,https://github.com/swift-nav/libsbp/pull/928#issuecomment-825992184,"The PPS time message contains the value of the CPU local time in microseconds at the moment a pulse is detected on the PPS input. This is to be used for synchronization of sensor data sampled with a local timestamp (e.g. IMU or wheeltick messages) where GNSS time is unknown to the sender.
A flags field is included. The first 2 bits are used to indicate the time uncertainty. The remaining bits are reserved for possible future expansion.
Internal design doc: https://swift-nav.atlassian.net/l/c/1BvX0WHm","@dgburr For your second point, how do you see ""synchronisation to sources other than PPS""? For PPS we know implicitly when the pulse happened in GNSS time. So we can derive the offset with GNSS time. For other pulses we do not have that implicit information.
I'm not very familiar with PTP. But isn't a PTP time-stamp a UTC time-stamp? Can we not treat this as an local time-stamp for which the customer platform needs to send a MSG_GNSS_TIME_OFFSET or MSG_PPS_TIME? Or, alternatively, introduce a new time status of the MSG_IMU_RAW such as ""Full UTC time"".

When Starling is running on an automotive ECU we cannot assume that the sender of IMU or WO information has any knowledge of ""GPS time"" or a connection to the GPS PPS signal.  However we can assume that there is some kind of external time synchronisation mechanism (typically PTP, aka IEEE1588) which the sending ECU and the receiving ECU both have access to.  Therefore our timestamping mechanism for sensor data should assume that the timestamps are being provided relative to some kind of common source, which just happens to be the PPS signal in the case of a platform such as the STEP, but could potentially also be some other kind of technology.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,929,2021-03-16T18:14:34Z,2021-06-07T00:15:43Z,2021-06-07T00:15:43Z,MERGED,True,68277,51197,724,https://github.com/jayvdb,[INFRA-422] Fix docs,19,['User-facing Documentation'],https://github.com/swift-nav/libsbp/pull/929,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/929,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,929,2021-03-16T18:14:34Z,2021-06-07T00:15:43Z,2021-06-07T00:15:43Z,MERGED,True,68277,51197,724,https://github.com/jayvdb,[INFRA-422] Fix docs,19,['User-facing Documentation'],https://github.com/swift-nav/libsbp/pull/929,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/929#issuecomment-825357464,,@jayvdb any reason not to ship this?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,929,2021-03-16T18:14:34Z,2021-06-07T00:15:43Z,2021-06-07T00:15:43Z,MERGED,True,68277,51197,724,https://github.com/jayvdb,[INFRA-422] Fix docs,19,['User-facing Documentation'],https://github.com/swift-nav/libsbp/pull/929,https://github.com/jayvdb,3,https://github.com/swift-nav/libsbp/pull/929#issuecomment-825365255,,"I was going to do the docs-CI task as part of this (part of this sprint), as currently this change and anything docs related isnt being CI'd; but if you need it now, I can merge it now.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,929,2021-03-16T18:14:34Z,2021-06-07T00:15:43Z,2021-06-07T00:15:43Z,MERGED,True,68277,51197,724,https://github.com/jayvdb,[INFRA-422] Fix docs,19,['User-facing Documentation'],https://github.com/swift-nav/libsbp/pull/929,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/929#issuecomment-825978968,,"I was going to do the docs-CI task as part of this (part of this sprint), as currently this change and anything docs related isnt being CI'd; but if you need it now, I can merge it now.

OK, no rush with this, we can roll it into the other doc CI changes",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,929,2021-03-16T18:14:34Z,2021-06-07T00:15:43Z,2021-06-07T00:15:43Z,MERGED,True,68277,51197,724,https://github.com/jayvdb,[INFRA-422] Fix docs,19,['User-facing Documentation'],https://github.com/swift-nav/libsbp/pull/929,https://github.com/jayvdb,5,https://github.com/swift-nav/libsbp/pull/929#issuecomment-840651161,,"https://github.com/swift-nav/libsbp/suites/2735374872/artifacts/60400852 is the generated PDF.  With a bit more voodoo, we could only generate it when there is some change to the spec, or when a tag is being built, so it can be uploaded to the github release.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,929,2021-03-16T18:14:34Z,2021-06-07T00:15:43Z,2021-06-07T00:15:43Z,MERGED,True,68277,51197,724,https://github.com/jayvdb,[INFRA-422] Fix docs,19,['User-facing Documentation'],https://github.com/swift-nav/libsbp/pull/929,https://github.com/jayvdb,6,https://github.com/swift-nav/libsbp/pull/929#issuecomment-840877279,,"The first difference in the PDF that I can see is Table 6.6.10 was pushed onto page 43, but is now kept together with the message description on page 42.  The table content doesnt appear to have changed - I need to find a good PDF diff tool to look more closely at possible problems.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,930,2021-03-16T21:31:52Z,2021-03-19T02:32:17Z,2021-03-19T02:32:18Z,MERGED,True,71,14536,45,https://github.com/jayvdb,[INFRA-404] Remove python-jit,2,[],https://github.com/swift-nav/libsbp/pull/930,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/930,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,931,2021-03-16T22:46:24Z,2021-03-17T22:37:23Z,2021-03-17T22:37:23Z,MERGED,True,1,7,3,https://github.com/jayvdb,[INFRA-243]: Run all Python tests without numpy,1,[],https://github.com/swift-nav/libsbp/pull/931,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/931,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,932,2021-03-19T19:46:24Z,2021-03-23T05:31:16Z,2021-03-23T05:31:16Z,MERGED,True,0,1,1,https://github.com/silverjam,python: fix call_git_describe in sbp.version,1,[],https://github.com/swift-nav/libsbp/pull/932,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/932,"a previous PR amended this function to avoid the actual git describe call, restore the original behavior","a previous PR amended this function to avoid the actual git describe call, restore the original behavior",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,932,2021-03-19T19:46:24Z,2021-03-23T05:31:16Z,2021-03-23T05:31:16Z,MERGED,True,0,1,1,https://github.com/silverjam,python: fix call_git_describe in sbp.version,1,[],https://github.com/swift-nav/libsbp/pull/932,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/932#issuecomment-803074994,"a previous PR amended this function to avoid the actual git describe call, restore the original behavior","@gsmcmullin Is there anything more we need to fix here, or was this just accidentally committed?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,933,2021-03-22T00:48:19Z,2021-03-24T05:16:58Z,2021-03-24T05:16:59Z,MERGED,True,1,1,1,https://github.com/woodfell,[ESD-1897] Add support for Greenhill compiler,1,[],https://github.com/swift-nav/libsbp/pull/933,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/933,Greenhill compiler has the same struct packing attribute as gcc but needs an extra preprocessor test to enable it. Currently causes a build error using Greenhill compiler.,Greenhill compiler has the same struct packing attribute as gcc but needs an extra preprocessor test to enable it. Currently causes a build error using Greenhill compiler.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,934,2021-03-22T00:51:48Z,2021-03-24T05:17:48Z,2021-03-24T05:17:48Z,MERGED,True,198,1,19,https://github.com/woodfell,[ESD-1897] Optional variable sized arrays,4,[],https://github.com/swift-nav/libsbp/pull/934,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/934,"Cherry picked from #869, targeting excelfore-develop until we work out how to address libsbp and variable length arrays long term","Cherry picked from #869, targeting excelfore-develop until we work out how to address libsbp and variable length arrays long term",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,935,2021-03-24T03:34:18Z,2021-03-25T16:05:02Z,2021-03-25T16:05:02Z,MERGED,True,123,62,7,https://github.com/notoriaga,Add option to disable input buffering [INFRA-423],3,[],https://github.com/swift-nav/libsbp/pull/935,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/935,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,936,2021-03-24T05:11:36Z,2021-03-24T05:15:06Z,2021-03-24T05:15:06Z,CLOSED,False,129,43,13,https://github.com/woodfell,[ESD-1897] Optional zero length arrays,1,[],https://github.com/swift-nav/libsbp/pull/936,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/936,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,937,2021-03-24T20:17:04Z,2021-03-24T21:51:08Z,2021-03-24T21:51:08Z,MERGED,True,4,5,2,https://github.com/notoriaga,Propagate parse errors [INFRA-429],1,[],https://github.com/swift-nav/libsbp/pull/937,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/937,Turns out there already was a test! I just also broke it will breaking this,Turns out there already was a test! I just also broke it will breaking this,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,938,2021-03-24T23:20:46Z,2021-03-24T23:21:13Z,2021-03-24T23:21:14Z,MERGED,True,116,118,7,https://github.com/notoriaga,Silverjam/unbuffered atty,2,[],https://github.com/swift-nav/libsbp/pull/938,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/938,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,939,2021-03-25T10:35:04Z,2021-03-26T08:02:45Z,2021-03-26T08:02:46Z,MERGED,True,7,7,8,https://github.com/IsakTjernberg,[STEP-217] Specify unit of mem_total in MSG_LINUX_SYS_STATE,2,[],https://github.com/swift-nav/libsbp/pull/939,https://github.com/IsakTjernberg,1,https://github.com/swift-nav/libsbp/pull/939,"Description
Adds a comment that the unit of total system memory is measured in MiB, on the message MSG_LINUX_SYS_STATE.
The message is used in piksi_apps. Piksi_apps is used on both Piksi and STEP, in both cases total memory is reported as MiB.
I've separated the change to the spec and the generated files in separate commits for easier review, will squash on merge.","Description
Adds a comment that the unit of total system memory is measured in MiB, on the message MSG_LINUX_SYS_STATE.
The message is used in piksi_apps. Piksi_apps is used on both Piksi and STEP, in both cases total memory is reported as MiB.
I've separated the change to the spec and the generated files in separate commits for easier review, will squash on merge.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,939,2021-03-25T10:35:04Z,2021-03-26T08:02:45Z,2021-03-26T08:02:46Z,MERGED,True,7,7,8,https://github.com/IsakTjernberg,[STEP-217] Specify unit of mem_total in MSG_LINUX_SYS_STATE,2,[],https://github.com/swift-nav/libsbp/pull/939,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/939#issuecomment-807230180,"Description
Adds a comment that the unit of total system memory is measured in MiB, on the message MSG_LINUX_SYS_STATE.
The message is used in piksi_apps. Piksi_apps is used on both Piksi and STEP, in both cases total memory is reported as MiB.
I've separated the change to the spec and the generated files in separate commits for easier review, will squash on merge.","@IsakTjernberg python CI failure is fixed on master, so rebasing should fix this PR",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,939,2021-03-25T10:35:04Z,2021-03-26T08:02:45Z,2021-03-26T08:02:46Z,MERGED,True,7,7,8,https://github.com/IsakTjernberg,[STEP-217] Specify unit of mem_total in MSG_LINUX_SYS_STATE,2,[],https://github.com/swift-nav/libsbp/pull/939,https://github.com/IsakTjernberg,3,https://github.com/swift-nav/libsbp/pull/939#issuecomment-807414759,"Description
Adds a comment that the unit of total system memory is measured in MiB, on the message MSG_LINUX_SYS_STATE.
The message is used in piksi_apps. Piksi_apps is used on both Piksi and STEP, in both cases total memory is reported as MiB.
I've separated the change to the spec and the generated files in separate commits for easier review, will squash on merge.","@IsakTjernberg python CI failure is fixed on master, so rebasing should fix this PR

Thanks for the tip, was just about to ask.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,940,2021-03-25T17:04:46Z,2021-03-25T17:30:26Z,2021-03-25T17:30:26Z,MERGED,True,2,1,1,https://github.com/notoriaga,Install tox with apt-get,2,[],https://github.com/swift-nav/libsbp/pull/940,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/940,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,941,2021-03-27T19:04:43Z,2021-03-30T19:46:54Z,2021-03-31T04:49:02Z,MERGED,True,87,291,9,https://github.com/silverjam,use binascii instead of plain python [INFRA-404],10,[],https://github.com/swift-nav/libsbp/pull/941,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/941,"strip out use of use of construct when deframing, this moves construct out of the deframing hot path


use binascii (which is a C extension module) to implement the CRC calculation: https://github.com/python/cpython/blob/master/Modules/binascii.c


Used sbp2json (skipping the dispatch method which parses into fields) to test the speed of just deframing. Speed of deframing (no JSON serializatoin) with master:


Benchmark #1: python -m sbp2json <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     11.990 s ¬±  0.331 s    [User: 11.979 s, System: 0.011 s]
  Range (min ‚Ä¶ max):   11.441 s ‚Ä¶ 12.556 s    10 runs

Speed of deframing (no JSON serialization) with this branch:
‚ùØ hyperfine 'python -m sbp2json --include 1 <test_data/benchmark.sbp'                                                                                                                                                (libsbp)
Benchmark #1: python -m sbp2json --include 1 <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     961.3 ms ¬±  18.7 ms    [User: 953.2 ms, System: 8.1 ms]
  Range (min ‚Ä¶ max):   927.6 ms ‚Ä¶ 979.2 ms    10 runs","strip out use of use of construct when deframing, this moves construct out of the deframing hot path


use binascii (which is a C extension module) to implement the CRC calculation: https://github.com/python/cpython/blob/master/Modules/binascii.c


Used sbp2json (skipping the dispatch method which parses into fields) to test the speed of just deframing. Speed of deframing (no JSON serializatoin) with master:


Benchmark #1: python -m sbp2json <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     11.990 s ¬±  0.331 s    [User: 11.979 s, System: 0.011 s]
  Range (min ‚Ä¶ max):   11.441 s ‚Ä¶ 12.556 s    10 runs

Speed of deframing (no JSON serialization) with this branch:
‚ùØ hyperfine 'python -m sbp2json --include 1 <test_data/benchmark.sbp'                                                                                                                                                (libsbp)
Benchmark #1: python -m sbp2json --include 1 <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     961.3 ms ¬±  18.7 ms    [User: 953.2 ms, System: 8.1 ms]
  Range (min ‚Ä¶ max):   927.6 ms ‚Ä¶ 979.2 ms    10 runs",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,941,2021-03-27T19:04:43Z,2021-03-30T19:46:54Z,2021-03-31T04:49:02Z,MERGED,True,87,291,9,https://github.com/silverjam,use binascii instead of plain python [INFRA-404],10,[],https://github.com/swift-nav/libsbp/pull/941,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/941#issuecomment-810419592,"strip out use of use of construct when deframing, this moves construct out of the deframing hot path


use binascii (which is a C extension module) to implement the CRC calculation: https://github.com/python/cpython/blob/master/Modules/binascii.c


Used sbp2json (skipping the dispatch method which parses into fields) to test the speed of just deframing. Speed of deframing (no JSON serializatoin) with master:


Benchmark #1: python -m sbp2json <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     11.990 s ¬±  0.331 s    [User: 11.979 s, System: 0.011 s]
  Range (min ‚Ä¶ max):   11.441 s ‚Ä¶ 12.556 s    10 runs

Speed of deframing (no JSON serialization) with this branch:
‚ùØ hyperfine 'python -m sbp2json --include 1 <test_data/benchmark.sbp'                                                                                                                                                (libsbp)
Benchmark #1: python -m sbp2json --include 1 <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     961.3 ms ¬±  18.7 ms    [User: 953.2 ms, System: 8.1 ms]
  Range (min ‚Ä¶ max):   927.6 ms ‚Ä¶ 979.2 ms    10 runs",@dgburr Do you have a moment to try out this change?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,941,2021-03-27T19:04:43Z,2021-03-30T19:46:54Z,2021-03-31T04:49:02Z,MERGED,True,87,291,9,https://github.com/silverjam,use binascii instead of plain python [INFRA-404],10,[],https://github.com/swift-nav/libsbp/pull/941,https://github.com/jayvdb,3,https://github.com/swift-nav/libsbp/pull/941#issuecomment-810428488,"strip out use of use of construct when deframing, this moves construct out of the deframing hot path


use binascii (which is a C extension module) to implement the CRC calculation: https://github.com/python/cpython/blob/master/Modules/binascii.c


Used sbp2json (skipping the dispatch method which parses into fields) to test the speed of just deframing. Speed of deframing (no JSON serializatoin) with master:


Benchmark #1: python -m sbp2json <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     11.990 s ¬±  0.331 s    [User: 11.979 s, System: 0.011 s]
  Range (min ‚Ä¶ max):   11.441 s ‚Ä¶ 12.556 s    10 runs

Speed of deframing (no JSON serialization) with this branch:
‚ùØ hyperfine 'python -m sbp2json --include 1 <test_data/benchmark.sbp'                                                                                                                                                (libsbp)
Benchmark #1: python -m sbp2json --include 1 <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     961.3 ms ¬±  18.7 ms    [User: 953.2 ms, System: 8.1 ms]
  Range (min ‚Ä¶ max):   927.6 ms ‚Ä¶ 979.2 ms    10 runs",Shouldnt there be a inverse of f3e62b1#diff-f0624b2d9bbb332561d971b7a21d1d172676d1a2937130ec6180077f6c5a4d50 now?  Some part of the benchmark rig needs to add the extra?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,941,2021-03-27T19:04:43Z,2021-03-30T19:46:54Z,2021-03-31T04:49:02Z,MERGED,True,87,291,9,https://github.com/silverjam,use binascii instead of plain python [INFRA-404],10,[],https://github.com/swift-nav/libsbp/pull/941,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/941#issuecomment-810433740,"strip out use of use of construct when deframing, this moves construct out of the deframing hot path


use binascii (which is a C extension module) to implement the CRC calculation: https://github.com/python/cpython/blob/master/Modules/binascii.c


Used sbp2json (skipping the dispatch method which parses into fields) to test the speed of just deframing. Speed of deframing (no JSON serializatoin) with master:


Benchmark #1: python -m sbp2json <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     11.990 s ¬±  0.331 s    [User: 11.979 s, System: 0.011 s]
  Range (min ‚Ä¶ max):   11.441 s ‚Ä¶ 12.556 s    10 runs

Speed of deframing (no JSON serialization) with this branch:
‚ùØ hyperfine 'python -m sbp2json --include 1 <test_data/benchmark.sbp'                                                                                                                                                (libsbp)
Benchmark #1: python -m sbp2json --include 1 <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     961.3 ms ¬±  18.7 ms    [User: 953.2 ms, System: 8.1 ms]
  Range (min ‚Ä¶ max):   927.6 ms ‚Ä¶ 979.2 ms    10 runs","Shouldnt there be a inverse of f3e62b1#diff-f0624b2d9bbb332561d971b7a21d1d172676d1a2937130ec6180077f6c5a4d50 now? Some part of the benchmark rig needs to add the extra?

Indeed, I'll try adding this",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,941,2021-03-27T19:04:43Z,2021-03-30T19:46:54Z,2021-03-31T04:49:02Z,MERGED,True,87,291,9,https://github.com/silverjam,use binascii instead of plain python [INFRA-404],10,[],https://github.com/swift-nav/libsbp/pull/941,https://github.com/dgburr,5,https://github.com/swift-nav/libsbp/pull/941#issuecomment-810445668,"strip out use of use of construct when deframing, this moves construct out of the deframing hot path


use binascii (which is a C extension module) to implement the CRC calculation: https://github.com/python/cpython/blob/master/Modules/binascii.c


Used sbp2json (skipping the dispatch method which parses into fields) to test the speed of just deframing. Speed of deframing (no JSON serializatoin) with master:


Benchmark #1: python -m sbp2json <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     11.990 s ¬±  0.331 s    [User: 11.979 s, System: 0.011 s]
  Range (min ‚Ä¶ max):   11.441 s ‚Ä¶ 12.556 s    10 runs

Speed of deframing (no JSON serialization) with this branch:
‚ùØ hyperfine 'python -m sbp2json --include 1 <test_data/benchmark.sbp'                                                                                                                                                (libsbp)
Benchmark #1: python -m sbp2json --include 1 <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     961.3 ms ¬±  18.7 ms    [User: 953.2 ms, System: 8.1 ms]
  Range (min ‚Ä¶ max):   927.6 ms ‚Ä¶ 979.2 ms    10 runs",Time to load the 187MB dataset (2021.03.18_Balocco3Hrs): 35 seconds.  So pretty good for no JIT and no numpy!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,941,2021-03-27T19:04:43Z,2021-03-30T19:46:54Z,2021-03-31T04:49:02Z,MERGED,True,87,291,9,https://github.com/silverjam,use binascii instead of plain python [INFRA-404],10,[],https://github.com/swift-nav/libsbp/pull/941,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/941#issuecomment-810473239,"strip out use of use of construct when deframing, this moves construct out of the deframing hot path


use binascii (which is a C extension module) to implement the CRC calculation: https://github.com/python/cpython/blob/master/Modules/binascii.c


Used sbp2json (skipping the dispatch method which parses into fields) to test the speed of just deframing. Speed of deframing (no JSON serializatoin) with master:


Benchmark #1: python -m sbp2json <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     11.990 s ¬±  0.331 s    [User: 11.979 s, System: 0.011 s]
  Range (min ‚Ä¶ max):   11.441 s ‚Ä¶ 12.556 s    10 runs

Speed of deframing (no JSON serialization) with this branch:
‚ùØ hyperfine 'python -m sbp2json --include 1 <test_data/benchmark.sbp'                                                                                                                                                (libsbp)
Benchmark #1: python -m sbp2json --include 1 <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     961.3 ms ¬±  18.7 ms    [User: 953.2 ms, System: 8.1 ms]
  Range (min ‚Ä¶ max):   927.6 ms ‚Ä¶ 979.2 ms    10 runs",Will need to tweak benchmarks once they post,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,941,2021-03-27T19:04:43Z,2021-03-30T19:46:54Z,2021-03-31T04:49:02Z,MERGED,True,87,291,9,https://github.com/silverjam,use binascii instead of plain python [INFRA-404],10,[],https://github.com/swift-nav/libsbp/pull/941,https://github.com/silverjam,7,https://github.com/swift-nav/libsbp/pull/941#issuecomment-810692165,"strip out use of use of construct when deframing, this moves construct out of the deframing hot path


use binascii (which is a C extension module) to implement the CRC calculation: https://github.com/python/cpython/blob/master/Modules/binascii.c


Used sbp2json (skipping the dispatch method which parses into fields) to test the speed of just deframing. Speed of deframing (no JSON serializatoin) with master:


Benchmark #1: python -m sbp2json <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     11.990 s ¬±  0.331 s    [User: 11.979 s, System: 0.011 s]
  Range (min ‚Ä¶ max):   11.441 s ‚Ä¶ 12.556 s    10 runs

Speed of deframing (no JSON serialization) with this branch:
‚ùØ hyperfine 'python -m sbp2json --include 1 <test_data/benchmark.sbp'                                                                                                                                                (libsbp)
Benchmark #1: python -m sbp2json --include 1 <test_data/benchmark.sbp
  Time (mean ¬± œÉ):     961.3 ms ¬±  18.7 ms    [User: 953.2 ms, System: 8.1 ms]
  Range (min ‚Ä¶ max):   927.6 ms ‚Ä¶ 979.2 ms    10 runs","Will need to tweak benchmarks once they post

Follow up: since the benchmarks are based on ratios of performance between the tools (that is, everyone is compared relative to the speed of the Rust tools) it seems the improvements in Python are within the 25% margin we allow for-- but we could probably do a follow up to confirm this and see if it's feasible to add some absolute benchmarks.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,942,2021-03-29T19:33:50Z,2021-03-30T17:03:21Z,2021-03-30T17:03:21Z,MERGED,True,4,4,1,https://github.com/apps/dependabot,Bump y18n from 4.0.0 to 4.0.1,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/942,https://github.com/apps/dependabot,1,https://github.com/swift-nav/libsbp/pull/942,"Bumps y18n from 4.0.0 to 4.0.1.

Changelog
Sourced from y18n's changelog.

Change Log
All notable changes to this project will be documented in this file. See standard-version for commit guidelines.
5.0.5 (2020-10-25)
Bug Fixes

address prototype pollution issue (#108) (a9ac604)

5.0.4 (2020-10-16)
Bug Fixes

exports: node 13.0 and 13.1 require the dotted object form with a string fallback (#105) (4f85d80)

5.0.3 (2020-10-16)
Bug Fixes

exports: node 13.0-13.6 require a string fallback (#103) (e39921e)

5.0.2 (2020-10-01)
Bug Fixes

deno: update types for deno ^1.4.0 (#100) (3834d9a)

5.0.1 (2020-09-05)
Bug Fixes

main had old index path (#98) (124f7b0)

5.0.0 (2020-09-05)
‚ö† BREAKING CHANGES

exports maps are now used, which modifies import behavior.
drops Node 6 and 4. begin following Node.js LTS schedule (#89)

Features

add support for ESM and Deno #95) (4d7ae94)



... (truncated)


Commits

See full diff in compare view



Maintainer changes
This version was pushed to npm by oss-bot, a new releaser for y18n since your current version.



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps y18n from 4.0.0 to 4.0.1.

Changelog
Sourced from y18n's changelog.

Change Log
All notable changes to this project will be documented in this file. See standard-version for commit guidelines.
5.0.5 (2020-10-25)
Bug Fixes

address prototype pollution issue (#108) (a9ac604)

5.0.4 (2020-10-16)
Bug Fixes

exports: node 13.0 and 13.1 require the dotted object form with a string fallback (#105) (4f85d80)

5.0.3 (2020-10-16)
Bug Fixes

exports: node 13.0-13.6 require a string fallback (#103) (e39921e)

5.0.2 (2020-10-01)
Bug Fixes

deno: update types for deno ^1.4.0 (#100) (3834d9a)

5.0.1 (2020-09-05)
Bug Fixes

main had old index path (#98) (124f7b0)

5.0.0 (2020-09-05)
‚ö† BREAKING CHANGES

exports maps are now used, which modifies import behavior.
drops Node 6 and 4. begin following Node.js LTS schedule (#89)

Features

add support for ESM and Deno #95) (4d7ae94)



... (truncated)


Commits

See full diff in compare view



Maintainer changes
This version was pushed to npm by oss-bot, a new releaser for y18n since your current version.



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,942,2021-03-29T19:33:50Z,2021-03-30T17:03:21Z,2021-03-30T17:03:21Z,MERGED,True,4,4,1,https://github.com/apps/dependabot,Bump y18n from 4.0.0 to 4.0.1,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/942,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/942#issuecomment-810426401,"Bumps y18n from 4.0.0 to 4.0.1.

Changelog
Sourced from y18n's changelog.

Change Log
All notable changes to this project will be documented in this file. See standard-version for commit guidelines.
5.0.5 (2020-10-25)
Bug Fixes

address prototype pollution issue (#108) (a9ac604)

5.0.4 (2020-10-16)
Bug Fixes

exports: node 13.0 and 13.1 require the dotted object form with a string fallback (#105) (4f85d80)

5.0.3 (2020-10-16)
Bug Fixes

exports: node 13.0-13.6 require a string fallback (#103) (e39921e)

5.0.2 (2020-10-01)
Bug Fixes

deno: update types for deno ^1.4.0 (#100) (3834d9a)

5.0.1 (2020-09-05)
Bug Fixes

main had old index path (#98) (124f7b0)

5.0.0 (2020-09-05)
‚ö† BREAKING CHANGES

exports maps are now used, which modifies import behavior.
drops Node 6 and 4. begin following Node.js LTS schedule (#89)

Features

add support for ESM and Deno #95) (4d7ae94)



... (truncated)


Commits

See full diff in compare view



Maintainer changes
This version was pushed to npm by oss-bot, a new releaser for y18n since your current version.



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",@dependabot merge,True,{'THUMBS_UP': ['https://github.com/dependabot%5Bbot%5D']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,943,2021-03-30T06:41:11Z,2021-03-31T18:18:59Z,2021-03-31T18:19:00Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - [ESD-1991] Set default C11 (#78),1,[],https://github.com/swift-nav/libsbp/pull/943,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/943,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  d2b069a2  ->  327343c0

327343c0  :  ESD-1991 Set default C11 (#78)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5945/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  d2b069a2  ->  327343c0

327343c0  :  ESD-1991 Set default C11 (#78)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/5945/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,944,2021-03-30T09:26:25Z,2021-03-30T16:45:56Z,2021-04-22T04:44:44Z,MERGED,True,7212,24,2,https://github.com/jayvdb,package.json: Unpin binary-parser,1,[],https://github.com/swift-nav/libsbp/pull/944,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/944,keichi/binary-parser#21 was merged upstream,keichi/binary-parser#21 was merged upstream,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,945,2021-04-01T01:05:54Z,2021-04-01T02:02:00Z,2021-04-01T02:02:00Z,MERGED,True,3,1,3,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - ESD-1981 code coverage overhaul (#79),2,[],https://github.com/swift-nav/libsbp/pull/945,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/945,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  327343c0  ->  3a6f1a72

3a6f1a72  :  ESD-1981 code coverage overhaul (#79)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/6003/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  327343c0  ->  3a6f1a72

3a6f1a72  :  ESD-1981 code coverage overhaul (#79)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/6003/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,946,2021-04-01T21:39:30Z,2021-04-02T18:47:16Z,2021-04-03T01:19:26Z,MERGED,True,542,822,23,https://github.com/silverjam,generator: mark intermediate versions as alpha [INFRA-436],4,[],https://github.com/swift-nav/libsbp/pull/946,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/946,"Not marking intermediate git versions misrepresents the state of the library, instead we should mark intermediate git versions as ""alpha"" in the generated code (and docs) so it's clearer that the current state of the code and documentaiton is not a released version of SBP.
Other updates:

Node is bumped to v12, this is required for the recent bump to binary-parser 1.7
Added in the hack @lkloh found, which invokes the pdf generation twice so tables are updated correctly

Related: swift-nav/docker-recipes#151","Not marking intermediate git versions misrepresents the state of the library, instead we should mark intermediate git versions as ""alpha"" in the generated code (and docs) so it's clearer that the current state of the code and documentaiton is not a released version of SBP.
Other updates:

Node is bumped to v12, this is required for the recent bump to binary-parser 1.7
Added in the hack @lkloh found, which invokes the pdf generation twice so tables are updated correctly

Related: swift-nav/docker-recipes#151",True,{'LAUGH': ['https://github.com/lkloh']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,946,2021-04-01T21:39:30Z,2021-04-02T18:47:16Z,2021-04-03T01:19:26Z,MERGED,True,542,822,23,https://github.com/silverjam,generator: mark intermediate versions as alpha [INFRA-436],4,[],https://github.com/swift-nav/libsbp/pull/946,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/946#issuecomment-812661469,"Not marking intermediate git versions misrepresents the state of the library, instead we should mark intermediate git versions as ""alpha"" in the generated code (and docs) so it's clearer that the current state of the code and documentaiton is not a released version of SBP.
Other updates:

Node is bumped to v12, this is required for the recent bump to binary-parser 1.7
Added in the hack @lkloh found, which invokes the pdf generation twice so tables are updated correctly

Related: swift-nav/docker-recipes#151","Looks good to me. Would there be benefit to including the git commit hash in the version for intermediate commits?

This is what I had at first, the problem is that those hashes/versions typically get thrown away once a PR is merged, they'd only be valid if we used merge commits.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,947,2021-04-02T05:27:42Z,2021-04-02T20:31:52Z,2021-04-02T20:31:53Z,MERGED,True,62,20,10,https://github.com/silverjam,cherry-pick release 3.4.6 release notes and versions [INFRA-437],5,[],https://github.com/swift-nav/libsbp/pull/947,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/947,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,948,2021-04-02T20:25:11Z,2021-04-02T21:14:23Z,2021-04-02T21:14:24Z,MERGED,True,4,3,4,https://github.com/silverjam,python: add python 3.9 to tox [INFRA-438],1,[],https://github.com/swift-nav/libsbp/pull/948,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/948,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,948,2021-04-02T20:25:11Z,2021-04-02T21:14:23Z,2021-04-02T21:14:24Z,MERGED,True,4,3,4,https://github.com/silverjam,python: add python 3.9 to tox [INFRA-438],1,[],https://github.com/swift-nav/libsbp/pull/948,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/948#issuecomment-812718443,,"this ended up being a simple change, merging...",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,949,2021-04-07T18:04:11Z,2021-04-07T18:05:17Z,2021-04-07T18:05:17Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Merge pull request #80 from swift-nav/jdiamond/load-whole-library-function,1,[],https://github.com/swift-nav/libsbp/pull/949,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/949,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  3a6f1a72  ->  b12ed266

b12ed266  :  Merge pull request #80 from swift-nav/jdiamond/load-whole-library-func
9e6a7c10  :  Added script for forcing whole library to be linked

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/6082/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  3a6f1a72  ->  b12ed266

b12ed266  :  Merge pull request #80 from swift-nav/jdiamond/load-whole-library-func
9e6a7c10  :  Added script for forcing whole library to be linked

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/6082/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,950,2021-04-12T20:43:02Z,2021-04-12T21:24:40Z,2021-04-12T21:24:41Z,MERGED,True,24,32,6,https://github.com/notoriaga,Default to unbuffered output [INFRA-426],1,[],https://github.com/swift-nav/libsbp/pull/950,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/950,"A less fancy approach where the tools always use unbuffered output unless you specify -b/--buffered.
The performance doesn't get that much worse, so it this is more usable this just might be the better approach
(base) {13:41}~/projects/libsbp:steve/unbuffered ‚úó ‚û≠ hyperfine -L buffered --buffered, ""sbp2json {buffered} <test_data/benchmark.sbp >/dev/null""
Benchmark #1: sbp2json --buffered <test_data/benchmark.sbp >/dev/null
  Time (mean ¬± œÉ):     504.4 ms ¬±  32.6 ms    [User: 502.2 ms, System: 2.3 ms]
  Range (min ‚Ä¶ max):   465.2 ms ‚Ä¶ 570.9 ms    10 runs
 
Benchmark #2: sbp2json  <test_data/benchmark.sbp >/dev/null
  Time (mean ¬± œÉ):     532.1 ms ¬±   8.4 ms    [User: 512.9 ms, System: 19.3 ms]
  Range (min ‚Ä¶ max):   523.9 ms ‚Ä¶ 549.5 ms    10 runs
 
Summary
  'sbp2json --buffered <test_data/benchmark.sbp >/dev/null' ran
    1.05 ¬± 0.07 times faster than 'sbp2json  <test_data/benchmark.sbp >/dev/null'","A less fancy approach where the tools always use unbuffered output unless you specify -b/--buffered.
The performance doesn't get that much worse, so it this is more usable this just might be the better approach
(base) {13:41}~/projects/libsbp:steve/unbuffered ‚úó ‚û≠ hyperfine -L buffered --buffered, ""sbp2json {buffered} <test_data/benchmark.sbp >/dev/null""
Benchmark #1: sbp2json --buffered <test_data/benchmark.sbp >/dev/null
  Time (mean ¬± œÉ):     504.4 ms ¬±  32.6 ms    [User: 502.2 ms, System: 2.3 ms]
  Range (min ‚Ä¶ max):   465.2 ms ‚Ä¶ 570.9 ms    10 runs
 
Benchmark #2: sbp2json  <test_data/benchmark.sbp >/dev/null
  Time (mean ¬± œÉ):     532.1 ms ¬±   8.4 ms    [User: 512.9 ms, System: 19.3 ms]
  Range (min ‚Ä¶ max):   523.9 ms ‚Ä¶ 549.5 ms    10 runs
 
Summary
  'sbp2json --buffered <test_data/benchmark.sbp >/dev/null' ran
    1.05 ¬± 0.07 times faster than 'sbp2json  <test_data/benchmark.sbp >/dev/null'",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,951,2021-04-17T00:18:39Z,2021-04-17T01:48:35Z,2021-04-17T01:48:35Z,MERGED,True,1,1,1,https://github.com/dgburr,Fix building of rust tools in Docker,1,[],https://github.com/swift-nav/libsbp/pull/951,https://github.com/dgburr,1,https://github.com/swift-nav/libsbp/pull/951,Attempting to run cargo install --git https://github.com/swift-nav/libsbp.git --bins in this Docker image fails during compilation of jemalloc since make is not installed,Attempting to run cargo install --git https://github.com/swift-nav/libsbp.git --bins in this Docker image fails during compilation of jemalloc since make is not installed,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,952,2021-04-17T16:53:53Z,2021-04-19T12:55:47Z,2021-04-19T12:55:48Z,MERGED,True,4,4,1,https://github.com/dgburr,Clarify units used in MSG_LINUX_SYS_STATE message,1,[],https://github.com/swift-nav/libsbp/pull/952,https://github.com/dgburr,1,https://github.com/swift-nav/libsbp/pull/952,"The documentation for MSG_LINUX_SYS_STATE says that the pcpu and pmem fields are percentages, however, from looking at test results and the code (https://github.com/swift-nav/piksi_apps/blob/master/app/resource_monitor/query_sys_state.c#L371) it is expressed as a fraction of 256 (i.e. equivalent to the MSG_LINUX_CPU_STATE and MSG_LINUX_MEM_STATE messages).","The documentation for MSG_LINUX_SYS_STATE says that the pcpu and pmem fields are percentages, however, from looking at test results and the code (https://github.com/swift-nav/piksi_apps/blob/master/app/resource_monitor/query_sys_state.c#L371) it is expressed as a fraction of 256 (i.e. equivalent to the MSG_LINUX_CPU_STATE and MSG_LINUX_MEM_STATE messages).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,953,2021-04-20T00:40:59Z,2021-04-20T00:44:17Z,2021-04-20T00:44:17Z,MERGED,True,2,2,1,https://github.com/jayvdb,[INFRA-444] gradle.build: Support Gradle 7,1,[],https://github.com/swift-nav/libsbp/pull/953,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/953,"Use of compile is not supported by Gradle 7.
Use implementation instead.","Use of compile is not supported by Gradle 7.
Use implementation instead.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,954,2021-04-21T04:55:28Z,2021-04-26T01:36:58Z,2021-04-26T17:20:39Z,MERGED,True,31226,16964,99,https://github.com/woodfell,[ESD-2009] Turn on auto formatting,4,[],https://github.com/swift-nav/libsbp/pull/954,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/954,"Enable the clang-format cmake module and run during generation of C source/headers. .clang-format imported from Starling.
Adjust the C header template slightly to achieve the following:

documentation comments are attached to the struct for a message rather than the #define for the message ID
documentation comments for struct members are placed preceding the member rather than trailing to prevent excessive line breaks and poor formatting

Previous documentation structure was:
/* Documentation for struct
 *
 * xxx
 */
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

typedef struct {
  u8 member; /**< Documentation for member which sometimes
* wraps like this
* [m/s] */
} xxx;

has been changed to
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

/* Documentation for struct
 *
 * xxx
 */
typedef struct {
  /** 
   * Documentation for member which wraps
   * nicely [m/s]
   */
  u8 member;
} xxx;

There are no functional changes in this PR. The only places which were edited by hand are:

Makefile
c/CMakeLists.txt
generator/sbpg/targets/resources/sbp_messages_template.h
c/include/cpp/state.h (shuffling some // NOLINTs)

Suggestion for reviewing:
Review changes to Makefile, c/CMakeLists.txt, c/.clang-format, and generator/sbpg/targets/resources/sbp_messages_template.h. Copy them in to a fresh checkout of master and run make c. Then diff the repo to this branch to confirm that all other changes are as a result of clang-format.","Enable the clang-format cmake module and run during generation of C source/headers. .clang-format imported from Starling.
Adjust the C header template slightly to achieve the following:

documentation comments are attached to the struct for a message rather than the #define for the message ID
documentation comments for struct members are placed preceding the member rather than trailing to prevent excessive line breaks and poor formatting

Previous documentation structure was:
/* Documentation for struct
 *
 * xxx
 */
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

typedef struct {
  u8 member; /**< Documentation for member which sometimes
* wraps like this
* [m/s] */
} xxx;

has been changed to
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

/* Documentation for struct
 *
 * xxx
 */
typedef struct {
  /** 
   * Documentation for member which wraps
   * nicely [m/s]
   */
  u8 member;
} xxx;

There are no functional changes in this PR. The only places which were edited by hand are:

Makefile
c/CMakeLists.txt
generator/sbpg/targets/resources/sbp_messages_template.h
c/include/cpp/state.h (shuffling some // NOLINTs)

Suggestion for reviewing:
Review changes to Makefile, c/CMakeLists.txt, c/.clang-format, and generator/sbpg/targets/resources/sbp_messages_template.h. Copy them in to a fresh checkout of master and run make c. Then diff the repo to this branch to confirm that all other changes are as a result of clang-format.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,954,2021-04-21T04:55:28Z,2021-04-26T01:36:58Z,2021-04-26T17:20:39Z,MERGED,True,31226,16964,99,https://github.com/woodfell,[ESD-2009] Turn on auto formatting,4,[],https://github.com/swift-nav/libsbp/pull/954,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/954#issuecomment-825273834,"Enable the clang-format cmake module and run during generation of C source/headers. .clang-format imported from Starling.
Adjust the C header template slightly to achieve the following:

documentation comments are attached to the struct for a message rather than the #define for the message ID
documentation comments for struct members are placed preceding the member rather than trailing to prevent excessive line breaks and poor formatting

Previous documentation structure was:
/* Documentation for struct
 *
 * xxx
 */
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

typedef struct {
  u8 member; /**< Documentation for member which sometimes
* wraps like this
* [m/s] */
} xxx;

has been changed to
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

/* Documentation for struct
 *
 * xxx
 */
typedef struct {
  /** 
   * Documentation for member which wraps
   * nicely [m/s]
   */
  u8 member;
} xxx;

There are no functional changes in this PR. The only places which were edited by hand are:

Makefile
c/CMakeLists.txt
generator/sbpg/targets/resources/sbp_messages_template.h
c/include/cpp/state.h (shuffling some // NOLINTs)

Suggestion for reviewing:
Review changes to Makefile, c/CMakeLists.txt, c/.clang-format, and generator/sbpg/targets/resources/sbp_messages_template.h. Copy them in to a fresh checkout of master and run make c. Then diff the repo to this branch to confirm that all other changes are as a result of clang-format.",@woodfell please update the README.md/HOWTO.md to point to the new docker image tag,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,954,2021-04-21T04:55:28Z,2021-04-26T01:36:58Z,2021-04-26T17:20:39Z,MERGED,True,31226,16964,99,https://github.com/woodfell,[ESD-2009] Turn on auto formatting,4,[],https://github.com/swift-nav/libsbp/pull/954,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/954#issuecomment-826000425,"Enable the clang-format cmake module and run during generation of C source/headers. .clang-format imported from Starling.
Adjust the C header template slightly to achieve the following:

documentation comments are attached to the struct for a message rather than the #define for the message ID
documentation comments for struct members are placed preceding the member rather than trailing to prevent excessive line breaks and poor formatting

Previous documentation structure was:
/* Documentation for struct
 *
 * xxx
 */
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

typedef struct {
  u8 member; /**< Documentation for member which sometimes
* wraps like this
* [m/s] */
} xxx;

has been changed to
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

/* Documentation for struct
 *
 * xxx
 */
typedef struct {
  /** 
   * Documentation for member which wraps
   * nicely [m/s]
   */
  u8 member;
} xxx;

There are no functional changes in this PR. The only places which were edited by hand are:

Makefile
c/CMakeLists.txt
generator/sbpg/targets/resources/sbp_messages_template.h
c/include/cpp/state.h (shuffling some // NOLINTs)

Suggestion for reviewing:
Review changes to Makefile, c/CMakeLists.txt, c/.clang-format, and generator/sbpg/targets/resources/sbp_messages_template.h. Copy them in to a fresh checkout of master and run make c. Then diff the repo to this branch to confirm that all other changes are as a result of clang-format.","What's the motivation to remove the empty structs? I can't think of a reason to have included them in the first place, but removing them is a breaking change.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,954,2021-04-21T04:55:28Z,2021-04-26T01:36:58Z,2021-04-26T17:20:39Z,MERGED,True,31226,16964,99,https://github.com/woodfell,[ESD-2009] Turn on auto formatting,4,[],https://github.com/swift-nav/libsbp/pull/954,https://github.com/woodfell,4,https://github.com/swift-nav/libsbp/pull/954#issuecomment-826306885,"Enable the clang-format cmake module and run during generation of C source/headers. .clang-format imported from Starling.
Adjust the C header template slightly to achieve the following:

documentation comments are attached to the struct for a message rather than the #define for the message ID
documentation comments for struct members are placed preceding the member rather than trailing to prevent excessive line breaks and poor formatting

Previous documentation structure was:
/* Documentation for struct
 *
 * xxx
 */
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

typedef struct {
  u8 member; /**< Documentation for member which sometimes
* wraps like this
* [m/s] */
} xxx;

has been changed to
#define SBP_MSG_xxx (optional)
#define bitfield macros (optional)

/* Documentation for struct
 *
 * xxx
 */
typedef struct {
  /** 
   * Documentation for member which wraps
   * nicely [m/s]
   */
  u8 member;
} xxx;

There are no functional changes in this PR. The only places which were edited by hand are:

Makefile
c/CMakeLists.txt
generator/sbpg/targets/resources/sbp_messages_template.h
c/include/cpp/state.h (shuffling some // NOLINTs)

Suggestion for reviewing:
Review changes to Makefile, c/CMakeLists.txt, c/.clang-format, and generator/sbpg/targets/resources/sbp_messages_template.h. Copy them in to a fresh checkout of master and run make c. Then diff the repo to this branch to confirm that all other changes are as a result of clang-format.","What's the motivation to remove the empty structs? I can't think of a reason to have included them in the first place, but removing them is a breaking change.

Oops, getting ahead of myself here. Empty structs are one of the problems in libsbp but I'll put them back in for the moment",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,955,2021-04-22T06:58:36Z,2021-04-23T06:25:58Z,2021-04-23T06:25:59Z,MERGED,True,19421,6943,56,https://github.com/woodfell,[ESD-2010] Fix auto generated tests,2,[],https://github.com/swift-nav/libsbp/pull/955,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/955,"Fix autogenerated C tests
The tests as currently written are not really testing very much. Each test case is passed in a byte array from the spec which represents the encoded frame. This data is then passed in to sbp_send_message as the payload rather than just the payload being extracted and passed in. This means that the payload as encoded by sbp_send_message is not the actual payload which relates to the message under test but a complete frame which contains the payload:
If the test case for message X is passed a particular set of test data it should be encoded as
PREAMBLE | SENDER | TYPE | LEN | PAYLOAD | CRC

but it's actually encoded as
PREAMBLE | SENDER | TYPE | LEN | PREAMBLE | SENDER | TYPE | LEN | PAYLOAD | CRC | CRC

The encoded frame is then passed back in to libsbp and the payload extracted via a logging callback - the payload which is actually an entire frame. The ""payload"" is then compared against the encoded frame data defined in the test spec. The first part of each generated test case is pretty much just testing memcpy
The second part of the test case uses a series of expected fields and compares them against the encoded data. However it checks against the data which was passed in from the spec. This part is therefore checking that the test spec is correctly written and not checking anything in libsbp itself.
These things combined mean that libsbp is not being tested at all. This is demonstrated by a test case for MSG_VEL_NED_COV which has an incomplete set of expected fields and should be failing but isn't.
This PR reworks the auto generated C test so that the procedure for each case is:
1 - Create an instance of the message struct and fill out with the fields from the test spec
2 - Encode the test message using sbp_send_message
3 - Check the encoded data from sbp_send_message against the expected encoded frame data from the test spec
4 - Check that the SBP message callback was called properly
5 - Check that the SBP frame callback was called properly
6 - Cast the decoded payload back to the correct message struct and verify the fields.
By doing this it checks that
1 - The test spec is well written
2 - libsbp is behaving properly
Variable length arrays need special handling and complicated some of the macros in the test suite. The length of the encoded message is tracked while the test message is being built up since sizeof for messages containing variable length arrays is meaningless.
Strings are similarly badly defined in SBP with some having no termination, single null termination, double null termination, or null delimination. These are now all handled with memcpy/memcmp rather than strcpy/strstr
For reviewers:
The only files in this PR which have been modified by hand are
generator/sbpg/targets/resources/sbp_c_test.c.j2
generator/sbp/targets/test_c.py
spec/tests/yaml/swiftnav/sbp/navigation/test_MsgVelNEDCOV.yaml
Everything else is auto generated","Fix autogenerated C tests
The tests as currently written are not really testing very much. Each test case is passed in a byte array from the spec which represents the encoded frame. This data is then passed in to sbp_send_message as the payload rather than just the payload being extracted and passed in. This means that the payload as encoded by sbp_send_message is not the actual payload which relates to the message under test but a complete frame which contains the payload:
If the test case for message X is passed a particular set of test data it should be encoded as
PREAMBLE | SENDER | TYPE | LEN | PAYLOAD | CRC

but it's actually encoded as
PREAMBLE | SENDER | TYPE | LEN | PREAMBLE | SENDER | TYPE | LEN | PAYLOAD | CRC | CRC

The encoded frame is then passed back in to libsbp and the payload extracted via a logging callback - the payload which is actually an entire frame. The ""payload"" is then compared against the encoded frame data defined in the test spec. The first part of each generated test case is pretty much just testing memcpy
The second part of the test case uses a series of expected fields and compares them against the encoded data. However it checks against the data which was passed in from the spec. This part is therefore checking that the test spec is correctly written and not checking anything in libsbp itself.
These things combined mean that libsbp is not being tested at all. This is demonstrated by a test case for MSG_VEL_NED_COV which has an incomplete set of expected fields and should be failing but isn't.
This PR reworks the auto generated C test so that the procedure for each case is:
1 - Create an instance of the message struct and fill out with the fields from the test spec
2 - Encode the test message using sbp_send_message
3 - Check the encoded data from sbp_send_message against the expected encoded frame data from the test spec
4 - Check that the SBP message callback was called properly
5 - Check that the SBP frame callback was called properly
6 - Cast the decoded payload back to the correct message struct and verify the fields.
By doing this it checks that
1 - The test spec is well written
2 - libsbp is behaving properly
Variable length arrays need special handling and complicated some of the macros in the test suite. The length of the encoded message is tracked while the test message is being built up since sizeof for messages containing variable length arrays is meaningless.
Strings are similarly badly defined in SBP with some having no termination, single null termination, double null termination, or null delimination. These are now all handled with memcpy/memcmp rather than strcpy/strstr
For reviewers:
The only files in this PR which have been modified by hand are
generator/sbpg/targets/resources/sbp_c_test.c.j2
generator/sbp/targets/test_c.py
spec/tests/yaml/swiftnav/sbp/navigation/test_MsgVelNEDCOV.yaml
Everything else is auto generated",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,956,2021-04-22T07:43:47Z,2021-04-22T08:14:32Z,2021-04-22T08:14:33Z,MERGED,True,2,1,1,https://github.com/woodfell,[ESD-2009] Add clang-format to docker image,1,[],https://github.com/swift-nav/libsbp/pull/956,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/956,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,957,2021-04-22T14:44:28Z,2021-04-29T14:12:19Z,2021-04-29T14:12:20Z,MERGED,True,1215,68,18,https://github.com/reimerix,[CPL-49] New PL message draft,17,[],https://github.com/swift-nav/libsbp/pull/957,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/957,"This PR will deprecate the previous PL message in favor of a new revision.
Internal design doc: https://swift-nav.atlassian.net/l/c/EgJhXBa8","This PR will deprecate the previous PL message in favor of a new revision.
Internal design doc: https://swift-nav.atlassian.net/l/c/EgJhXBa8",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,957,2021-04-22T14:44:28Z,2021-04-29T14:12:19Z,2021-04-29T14:12:20Z,MERGED,True,1215,68,18,https://github.com/reimerix,[CPL-49] New PL message draft,17,[],https://github.com/swift-nav/libsbp/pull/957,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/957#issuecomment-825357257,"This PR will deprecate the previous PL message in favor of a new revision.
Internal design doc: https://swift-nav.atlassian.net/l/c/EgJhXBa8",@reimerix FYI this PR seems to be missing the generated Rust files,True,{'THUMBS_UP': ['https://github.com/reimerix']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,958,2021-04-23T01:02:14Z,2021-04-23T02:13:03Z,2021-04-23T02:13:03Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - ESD-2003 added RLM third party library (#81),1,[],https://github.com/swift-nav/libsbp/pull/958,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/958,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  3a6f1a72  ->  57f1cbc4

57f1cbc4  :  ESD-2003 added RLM third party library (#81)
b12ed266  :  Merge pull request #80 from swift-nav/jdiamond/load-whole-library-func
9e6a7c10  :  Added script for forcing whole library to be linked

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/6310/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  3a6f1a72  ->  57f1cbc4

57f1cbc4  :  ESD-2003 added RLM third party library (#81)
b12ed266  :  Merge pull request #80 from swift-nav/jdiamond/load-whole-library-func
9e6a7c10  :  Added script for forcing whole library to be linked

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/6310/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,959,2021-04-23T05:17:31Z,2021-04-26T01:45:39Z,2021-04-26T01:45:42Z,CLOSED,False,38966,21489,230,https://github.com/woodfell,[ESD-2013] Increase automatic testing coverage,6,[],https://github.com/swift-nav/libsbp/pull/959,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/959,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,960,2021-04-23T11:48:52Z,2021-04-26T14:46:42Z,2021-04-26T14:46:43Z,MERGED,True,21064,29624,92,https://github.com/scarcanague,SSR documentation clarification,2,[],https://github.com/swift-nav/libsbp/pull/960,https://github.com/scarcanague,1,https://github.com/swift-nav/libsbp/pull/960,Clarifying  the code biases signal encoding and correcting a few nits,Clarifying  the code biases signal encoding and correcting a few nits,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,961,2021-04-25T23:20:51Z,2021-04-26T01:52:16Z,2021-04-26T01:52:16Z,MERGED,True,38,18,2,https://github.com/woodfell,[ESD-2012] Don't cast function pointers to void*,1,[],https://github.com/swift-nav/libsbp/pull/961,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/961,"Harvard architectures keep code and data in separate blocks of memory that can potentially have different address sizes. Therefore it is dangerous to assume that a function pointer can be cast to void* and back again. C/C++ disallow this practice although many compilers do support it.
libsbp uses a void* member in the state struct to hold the callback pointer which can be one of 2 types - sbp_msg_callback_t or sbp_frame_callback_t. When the callback is registered a function pointer is passed in of the correct type to the register function but it is cast to void* during the process of adding the callbacks node to the list. When a frame is processed the void* pointer is cast back to the correct function pointer type and invoked.
This PR alters the way that callback pointers are stored in the SBP state object so the type is never lost and we don't use undefined behaviour of casting function pointers to a data pointer type.","Harvard architectures keep code and data in separate blocks of memory that can potentially have different address sizes. Therefore it is dangerous to assume that a function pointer can be cast to void* and back again. C/C++ disallow this practice although many compilers do support it.
libsbp uses a void* member in the state struct to hold the callback pointer which can be one of 2 types - sbp_msg_callback_t or sbp_frame_callback_t. When the callback is registered a function pointer is passed in of the correct type to the register function but it is cast to void* during the process of adding the callbacks node to the list. When a frame is processed the void* pointer is cast back to the correct function pointer type and invoked.
This PR alters the way that callback pointers are stored in the SBP state object so the type is never lost and we don't use undefined behaviour of casting function pointers to a data pointer type.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,962,2021-04-26T01:46:21Z,2021-04-26T03:08:06Z,2021-04-26T03:08:07Z,MERGED,True,1,0,1,https://github.com/woodfell,[ESD-2014] Process solution_meta in javascript bindings,2,[],https://github.com/swift-nav/libsbp/pull/962,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/962,The solution_meta module isn't imported in the javascript bindings so it can't be processed. Import the module. Tests to follow in ESD-2013 tickets,The solution_meta module isn't imported in the javascript bindings so it can't be processed. Import the module. Tests to follow in ESD-2013 tickets,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,963,2021-04-26T01:50:05Z,2021-04-27T04:12:47Z,2021-04-27T04:12:47Z,MERGED,True,35039,21377,217,https://github.com/woodfell,[ESD-2013] Add more test specs,2,[],https://github.com/swift-nav/libsbp/pull/963,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/963,"The autogenerated tests don't cover a huge number of messages. A lot of them are quite old, some are organised as 1 spec file per module, some are 1 spec file per message type.
This PR tidies up the test specs by splitting up the per-module test specs to per-file specs and adding many more tests for more recent messages. The tests data was taken from an SBP recording from a test drive and covers all (most) of the messages produces and consumed by a recent starling-binary.
There is no attempt to cover every single SBP message, only the ones which are most likely to be used at the time of writing.
This PR covers just the test specs, the newly generated tests are moved over to a separate PR to keep this one easier to review - #964","The autogenerated tests don't cover a huge number of messages. A lot of them are quite old, some are organised as 1 spec file per module, some are 1 spec file per message type.
This PR tidies up the test specs by splitting up the per-module test specs to per-file specs and adding many more tests for more recent messages. The tests data was taken from an SBP recording from a test drive and covers all (most) of the messages produces and consumed by a recent starling-binary.
There is no attempt to cover every single SBP message, only the ones which are most likely to be used at the time of writing.
This PR covers just the test specs, the newly generated tests are moved over to a separate PR to keep this one easier to review - #964",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,964,2021-04-26T01:50:59Z,2021-04-26T04:13:37Z,2021-04-26T04:13:37Z,MERGED,True,37820,23843,168,https://github.com/woodfell,[ESD-2013] Regenerate tests,1,[],https://github.com/swift-nav/libsbp/pull/964,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/964,"Related to #963, this PR regenerates the C and rust tests. All changes in this PR are autogenerated and derived from the changes to test specs in the other PR.","Related to #963, this PR regenerates the C and rust tests. All changes in this PR are autogenerated and derived from the changes to test specs in the other PR.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,965,2021-04-26T22:46:10Z,2021-04-27T00:33:47Z,2021-04-27T00:33:49Z,MERGED,True,3609,9296,51,https://github.com/woodfell,[ESD-2009] Revert formatting changes,8,[],https://github.com/swift-nav/libsbp/pull/965,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/965,"Some issue with a name clash appeared after merging #954
Revert the change and defer until a larger rework is commissioned.
There have been a few commits since #954 was merged, it's probably best to review by comparing against c463fa9","Some issue with a name clash appeared after merging #954
Revert the change and defer until a larger rework is commissioned.
There have been a few commits since #954 was merged, it's probably best to review by comparing against c463fa9",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,966,2021-04-28T11:08:23Z,,2022-05-25T08:12:38Z,OPEN,False,17,17,2,https://github.com/richarddeurloo,[AN-203] Special SBP manual,3,['draft'],https://github.com/swift-nav/libsbp/pull/966,https://github.com/richarddeurloo,1,https://github.com/swift-nav/libsbp/pull/966,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,966,2021-04-28T11:08:23Z,,2022-05-25T08:12:38Z,OPEN,False,17,17,2,https://github.com/richarddeurloo,[AN-203] Special SBP manual,3,['draft'],https://github.com/swift-nav/libsbp/pull/966,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/966#issuecomment-928694028,,@richarddeurloo Do we still need this?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,966,2021-04-28T11:08:23Z,,2022-05-25T08:12:38Z,OPEN,False,17,17,2,https://github.com/richarddeurloo,[AN-203] Special SBP manual,3,['draft'],https://github.com/swift-nav/libsbp/pull/966,https://github.com/richarddeurloo,3,https://github.com/swift-nav/libsbp/pull/966#issuecomment-928983908,,"@silverjam As a whole we don't need it anymore. But I'm wondering if part of the commits (at least a1a63a7) should be merged into master. If you don't mind, I'd like to keep it open for the moment. I'll check if part of it can be merged into master.",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,967,2021-04-28T18:03:23Z,2021-05-11T15:46:30Z,2021-05-11T15:46:31Z,MERGED,True,1658,7,33,https://github.com/notoriaga,add gps_time method,25,[],https://github.com/swift-nav/libsbp/pull/967,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/967,"Adds
fn gps_time(&self) -> Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>;
to the SBPMessage trait behind a swiftnav-rs feature flag. Also reexports GpsTime as sbp::messages::GpsTime

I went with Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>, but maybe the Result/Option should be swapped?
Maybe should go with a default impl of gps_time that returns None instead of actually implementing a bunch of functions that return None. would make it easier to search for the impls and validate they are correct (also tests would be nice)
This crate already has a GpsTime struct which might be a little confusing - 
  
    
      libsbp/rust/sbp/src/messages/gnss.rs
    
    
         Line 92
      in
      f2a1804
    
  
  
    

        
          
           pub struct GPSTime {","Adds
fn gps_time(&self) -> Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>;
to the SBPMessage trait behind a swiftnav-rs feature flag. Also reexports GpsTime as sbp::messages::GpsTime

I went with Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>, but maybe the Result/Option should be swapped?
Maybe should go with a default impl of gps_time that returns None instead of actually implementing a bunch of functions that return None. would make it easier to search for the impls and validate they are correct (also tests would be nice)
This crate already has a GpsTime struct which might be a little confusing - 
  
    
      libsbp/rust/sbp/src/messages/gnss.rs
    
    
         Line 92
      in
      f2a1804
    
  
  
    

        
          
           pub struct GPSTime {",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,967,2021-04-28T18:03:23Z,2021-05-11T15:46:30Z,2021-05-11T15:46:31Z,MERGED,True,1658,7,33,https://github.com/notoriaga,add gps_time method,25,[],https://github.com/swift-nav/libsbp/pull/967,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/967#issuecomment-828694241,"Adds
fn gps_time(&self) -> Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>;
to the SBPMessage trait behind a swiftnav-rs feature flag. Also reexports GpsTime as sbp::messages::GpsTime

I went with Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>, but maybe the Result/Option should be swapped?
Maybe should go with a default impl of gps_time that returns None instead of actually implementing a bunch of functions that return None. would make it easier to search for the impls and validate they are correct (also tests would be nice)
This crate already has a GpsTime struct which might be a little confusing - 
  
    
      libsbp/rust/sbp/src/messages/gnss.rs
    
    
         Line 92
      in
      f2a1804
    
  
  
    

        
          
           pub struct GPSTime {","I went with Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>, but maybe the Result/Option should be swapped?


Should definitely be swapped, without swapping it makes it kind of hard to use with ?, right?


Maybe should go with a default impl of gps_time that returns None instead of actually implementing a bunch of functions that return None. would make it easier to search for the impls and validate they are correct (also tests would be nice)


üëç


This crate already has a GpsTime struct which might be a little confusing - 
  
    
      libsbp/rust/sbp/src/messages/gnss.rs
    
    
         Line 92
      in
      f2a1804
    
  
  
    

        
          
           pub struct GPSTime { 
        
    
  




Maybe MessageGpsTime or MsgGpsTime could help differentiate?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,967,2021-04-28T18:03:23Z,2021-05-11T15:46:30Z,2021-05-11T15:46:31Z,MERGED,True,1658,7,33,https://github.com/notoriaga,add gps_time method,25,[],https://github.com/swift-nav/libsbp/pull/967,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/967#issuecomment-828702159,"Adds
fn gps_time(&self) -> Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>;
to the SBPMessage trait behind a swiftnav-rs feature flag. Also reexports GpsTime as sbp::messages::GpsTime

I went with Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>, but maybe the Result/Option should be swapped?
Maybe should go with a default impl of gps_time that returns None instead of actually implementing a bunch of functions that return None. would make it easier to search for the impls and validate they are correct (also tests would be nice)
This crate already has a GpsTime struct which might be a little confusing - 
  
    
      libsbp/rust/sbp/src/messages/gnss.rs
    
    
         Line 92
      in
      f2a1804
    
  
  
    

        
          
           pub struct GPSTime {","Should definitely be swapped, without swapping it makes it kind of hard to use with ?, right?

It depends on if your function returns Option or Result. Maybe a custom enum with three variants is best, with two helpers to convert to option or result",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,967,2021-04-28T18:03:23Z,2021-05-11T15:46:30Z,2021-05-11T15:46:31Z,MERGED,True,1658,7,33,https://github.com/notoriaga,add gps_time method,25,[],https://github.com/swift-nav/libsbp/pull/967,https://github.com/john-michaelburke,4,https://github.com/swift-nav/libsbp/pull/967#issuecomment-828717279,"Adds
fn gps_time(&self) -> Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>;
to the SBPMessage trait behind a swiftnav-rs feature flag. Also reexports GpsTime as sbp::messages::GpsTime

I went with Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>, but maybe the Result/Option should be swapped?
Maybe should go with a default impl of gps_time that returns None instead of actually implementing a bunch of functions that return None. would make it easier to search for the impls and validate they are correct (also tests would be nice)
This crate already has a GpsTime struct which might be a little confusing - 
  
    
      libsbp/rust/sbp/src/messages/gnss.rs
    
    
         Line 92
      in
      f2a1804
    
  
  
    

        
          
           pub struct GPSTime {",LGTM thank you for doing this!!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,967,2021-04-28T18:03:23Z,2021-05-11T15:46:30Z,2021-05-11T15:46:31Z,MERGED,True,1658,7,33,https://github.com/notoriaga,add gps_time method,25,[],https://github.com/swift-nav/libsbp/pull/967,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/967#issuecomment-828729711,"Adds
fn gps_time(&self) -> Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>;
to the SBPMessage trait behind a swiftnav-rs feature flag. Also reexports GpsTime as sbp::messages::GpsTime

I went with Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>, but maybe the Result/Option should be swapped?
Maybe should go with a default impl of gps_time that returns None instead of actually implementing a bunch of functions that return None. would make it easier to search for the impls and validate they are correct (also tests would be nice)
This crate already has a GpsTime struct which might be a little confusing - 
  
    
      libsbp/rust/sbp/src/messages/gnss.rs
    
    
         Line 92
      in
      f2a1804
    
  
  
    

        
          
           pub struct GPSTime {","I went with Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>, but maybe the Result/Option should be swapped?

I'd vote to keep the Option on the outside, it seems more logical to me. Getting the time is the first operation, and the not having a time isn't an error per se. The second operation is converting the message's time representation into a common format which is a fallible operation. I think the ? operator also works with Option, assuming that the function is returning an Option as well.

üëç",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,967,2021-04-28T18:03:23Z,2021-05-11T15:46:30Z,2021-05-11T15:46:31Z,MERGED,True,1658,7,33,https://github.com/notoriaga,add gps_time method,25,[],https://github.com/swift-nav/libsbp/pull/967,https://github.com/notoriaga,6,https://github.com/swift-nav/libsbp/pull/967#issuecomment-837203521,"Adds
fn gps_time(&self) -> Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>;
to the SBPMessage trait behind a swiftnav-rs feature flag. Also reexports GpsTime as sbp::messages::GpsTime

I went with Option<Result<swiftnav_rs::time::GpsTime, crate::GpsTimeError>>, but maybe the Result/Option should be swapped?
Maybe should go with a default impl of gps_time that returns None instead of actually implementing a bunch of functions that return None. would make it easier to search for the impls and validate they are correct (also tests would be nice)
This crate already has a GpsTime struct which might be a little confusing - 
  
    
      libsbp/rust/sbp/src/messages/gnss.rs
    
    
         Line 92
      in
      f2a1804
    
  
  
    

        
          
           pub struct GPSTime {","I pulled together a list of all the rover-time messages
MsgAgeCorrections
MsgAngularRate
MsgBaselineECEF
MsgBaselineECEFDepA
MsgBaselineHeading
MsgBaselineHeadingDepA
MsgBaselineNED
MsgBaselineNEDDepA
MsgDops
MsgDopsDepA
MsgExtEvent
MsgGPSTime
MsgGPSTimeDepA
MsgGPSTimeGnss
MsgInsUpdates
MsgMagRaw
MsgObsDepA
MsgObsDepB
MsgObsDepC
MsgOdometry
MsgOrientEuler
MsgOrientQuat
MsgPosECEF
MsgPosECEFCov
MsgPosECEFCovGnss
MsgPosECEFDepA
MsgPosECEFGnss
MsgPosLLH
MsgPosLLHCov
MsgPosLLHCovGnss
MsgPosLLHDepA
MsgPosLLHGnss
MsgProtectionLevel
MsgProtectionLevelDepA
MsgSbasRaw
MsgSolnMeta
MsgUtcTime
MsgUtcTimeGnss
MsgVelBody
MsgVelECEF
MsgVelECEFCov
MsgVelECEFCovGnss
MsgVelECEFDepA
MsgVelECEFGnss
MsgVelNED
MsgVelNEDCov
MsgVelNEDCovGnss
MsgVelNEDDepA
MsgVelNEDGnss

would be nice to get some eyes on this. One thing I'm wondering is that we have MSG_OBS as base time, but we have MSG_OBS_DEP_{A,B,C} here - is that correct?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,968,2021-04-28T23:41:19Z,2021-04-30T20:43:58Z,2021-04-30T20:43:58Z,MERGED,True,1,1,2,https://github.com/jbangelo,Fix the bit field values in the SSR APC message,2,[],https://github.com/swift-nav/libsbp/pull/968,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/968,"In #902 I accidentally had the wrong bit field values for part of the APC message. This fixes that small oversight.
Before:

After:","In #902 I accidentally had the wrong bit field values for part of the APC message. This fixes that small oversight.
Before:

After:",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,969,2021-05-06T00:01:12Z,2021-05-11T15:59:15Z,2021-05-11T15:59:15Z,MERGED,True,147,296,44,https://github.com/jayvdb,"[INFRA-453] Python: Detect and Fix pyflakes errors, and remove broken to_binary",3,[],https://github.com/swift-nav/libsbp/pull/969,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/969,"TODO:

Add test coverage of generated code
Generate a MsgNetworkBandwidthUsage test case","TODO:

Add test coverage of generated code
Generate a MsgNetworkBandwidthUsage test case",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,969,2021-05-06T00:01:12Z,2021-05-11T15:59:15Z,2021-05-11T15:59:15Z,MERGED,True,147,296,44,https://github.com/jayvdb,"[INFRA-453] Python: Detect and Fix pyflakes errors, and remove broken to_binary",3,[],https://github.com/swift-nav/libsbp/pull/969,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/969#issuecomment-837877491,"TODO:

Add test coverage of generated code
Generate a MsgNetworkBandwidthUsage test case","many suggestions/future improvements inline with the PR, feel free to move those to Jiras for future work

Also, should fix-up the PR title and we should remove this check before merging: #969 (comment)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,971,2021-05-08T02:36:22Z,2021-05-12T11:42:27Z,2021-05-12T19:20:43Z,MERGED,True,375,3,15,https://github.com/dgburr,Add tcp_2sigma_example,10,[],https://github.com/swift-nav/libsbp/pull/971,https://github.com/dgburr,1,https://github.com/swift-nav/libsbp/pull/971,Add an example demonstrating how to parse SBP_MSG_LLH_COV messages and calculate the ellipse corresponding to the 2 sigma/95% confidence interval,Add an example demonstrating how to parse SBP_MSG_LLH_COV messages and calculate the ellipse corresponding to the 2 sigma/95% confidence interval,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,971,2021-05-08T02:36:22Z,2021-05-12T11:42:27Z,2021-05-12T19:20:43Z,MERGED,True,375,3,15,https://github.com/dgburr,Add tcp_2sigma_example,10,[],https://github.com/swift-nav/libsbp/pull/971,https://github.com/dgburr,2,https://github.com/swift-nav/libsbp/pull/971#issuecomment-839377247,Add an example demonstrating how to parse SBP_MSG_LLH_COV messages and calculate the ellipse corresponding to the 2 sigma/95% confidence interval,"I have tidied up the example directory: from what I can tell, there was originally only one example in there, but two more examples (cpp_example and tcp_example) were added later.  What I have done is:

Renamed the top level directory to examples
Moved each example into its own directory
Added a top-level CMakefile which adds a target called examples if BUILD_EXAMPLES is defined
Modify the git action to define -DBUILD_EXAMPLES=true and then compile the examples target",True,"{'HOORAY': ['https://github.com/silverjam'], 'ROCKET': ['https://github.com/silverjam']}"
swift-nav/libsbp,https://github.com/swift-nav/libsbp,972,2021-05-11T00:46:36Z,2021-05-11T05:57:17Z,2021-05-11T05:57:18Z,MERGED,True,78,37,8,https://github.com/jayvdb,python: Run coverage and parameterize test cases,3,[],https://github.com/swift-nav/libsbp/pull/972,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/972,"Subset of #969 , to address #906","Subset of #969 , to address #906",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,973,2021-05-11T01:35:20Z,2021-05-11T15:57:23Z,2021-05-11T15:57:24Z,MERGED,True,2,30,3,https://github.com/jayvdb,Remove haskell from python CI,1,[],https://github.com/swift-nav/libsbp/pull/973,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/973,test_data/sanity.sh does not use any cli args.,test_data/sanity.sh does not use any cli args.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,974,2021-05-11T03:47:03Z,2021-05-11T05:57:17Z,2021-05-11T05:57:18Z,MERGED,True,38023,31662,184,https://github.com/jayvdb,Remove unused test spec from python/,5,[],https://github.com/swift-nav/libsbp/pull/974,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/974,"Sits on top of #972
Extracted from #969","Sits on top of #972
Extracted from #969",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,974,2021-05-11T03:47:03Z,2021-05-11T05:57:17Z,2021-05-11T05:57:18Z,MERGED,True,38023,31662,184,https://github.com/jayvdb,Remove unused test spec from python/,5,[],https://github.com/swift-nav/libsbp/pull/974,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/974#issuecomment-837855434,"Sits on top of #972
Extracted from #969",@jayvdb Would these be easier to review if you change the target branch to the PR they're extracted from? E.g. #972 and/or #969,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,975,2021-05-11T08:11:07Z,2021-05-11T10:42:39Z,2021-05-11T10:42:40Z,MERGED,True,679,10125,193,https://github.com/jayvdb,[INFRA-465] Tidy generated tests,3,[],https://github.com/swift-nav/libsbp/pull/975,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/975,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,976,2021-05-11T09:02:03Z,2021-05-16T02:37:46Z,2021-05-16T02:37:47Z,MERGED,True,1807,700,7,https://github.com/jayvdb,sbpjson: Sync generated code,6,[],https://github.com/swift-nav/libsbp/pull/976,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/976,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,976,2021-05-11T09:02:03Z,2021-05-16T02:37:46Z,2021-05-16T02:37:47Z,MERGED,True,1807,700,7,https://github.com/jayvdb,sbpjson: Sync generated code,6,[],https://github.com/swift-nav/libsbp/pull/976,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/976#issuecomment-838300873,,"If there are no problems with these changes, I can add CI to enforce this are updated, and instructions for doing it.  quicktype could be added to a packages.json, so it is easy for contributors to install it.  Or we could have this target only required to be updated before tags, if there is some way to trigger workflows only prior to a tag.  Perhaps a manual workflow that can be run to verify a branch is ready for tagging.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,976,2021-05-11T09:02:03Z,2021-05-16T02:37:46Z,2021-05-16T02:37:47Z,MERGED,True,1807,700,7,https://github.com/jayvdb,sbpjson: Sync generated code,6,[],https://github.com/swift-nav/libsbp/pull/976,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/976#issuecomment-838902387,,It should be part of make all if it's not and included in the libsbp-build docker image-- with this we shouldn't need any additional CI checks,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,976,2021-05-11T09:02:03Z,2021-05-16T02:37:46Z,2021-05-16T02:37:47Z,MERGED,True,1807,700,7,https://github.com/jayvdb,sbpjson: Sync generated code,6,[],https://github.com/swift-nav/libsbp/pull/976,https://github.com/jayvdb,4,https://github.com/swift-nav/libsbp/pull/976#issuecomment-841218932,,"Unless there is a better way, I would try making the USER based on an arg, like https://stackoverflow.com/questions/57776452/is-it-possible-to-map-a-user-inside-the-docker-container-to-an-outside-user .  Maybe I am missing something simple.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,976,2021-05-11T09:02:03Z,2021-05-16T02:37:46Z,2021-05-16T02:37:47Z,MERGED,True,1807,700,7,https://github.com/jayvdb,sbpjson: Sync generated code,6,[],https://github.com/swift-nav/libsbp/pull/976,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/976#issuecomment-841595661,,"Unless there is a better way, I would try making the USER based on an arg, like https://stackoverflow.com/questions/57776452/is-it-possible-to-map-a-user-inside-the-docker-container-to-an-outside-user .  Maybe I am missing something simple.

We'd need to have a base image (that would probably just be  the current image) and a small docker file that gets built locally based on this image in order to map to a local user.  On Ubuntu systems you can usually just map UID 1000 into the docker container since a typical local install will only have one user... it gets more complicated if you need to build a custom image with a custom UID.  We've done this for piksi_buildroot in the past and it was a bit complicated, maybe there's a better way now, but I don't know if one.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,977,2021-05-11T09:08:28Z,2021-05-11T13:40:59Z,2021-05-11T13:41:00Z,MERGED,True,4578,5,22,https://github.com/jayvdb,Add three message test specs,8,[],https://github.com/swift-nav/libsbp/pull/977,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/977,"Extracted from #969
Adds tests for MsgNetworkBandwidthUsage, MsgMeasurementState and MsgSvAzEl","Extracted from #969
Adds tests for MsgNetworkBandwidthUsage, MsgMeasurementState and MsgSvAzEl",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,977,2021-05-11T09:08:28Z,2021-05-11T13:40:59Z,2021-05-11T13:41:00Z,MERGED,True,4578,5,22,https://github.com/jayvdb,Add three message test specs,8,[],https://github.com/swift-nav/libsbp/pull/977,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/977#issuecomment-838494789,"Extracted from #969
Adds tests for MsgNetworkBandwidthUsage, MsgMeasurementState and MsgSvAzEl","The bulk of this has been approved as part of #969 ; there are a few minor non-controversial additions and changes, such as fixing it for py27, and two one-liner CI improvements.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,978,2021-05-11T10:10:55Z,2021-05-11T11:10:00Z,2021-05-11T13:21:33Z,CLOSED,False,0,5,4,https://github.com/jayvdb,[INFRA-467] Remove apt-get update,1,[],https://github.com/swift-nav/libsbp/pull/978,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/978,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,978,2021-05-11T10:10:55Z,2021-05-11T11:10:00Z,2021-05-11T13:21:33Z,CLOSED,False,0,5,4,https://github.com/jayvdb,[INFRA-467] Remove apt-get update,1,[],https://github.com/swift-nav/libsbp/pull/978,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/978#issuecomment-838285547,,Problem fixed itself.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,979,2021-05-11T13:56:04Z,2022-05-12T17:03:15Z,2022-05-12T17:03:25Z,CLOSED,False,202,3,2,https://github.com/jayvdb,WIP: python: Add automatic test spec generator,2,[],https://github.com/swift-nav/libsbp/pull/979,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/979,Pulled out of #969 ; lots of review comments yet to address.,Pulled out of #969 ; lots of review comments yet to address.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,979,2021-05-11T13:56:04Z,2022-05-12T17:03:15Z,2022-05-12T17:03:25Z,CLOSED,False,202,3,2,https://github.com/jayvdb,WIP: python: Add automatic test spec generator,2,[],https://github.com/swift-nav/libsbp/pull/979,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/979#issuecomment-1125226603,Pulled out of #969 ; lots of review comments yet to address.,Variations on this tool and the missing test generator were merged in #1125,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,980,2021-05-12T03:48:19Z,2021-05-14T01:33:40Z,2021-05-14T01:33:41Z,MERGED,True,34612,1,86,https://github.com/woodfell,[ESD-2024] Auto generate cpp tests,2,[],https://github.com/swift-nav/libsbp/pull/980,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/980,Reuse the existing test schema to generate C++ tests to better exercise C++ SBP components,Reuse the existing test schema to generate C++ tests to better exercise C++ SBP components,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,980,2021-05-12T03:48:19Z,2021-05-14T01:33:40Z,2021-05-14T01:33:41Z,MERGED,True,34612,1,86,https://github.com/woodfell,[ESD-2024] Auto generate cpp tests,2,[],https://github.com/swift-nav/libsbp/pull/980,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/980#issuecomment-839418810,Reuse the existing test schema to generate C++ tests to better exercise C++ SBP components,"We also need to modify https://github.com/swift-nav/libsbp/blob/master/.github/workflows/generator.yaml#L27 to delete the generated c++ test files, so that deleting test specs require that the test code is also deleted.  I have a bunch of other CI work coming up, so I can do this as part of those, if there are no other changes needed for this PR.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,980,2021-05-12T03:48:19Z,2021-05-14T01:33:40Z,2021-05-14T01:33:41Z,MERGED,True,34612,1,86,https://github.com/woodfell,[ESD-2024] Auto generate cpp tests,2,[],https://github.com/swift-nav/libsbp/pull/980,https://github.com/woodfell,3,https://github.com/swift-nav/libsbp/pull/980#issuecomment-839442869,Reuse the existing test schema to generate C++ tests to better exercise C++ SBP components,"We also need to modify https://github.com/swift-nav/libsbp/blob/master/.github/workflows/generator.yaml#L27 to delete the generated c++ test files, so that deleting test specs require that the test code is also deleted. I have a bunch of other CI work coming up, so I can do this as part of those, if there are no other changes needed for this PR.

Might as well do it here for completeness sake",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,981,2021-05-12T07:19:36Z,2021-05-20T06:49:00Z,2021-05-20T06:49:03Z,CLOSED,False,136385,4701,324,https://github.com/woodfell,[DO NOT MERGE] [ESD-2025] Generated packer/unpacker prototype,7,['draft'],https://github.com/swift-nav/libsbp/pull/981,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/981,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,983,2021-05-14T07:04:16Z,2021-05-14T07:25:50Z,2021-05-14T07:25:51Z,MERGED,True,7906,6,27,https://github.com/woodfell,"[ESD-2015] GHS pack pragma, static asserts to check packed offsets",3,[],https://github.com/swift-nav/libsbp/pull/983,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/983,"Use #pragma pack(1) when using Green Hills compilers rather than attribute((packed)) which seems to be rather temperamental .
Add c++ static_assert and C99 compatible macro static asserts to check packed offsets from generated headers","Use #pragma pack(1) when using Green Hills compilers rather than attribute((packed)) which seems to be rather temperamental .
Add c++ static_assert and C99 compatible macro static asserts to check packed offsets from generated headers",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,984,2021-05-14T16:45:24Z,2021-05-15T04:28:44Z,2021-05-15T04:28:45Z,MERGED,True,282,278,19,https://github.com/jayvdb,Add support for construct 2.9.52 and 2.10,1,[],https://github.com/swift-nav/libsbp/pull/984,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/984,Fixes #907,Fixes #907,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,985,2021-05-17T14:09:16Z,2021-05-18T19:45:09Z,2021-05-18T19:45:09Z,MERGED,True,30028,233,294,https://github.com/jayvdb,[INFRA-288] Fix Java parsing and generate tests,9,[],https://github.com/swift-nav/libsbp/pull/985,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/985,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,986,2021-05-18T20:26:26Z,2021-05-18T23:26:25Z,2021-05-18T23:26:26Z,MERGED,True,46,23,8,https://github.com/notoriaga,rust: support encoding borrowed messages ,5,[],https://github.com/swift-nav/libsbp/pull/986,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/986,"needs swift-nav/dencode#2
Makes it so the encoders work with borrowed messages. Adds convenience functions to get a framed writer. Should we reexport dencode so people don't have to bring it in?","needs swift-nav/dencode#2
Makes it so the encoders work with borrowed messages. Adds convenience functions to get a framed writer. Should we reexport dencode so people don't have to bring it in?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,986,2021-05-18T20:26:26Z,2021-05-18T23:26:25Z,2021-05-18T23:26:26Z,MERGED,True,46,23,8,https://github.com/notoriaga,rust: support encoding borrowed messages ,5,[],https://github.com/swift-nav/libsbp/pull/986,https://github.com/notoriaga,2,https://github.com/swift-nav/libsbp/pull/986#issuecomment-843546336,"needs swift-nav/dencode#2
Makes it so the encoders work with borrowed messages. Adds convenience functions to get a framed writer. Should we reexport dencode so people don't have to bring it in?","@john-michaelburke with these changes you can do something like
fn test() {
    use sbp::codec::{dencode::IterSinkExt, json::JsonEncoder, sbp::SbpEncoder};

    let input_file = std::fs::File::open(""messages"").unwrap();
    let log_file = std::fs::File::create(""log"").unwrap();
    let json_log_file = std::fs::File::create(""json_log"").unwrap();

    let mut bin_encoder = SbpEncoder::framed(log_file);
    let mut json_encoder = JsonEncoder::framed(json_log_file, serde_json::ser::CompactFormatter);

    for msg in iter_messages(input_file) {
        let msg = msg.unwrap();

        bin_encoder.send(&msg).unwrap();
        json_encoder.send(&msg).unwrap();
    }
}",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,986,2021-05-18T20:26:26Z,2021-05-18T23:26:25Z,2021-05-18T23:26:26Z,MERGED,True,46,23,8,https://github.com/notoriaga,rust: support encoding borrowed messages ,5,[],https://github.com/swift-nav/libsbp/pull/986,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/986#issuecomment-843564579,"needs swift-nav/dencode#2
Makes it so the encoders work with borrowed messages. Adds convenience functions to get a framed writer. Should we reexport dencode so people don't have to bring it in?","... Should we reexport dencode so people don't have to bring it in?

üëç",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,987,2021-05-19T01:24:52Z,2021-05-19T18:52:48Z,2021-05-19T18:52:48Z,MERGED,True,3,2,3,https://github.com/silverjam,docker: add clang for rust build [INFRA-477],5,[],https://github.com/swift-nav/libsbp/pull/987,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/987,"Dependent on swift-nav/swiftnav-rs#51 but will allow us to run cargo test --verbose --all-features --all-targets inside the docker image.
In order to build all the Rust targets we need clang to build the swiftnav-rs  dependency.  This is apparently a transitive dependency of bindgen.","Dependent on swift-nav/swiftnav-rs#51 but will allow us to run cargo test --verbose --all-features --all-targets inside the docker image.
In order to build all the Rust targets we need clang to build the swiftnav-rs  dependency.  This is apparently a transitive dependency of bindgen.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,987,2021-05-19T01:24:52Z,2021-05-19T18:52:48Z,2021-05-19T18:52:48Z,MERGED,True,3,2,3,https://github.com/silverjam,docker: add clang for rust build [INFRA-477],5,[],https://github.com/swift-nav/libsbp/pull/987,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/987#issuecomment-843676631,"Dependent on swift-nav/swiftnav-rs#51 but will allow us to run cargo test --verbose --all-features --all-targets inside the docker image.
In order to build all the Rust targets we need clang to build the swiftnav-rs  dependency.  This is apparently a transitive dependency of bindgen.",@jayvdb What should I update so that this gets pulled in to the new CI?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,987,2021-05-19T01:24:52Z,2021-05-19T18:52:48Z,2021-05-19T18:52:48Z,MERGED,True,3,2,3,https://github.com/silverjam,docker: add clang for rust build [INFRA-477],5,[],https://github.com/swift-nav/libsbp/pull/987,https://github.com/jayvdb,3,https://github.com/swift-nav/libsbp/pull/987#issuecomment-843706265,"Dependent on swift-nav/swiftnav-rs#51 but will allow us to run cargo test --verbose --all-features --all-targets inside the docker image.
In order to build all the Rust targets we need clang to build the swiftnav-rs  dependency.  This is apparently a transitive dependency of bindgen.",Please add rust to the list of targets at https://github.com/swift-nav/libsbp/blob/master/.github/workflows/docker.yaml#L32,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,988,2021-05-19T19:01:35Z,2021-10-08T05:17:57Z,2021-10-08T05:18:02Z,CLOSED,False,3,0,2,https://github.com/silverjam,rust: add stack config for swiftnav-rs,2,[],https://github.com/swift-nav/libsbp/pull/988,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/988,"This is a build requirement for swiftnav-rs that hasn't really been root causes for why it's necessary, apparently Windows builds on GitHub where mostly passing without this, but one recent one failed: https://github.com/swift-nav/libsbp/runs/2623430000 -- actually looks like a rustup failure, so this might not be needed...","This is a build requirement for swiftnav-rs that hasn't really been root causes for why it's necessary, apparently Windows builds on GitHub where mostly passing without this, but one recent one failed: https://github.com/swift-nav/libsbp/runs/2623430000 -- actually looks like a rustup failure, so this might not be needed...",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,988,2021-05-19T19:01:35Z,2021-10-08T05:17:57Z,2021-10-08T05:18:02Z,CLOSED,False,3,0,2,https://github.com/silverjam,rust: add stack config for swiftnav-rs,2,[],https://github.com/swift-nav/libsbp/pull/988,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/988#issuecomment-863883788,"This is a build requirement for swiftnav-rs that hasn't really been root causes for why it's necessary, apparently Windows builds on GitHub where mostly passing without this, but one recent one failed: https://github.com/swift-nav/libsbp/runs/2623430000 -- actually looks like a rustup failure, so this might not be needed...","Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 No Duplication information",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,988,2021-05-19T19:01:35Z,2021-10-08T05:17:57Z,2021-10-08T05:18:02Z,CLOSED,False,3,0,2,https://github.com/silverjam,rust: add stack config for swiftnav-rs,2,[],https://github.com/swift-nav/libsbp/pull/988,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/988#issuecomment-938351550,"This is a build requirement for swiftnav-rs that hasn't really been root causes for why it's necessary, apparently Windows builds on GitHub where mostly passing without this, but one recent one failed: https://github.com/swift-nav/libsbp/runs/2623430000 -- actually looks like a rustup failure, so this might not be needed...","This doesn't appear to be necessary, closing...",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,989,2021-05-21T01:07:07Z,2021-05-21T01:53:07Z,2021-05-21T01:53:08Z,MERGED,True,18,18,11,https://github.com/woodfell,Correct docs for read dir resp,1,[],https://github.com/swift-nav/libsbp/pull/989,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/989,"The documentation for READ_DIR_RESP states that the end of the sequence is signalled by an entry containing just 0xFF.
In reality this is not the signal. The end of directory marker is a packet containing no entries at all. See https://github.com/swift-nav/piksi_apps/blob/e5634f63246f0a783bba17d67dd3761a9aaadc34/app/sbp_fileio_daemon/sbp_fileio.c#L1069 and https://github.com/swift-nav/piksi_tools/blob/5408a239cc37d8aef57923fd4331ab3a8c7a5791/piksi_tools/fileio.py#L474","The documentation for READ_DIR_RESP states that the end of the sequence is signalled by an entry containing just 0xFF.
In reality this is not the signal. The end of directory marker is a packet containing no entries at all. See https://github.com/swift-nav/piksi_apps/blob/e5634f63246f0a783bba17d67dd3761a9aaadc34/app/sbp_fileio_daemon/sbp_fileio.c#L1069 and https://github.com/swift-nav/piksi_tools/blob/5408a239cc37d8aef57923fd4331ab3a8c7a5791/piksi_tools/fileio.py#L474",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/990,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/jbangelo,2,https://github.com/swift-nav/libsbp/pull/990#issuecomment-850561917,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","The old ""packed"" header files are still available and have not been modified.


What is the future of the pack structs? Are they worth keeping around?

Leaving the packed structs around for now is probably the right approach. Longer term I think we should plan on making a breaking API change and move towards removing them entirely. Maybe do it in a couple steps, the first to deprecate them and move them to a packed subdirectory for a time and the second step would be to completely removing them?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/990#issuecomment-852317985,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","From @jbangelo


The old ""packed"" header files are still available and have not been modified.


What is the future of the pack structs? Are they worth keeping around?

Leaving the packed structs around for now is probably the right approach. Longer term I think we should plan on making a breaking API change and move towards removing them entirely. Maybe do it in a couple steps, the first to deprecate them and move them to a packed subdirectory for a time and the second step would be to completely removing them?

From @woodfell

The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.

I think this API should be the default in the future, and we should plan a for a migration strategy
I'll propose the following layout and migration strategy:

c/include/libsbp/new - new ""unpacked"" API
c/include/libsbp/legacy - old ""packed"" API
c/include/libsbp - also the old ""packed"" API

As you also mentioned, this will have minimal downstream impact and will allow us to move code that needs the new API to the #include <libsbp/new/...> API path.  We should migrate all internal code that needs the legacy API to the #include <libsbp/legacy/...> include path.  Then eventually migrate all internal code to use the new API.
Then I would propose the following rough timeline:

v4 release: ""old"" API maintained at default location and at /legacy
v5 release: ""old"" API removed from  default location, ""new"" API moved to default location, old applications must switch to use ""/legacy"" include to continue using the old API
v6 release: ""old"" API removed

Each of these releases could be on a two month cadence.",True,{'THUMBS_UP': ['https://github.com/reimerix']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/990#issuecomment-852323668,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","We should name things here with the intent that this will eventually replace the existing API, e.g.

sbp_pack_and_send_message -> sbp_send_message (name can be shortened since packing/encoding is implied)

In general I think should use ""encode"" and ""decode"" nomenclature since it's a more common terminology for message formats (and it's more consistent with other languages in this repository), pack/unpack are somewhat C specific.  For example, we should rename these:

sbp_pack_msg -> sbp_encode_message
sbp_unpack_msg -> sbp_decode_message

Then we can drop _packed or _unpacked suffixes, since then intent is to eventually replace the existing API:

sbp_process_unpacked -> sbp_process_message

It would also be nice if we could be consistent about where msg vs message is used, maybe leave the abbreviation msg for types, but spell out the word for function invocations?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/990#issuecomment-852325778,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.

As long as the wire format isn't changed (and the change to the schema will cause a compiler error if code isn't updated), I think we can get away with this-- I would worry about this becoming a problem again in the future though.  Can we add a check to the generator to disallow variable length arrays in nested/embedded types?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/woodfell,6,https://github.com/swift-nav/libsbp/pull/990#issuecomment-852573324,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","Then I would propose the following rough timeline:
* v4 release: ""old"" API maintained at default location and at `/legacy`

* v5 release: ""old"" API removed from  default location, ""new"" API moved to default location, old applications must switch to use ""/legacy"" include to continue using the old API

* v6 release: ""old"" API removed

Each of these releases could be on a two month cadence.

I'm in favour of changing sbp_pack_and_send_message to sbp_send_message and doing something else with the current function. Where would that fit in to this timeline? Part of the v4 release? Or deferred to later?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/woodfell,7,https://github.com/swift-nav/libsbp/pull/990#issuecomment-852575628,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.

As long as the wire format isn't changed (and the change to the schema will cause a compiler error if code isn't updated), I think we can get away with this-- I would worry about this becoming a problem again in the future though. Can we add a check to the generator to disallow variable length arrays in nested/embedded types?

Yep, there's already a check for that here (excuse my terrible python)",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/silverjam,8,https://github.com/swift-nav/libsbp/pull/990#issuecomment-852624649,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","Then I would propose the following rough timeline:
* v4 release: ""old"" API maintained at default location and at `/legacy`

* v5 release: ""old"" API removed from  default location, ""new"" API moved to default location, old applications must switch to use ""/legacy"" include to continue using the old API

* v6 release: ""old"" API removed

Each of these releases could be on a two month cadence.

I'm in favour of changing sbp_pack_and_send_message to sbp_send_message and doing something else with the current function. Where would that fit in to this timeline? Part of the v4 release? Or deferred to later?

If we can, I think it makes sense to use whatever the final naming is going to be, so we can minimize the impact of each of these major version revs.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/silverjam,9,https://github.com/swift-nav/libsbp/pull/990#issuecomment-852635760,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","I'm in favour of changing sbp_pack_and_send_message to sbp_send_message and doing something else with the current function. Where would that fit in to this timeline? Part of the v4 release? Or deferred to later?

If we can, I think it makes sense to use whatever the final naming is going to be, so we can minimize the impact of each of these major version revs.

That means there's a few different usage scenarios, for the releases:


I'm already in legacy code, I don't need to do anything for the v4 release, but I'm aware that there's a new API that will become the default in X months (where X is 4-6 months, see below)


I'm writing new code, I can use the new API, for the v5 release I just need to update my include paths, for v6 I don't need to do anything


I ported during the v4 release, I'm in the same boat as the ""new code"" people


I didn't port by the v5 release, I need to update my include paths, I must port for the v6 release


I didn't port by the v6 release, I don't need to update my include paths, but I now need to port to the new API


As for the value of ""X"" (the release cadence) I was thinking we should align with an existing customer facing release vehicle like Starling and do this over the next 3 releases.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/woodfell,10,https://github.com/swift-nav/libsbp/pull/990#issuecomment-852968752,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","Perhaps we could look at applying the deprecated attribute to all the old APIs as well. It would be quite annoying at first but would quickly show up what needs changing. We'd probably have to change the set of compiler options to include -Wno-error=deprecated-declaration
Similarly we could add a #pragma warning to all the generated headers in libsbp saying to include the legacy version instead -  Don't include libsbp/observation.h, include libsbp/legacy/observation.h instead",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/woodfell,11,https://github.com/swift-nav/libsbp/pull/990#issuecomment-852969686,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?","Also to ease the various stages it might make sense to reorganise the headers in the initial v4 release. sbp.h is pretty full of stuff, breaking the old API out to something like legacy/api.h and just #includeing that file from sbp.h in v4 could make later releases much less work",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,990,2021-05-21T04:05:44Z,2021-06-13T09:43:59Z,2021-06-13T09:43:59Z,CLOSED,False,101769,18496,353,https://github.com/woodfell,[WIP] [ESD-2025] Unpacked C structs,6,[],https://github.com/swift-nav/libsbp/pull/990,https://github.com/woodfell,12,https://github.com/swift-nav/libsbp/pull/990#issuecomment-855175122,"See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp for a background to the problem.
Overview
Introduced a new generator to produce unpacked C structs - message definitions which are free from the packed attribute, correctly handle variable length arrays. Generate pack and unpack functions for every kind of SBP message. Handle encoding issues such as endianess and string representation in pack/unpack functions.
The unpacked C structs are free from all compiler extensions like zero length arrays. The pedantic flag is now turned on for libsbp, -Wconversion is turned back on and all issues relating to that fixed up.
The old ""packed"" header files are still available and have not been modified. For the purposes of development they have been moved from c/include/libsbp to c/include/libsbp/packed although they will be moved back before merging so as to cause as few changes downstream as possible.
Unpacked structs
The unpacked structs are generated from the same schema and all existing conventions are in use. The structure of the header files matches the packed headers. The unpacked headers can be found under c/include/libsbp/unpacked/
Unpacked structs have the same members fields and order as the packed structs but do not have the packed attribute applied to them. The name of the unpacked struct is the same as the packed struct but with sbp_ prefixed to it - msg_obs_t becomes sbp_msg_obs_t.
Variable length arrays
The packed structs use zero length arrays for variable length messages. This is a GCC compiler extensions, the proper C syntax of flexible arrays is not valid C++.
The unpacked structs instead declare variable length arrays to be the maximum possible size and add in a new field to indicate how many items the array contains. Consider MSG_OBS as an example.
The packed version of this struct is:
typedef struct __attribute__((packed)) {
  obs_header_t header;
  packed_obs_content_t obs[0];
} msg_obs_t;

In order to send a message of this type one must write code such as
u8 payload[SBP_MAX_PAYLOAD_LEN];
msg_obs_t *msg = (msg_obs_t*)payload;
msg->header.t = ...;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_send_message(SBP_MSG_OBS, sizeof(*msg) + n_obs * sizeof(msg->obs[0]), payload);

In other words the send of a variable length message must track the encoded size of the message in order to send it. Similarly the receiver of a variable length message must consider the encoded size when accessing a variable length array:
void process_obs(msg_obs_t *msg, u8 len) {
u8 n_obs = (len - sizeof(*msg) / sizeof(msg->obs[0]);
for (u8 i = 0; i < n_obs; i++) process(msg->obs[i]);

The unpacked structs simplify this process for both the sender and receiver. The unpacked struct is defined as
typedef struct {
sbp_obs_header_t header;
sbp_packed_obs_content_t obs[14];
u8 n_obs;
} sbp_msg_obs_t;

The value of 14 is calculated by the new generator as the maximum number of items that can fit in to an encoded SBP frame. The extra field n_obs is automatically generated and indicates the number of items in the variable length array. The process of using a variable length array is simplified for both sender and receiver.
void send_obs() {
sbp_msg_obs_t msg;
msg->header = ...;
msg->n_obs = 2;
msg->obs[0] = ...
msg->obs[1] = ...
sbp_pack_and_send_message(SBP_MSG_OBS, &msg);

Similarly for the receiver
void process_obs(const sbp_msg_obs_t *msg) {
  for (u8 i = 0; i < msg->n_obs; i++) process(msg->obs[i]);
}

Strings
Variable length strings now have their encoding handled by libsbp. There are a series of helper struct for different encoding formats. They are:

Unterminated - strings which do not have a NULL terminator on the wire, eg sbp_msg_log_t::text
NULL terminated - strings which do have a NULL terminator on the wire, eg sbp_msg_fileio_write_req_t::filename
Multipart - strings which consist of multiple NULL delimited sections, eg sbp_msg_settings_read_req_t::setting
Double NULL terminated - similar to Multipart but with a double NULL indicating end of sequence, eg sbp_msg_linux_process_fd_summary::most_opened
Binary - strings which are actually binary data, more similar to an array than anything else, eg sbp_msg_fwd::fwd_payload

The string encodings have a series of helper functions to handle interacting with the objects. They are defined under c/include/libsbp/unpacked/string.
The new generator will process any variable length strings and generate wrapper functions for interacting with the fields in message objects. For example to set the text of a log message one would write
sbp_msg_log_t msg;
sbp_msg_log_t_text_set(&msg->text, ""A helpful log message"");

libsbp will track the length and encoding of the string and ensure that on the wire it is represented properly.
The string functions try to copy with encoding issues they may encounter due to not having these helpers before such as an incoming packet which contains a NULL terminated string which for whatever reason doesn't have a NULL terminator.
The string classes ensure that strings are always properly represented in C format
Differences
Previously empty structs were not generated (eg, msg_settings_read_by_index_done).
A new behaviour is that the unpacked generate will create a definition for these messages as well. Since empty structs are illegal in C and badly defined in C++ the generate will create a single dummy field in these struct which is ignored by all other parts of libsbp when processing these new structs. This allows some useful work later on such as expanding C++ message traits to include the full set of SBP messages.
New APIs
There is a new callback type to receive unpacked structs. It behaves in the same manner as the other 2 callback types except it received a parameter of type const sbp_msg_t * and does not have any length parameters.
sbp_msg_t is created by the new generator and is the union of all real SBP messages:
typedef union {
sbp_msg_obs_t obs;
sbp_msg_log_t log;
sbp_msg_pos_llh_cov_t pos_llh_cov;
...
} sbp_msg_t;

There is a new send function which can take an instance of sbp_msg_t.
s8 sbp_pack_and_send_message(u16 sender_id, u16 msg_type, const sbp_msg_t *msg);

There is also sbp_process_unpacked which behaves similar to sbp_process_payload
A user of libsbp can manually pack and unpack message if required with the general purpose function
s8 sbp_pack_msg(u8 *buf, u8 len, u16 msg_type, const sbp_msg_t *msg);
s8 sbp_unpack_msg(const u8 *buf, u8 len, u16 msg_type, sbp_msg_t *msg);

The size of unpacked structs do not corrospond to the encoded length. Should a user actually need to know this information they can call u8 sbp_packed_size(u16 msg_type, const sbp_msg_t *msg)
The generator creates specialisations for each real message type to avoid having to use the union (most useful for C++)
s8 sbp_pack_sbp_msg_obs_t(u8 *buf, u8 len, const sbp_msg_obs_t *msg);
s8 sbp_unpack_sbp_msg_obs_t(const u8 *buf, u8 len, sbp_msg_obs_t *msg);
u8 sbp_packed_size_sbp_msg_obs_t(const sbp_msg_obs_t *msg);

To replace the use of memcmp with unpacked structs the generator creates from cmp functions:
int sbp_msg_cmp(u16 msg_type, const sbp_msg_t *a, const sbp_msg_t *b);
int sbp_cmp_sbp_msg_obs_t(const sbp_msg_obs_t *a, const sbp_msg_obs_t *b);

There are a full set of C++ operators based on these functions.
API changes
The existing C API is unchanged.
The C++ wrappers in c/include/libsbp/cpp have had to change slightly.
The packed headers contain syntax which is illegal in C++ so moving fowards we must rely on the unpacked structs solely.
sbp::MessageHandler is updated to work only with unpacked messages. The CallbackInterface helper is updated to receive an sbp_msg_t from libsbp and pull out the correct field to pass to the overridden message handles.
For users of this class the only real change is that the handlers need to be updated to remove the uint8_t message_length parameter which is no longer provided, and change the type of the incoming message from msg_xxx_t to sbp_msg_xxx_t. Any handler which deals with variable length messages will need to be changed to use the generate n_xxx field instead of the message length.
Message traits is expanded to include the full set of SBP message types thanks to now generating ""empty"" structs.
Testing
The auto generated test suites are updated to deal with unpacked structs in addition to packed. The packed checks remain the same, the unpacked checks follow the same procedure of creating an unpacked struct, sending it, validating the encoded frame, unpacking it, checking field values.
Some test schemas need updating to cope with the new fields generated for use with variable length arrays.
Schema changes
A few schema items needed to be updated although wire format is unaffected.
MSG_GROUP_META
The field n_group_msgs has some meta information added to it which links it to the variable length array group_msgs. This stops the generator from trying to automatically generate a field of the same name. Users of this message do not need to change, they can simply stop tracking the encoded size of the message since this field now behaves like one would expect.
Strings
Any message which contains a variable length string has some meta information attached to it which describes the string encoding. This is only used by the new unpacked generator and is invisible anywhere else
SSR GridElement
The types GridElement and GridElementNoStd both contain a variable length array but are not real messages. They are currently used as an embedded type in a couple of messages.
The problem with this is that it's impossible to calculate the maximum number of items stored in the variable length array in a way that is valid for all potential uses of the embedded type. This is already a problem for MSG_SSR_GRIDDED_CORRECTION and MSG_SSR_GRIDDED_CORRECTION_DEP_A which can store different numbers of items in their GridElement::stec_residuals fields
There are 3 possible solutions to this:

Generate embedded types as nested structs. This was trialled and caused a huge number of changes downstream
Special case for these types, generate them as nested structs but nothing else. Extra complication in the generator
Change the spec to remove GridElement and GridElementNoStd, move their fields in to the real messages

Option 3 is implemented here. The wire encoding for these messages is not changed but it is technically a ""real"" schema change.
Demonstration
A prototype up to the level of starling-binary has been demonstrated for these changes, although it is a little out of date now. It was functional, the changes were not too intrusive and it allowed the pedantic flag to be turned on for all portable targets.
Work required
This is still a little rough around the edges. Documentation is missing for the unpacked structs and the formatting is terrible. The string helpers in particular can be simplified greatly
Review notes
I'd like some feedback about the general approach here without concentrating too much on the nitty gritty. The timeline on this is pretty open but this is the one thing that's really blocking strict language compliance in starling so I would like to make some progress on it. I don't intend to merge this PR as it is.
Particularly looking for comments on anything that might cause downstream problems I haven't thought of. Are there any users of libsbp that might be affected unintentionally?
What is the future of the pack structs? Are they worth keeping around?
How much of the new API is useful? Is there anything missing?",@silverjam I've written up a description of how I can see us moving away from the old API towards the new one based on my understanding of your comments - https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan. Does this align with what you were thinking?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,991,2021-05-31T01:30:30Z,2021-06-03T00:54:29Z,2021-06-03T00:54:29Z,MERGED,True,418,47,14,https://github.com/woodfell,[ESD-2032] Correct spec for fwd_payload member of MSG_FWD,1,[],https://github.com/swift-nav/libsbp/pull/991,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/991,"fwd_payload is currently defined as a string. In reality the contents of this field is binary data with an undefined structure.
This isn't causing problems at the moment, most languages handle strings in a way which is suitable. For the improvements to the C bindings which are required for portability and language compliance this field encoding would need special handling. It can be simplified by altering it so that it's an array of u8 rather than a string.","fwd_payload is currently defined as a string. In reality the contents of this field is binary data with an undefined structure.
This isn't causing problems at the moment, most languages handle strings in a way which is suitable. For the improvements to the C bindings which are required for portability and language compliance this field encoding would need special handling. It can be simplified by altering it so that it's an array of u8 rather than a string.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,991,2021-05-31T01:30:30Z,2021-06-03T00:54:29Z,2021-06-03T00:54:29Z,MERGED,True,418,47,14,https://github.com/woodfell,[ESD-2032] Correct spec for fwd_payload member of MSG_FWD,1,[],https://github.com/swift-nav/libsbp/pull/991,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/991#issuecomment-851111230,"fwd_payload is currently defined as a string. In reality the contents of this field is binary data with an undefined structure.
This isn't causing problems at the moment, most languages handle strings in a way which is suitable. For the improvements to the C bindings which are required for portability and language compliance this field encoding would need special handling. It can be simplified by altering it so that it's an array of u8 rather than a string.",Should we deprecate and create a new message?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,991,2021-05-31T01:30:30Z,2021-06-03T00:54:29Z,2021-06-03T00:54:29Z,MERGED,True,418,47,14,https://github.com/woodfell,[ESD-2032] Correct spec for fwd_payload member of MSG_FWD,1,[],https://github.com/swift-nav/libsbp/pull/991,https://github.com/woodfell,3,https://github.com/swift-nav/libsbp/pull/991#issuecomment-851114114,"fwd_payload is currently defined as a string. In reality the contents of this field is binary data with an undefined structure.
This isn't causing problems at the moment, most languages handle strings in a way which is suitable. For the improvements to the C bindings which are required for portability and language compliance this field encoding would need special handling. It can be simplified by altering it so that it's an array of u8 rather than a string.","Should we deprecate and create a new message?

Not sure. If we deprecate it and the old definition hangs around then we'd still need special handling for this string-but-not-a-string field such as the implementation of sbp_binary_string_t here. And if we have to have this special case anyway there isn't really any point in deprecating it.
This change doesn't actually change the wire encoding, only how it's represented in the language bindings. There will be some changes to types all languages, not just C, but this message isn't exactly widely used. If you think this is too much of a change to make to the spec then it's probably better to just go with the special case sbp_binary_string_t in C",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,992,2021-06-02T01:30:04Z,2021-06-02T02:27:04Z,2021-06-02T02:27:04Z,MERGED,True,28,6,2,https://github.com/notoriaga,rust: fix parsing of invalid sbp,2,[],https://github.com/swift-nav/libsbp/pull/992,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/992,"Issue was the parser would hold onto data while it waited to see the preamble, this just drops that data
(base) {18:31}~/projects/libsbp:steve/parser-fix ‚úó ‚û≠ time ./target/release/sbp2json <13-175033.sbp
./target/release/sbp2json < 13-175033.sbp  0.19s user 0.03s system 99% cpu 0.221 total","Issue was the parser would hold onto data while it waited to see the preamble, this just drops that data
(base) {18:31}~/projects/libsbp:steve/parser-fix ‚úó ‚û≠ time ./target/release/sbp2json <13-175033.sbp
./target/release/sbp2json < 13-175033.sbp  0.19s user 0.03s system 99% cpu 0.221 total",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,993,2021-06-03T19:31:58Z,2021-09-17T21:56:54Z,2021-09-17T21:56:54Z,CLOSED,False,2908,5,29,https://github.com/notoriaga,rust: wip callback based handler,10,[],https://github.com/swift-nav/libsbp/pull/993,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/993,For the file io stuff I'm working on it'd be nice to have a way to register callbacks for specific messages. This kind of works?,For the file io stuff I'm working on it'd be nice to have a way to register callbacks for specific messages. This kind of works?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,993,2021-06-03T19:31:58Z,2021-09-17T21:56:54Z,2021-09-17T21:56:54Z,CLOSED,False,2908,5,29,https://github.com/notoriaga,rust: wip callback based handler,10,[],https://github.com/swift-nav/libsbp/pull/993,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/993#issuecomment-863884259,For the file io stuff I'm working on it'd be nice to have a way to register callbacks for specific messages. This kind of works?,"Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 No Duplication information",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,993,2021-06-03T19:31:58Z,2021-09-17T21:56:54Z,2021-09-17T21:56:54Z,CLOSED,False,2908,5,29,https://github.com/notoriaga,rust: wip callback based handler,10,[],https://github.com/swift-nav/libsbp/pull/993,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/993#issuecomment-920350697,For the file io stuff I'm working on it'd be nice to have a way to register callbacks for specific messages. This kind of works?,@notoriaga Can close this PR now right?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,994,2021-06-05T10:30:37Z,2021-06-08T02:32:02Z,2021-06-08T02:32:03Z,MERGED,True,11241,10415,248,https://github.com/woodfell,[ESD-2045] Restructure old C API,8,[],https://github.com/swift-nav/libsbp/pull/994,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/994,"Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.","Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,994,2021-06-05T10:30:37Z,2021-06-08T02:32:02Z,2021-06-08T02:32:03Z,MERGED,True,11241,10415,248,https://github.com/woodfell,[ESD-2045] Restructure old C API,8,[],https://github.com/swift-nav/libsbp/pull/994,https://github.com/samvrlewis,2,https://github.com/swift-nav/libsbp/pull/994#issuecomment-855592098,"Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.","sbp_send_message renamed to sbp_send_payload
sbp_msg_callback_t renamed to sbp_payload_callback_t
sbp_register_callback renamed to sbp_register_payload_callback
sbp_register_all_msg_callback renamed to sbp_register_all_payload_callback


Am I understanding correctly that this is changing the legacy API? What's the thinking there? As an API consumer, I think I'd expect that for as long as I can use the legacy API, I don't need to update anything in my code (expect maybe include paths).
If I understand correctly:

A customer currently using libsbp will call sbp_send_message to directly send a packed struct
After this change is released (in v4?) they are expected to call sbp_send_payload instead to send a packed struct
sbp_send_message still exists in v4 but is now part of the 'new API' and is used to send a non-packed struct. Consumers who want to stay on the legacy API should not be calling this.

Have I got that right? If so, it seems a bit backwards to how I would expect it to work. Could we make the new APIs have brand new names, rather than reusing names from the legacy API in order to make this less confusing?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,994,2021-06-05T10:30:37Z,2021-06-08T02:32:02Z,2021-06-08T02:32:03Z,MERGED,True,11241,10415,248,https://github.com/woodfell,[ESD-2045] Restructure old C API,8,[],https://github.com/swift-nav/libsbp/pull/994,https://github.com/woodfell,3,https://github.com/swift-nav/libsbp/pull/994#issuecomment-855602919,"Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.","sbp_send_message renamed to sbp_send_payload
sbp_msg_callback_t renamed to sbp_payload_callback_t
sbp_register_callback renamed to sbp_register_payload_callback
sbp_register_all_msg_callback renamed to sbp_register_all_payload_callback


Am I understanding correctly that this is changing the legacy API? What's the thinking there? As an API consumer, I think I'd expect that for as long as I can use the legacy API, I don't need to update anything in my code (expect maybe include paths).
If I understand correctly:
* A customer currently using libsbp will call `sbp_send_message` to directly send a packed struct

* After this change is released (in v4?) they are expected to call `sbp_send_payload` instead to send a packed struct

* `sbp_send_message` still exists in v4 but is now part of the 'new API' and is used to send a non-packed struct. Consumers who want to stay on the legacy API should not be calling this.

Have I got that right? If so, it seems a bit backwards to how I would expect it to work. Could we make the new APIs have brand new names, rather than reusing names from the legacy API in order to make this less confusing?

Yeah that's a good point.
Long term we want to remove the old API and make the new API the only interface into libsbp. Certainly in a couple of major versions time sbp_send_message should accept sbp_msg_t, it will need to change eventually.
The prototype of this work defined a new function for sending sbp_msg_t types - sbp_pack_and_send_message. C doesn't have function overloading so unless we get in to preprocessor magic we'll have to define a new function, it should probably be sbp_encode_and_send_message.
So perhaps this strategy would be better:
V4 - Define a new function sbp_send_payload as described, marked as deprecated. sbp_send_message is left with its current meaning, it wraps sbp_send_payload and is also marked as deprecated with a message that in the next version its meaning will change. The new API will define a function called sbp_encode_and_send_message which accepts sbp_msg_t as a parameter.
V5 - sbp_send_message is redefined to accept sbp_msg_t. sbp_encode_and_send_message is marked as deprecated. sbp_send_payload still exists. Users of the old API will need to change from sbp_send_message to sbp_send_payload if they want to continue using the old API, but they will get messages that the old API will be removed in the next major release. Users of the new API should change from sbp_encode_and_send_message to sbp_send_message.
V6 - Old API is completely removed. sbp_encode_and_send_message is removed, sbp_send_message(sbp_msg_t) is the only way to send an SBP message.
A similar strategy can be followed for the callback types - define new functions for the new API in V4, the existing functions retain their current meaning but are marked as deprecated. In V5 they change meaning to the new API, in V6 the old API is completely removed.
Does that sound better?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,994,2021-06-05T10:30:37Z,2021-06-08T02:32:02Z,2021-06-08T02:32:03Z,MERGED,True,11241,10415,248,https://github.com/woodfell,[ESD-2045] Restructure old C API,8,[],https://github.com/swift-nav/libsbp/pull/994,https://github.com/samvrlewis,4,https://github.com/swift-nav/libsbp/pull/994#issuecomment-855645951,"Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.","Certainly in a couple of major versions time sbp_send_message should accept sbp_msg_t, it will need to change eventually.

Is this a hard requirement? You have more context here but I would lean towards forever deprecating that function name (and any other function names or types that need to be replaced) and creating entirely new ones for the new API. In general, reusing existing names I think will mean:

More migration work

If a proactive consumer upgrades at V5, or a new consumer starts using the API at V5, they then need to migrate all symbol names again at V6  (which is probably not so much of a problem as it would probably be possible to use find/replace to do the bulk of the work, but still it is more potentially unnecessary work)


Additional confusion because of multiple definitions for what a single symbol means across history

I'm thinking mostly about customers here who may not have the full context of this change and might be confused when trying to use the new API while cross-referencing code-snippets/examples/tutorials/etc. that were written against the old API.


We're completely locked into killing the legacy API as soon as we release V6 (I think?).

If we don't reuse names we have more flexibility on when we can hit the kill switch on the old API. I don't know how likely this is, but I'm thinking of the case of a customer who urgently needs to be able work with a newly defined SBP message but doesn't have time to migrate to the new API.



I realise that these are relatively minor annoyances and can be communicated through release notes etc. but I also think with this sort of thing that it's in our best interests to have as smooth of a transition as possible with the least amount of possible confusion.
I would be in favor of creating a new set of names that haven't already been used but maybe I'm missing something about why we'd want to keep the names consistent before & after the API change? I am also probably lacking the bigger picture here - I don't know how many external parties/customers we have using libsbp. If there's not a significant amount then maybe I'm making a mountain out of a molehill.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,994,2021-06-05T10:30:37Z,2021-06-08T02:32:02Z,2021-06-08T02:32:03Z,MERGED,True,11241,10415,248,https://github.com/woodfell,[ESD-2045] Restructure old C API,8,[],https://github.com/swift-nav/libsbp/pull/994,https://github.com/woodfell,5,https://github.com/swift-nav/libsbp/pull/994#issuecomment-855673858,"Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.","Yeah I understand your point. The idea of redefining sbp_send_message originally came from @silverjam , I tend to agree with it as a long term strategy, perhaps he can offer some thoughts. I'm actually not sure how many customers use the C API. I know Java is in use in a few places but that's all unaffected here.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,994,2021-06-05T10:30:37Z,2021-06-08T02:32:02Z,2021-06-08T02:32:03Z,MERGED,True,11241,10415,248,https://github.com/woodfell,[ESD-2045] Restructure old C API,8,[],https://github.com/swift-nav/libsbp/pull/994,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/994#issuecomment-856139942,"Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.","Yeah I understand your point. The idea of redefining sbp_send_message originally came from @silverjam , I tend to agree with it as a long term strategy, perhaps he can offer some thoughts.

Not sure I represented my thinking around this clearly enough, I don't necessarily think we need to rename sbp_send_message, especially given the points that @samvrlewis makes, in general these are my goals for the names we pick:

simple and minimal as possible while communicating their intent
should reflect the final state of the new API (i.e. we shouldn't have to rename them as we transition from v4 -> v6)
should use terms/conventions consistently (both consistent within the C API, and as much as possible, consistent the other APIs)


I'm actually not sure how many customers use the C API. I know Java is in use in a few places but that's all unaffected here.

I don't have hard numbers here either, but it gets mentioned pretty frequently on our support channel.  From mentions in our support channels, our primary languages for libsbp seem to be C, Python, JavaScript and Java.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,994,2021-06-05T10:30:37Z,2021-06-08T02:32:02Z,2021-06-08T02:32:03Z,MERGED,True,11241,10415,248,https://github.com/woodfell,[ESD-2045] Restructure old C API,8,[],https://github.com/swift-nav/libsbp/pull/994,https://github.com/silverjam,7,https://github.com/swift-nav/libsbp/pull/994#issuecomment-856198784,"Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.","‚¨á‚¨á‚¨á @woodfell ‚¨á‚¨á‚¨á

The changes in this PR are:
C

..


All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
sbp_send_message renamed to sbp_send_payload
sbp_msg_callback_t renamed to sbp_payload_callback_t
sbp_register_callback renamed to sbp_register_payload_callback
sbp_register_all_msg_callback renamed to sbp_register_all_payload_callback
All functions and types relating to the old API are marked with a deprecated attribute
[..]


I like this change in that it represents the semantics of the old legacy API much better when juxtaposed to the new API, however I agree with @samvrlewis we should either not do this rename or add a compat header that defines the old names (e.g. sbp_send_message and sbp_msg_callback_t) in terms of the new names so that users do not need to do any work to use the new V4 API.

C++
* All C++ headers relating to the old API are moved to `libsbp/legacy/cpp`

* `sbp::MessageHandler` renamed to `sbp::PayloadHandler`

* `sbp::MessageHandler` and `sbp::AllFrameHandler` marked as deprecated

* `sbp::State::send_message` and `sbp::State::process_payload` marked as deprecated


I don't think the C++ API is used outside of Swift since it hasn't existed for that long, so we can probably get away with a rename here.

‚¨á‚¨á‚¨á @samvrlewis responding to @woodfell ‚¨á‚¨á‚¨á


Certainly in a couple of major versions time sbp_send_message should accept sbp_msg_t, it will need to change eventually.

Is this a hard requirement? You have more context here but I would lean towards forever deprecating that function name (and any other function names or types that need to be replaced) and creating entirely new ones for the new API. In general, reusing existing names I think will mean:

More migration work
[..]
Additional confusion because of multiple definitions for what a single symbol means across history
[..]
We're completely locked into killing the legacy API as soon as we release V6 (I think?).
[..]


I think this is probably important, as much as we might want to kill the old legacy API and clean up the code base, there's likely to be a user that will pop that can't migrate to the new API for some reason, so being able to resurrect the old API is probably a good ability to maintain.

I would be in favor of creating a new set of names that haven't already been used but maybe I'm missing something about why we'd want to keep the names consistent before & after the API change? I am also probably lacking the bigger picture here - I don't know how many external parties/customers we have using libsbp. If there's not a significant amount then maybe I'm making a mountain out of a molehill.

These are great points, I think the only way we are going to be able to ""have our cake and eat it too"" (i.e. have simple names with good semantics) is to use versioning within the name itself or to pick a different naming scheme.  This would allow us to define one set of new names for migration work, later migration work would only require changing include paths.  So, for example:

sbp_send_message2 instead of sbp_send_message
sbp_message_callback_t instead of sbp_msg_callback_t
sbp_register_callback2 instead of sbp_register_callback
sbp_register_all_callback instead of sbp_register_all_msg_callback

Or maybe we could make use of different naming convention like sbp_<object>_<action> instead of applying versioning:

sbp_message_send instead of sbp_send_message
sbp_message_callback_t instead of sbp_msg_callback_t
sbp_message_callback_register instead of sbp_register_callback
sbp_message_callback_register_all instead of sbp_register_all_msg_callback

In both of these cases we should probably retain the renames of the legacy API so that the old/new APIs can coexist without generating a large amount of confusion (since the rename makes it clear that the old API deals with pre-encoded payloads).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,994,2021-06-05T10:30:37Z,2021-06-08T02:32:02Z,2021-06-08T02:32:03Z,MERGED,True,11241,10415,248,https://github.com/woodfell,[ESD-2045] Restructure old C API,8,[],https://github.com/swift-nav/libsbp/pull/994,https://github.com/woodfell,8,https://github.com/swift-nav/libsbp/pull/994#issuecomment-856363545,"Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.","@RReichert Thanks for the review. I've made quite a few changes following recent discussions about the migration plan so some things aren't relevant any more - some functions aren't marked as deprecated any more and the like. Please take a look at the migration plan linked above and give it another quick glance, it should be up to date now except for those headers which are still in the wrong place (I'll do a final commit just before merging to move them)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,994,2021-06-05T10:30:37Z,2021-06-08T02:32:02Z,2021-06-08T02:32:03Z,MERGED,True,11241,10415,248,https://github.com/woodfell,[ESD-2045] Restructure old C API,8,[],https://github.com/swift-nav/libsbp/pull/994,https://github.com/woodfell,9,https://github.com/swift-nav/libsbp/pull/994#issuecomment-856390648,"Based on comments by @silverjam regarding the long term options for migrating away from the old ""packed"" API towards the new API over the next several major releases. This PR demonstrates changes which might be made to the structure of the old API as it exists at the moment in preparation for implementing a new API. The PR does not include a new API, it only alters the old API in ways that can ease migration in the future. See https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1832157449/C+API+migration+plan for the ideas behind this move.
The changes in this PR are:
C

All generated headers from c/include/libsbp are moved to c/include/libsbp/legacy without change except for the include guard
A new set of generated headers replaces the old ones. These header write out a compiler message when built indicating that these files are subject to change and the types will be deprecated in the coming releases (*see note below)
All types and functions related to the old API are extracted from c/include/libsbp/sbp.h and moved to a new header `c/include/libsbp/legacy/api.h
libsbp/legacy/api.h is included from libsbp/sbp.h
Legacy API names changed to fit the new naming scheme which will be shared with the V4 API


sbp__


sbp_send_message renamed to sbp_payload_send
sbp_register_callback renamed to sbp_payload_callback_register
sbp_register_all_msg_callback renamed to sbp_all_payload_callback_register
Compatibility header created which wraps the new names with the old ones


eg. sbp_send_message redirects to sbp_payload_send


All functions in the compatibility header are marked with a deprecated attribute

C++

All C++ headers relating to the old API are moved to libsbp/legacy/cpp
sbp::MessageHandler renamed to sbp::PayloadHandler

General

Include directives changed from #include ""xxx.h"" to #include <libsbp/xxx.h> in all instances
Removed unused header c/include/libsbp/sbp_handler.hpp

* note: The replacement generated headers which should be in c/include/libsbp are currently in c/include/libsbp/move_these_headers_up_one_level_before_merging. This is to avoid an issue with the github diff where it doesn't properly detect that the old header have just moved rather than been massively altered.","I know there are some outstanding queries on a few issues (which functions get deprecated for example) but I'm going to merge this in to the integration branch anyway to try to keep things moving, we can sort it out before delivery",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,995,2021-06-07T00:02:49Z,2021-06-08T03:26:06Z,2021-06-08T03:26:06Z,MERGED,True,57208,260,138,https://github.com/woodfell,[ESD-2047] Implement new C generator,7,[],https://github.com/swift-nav/libsbp/pull/995,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/995,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,996,2021-06-07T02:26:30Z,2021-06-07T04:13:41Z,2021-06-07T04:13:42Z,MERGED,True,1125,1125,2,https://github.com/samvrlewis,generator (c): Sort the spec files,1,[],https://github.com/swift-nav/libsbp/pull/996,https://github.com/samvrlewis,1,https://github.com/swift-nav/libsbp/pull/996,"Makes the ordering of the includes and case statements in sbp_msg.h
deterministic.","Makes the ordering of the includes and case statements in sbp_msg.h
deterministic.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,997,2021-06-07T03:11:20Z,2021-06-07T23:25:48Z,2021-06-07T23:25:49Z,MERGED,True,1221,1286,7,https://github.com/RReichert,additional generated work,3,[],https://github.com/swift-nav/libsbp/pull/997,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/997,"This PR piggy backs on #996. Seems like the Generated artifacts stage was failing because the Java and Rust generated files weren't up to date. Just introducing them into the commit didn't kick off the stage because the files themselves weren't in the list of file changes that would kick off the stage. I've suggested removing those files from the list, not sure if this was done to save $$$.","This PR piggy backs on #996. Seems like the Generated artifacts stage was failing because the Java and Rust generated files weren't up to date. Just introducing them into the commit didn't kick off the stage because the files themselves weren't in the list of file changes that would kick off the stage. I've suggested removing those files from the list, not sure if this was done to save $$$.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,998,2021-06-07T06:27:35Z,2021-06-08T04:06:14Z,2021-06-08T04:06:15Z,MERGED,True,141550,52605,370,https://github.com/woodfell,[ESD-2047] Generated tests for new API,3,[],https://github.com/swift-nav/libsbp/pull/998,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/998,"All existing generated tests are renamed/moved to contain legacy_.
Added a new generator to replace test_c.py which generates tests for the new API based on the test specs. There are tests for both the C and C++ APIs, they are essentially duplicates of all the existing generated tests.
This diff is awful because github doesn't like it when fileA moves to fileB and then a new version of fileA is made. I suggest reviewing just the new templates and one or two of the generated test suites, then run make gen-c to see that everything else is just generated","All existing generated tests are renamed/moved to contain legacy_.
Added a new generator to replace test_c.py which generates tests for the new API based on the test specs. There are tests for both the C and C++ APIs, they are essentially duplicates of all the existing generated tests.
This diff is awful because github doesn't like it when fileA moves to fileB and then a new version of fileA is made. I suggest reviewing just the new templates and one or two of the generated test suites, then run make gen-c to see that everything else is just generated",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,999,2021-06-07T09:43:49Z,2021-06-08T06:08:43Z,2021-06-08T06:08:43Z,MERGED,True,61279,24980,353,https://github.com/woodfell,[ESD-2048] Rework generated headers,4,[],https://github.com/swift-nav/libsbp/pull/999,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/999,"Refactor the new API messages template.
Added documentation blocks for every type and function. They got so long that finding the actual function lines of code in those header became very difficult. The header files are now mostly comments (approx 2:1 ratio) which makes seeing where the block to do with one message end and the next begins incredibly difficult.
To get around this I tried putting in a large full width banner at the start of each message type along with some hackery for force clang-format to leave some vertical whitespace between messages. Not sure it's really working though.
All of the #defines which are common between the new and old APIs (SBP_MSG_xxx, bitfield macros) are broken out in to a new set of generated header files - include/libsbp/module_macros.h. This file is included by both libsbp/legacy/module.h and libsbp/new/module.h and allows for the removal of the #ifndef hack which was previously there to prevent a compiler error from multiple definitions of the same token
Some of the doc comments for functions to do with string encoding function reference parameters which don't exist. This is intentional as those parameters will change in the big rename/move effort towards the end. They are written incorrectly now so that they don't get forgotten later, they match the parameters which will exist by the end.
Suggestion for review here is to just look at the changes to the template file, then choose a particular module and review the output for just that one set of headers - for example libsbp/legacy/settings.h, libsbp/new/settings.h, and libsbp/settings_macros.h","Refactor the new API messages template.
Added documentation blocks for every type and function. They got so long that finding the actual function lines of code in those header became very difficult. The header files are now mostly comments (approx 2:1 ratio) which makes seeing where the block to do with one message end and the next begins incredibly difficult.
To get around this I tried putting in a large full width banner at the start of each message type along with some hackery for force clang-format to leave some vertical whitespace between messages. Not sure it's really working though.
All of the #defines which are common between the new and old APIs (SBP_MSG_xxx, bitfield macros) are broken out in to a new set of generated header files - include/libsbp/module_macros.h. This file is included by both libsbp/legacy/module.h and libsbp/new/module.h and allows for the removal of the #ifndef hack which was previously there to prevent a compiler error from multiple definitions of the same token
Some of the doc comments for functions to do with string encoding function reference parameters which don't exist. This is intentional as those parameters will change in the big rename/move effort towards the end. They are written incorrectly now so that they don't get forgotten later, they match the parameters which will exist by the end.
Suggestion for review here is to just look at the changes to the template file, then choose a particular module and review the output for just that one set of headers - for example libsbp/legacy/settings.h, libsbp/new/settings.h, and libsbp/settings_macros.h",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1000,2021-06-08T02:52:57Z,2021-09-02T05:19:55Z,2022-05-04T00:49:12Z,MERGED,True,270575,63384,863,https://github.com/RReichert,[ESD-2043] Portability project,44,[],https://github.com/swift-nav/libsbp/pull/1000,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1000,Do Not Merge - this is an project PR,Do Not Merge - this is an project PR,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1000,2021-06-08T02:52:57Z,2021-09-02T05:19:55Z,2022-05-04T00:49:12Z,MERGED,True,270575,63384,863,https://github.com/RReichert,[ESD-2043] Portability project,44,[],https://github.com/swift-nav/libsbp/pull/1000,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1000#issuecomment-863883676,Do Not Merge - this is an project PR,"SonarCloud Quality Gate failed.
  1 Bug
  0 Vulnerabilities
  0 Security Hotspots
  11 Code Smells
 No Coverage information
 4.9% Duplication",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1001,2021-06-08T04:38:11Z,2021-06-08T05:03:57Z,2021-06-08T05:03:58Z,MERGED,True,56675,47559,281,https://github.com/woodfell,Woodfell/esd 2048/header template alternative layout,1,[],https://github.com/swift-nav/libsbp/pull/1001,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1001,"An alternative approach to layout out the generated header files for the new API.
The original version matches the legacy header files in that every message defined in a package is declared in the same header file - observation.h contains all types defined in the observation package.
The addition of extra helper functions and documentation ballooned the size of the generated header. settings.h in the legacy API is ~200 lines, in the new API it's ~3000 lines.
The files end up being ~60-70% comments which makes it very difficult to infer structure when looking over the headers themselves.
This approach generates a header file per type in the spec. The package header files automatically include all the per-type header files so from the user perspective nothing really changes, but when opening up a file and looking at how it's written it's a lot easier to identify the separation between types since they are all in separate files.
For example:
There are now file callse

libsbp/new/observation/MSG_OBS.h
libsbp/new/observation/ObservationHeader.h
libsbp/new/observation/PackedObsContent.h
and many, many more

And a file libsbp/new/observation.h which includes every header in libsbp/new/observation/","An alternative approach to layout out the generated header files for the new API.
The original version matches the legacy header files in that every message defined in a package is declared in the same header file - observation.h contains all types defined in the observation package.
The addition of extra helper functions and documentation ballooned the size of the generated header. settings.h in the legacy API is ~200 lines, in the new API it's ~3000 lines.
The files end up being ~60-70% comments which makes it very difficult to infer structure when looking over the headers themselves.
This approach generates a header file per type in the spec. The package header files automatically include all the per-type header files so from the user perspective nothing really changes, but when opening up a file and looking at how it's written it's a lot easier to identify the separation between types since they are all in separate files.
For example:
There are now file callse

libsbp/new/observation/MSG_OBS.h
libsbp/new/observation/ObservationHeader.h
libsbp/new/observation/PackedObsContent.h
and many, many more

And a file libsbp/new/observation.h which includes every header in libsbp/new/observation/",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1002,2021-06-08T04:39:14Z,2021-06-08T08:52:25Z,2021-06-08T08:52:25Z,MERGED,True,87,5,2,https://github.com/samvrlewis,[ESD-2050] Add doc to the sbp_msg.h file,2,[],https://github.com/swift-nav/libsbp/pull/1002,https://github.com/samvrlewis,1,https://github.com/swift-nav/libsbp/pull/1002,"This one is simple enough to not really benefit from splitting the autogen code from the non-autogen code across commits, but I did it anyway:
non-generated: 9004872
generated: 6bce8de","This one is simple enough to not really benefit from splitting the autogen code from the non-autogen code across commits, but I did it anyway:
non-generated: 9004872
generated: 6bce8de",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1002,2021-06-08T04:39:14Z,2021-06-08T08:52:25Z,2021-06-08T08:52:25Z,MERGED,True,87,5,2,https://github.com/samvrlewis,[ESD-2050] Add doc to the sbp_msg.h file,2,[],https://github.com/swift-nav/libsbp/pull/1002,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/1002#issuecomment-856439552,"This one is simple enough to not really benefit from splitting the autogen code from the non-autogen code across commits, but I did it anyway:
non-generated: 9004872
generated: 6bce8de",This may fix https://swift-nav.atlassian.net/jira/software/projects/DEVINFRA/issues/DEVINFRA-493 ?  or you may want to see if you can fix it at the same time?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1002,2021-06-08T04:39:14Z,2021-06-08T08:52:25Z,2021-06-08T08:52:25Z,MERGED,True,87,5,2,https://github.com/samvrlewis,[ESD-2050] Add doc to the sbp_msg.h file,2,[],https://github.com/swift-nav/libsbp/pull/1002,https://github.com/woodfell,3,https://github.com/swift-nav/libsbp/pull/1002#issuecomment-856562265,"This one is simple enough to not really benefit from splitting the autogen code from the non-autogen code across commits, but I did it anyway:
non-generated: 9004872
generated: 6bce8de",Just needed a quick rebase to sort out the massive diff,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1003,2021-06-08T06:44:05Z,2021-06-09T02:49:50Z,2021-06-09T02:49:51Z,MERGED,True,27210,11151,50,https://github.com/woodfell,[ESD-2049] Tidy up generated source files,3,[],https://github.com/swift-nav/libsbp/pull/1003,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1003,"Not a huge amount going on here in the generated files, just formatting and comments. Templates tidied up a little bit but it would benefit more from some attention in c.py, that will have to wait until the end.","Not a huge amount going on here in the generated files, just formatting and comments. Templates tidied up a little bit but it would benefit more from some attention in c.py, that will have to wait until the end.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1003,2021-06-08T06:44:05Z,2021-06-09T02:49:50Z,2021-06-09T02:49:51Z,MERGED,True,27210,11151,50,https://github.com/woodfell,[ESD-2049] Tidy up generated source files,3,[],https://github.com/swift-nav/libsbp/pull/1003,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/1003#issuecomment-856549558,"Not a huge amount going on here in the generated files, just formatting and comments. Templates tidied up a little bit but it would benefit more from some attention in c.py, that will have to wait until the end.","make html is generating a lot more doxygen warnings, mostly repetitive
warning: explicit link request to 'sbp_send_message' could not be resolved
warning: argument 'SBP_OK' of command @param is not found in the argument list of sbp_send_sbp_msg_cw_results_t(struct sbp_state *s, u16 sender_id, const sbp_msg_cw_results_t *msg, s32(*write)(u8 *buff, u32 n, void *context))",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1003,2021-06-08T06:44:05Z,2021-06-09T02:49:50Z,2021-06-09T02:49:51Z,MERGED,True,27210,11151,50,https://github.com/woodfell,[ESD-2049] Tidy up generated source files,3,[],https://github.com/swift-nav/libsbp/pull/1003,https://github.com/woodfell,3,https://github.com/swift-nav/libsbp/pull/1003#issuecomment-856558404,"Not a huge amount going on here in the generated files, just formatting and comments. Templates tidied up a little bit but it would benefit more from some attention in c.py, that will have to wait until the end.","make html is generating a lot more doxygen warnings, mostly repetitive
warning: explicit link request to 'sbp_send_message' could not be resolved
warning: argument 'SBP_OK' of command @param is not found in the argument list of sbp_send_sbp_msg_cw_results_t(struct sbp_state *s, u16 sender_id, const sbp_msg_cw_results_t *msg, s32(*write)(u8 *buff, u32 n, void *context))


Thanks @jayvdb
Some of those are expected errors as they have been written pending name changes that have to be delayed until the end. I'll put fixes for the other issues on a new PR",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1004,2021-06-08T07:15:43Z,2021-06-30T07:33:49Z,2021-06-30T07:33:54Z,CLOSED,False,84643,17216,677,https://github.com/woodfell,[WIP][ESD-2043] Portability project for review,5,[],https://github.com/swift-nav/libsbp/pull/1004,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1004,Restricted to a small set of messages for the purposes of reviewing. Should be a bit smaller than the main PR,Restricted to a small set of messages for the purposes of reviewing. Should be a bit smaller than the main PR,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1004,2021-06-08T07:15:43Z,2021-06-30T07:33:49Z,2021-06-30T07:33:54Z,CLOSED,False,84643,17216,677,https://github.com/woodfell,[WIP][ESD-2043] Portability project for review,5,[],https://github.com/swift-nav/libsbp/pull/1004,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1004#issuecomment-863884329,Restricted to a small set of messages for the purposes of reviewing. Should be a bit smaller than the main PR,"SonarCloud Quality Gate failed.
  1 Bug
  0 Vulnerabilities
  0 Security Hotspots
  11 Code Smells
 No Coverage information
 14.5% Duplication",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1005,2021-06-08T08:15:29Z,2021-06-11T05:14:33Z,2021-06-11T05:14:34Z,MERGED,True,487,478,208,https://github.com/woodfell,Doxygen errors,3,[],https://github.com/swift-nav/libsbp/pull/1005,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1005,"Address mistakes in comment blocks which are causing doxygen error.
The most current error remaining on this PR is to do with an undocumented argument s and documentation for an extra argument msg. This will be resolved when the items on this document are actioned after everything else has been completed","Address mistakes in comment blocks which are causing doxygen error.
The most current error remaining on this PR is to do with an undocumented argument s and documentation for an extra argument msg. This will be resolved when the items on this document are actioned after everything else has been completed",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1006,2021-06-08T09:00:52Z,2021-06-09T00:55:03Z,2021-06-09T00:55:04Z,MERGED,True,1535,1610,2,https://github.com/woodfell,[ESD-2058] Update message traits template,2,[],https://github.com/swift-nav/libsbp/pull/1006,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1006,Remove the is_unpacked field. Add a banner so that clang-format picks up this file as well. Use more descriptive SBP_MSG_x rather than numbers. Simplify the template slightly.,Remove the is_unpacked field. Add a banner so that clang-format picks up this file as well. Use more descriptive SBP_MSG_x rather than numbers. Simplify the template slightly.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1007,2021-06-08T09:16:00Z,2021-06-09T01:35:45Z,2021-06-09T01:35:46Z,MERGED,True,626,888,232,https://github.com/woodfell,[ESD-2059] Add a typedef for write callback,2,[],https://github.com/swift-nav/libsbp/pull/1007,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1007,The signature for the write callback is now defined in parameter lists all over libsbp. Better to turn it in to a typedef to avoid repetition.,The signature for the write callback is now defined in parameter lists all over libsbp. Better to turn it in to a typedef to avoid repetition.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1008,2021-06-08T12:21:53Z,2021-06-09T03:05:06Z,2021-06-09T03:05:07Z,MERGED,True,533,293,14,https://github.com/samvrlewis,Fix big endian for new API [ESD-2057],7,[],https://github.com/swift-nav/libsbp/pull/1008,https://github.com/samvrlewis,1,https://github.com/swift-nav/libsbp/pull/1008,"Fixes all of the remaining big endian issues for the new API (including some pre-existing issues that were in sbp.c)
To go with this, and so that we have confidence that we truly do support big endian I also added a new CI test that runs the generated tests against the new API on a MIPS (big endian) qemu instance. The legacy API doesn't pass this (as expected) so to get the tests to pass, I divided up the legacy and new API tests into two separate test programs and added the ability to only test the new API to the makefile.
Happy to hear any suggestions on how to make any of this cleaner.","Fixes all of the remaining big endian issues for the new API (including some pre-existing issues that were in sbp.c)
To go with this, and so that we have confidence that we truly do support big endian I also added a new CI test that runs the generated tests against the new API on a MIPS (big endian) qemu instance. The legacy API doesn't pass this (as expected) so to get the tests to pass, I divided up the legacy and new API tests into two separate test programs and added the ability to only test the new API to the makefile.
Happy to hear any suggestions on how to make any of this cleaner.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1009,2021-06-08T17:20:14Z,2021-06-09T17:25:06Z,2021-06-09T17:25:06Z,MERGED,True,2868,0,25,https://github.com/notoriaga,rust: impl TryFrom<SBP> for all messages,2,[],https://github.com/swift-nav/libsbp/pull/1009,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1009,"Still working on the event handler thing, but it definitely still needs some work. I think for now it should live in the console as it's a pretty good proving ground for the concept. this is just the minimum changes that are needed to implement it elsewhere. Both changes also seem generally useful","Still working on the event handler thing, but it definitely still needs some work. I think for now it should live in the console as it's a pretty good proving ground for the concept. this is just the minimum changes that are needed to implement it elsewhere. Both changes also seem generally useful",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1010,2021-06-08T22:23:54Z,2021-06-08T22:43:01Z,2021-06-08T22:43:02Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - SV4-144 update googleflags (#83),1,[],https://github.com/swift-nav/libsbp/pull/1010,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1010,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  57f1cbc4  ->  38138963

38138963  :  SV4-144 update googleflags (#83)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/6855/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  57f1cbc4  ->  38138963

38138963  :  SV4-144 update googleflags (#83)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/6855/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1011,2021-06-09T02:10:17Z,2021-06-09T02:50:12Z,2021-06-09T02:50:12Z,MERGED,True,152,91,7,https://github.com/woodfell,"Minor fixes, review comments",4,[],https://github.com/swift-nav/libsbp/pull/1011,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1011,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1012,2021-06-09T03:15:20Z,2021-06-09T05:37:13Z,2021-06-09T05:37:13Z,CLOSED,False,261195,62186,831,https://github.com/woodfell,[ESD-2060] Rename and restructure,12,[],https://github.com/swift-nav/libsbp/pull/1012,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1012,https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1837891645/Name%2Blocation%2Bchanges%2Bneeded,https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1837891645/Name%2Blocation%2Bchanges%2Bneeded,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1013,2021-06-09T03:15:34Z,2021-06-10T03:50:22Z,2021-06-10T03:50:22Z,MERGED,True,50448,50376,475,https://github.com/woodfell,[ESD-2060] Apply name and location changes,6,[],https://github.com/swift-nav/libsbp/pull/1013,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1013,"Implement all the items listed in https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1837891645/Name+location+changes+needed
github diff having the usual issues when files get moved, but the changes aren't particularly massive when you get in to it. Maybe best to just look at the templates.","Implement all the items listed in https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1837891645/Name+location+changes+needed
github diff having the usual issues when files get moved, but the changes aren't particularly massive when you get in to it. Maybe best to just look at the templates.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1014,2021-06-09T11:46:12Z,2021-06-11T04:15:37Z,2021-06-11T04:15:38Z,MERGED,True,6134,4879,312,https://github.com/woodfell,[ESD-2046] String encoding,10,[],https://github.com/swift-nav/libsbp/pull/1014,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1014,Rework string encoders so there is less duplicated code. Update generated tests to use string functions in preference to interacting with the contents of string objects.,Rework string encoders so there is less duplicated code. Update generated tests to use string functions in preference to interacting with the contents of string objects.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1015,2021-06-10T04:51:25Z,2021-06-10T05:54:40Z,2021-06-10T05:54:41Z,MERGED,True,11,11,3,https://github.com/woodfell,Turn on pedantic and Wconversion flags,1,[],https://github.com/swift-nav/libsbp/pull/1015,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1015,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1016,2021-06-10T05:15:17Z,2021-06-10T05:54:54Z,2021-06-10T05:54:54Z,MERGED,True,0,255,255,https://github.com/woodfell,Don't include endian.h,1,[],https://github.com/swift-nav/libsbp/pull/1016,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1016,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1017,2021-06-10T06:42:12Z,2021-06-11T04:34:55Z,2021-06-11T04:34:56Z,MERGED,True,1927,1537,97,https://github.com/woodfell,Add enum for message type,14,[],https://github.com/swift-nav/libsbp/pull/1017,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1017,"This PR includes both the most recent commits from the integration branch and merges in the string encoder changes so the diff is a little weird.
Generates a new enum sbp_msg_type_t from the SBP specs which is then used in all V4 APIs. The old #define still exists with the original names. The enum values are named similarly in SnakeCase (ie SBP_MSG_OBS -> SbpMsgObs)
There is a fairly large shuffle of things in sbp.c so that sbp_msg_type_t is used for all internal functions but the legacy API still uses u16 everywhere.","This PR includes both the most recent commits from the integration branch and merges in the string encoder changes so the diff is a little weird.
Generates a new enum sbp_msg_type_t from the SBP specs which is then used in all V4 APIs. The old #define still exists with the original names. The enum values are named similarly in SnakeCase (ie SBP_MSG_OBS -> SbpMsgObs)
There is a fairly large shuffle of things in sbp.c so that sbp_msg_type_t is used for all internal functions but the legacy API still uses u16 everywhere.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1018,2021-06-10T07:37:56Z,2021-06-11T04:54:08Z,2021-06-11T04:54:09Z,MERGED,True,615,1021,334,https://github.com/woodfell,Use more compilers in CI,10,[],https://github.com/swift-nav/libsbp/pull/1018,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1018,"Add CI stages for gcc/clang in debug/release builds, also mac. Tried to add windows but it never worked properly.
Fixed several new ""errors"" that weren't previously showing up","Add CI stages for gcc/clang in debug/release builds, also mac. Tried to add windows but it never worked properly.
Fixed several new ""errors"" that weren't previously showing up",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1018,2021-06-10T07:37:56Z,2021-06-11T04:54:08Z,2021-06-11T04:54:09Z,MERGED,True,615,1021,334,https://github.com/woodfell,Use more compilers in CI,10,[],https://github.com/swift-nav/libsbp/pull/1018,https://github.com/RReichert,2,https://github.com/swift-nav/libsbp/pull/1018#issuecomment-859216780,"Add CI stages for gcc/clang in debug/release builds, also mac. Tried to add windows but it never worked properly.
Fixed several new ""errors"" that weren't previously showing up",Sorry I accidentally closed this PR trying to add a comment,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1019,2021-06-10T23:02:24Z,2021-06-11T02:32:53Z,2021-06-11T02:32:54Z,MERGED,True,227,121,23,https://github.com/RReichert,ESD-2046 string encoding,3,[],https://github.com/swift-nav/libsbp/pull/1019,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1019,"These are the changes I'm proposing for #1014, none of them are essential:

removed the unused encoding length from the string init functions
minor coding style guide additions
minor documentation clear ups

Looking at the code there are area in the code that if max_encoded_length is 0 or 1, it will generate a buffer overflow error, but that is due to the incorrect entry in the spec documentation and provided that is correct, this won't be a problem. Otherwise the encoding/decoding and all the string functions seems safe and working as expected.","These are the changes I'm proposing for #1014, none of them are essential:

removed the unused encoding length from the string init functions
minor coding style guide additions
minor documentation clear ups

Looking at the code there are area in the code that if max_encoded_length is 0 or 1, it will generate a buffer overflow error, but that is due to the incorrect entry in the spec documentation and provided that is correct, this won't be a problem. Otherwise the encoding/decoding and all the string functions seems safe and working as expected.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1020,2021-06-11T02:44:59Z,2021-06-11T05:20:18Z,2021-06-11T05:20:22Z,CLOSED,False,8630,7450,461,https://github.com/RReichert,kick,31,[],https://github.com/swift-nav/libsbp/pull/1020,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1020,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1021,2021-06-11T05:20:46Z,2021-06-11T06:08:46Z,2021-06-11T06:08:46Z,MERGED,True,38,1,2,https://github.com/RReichert,Windows CI Stages,7,[],https://github.com/swift-nav/libsbp/pull/1021,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1021,Added in some Windows CI stages (can't currently build Windows VS with gtest yet),Added in some Windows CI stages (can't currently build Windows VS with gtest yet),True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1022,2021-06-11T06:26:11Z,2021-09-01T09:09:27Z,2021-09-01T09:09:33Z,CLOSED,False,10212,8418,257,https://github.com/woodfell,[ESD-2043] [Review] Changes related to the legacy API,3,[],https://github.com/swift-nav/libsbp/pull/1022,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1022,"This PR will not be merged. The main PR for the V4 API is #1000. The purpose of this PR in conjunction with #1023 is to make the review purpose easier.
The V4 project introduces a brand new C API to libsbp while retaining compatibility with the existing API. The existing libsbp API is referred to as the legacy API.
The libsbp repository has been restructured to allow both legacy and V4 APIs to coexist. The changes on this PR are just those relating to moving the legacy API around.
Move header files
38780bd
This commit moves all the legacy generated header files to a new subdirectory c/include/libsbp/legacy. The contents of the generated headers has not changed with just 2 exceptions:

Include guards updated for new location
All #defines have been moved out to some new headers which are shared between the legacy and V4 APIs (c/include/libsbp/<package>_macros.h)

Functions relating to the legacy API have been move in to 2 new headers c/include/libsbp/legacy/api.h and c/include/libsbp/legacy/compat.h. This commit doesn't remove those definitions from c/include/libsbp/sbp.h but a later commit does.
There is a change to the C++ bindings - sbp::MessageHandler is renamed to sbp::PayloadHandler. The original name is reused by the V4 API and deals with decoded messages. These names are much more fitting to their function and since the only users of c++ appear to be internal we can get away with the change.
Generator changes
e5634b7
The legacy C and test_c generator has been renamed to have the name ""legacy"". Templates are moved in to a subdirectory generator/sbpg/targets/resources/c which will later be filled in with many more templates for the V4 API.
Replace generated files in c/include/libsbp/
be7d878
In the first commit of this PR the legacy generated headers were moved to a subdirectory. This commit introduces a new header file to replace them which automatically includes the counterpart header from the legacy subdirectory and raises a compile time message that this location has been deprecated and users of the legacy API should move to including the new location.
Note
This PR does not compile, there are many things missing which are filled in by the V4 PR. This PR exists only to separate out the large number of file renaming and moving which doesn't actually introduce any real changes to libsbp.","This PR will not be merged. The main PR for the V4 API is #1000. The purpose of this PR in conjunction with #1023 is to make the review purpose easier.
The V4 project introduces a brand new C API to libsbp while retaining compatibility with the existing API. The existing libsbp API is referred to as the legacy API.
The libsbp repository has been restructured to allow both legacy and V4 APIs to coexist. The changes on this PR are just those relating to moving the legacy API around.
Move header files
38780bd
This commit moves all the legacy generated header files to a new subdirectory c/include/libsbp/legacy. The contents of the generated headers has not changed with just 2 exceptions:

Include guards updated for new location
All #defines have been moved out to some new headers which are shared between the legacy and V4 APIs (c/include/libsbp/<package>_macros.h)

Functions relating to the legacy API have been move in to 2 new headers c/include/libsbp/legacy/api.h and c/include/libsbp/legacy/compat.h. This commit doesn't remove those definitions from c/include/libsbp/sbp.h but a later commit does.
There is a change to the C++ bindings - sbp::MessageHandler is renamed to sbp::PayloadHandler. The original name is reused by the V4 API and deals with decoded messages. These names are much more fitting to their function and since the only users of c++ appear to be internal we can get away with the change.
Generator changes
e5634b7
The legacy C and test_c generator has been renamed to have the name ""legacy"". Templates are moved in to a subdirectory generator/sbpg/targets/resources/c which will later be filled in with many more templates for the V4 API.
Replace generated files in c/include/libsbp/
be7d878
In the first commit of this PR the legacy generated headers were moved to a subdirectory. This commit introduces a new header file to replace them which automatically includes the counterpart header from the legacy subdirectory and raises a compile time message that this location has been deprecated and users of the legacy API should move to including the new location.
Note
This PR does not compile, there are many things missing which are filled in by the V4 PR. This PR exists only to separate out the large number of file renaming and moving which doesn't actually introduce any real changes to libsbp.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1022,2021-06-11T06:26:11Z,2021-09-01T09:09:27Z,2021-09-01T09:09:33Z,CLOSED,False,10212,8418,257,https://github.com/woodfell,[ESD-2043] [Review] Changes related to the legacy API,3,[],https://github.com/swift-nav/libsbp/pull/1022,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1022#issuecomment-863884366,"This PR will not be merged. The main PR for the V4 API is #1000. The purpose of this PR in conjunction with #1023 is to make the review purpose easier.
The V4 project introduces a brand new C API to libsbp while retaining compatibility with the existing API. The existing libsbp API is referred to as the legacy API.
The libsbp repository has been restructured to allow both legacy and V4 APIs to coexist. The changes on this PR are just those relating to moving the legacy API around.
Move header files
38780bd
This commit moves all the legacy generated header files to a new subdirectory c/include/libsbp/legacy. The contents of the generated headers has not changed with just 2 exceptions:

Include guards updated for new location
All #defines have been moved out to some new headers which are shared between the legacy and V4 APIs (c/include/libsbp/<package>_macros.h)

Functions relating to the legacy API have been move in to 2 new headers c/include/libsbp/legacy/api.h and c/include/libsbp/legacy/compat.h. This commit doesn't remove those definitions from c/include/libsbp/sbp.h but a later commit does.
There is a change to the C++ bindings - sbp::MessageHandler is renamed to sbp::PayloadHandler. The original name is reused by the V4 API and deals with decoded messages. These names are much more fitting to their function and since the only users of c++ appear to be internal we can get away with the change.
Generator changes
e5634b7
The legacy C and test_c generator has been renamed to have the name ""legacy"". Templates are moved in to a subdirectory generator/sbpg/targets/resources/c which will later be filled in with many more templates for the V4 API.
Replace generated files in c/include/libsbp/
be7d878
In the first commit of this PR the legacy generated headers were moved to a subdirectory. This commit introduces a new header file to replace them which automatically includes the counterpart header from the legacy subdirectory and raises a compile time message that this location has been deprecated and users of the legacy API should move to including the new location.
Note
This PR does not compile, there are many things missing which are filled in by the V4 PR. This PR exists only to separate out the large number of file renaming and moving which doesn't actually introduce any real changes to libsbp.","Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  4 Code Smells
 No Coverage information
 0.0% Duplication",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1022,2021-06-11T06:26:11Z,2021-09-01T09:09:27Z,2021-09-01T09:09:33Z,CLOSED,False,10212,8418,257,https://github.com/woodfell,[ESD-2043] [Review] Changes related to the legacy API,3,[],https://github.com/swift-nav/libsbp/pull/1022,https://github.com/woodfell,3,https://github.com/swift-nav/libsbp/pull/1022#issuecomment-910091465,"This PR will not be merged. The main PR for the V4 API is #1000. The purpose of this PR in conjunction with #1023 is to make the review purpose easier.
The V4 project introduces a brand new C API to libsbp while retaining compatibility with the existing API. The existing libsbp API is referred to as the legacy API.
The libsbp repository has been restructured to allow both legacy and V4 APIs to coexist. The changes on this PR are just those relating to moving the legacy API around.
Move header files
38780bd
This commit moves all the legacy generated header files to a new subdirectory c/include/libsbp/legacy. The contents of the generated headers has not changed with just 2 exceptions:

Include guards updated for new location
All #defines have been moved out to some new headers which are shared between the legacy and V4 APIs (c/include/libsbp/<package>_macros.h)

Functions relating to the legacy API have been move in to 2 new headers c/include/libsbp/legacy/api.h and c/include/libsbp/legacy/compat.h. This commit doesn't remove those definitions from c/include/libsbp/sbp.h but a later commit does.
There is a change to the C++ bindings - sbp::MessageHandler is renamed to sbp::PayloadHandler. The original name is reused by the V4 API and deals with decoded messages. These names are much more fitting to their function and since the only users of c++ appear to be internal we can get away with the change.
Generator changes
e5634b7
The legacy C and test_c generator has been renamed to have the name ""legacy"". Templates are moved in to a subdirectory generator/sbpg/targets/resources/c which will later be filled in with many more templates for the V4 API.
Replace generated files in c/include/libsbp/
be7d878
In the first commit of this PR the legacy generated headers were moved to a subdirectory. This commit introduces a new header file to replace them which automatically includes the counterpart header from the legacy subdirectory and raises a compile time message that this location has been deprecated and users of the legacy API should move to including the new location.
Note
This PR does not compile, there are many things missing which are filled in by the V4 PR. This PR exists only to separate out the large number of file renaming and moving which doesn't actually introduce any real changes to libsbp.",Any further comments on #1000,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1023,2021-06-11T06:26:41Z,2021-09-01T09:08:45Z,2021-09-01T09:08:52Z,CLOSED,False,23679,3734,348,https://github.com/woodfell,[ESD-2043] [Review] V4 API,10,[],https://github.com/swift-nav/libsbp/pull/1023,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1023,"This PR will not be merged. The main PR for the V4 API is #1000. This PR exists in conjunction with #1022 to make reviewing more easy by splitting out related changes and minimising the size of the diff by restricting the new generator.
The goal of this PR is to introduce a new C generator in libsbp which is more portable than the legacy API and free from any compiler extensions. The existing libsbp API (legacy API) has been retained. The new API (V4) exists alongside the legacy API.
This PR is based on #1022 and highlights just the new code which is added to libsbp for the V4 API.
Design
https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp
Implement new generator
7a3c52c
Language bindings in libsbp are generated from a YAML spec by a generator written in python. The challenges which are being addressed by the V4 meant that the legacy C generator was not appropriate, it didn't provide all the required information.
This commit introduces a new generator for the C headers/source files (c.py) and the test suites (test_c.py).
In this PR the generator is restricted to generating just a small subset of all SBP messages designed to highlight some corner cases:

MSG_LOG
MSG_SV_AZ_EL
MSG_SETTINGS_READ_BY_INDEX_DONE
MSG_SETTINGS_READ_BY_INDEX_RESP
MSG_OBS

and any dependent types
V4 generated C headers
821b3df
This commit generates V4 headers from the spec. Due to the artificial restriction in the generator from the previous commit there are a number of empty files created. The files added in this commit demonstrate the structure which are output by the new generator. For a complete set of header files see #1000
V4 generated C++ headers
5b3d302
Similar to the previous commit, this generates C++ headers using the V4 generator.
Hand rolled V4 headers
4e614aa
And changes made to the libsbp V4 headers which were done by hand. This includes some restructuring of the legacy API (removing declarations from sbp.h which were moved in to other files in #1022`)
String encoders
869d790
The V4 API adds the ability for libsbp to correctly handle the multiple different string encodings used by SBP on the wire. This commit introduces a series of helper struct and functions which are used internally by libsbp during the encoding/decoding process to handle string. Also includes comprehensive tests
Generated encode/decode functions
f8bca58
Generate functions to encode and decode V4 types to/from SBP wire format. As in previous commits this is limited to a small subset of messages. For the complete set see #1022
Hand written encode/decode functions
7def8f9
Functions to encode/decode primitive types to/from wire format. For internal use by libsbp during encode/decode functions.
Generated test suites
969d09d
Generated from the same test specs as are used to automatically test the legacy API. This uses a new template to use the V4 to send/receive messages and check for validity. Includes code which exercises the string encoders when used in a test spec.
Hand rolled changes to support V4 API
ab55df1
Various other changes written by hand related to implementing the new API. Includes a shuffle in sbp.c so that it works properly with both the legacy and V4 API
Necessary changes to YAML specs
1635196
There are 3 main components in this commit.
1: Update test specs so that the V4 generator can correctly understand new fields
2: Add meta information for string types so the correct string encoder can be selected by the generator
3: Remove the use of a variable length array in an embedded type.
Point 3 is explained in more detail in the design document, one of the SSR embedded types contains a variable length array in an embedded type which makes it impossible to calculate a maximum size for the type (a required part of the new generator). This commit removes the embedded type and moves the fields up to any real messages which make use of that type. This does not change the wire encoding in any way.","This PR will not be merged. The main PR for the V4 API is #1000. This PR exists in conjunction with #1022 to make reviewing more easy by splitting out related changes and minimising the size of the diff by restricting the new generator.
The goal of this PR is to introduce a new C generator in libsbp which is more portable than the legacy API and free from any compiler extensions. The existing libsbp API (legacy API) has been retained. The new API (V4) exists alongside the legacy API.
This PR is based on #1022 and highlights just the new code which is added to libsbp for the V4 API.
Design
https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp
Implement new generator
7a3c52c
Language bindings in libsbp are generated from a YAML spec by a generator written in python. The challenges which are being addressed by the V4 meant that the legacy C generator was not appropriate, it didn't provide all the required information.
This commit introduces a new generator for the C headers/source files (c.py) and the test suites (test_c.py).
In this PR the generator is restricted to generating just a small subset of all SBP messages designed to highlight some corner cases:

MSG_LOG
MSG_SV_AZ_EL
MSG_SETTINGS_READ_BY_INDEX_DONE
MSG_SETTINGS_READ_BY_INDEX_RESP
MSG_OBS

and any dependent types
V4 generated C headers
821b3df
This commit generates V4 headers from the spec. Due to the artificial restriction in the generator from the previous commit there are a number of empty files created. The files added in this commit demonstrate the structure which are output by the new generator. For a complete set of header files see #1000
V4 generated C++ headers
5b3d302
Similar to the previous commit, this generates C++ headers using the V4 generator.
Hand rolled V4 headers
4e614aa
And changes made to the libsbp V4 headers which were done by hand. This includes some restructuring of the legacy API (removing declarations from sbp.h which were moved in to other files in #1022`)
String encoders
869d790
The V4 API adds the ability for libsbp to correctly handle the multiple different string encodings used by SBP on the wire. This commit introduces a series of helper struct and functions which are used internally by libsbp during the encoding/decoding process to handle string. Also includes comprehensive tests
Generated encode/decode functions
f8bca58
Generate functions to encode and decode V4 types to/from SBP wire format. As in previous commits this is limited to a small subset of messages. For the complete set see #1022
Hand written encode/decode functions
7def8f9
Functions to encode/decode primitive types to/from wire format. For internal use by libsbp during encode/decode functions.
Generated test suites
969d09d
Generated from the same test specs as are used to automatically test the legacy API. This uses a new template to use the V4 to send/receive messages and check for validity. Includes code which exercises the string encoders when used in a test spec.
Hand rolled changes to support V4 API
ab55df1
Various other changes written by hand related to implementing the new API. Includes a shuffle in sbp.c so that it works properly with both the legacy and V4 API
Necessary changes to YAML specs
1635196
There are 3 main components in this commit.
1: Update test specs so that the V4 generator can correctly understand new fields
2: Add meta information for string types so the correct string encoder can be selected by the generator
3: Remove the use of a variable length array in an embedded type.
Point 3 is explained in more detail in the design document, one of the SSR embedded types contains a variable length array in an embedded type which makes it impossible to calculate a maximum size for the type (a required part of the new generator). This commit removes the embedded type and moves the fields up to any real messages which make use of that type. This does not change the wire encoding in any way.",True,{'HEART': ['https://github.com/GuillaumeDec']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1023,2021-06-11T06:26:41Z,2021-09-01T09:08:45Z,2021-09-01T09:08:52Z,CLOSED,False,23679,3734,348,https://github.com/woodfell,[ESD-2043] [Review] V4 API,10,[],https://github.com/swift-nav/libsbp/pull/1023,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1023#issuecomment-874306381,"This PR will not be merged. The main PR for the V4 API is #1000. This PR exists in conjunction with #1022 to make reviewing more easy by splitting out related changes and minimising the size of the diff by restricting the new generator.
The goal of this PR is to introduce a new C generator in libsbp which is more portable than the legacy API and free from any compiler extensions. The existing libsbp API (legacy API) has been retained. The new API (V4) exists alongside the legacy API.
This PR is based on #1022 and highlights just the new code which is added to libsbp for the V4 API.
Design
https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp
Implement new generator
7a3c52c
Language bindings in libsbp are generated from a YAML spec by a generator written in python. The challenges which are being addressed by the V4 meant that the legacy C generator was not appropriate, it didn't provide all the required information.
This commit introduces a new generator for the C headers/source files (c.py) and the test suites (test_c.py).
In this PR the generator is restricted to generating just a small subset of all SBP messages designed to highlight some corner cases:

MSG_LOG
MSG_SV_AZ_EL
MSG_SETTINGS_READ_BY_INDEX_DONE
MSG_SETTINGS_READ_BY_INDEX_RESP
MSG_OBS

and any dependent types
V4 generated C headers
821b3df
This commit generates V4 headers from the spec. Due to the artificial restriction in the generator from the previous commit there are a number of empty files created. The files added in this commit demonstrate the structure which are output by the new generator. For a complete set of header files see #1000
V4 generated C++ headers
5b3d302
Similar to the previous commit, this generates C++ headers using the V4 generator.
Hand rolled V4 headers
4e614aa
And changes made to the libsbp V4 headers which were done by hand. This includes some restructuring of the legacy API (removing declarations from sbp.h which were moved in to other files in #1022`)
String encoders
869d790
The V4 API adds the ability for libsbp to correctly handle the multiple different string encodings used by SBP on the wire. This commit introduces a series of helper struct and functions which are used internally by libsbp during the encoding/decoding process to handle string. Also includes comprehensive tests
Generated encode/decode functions
f8bca58
Generate functions to encode and decode V4 types to/from SBP wire format. As in previous commits this is limited to a small subset of messages. For the complete set see #1022
Hand written encode/decode functions
7def8f9
Functions to encode/decode primitive types to/from wire format. For internal use by libsbp during encode/decode functions.
Generated test suites
969d09d
Generated from the same test specs as are used to automatically test the legacy API. This uses a new template to use the V4 to send/receive messages and check for validity. Includes code which exercises the string encoders when used in a test spec.
Hand rolled changes to support V4 API
ab55df1
Various other changes written by hand related to implementing the new API. Includes a shuffle in sbp.c so that it works properly with both the legacy and V4 API
Necessary changes to YAML specs
1635196
There are 3 main components in this commit.
1: Update test specs so that the V4 generator can correctly understand new fields
2: Add meta information for string types so the correct string encoder can be selected by the generator
3: Remove the use of a variable length array in an embedded type.
Point 3 is explained in more detail in the design document, one of the SSR embedded types contains a variable length array in an embedded type which makes it impossible to calculate a maximum size for the type (a required part of the new generator). This commit removes the embedded type and moves the fields up to any real messages which make use of that type. This does not change the wire encoding in any way.","This is a typo, should have been greater than not less than - updated to mention validity as well.
Second point, yes it does serve that purpose. The value passed in to this function from one of the generated wrappers is hardcoded and calculated by the generator. It's specific to each string type field and is the maximum size it can occupy in wire format. in strnlen the parameter name is maxlen (as least in my version of glibc). Not sure I've got strong feeling about this, can change it to something else if you do

If it's not a pain to change, let's mirror the glibc param name and use maxlen too-- I like limit personally, but consistency probably has more value for indicating intent here",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1023,2021-06-11T06:26:41Z,2021-09-01T09:08:45Z,2021-09-01T09:08:52Z,CLOSED,False,23679,3734,348,https://github.com/woodfell,[ESD-2043] [Review] V4 API,10,[],https://github.com/swift-nav/libsbp/pull/1023,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1023#issuecomment-874314036,"This PR will not be merged. The main PR for the V4 API is #1000. This PR exists in conjunction with #1022 to make reviewing more easy by splitting out related changes and minimising the size of the diff by restricting the new generator.
The goal of this PR is to introduce a new C generator in libsbp which is more portable than the legacy API and free from any compiler extensions. The existing libsbp API (legacy API) has been retained. The new API (V4) exists alongside the legacy API.
This PR is based on #1022 and highlights just the new code which is added to libsbp for the V4 API.
Design
https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp
Implement new generator
7a3c52c
Language bindings in libsbp are generated from a YAML spec by a generator written in python. The challenges which are being addressed by the V4 meant that the legacy C generator was not appropriate, it didn't provide all the required information.
This commit introduces a new generator for the C headers/source files (c.py) and the test suites (test_c.py).
In this PR the generator is restricted to generating just a small subset of all SBP messages designed to highlight some corner cases:

MSG_LOG
MSG_SV_AZ_EL
MSG_SETTINGS_READ_BY_INDEX_DONE
MSG_SETTINGS_READ_BY_INDEX_RESP
MSG_OBS

and any dependent types
V4 generated C headers
821b3df
This commit generates V4 headers from the spec. Due to the artificial restriction in the generator from the previous commit there are a number of empty files created. The files added in this commit demonstrate the structure which are output by the new generator. For a complete set of header files see #1000
V4 generated C++ headers
5b3d302
Similar to the previous commit, this generates C++ headers using the V4 generator.
Hand rolled V4 headers
4e614aa
And changes made to the libsbp V4 headers which were done by hand. This includes some restructuring of the legacy API (removing declarations from sbp.h which were moved in to other files in #1022`)
String encoders
869d790
The V4 API adds the ability for libsbp to correctly handle the multiple different string encodings used by SBP on the wire. This commit introduces a series of helper struct and functions which are used internally by libsbp during the encoding/decoding process to handle string. Also includes comprehensive tests
Generated encode/decode functions
f8bca58
Generate functions to encode and decode V4 types to/from SBP wire format. As in previous commits this is limited to a small subset of messages. For the complete set see #1022
Hand written encode/decode functions
7def8f9
Functions to encode/decode primitive types to/from wire format. For internal use by libsbp during encode/decode functions.
Generated test suites
969d09d
Generated from the same test specs as are used to automatically test the legacy API. This uses a new template to use the V4 to send/receive messages and check for validity. Includes code which exercises the string encoders when used in a test spec.
Hand rolled changes to support V4 API
ab55df1
Various other changes written by hand related to implementing the new API. Includes a shuffle in sbp.c so that it works properly with both the legacy and V4 API
Necessary changes to YAML specs
1635196
There are 3 main components in this commit.
1: Update test specs so that the V4 generator can correctly understand new fields
2: Add meta information for string types so the correct string encoder can be selected by the generator
3: Remove the use of a variable length array in an embedded type.
Point 3 is explained in more detail in the design document, one of the SSR embedded types contains a variable length array in an embedded type which makes it impossible to calculate a maximum size for the type (a required part of the new generator). This commit removes the embedded type and moves the fields up to any real messages which make use of that type. This does not change the wire encoding in any way.","Can do that but it will require a bit of reoganisation of the header files. SBP_MAX_PAYLOAD_LEN is currently defined in libsbp/sbp.h, including that file here would create a circular dependency

Ok, probably not worth the trouble then, or alternately we could define a duplicate constant",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1023,2021-06-11T06:26:41Z,2021-09-01T09:08:45Z,2021-09-01T09:08:52Z,CLOSED,False,23679,3734,348,https://github.com/woodfell,[ESD-2043] [Review] V4 API,10,[],https://github.com/swift-nav/libsbp/pull/1023,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/1023#issuecomment-874343573,"This PR will not be merged. The main PR for the V4 API is #1000. This PR exists in conjunction with #1022 to make reviewing more easy by splitting out related changes and minimising the size of the diff by restricting the new generator.
The goal of this PR is to introduce a new C generator in libsbp which is more portable than the legacy API and free from any compiler extensions. The existing libsbp API (legacy API) has been retained. The new API (V4) exists alongside the legacy API.
This PR is based on #1022 and highlights just the new code which is added to libsbp for the V4 API.
Design
https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp
Implement new generator
7a3c52c
Language bindings in libsbp are generated from a YAML spec by a generator written in python. The challenges which are being addressed by the V4 meant that the legacy C generator was not appropriate, it didn't provide all the required information.
This commit introduces a new generator for the C headers/source files (c.py) and the test suites (test_c.py).
In this PR the generator is restricted to generating just a small subset of all SBP messages designed to highlight some corner cases:

MSG_LOG
MSG_SV_AZ_EL
MSG_SETTINGS_READ_BY_INDEX_DONE
MSG_SETTINGS_READ_BY_INDEX_RESP
MSG_OBS

and any dependent types
V4 generated C headers
821b3df
This commit generates V4 headers from the spec. Due to the artificial restriction in the generator from the previous commit there are a number of empty files created. The files added in this commit demonstrate the structure which are output by the new generator. For a complete set of header files see #1000
V4 generated C++ headers
5b3d302
Similar to the previous commit, this generates C++ headers using the V4 generator.
Hand rolled V4 headers
4e614aa
And changes made to the libsbp V4 headers which were done by hand. This includes some restructuring of the legacy API (removing declarations from sbp.h which were moved in to other files in #1022`)
String encoders
869d790
The V4 API adds the ability for libsbp to correctly handle the multiple different string encodings used by SBP on the wire. This commit introduces a series of helper struct and functions which are used internally by libsbp during the encoding/decoding process to handle string. Also includes comprehensive tests
Generated encode/decode functions
f8bca58
Generate functions to encode and decode V4 types to/from SBP wire format. As in previous commits this is limited to a small subset of messages. For the complete set see #1022
Hand written encode/decode functions
7def8f9
Functions to encode/decode primitive types to/from wire format. For internal use by libsbp during encode/decode functions.
Generated test suites
969d09d
Generated from the same test specs as are used to automatically test the legacy API. This uses a new template to use the V4 to send/receive messages and check for validity. Includes code which exercises the string encoders when used in a test spec.
Hand rolled changes to support V4 API
ab55df1
Various other changes written by hand related to implementing the new API. Includes a shuffle in sbp.c so that it works properly with both the legacy and V4 API
Necessary changes to YAML specs
1635196
There are 3 main components in this commit.
1: Update test specs so that the V4 generator can correctly understand new fields
2: Add meta information for string types so the correct string encoder can be selected by the generator
3: Remove the use of a variable length array in an embedded type.
Point 3 is explained in more detail in the design document, one of the SSR embedded types contains a variable length array in an embedded type which makes it impossible to calculate a maximum size for the type (a required part of the new generator). This commit removes the embedded type and moves the fields up to any real messages which make use of that type. This does not change the wire encoding in any way.","Completed my review and this work looks amazing overall, I think we should be ready to merge once we finish the remaining clean-up items and any other issues that shake out from the migration of sbp2nmea to the new API.
A few final housekeeping suggestions:

I would also recommend running doxygen against the new headers/doc-comments to see how they look, if it turns out that there's a lot of work involved in getting them to render correctly we can defer that to later PR
We should try compiling something more substantial against the legacy ""compat.h"", like piksi_firmware_private, or piksi_buildroot/piksi_apps

Re-posting my to-do list in case anyone else wants to use it:

 Implement new generator
 V4 generated C headers
 V4 generated C++ headers
 Hand rolled V4 headers
 String encoders
 Generated encode/decode functions
 Hand written encode/decode functions
 Generated test suites
 Hand rolled changes to support V4 API
 Necessary changes to YAML specs",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1023,2021-06-11T06:26:41Z,2021-09-01T09:08:45Z,2021-09-01T09:08:52Z,CLOSED,False,23679,3734,348,https://github.com/woodfell,[ESD-2043] [Review] V4 API,10,[],https://github.com/swift-nav/libsbp/pull/1023,https://github.com/woodfell,5,https://github.com/swift-nav/libsbp/pull/1023#issuecomment-874356850,"This PR will not be merged. The main PR for the V4 API is #1000. This PR exists in conjunction with #1022 to make reviewing more easy by splitting out related changes and minimising the size of the diff by restricting the new generator.
The goal of this PR is to introduce a new C generator in libsbp which is more portable than the legacy API and free from any compiler extensions. The existing libsbp API (legacy API) has been retained. The new API (V4) exists alongside the legacy API.
This PR is based on #1022 and highlights just the new code which is added to libsbp for the V4 API.
Design
https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp
Implement new generator
7a3c52c
Language bindings in libsbp are generated from a YAML spec by a generator written in python. The challenges which are being addressed by the V4 meant that the legacy C generator was not appropriate, it didn't provide all the required information.
This commit introduces a new generator for the C headers/source files (c.py) and the test suites (test_c.py).
In this PR the generator is restricted to generating just a small subset of all SBP messages designed to highlight some corner cases:

MSG_LOG
MSG_SV_AZ_EL
MSG_SETTINGS_READ_BY_INDEX_DONE
MSG_SETTINGS_READ_BY_INDEX_RESP
MSG_OBS

and any dependent types
V4 generated C headers
821b3df
This commit generates V4 headers from the spec. Due to the artificial restriction in the generator from the previous commit there are a number of empty files created. The files added in this commit demonstrate the structure which are output by the new generator. For a complete set of header files see #1000
V4 generated C++ headers
5b3d302
Similar to the previous commit, this generates C++ headers using the V4 generator.
Hand rolled V4 headers
4e614aa
And changes made to the libsbp V4 headers which were done by hand. This includes some restructuring of the legacy API (removing declarations from sbp.h which were moved in to other files in #1022`)
String encoders
869d790
The V4 API adds the ability for libsbp to correctly handle the multiple different string encodings used by SBP on the wire. This commit introduces a series of helper struct and functions which are used internally by libsbp during the encoding/decoding process to handle string. Also includes comprehensive tests
Generated encode/decode functions
f8bca58
Generate functions to encode and decode V4 types to/from SBP wire format. As in previous commits this is limited to a small subset of messages. For the complete set see #1022
Hand written encode/decode functions
7def8f9
Functions to encode/decode primitive types to/from wire format. For internal use by libsbp during encode/decode functions.
Generated test suites
969d09d
Generated from the same test specs as are used to automatically test the legacy API. This uses a new template to use the V4 to send/receive messages and check for validity. Includes code which exercises the string encoders when used in a test spec.
Hand rolled changes to support V4 API
ab55df1
Various other changes written by hand related to implementing the new API. Includes a shuffle in sbp.c so that it works properly with both the legacy and V4 API
Necessary changes to YAML specs
1635196
There are 3 main components in this commit.
1: Update test specs so that the V4 generator can correctly understand new fields
2: Add meta information for string types so the correct string encoder can be selected by the generator
3: Remove the use of a variable length array in an embedded type.
Point 3 is explained in more detail in the design document, one of the SSR embedded types contains a variable length array in an embedded type which makes it impossible to calculate a maximum size for the type (a required part of the new generator). This commit removes the embedded type and moves the fields up to any real messages which make use of that type. This does not change the wire encoding in any way.","Thanks @silverjam

* I would also recommend running doxygen against the new headers/doc-comments to see how they look, if it turns out that there's a lot of work involved in getting them to render correctly we can defer that to later PR


I tried running it this morning and to be honest it didn't look great, there were loads of broken links. I'll try to fix it on a new PR

* We should try compiling something more substantial against the legacy ""compat.h"", like piksi_firmware_private, or piksi_buildroot/piksi_apps


Agreed. I'm going to merge #1042 first and then set up portability integration branches in the remaining repos to test everything out",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1023,2021-06-11T06:26:41Z,2021-09-01T09:08:45Z,2021-09-01T09:08:52Z,CLOSED,False,23679,3734,348,https://github.com/woodfell,[ESD-2043] [Review] V4 API,10,[],https://github.com/swift-nav/libsbp/pull/1023,https://github.com/woodfell,6,https://github.com/swift-nav/libsbp/pull/1023#issuecomment-874381705,"This PR will not be merged. The main PR for the V4 API is #1000. This PR exists in conjunction with #1022 to make reviewing more easy by splitting out related changes and minimising the size of the diff by restricting the new generator.
The goal of this PR is to introduce a new C generator in libsbp which is more portable than the legacy API and free from any compiler extensions. The existing libsbp API (legacy API) has been retained. The new API (V4) exists alongside the legacy API.
This PR is based on #1022 and highlights just the new code which is added to libsbp for the V4 API.
Design
https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp
Implement new generator
7a3c52c
Language bindings in libsbp are generated from a YAML spec by a generator written in python. The challenges which are being addressed by the V4 meant that the legacy C generator was not appropriate, it didn't provide all the required information.
This commit introduces a new generator for the C headers/source files (c.py) and the test suites (test_c.py).
In this PR the generator is restricted to generating just a small subset of all SBP messages designed to highlight some corner cases:

MSG_LOG
MSG_SV_AZ_EL
MSG_SETTINGS_READ_BY_INDEX_DONE
MSG_SETTINGS_READ_BY_INDEX_RESP
MSG_OBS

and any dependent types
V4 generated C headers
821b3df
This commit generates V4 headers from the spec. Due to the artificial restriction in the generator from the previous commit there are a number of empty files created. The files added in this commit demonstrate the structure which are output by the new generator. For a complete set of header files see #1000
V4 generated C++ headers
5b3d302
Similar to the previous commit, this generates C++ headers using the V4 generator.
Hand rolled V4 headers
4e614aa
And changes made to the libsbp V4 headers which were done by hand. This includes some restructuring of the legacy API (removing declarations from sbp.h which were moved in to other files in #1022`)
String encoders
869d790
The V4 API adds the ability for libsbp to correctly handle the multiple different string encodings used by SBP on the wire. This commit introduces a series of helper struct and functions which are used internally by libsbp during the encoding/decoding process to handle string. Also includes comprehensive tests
Generated encode/decode functions
f8bca58
Generate functions to encode and decode V4 types to/from SBP wire format. As in previous commits this is limited to a small subset of messages. For the complete set see #1022
Hand written encode/decode functions
7def8f9
Functions to encode/decode primitive types to/from wire format. For internal use by libsbp during encode/decode functions.
Generated test suites
969d09d
Generated from the same test specs as are used to automatically test the legacy API. This uses a new template to use the V4 to send/receive messages and check for validity. Includes code which exercises the string encoders when used in a test spec.
Hand rolled changes to support V4 API
ab55df1
Various other changes written by hand related to implementing the new API. Includes a shuffle in sbp.c so that it works properly with both the legacy and V4 API
Necessary changes to YAML specs
1635196
There are 3 main components in this commit.
1: Update test specs so that the V4 generator can correctly understand new fields
2: Add meta information for string types so the correct string encoder can be selected by the generator
3: Remove the use of a variable length array in an embedded type.
Point 3 is explained in more detail in the design document, one of the SSR embedded types contains a variable length array in an embedded type which makes it impossible to calculate a maximum size for the type (a required part of the new generator). This commit removes the embedded type and moves the fields up to any real messages which make use of that type. This does not change the wire encoding in any way.",All existing comments have been addressed on #1042 and merged in to ESD-2043-portability-project. Any new comments will be done on a new PR,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1023,2021-06-11T06:26:41Z,2021-09-01T09:08:45Z,2021-09-01T09:08:52Z,CLOSED,False,23679,3734,348,https://github.com/woodfell,[ESD-2043] [Review] V4 API,10,[],https://github.com/swift-nav/libsbp/pull/1023,https://github.com/woodfell,7,https://github.com/swift-nav/libsbp/pull/1023#issuecomment-910090914,"This PR will not be merged. The main PR for the V4 API is #1000. This PR exists in conjunction with #1022 to make reviewing more easy by splitting out related changes and minimising the size of the diff by restricting the new generator.
The goal of this PR is to introduce a new C generator in libsbp which is more portable than the legacy API and free from any compiler extensions. The existing libsbp API (legacy API) has been retained. The new API (V4) exists alongside the legacy API.
This PR is based on #1022 and highlights just the new code which is added to libsbp for the V4 API.
Design
https://swift-nav.atlassian.net/wiki/spaces/~61688916/pages/1722942301/Design+Doc+-+libsbp
Implement new generator
7a3c52c
Language bindings in libsbp are generated from a YAML spec by a generator written in python. The challenges which are being addressed by the V4 meant that the legacy C generator was not appropriate, it didn't provide all the required information.
This commit introduces a new generator for the C headers/source files (c.py) and the test suites (test_c.py).
In this PR the generator is restricted to generating just a small subset of all SBP messages designed to highlight some corner cases:

MSG_LOG
MSG_SV_AZ_EL
MSG_SETTINGS_READ_BY_INDEX_DONE
MSG_SETTINGS_READ_BY_INDEX_RESP
MSG_OBS

and any dependent types
V4 generated C headers
821b3df
This commit generates V4 headers from the spec. Due to the artificial restriction in the generator from the previous commit there are a number of empty files created. The files added in this commit demonstrate the structure which are output by the new generator. For a complete set of header files see #1000
V4 generated C++ headers
5b3d302
Similar to the previous commit, this generates C++ headers using the V4 generator.
Hand rolled V4 headers
4e614aa
And changes made to the libsbp V4 headers which were done by hand. This includes some restructuring of the legacy API (removing declarations from sbp.h which were moved in to other files in #1022`)
String encoders
869d790
The V4 API adds the ability for libsbp to correctly handle the multiple different string encodings used by SBP on the wire. This commit introduces a series of helper struct and functions which are used internally by libsbp during the encoding/decoding process to handle string. Also includes comprehensive tests
Generated encode/decode functions
f8bca58
Generate functions to encode and decode V4 types to/from SBP wire format. As in previous commits this is limited to a small subset of messages. For the complete set see #1022
Hand written encode/decode functions
7def8f9
Functions to encode/decode primitive types to/from wire format. For internal use by libsbp during encode/decode functions.
Generated test suites
969d09d
Generated from the same test specs as are used to automatically test the legacy API. This uses a new template to use the V4 to send/receive messages and check for validity. Includes code which exercises the string encoders when used in a test spec.
Hand rolled changes to support V4 API
ab55df1
Various other changes written by hand related to implementing the new API. Includes a shuffle in sbp.c so that it works properly with both the legacy and V4 API
Necessary changes to YAML specs
1635196
There are 3 main components in this commit.
1: Update test specs so that the V4 generator can correctly understand new fields
2: Add meta information for string types so the correct string encoder can be selected by the generator
3: Remove the use of a variable length array in an embedded type.
Point 3 is explained in more detail in the design document, one of the SSR embedded types contains a variable length array in an embedded type which makes it impossible to calculate a maximum size for the type (a required part of the new generator). This commit removes the embedded type and moves the fields up to any real messages which make use of that type. This does not change the wire encoding in any way.",Any further comments on #1000,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1024,2021-06-11T06:52:20Z,2021-06-16T23:03:02Z,2021-06-16T23:03:03Z,MERGED,True,386,6,22,https://github.com/samvrlewis,Add some v4 examples,6,[],https://github.com/swift-nav/libsbp/pull/1024,https://github.com/samvrlewis,1,https://github.com/swift-nav/libsbp/pull/1024,"Copies the example and cpp_example and updates for the V4 API.
It's probably easiest to see the changes in the examples by looking at the individual diffs for the update, otherwise the diff is everything as the file is new:
libsbp_example: 4ba0fd6
libsbp_cpp_example: 0e99e1a","Copies the example and cpp_example and updates for the V4 API.
It's probably easiest to see the changes in the examples by looking at the individual diffs for the update, otherwise the diff is everything as the file is new:
libsbp_example: 4ba0fd6
libsbp_cpp_example: 0e99e1a",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1024,2021-06-11T06:52:20Z,2021-06-16T23:03:02Z,2021-06-16T23:03:03Z,MERGED,True,386,6,22,https://github.com/samvrlewis,Add some v4 examples,6,[],https://github.com/swift-nav/libsbp/pull/1024,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1024#issuecomment-862783010,"Copies the example and cpp_example and updates for the V4 API.
It's probably easiest to see the changes in the examples by looking at the individual diffs for the update, otherwise the diff is everything as the file is new:
libsbp_example: 4ba0fd6
libsbp_cpp_example: 0e99e1a",@samvrlewis merge?,True,{'THUMBS_UP': ['https://github.com/samvrlewis']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1025,2021-06-19T08:35:09Z,2021-06-19T22:52:39Z,2021-06-19T23:36:10Z,MERGED,True,48,48,28,https://github.com/jayvdb,Python lint fixes,13,[],https://github.com/swift-nav/libsbp/pull/1025,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1025,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1025,2021-06-19T08:35:09Z,2021-06-19T22:52:39Z,2021-06-19T23:36:10Z,MERGED,True,48,48,28,https://github.com/jayvdb,Python lint fixes,13,[],https://github.com/swift-nav/libsbp/pull/1025,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1025#issuecomment-864379275,,"Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 0.0% Duplication",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1025,2021-06-19T08:35:09Z,2021-06-19T22:52:39Z,2021-06-19T23:36:10Z,MERGED,True,48,48,28,https://github.com/jayvdb,Python lint fixes,13,[],https://github.com/swift-nav/libsbp/pull/1025,https://github.com/jayvdb,3,https://github.com/swift-nav/libsbp/pull/1025#issuecomment-864476109,,"I winged it a bit and merged, and the benchmark passed on master https://github.com/swift-nav/libsbp/actions/runs/953312615 .  Fingers crossed it was a once-off flaky-iness.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1026,2021-06-20T00:34:05Z,2021-06-20T01:58:47Z,2021-06-20T01:58:48Z,MERGED,True,47,58,23,https://github.com/jayvdb,Python lint fixes 2,9,[],https://github.com/swift-nav/libsbp/pull/1026,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1026,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1026,2021-06-20T00:34:05Z,2021-06-20T01:58:47Z,2021-06-20T01:58:48Z,MERGED,True,47,58,23,https://github.com/jayvdb,Python lint fixes 2,9,[],https://github.com/swift-nav/libsbp/pull/1026,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1026#issuecomment-864484497,,"Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 0.0% Duplication",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1027,2021-06-20T04:29:22Z,2021-06-20T06:38:31Z,2021-06-20T06:38:31Z,MERGED,True,13,17,5,https://github.com/jayvdb,Javascript lint fixes,1,[],https://github.com/swift-nav/libsbp/pull/1027,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1027,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1027,2021-06-20T04:29:22Z,2021-06-20T06:38:31Z,2021-06-20T06:38:31Z,MERGED,True,13,17,5,https://github.com/jayvdb,Javascript lint fixes,1,[],https://github.com/swift-nav/libsbp/pull/1027,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1027#issuecomment-864499298,,"Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 0.0% Duplication",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1028,2021-06-20T07:37:40Z,2021-06-20T09:59:50Z,2021-06-20T09:59:52Z,MERGED,True,109,166,2,https://github.com/jayvdb,Javascript tests: Remove code duplication,4,[],https://github.com/swift-nav/libsbp/pull/1028,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1028,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1028,2021-06-20T07:37:40Z,2021-06-20T09:59:50Z,2021-06-20T09:59:52Z,MERGED,True,109,166,2,https://github.com/jayvdb,Javascript tests: Remove code duplication,4,[],https://github.com/swift-nav/libsbp/pull/1028,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1028#issuecomment-864516987,,"Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 0.0% Duplication",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1029,2021-06-20T08:55:14Z,2021-06-20T09:59:51Z,2021-06-20T09:59:51Z,MERGED,True,12,12,5,https://github.com/jayvdb,javascript: Replace var with let,2,[],https://github.com/swift-nav/libsbp/pull/1029,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1029,Avoids warnings of reusing variable names.,Avoids warnings of reusing variable names.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1029,2021-06-20T08:55:14Z,2021-06-20T09:59:51Z,2021-06-20T09:59:51Z,MERGED,True,12,12,5,https://github.com/jayvdb,javascript: Replace var with let,2,[],https://github.com/swift-nav/libsbp/pull/1029,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1029#issuecomment-864522028,Avoids warnings of reusing variable names.,"Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 0.0% Duplication",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1030,2021-06-20T22:34:23Z,2021-06-21T01:16:43Z,2021-06-21T01:16:43Z,MERGED,True,28,1,2,https://github.com/jayvdb,build.gradle: Add sonarcloud,2,[],https://github.com/swift-nav/libsbp/pull/1030,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1030,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1030,2021-06-20T22:34:23Z,2021-06-21T01:16:43Z,2021-06-21T01:16:43Z,MERGED,True,28,1,2,https://github.com/jayvdb,build.gradle: Add sonarcloud,2,[],https://github.com/swift-nav/libsbp/pull/1030,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1030#issuecomment-864631749,,"Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 No Duplication information",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1031,2021-06-21T01:20:59Z,2021-06-21T02:37:50Z,2021-06-21T02:37:50Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - scripts: Fix flakes,1,[],https://github.com/swift-nav/libsbp/pull/1031,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1031,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  57f1cbc4  ->  2053cbd1

2053cbd1  :  scripts: Fix flakes
38138963  :  SV4-144 update googleflags (#83)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7015/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  57f1cbc4  ->  2053cbd1

2053cbd1  :  scripts: Fix flakes
38138963  :  SV4-144 update googleflags (#83)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7015/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1031,2021-06-21T01:20:59Z,2021-06-21T02:37:50Z,2021-06-21T02:37:50Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - scripts: Fix flakes,1,[],https://github.com/swift-nav/libsbp/pull/1031,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/1031#issuecomment-864680897,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  57f1cbc4  ->  2053cbd1

2053cbd1  :  scripts: Fix flakes
38138963  :  SV4-144 update googleflags (#83)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7015/.",outdated,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1032,2021-06-21T01:35:54Z,2021-06-21T01:44:31Z,2021-06-21T01:44:31Z,MERGED,True,1,0,1,https://github.com/jayvdb,Java CI: Add GITHUB_TOKEN to sonarqube task,1,[],https://github.com/swift-nav/libsbp/pull/1032,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1032,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1032,2021-06-21T01:35:54Z,2021-06-21T01:44:31Z,2021-06-21T01:44:31Z,MERGED,True,1,0,1,https://github.com/jayvdb,Java CI: Add GITHUB_TOKEN to sonarqube task,1,[],https://github.com/swift-nav/libsbp/pull/1032,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1032#issuecomment-864662781,,"Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 No Duplication information",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1033,2021-06-21T01:58:31Z,2021-06-21T20:52:35Z,2021-06-21T20:52:35Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - memcheck_xml2junit_converter.py: Remove redundancy,1,[],https://github.com/swift-nav/libsbp/pull/1033,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1033,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  57f1cbc4  ->  373d4fca

373d4fca  :  memcheck_xml2junit_converter.py: Remove redundancy
2053cbd1  :  scripts: Fix flakes
38138963  :  SV4-144 update googleflags (#83)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7020/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  57f1cbc4  ->  373d4fca

373d4fca  :  memcheck_xml2junit_converter.py: Remove redundancy
2053cbd1  :  scripts: Fix flakes
38138963  :  SV4-144 update googleflags (#83)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7020/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1034,2021-06-21T09:23:46Z,2021-06-21T21:18:55Z,2021-06-21T21:18:56Z,MERGED,True,32,64,59,https://github.com/jayvdb,Add SonarCloud Github Action,4,[],https://github.com/swift-nav/libsbp/pull/1034,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1034,Bringing back analysis of SonarCloud Python & JavaScript,Bringing back analysis of SonarCloud Python & JavaScript,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1034,2021-06-21T09:23:46Z,2021-06-21T21:18:55Z,2021-06-21T21:18:56Z,MERGED,True,32,64,59,https://github.com/jayvdb,Add SonarCloud Github Action,4,[],https://github.com/swift-nav/libsbp/pull/1034,https://github.com/apps/sonarcloud,2,https://github.com/swift-nav/libsbp/pull/1034#issuecomment-865297978,Bringing back analysis of SonarCloud Python & JavaScript,"[swift-nav_libsbp_auto] Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 No Coverage information
 No Duplication information",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1034,2021-06-21T09:23:46Z,2021-06-21T21:18:55Z,2021-06-21T21:18:56Z,MERGED,True,32,64,59,https://github.com/jayvdb,Add SonarCloud Github Action,4,[],https://github.com/swift-nav/libsbp/pull/1034,https://github.com/apps/sonarcloud,3,https://github.com/swift-nav/libsbp/pull/1034#issuecomment-865304727,Bringing back analysis of SonarCloud Python & JavaScript,"[java] Kudos, SonarCloud Quality Gate passed!
  0 Bugs
  0 Vulnerabilities
  0 Security Hotspots
  0 Code Smells
 0.0% Coverage
 0.0% Duplication",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1035,2021-06-22T05:43:42Z,2021-06-22T08:30:38Z,2021-06-22T08:30:38Z,MERGED,True,24608,12424,373,https://github.com/jayvdb,[DEVINFRA-469] Reformat java using AOSP style,1,[],https://github.com/swift-nav/libsbp/pull/1035,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1035,"Also removes duplicate imports, updates copyright year,
adds missing package declarations and generated note.","Also removes duplicate imports, updates copyright year,
adds missing package declarations and generated note.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1036,2021-06-22T08:44:08Z,2021-06-22T20:09:27Z,2021-06-22T20:18:18Z,MERGED,True,9,0,1,https://github.com/jayvdb,build.gradle: Add coverage reporting,1,[],https://github.com/swift-nav/libsbp/pull/1036,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1036,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1036,2021-06-22T08:44:08Z,2021-06-22T20:09:27Z,2021-06-22T20:18:18Z,MERGED,True,9,0,1,https://github.com/jayvdb,build.gradle: Add coverage reporting,1,[],https://github.com/swift-nav/libsbp/pull/1036,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/1036#issuecomment-865844608,,"The coverage section of https://sonarcloud.io/summary/new_code?id=swift-nav_libsbp&pullRequest=1036 is not showing any results, but I have confirmed that the xml coverage data is getting loaded by the plugin.  I suspect that it needs to run this on master before it will show PR coverage.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1036,2021-06-22T08:44:08Z,2021-06-22T20:09:27Z,2021-06-22T20:18:18Z,MERGED,True,9,0,1,https://github.com/jayvdb,build.gradle: Add coverage reporting,1,[],https://github.com/swift-nav/libsbp/pull/1036,https://github.com/john-michaelburke,3,https://github.com/swift-nav/libsbp/pull/1036#issuecomment-866187443,,"I seem to get an error when I run it locally (not in docker I know I should be ashamed). I am able to successfully run make java on the master branch though. Is there an additional dependency or old version I could be using?
-----------------------------------------------------------
Gradle 4.4.1
------------------------------------------------------------

Build time:   2012-12-21 00:00:00 UTC
Revision:     none

Groovy:       2.4.17
Ant:          Apache Ant(TM) version 1.10.7 compiled on October 24 2019
JVM:          11.0.11 (Ubuntu 11.0.11+9-Ubuntu-0ubuntu2.20.04)
OS:           Linux 5.8.0-55-generic amd64

/home/jm/dev/libsbp/java/src/com/swiftnav/sbp/tracking/MsgTrackingIqDepA.java
/home/jm/dev/libsbp/java/src/com/swiftnav/sbp/tracking/TrackingChannelStateDepA.java
/home/jm/dev/libsbp/java/src/com/swiftnav/sbp/tracking/MsgTrackingStateDepA.java
/home/jm/dev/libsbp/java/src/com/swiftnav/sbp/tracking/TrackingChannelStateDepB.java
/home/jm/dev/libsbp/java/src/com/swiftnav/sbp/tracking/MsgTrackingStateDepB.java
/home/jm/dev/libsbp/java/src/com/swiftnav/sbp/user/MsgUserData.java
/home/jm/dev/libsbp/java/src/com/swiftnav/sbp/vehicle/MsgOdometry.java
/home/jm/dev/libsbp/java/src/com/swiftnav/sbp/vehicle/MsgWheeltick.java
/home/jm/dev/libsbp/java/src/com/swiftnav/sbp/client/MessageTable.java
________________________________________________________________________________________________________________________________________________________________________ summary ________________________________________________________________________________________________________________________________________________________________________
  py: commands succeeded
  congratulations :)

Finished generating Java bindings. Please check /home/jm/dev/libsbp/java/src/sbp


Generating Java tests ...

cd /home/jm/dev/libsbp/generator; \
tox -e py   -- -i /home/jm/dev/libsbp/spec/tests/yaml/ \
-o /home/jm/dev/libsbp/java/test/ \
               -r 3.4.8-43-g226a846f \
               --test-java
py installed: alabaster==0.7.12,appdirs==1.4.4,astroid==2.5.6,attrs==21.2.0,autoflake==1.4,Babel==2.9.1,certifi==2021.5.30,chardet==4.0.0,construct==2.10.67,coverage==5.5,dataclasses==0.6,distlib==0.3.2,docutils==0.17.1,execnet==1.9.0,filelock==3.0.12,flake8==3.9.2,idna==2.10,imagesize==1.2.0,iniconfig==1.1.1,isort==5.9.1,Jinja2==3.0.1,lazy-object-proxy==1.6.0,MarkupSafe==2.0.1,mccabe==0.6.1,numpy==1.21.0,packaging==20.9,pep8==1.7.1,pluggy==0.13.1,py==1.10.0,pybase64==1.1.4,pycodestyle==2.7.0,pyflakes==2.3.1,pyftdi==0.13.4,Pygments==2.9.0,pylibftdi==0.19.0,pylint==2.8.3,pyparsing==2.4.7,pyserial==3.5,pytest==6.2.4,pytest-cov==2.12.1,pytest-forked==1.3.0,pytest-xdist==2.3.0,python-rapidjson==1.0,pytz==2021.1,pyusb==1.1.1,PyYAML==5.4.1,requests==2.25.1,-e git+git@github.com:swift-nav/libsbp.git@226a846f84faf23bc3f96c1909bbd29b6af7b038#egg=sbp&subdirectory=python,-e git+git@github.com:swift-nav/libsbp.git@226a846f84faf23bc3f96c1909bbd29b6af7b038#egg=sbp_gen&subdirectory=generator,six==1.16.0,snowballstemmer==2.1.0,Sphinx==4.0.2,sphinxcontrib-applehelp==1.0.2,sphinxcontrib-devhelp==1.0.2,sphinxcontrib-htmlhelp==2.0.0,sphinxcontrib-jsmath==1.0.1,sphinxcontrib-qthelp==1.0.3,sphinxcontrib-serializinghtml==1.1.5,toml==0.10.2,tox==3.23.1,urllib3==1.26.5,virtualenv==20.4.7,voluptuous==0.12.1,wrapt==1.12.1
py run-test-pre: PYTHONHASHSEED='584420279'
py run-test: commands[0] | python -m sbpg.generator -i /home/jm/dev/libsbp/spec/tests/yaml/ -o /home/jm/dev/libsbp/java/test/ -r 3.4.8-43-g226a846f --test-java
________________________________________________________________________________________________________________________________________________________________________ summary ________________________________________________________________________________________________________________________________________________________________________
  py: commands succeeded
  congratulations :)

Finished generating Java tests


Formatting Java code ...

cd /home/jm/dev/libsbp/java && gradle spotlessApply

FAILURE: Build failed with an exception.

* Where:
Build file '/home/jm/dev/libsbp/java/build.gradle' line: 52

* What went wrong:
A problem occurred evaluating root project 'java'.
> Could not set unknown property 'required' for Report xml of type org.gradle.api.reporting.internal.TaskGeneratedSingleFileReport.

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at https://help.gradle.org

BUILD FAILED in 0s
make: *** [Makefile:234: gen-java] Error 1
(libsbp) jm@ubuntu:~/dev/libsbp$ ```",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1036,2021-06-22T08:44:08Z,2021-06-22T20:09:27Z,2021-06-22T20:18:18Z,MERGED,True,9,0,1,https://github.com/jayvdb,build.gradle: Add coverage reporting,1,[],https://github.com/swift-nav/libsbp/pull/1036,https://github.com/jayvdb,4,https://github.com/swift-nav/libsbp/pull/1036#issuecomment-866304465,,"As hoped, it worked after merge https://sonarcloud.io/component_measures?id=swift-nav_libsbp&metric=coverage&view=list",True,{'HOORAY': ['https://github.com/john-michaelburke']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1037,2021-06-22T20:49:30Z,2021-06-22T22:34:17Z,2021-06-22T22:34:18Z,MERGED,True,3,1,2,https://github.com/jayvdb,build.gradle: Fix gradle 4 compatibility,1,[],https://github.com/swift-nav/libsbp/pull/1037,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1037,xml.required is not supported on gradle 4.,xml.required is not supported on gradle 4.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1038,2021-06-25T21:50:29Z,2021-07-08T11:02:25Z,2021-07-08T11:02:25Z,MERGED,True,1275,48,21,https://github.com/richarddeurloo,[SEN-604] [SV4-146] Define new message for unbounded accuracy,12,[],https://github.com/swift-nav/libsbp/pull/1038,https://github.com/richarddeurloo,1,https://github.com/swift-nav/libsbp/pull/1038,"This PR define a new SBP MSG_LLH_ACC message (ACC for accuracy). It is similar to SBP MSG_LLH and SBP MSG_LLH_COV, except that it encodes various accuracy metrics. The accuracy estimates are computed for a user-configurable percentile and are, unlike the accuracy estimates SBP MSG_LLH, unbounded (i.e. not limited to 65 m).
Internal design doc: https://swift-nav.atlassian.net/l/c/YZ0MEdCv","This PR define a new SBP MSG_LLH_ACC message (ACC for accuracy). It is similar to SBP MSG_LLH and SBP MSG_LLH_COV, except that it encodes various accuracy metrics. The accuracy estimates are computed for a user-configurable percentile and are, unlike the accuracy estimates SBP MSG_LLH, unbounded (i.e. not limited to 65 m).
Internal design doc: https://swift-nav.atlassian.net/l/c/YZ0MEdCv",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1038,2021-06-25T21:50:29Z,2021-07-08T11:02:25Z,2021-07-08T11:02:25Z,MERGED,True,1275,48,21,https://github.com/richarddeurloo,[SEN-604] [SV4-146] Define new message for unbounded accuracy,12,[],https://github.com/swift-nav/libsbp/pull/1038,https://github.com/richarddeurloo,2,https://github.com/swift-nav/libsbp/pull/1038#issuecomment-871742031,"This PR define a new SBP MSG_LLH_ACC message (ACC for accuracy). It is similar to SBP MSG_LLH and SBP MSG_LLH_COV, except that it encodes various accuracy metrics. The accuracy estimates are computed for a user-configurable percentile and are, unlike the accuracy estimates SBP MSG_LLH, unbounded (i.e. not limited to 65 m).
Internal design doc: https://swift-nav.atlassian.net/l/c/YZ0MEdCv","@dgburr @GuillaumeDec  I pushed one change in the confidence field (reserving part of the u8 for the future). If you have objections, let me know. If not, I'll probably merge the message in tomorrow.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1038,2021-06-25T21:50:29Z,2021-07-08T11:02:25Z,2021-07-08T11:02:25Z,MERGED,True,1275,48,21,https://github.com/richarddeurloo,[SEN-604] [SV4-146] Define new message for unbounded accuracy,12,[],https://github.com/swift-nav/libsbp/pull/1038,https://github.com/richarddeurloo,3,https://github.com/swift-nav/libsbp/pull/1038#issuecomment-875716109,"This PR define a new SBP MSG_LLH_ACC message (ACC for accuracy). It is similar to SBP MSG_LLH and SBP MSG_LLH_COV, except that it encodes various accuracy metrics. The accuracy estimates are computed for a user-configurable percentile and are, unlike the accuracy estimates SBP MSG_LLH, unbounded (i.e. not limited to 65 m).
Internal design doc: https://swift-nav.atlassian.net/l/c/YZ0MEdCv","@dgburr @GuillaumeDec Based on further discussions I've made changes to the possible confidence level options. If you have objections, let me know. If not, I'll merge the message end of the day today.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1039,2021-06-28T07:17:13Z,2021-06-29T05:40:56Z,2021-06-29T05:40:56Z,MERGED,True,27869,13122,463,https://github.com/woodfell,[ESD-2043] Merge master,51,[],https://github.com/swift-nav/libsbp/pull/1039,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1039,Merge master branch back in to ESD-2043-portability-project,Merge master branch back in to ESD-2043-portability-project,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1039,2021-06-28T07:17:13Z,2021-06-29T05:40:56Z,2021-06-29T05:40:56Z,MERGED,True,27869,13122,463,https://github.com/woodfell,[ESD-2043] Merge master,51,[],https://github.com/swift-nav/libsbp/pull/1039,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/1039#issuecomment-869666991,Merge master branch back in to ESD-2043-portability-project,"Due to sonarcloud failing due to coverage %, I have adjusted the settings according to https://community.sonarsource.com/t/disable-coverage-test/2336/8 to exclude coverage of */**. :/  This will be active on the next push, either here or on master.",True,{'THUMBS_UP': ['https://github.com/woodfell']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1040,2021-06-30T07:49:14Z,2021-06-30T07:49:41Z,2021-06-30T07:49:45Z,CLOSED,False,1,1,1,https://github.com/woodfell,[ESD-2043] merge master 2,48,[],https://github.com/swift-nav/libsbp/pull/1040,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1040,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1041,2021-07-01T10:40:27Z,2021-07-05T06:01:03Z,2021-07-05T06:01:04Z,MERGED,True,161,87,31,https://github.com/woodfell,[ESD-2119] Correct naming of strlen helper functions,3,[],https://github.com/swift-nav/libsbp/pull/1041,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1041,"Fields of type unterminated or null-terminated string have a helper function which is equivalent to strlen. It's badly named currently in the form <field-prefix>_section_strlen when it should be <field-prefix>_strlen (Anything to do with section is only relevant to multipart or double null terminated string).
Also, the function isn't actually implemented in source.","Fields of type unterminated or null-terminated string have a helper function which is equivalent to strlen. It's badly named currently in the form <field-prefix>_section_strlen when it should be <field-prefix>_strlen (Anything to do with section is only relevant to multipart or double null terminated string).
Also, the function isn't actually implemented in source.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1042,2021-07-02T09:28:22Z,2021-07-06T00:32:12Z,2021-07-06T00:32:12Z,MERGED,True,9404,7791,419,https://github.com/woodfell,[ESD-2117] Address code review comments,22,[],https://github.com/swift-nav/libsbp/pull/1042,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1042,"Address code review comments from @jbangelo and @silverjam   left on #1023

Corrected and updated some doc comments in libsbp/common.h
Update the generator and templates so that encoded_len functions are static inline and use a value calculated by the generator wherever possible
Added some file level doxygen comments to string headers to describe how the different string encodings work
Removed potentially UB from encode/decode helper functions
Added descriptions of string validity
Rename types which had sbp_sbp_ prefix to sbp_v4_
Refactor the C generator to make it a little easier to follow
Format c.py and test_c.py with black
Add #define for encoded lengths of types in the header files, use them in generated source
Closing comments on #endif at the end of files","Address code review comments from @jbangelo and @silverjam   left on #1023

Corrected and updated some doc comments in libsbp/common.h
Update the generator and templates so that encoded_len functions are static inline and use a value calculated by the generator wherever possible
Added some file level doxygen comments to string headers to describe how the different string encodings work
Removed potentially UB from encode/decode helper functions
Added descriptions of string validity
Rename types which had sbp_sbp_ prefix to sbp_v4_
Refactor the C generator to make it a little easier to follow
Format c.py and test_c.py with black
Add #define for encoded lengths of types in the header files, use them in generated source
Closing comments on #endif at the end of files",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1043,2021-07-02T19:33:28Z,2021-07-07T00:05:04Z,2021-07-07T00:05:04Z,MERGED,True,2,2,2,https://github.com/silverjam,change SBP table to use decimal instead of hex [DOC-25],2,[],https://github.com/swift-nav/libsbp/pull/1043,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1043,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1043,2021-07-02T19:33:28Z,2021-07-07T00:05:04Z,2021-07-07T00:05:04Z,MERGED,True,2,2,2,https://github.com/silverjam,change SBP table to use decimal instead of hex [DOC-25],2,[],https://github.com/swift-nav/libsbp/pull/1043,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1043#issuecomment-873219370,,"Example PDF:
sbp.pdf",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1043,2021-07-02T19:33:28Z,2021-07-07T00:05:04Z,2021-07-07T00:05:04Z,MERGED,True,2,2,2,https://github.com/silverjam,change SBP table to use decimal instead of hex [DOC-25],2,[],https://github.com/swift-nav/libsbp/pull/1043,https://github.com/switanis,3,https://github.com/swift-nav/libsbp/pull/1043#issuecomment-873234067,,Perfect!,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1044,2021-07-05T06:56:51Z,2021-07-05T23:32:52Z,2021-07-05T23:32:53Z,MERGED,True,2017,697,94,https://github.com/woodfell,[ESD-2117] Add #define for max items in arrays,1,[],https://github.com/swift-nav/libsbp/pull/1044,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1044,"Applies to all array and string type fields both variable and fixed lengths. Generate a new #define for the maximum number of items in the array/string and use it in type definitions. Only used form the V4 API, legacy API is unaltered and still uses magic numbers of type definitions.","Applies to all array and string type fields both variable and fixed lengths. Generate a new #define for the maximum number of items in the array/string and use it in type definitions. Only used form the V4 API, legacy API is unaltered and still uses magic numbers of type definitions.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1045,2021-07-05T12:21:25Z,2021-07-05T23:16:58Z,2021-07-05T23:16:59Z,MERGED,True,33,25,2,https://github.com/RReichert,Enable VS2019 tests,1,[],https://github.com/swift-nav/libsbp/pull/1045,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1045,"Just a quick PR to enable VS 2019 unit tests, didn't get around to introducing it last time.","Just a quick PR to enable VS 2019 unit tests, didn't get around to introducing it last time.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1046,2021-07-13T05:25:49Z,2021-07-24T08:44:46Z,2021-07-24T08:44:47Z,MERGED,True,2833,745,48,https://github.com/samvrlewis,[ESD-2122] Add functions that set and truncate strings,18,[],https://github.com/swift-nav/libsbp/pull/1046,https://github.com/samvrlewis,1,https://github.com/swift-nav/libsbp/pull/1046,"Open to suggestions on improving this - in particular I feel like the naming could be improved here to make it more clear what these new functions actually do.
Will hold off committing the new generated code until this has been reviewed, so that it's a little easier to review. This is why the Generated artifacts / Generated artifacts (pull_request)  job is currently failing.","Open to suggestions on improving this - in particular I feel like the naming could be improved here to make it more clear what these new functions actually do.
Will hold off committing the new generated code until this has been reviewed, so that it's a little easier to review. This is why the Generated artifacts / Generated artifacts (pull_request)  job is currently failing.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1047,2021-07-15T18:30:24Z,2021-07-16T19:31:16Z,2021-07-16T19:31:17Z,MERGED,True,62,38,3,https://github.com/silverjam,docker: sync with github actions [DEVINFRA-486],1,[],https://github.com/swift-nav/libsbp/pull/1047,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1047,"The libsbp-build image has gotten out of sync with GitHub actions such
as Java and JavaScript where no longer passing when building locally.
Update the libsbp-bulid image so it more closely matches the GitHub
actions environment.
Specifically Java was failing with the following error:
*** java.lang.instrument ASSERTION FAILED ***: ""result"" with message agent load/premain call failed at src/java.instrument/share/native/libinstrument/JPLISAgent.c line: 422
FATAL ERROR in native method: processing of -javaagent failed, processJavaStart failed
Process 'Gradle Test Executor 12' finished with non-zero exit value 134
org.gradle.process.internal.ExecException: Process 'Gradle Test Executor 12' finished with non-zero exit value 134
        at org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:382)
        at org.gradle.process.internal.worker.DefaultWorkerProcess.onProcessStop(DefaultWorkerProcess.java:118)
        at org.gradle.process.internal.worker.DefaultWorkerProcess.access$000(DefaultWorkerProcess.java:41)
        at org.gradle.process.internal.worker.DefaultWorkerProcess$1.executionFinished(DefaultWorkerProcess.java:74)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:566)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:42)
        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:230)
        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:149)
        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:140)
        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)
        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
        at com.sun.proxy.$Proxy78.executionFinished(Unknown Source)
        at org.gradle.process.internal.DefaultExecHandle.setEndStateInfo(DefaultExecHandle.java:215)
        at org.gradle.process.internal.DefaultExecHandle.finished(DefaultExecHandle.java:327)
        at org.gradle.process.internal.ExecHandleRunner.completed(ExecHandleRunner.java:103)
        at org.gradle.process.internal.ExecHandleRunner.run(ExecHandleRunner.java:83)
        at org.gradle.internal.operations.BuildOperationIdentifierPreservingRunnable.run(BuildOperationIdentifierPreservingRunnable.java:39)
        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
        at java.base/java.lang.Thread.run(Thread.java:829)

JavaScript was failing with the following error:
  3019 passing (14s)
  1 failing

  1) dispatcher
       should read stream of bytes and dispatch callback for one valid message, ignore corrupt preamble:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure ""done()"" is called; if returning a Promise, ensure it resolves. (/mnt/workspace/javascript/tests/test_dispatch.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)","The libsbp-build image has gotten out of sync with GitHub actions such
as Java and JavaScript where no longer passing when building locally.
Update the libsbp-bulid image so it more closely matches the GitHub
actions environment.
Specifically Java was failing with the following error:
*** java.lang.instrument ASSERTION FAILED ***: ""result"" with message agent load/premain call failed at src/java.instrument/share/native/libinstrument/JPLISAgent.c line: 422
FATAL ERROR in native method: processing of -javaagent failed, processJavaStart failed
Process 'Gradle Test Executor 12' finished with non-zero exit value 134
org.gradle.process.internal.ExecException: Process 'Gradle Test Executor 12' finished with non-zero exit value 134
        at org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:382)
        at org.gradle.process.internal.worker.DefaultWorkerProcess.onProcessStop(DefaultWorkerProcess.java:118)
        at org.gradle.process.internal.worker.DefaultWorkerProcess.access$000(DefaultWorkerProcess.java:41)
        at org.gradle.process.internal.worker.DefaultWorkerProcess$1.executionFinished(DefaultWorkerProcess.java:74)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:566)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:42)
        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:230)
        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:149)
        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:140)
        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)
        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
        at com.sun.proxy.$Proxy78.executionFinished(Unknown Source)
        at org.gradle.process.internal.DefaultExecHandle.setEndStateInfo(DefaultExecHandle.java:215)
        at org.gradle.process.internal.DefaultExecHandle.finished(DefaultExecHandle.java:327)
        at org.gradle.process.internal.ExecHandleRunner.completed(ExecHandleRunner.java:103)
        at org.gradle.process.internal.ExecHandleRunner.run(ExecHandleRunner.java:83)
        at org.gradle.internal.operations.BuildOperationIdentifierPreservingRunnable.run(BuildOperationIdentifierPreservingRunnable.java:39)
        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
        at java.base/java.lang.Thread.run(Thread.java:829)

JavaScript was failing with the following error:
  3019 passing (14s)
  1 failing

  1) dispatcher
       should read stream of bytes and dispatch callback for one valid message, ignore corrupt preamble:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure ""done()"" is called; if returning a Promise, ensure it resolves. (/mnt/workspace/javascript/tests/test_dispatch.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1047,2021-07-15T18:30:24Z,2021-07-16T19:31:16Z,2021-07-16T19:31:17Z,MERGED,True,62,38,3,https://github.com/silverjam,docker: sync with github actions [DEVINFRA-486],1,[],https://github.com/swift-nav/libsbp/pull/1047,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/1047#issuecomment-881159425,"The libsbp-build image has gotten out of sync with GitHub actions such
as Java and JavaScript where no longer passing when building locally.
Update the libsbp-bulid image so it more closely matches the GitHub
actions environment.
Specifically Java was failing with the following error:
*** java.lang.instrument ASSERTION FAILED ***: ""result"" with message agent load/premain call failed at src/java.instrument/share/native/libinstrument/JPLISAgent.c line: 422
FATAL ERROR in native method: processing of -javaagent failed, processJavaStart failed
Process 'Gradle Test Executor 12' finished with non-zero exit value 134
org.gradle.process.internal.ExecException: Process 'Gradle Test Executor 12' finished with non-zero exit value 134
        at org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:382)
        at org.gradle.process.internal.worker.DefaultWorkerProcess.onProcessStop(DefaultWorkerProcess.java:118)
        at org.gradle.process.internal.worker.DefaultWorkerProcess.access$000(DefaultWorkerProcess.java:41)
        at org.gradle.process.internal.worker.DefaultWorkerProcess$1.executionFinished(DefaultWorkerProcess.java:74)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:566)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
        at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
        at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:42)
        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:230)
        at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:149)
        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:140)
        at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)
        at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
        at com.sun.proxy.$Proxy78.executionFinished(Unknown Source)
        at org.gradle.process.internal.DefaultExecHandle.setEndStateInfo(DefaultExecHandle.java:215)
        at org.gradle.process.internal.DefaultExecHandle.finished(DefaultExecHandle.java:327)
        at org.gradle.process.internal.ExecHandleRunner.completed(ExecHandleRunner.java:103)
        at org.gradle.process.internal.ExecHandleRunner.run(ExecHandleRunner.java:83)
        at org.gradle.internal.operations.BuildOperationIdentifierPreservingRunnable.run(BuildOperationIdentifierPreservingRunnable.java:39)
        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
        at java.base/java.lang.Thread.run(Thread.java:829)

JavaScript was failing with the following error:
  3019 passing (14s)
  1 failing

  1) dispatcher
       should read stream of bytes and dispatch callback for one valid message, ignore corrupt preamble:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure ""done()"" is called; if returning a Promise, ensure it resolves. (/mnt/workspace/javascript/tests/test_dispatch.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)",The JS issue encountered now with e2c5f4d is https://swift-nav.atlassian.net/jira/software/projects/DEVINFRA/issues/DEVINFRA-486,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1048,2021-07-16T02:08:32Z,2021-07-16T07:36:54Z,2021-07-19T05:13:17Z,MERGED,True,2101,6419,42,https://github.com/woodfell,[ESD-2043] Merge master,54,[],https://github.com/swift-nav/libsbp/pull/1048,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1048,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1049,2021-07-16T18:36:23Z,2021-07-16T19:43:22Z,2021-07-16T19:43:22Z,MERGED,True,100,13,5,https://github.com/notoriaga,don't stop converters when they encounter an error,3,[],https://github.com/swift-nav/libsbp/pull/1049,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1049,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1050,2021-07-19T22:43:52Z,2021-07-22T20:00:25Z,2021-07-22T20:00:25Z,MERGED,True,328,79,12,https://github.com/jbangelo,Add orthometric height to MSG_POS_LLH_ACC,6,[],https://github.com/swift-nav/libsbp/pull/1050,https://github.com/jbangelo,1,https://github.com/swift-nav/libsbp/pull/1050,"This PR adds an additional field to the MSG_POS_LLH_ACC which describes the orthometric height at the rover location. This is also colloquially known as the height above mean sea level, and is the height included in the NMEA GGA sentence. The height above the WGS84 ellipsoid is kept in the message. I didn't include the geoid separation value, which is in the GGA sentence since the user would be able to get the geoid separation by subtracting the height value from the orthometric_height value. The remaining bits in the flags field has also been used to signal what geoid model has been used.","This PR adds an additional field to the MSG_POS_LLH_ACC which describes the orthometric height at the rover location. This is also colloquially known as the height above mean sea level, and is the height included in the NMEA GGA sentence. The height above the WGS84 ellipsoid is kept in the message. I didn't include the geoid separation value, which is in the GGA sentence since the user would be able to get the geoid separation by subtracting the height value from the orthometric_height value. The remaining bits in the flags field has also been used to signal what geoid model has been used.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1050,2021-07-19T22:43:52Z,2021-07-22T20:00:25Z,2021-07-22T20:00:25Z,MERGED,True,328,79,12,https://github.com/jbangelo,Add orthometric height to MSG_POS_LLH_ACC,6,[],https://github.com/swift-nav/libsbp/pull/1050,https://github.com/switanis,2,https://github.com/swift-nav/libsbp/pull/1050#issuecomment-882927580,"This PR adds an additional field to the MSG_POS_LLH_ACC which describes the orthometric height at the rover location. This is also colloquially known as the height above mean sea level, and is the height included in the NMEA GGA sentence. The height above the WGS84 ellipsoid is kept in the message. I didn't include the geoid separation value, which is in the GGA sentence since the user would be able to get the geoid separation by subtracting the height value from the orthometric_height value. The remaining bits in the flags field has also been used to signal what geoid model has been used.","Is there any possible use case that ortho height is not present/valid while other LLH are valid? Eg. gap in the geoid model?
I wonder if geoid model flags 0 should mean ortho height invalid / not present (for whatever reason). And non-zero 1 to 7 indicate a model.
Other that this LGTM.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1050,2021-07-19T22:43:52Z,2021-07-22T20:00:25Z,2021-07-22T20:00:25Z,MERGED,True,328,79,12,https://github.com/jbangelo,Add orthometric height to MSG_POS_LLH_ACC,6,[],https://github.com/swift-nav/libsbp/pull/1050,https://github.com/jbangelo,3,https://github.com/swift-nav/libsbp/pull/1050#issuecomment-883646424,"This PR adds an additional field to the MSG_POS_LLH_ACC which describes the orthometric height at the rover location. This is also colloquially known as the height above mean sea level, and is the height included in the NMEA GGA sentence. The height above the WGS84 ellipsoid is kept in the message. I didn't include the geoid separation value, which is in the GGA sentence since the user would be able to get the geoid separation by subtracting the height value from the orthometric_height value. The remaining bits in the flags field has also been used to signal what geoid model has been used.",@silverjam It seems like the SonarCloud check is complaining about repeated lines. Is there anything I can do to get that check to go green? Or should we be ignoring it for the moment?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1050,2021-07-19T22:43:52Z,2021-07-22T20:00:25Z,2021-07-22T20:00:25Z,MERGED,True,328,79,12,https://github.com/jbangelo,Add orthometric height to MSG_POS_LLH_ACC,6,[],https://github.com/swift-nav/libsbp/pull/1050,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/1050#issuecomment-883849818,"This PR adds an additional field to the MSG_POS_LLH_ACC which describes the orthometric height at the rover location. This is also colloquially known as the height above mean sea level, and is the height included in the NMEA GGA sentence. The height above the WGS84 ellipsoid is kept in the message. I didn't include the geoid separation value, which is in the GGA sentence since the user would be able to get the geoid separation by subtracting the height value from the orthometric_height value. The remaining bits in the flags field has also been used to signal what geoid model has been used.","@silverjam It seems like the SonarCloud check is complaining about repeated lines. Is there anything I can do to get that check to go green? Or should we be ignoring it for the moment?

Fine to ignore for now, I've adjusted the SonarCloud settings so this won't trigger again, if you push a new commit, the SonarCloud check should pass",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1051,2021-07-22T06:23:49Z,2021-07-22T22:56:17Z,2021-07-22T22:56:18Z,MERGED,True,1862,1,6,https://github.com/samvrlewis,[ESD-2133] Add to_sbp_msg functions in MessageTraits,3,[],https://github.com/swift-nav/libsbp/pull/1051,https://github.com/samvrlewis,1,https://github.com/swift-nav/libsbp/pull/1051,"Adds functions that can be used for converting from SBP message structs into the sbp_msg_t union. This is probably primarily useful when using templated functions.
I also added a very contrived example of how it might be used, but happy to remove if anyone thinks it's not useful.","Adds functions that can be used for converting from SBP message structs into the sbp_msg_t union. This is probably primarily useful when using templated functions.
I also added a very contrived example of how it might be used, but happy to remove if anyone thinks it's not useful.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1052,2021-07-22T21:41:39Z,2021-07-22T22:13:14Z,2021-07-22T22:13:15Z,MERGED,True,2,2,1,https://github.com/notoriaga,rust: Derive clone for GpsTimeError,1,[],https://github.com/swift-nav/libsbp/pull/1052,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1052,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1053,2021-07-23T05:24:29Z,2021-08-02T01:46:53Z,2021-08-02T01:46:54Z,MERGED,True,8,5,3,https://github.com/RReichert,ESD-2131 swift targets,6,[],https://github.com/swift-nav/libsbp/pull/1053,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1053,"Changes
Similar to swift-nav/libswiftnav-private#281.
NOTE: the example add_executables have been left alone
Testing
No difference","Changes
Similar to swift-nav/libswiftnav-private#281.
NOTE: the example add_executables have been left alone
Testing
No difference",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1054,2021-07-23T08:42:41Z,2021-07-24T08:45:11Z,2021-07-24T08:45:11Z,MERGED,True,5,1,2,https://github.com/samvrlewis,[ESD-2139] Add method to process unpacked messages from the state class,2,[],https://github.com/swift-nav/libsbp/pull/1054,https://github.com/samvrlewis,1,https://github.com/swift-nav/libsbp/pull/1054,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1055,2021-07-26T10:01:38Z,2021-07-27T04:57:45Z,2021-07-27T04:57:45Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - CI: Add whitespace linting,1,[],https://github.com/swift-nav/libsbp/pull/1055,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1055,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  373d4fca  ->  22da247e

22da247e  :  CI: Add whitespace linting
e24fe3cd  :  Trim whitespace
e55d3c90  :  Fix folder exists error (#92)
9426fb76  :  ESD-2113 Add license notice (#91)
c6f36254  :  Change valgrind message about debug symbols a verbose message instead

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7391/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  373d4fca  ->  22da247e

22da247e  :  CI: Add whitespace linting
e24fe3cd  :  Trim whitespace
e55d3c90  :  Fix folder exists error (#92)
9426fb76  :  ESD-2113 Add license notice (#91)
c6f36254  :  Change valgrind message about debug symbols a verbose message instead

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7391/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1055,2021-07-26T10:01:38Z,2021-07-27T04:57:45Z,2021-07-27T04:57:45Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - CI: Add whitespace linting,1,[],https://github.com/swift-nav/libsbp/pull/1055,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/1055#issuecomment-887208911,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  373d4fca  ->  22da247e

22da247e  :  CI: Add whitespace linting
e24fe3cd  :  Trim whitespace
e55d3c90  :  Fix folder exists error (#92)
9426fb76  :  ESD-2113 Add license notice (#91)
c6f36254  :  Change valgrind message about debug symbols a verbose message instead

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7391/.",outdated,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1056,2021-07-26T16:31:53Z,2021-07-26T17:25:43Z,2021-07-26T17:25:44Z,MERGED,True,4,5,3,https://github.com/woodfell,Fix JS primitive variable length array generation,1,[],https://github.com/swift-nav/libsbp/pull/1056,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1056,"The fill type for variable length arrays of primitive types is not properly generated in javascript leading to an error during testing of ""unknown types uint16""","The fill type for variable length arrays of primitive types is not properly generated in javascript leading to an error during testing of ""unknown types uint16""",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1057,2021-07-27T02:51:00Z,2021-07-27T03:05:52Z,2021-07-27T03:05:53Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Add CONTRIBUTING.md,1,[],https://github.com/swift-nav/libsbp/pull/1057,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1057,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  373d4fca  ->  d442845c

d442845c  :  Add CONTRIBUTING.md
924ee57d  :  Reduce line widths to 180
db053d11  :  GenericFindDependency.cmake: Add cmake-lint pragma
ff4ddcf4  :  CI: Use cmake-lint
22da247e  :  CI: Add whitespace linting
e24fe3cd  :  Trim whitespace
e55d3c90  :  Fix folder exists error (#92)
9426fb76  :  ESD-2113 Add license notice (#91)
c6f36254  :  Change valgrind message about debug symbols a verbose message instead

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7413/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  373d4fca  ->  d442845c

d442845c  :  Add CONTRIBUTING.md
924ee57d  :  Reduce line widths to 180
db053d11  :  GenericFindDependency.cmake: Add cmake-lint pragma
ff4ddcf4  :  CI: Use cmake-lint
22da247e  :  CI: Add whitespace linting
e24fe3cd  :  Trim whitespace
e55d3c90  :  Fix folder exists error (#92)
9426fb76  :  ESD-2113 Add license notice (#91)
c6f36254  :  Change valgrind message about debug symbols a verbose message instead

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7413/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1058,2021-07-29T09:56:08Z,2021-08-04T08:58:37Z,2021-08-04T08:58:38Z,MERGED,True,1243,1897,694,https://github.com/jayvdb,Fix spelling and copyright year [DEVINFRA-494],7,[],https://github.com/swift-nav/libsbp/pull/1058,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1058,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1058,2021-07-29T09:56:08Z,2021-08-04T08:58:37Z,2021-08-04T08:58:38Z,MERGED,True,1243,1897,694,https://github.com/jayvdb,Fix spelling and copyright year [DEVINFRA-494],7,[],https://github.com/swift-nav/libsbp/pull/1058,https://github.com/jayvdb,2,https://github.com/swift-nav/libsbp/pull/1058#issuecomment-889143405,,"There are still a few more old copyright lines (findable with git grep 'Copyright.*Swift' | grep --color=always -v 2021), but these should be enough to surface any issues.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1059,2021-07-31T07:41:01Z,2021-08-04T07:22:54Z,2021-08-04T07:22:54Z,MERGED,True,84,37,3,https://github.com/jayvdb,Dockerfile: Use Ubuntu focal,10,[],https://github.com/swift-nav/libsbp/pull/1059,https://github.com/jayvdb,1,https://github.com/swift-nav/libsbp/pull/1059,"#1058 depends on having a word dictionary, and the bionic dictionaries are missing words used in the specs that are in present in the GitHub ubuntu-latest workers used by https://github.com/swift-nav/libsbp/blob/641eda5/.github/workflows/generator.yaml#L20  .
The more recent the default wordlists used in the docker, the lower the chance that spec updates will require adding to the custom wordlist.
focal is the last ubuntu which includes https://packages.ubuntu.com/focal/clang-format-6.0 ; that could be sourced from somewhere else, but there are other issues to be solved moving to a release after focal.  Not especially relevant at present, is this is also the last release which supports https://packages.ubuntu.com/focal/clang-6.0 .  The portability project should mean that gcc-8 and beyond are usable with the current warning settings, so more flexibility should be coming soon.
Using groovy or hirsute instead of focal(LTS) will mean a less stable base, and requires an alternative for the deadsnakes ppa which only supports LTS.
c.f. https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa & deadsnakes/issues#169

Previous image size: 8.63GB per https://github.com/swift-nav/libsbp/runs/3089280215?check_suite_focus=true
Switch to focal: 9.42GB per https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3208048893
Remove rust-docs, /var/lib/apt/lists/ and use apt-get --no-install-recommends (for secondary fetches) 88818e0 : 8.44GB
Use apt-get --no-install-recommends (primary): 7.71Gb https://github.com/swift-nav/libsbp/runs/3209384503?check_suite_focus=true
Remove deadsnakes *-dev: 7.61GB - https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3209737607#step:5:15147 - tox summary
Merge apt-get: 7.56GB https://github.com/swift-nav/libsbp/runs/3213388487?check_suite_focus=true","#1058 depends on having a word dictionary, and the bionic dictionaries are missing words used in the specs that are in present in the GitHub ubuntu-latest workers used by https://github.com/swift-nav/libsbp/blob/641eda5/.github/workflows/generator.yaml#L20  .
The more recent the default wordlists used in the docker, the lower the chance that spec updates will require adding to the custom wordlist.
focal is the last ubuntu which includes https://packages.ubuntu.com/focal/clang-format-6.0 ; that could be sourced from somewhere else, but there are other issues to be solved moving to a release after focal.  Not especially relevant at present, is this is also the last release which supports https://packages.ubuntu.com/focal/clang-6.0 .  The portability project should mean that gcc-8 and beyond are usable with the current warning settings, so more flexibility should be coming soon.
Using groovy or hirsute instead of focal(LTS) will mean a less stable base, and requires an alternative for the deadsnakes ppa which only supports LTS.
c.f. https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa & deadsnakes/issues#169

Previous image size: 8.63GB per https://github.com/swift-nav/libsbp/runs/3089280215?check_suite_focus=true
Switch to focal: 9.42GB per https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3208048893
Remove rust-docs, /var/lib/apt/lists/ and use apt-get --no-install-recommends (for secondary fetches) 88818e0 : 8.44GB
Use apt-get --no-install-recommends (primary): 7.71Gb https://github.com/swift-nav/libsbp/runs/3209384503?check_suite_focus=true
Remove deadsnakes *-dev: 7.61GB - https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3209737607#step:5:15147 - tox summary
Merge apt-get: 7.56GB https://github.com/swift-nav/libsbp/runs/3213388487?check_suite_focus=true",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1059,2021-07-31T07:41:01Z,2021-08-04T07:22:54Z,2021-08-04T07:22:54Z,MERGED,True,84,37,3,https://github.com/jayvdb,Dockerfile: Use Ubuntu focal,10,[],https://github.com/swift-nav/libsbp/pull/1059,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1059#issuecomment-890548199,"#1058 depends on having a word dictionary, and the bionic dictionaries are missing words used in the specs that are in present in the GitHub ubuntu-latest workers used by https://github.com/swift-nav/libsbp/blob/641eda5/.github/workflows/generator.yaml#L20  .
The more recent the default wordlists used in the docker, the lower the chance that spec updates will require adding to the custom wordlist.
focal is the last ubuntu which includes https://packages.ubuntu.com/focal/clang-format-6.0 ; that could be sourced from somewhere else, but there are other issues to be solved moving to a release after focal.  Not especially relevant at present, is this is also the last release which supports https://packages.ubuntu.com/focal/clang-6.0 .  The portability project should mean that gcc-8 and beyond are usable with the current warning settings, so more flexibility should be coming soon.
Using groovy or hirsute instead of focal(LTS) will mean a less stable base, and requires an alternative for the deadsnakes ppa which only supports LTS.
c.f. https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa & deadsnakes/issues#169

Previous image size: 8.63GB per https://github.com/swift-nav/libsbp/runs/3089280215?check_suite_focus=true
Switch to focal: 9.42GB per https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3208048893
Remove rust-docs, /var/lib/apt/lists/ and use apt-get --no-install-recommends (for secondary fetches) 88818e0 : 8.44GB
Use apt-get --no-install-recommends (primary): 7.71Gb https://github.com/swift-nav/libsbp/runs/3209384503?check_suite_focus=true
Remove deadsnakes *-dev: 7.61GB - https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3209737607#step:5:15147 - tox summary
Merge apt-get: 7.56GB https://github.com/swift-nav/libsbp/runs/3213388487?check_suite_focus=true","As long as this doesn't change the base set of tools and languages we support I suppose this is ok, but a bit concerned that originally the usage of bionic in docker (or at least my intent) was supposed to imply a check on the base Linux version we support.  Bumping to focal means we don't have that sort of check anymore.  It would be great if we could think of a way to mitigate this.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1059,2021-07-31T07:41:01Z,2021-08-04T07:22:54Z,2021-08-04T07:22:54Z,MERGED,True,84,37,3,https://github.com/jayvdb,Dockerfile: Use Ubuntu focal,10,[],https://github.com/swift-nav/libsbp/pull/1059,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1059#issuecomment-890549741,"#1058 depends on having a word dictionary, and the bionic dictionaries are missing words used in the specs that are in present in the GitHub ubuntu-latest workers used by https://github.com/swift-nav/libsbp/blob/641eda5/.github/workflows/generator.yaml#L20  .
The more recent the default wordlists used in the docker, the lower the chance that spec updates will require adding to the custom wordlist.
focal is the last ubuntu which includes https://packages.ubuntu.com/focal/clang-format-6.0 ; that could be sourced from somewhere else, but there are other issues to be solved moving to a release after focal.  Not especially relevant at present, is this is also the last release which supports https://packages.ubuntu.com/focal/clang-6.0 .  The portability project should mean that gcc-8 and beyond are usable with the current warning settings, so more flexibility should be coming soon.
Using groovy or hirsute instead of focal(LTS) will mean a less stable base, and requires an alternative for the deadsnakes ppa which only supports LTS.
c.f. https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa & deadsnakes/issues#169

Previous image size: 8.63GB per https://github.com/swift-nav/libsbp/runs/3089280215?check_suite_focus=true
Switch to focal: 9.42GB per https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3208048893
Remove rust-docs, /var/lib/apt/lists/ and use apt-get --no-install-recommends (for secondary fetches) 88818e0 : 8.44GB
Use apt-get --no-install-recommends (primary): 7.71Gb https://github.com/swift-nav/libsbp/runs/3209384503?check_suite_focus=true
Remove deadsnakes *-dev: 7.61GB - https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3209737607#step:5:15147 - tox summary
Merge apt-get: 7.56GB https://github.com/swift-nav/libsbp/runs/3213388487?check_suite_focus=true","As long as this doesn't change the base set of tools and languages we support I suppose this is ok, but a bit concerned that originally the usage of bionic in docker (or at least my intent) was supposed to imply a check on the base Linux version we support.  Bumping to focal means we don't have that sort of check anymore.  It would be great if we could think of a way to mitigate this.

One idea would be to just run the check in CI-- if focal is needed to run correctly locally-- let's just make a dockerfile for that.
Another idea would be to make the dockerfile support bionic or focal as a base.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1059,2021-07-31T07:41:01Z,2021-08-04T07:22:54Z,2021-08-04T07:22:54Z,MERGED,True,84,37,3,https://github.com/jayvdb,Dockerfile: Use Ubuntu focal,10,[],https://github.com/swift-nav/libsbp/pull/1059,https://github.com/jayvdb,4,https://github.com/swift-nav/libsbp/pull/1059#issuecomment-890615728,"#1058 depends on having a word dictionary, and the bionic dictionaries are missing words used in the specs that are in present in the GitHub ubuntu-latest workers used by https://github.com/swift-nav/libsbp/blob/641eda5/.github/workflows/generator.yaml#L20  .
The more recent the default wordlists used in the docker, the lower the chance that spec updates will require adding to the custom wordlist.
focal is the last ubuntu which includes https://packages.ubuntu.com/focal/clang-format-6.0 ; that could be sourced from somewhere else, but there are other issues to be solved moving to a release after focal.  Not especially relevant at present, is this is also the last release which supports https://packages.ubuntu.com/focal/clang-6.0 .  The portability project should mean that gcc-8 and beyond are usable with the current warning settings, so more flexibility should be coming soon.
Using groovy or hirsute instead of focal(LTS) will mean a less stable base, and requires an alternative for the deadsnakes ppa which only supports LTS.
c.f. https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa & deadsnakes/issues#169

Previous image size: 8.63GB per https://github.com/swift-nav/libsbp/runs/3089280215?check_suite_focus=true
Switch to focal: 9.42GB per https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3208048893
Remove rust-docs, /var/lib/apt/lists/ and use apt-get --no-install-recommends (for secondary fetches) 88818e0 : 8.44GB
Use apt-get --no-install-recommends (primary): 7.71Gb https://github.com/swift-nav/libsbp/runs/3209384503?check_suite_focus=true
Remove deadsnakes *-dev: 7.61GB - https://github.com/swift-nav/libsbp/pull/1059/checks?check_run_id=3209737607#step:5:15147 - tox summary
Merge apt-get: 7.56GB https://github.com/swift-nav/libsbp/runs/3213388487?check_suite_focus=true","Another idea would be to make the dockerfile support bionic or focal as a base.

Done.  The bionic image is 6.82GB, vs 7.56GB for focal.  Should I add CI to test bionic as well?
In addition to the spelling database, having everyone use the focal LTS image will likely result in a better generated sbp.pdf.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1060,2021-08-03T19:20:31Z,2021-08-04T19:18:12Z,2021-08-04T19:18:13Z,MERGED,True,214,2,3,https://github.com/sokhealy,[ESD-2157]Add converters for GNSS message variants,3,[],https://github.com/swift-nav/libsbp/pull/1060,https://github.com/sokhealy,1,https://github.com/swift-nav/libsbp/pull/1060,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1061,2021-08-04T02:50:36Z,2021-08-04T03:24:43Z,2021-08-04T03:24:44Z,MERGED,True,7,3,1,https://github.com/RReichert,Fix windows library install directory,1,[],https://github.com/swift-nav/libsbp/pull/1061,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1061,"Issue
see https://snav.slack.com/archives/CG9PUMGUX/p1627996673000900
Testing
Ran the installation on my Linux machine with MingGW cross compilation and got the following results (need to specify the -D BUILD_SHARED_LIBS=true options for cmake):
====================[ Install | release-windows-x86_64 ]========================
/opt/jetbrains/clion/bin/cmake/linux/bin/cmake --build /home/rodrigor/Workspace/swift-nav/libsbp/c/build/release/windows-x86_64 --target install
[0/1] Install the project...
-- Install configuration: ""Release""
-- Installing: /home/rodrigor/Workspace/swift-nav/libsbp/install/release/windows-x86_64/usr/x86_64-w64-mingw32/usr/lib/libsbp.dll.a
-- Installing: /home/rodrigor/Workspace/swift-nav/libsbp/install/release/windows-x86_64/usr/x86_64-w64-mingw32/usr/bin/libsbp.dll
-- Installing: /home/rodrigor/Workspace/swift-nav/libsbp/install/release/windows-x86_64/usr/x86_64-w64-mingw32/usr/include/libsbp
...

Cherry picked the changes and ran on the ESD-2043-portability-project branch with VS2019 and got the following (firstly the master branch currently doesn't compiler with VS2019, also I needed to disable the unit tests as the post build tests were failing to link to gtest.dll):
====================[ Install | Debug ]=========================================
""C:\Program Files\JetBrains\CLion 2021.1.2\bin\cmake\win\bin\cmake.exe"" --build C:\Repo\libsbp\c\build\debug\vs2019 --target install
[100%] Built target sbp
Install the project...
-- Install configuration: ""Debug""
-- Up-to-date: C:/Program Files (x86)/libsbp/lib/sbp.lib
-- Installing: C:/Program Files (x86)/libsbp/bin/sbp.dll
-- Up-to-date: C:/Program Files (x86)/libsbp/include/libsbp
...","Issue
see https://snav.slack.com/archives/CG9PUMGUX/p1627996673000900
Testing
Ran the installation on my Linux machine with MingGW cross compilation and got the following results (need to specify the -D BUILD_SHARED_LIBS=true options for cmake):
====================[ Install | release-windows-x86_64 ]========================
/opt/jetbrains/clion/bin/cmake/linux/bin/cmake --build /home/rodrigor/Workspace/swift-nav/libsbp/c/build/release/windows-x86_64 --target install
[0/1] Install the project...
-- Install configuration: ""Release""
-- Installing: /home/rodrigor/Workspace/swift-nav/libsbp/install/release/windows-x86_64/usr/x86_64-w64-mingw32/usr/lib/libsbp.dll.a
-- Installing: /home/rodrigor/Workspace/swift-nav/libsbp/install/release/windows-x86_64/usr/x86_64-w64-mingw32/usr/bin/libsbp.dll
-- Installing: /home/rodrigor/Workspace/swift-nav/libsbp/install/release/windows-x86_64/usr/x86_64-w64-mingw32/usr/include/libsbp
...

Cherry picked the changes and ran on the ESD-2043-portability-project branch with VS2019 and got the following (firstly the master branch currently doesn't compiler with VS2019, also I needed to disable the unit tests as the post build tests were failing to link to gtest.dll):
====================[ Install | Debug ]=========================================
""C:\Program Files\JetBrains\CLion 2021.1.2\bin\cmake\win\bin\cmake.exe"" --build C:\Repo\libsbp\c\build\debug\vs2019 --target install
[100%] Built target sbp
Install the project...
-- Install configuration: ""Debug""
-- Up-to-date: C:/Program Files (x86)/libsbp/lib/sbp.lib
-- Installing: C:/Program Files (x86)/libsbp/bin/sbp.dll
-- Up-to-date: C:/Program Files (x86)/libsbp/include/libsbp
...",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1063,2021-08-07T10:21:45Z,2021-08-08T23:43:44Z,2021-08-08T23:43:45Z,MERGED,True,1346,1950,706,https://github.com/woodfell,Woodfell/merge master,20,[],https://github.com/swift-nav/libsbp/pull/1063,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1063,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1064,2021-08-12T04:17:24Z,2021-08-15T23:43:34Z,2021-08-15T23:43:35Z,MERGED,True,1,4,2,https://github.com/RReichert,ESD-2138 C11 -> C99,4,[],https://github.com/swift-nav/libsbp/pull/1064,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1064,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1065,2021-08-26T10:06:21Z,2021-08-26T21:40:41Z,2021-08-26T23:05:37Z,MERGED,True,1,1,1,https://github.com/woodfell,[ESD-2203] Always invoke decoded callback,1,[],https://github.com/swift-nav/libsbp/pull/1065,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1065,"When calling sbp_payload_process with an encoded SBP payload a badly set CB mask prevent decoded callbacks from being invoked. In reality the only callback type which can't be invoked from the function is the frame callbacks, legacy ""message"" callbacks and V4 decoded are both fine and should always be used.","When calling sbp_payload_process with an encoded SBP payload a badly set CB mask prevent decoded callbacks from being invoked. In reality the only callback type which can't be invoked from the function is the frame callbacks, legacy ""message"" callbacks and V4 decoded are both fine and should always be used.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1066,2021-08-30T00:50:02Z,2021-08-30T03:08:18Z,2021-08-30T03:08:18Z,MERGED,True,3,0,1,https://github.com/RReichert,ESD-2195 buffer overflow on SBP string decoding,1,[],https://github.com/swift-nav/libsbp/pull/1066,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1066,"Changes
Fixes a buffer overflow issue that takes place in SBP string decoding
Related PR

swift-nav/gnss-converters-private#944","Changes
Fixes a buffer overflow issue that takes place in SBP string decoding
Related PR

swift-nav/gnss-converters-private#944",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1067,2021-09-01T23:43:00Z,2021-09-02T01:24:25Z,2021-09-02T01:24:25Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Merge pull request #99 from swift-nav/lkloh/always_allow_track_origins,1,[],https://github.com/swift-nav/libsbp/pull/1067,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1067,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  d442845c  ->  dd6d9ede

dd6d9ede  :  Merge pull request #99 from swift-nav/lkloh/always_allow_track_origins
f048a45f  :  always track origins

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7768/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  d442845c  ->  dd6d9ede

dd6d9ede  :  Merge pull request #99 from swift-nav/lkloh/always_allow_track_origins
f048a45f  :  always track origins

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7768/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1068,2021-09-02T04:09:46Z,2021-09-02T04:09:54Z,2021-09-02T04:09:56Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - [ESD-2043] Portability project (#98),1,[],https://github.com/swift-nav/libsbp/pull/1068,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1068,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  dd6d9ede  ->  a094e490

a094e490  :  ESD-2043 Portability project (#98)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7787/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  dd6d9ede  ->  a094e490

a094e490  :  ESD-2043 Portability project (#98)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/7787/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1069,2021-09-06T01:02:16Z,2021-09-08T05:08:44Z,2021-09-08T05:08:45Z,MERGED,True,3565,2780,274,https://github.com/RReichert,ESD-2176 windows dll update,22,[],https://github.com/swift-nav/libsbp/pull/1069,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1069,"Changes
I've done a number of changes with this PR, the primary one being that we now we are able to generate Windows share library files (*.dll) which can be consumed and contains all publicly available functions.
What was wrong to begin with and why?
Visual Studio unlike GCC and Clang have different philosophies when building shared libraries. GCC and Clang generate symbol information for all functions that are defined in their source files whereas Visual Studio by default does not expose any symbol unless told otherwise through Visual Studio's variable/function/class  annotation__declspec(dllexport). So the major portion of the work done here is to annotate each public libsbp header file to expose the function. The way I've approach this was to follow what was advised here by Craig Scott. Note that I could have gone with forcing Visual Studio to expose all symbols like GCC and Clang, but that isn't the preferred way (you can see how we've also applied this to libsettings). The two major benefits with doing it this way is:

we reduce the dll file size a bit
we improve dynamic linking time

We've never had an issue with building libsbp static libraries for any of our platforms because unlike shared libraries, static libraries will expose all its symbols and let the linker strip off any symbols it does not need during the linking phase.
When to add SBP_EXPORT?
Well for one, any basic C/C++ global function should have SBP_EXPORT added at the front. I say ""basic"" because if a function is declared with static, we don't need to add SBP_EXPORT and the reason for that is that once the header file is included in a source file, the static tells the compiler that the function will be accessible only to the translation unit.
Additional Changes
While making these changes, I've also had a go at trying to clean up the CI a bit as well as place some build stages which will validate that dll files are now properly working. Building the libsbp unit tests using the shared libraries libraries does validate that its working. I've also gone ahead and added in an additional stage to install the project to make sure that it doesn't break in the future.
Limitations
Trying to run unit test on Windows with shared libraries doesn't work, if I were to install the binaries (including the unit tests) and than running them, it works. It appears that in Windows (unlike in Linux and Macs), the binaries RPATH isn't correctly managed by cmake. As such you might notice that I've update the CI to only build the test binaries for shared libraries but not run them (they are run when building static libraries).
Testing
On Windows I installed the libsbp library and created a seperate cmake project to consume it. I've written a simple C/C++ program that uses the shared library and it now works.","Changes
I've done a number of changes with this PR, the primary one being that we now we are able to generate Windows share library files (*.dll) which can be consumed and contains all publicly available functions.
What was wrong to begin with and why?
Visual Studio unlike GCC and Clang have different philosophies when building shared libraries. GCC and Clang generate symbol information for all functions that are defined in their source files whereas Visual Studio by default does not expose any symbol unless told otherwise through Visual Studio's variable/function/class  annotation__declspec(dllexport). So the major portion of the work done here is to annotate each public libsbp header file to expose the function. The way I've approach this was to follow what was advised here by Craig Scott. Note that I could have gone with forcing Visual Studio to expose all symbols like GCC and Clang, but that isn't the preferred way (you can see how we've also applied this to libsettings). The two major benefits with doing it this way is:

we reduce the dll file size a bit
we improve dynamic linking time

We've never had an issue with building libsbp static libraries for any of our platforms because unlike shared libraries, static libraries will expose all its symbols and let the linker strip off any symbols it does not need during the linking phase.
When to add SBP_EXPORT?
Well for one, any basic C/C++ global function should have SBP_EXPORT added at the front. I say ""basic"" because if a function is declared with static, we don't need to add SBP_EXPORT and the reason for that is that once the header file is included in a source file, the static tells the compiler that the function will be accessible only to the translation unit.
Additional Changes
While making these changes, I've also had a go at trying to clean up the CI a bit as well as place some build stages which will validate that dll files are now properly working. Building the libsbp unit tests using the shared libraries libraries does validate that its working. I've also gone ahead and added in an additional stage to install the project to make sure that it doesn't break in the future.
Limitations
Trying to run unit test on Windows with shared libraries doesn't work, if I were to install the binaries (including the unit tests) and than running them, it works. It appears that in Windows (unlike in Linux and Macs), the binaries RPATH isn't correctly managed by cmake. As such you might notice that I've update the CI to only build the test binaries for shared libraries but not run them (they are run when building static libraries).
Testing
On Windows I installed the libsbp library and created a seperate cmake project to consume it. I've written a simple C/C++ program that uses the shared library and it now works.",True,{'THUMBS_UP': ['https://github.com/jayvdb']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1070,2021-09-09T23:55:28Z,2021-09-13T21:52:43Z,2021-09-13T21:52:43Z,MERGED,True,389,0,4,https://github.com/notoriaga,Rust: callback based message handler,2,[],https://github.com/swift-nav/libsbp/pull/1070,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1070,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1071,2021-09-17T21:37:18Z,2021-09-28T18:37:53Z,2021-09-28T18:37:54Z,MERGED,True,21547,24135,144,https://github.com/notoriaga,rust: release cleanup,12,[],https://github.com/swift-nav/libsbp/pull/1071,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1071,"Apologies in advance for the massive diff. Most of it is renaming/moving things around. The bulk of new changes are in wire_format.rs and sbp_string.rs.
Breaking API changes:

Removes get_ prefix from getters - https://rust-lang.github.io/api-guidelines/naming.html#getter-names-follow-rust-convention-c-getter
Renames SBP -> Sbp and SBPMessage -> SbpMessage. Also treats acronyms like GPS/NED as one word (i.e. Gps/Ned) - https://rust-lang.github.io/api-guidelines/naming.html#casing-conforms-to-rfc-430-c-case. The casing of JSON messages was left as is
Renames sbp_serde feature to just serde - https://rust-lang.github.io/api-guidelines/naming.html?highlight=fea#feature-names-are-free-of-placeholder-words-c-feature
Replaces the Error enum with two, DeserializeError/SerializeError. The finer grained types prevent you from having to deal with errors that can never happen
Marks Sbp enum as #[non_exhaustive] (not that anyone is realistically matching on all variants but you never know)
No longer reexports stuff from dencode/bytes. Reading messages is done via iter_messages like before. Writing messages now can be done with sbp::to_writer or sbp::to_vec. SbpEncoder is available for writing messages with buffered output. Previously you needed to use dencode::FramedWrite with the encoder, but now each encoder contains the FramedWrite
SBPTools -> SbpIterExt because that's what it is/that's normally what I see things like this called

Additions:

Adds preliminary support for the new string encodings.
Adds support for fixed size arrays (similar to what @jbangelo had here #903). Haven't seen much of a perf change, but maybe it might help with the fragmentation issues @silverjam mentioned. Also feels more semantically correct to say that something like a velocity vector is an [f64; 3] not a Vec<f64>
Doc comments/some doc tests

Internal improvements:

Fixes generated docs to escape braces/wrap links in <link>
Rejiggers the auto generated tests to produce a single test binary rather than one for each
Removes all but one of the #[allow(..)] statements in the generated code by tweaking the code gen
Removes nom/thiserror/byteorder. Without any features enabled we dropped from 46 deps to 10, debug builds drop from ~22 -> ~9 seconds and release builds from ~43 -> ~11 seconds. It turns out bytes has all we need for parsing (mainly an easy way to pull LE bytes out of a buffer).
Removes SbpSerialize trait and replaces it with WireFormat (not sure this is the best name). It's very similar to SbpSerialize but also includes functions for reading the types. Unlike SbpSerialize this trait is not public. Well it's technically public but unnameable by downstream crates (https://rust-lang.github.io/api-guidelines/future-proofing.html). This was done because it's really an implementation detail. Plus, because WireFormat is a super trait of SbpMessage, it makes it impossible for downstream crates to implement SbpMessage which is probably a good idea.

Future things:

Expand on the SbpString stuff. Should add validation when parsing/writing that the string satisfies the format. Could also add functions to iterate over the parts of a multipart string for example.
When the docs refer to other messages like we could replace the names with links to the actual types.

All in all a lot of changes. Happy to undo any of them that people don't like/think are unnecessary","Apologies in advance for the massive diff. Most of it is renaming/moving things around. The bulk of new changes are in wire_format.rs and sbp_string.rs.
Breaking API changes:

Removes get_ prefix from getters - https://rust-lang.github.io/api-guidelines/naming.html#getter-names-follow-rust-convention-c-getter
Renames SBP -> Sbp and SBPMessage -> SbpMessage. Also treats acronyms like GPS/NED as one word (i.e. Gps/Ned) - https://rust-lang.github.io/api-guidelines/naming.html#casing-conforms-to-rfc-430-c-case. The casing of JSON messages was left as is
Renames sbp_serde feature to just serde - https://rust-lang.github.io/api-guidelines/naming.html?highlight=fea#feature-names-are-free-of-placeholder-words-c-feature
Replaces the Error enum with two, DeserializeError/SerializeError. The finer grained types prevent you from having to deal with errors that can never happen
Marks Sbp enum as #[non_exhaustive] (not that anyone is realistically matching on all variants but you never know)
No longer reexports stuff from dencode/bytes. Reading messages is done via iter_messages like before. Writing messages now can be done with sbp::to_writer or sbp::to_vec. SbpEncoder is available for writing messages with buffered output. Previously you needed to use dencode::FramedWrite with the encoder, but now each encoder contains the FramedWrite
SBPTools -> SbpIterExt because that's what it is/that's normally what I see things like this called

Additions:

Adds preliminary support for the new string encodings.
Adds support for fixed size arrays (similar to what @jbangelo had here #903). Haven't seen much of a perf change, but maybe it might help with the fragmentation issues @silverjam mentioned. Also feels more semantically correct to say that something like a velocity vector is an [f64; 3] not a Vec<f64>
Doc comments/some doc tests

Internal improvements:

Fixes generated docs to escape braces/wrap links in <link>
Rejiggers the auto generated tests to produce a single test binary rather than one for each
Removes all but one of the #[allow(..)] statements in the generated code by tweaking the code gen
Removes nom/thiserror/byteorder. Without any features enabled we dropped from 46 deps to 10, debug builds drop from ~22 -> ~9 seconds and release builds from ~43 -> ~11 seconds. It turns out bytes has all we need for parsing (mainly an easy way to pull LE bytes out of a buffer).
Removes SbpSerialize trait and replaces it with WireFormat (not sure this is the best name). It's very similar to SbpSerialize but also includes functions for reading the types. Unlike SbpSerialize this trait is not public. Well it's technically public but unnameable by downstream crates (https://rust-lang.github.io/api-guidelines/future-proofing.html). This was done because it's really an implementation detail. Plus, because WireFormat is a super trait of SbpMessage, it makes it impossible for downstream crates to implement SbpMessage which is probably a good idea.

Future things:

Expand on the SbpString stuff. Should add validation when parsing/writing that the string satisfies the format. Could also add functions to iterate over the parts of a multipart string for example.
When the docs refer to other messages like we could replace the names with links to the actual types.

All in all a lot of changes. Happy to undo any of them that people don't like/think are unnecessary",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1071,2021-09-17T21:37:18Z,2021-09-28T18:37:53Z,2021-09-28T18:37:54Z,MERGED,True,21547,24135,144,https://github.com/notoriaga,rust: release cleanup,12,[],https://github.com/swift-nav/libsbp/pull/1071,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1071#issuecomment-928437856,"Apologies in advance for the massive diff. Most of it is renaming/moving things around. The bulk of new changes are in wire_format.rs and sbp_string.rs.
Breaking API changes:

Removes get_ prefix from getters - https://rust-lang.github.io/api-guidelines/naming.html#getter-names-follow-rust-convention-c-getter
Renames SBP -> Sbp and SBPMessage -> SbpMessage. Also treats acronyms like GPS/NED as one word (i.e. Gps/Ned) - https://rust-lang.github.io/api-guidelines/naming.html#casing-conforms-to-rfc-430-c-case. The casing of JSON messages was left as is
Renames sbp_serde feature to just serde - https://rust-lang.github.io/api-guidelines/naming.html?highlight=fea#feature-names-are-free-of-placeholder-words-c-feature
Replaces the Error enum with two, DeserializeError/SerializeError. The finer grained types prevent you from having to deal with errors that can never happen
Marks Sbp enum as #[non_exhaustive] (not that anyone is realistically matching on all variants but you never know)
No longer reexports stuff from dencode/bytes. Reading messages is done via iter_messages like before. Writing messages now can be done with sbp::to_writer or sbp::to_vec. SbpEncoder is available for writing messages with buffered output. Previously you needed to use dencode::FramedWrite with the encoder, but now each encoder contains the FramedWrite
SBPTools -> SbpIterExt because that's what it is/that's normally what I see things like this called

Additions:

Adds preliminary support for the new string encodings.
Adds support for fixed size arrays (similar to what @jbangelo had here #903). Haven't seen much of a perf change, but maybe it might help with the fragmentation issues @silverjam mentioned. Also feels more semantically correct to say that something like a velocity vector is an [f64; 3] not a Vec<f64>
Doc comments/some doc tests

Internal improvements:

Fixes generated docs to escape braces/wrap links in <link>
Rejiggers the auto generated tests to produce a single test binary rather than one for each
Removes all but one of the #[allow(..)] statements in the generated code by tweaking the code gen
Removes nom/thiserror/byteorder. Without any features enabled we dropped from 46 deps to 10, debug builds drop from ~22 -> ~9 seconds and release builds from ~43 -> ~11 seconds. It turns out bytes has all we need for parsing (mainly an easy way to pull LE bytes out of a buffer).
Removes SbpSerialize trait and replaces it with WireFormat (not sure this is the best name). It's very similar to SbpSerialize but also includes functions for reading the types. Unlike SbpSerialize this trait is not public. Well it's technically public but unnameable by downstream crates (https://rust-lang.github.io/api-guidelines/future-proofing.html). This was done because it's really an implementation detail. Plus, because WireFormat is a super trait of SbpMessage, it makes it impossible for downstream crates to implement SbpMessage which is probably a good idea.

Future things:

Expand on the SbpString stuff. Should add validation when parsing/writing that the string satisfies the format. Could also add functions to iterate over the parts of a multipart string for example.
When the docs refer to other messages like we could replace the names with links to the actual types.

All in all a lot of changes. Happy to undo any of them that people don't like/think are unnecessary","* Adds support for fixed size arrays (similar to what @jbangelo had here [[WIP] Take advantage of const generics in the Rust parser #903](https://github.com/swift-nav/libsbp/pull/903)). Haven't seen much of a perf change, but maybe it might help with the fragmentation issues @silverjam mentioned. Also feels more semantically correct to say that something like a velocity vector is an `[f64; 3]` not a `Vec<f64>`


Semantics look a lot better, but I think we'd need further changes for this to have a real impact on (potential) heap fragmentation issues. ""Further changes"" would probably mean the ability to allocate the whole SBP message struct on the stack with variable sized arrays backed by an ""upper maximum"" static array (similar to the new v4 libsbp API for C).
I tried to make a change to ensure that we're allocating consistently size buffers here: 64cafc3 to make things easier for heap reclamation -- but it did not have any impact on the specific console issue (which probably means it's just a leak, not a fragmentation issue).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1072,2021-09-21T02:51:24Z,2021-09-21T23:17:24Z,2021-09-21T23:17:51Z,CLOSED,False,199,0,4,https://github.com/lkloh,POS-542: Add SBP read/write IO file to libsbp and move it out of starling,1,[],https://github.com/swift-nav/libsbp/pull/1072,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/1072,"POS-542: Add SBP read/write IO file to libsbp
Design
After the Portability changes were merged, I realized that the interleaver needed additional work before it could use the newly refactored libsbp. That change is done in https://github.com/swift-nav/interleaver/pull/394/files.
The legacy libsbp has a file for IO operations on SBP, but the new libsbp does not. I add a new file for IO operations on SBP and copied it's implementation directly from starling. Now, the interleaver and starling can both reuse this same IO file for their own purposes.
Testing
Added unit test that passes
Related PRs

starling changes swift-nav/starling#5731
interleaver changes: swift-nav/interleaver#394","POS-542: Add SBP read/write IO file to libsbp
Design
After the Portability changes were merged, I realized that the interleaver needed additional work before it could use the newly refactored libsbp. That change is done in https://github.com/swift-nav/interleaver/pull/394/files.
The legacy libsbp has a file for IO operations on SBP, but the new libsbp does not. I add a new file for IO operations on SBP and copied it's implementation directly from starling. Now, the interleaver and starling can both reuse this same IO file for their own purposes.
Testing
Added unit test that passes
Related PRs

starling changes swift-nav/starling#5731
interleaver changes: swift-nav/interleaver#394",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1072,2021-09-21T02:51:24Z,2021-09-21T23:17:24Z,2021-09-21T23:17:51Z,CLOSED,False,199,0,4,https://github.com/lkloh,POS-542: Add SBP read/write IO file to libsbp and move it out of starling,1,[],https://github.com/swift-nav/libsbp/pull/1072,https://github.com/lkloh,2,https://github.com/swift-nav/libsbp/pull/1072#issuecomment-924456916,"POS-542: Add SBP read/write IO file to libsbp
Design
After the Portability changes were merged, I realized that the interleaver needed additional work before it could use the newly refactored libsbp. That change is done in https://github.com/swift-nav/interleaver/pull/394/files.
The legacy libsbp has a file for IO operations on SBP, but the new libsbp does not. I add a new file for IO operations on SBP and copied it's implementation directly from starling. Now, the interleaver and starling can both reuse this same IO file for their own purposes.
Testing
Added unit test that passes
Related PRs

starling changes swift-nav/starling#5731
interleaver changes: swift-nav/interleaver#394",Talked with @RReichert - we're not merging this - reach out to one of us for reasons on Slack if you're curious.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1073,2021-09-22T20:47:37Z,2021-09-22T23:45:15Z,2021-09-22T23:45:15Z,MERGED,True,118,119,21,https://github.com/silverjam,rust: update to swiftnav 0.6.1,7,[],https://github.com/swift-nav/libsbp/pull/1073,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1073,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1073,2021-09-22T20:47:37Z,2021-09-22T23:45:15Z,2021-09-22T23:45:15Z,MERGED,True,118,119,21,https://github.com/silverjam,rust: update to swiftnav 0.6.1,7,[],https://github.com/swift-nav/libsbp/pull/1073,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1073#issuecomment-925318259,,@notoriaga let me know if this conflicts with your work and I'll close,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1073,2021-09-22T20:47:37Z,2021-09-22T23:45:15Z,2021-09-22T23:45:15Z,MERGED,True,118,119,21,https://github.com/silverjam,rust: update to swiftnav 0.6.1,7,[],https://github.com/swift-nav/libsbp/pull/1073,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/1073#issuecomment-925347495,,"I got the same 0.0/-0.0 on my pr, not sure what's up with that. Maybe tests in a binary crate don't use the lock file and something in serde_json changed",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1073,2021-09-22T20:47:37Z,2021-09-22T23:45:15Z,2021-09-22T23:45:15Z,MERGED,True,118,119,21,https://github.com/silverjam,rust: update to swiftnav 0.6.1,7,[],https://github.com/swift-nav/libsbp/pull/1073,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/1073#issuecomment-925378392,,"I got the same 0.0/-0.0 on my pr, not sure what's up with that. Maybe tests in a binary crate don't use the lock file and something in serde_json changed

I mentioned the issue here serde-rs/json#801 -- but it looks like this might be ""correct"" behavior since everything in JSON is a float?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1073,2021-09-22T20:47:37Z,2021-09-22T23:45:15Z,2021-09-22T23:45:15Z,MERGED,True,118,119,21,https://github.com/silverjam,rust: update to swiftnav 0.6.1,7,[],https://github.com/swift-nav/libsbp/pull/1073,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/1073#issuecomment-925381485,,"To different solutions:

df0da9a (just pin serde)
d380158 (this is probably the better long term solution)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1074,2021-09-24T05:40:24Z,2021-09-30T01:26:23Z,2021-09-30T01:26:23Z,MERGED,True,78,117,14,https://github.com/woodfell,[ESD-2180] clang-tidy improvements,3,[],https://github.com/swift-nav/libsbp/pull/1074,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1074,"Import new clang-tidy module.
Remove .clang-tidy, it's now automatically generated by ClangTidy.cmake
Any additional changes needed by new common clang-tidy config","Import new clang-tidy module.
Remove .clang-tidy, it's now automatically generated by ClangTidy.cmake
Any additional changes needed by new common clang-tidy config",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1074,2021-09-24T05:40:24Z,2021-09-30T01:26:23Z,2021-09-30T01:26:23Z,MERGED,True,78,117,14,https://github.com/woodfell,[ESD-2180] clang-tidy improvements,3,[],https://github.com/swift-nav/libsbp/pull/1074,https://github.com/woodfell,2,https://github.com/swift-nav/libsbp/pull/1074#issuecomment-928961746,"Import new clang-tidy module.
Remove .clang-tidy, it's now automatically generated by ClangTidy.cmake
Any additional changes needed by new common clang-tidy config","Do our clang tidy rules not like 'str' and 'truncate' being in variable names?

No, it was complaining about different names in the function declaration and definition. I went with the policy of using buf for the ""raw"" function saving str for the non-raw functions, and trunc rather than truncate since it was more common",True,{'THUMBS_UP': ['https://github.com/samvrlewis']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1075,2021-09-29T18:45:35Z,2021-09-29T21:40:16Z,2021-09-29T21:40:17Z,MERGED,True,622,564,34,https://github.com/notoriaga,expose parsing messages from frames,1,[],https://github.com/swift-nav/libsbp/pull/1075,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1075,"Re-exposed the functionality to directly parse a message from sender_id + msg_type + payload. Made the parsing generic over Buf/BufMut so internally we can still use BytesMut but people outside the library can use vecs/slices.
Also adds the readme field to the cargo.toml files so it will show something on crates.io","Re-exposed the functionality to directly parse a message from sender_id + msg_type + payload. Made the parsing generic over Buf/BufMut so internally we can still use BytesMut but people outside the library can use vecs/slices.
Also adds the readme field to the cargo.toml files so it will show something on crates.io",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1076,2021-09-30T01:11:46Z,2021-09-30T01:12:39Z,2021-09-30T01:12:42Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - [ESD-2180] Improved clang-tidy module (#101),1,[],https://github.com/swift-nav/libsbp/pull/1076,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1076,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  a094e490  ->  c7c21396

c7c21396  :  ESD-2180 Improved clang-tidy module (#101)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/8077/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  a094e490  ->  c7c21396

c7c21396  :  ESD-2180 Improved clang-tidy module (#101)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/8077/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1077,2021-09-30T15:53:32Z,2021-09-30T21:37:37Z,2021-09-30T21:37:38Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - [DEVINFRA-550] Add Profiling to Unit Tests (#102),1,[],https://github.com/swift-nav/libsbp/pull/1077,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1077,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  c7c21396  ->  1e6a89d6

1e6a89d6  :  DEVINFRA-550 Add Profiling to Unit Tests (#102)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/8096/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  c7c21396  ->  1e6a89d6

1e6a89d6  :  DEVINFRA-550 Add Profiling to Unit Tests (#102)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/8096/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1078,2021-10-01T20:31:10Z,2021-10-01T22:15:05Z,2021-10-01T22:15:06Z,MERGED,True,4052,3284,33,https://github.com/notoriaga,rust: add len method to SbpMessage,3,[],https://github.com/swift-nav/libsbp/pull/1078,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1078,"While updating the console realized that it was using the sbp_sizemethod (now called encoded_len). This adds a len method to SbpMessage (WireFormat isn't usable by downstream crates). This function is actually a little different, it adds on the 8 bytes for the header + crc, which sbp_size did not. I think this is probably what we actually want in the console, in order to show how much data the console has read","While updating the console realized that it was using the sbp_sizemethod (now called encoded_len). This adds a len method to SbpMessage (WireFormat isn't usable by downstream crates). This function is actually a little different, it adds on the 8 bytes for the header + crc, which sbp_size did not. I think this is probably what we actually want in the console, in order to show how much data the console has read",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1078,2021-10-01T20:31:10Z,2021-10-01T22:15:05Z,2021-10-01T22:15:06Z,MERGED,True,4052,3284,33,https://github.com/notoriaga,rust: add len method to SbpMessage,3,[],https://github.com/swift-nav/libsbp/pull/1078,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1078#issuecomment-932577034,"While updating the console realized that it was using the sbp_sizemethod (now called encoded_len). This adds a len method to SbpMessage (WireFormat isn't usable by downstream crates). This function is actually a little different, it adds on the 8 bytes for the header + crc, which sbp_size did not. I think this is probably what we actually want in the console, in order to show how much data the console has read","Actually I think our nomenclature could use some consideration here. I think usually ""encoded len"" is used to indicate how big the byte buffer would be if the message was encoded into it's ""on wire"" representation.

See:

https://developer.apple.com/documentation/metal/mtlargumentencoder/2915784-encodedlength
https://guava.dev/releases/18.0/api/docs/com/google/common/base/Utf8.html

So maybe we should switch around len and encoded_len or rename len to wire_len or packed_len",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1078,2021-10-01T20:31:10Z,2021-10-01T22:15:05Z,2021-10-01T22:15:06Z,MERGED,True,4052,3284,33,https://github.com/notoriaga,rust: add len method to SbpMessage,3,[],https://github.com/swift-nav/libsbp/pull/1078,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/1078#issuecomment-932585168,"While updating the console realized that it was using the sbp_sizemethod (now called encoded_len). This adds a len method to SbpMessage (WireFormat isn't usable by downstream crates). This function is actually a little different, it adds on the 8 bytes for the header + crc, which sbp_size did not. I think this is probably what we actually want in the console, in order to show how much data the console has read","Great idea, did the switcheroo",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1079,2021-10-01T22:12:07Z,2021-10-01T22:40:06Z,2021-10-01T23:20:16Z,CLOSED,False,9,0,2,https://github.com/lkloh,POS-559: Add SbpMsgInvalid to sbp_msg_types_t,2,[],https://github.com/swift-nav/libsbp/pull/1079,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/1079,We've discussed having SbpMsgInvalid enum type so that we can use it as a placeholder for variables of thesbp_msg_types_t type instead of using static_cast<sbp_msg_type_t>(0) as the invalid type.,We've discussed having SbpMsgInvalid enum type so that we can use it as a placeholder for variables of thesbp_msg_types_t type instead of using static_cast<sbp_msg_type_t>(0) as the invalid type.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1080,2021-10-08T04:56:56Z,2021-10-08T08:37:36Z,2021-10-08T08:37:37Z,MERGED,True,36,34,12,https://github.com/silverjam,rust: Use minimum internal buffer size of 128b,3,[],https://github.com/swift-nav/libsbp/pull/1080,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1080,"Benchmarks, jemalloc without 128b minimum buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):      1.755 s ¬±  0.076 s    [User: 2.689 s, System: 0.532 s]
  Range (min ‚Ä¶ max):    1.585 s ‚Ä¶  1.922 s    50 runs

Using jemalloc with 128b minimum internal buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):     718.1 ms ¬±  33.9 ms    [User: 1.085 s, System: 0.170 s]
  Range (min ‚Ä¶ max):   658.3 ms ‚Ä¶ 839.5 ms    50 runs

Using mimalloc with 128b minimum internal buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):     642.9 ms ¬±  33.9 ms    [User: 989.1 ms, System: 160.9 ms]
  Range (min ‚Ä¶ max):   603.4 ms ‚Ä¶ 785.0 ms    50 runs

MiMalloc also has the benefit that it works for more than just Linux.","Benchmarks, jemalloc without 128b minimum buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):      1.755 s ¬±  0.076 s    [User: 2.689 s, System: 0.532 s]
  Range (min ‚Ä¶ max):    1.585 s ‚Ä¶  1.922 s    50 runs

Using jemalloc with 128b minimum internal buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):     718.1 ms ¬±  33.9 ms    [User: 1.085 s, System: 0.170 s]
  Range (min ‚Ä¶ max):   658.3 ms ‚Ä¶ 839.5 ms    50 runs

Using mimalloc with 128b minimum internal buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):     642.9 ms ¬±  33.9 ms    [User: 989.1 ms, System: 160.9 ms]
  Range (min ‚Ä¶ max):   603.4 ms ‚Ä¶ 785.0 ms    50 runs

MiMalloc also has the benefit that it works for more than just Linux.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1080,2021-10-08T04:56:56Z,2021-10-08T08:37:36Z,2021-10-08T08:37:37Z,MERGED,True,36,34,12,https://github.com/silverjam,rust: Use minimum internal buffer size of 128b,3,[],https://github.com/swift-nav/libsbp/pull/1080,https://github.com/notoriaga,2,https://github.com/swift-nav/libsbp/pull/1080#issuecomment-938355099,"Benchmarks, jemalloc without 128b minimum buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):      1.755 s ¬±  0.076 s    [User: 2.689 s, System: 0.532 s]
  Range (min ‚Ä¶ max):    1.585 s ‚Ä¶  1.922 s    50 runs

Using jemalloc with 128b minimum internal buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):     718.1 ms ¬±  33.9 ms    [User: 1.085 s, System: 0.170 s]
  Range (min ‚Ä¶ max):   658.3 ms ‚Ä¶ 839.5 ms    50 runs

Using mimalloc with 128b minimum internal buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):     642.9 ms ¬±  33.9 ms    [User: 989.1 ms, System: 160.9 ms]
  Range (min ‚Ä¶ max):   603.4 ms ‚Ä¶ 785.0 ms    50 runs

MiMalloc also has the benefit that it works for more than just Linux.","Oops was on the wrong branch for that push, I don't think it actually pushed anything though commit changed but I don't see what actually did",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1080,2021-10-08T04:56:56Z,2021-10-08T08:37:36Z,2021-10-08T08:37:37Z,MERGED,True,36,34,12,https://github.com/silverjam,rust: Use minimum internal buffer size of 128b,3,[],https://github.com/swift-nav/libsbp/pull/1080,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1080#issuecomment-938356400,"Benchmarks, jemalloc without 128b minimum buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):      1.755 s ¬±  0.076 s    [User: 2.689 s, System: 0.532 s]
  Range (min ‚Ä¶ max):    1.585 s ‚Ä¶  1.922 s    50 runs

Using jemalloc with 128b minimum internal buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):     718.1 ms ¬±  33.9 ms    [User: 1.085 s, System: 0.170 s]
  Range (min ‚Ä¶ max):   658.3 ms ‚Ä¶ 839.5 ms    50 runs

Using mimalloc with 128b minimum internal buffer size:
Benchmark #1: sbp2json <test_data/benchmark.sbp | json2sbp >/dev/null
  Time (mean ¬± œÉ):     642.9 ms ¬±  33.9 ms    [User: 989.1 ms, System: 160.9 ms]
  Range (min ‚Ä¶ max):   603.4 ms ‚Ä¶ 785.0 ms    50 runs

MiMalloc also has the benefit that it works for more than just Linux.","Oops was on the wrong branch for that push, I don't think it actually pushed anything though commit changed but I don't see what actually did

no worries, I figured it out",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1081,2021-10-12T19:50:25Z,2021-10-12T21:46:21Z,2021-10-12T21:46:21Z,MERGED,True,1,1,1,https://github.com/silverjam,fix crc calculation bug [DEVINFRA-568],1,[],https://github.com/swift-nav/libsbp/pull/1081,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1081,CRC calculation was only correct for the first packet in a buffer because of a missing offset,CRC calculation was only correct for the first packet in a buffer because of a missing offset,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1081,2021-10-12T19:50:25Z,2021-10-12T21:46:21Z,2021-10-12T21:46:21Z,MERGED,True,1,1,1,https://github.com/silverjam,fix crc calculation bug [DEVINFRA-568],1,[],https://github.com/swift-nav/libsbp/pull/1081,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1081#issuecomment-941399196,CRC calculation was only correct for the first packet in a buffer because of a missing offset,CC @switanis Silly CRC bug was causing the slowdown in the Console 3.1 release,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1082,2021-10-15T21:19:16Z,,2022-05-25T08:12:38Z,OPEN,False,22,11,13,https://github.com/woodfell,Mark all packages as stable,4,[],https://github.com/swift-nav/libsbp/pull/1082,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1082,"Several packages in the yaml spec are marked as unstable. This means that all the messages defined in that package are output in a ""draft message"" section at the end of the pdf doc.
Mark all packages as stable since anything that is out there in the wild can't be changed. The only effect of this is that the pdf doc needs updating but there are no code changes anywhere.","Several packages in the yaml spec are marked as unstable. This means that all the messages defined in that package are output in a ""draft message"" section at the end of the pdf doc.
Mark all packages as stable since anything that is out there in the wild can't be changed. The only effect of this is that the pdf doc needs updating but there are no code changes anywhere.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1082,2021-10-15T21:19:16Z,,2022-05-25T08:12:38Z,OPEN,False,22,11,13,https://github.com/woodfell,Mark all packages as stable,4,[],https://github.com/swift-nav/libsbp/pull/1082,https://github.com/woodfell,2,https://github.com/swift-nav/libsbp/pull/1082#issuecomment-948375963,"Several packages in the yaml spec are marked as unstable. This means that all the messages defined in that package are output in a ""draft message"" section at the end of the pdf doc.
Mark all packages as stable since anything that is out there in the wild can't be changed. The only effect of this is that the pdf doc needs updating but there are no code changes anywhere.","@silverjam @jbangelo To tie up all the questions about internal only packages, should we be making better use of the public flag then? I think when set to true those packages get excluded from the pdf doc altogether. (apparently linux, flash, and ndb are already marked as public = False, file IO would need changing though)
I've just been wondering what the point of this stable flag is since we have a policy of not changing messages once they've made it in to a tagged release.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1082,2021-10-15T21:19:16Z,,2022-05-25T08:12:38Z,OPEN,False,22,11,13,https://github.com/woodfell,Mark all packages as stable,4,[],https://github.com/swift-nav/libsbp/pull/1082,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1082#issuecomment-948715852,"Several packages in the yaml spec are marked as unstable. This means that all the messages defined in that package are output in a ""draft message"" section at the end of the pdf doc.
Mark all packages as stable since anything that is out there in the wild can't be changed. The only effect of this is that the pdf doc needs updating but there are no code changes anywhere.",I'm ok with this if we remove stable from the file_io and linux modules.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1082,2021-10-15T21:19:16Z,,2022-05-25T08:12:38Z,OPEN,False,22,11,13,https://github.com/woodfell,Mark all packages as stable,4,[],https://github.com/swift-nav/libsbp/pull/1082,https://github.com/woodfell,4,https://github.com/swift-nav/libsbp/pull/1082#issuecomment-948957245,"Several packages in the yaml spec are marked as unstable. This means that all the messages defined in that package are output in a ""draft message"" section at the end of the pdf doc.
Mark all packages as stable since anything that is out there in the wild can't be changed. The only effect of this is that the pdf doc needs updating but there are no code changes anywhere.","Ok so I've tried to do everything requested. file_io and linux are now marked as unstable, and file_io, linux, ndb, flash are all marked as non-public. I've also made a small change to the pdf generator so that it doesn't output a Draft Message Definition section when there aren't any entries in it.
New page of contents looks like this

:",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1082,2021-10-15T21:19:16Z,,2022-05-25T08:12:38Z,OPEN,False,22,11,13,https://github.com/woodfell,Mark all packages as stable,4,[],https://github.com/swift-nav/libsbp/pull/1082,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/1082#issuecomment-949757432,"Several packages in the yaml spec are marked as unstable. This means that all the messages defined in that package are output in a ""draft message"" section at the end of the pdf doc.
Mark all packages as stable since anything that is out there in the wild can't be changed. The only effect of this is that the pdf doc needs updating but there are no code changes anywhere.","I think we need to put file_io and linux back the way they were, we should not hide them.  Customers are using file_io and it provides value but it should be marked with something to indicate it's support status and/or ""maturity level"".  I don't know about ndb... the flash module we can probably drop because it's Piksi v2.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1082,2021-10-15T21:19:16Z,,2022-05-25T08:12:38Z,OPEN,False,22,11,13,https://github.com/woodfell,Mark all packages as stable,4,[],https://github.com/swift-nav/libsbp/pull/1082,https://github.com/dgburr,6,https://github.com/swift-nav/libsbp/pull/1082#issuecomment-949759021,"Several packages in the yaml spec are marked as unstable. This means that all the messages defined in that package are output in a ""draft message"" section at the end of the pdf doc.
Mark all packages as stable since anything that is out there in the wild can't be changed. The only effect of this is that the pdf doc needs updating but there are no code changes anywhere.","""Officially released"" meaning we started working on console support for the features, but the projects where canceled before console support was completed... for sbp.file_io we support it on a limited basis via piksi_tools. There is no client software that processes sbp.linux messages.

Woodpecker uses sbp.linux messages for plotting profiling information from the STEP, see https://github.com/swift-nav/ats/blob/master/drive-exe/swift/postproc/sbp_parser.py#L724",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1082,2021-10-15T21:19:16Z,,2022-05-25T08:12:38Z,OPEN,False,22,11,13,https://github.com/woodfell,Mark all packages as stable,4,[],https://github.com/swift-nav/libsbp/pull/1082,https://github.com/dgburr,7,https://github.com/swift-nav/libsbp/pull/1082#issuecomment-949761224,"Several packages in the yaml spec are marked as unstable. This means that all the messages defined in that package are output in a ""draft message"" section at the end of the pdf doc.
Mark all packages as stable since anything that is out there in the wild can't be changed. The only effect of this is that the pdf doc needs updating but there are no code changes anywhere.",What about marking MSG_PROTECTION_LEVEL as public (per https://swift-nav.atlassian.net/browse/DOC-27)?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1083,2021-10-20T19:45:52Z,2021-11-09T05:56:58Z,2021-11-09T05:56:59Z,MERGED,True,2003,1780,19,https://github.com/woodfell,[ESD-2242] Fix integer promotion issues in generated macros,2,[],https://github.com/swift-nav/libsbp/pull/1083,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1083,The generated bitfield macros contains lots of integer promotion when operating on smaller data types. These can cause compiler warnings in consumers of libsbp when compiled with -Wconversion,The generated bitfield macros contains lots of integer promotion when operating on smaller data types. These can cause compiler warnings in consumers of libsbp when compiled with -Wconversion,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1084,2021-10-21T23:51:38Z,2021-10-22T17:32:22Z,2021-10-22T17:32:23Z,MERGED,True,101,65,1,https://github.com/notoriaga,rust: support Result<Sbp> in with_rover_time,2,[],https://github.com/swift-nav/libsbp/pull/1084,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1084,Previously you had to convert the iterator returned by iter_messages from Iterator<Result<Sbp>> to Iterator<Sbp> before calling with_rover_time. Now it works on both kinds of iterators,Previously you had to convert the iterator returned by iter_messages from Iterator<Result<Sbp>> to Iterator<Sbp> before calling with_rover_time. Now it works on both kinds of iterators,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1085,2021-11-02T20:18:23Z,2021-11-04T00:05:48Z,2021-11-04T00:05:48Z,MERGED,True,2281,19,4,https://github.com/woodfell,[ESD-2250] Encode/decode functions in cpp message traits,2,[],https://github.com/swift-nav/libsbp/pull/1085,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1085,"While it was originally thought that there wouldn't be a need to deal with encoded messages using the V4 API the ephemeris swiftlet work introduced a need with how it dumps the see after startup.
Add wrappers for the message type specific encode/decode/length functions to c++ message traits","While it was originally thought that there wouldn't be a need to deal with encoded messages using the V4 API the ephemeris swiftlet work introduced a need with how it dumps the see after startup.
Add wrappers for the message type specific encode/decode/length functions to c++ message traits",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1086,2021-11-10T22:44:24Z,2021-11-11T20:35:30Z,2021-11-11T20:35:31Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - [ESD-2257] Move archive util to common cmake repo (#105),1,[],https://github.com/swift-nav/libsbp/pull/1086,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1086,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  1e6a89d6  ->  4372563d

4372563d  :  ESD-2257 Move archive util to common cmake repo (#105)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/8613/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  1e6a89d6  ->  4372563d

4372563d  :  ESD-2257 Move archive util to common cmake repo (#105)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/8613/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1087,2021-11-13T00:50:31Z,2021-11-13T01:09:20Z,2021-11-13T01:09:20Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Added variable to disable RTTI in RapidCheck (#106),1,[],https://github.com/swift-nav/libsbp/pull/1087,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1087,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  4372563d  ->  600ec2a8

600ec2a8  :  Added variable to disable RTTI in RapidCheck (#106)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/8644/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  4372563d  ->  600ec2a8

600ec2a8  :  Added variable to disable RTTI in RapidCheck (#106)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/8644/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1088,2021-12-07T03:03:54Z,2021-12-10T03:53:54Z,2021-12-10T03:53:54Z,MERGED,True,3732,10,44,https://github.com/lloydmaza,Create new COG/SOG message,10,[],https://github.com/swift-nav/libsbp/pull/1088,https://github.com/lloydmaza,1,https://github.com/swift-nav/libsbp/pull/1088,"Design Notes
This PR sets up an SBP message type for a new velocity representation consisting of the course over ground and speed over ground. This is effectively a polar coordinate parameterization of the horizontal NED velocity vector.
The original proposal for this message type can be found here: https://swift-nav.atlassian.net/wiki/spaces/~643341576/pages/2096496752/COG+SOG+SBP+Message+Proposal
Remaining Work

 Resolve failing benchmark CI node
 (Maybe) add unit tests for new message type to retain code coverage","Design Notes
This PR sets up an SBP message type for a new velocity representation consisting of the course over ground and speed over ground. This is effectively a polar coordinate parameterization of the horizontal NED velocity vector.
The original proposal for this message type can be found here: https://swift-nav.atlassian.net/wiki/spaces/~643341576/pages/2096496752/COG+SOG+SBP+Message+Proposal
Remaining Work

 Resolve failing benchmark CI node
 (Maybe) add unit tests for new message type to retain code coverage",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1089,2021-12-09T14:19:19Z,2021-12-10T17:33:36Z,2021-12-10T17:33:37Z,MERGED,True,1,1,1,https://github.com/jtec,Typo fix in Readme.md,1,[],https://github.com/swift-nav/libsbp/pull/1089,https://github.com/jtec,1,https://github.com/swift-nav/libsbp/pull/1089,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1090,2021-12-10T13:28:48Z,2021-12-10T22:01:32Z,2021-12-10T22:01:36Z,CLOSED,False,194600,68939,1285,https://github.com/reimerix,Add MSG_VEL_COG to libsbp v3.4,176,[],https://github.com/swift-nav/libsbp/pull/1090,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/1090,"Add specs
Bump number of messages
Generated files
Generated files","Add specs
Bump number of messages
Generated files
Generated files",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1091,2021-12-11T04:50:04Z,2021-12-11T05:41:25Z,2021-12-11T05:41:25Z,MERGED,True,14,14,6,https://github.com/silverjam,fix bit masks for new COG message,3,[],https://github.com/swift-nav/libsbp/pull/1091,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1091,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1092,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1006994162,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


I think this behavior is fine given the issue with backwards compatibility with regards to panicking, we don't want to break old code because a new bitfield value was introduced.  The semantics of bitfields varies too much to have a good default value.

Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.

The current set of derives seems fine, Hash might be useful though?

Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.

Implementing TryFrom sounds like a good idea to me.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1007060607,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","Added Hash + TryFrom. Also tried moving each message into its own mod, definitely makes some of the names nicer but adds about 20k lines to the diff üòÖ",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/jbangelo,4,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1007735506,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","It's kind of unfortunate that we have to return Option. I'm foreseeing this being unwrapped everywhere.

Two other options spring to mind:

Return a Result<MsgBaselineEcefFixMode, UnknownBitfield<u8>>, this would allow reporting an unknown value to the calling code.
Don't use custom discriminants in the bitfield enums and include a Unknown(u8) variant in each one to wrap any unknown values.

Both would allow conserving and reporting any unknown values from parsed messages. I don't think the programs would be able to do much with these values, but it would be useful information to include in an error log message to indicate the version of libsbp might need to be updated. The first option kind of makes the unwrapping problem you foresee worse.
I think I prefer the second one since it doesn't treat new/unknown bitfield values as an error case. We could still provide a impl From<MsgBaselineEcefFixMode> for u8 for the bitfields and it could conserve unknown values which we are throwing out with the current approach. I think I'd keep the impl TryFrom<u8> for MsgBaselineEcefFixMode as fallible, if the unknown value is too large to fit into the bit field we'd probably want to signal a failure instead of implicitly masking off the unsupported bits.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/notoriaga,5,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1008457449,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","I've been going thru icbins (which does a like of bitfield stuff) and seeing what it looks like with these changes. A pretty common operation I've noticed is checking that a bitfield value is not equal to one of it's variants (typically an Invalid or Unknown state). With the current setup that looks like
if msg.fix_mode() != Some(FixMode::Invalid) {
   ...
}
But if the unknown type is inside the enum you'd have to do something like
if !matches!(msg.fix_mode(), FixMode::Invalid | FixMode::UnknownBitfield(_)) {
   ...
}
Not a big problem, just an observation that it's easier to inspect one variant of a enum wrapped in a type, than it is to check two enum variants.
Additionally, in practice it's kind of nice to have the Unknown state as a separate type because you have more type-level info
if let Some(fix_mode) = msg.fix_mode() {
   // known by the compiler we have a valid fix mode
}
vs.
let fix_mode =  msg.fix_mode();
if !matches!(fix_mode, FixMode::UnknownBitfield(_)) {
   // only known by the programmer
}
That being said, I do really like the idea of preserving the unknown value, so maybe option 1 is a good choice? I think we could even simplify it a bit and do Result<FixMode, u8>. This would also hint that an unknown value is not necessarily an error. There is some precedence on not using a type that actually impls Error in Result, OnceCell::set comes to mind.",True,{'THUMBS_UP': ['https://github.com/jbangelo']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/notoriaga,6,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1008523097,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","Now that I think about it, maybe the TryFrom<Sbp> impls for each message should have type Error = Sbp/have TryFromSbpError store the message.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/jbangelo,7,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1016003794,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","Your justification for not including an unknown variant in the enums makes sense. I think it would still be good to include a documentation comment for the getter functions explaining that the ""error"" variant of the Result contains an unknown flag value. Is it reasonable/easy to include doc comments in the generated code?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/notoriaga,8,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1016790698,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","Your justification for not including an unknown variant in the enums makes sense. I think it would still be good to include a documentation comment for the getter functions explaining that the ""error"" variant of the Result contains an unknown flag value. Is it reasonable/easy to include doc comments in the generated code?

Yeah we could do something like
/// Gets the [FixMode][FixMode] stored in the `flags` field.
///
/// Returns `Ok` if `flags` holds a known `FixMode`. Otherwise the value of the bitfield is returned
/// in the `Err` variant. This may be because of a malformed message, or because new variants of `FixMode`
/// were added (in which case you should update this library).
pub fn fix_mode(&self) -> Result<FixMode, u8> {
    get_bit_range!(self.flags, u8, u8, 2, 0).try_into()
}
Probably a better/shorter way to word this, but in general something like that would be easy to set up",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/notoriaga,9,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1017809079,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","Another quirk I noticed in the spec is that few message have single-bit fields that don't have values defined
MSG_NETWORK_STATE_RESP bit 15 of flags (iff_multicast_supports_multicast)
MSG_NETWORK_STATE_RESP bit 14 of flags (iff_link2_per_link_layer_defined_bit)
MSG_NETWORK_STATE_RESP bit 13 of flags (iff_link1_per_link_layer_defined_bit)
MSG_NETWORK_STATE_RESP bit 12 of flags (iff_link0_per_link_layer_defined_bit)
MSG_NETWORK_STATE_RESP bit 11 of flags (iff_simplex_cant_hear_own_transmissions)
MSG_NETWORK_STATE_RESP bit 10 of flags (iff_oactive_transmission_in_progress)
MSG_NETWORK_STATE_RESP bit 9 of flags (iff_allmulti_receive_all_multicast_packets)
MSG_NETWORK_STATE_RESP bit 8 of flags (iff_promisc_receive_all_packets)
MSG_NETWORK_STATE_RESP bit 7 of flags (iff_noarp_no_address_resolution_protocol)
MSG_NETWORK_STATE_RESP bit 6 of flags (iff_running_resources_allocated)
MSG_NETWORK_STATE_RESP bit 5 of flags (iff_notrailers_avoid_use_of_trailers)
MSG_NETWORK_STATE_RESP bit 4 of flags (iff_pointopoint_interface_is_pointtopoint_link)
MSG_NETWORK_STATE_RESP bit 3 of flags (iff_loopback_is_a_loopback_net)
MSG_NETWORK_STATE_RESP bit 2 of flags (iff_debug_broadcast_address_valid)
MSG_NETWORK_STATE_RESP bit 1 of flags (iff_broadcast_broadcast_address_valid)
MSG_NETWORK_STATE_RESP bit 0 of flags (iff_up_interface_is_up)
MSG_DOPS bit 7 of flags (raim_repair_flag)
MSG_PROTECTION_LEVEL bit 21 of flags (velocity_valid)
MSG_PROTECTION_LEVEL bit 22 of flags (attitude_valid)
MSG_PROTECTION_LEVEL bit 23 of flags (safe_state_hpl)
MSG_PROTECTION_LEVEL bit 24 of flags (safe_state_vpl)
MSG_PROTECTION_LEVEL bit 25 of flags (safe_state_atpl)
MSG_PROTECTION_LEVEL bit 26 of flags (safe_state_ctpl)
MSG_PROTECTION_LEVEL bit 27 of flags (safe_state_hvpl)
MSG_PROTECTION_LEVEL bit 28 of flags (safe_state_vvpl)
MSG_PROTECTION_LEVEL bit 29 of flags (safe_state_hopl)
MSG_PROTECTION_LEVEL bit 30 of flags (safe_state_popl)
MSG_PROTECTION_LEVEL bit 31 of flags (safe_state_ropl)

Right now this will generate
/// Sets the `safe_state_hopl` bitrange of `flags`.
pub fn set_safe_state_hopl(&mut self, safe_state_hopl: u8) {
    set_bit_range!(&mut self.flags, safe_state_hopl, u32, u8, 29, 29);
}
For single-bit fields we could switch it to accept/return bool. But I think the better solution would be to add the missing values so that we can generate types for these bitfields so people don't have to think through what true/false means in each case. Will probably need some input on what each of these fields mean though to do this properly.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/notoriaga,10,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1017932032,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.","Okay so an example of each case -
If the spec has values generate a type and use that. Unknown values are smuggled in the Err
/// Gets the [FixMode][self::FixMode] stored in the `flags` bitfield.
///
/// Returns `Ok` if the bitrange contains a known `FixMode` variant.
/// Otherwise the value of the bitrange is returned as an `Err(u8)`. This may be because of a malformed message,
/// or because new variants of `FixMode` were added.
pub fn fix_mode(&self) -> Result<FixMode, u8> {
    get_bit_range!(self.flags, u8, u8, 2, 0).try_into()
}

/// Sets the bitrange corresponding to the [FixMode][FixMode] of the `flags` bitfield.
pub fn set_fix_mode(&mut self, fix_mode: FixMode) {
    set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum FixMode {
    /// Invalid
    Invalid = 0,

    /// Single Point Position (SPP)
    SinglePointPosition = 1,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,

    /// Dead Reckoning
    DeadReckoning = 5,

    /// SBAS Position
    SbasPosition = 6,
}

impl std::fmt::Display for FixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            FixMode::Invalid => f.write_str(""Invalid""),
            FixMode::SinglePointPosition => f.write_str(""Single Point Position (SPP)""),
            FixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            FixMode::FloatRtk => f.write_str(""Float RTK""),
            FixMode::FixedRtk => f.write_str(""Fixed RTK""),
            FixMode::DeadReckoning => f.write_str(""Dead Reckoning""),
            FixMode::SbasPosition => f.write_str(""SBAS Position""),
        }
    }
}

impl TryFrom<u8> for FixMode {
    type Error = u8;
    fn try_from(i: u8) -> Result<Self, Self::Error> {
        match i {
            0 => Ok(FixMode::Invalid),
            1 => Ok(FixMode::SinglePointPosition),
            2 => Ok(FixMode::DifferentialGnss),
            3 => Ok(FixMode::FloatRtk),
            4 => Ok(FixMode::FixedRtk),
            5 => Ok(FixMode::DeadReckoning),
            6 => Ok(FixMode::SbasPosition),
            i => Err(i),
        }
    }
}
If the spec has no values and the bitfield's length > 1
/// Gets the `time_since_reference_epoch_in_milliseconds` stored in `tow`.
pub fn time_since_reference_epoch_in_milliseconds(&self) -> u32 {
    get_bit_range!(self.tow, u32, u32, 29, 0)
}

/// Sets the `time_since_reference_epoch_in_milliseconds` bitrange of `tow`.
pub fn set_time_since_reference_epoch_in_milliseconds(
    &mut self,
    time_since_reference_epoch_in_milliseconds: u32,
) {
    set_bit_range!(
        &mut self.tow,
        time_since_reference_epoch_in_milliseconds,
        u32,
        u32,
        29,
        0
    );
}
Should the setter here error is the value is greater than the bitrange would allow?
Finally if the bitfield has length one we use bools
/// Gets the `velocity_valid` flag.
pub fn velocity_valid(&self) -> bool {
    ((self.flags >> 21) & 1) == 1
}

/// Sets the `velocity_valid` flag.
pub fn set_velocity_valid(&mut self, velocity_valid: bool) {
    self.flags ^= (!(velocity_valid as u32)) & (1 << 21)
}
still need to make sure everything works correctly bits make my head hurt",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1092,2021-12-27T21:52:54Z,2022-02-04T23:25:37Z,2022-02-04T23:25:38Z,MERGED,True,34984,21723,40,https://github.com/notoriaga,rust: add bitfield types [DEVINFRA-615],13,[],https://github.com/swift-nav/libsbp/pull/1092,https://github.com/notoriaga,11,https://github.com/swift-nav/libsbp/pull/1092#issuecomment-1030276322,"Something that's been missing from the rust client library is convenience functions around bitfields like in the c client. Pretty sure the generated code is not quite right, but looking to solicit some feedback on the approach generally.
For each message with a bitfield this generates

msg.<field_name>() and msg.set_<field_name>(val) functions on the messages with the bitfield.
if the spec includes a set of values for the bitfield a dataless enum is also created

So depending on whether or there is a set of values to work with, the generated code either produces getters/settings that work on integer types
impl MsgStatusReport {
    pub fn sbp_major_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 16, 8)
    }

    pub fn set_sbp_major_protocol_version_number(&mut self, sbp_major_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_major_protocol_version_number,
            u16,
            u8,
            16,
            8
        );
    }

    pub fn sbp_minor_protocol_version_number(&self) -> u8 {
        get_bit_range!(self.sbp_version, u16, u8, 7, 0)
    }

    pub fn set_sbp_minor_protocol_version_number(&mut self, sbp_minor_protocol_version_number: u8) {
        set_bit_range!(
            &mut self.sbp_version,
            sbp_minor_protocol_version_number,
            u16,
            u8,
            7,
            0
        );
    }
}
Or ones that work with the newly defined enum
impl MsgBaselineEcef {
    pub fn fix_mode(&self) -> Option<MsgBaselineEcefFixMode> {
        match get_bit_range!(self.flags, u8, u8, 2, 0) {
            0 => Some(MsgBaselineEcefFixMode::Invalid),
            2 => Some(MsgBaselineEcefFixMode::DifferentialGnss),
            3 => Some(MsgBaselineEcefFixMode::FloatRtk),
            4 => Some(MsgBaselineEcefFixMode::FixedRtk),
            _ => None,
        }
    }

    pub fn set_fix_mode(&mut self, fix_mode: MsgBaselineEcefFixMode) {
        set_bit_range!(&mut self.flags, fix_mode, u8, u8, 2, 0);
    }
}

/// Fix mode
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum MsgBaselineEcefFixMode {
    /// Invalid
    Invalid = 0,

    /// Differential GNSS (DGNSS)
    DifferentialGnss = 2,

    /// Float RTK
    FloatRtk = 3,

    /// Fixed RTK
    FixedRtk = 4,
}

impl std::fmt::Display for MsgBaselineEcefFixMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MsgBaselineEcefFixMode::Invalid => f.write_str(""Invalid""),
            MsgBaselineEcefFixMode::DifferentialGnss => f.write_str(""Differential GNSS (DGNSS)""),
            MsgBaselineEcefFixMode::FloatRtk => f.write_str(""Float RTK""),
            MsgBaselineEcefFixMode::FixedRtk => f.write_str(""Fixed RTK""),
        }
    }
}
With that here are some open questions I'm still thinking about

It's kind of unfortunate that we have to return Option<MsgBaselineEcefFixMode>. I'm foreseeing this being unwrapped everywhere. Alternatives could be

panic instead of returning None. Convenient but less robust. I'm not sure if the spec allows this, but if for example a new fix mode is added, older clients getting a message with that fix mode would panic, whereas right now they'd just return None.
impl Default for these new types, and replace None with Default::default(). This makes sense for types that have a good candidate for a default value like Invalid, but not sure all the bitfields have a sensible default
Leaving it as is, the most convenient/robust way of using this api would probably be matching on the return value (including the option) so like if msg.fix_mode() == Some(MsgBaselineEcefFixMode::FloatRtk) { ... }, which isn't so bad I guess


Currently the new types have derived impls of Debug, Clone, Copy, PartialEq, Eq and an impl of Display that is the desc field for the value. We can also impl PartialOrd, Ord, and Hash if those would be useful (not sure Ord makes sense semantically for all the different types). Also not sure if the Display is worth keeping. The descriptions aren't super descriptive, but maybe still helpful.
Some of the varients of the enums start with a number, which isn't a valid rust identifier (even if made a raw identifier). So I just prepended a _ because that was the easiest thing to do
Currently you can convert from the new enum types to an int by casting, but there is no way to go from int -> enum without matching. We could also provide something like a TryFrom impl from the integer types to the enums to make that more convenient.
Adding a bunch of little methods to the messages reminds me that we should explore adding #[inline] throughout the library at some point. By default non-generic functions are not inlined across crates (my understanding of inlining in rust is basically 100% based on this post). We tend to use LTO for release builds which negates that issue but still might be worth taking a look at.",Added some examples to the docs,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1093,2022-01-07T06:40:52Z,2022-01-07T17:57:12Z,2022-01-07T17:57:12Z,MERGED,True,469,404,27,https://github.com/lloydmaza,Improvements to MSG_VEL_COG [TES-129],6,[],https://github.com/swift-nav/libsbp/pull/1093,https://github.com/lloydmaza,1,https://github.com/swift-nav/libsbp/pull/1093,"Context: the MSG_VEL_COG spec was defined at the end of 2021 to support a customer need for non-fusion heading output. The message was defined quickly and without rigorous review, and a handful of issues were identified only after it was released. Upon further review, it was determined that we should update the message to fix these issues rather than define a new message altogether.
Its use has been limited to a single release branch (Starling v1.2.20), meaning the message has only been used by one external stakeholder. Deprecation is not imperative in this case to maintain usability, so the risk of this update appears relatively small and is favored as a quicker and less cumbersome solution.
Changes made to the message definition:

flags field increased from 8 bits to 16
""Velocity mode"" and ""INS mode"" flags increased from 1 bit wide to 2 (as is standard with other velocity messages)
""Type of reported TOW"" flag added (as is standard with other velocity messages)
""COG frozen"" flag added to indicate when COG is frozen
Wording changed on vel_d field to v_up

All other files changed as a result of updated bindings or updated test definitions.
Note: I had some trouble updating the test definitions, but eventually worked something out. My ad hoc procedure is written out here.","Context: the MSG_VEL_COG spec was defined at the end of 2021 to support a customer need for non-fusion heading output. The message was defined quickly and without rigorous review, and a handful of issues were identified only after it was released. Upon further review, it was determined that we should update the message to fix these issues rather than define a new message altogether.
Its use has been limited to a single release branch (Starling v1.2.20), meaning the message has only been used by one external stakeholder. Deprecation is not imperative in this case to maintain usability, so the risk of this update appears relatively small and is favored as a quicker and less cumbersome solution.
Changes made to the message definition:

flags field increased from 8 bits to 16
""Velocity mode"" and ""INS mode"" flags increased from 1 bit wide to 2 (as is standard with other velocity messages)
""Type of reported TOW"" flag added (as is standard with other velocity messages)
""COG frozen"" flag added to indicate when COG is frozen
Wording changed on vel_d field to v_up

All other files changed as a result of updated bindings or updated test definitions.
Note: I had some trouble updating the test definitions, but eventually worked something out. My ad hoc procedure is written out here.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1093,2022-01-07T06:40:52Z,2022-01-07T17:57:12Z,2022-01-07T17:57:12Z,MERGED,True,469,404,27,https://github.com/lloydmaza,Improvements to MSG_VEL_COG [TES-129],6,[],https://github.com/swift-nav/libsbp/pull/1093,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1093#issuecomment-1007569025,"Context: the MSG_VEL_COG spec was defined at the end of 2021 to support a customer need for non-fusion heading output. The message was defined quickly and without rigorous review, and a handful of issues were identified only after it was released. Upon further review, it was determined that we should update the message to fix these issues rather than define a new message altogether.
Its use has been limited to a single release branch (Starling v1.2.20), meaning the message has only been used by one external stakeholder. Deprecation is not imperative in this case to maintain usability, so the risk of this update appears relatively small and is favored as a quicker and less cumbersome solution.
Changes made to the message definition:

flags field increased from 8 bits to 16
""Velocity mode"" and ""INS mode"" flags increased from 1 bit wide to 2 (as is standard with other velocity messages)
""Type of reported TOW"" flag added (as is standard with other velocity messages)
""COG frozen"" flag added to indicate when COG is frozen
Wording changed on vel_d field to v_up

All other files changed as a result of updated bindings or updated test definitions.
Note: I had some trouble updating the test definitions, but eventually worked something out. My ad hoc procedure is written out here.","Can we write up the rational for mutation of the existing message rather than depreciation of the existing message and the creation of a new one?  We've technically released the existing message, so we need to be careful here.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1093,2022-01-07T06:40:52Z,2022-01-07T17:57:12Z,2022-01-07T17:57:12Z,MERGED,True,469,404,27,https://github.com/lloydmaza,Improvements to MSG_VEL_COG [TES-129],6,[],https://github.com/swift-nav/libsbp/pull/1093,https://github.com/lloydmaza,3,https://github.com/swift-nav/libsbp/pull/1093#issuecomment-1007602408,"Context: the MSG_VEL_COG spec was defined at the end of 2021 to support a customer need for non-fusion heading output. The message was defined quickly and without rigorous review, and a handful of issues were identified only after it was released. Upon further review, it was determined that we should update the message to fix these issues rather than define a new message altogether.
Its use has been limited to a single release branch (Starling v1.2.20), meaning the message has only been used by one external stakeholder. Deprecation is not imperative in this case to maintain usability, so the risk of this update appears relatively small and is favored as a quicker and less cumbersome solution.
Changes made to the message definition:

flags field increased from 8 bits to 16
""Velocity mode"" and ""INS mode"" flags increased from 1 bit wide to 2 (as is standard with other velocity messages)
""Type of reported TOW"" flag added (as is standard with other velocity messages)
""COG frozen"" flag added to indicate when COG is frozen
Wording changed on vel_d field to v_up

All other files changed as a result of updated bindings or updated test definitions.
Note: I had some trouble updating the test definitions, but eventually worked something out. My ad hoc procedure is written out here.","@silverjam great point, I've updated the description to include the rationalization for this approach. Let me know if you have any disagreements with the reasoning laid out - we've already encountered issues due to rushed implementation, so I'd like to avoid that going forward if we're introducing more risk than I've anticipated.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1094,2022-01-07T18:29:43Z,2022-01-07T19:17:02Z,2022-01-07T19:17:02Z,MERGED,True,385,321,26,https://github.com/lloydmaza,Improvements to MSG_VEL_COG [TES-129],2,[],https://github.com/swift-nav/libsbp/pull/1094,https://github.com/lloydmaza,1,https://github.com/swift-nav/libsbp/pull/1094,v3.4 version of this master PR: #1093,v3.4 version of this master PR: #1093,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1095,2022-01-27T11:39:58Z,2022-01-28T11:39:34Z,2022-01-28T11:39:35Z,MERGED,True,2179,35,41,https://github.com/reimerix,Add new update status message [ASF-128],7,[],https://github.com/swift-nav/libsbp/pull/1095,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/1095,This pull requests adds the message definition and generated bindings for a new diagnostic message.,This pull requests adds the message definition and generated bindings for a new diagnostic message.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1096,2022-02-04T04:33:12Z,2022-02-22T19:09:27Z,2022-02-22T19:09:27Z,MERGED,True,6,6,1,https://github.com/apps/dependabot,build(deps): bump simple-get from 3.1.0 to 3.1.1,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/1096,https://github.com/apps/dependabot,1,https://github.com/swift-nav/libsbp/pull/1096,"Bumps simple-get from 3.1.0 to 3.1.1.

Commits

496166d 3.1.1
6eb82c0 Bug fix: Thirdparty cookie leak
See full diff in compare view



Maintainer changes
This version was pushed to npm by linusu, a new releaser for simple-get since your current version.



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps simple-get from 3.1.0 to 3.1.1.

Commits

496166d 3.1.1
6eb82c0 Bug fix: Thirdparty cookie leak
See full diff in compare view



Maintainer changes
This version was pushed to npm by linusu, a new releaser for simple-get since your current version.



Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1097,2022-02-11T06:38:52Z,2022-02-22T19:11:17Z,2022-02-22T19:11:17Z,MERGED,True,18,112,1,https://github.com/apps/dependabot,build(deps): bump ajv from 6.6.1 to 6.12.6,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/1097,https://github.com/apps/dependabot,1,https://github.com/swift-nav/libsbp/pull/1097,"Bumps ajv from 6.6.1 to 6.12.6.

Release notes
Sourced from ajv's releases.

v6.12.6
Fix performance issue of ""url"" format.
v6.12.5
Fix uri scheme validation (@‚ÄãChALkeR).
Fix boolean schemas with strictKeywords option (#1270)
v6.12.4
Fix: coercion of one-item arrays to scalar that should fail validation (failing example).
v6.12.3
Pass schema object to processCode function
Option for strictNumbers (@‚Äãissacgerges, #1128)
Fixed vulnerability related to untrusted schemas (CVE-2020-15366)
v6.12.2
Removed post-install script
v6.12.1
Docs and dependency updates
v6.12.0
Improved hostname validation (@‚Äãsambauers, #1143)
Option keywords to add custom keywords (@‚Äãfranciscomorais, #1137)
Types fixes (@‚Äãboenrobot, @‚ÄãMattiAstedrone)
Docs:

error logging example (@‚ÄãRadiationSickness)
TypeScript usage notes (@‚Äãthetric)

v6.11.0
Time formats support two digit and colon-less variants of timezone offset (#1061 , @‚Äãcjpillsbury)
Docs: RegExp related security considerations
Tests: Disabled failing typescript test
v6.10.2
Fix: the unknown keywords were ignored with the option strictKeywords: true (instead of failing compilation) in some sub-schemas (e.g. anyOf), when the sub-schema didn't have known keywords.
v6.10.1
Fix types
Fix addSchema (#1001)
Update dependencies
v6.10.0
Option strictDefaults to report ignored defaults (#957, @‚Äãnot-an-aardvark)
Option strictKeywords to report unknown keywords (#781)
v6.9.0
OpenAPI keyword nullable can be any boolean (and not only true).
Custom keyword definition changes:

dependencies option in  to require the presence of keywords in the same schema.



... (truncated)


Commits

fe59143 6.12.6
d580d3e Merge pull request #1298 from ajv-validator/fix-url
fd36389 fix: regular expression for ""url"" format
490e34c docs: link to v7-beta branch
9cd93a1 docs: note about v7 in readme
877d286 Merge pull request #1262 from b4h0-c4t/refactor-opt-object-type
f1c8e45 6.12.5
764035e Merge branch 'ChALkeR-chalker/fix-comma'
3798160 Merge branch 'chalker/fix-comma' of git://github.com/ChALkeR/ajv into ChALkeR...
a3c7eba Merge branch 'refactor-opt-object-type' of github.com:b4h0-c4t/ajv into refac...
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps ajv from 6.6.1 to 6.12.6.

Release notes
Sourced from ajv's releases.

v6.12.6
Fix performance issue of ""url"" format.
v6.12.5
Fix uri scheme validation (@‚ÄãChALkeR).
Fix boolean schemas with strictKeywords option (#1270)
v6.12.4
Fix: coercion of one-item arrays to scalar that should fail validation (failing example).
v6.12.3
Pass schema object to processCode function
Option for strictNumbers (@‚Äãissacgerges, #1128)
Fixed vulnerability related to untrusted schemas (CVE-2020-15366)
v6.12.2
Removed post-install script
v6.12.1
Docs and dependency updates
v6.12.0
Improved hostname validation (@‚Äãsambauers, #1143)
Option keywords to add custom keywords (@‚Äãfranciscomorais, #1137)
Types fixes (@‚Äãboenrobot, @‚ÄãMattiAstedrone)
Docs:

error logging example (@‚ÄãRadiationSickness)
TypeScript usage notes (@‚Äãthetric)

v6.11.0
Time formats support two digit and colon-less variants of timezone offset (#1061 , @‚Äãcjpillsbury)
Docs: RegExp related security considerations
Tests: Disabled failing typescript test
v6.10.2
Fix: the unknown keywords were ignored with the option strictKeywords: true (instead of failing compilation) in some sub-schemas (e.g. anyOf), when the sub-schema didn't have known keywords.
v6.10.1
Fix types
Fix addSchema (#1001)
Update dependencies
v6.10.0
Option strictDefaults to report ignored defaults (#957, @‚Äãnot-an-aardvark)
Option strictKeywords to report unknown keywords (#781)
v6.9.0
OpenAPI keyword nullable can be any boolean (and not only true).
Custom keyword definition changes:

dependencies option in  to require the presence of keywords in the same schema.



... (truncated)


Commits

fe59143 6.12.6
d580d3e Merge pull request #1298 from ajv-validator/fix-url
fd36389 fix: regular expression for ""url"" format
490e34c docs: link to v7-beta branch
9cd93a1 docs: note about v7 in readme
877d286 Merge pull request #1262 from b4h0-c4t/refactor-opt-object-type
f1c8e45 6.12.5
764035e Merge branch 'ChALkeR-chalker/fix-comma'
3798160 Merge branch 'chalker/fix-comma' of git://github.com/ChALkeR/ajv into ChALkeR...
a3c7eba Merge branch 'refactor-opt-object-type' of github.com:b4h0-c4t/ajv into refac...
Additional commits viewable in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1098,2022-02-22T13:29:45Z,2022-03-01T12:12:24Z,2022-03-01T12:12:24Z,MERGED,True,31,10,6,https://github.com/fpezzinosn,Make integer to enum conversion explicit [SAR-261],5,[],https://github.com/swift-nav/libsbp/pull/1098,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1098,"The signature of the function sbp_register_callback_generic defined here expects an sbp_msg_type_t enum as a second parameter. The same happens with the third parameter of process_frame defined here.
Without this explicit conversion, the static analyzer thinks there are two different functions with the same name.","The signature of the function sbp_register_callback_generic defined here expects an sbp_msg_type_t enum as a second parameter. The same happens with the third parameter of process_frame defined here.
Without this explicit conversion, the static analyzer thinks there are two different functions with the same name.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1099,2022-03-02T14:33:16Z,2022-04-05T00:41:07Z,2022-04-05T00:41:08Z,CLOSED,False,2567,2045,21,https://github.com/reimerix,Fix bitfield C macros,5,[],https://github.com/swift-nav/libsbp/pull/1099,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/1099,This PR fixes up the bitfield setting macros. The previous definition resulted in unexpected results because the bitfield was not reset before bitwise-or-ing the new value.,This PR fixes up the bitfield setting macros. The previous definition resulted in unexpected results because the bitfield was not reset before bitwise-or-ing the new value.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1099,2022-03-02T14:33:16Z,2022-04-05T00:41:07Z,2022-04-05T00:41:08Z,CLOSED,False,2567,2045,21,https://github.com/reimerix,Fix bitfield C macros,5,[],https://github.com/swift-nav/libsbp/pull/1099,https://github.com/notoriaga,2,https://github.com/swift-nav/libsbp/pull/1099#issuecomment-1058492773,This PR fixes up the bitfield setting macros. The previous definition resulted in unexpected results because the bitfield was not reset before bitwise-or-ing the new value.,"LGTM. The only thing I would request, if possible, is adding a unit test to validate that you can set and clear the specified flags, would help avoid this issue resurfacing in the future.

It'd be nice if we could add this to the test generation framework. We recently added bitfield helpers to the rust client, so we already have two languages in which it'd be nice to have tests around this stuff. I also recently caught an error where the lsb/msb range was incorrect for a message in the spec. That'd be a bit more work than just adding a few unit tests here, @silverjam what do you think maybe track this on the dev infra board?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1099,2022-03-02T14:33:16Z,2022-04-05T00:41:07Z,2022-04-05T00:41:08Z,CLOSED,False,2567,2045,21,https://github.com/reimerix,Fix bitfield C macros,5,[],https://github.com/swift-nav/libsbp/pull/1099,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1099#issuecomment-1058692379,This PR fixes up the bitfield setting macros. The previous definition resulted in unexpected results because the bitfield was not reset before bitwise-or-ing the new value.,Created https://swift-nav.atlassian.net/browse/DEVINFRA-655 to track (for next sprint),True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1099,2022-03-02T14:33:16Z,2022-04-05T00:41:07Z,2022-04-05T00:41:08Z,CLOSED,False,2567,2045,21,https://github.com/reimerix,Fix bitfield C macros,5,[],https://github.com/swift-nav/libsbp/pull/1099,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/1099#issuecomment-1088154726,This PR fixes up the bitfield setting macros. The previous definition resulted in unexpected results because the bitfield was not reset before bitwise-or-ing the new value.,Closing since this will be covered in a different PR by @isaactorz for https://swift-nav.atlassian.net/browse/DEVINFRA-655,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1100,2022-03-03T22:13:18Z,2022-03-03T22:36:08Z,2022-03-03T23:06:46Z,MERGED,True,25,0,2,https://github.com/silverjam,"introduce code owners, pull request template",3,[],https://github.com/swift-nav/libsbp/pull/1100,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1100,"Description
@swift-nav/devinfra
Add CODEOWNERS and PR template to help catch potential backwards incompatible API changes in the future.
API compatibility
Does this change introduce a API compatibility risk? No
Only introducing new controls for GitHub review process, no code changes.
API compatibility plan
n/a
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-653","Description
@swift-nav/devinfra
Add CODEOWNERS and PR template to help catch potential backwards incompatible API changes in the future.
API compatibility
Does this change introduce a API compatibility risk? No
Only introducing new controls for GitHub review process, no code changes.
API compatibility plan
n/a
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-653",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1101,2022-03-03T22:45:16Z,2022-03-03T22:56:18Z,2022-03-03T22:56:19Z,MERGED,True,2,0,1,https://github.com/silverjam,Update CODEOWNERS,2,[],https://github.com/swift-nav/libsbp/pull/1101,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1101,"Description
@swift-nav/devinfra
Testing PR template and CODEOWNERS file
API compatibility
Does this change introduce a API compatibility risk? No
Testing PR template and CODEOWNERS file
API compatibility plan
n/a
JIRA Reference
n/a","Description
@swift-nav/devinfra
Testing PR template and CODEOWNERS file
API compatibility
Does this change introduce a API compatibility risk? No
Testing PR template and CODEOWNERS file
API compatibility plan
n/a
JIRA Reference
n/a",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/isaactorz,1,https://github.com/swift-nav/libsbp/pull/1102,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/isaactorz,2,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1083446236,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","@swift-nav/devinfra Any other breaking changes we want the script to account for?
If I get some examples then I can add them to the ""test suite"" and implement in the script.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1083487881,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","The name of a field changes (test case 4)


I know this isn't a breaking change, but some stuff does rely on the field names, so I think changing the field names should be done carefully. Maybe we could catch changes to names and not outright fail but emit a warning that you could surface as an ""annotation""  - https://github.community/t/annotations-how-to-create-them/18387",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/isaactorz,4,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1085178386,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","Maybe changes to a ""flags"" field? Like this - #1093
Not the best example because the outer type field changed which this should catch. But I think modifying any of the sub fields, or changing the order of them would also be a breaking change.
Would also be nice to perform some simple validation that the bitfields make sense. For example this pr - #1092. If you look at the diff you can see I changed the system.yaml spec because the lsb/msb range was incorrect. I think we could do some validation that the ranges make sense/fit in the outer type. But this doesn't really fall under ""change validation"" and is more just a general check on the spec so maybe that can be for another time

See tests 9 and 10 for the updated handling of bitfields.
As for validating that the ranges make sense, I'd think that would be something that would be better handled by unit tests than to rely on this script to check.
Edit: Nevermind it shows up under the review section!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/isaactorz,5,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1085255975,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","The name of a field changes (test case 4)


I know this isn't a breaking change, but some stuff does rely on the field names, so I think changing the field names should be done carefully. Maybe we could catch changes to names and not outright fail but emit a warning that you could surface as an ""annotation"" - https://github.community/t/annotations-how-to-create-them/18387

Ok I modified the script to emit a warning when it detects a name change, and surface it via validate.bash but I'm not getting the annotation to show up in the UI.
Edit: It shows up under the Files Changed section, but only if there's at least a file associated with it it looks like.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1086068969,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","Maybe changes to a ""flags"" field? Like this - #1093
Not the best example because the outer type field changed which this should catch. But I think modifying any of the sub fields, or changing the order of them would also be a breaking change.
Would also be nice to perform some simple validation that the bitfields make sense. For example this pr - #1092. If you look at the diff you can see I changed the system.yaml spec because the lsb/msb range was incorrect. I think we could do some validation that the ranges make sense/fit in the outer type. But this doesn't really fall under ""change validation"" and is more just a general check on the spec so maybe that can be for another time

See tests 9 and 10 for the updated handling of bitfields.
As for validating that the ranges make sense, I'd think that would be something that would be better handled by unit tests than to rely on this script to check.

I think this would be a fairly trivial addition, basically just need to check that the ranges aren‚Äôt larger than the type and that they are non overlapping.  How would a unit test catch this error?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/isaactorz,7,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1086129017,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","Maybe changes to a ""flags"" field? Like this - #1093
Not the best example because the outer type field changed which this should catch. But I think modifying any of the sub fields, or changing the order of them would also be a breaking change.
Would also be nice to perform some simple validation that the bitfields make sense. For example this pr - #1092. If you look at the diff you can see I changed the system.yaml spec because the lsb/msb range was incorrect. I think we could do some validation that the ranges make sense/fit in the outer type. But this doesn't really fall under ""change validation"" and is more just a general check on the spec so maybe that can be for another time

See tests 9 and 10 for the updated handling of bitfields.
As for validating that the ranges make sense, I'd think that would be something that would be better handled by unit tests than to rely on this script to check.

I think this would be a fairly trivial addition, basically just need to check that the ranges aren‚Äôt larger than the type and that they are non overlapping. How would a unit test catch this error?

Maybe I'm missing something here but from the example Steve showed, the range in the bitfields was incorrect (8-16). It looks like these ranges control the bitmask macros; in this case SBP_STATUS_REPORT_MAJOR_PROTOCOL_NUMBER_MASK.
I don't think 0x1ff is valid hex. So when we invoke the setter, getter macros, we probably would not get the values we expected. Looking at the test suite, there aren't tests for this particular message; MSG_STATUS_REPORT.
With that being said I agree that it wouldn't be terribly complicated to implement this check so I can do that if we want to.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/isaactorz,8,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1086132064,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","I think we‚Äôre close, couple things:

merge master and update the PR branch, should get a clean sets of checks
I like @notoriaga‚Äôs suggestion to name the test case folders descriptively, can we do that unless there‚Äôs a good reason not to?


Yeah no reason not too I'll update the names. Just wanted to get eyes on all the other changes.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/notoriaga,9,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1086138686,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","I don't think 0x1ff is valid hex. So when we invoke the setter, getter macros, we probably would not get the values we expected. Looking at the test suite, there aren't tests for this particular message; MSG_STATUS_REPORT.

I don't think the auto generated test suite covers the bitfield methods at all, we could probably add that to the test yaml files and update the c/rust test codegen if we wanted to cover that",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/isaactorz,10,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1086292848,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","@silverjam @notoriaga
Good news the bitfield range check works. Bad news it looks like at least one of our messages so far has an invalid range; MSG_STARTUP:cause.
Do we want to try to patch these in this PR or should we open up a separate ticket?
If we want the latter I can modify the script so that it only checks newly added fields .
Regardless I'll find out exactly how many of these degenerate ranges are in our current definitions.
Edit: Looks like it's just the one message MSG_STARTUP that has a bad range on cause and startup_type",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/silverjam,11,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1086324716,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","Good news the bitfield range check works. Bad news it looks like at least one of our messages so far has an invalid range; MSG_STARTUP:cause.
Do we want to try to patch these in this PR or should we open up a separate ticket?

Let's fix in another PR and then update this PR once the fix is merged.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/silverjam,12,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1086325449,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","Good news the bitfield range check works. Bad news it looks like at least one of our messages so far has an invalid range; MSG_STARTUP:cause.
Do we want to try to patch these in this PR or should we open up a separate ticket?

Let's fix in another PR and then update this PR once the fix is merged.

This message is emitted here: https://cs.github.com/swift-nav/piksi_firmware_private/blob/d94cbfb44e354110d716babea59c0fbe8b780f55/src/main/main.c?q=MSG_STARTUP++language%3Ac#L182
But the flags are all set to zero, so the risk around fixing the bitfield ranges should be minimal (or near zero).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/isaactorz,13,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1088138320,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99",@silverjam @notoriaga FYI still working on surfacing the file that has a field name change so that the warning annotation can be associated with it.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/silverjam,14,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1088189652,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","Looking better, need to figure out why this is failing: https://github.com/swift-nav/libsbp/runs/5825726116?check_suite_focus=true -- I'm running make all locally (within the docker container) to see if I can replicate the issue.

Never mind on this, I guess the failure is from a test change for this

@silverjam @notoriaga FYI still working on surfacing the file that has a field name change so that the warning annotation can be associated with it.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1102,2022-03-21T21:39:52Z,2022-04-05T23:05:48Z,2022-04-05T23:05:48Z,MERGED,True,4592,0,30,https://github.com/isaactorz,Add Message API Change Validation [BUILD-99],1,[],https://github.com/swift-nav/libsbp/pull/1102,https://github.com/isaactorz,15,https://github.com/swift-nav/libsbp/pull/1102#issuecomment-1089494232,"Description
Adds mechanisms to automatically catch API breaking changes to the libsbp message spec.
To that end the following files have been added:

scripts/spec_validator.py - A python script that will compare two sets of package definitions, and raise an error if a breaking change is detected.
.github/workflows/validation.yaml - A workflow that compares the current branches package definitions against master
spec/validation/* - A set of test files for the python script
scripts/validation_test_harness.bash - Runs the python script against the test files
.github/workflows/test_validation.yaml - A workflow that runs the bash test script.

The script currently detects the following changes as breaking (explicitly or implicitly):

The type of a field is changed (test case 1)
The ID of a message is changed (test case 2)
The order of fields are changed (test case 3)
The order or values of bitfields are changed (test case 8)

The following changes are ok:

The name of a field changes (test case 4)
New fields are appended (test case 5)
New messages are added (test case 6)
New packages are added (test case 7)


API compatibility
No breaking changes, the message specs are not modified in this commit.
JIRA Reference
https://swift-nav.atlassian.net/browse/BUILD-99","Anything else on this @notoriaga ? I've implemented the warnings annotation for name changes, and it gets associated with the yaml file contains the change.
If not then I think it's ready to be merged.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1103,2022-03-30T02:13:40Z,2022-03-30T02:42:57Z,2022-03-30T02:42:57Z,MERGED,True,6,6,1,https://github.com/apps/dependabot,build(deps): bump minimist from 1.2.5 to 1.2.6,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/1103,https://github.com/apps/dependabot,1,https://github.com/swift-nav/libsbp/pull/1103,"Bumps minimist from 1.2.5 to 1.2.6.

Commits

7efb22a 1.2.6
ef88b93 security notice for additional prototype pollution issue
c2b9819 isConstructorOrProto adapted from PR
bc8ecee test from prototype pollution PR
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.
Dependabot will merge this PR once CI passes on it, as requested by @silverjam.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.","Bumps minimist from 1.2.5 to 1.2.6.

Commits

7efb22a 1.2.6
ef88b93 security notice for additional prototype pollution issue
c2b9819 isConstructorOrProto adapted from PR
bc8ecee test from prototype pollution PR
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.
Dependabot will merge this PR once CI passes on it, as requested by @silverjam.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1103,2022-03-30T02:13:40Z,2022-03-30T02:42:57Z,2022-03-30T02:42:57Z,MERGED,True,6,6,1,https://github.com/apps/dependabot,build(deps): bump minimist from 1.2.5 to 1.2.6,1,['dependencies'],https://github.com/swift-nav/libsbp/pull/1103,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1103#issuecomment-1082560234,"Bumps minimist from 1.2.5 to 1.2.6.

Commits

7efb22a 1.2.6
ef88b93 security notice for additional prototype pollution issue
c2b9819 isConstructorOrProto adapted from PR
bc8ecee test from prototype pollution PR
See full diff in compare view




Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.
Dependabot will merge this PR once CI passes on it, as requested by @silverjam.


Dependabot commands and options

You can trigger Dependabot actions by commenting on this PR:

@dependabot rebase will rebase this PR
@dependabot recreate will recreate this PR, overwriting any edits that have been made to it
@dependabot merge will merge this PR after your CI passes on it
@dependabot squash and merge will squash and merge this PR after your CI passes on it
@dependabot cancel merge will cancel a previously requested merge and block automerging
@dependabot reopen will reopen this PR if it is closed
@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
@dependabot use these labels will set the current labels as the default for future PRs for this repo and language
@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language
@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language
@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the Security Alerts page.",@dependabot merge,True,{'THUMBS_UP': ['https://github.com/dependabot%5Bbot%5D']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1104,2022-03-30T02:47:57Z,2022-03-30T03:22:38Z,2022-03-30T03:22:39Z,MERGED,True,1,1,1,https://github.com/joelynch,"windows-2016 is deprecated, move to windows-2022",1,[],https://github.com/swift-nav/libsbp/pull/1104,https://github.com/joelynch,1,https://github.com/swift-nav/libsbp/pull/1104,"Description
@swift-nav/devinfra
Some builds are failing because of a ""brownout"" where they have disabled the service prior to it being fully disabled https://github.com/swift-nav/libsbp/actions/runs/2062186044.
See: actions/virtual-environments#5238
API compatibility
Does this change introduce a API compatibility risk?
No
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:
N/A
JIRA Reference
N/A","Description
@swift-nav/devinfra
Some builds are failing because of a ""brownout"" where they have disabled the service prior to it being fully disabled https://github.com/swift-nav/libsbp/actions/runs/2062186044.
See: actions/virtual-environments#5238
API compatibility
Does this change introduce a API compatibility risk?
No
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:
N/A
JIRA Reference
N/A",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1105,2022-03-31T21:13:16Z,2022-04-01T15:14:40Z,2022-04-01T15:14:41Z,MERGED,True,10,1,3,https://github.com/lkloh,Add a SbpMsgUnknown type in for the sbp_msg_type_t enum [POS-559],3,[],https://github.com/swift-nav/libsbp/pull/1105,https://github.com/lkloh,1,https://github.com/swift-nav/libsbp/pull/1105,"Description
@swift-nav/devinfra
Add a SbpMsgUnknown type to the sbp_msg_type_t enum for C++ messages so we have a way to initialize messages of undetermined type. This was first suggested here.
API compatibility
Does this change introduce a API compatibility risk?
No, this adds a message enum option but does not subtract or change anything already in use.
JIRA Reference
https://swift-nav.atlassian.net/browse/POS-559","Description
@swift-nav/devinfra
Add a SbpMsgUnknown type to the sbp_msg_type_t enum for C++ messages so we have a way to initialize messages of undetermined type. This was first suggested here.
API compatibility
Does this change introduce a API compatibility risk?
No, this adds a message enum option but does not subtract or change anything already in use.
JIRA Reference
https://swift-nav.atlassian.net/browse/POS-559",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1105,2022-03-31T21:13:16Z,2022-04-01T15:14:40Z,2022-04-01T15:14:41Z,MERGED,True,10,1,3,https://github.com/lkloh,Add a SbpMsgUnknown type in for the sbp_msg_type_t enum [POS-559],3,[],https://github.com/swift-nav/libsbp/pull/1105,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1105#issuecomment-1085151806,"Description
@swift-nav/devinfra
Add a SbpMsgUnknown type to the sbp_msg_type_t enum for C++ messages so we have a way to initialize messages of undetermined type. This was first suggested here.
API compatibility
Does this change introduce a API compatibility risk?
No, this adds a message enum option but does not subtract or change anything already in use.
JIRA Reference
https://swift-nav.atlassian.net/browse/POS-559",@woodfell or @RReichert any concerns with this?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1106,2022-04-04T15:46:30Z,2022-04-04T22:19:53Z,2022-04-04T22:19:54Z,MERGED,True,11,11,6,https://github.com/isaactorz,Fix Bitfield Ranges in MSG_STARTUP [DEVINFRA-675],2,[],https://github.com/swift-nav/libsbp/pull/1106,https://github.com/isaactorz,1,https://github.com/swift-nav/libsbp/pull/1106,"Description
During the development of our message validation script PR 1102, we discovered that the bitfield range for two fields in the system.MSG_STARTUP message were incorrect:

cause: type u8, range 0-8
startup_type: type u8, range 0-8

This PR fixes these fields to the correct range
@swift-nav/devinfra

API compatibility
Technically this is an API break, but it fixes an error in the message specification.

API compatibility plan
@silverjam has identified at least one place the message is emitted:
https://github.com/swift-nav/piksi_firmware_private/blob/d94cbfb44e354110d716babea59c0fbe8b780f55/src/main/main.c?q=MSG_STARTUP++language%3Ac#L182
The message is emitted with all 0 value, so patching should be minimal risk.

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-675","Description
During the development of our message validation script PR 1102, we discovered that the bitfield range for two fields in the system.MSG_STARTUP message were incorrect:

cause: type u8, range 0-8
startup_type: type u8, range 0-8

This PR fixes these fields to the correct range
@swift-nav/devinfra

API compatibility
Technically this is an API break, but it fixes an error in the message specification.

API compatibility plan
@silverjam has identified at least one place the message is emitted:
https://github.com/swift-nav/piksi_firmware_private/blob/d94cbfb44e354110d716babea59c0fbe8b780f55/src/main/main.c?q=MSG_STARTUP++language%3Ac#L182
The message is emitted with all 0 value, so patching should be minimal risk.

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-675",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1106,2022-04-04T15:46:30Z,2022-04-04T22:19:53Z,2022-04-04T22:19:54Z,MERGED,True,11,11,6,https://github.com/isaactorz,Fix Bitfield Ranges in MSG_STARTUP [DEVINFRA-675],2,[],https://github.com/swift-nav/libsbp/pull/1106,https://github.com/isaactorz,2,https://github.com/swift-nav/libsbp/pull/1106#issuecomment-1087725205,"Description
During the development of our message validation script PR 1102, we discovered that the bitfield range for two fields in the system.MSG_STARTUP message were incorrect:

cause: type u8, range 0-8
startup_type: type u8, range 0-8

This PR fixes these fields to the correct range
@swift-nav/devinfra

API compatibility
Technically this is an API break, but it fixes an error in the message specification.

API compatibility plan
@silverjam has identified at least one place the message is emitted:
https://github.com/swift-nav/piksi_firmware_private/blob/d94cbfb44e354110d716babea59c0fbe8b780f55/src/main/main.c?q=MSG_STARTUP++language%3Ac#L182
The message is emitted with all 0 value, so patching should be minimal risk.

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-675","FYI @swift-nav/devinfra I was able to sort out the issue and run make all from within the container. Looks like it ran to completion (last output was Finished running Elm JSON Schema tests).
Not super familiar with what all is supposed to get updated. Do we only have c and rust bindings for this message?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1106,2022-04-04T15:46:30Z,2022-04-04T22:19:53Z,2022-04-04T22:19:54Z,MERGED,True,11,11,6,https://github.com/isaactorz,Fix Bitfield Ranges in MSG_STARTUP [DEVINFRA-675],2,[],https://github.com/swift-nav/libsbp/pull/1106,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/1106#issuecomment-1087780503,"Description
During the development of our message validation script PR 1102, we discovered that the bitfield range for two fields in the system.MSG_STARTUP message were incorrect:

cause: type u8, range 0-8
startup_type: type u8, range 0-8

This PR fixes these fields to the correct range
@swift-nav/devinfra

API compatibility
Technically this is an API break, but it fixes an error in the message specification.

API compatibility plan
@silverjam has identified at least one place the message is emitted:
https://github.com/swift-nav/piksi_firmware_private/blob/d94cbfb44e354110d716babea59c0fbe8b780f55/src/main/main.c?q=MSG_STARTUP++language%3Ac#L182
The message is emitted with all 0 value, so patching should be minimal risk.

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-675","Not super familiar with what all is supposed to get updated. Do we only have c and rust bindings for this message?

All languages should have this message, but rust and c are the only languages with support for extracting/setting bitfield values so it makes sense you'd only see changes there",True,{'THUMBS_UP': ['https://github.com/isaactorz']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1106,2022-04-04T15:46:30Z,2022-04-04T22:19:53Z,2022-04-04T22:19:54Z,MERGED,True,11,11,6,https://github.com/isaactorz,Fix Bitfield Ranges in MSG_STARTUP [DEVINFRA-675],2,[],https://github.com/swift-nav/libsbp/pull/1106,https://github.com/isaactorz,4,https://github.com/swift-nav/libsbp/pull/1106#issuecomment-1088063166,"Description
During the development of our message validation script PR 1102, we discovered that the bitfield range for two fields in the system.MSG_STARTUP message were incorrect:

cause: type u8, range 0-8
startup_type: type u8, range 0-8

This PR fixes these fields to the correct range
@swift-nav/devinfra

API compatibility
Technically this is an API break, but it fixes an error in the message specification.

API compatibility plan
@silverjam has identified at least one place the message is emitted:
https://github.com/swift-nav/piksi_firmware_private/blob/d94cbfb44e354110d716babea59c0fbe8b780f55/src/main/main.c?q=MSG_STARTUP++language%3Ac#L182
The message is emitted with all 0 value, so patching should be minimal risk.

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-675","LGTM!
The PR title references MSG_STATUS but it should be MSG_STARTUP?

Nice catch, yes it should be MSG_STARTUP",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1107,2022-04-06T03:09:25Z,2022-04-08T00:57:06Z,2022-04-08T00:57:07Z,MERGED,True,7,12,3,https://github.com/adrian-kong,Suppressed warnings and deprecation notices for Java,3,[],https://github.com/swift-nav/libsbp/pull/1107,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1107,"Description
@swift-nav/devinfra
Adds @SuppressedWarning for unchecked generics and removes SBPStruct#parse return from generic to SBPStruct.
Changes the concurrent for loop removing to maybe prevent ConcurrentModificationException (?) - not sure if needed, also it doesn't look like it was being called anyways
API compatibility
Does this change introduce a API compatibility risk?
It should not, it only suppresses warnings and narrowing the scope of return type
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-479","Description
@swift-nav/devinfra
Adds @SuppressedWarning for unchecked generics and removes SBPStruct#parse return from generic to SBPStruct.
Changes the concurrent for loop removing to maybe prevent ConcurrentModificationException (?) - not sure if needed, also it doesn't look like it was being called anyways
API compatibility
Does this change introduce a API compatibility risk?
It should not, it only suppresses warnings and narrowing the scope of return type
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-479",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1108,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65","Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/fpezzinosn,2,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1090871852,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65","I had problems with the following targets:
C

The same thing GH Actions reports, this is a new package and it cannot create the integrity folder in the include directory. In my machine I solved this by manually creating it. Solved it by pushing my local version of the bindings.

Python

The number of expected messages is still the previous one, apparently it doesn't recognize that I added a new package with one message. After switching from a new package to an existing one, this error dissapeared.

Haskel

No issues

Java

No issues

Rust
I got the following error and I'm not sure what's it about. I was missing a short_desc field in my message.
py run-test: commands[0] | python -m sbpg.generator -i /mnt/workspace/spec/yaml/swiftnav/sbp/ -o /mnt/workspace/rust/ -r 4.1.5-6-gafc2e4ad --rust
Traceback (most recent call last):
  File ""/usr/lib/python3.8/runpy.py"", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code
    exec(code, run_globals)
  File ""/mnt/workspace/generator/sbpg/generator.py"", line 216, in <module>
    main()
  File ""/mnt/workspace/generator/sbpg/generator.py"", line 202, in main
    rs.render_all(output_dir, parsed, release)
  File ""/mnt/workspace/generator/sbpg/targets/rust.py"", line 404, in render_all
    render_file(
  File ""/mnt/workspace/generator/sbpg/targets/rust.py"", line 431, in render_file
    f.write(py_template.render(**args))
  File ""/mnt/workspace/.tox/py/lib/python3.8/site-packages/jinja2/environment.py"", line 1291, in render
    self.environment.handle_exception()
  File ""/mnt/workspace/.tox/py/lib/python3.8/site-packages/jinja2/environment.py"", line 926, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File ""/mnt/workspace/generator/sbpg/targets/resources/rust/sbp_messages_mod.rs"", line 114, in top-level template code
    /// (((m.short_desc | commentify(indent=2) )))
  File ""/mnt/workspace/generator/sbpg/targets/rust.py"", line 147, in commentify
    value = wrap_urls(value)
  File ""/mnt/workspace/generator/sbpg/targets/rust.py"", line 119, in wrap_urls
    urls = re.findall(r""\(?https?://[^\s\)]+\)?"", s)
  File ""/usr/lib/python3.8/re.py"", line 241, in findall
    return _compile(pattern, flags).findall(string)
TypeError: expected string or bytes-like object
ERROR: InvocationError for command /mnt/workspace/.tox/py/bin/python -m sbpg.generator -i spec/yaml/swiftnav/sbp -o rust -r 4.1.5-6-gafc2e4ad --rust (exited with code 1)

Protobuf

No issues

JSON Schema

No issues",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/fpezzinosn,3,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1091961728,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65",I have moved the message into the existing SSR package.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/notoriaga,4,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1092051964,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65",@fpezzinosn this should fix the rust generation problem  - #1109 (could also add a short_desc field to your message. Or maybe you could make what you have as desc the short_desc and write something longer for the desc). Either way feel free to merge those changes into this pr,True,{'HOORAY': ['https://github.com/fpezzinosn']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/fpezzinosn,5,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1092091062,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65","@fpezzinosn this should fix the rust generation problem - #1109 (could also add a short_desc field to your message. Or maybe you could make what you have as desc the short_desc and write something longer for the desc). Either way feel free to merge those changes into this pr

Yes! That was the issue
Thank you!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/fpezzinosn,6,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1092217720,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65",The only thing that fails is the code coverage of java. But the other messages in the SSR package aren't covered either.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/silverjam,7,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1092283498,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65","The only thing that fails is the code coverage of java. But the other messages in the SSR package aren't covered either.

Java is the only place where code coverage is tracked, so any new messages need to be covered (Java acts as a proxy for other languages), but this can be delayed until this PR is ready to merge.",True,{'THUMBS_UP': ['https://github.com/fpezzinosn']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/fpezzinosn,8,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1093396201,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65","Added a test spec, unfortunately it fails.
Probably missed one bit when encoding the example, have to check again.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/fpezzinosn,9,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1101601519,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65","There seems to be an issue with haskell org https://status.haskell.org/
The job is failing because it can't download the dependencies",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/IsakTjernberg,10,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1108709260,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65",@swift-nav/devinfra any objections to merging this?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1108,2022-04-06T22:08:45Z,2022-05-03T22:55:51Z,2022-05-03T22:55:52Z,MERGED,True,4504,8,48,https://github.com/fpezzinosn,Add support for SSR_ORBIT_CLOCK_BOUNDS message [OTA-65],2,[],https://github.com/swift-nav/libsbp/pull/1108,https://github.com/fpezzinosn,11,https://github.com/swift-nav/libsbp/pull/1108#issuecomment-1116719899,"Description
@swift-nav/devinfra

Adds the SSR_ORBIT_CLOCK_BOUNDS message to the SSR package as described here.
It also cherrypicks a fix for rust generation #1109 related to missing short_desc on the spec.
API compatibility
Does this change introduce a API compatibility risk?

It doesn't. I'm only adding one new message following the procedure.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-65",I've created a new staging branch as discussed and the PR now points to that branch.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1109,2022-04-07T18:05:54Z,2022-04-07T20:42:44Z,2022-04-07T20:42:52Z,CLOSED,False,12,10,4,https://github.com/notoriaga,fix rust gen,5,[],https://github.com/swift-nav/libsbp/pull/1109,https://github.com/notoriaga,1,https://github.com/swift-nav/libsbp/pull/1109,"Description
fix for rust gen in #1108","Description
fix for rust gen in #1108",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1109,2022-04-07T18:05:54Z,2022-04-07T20:42:44Z,2022-04-07T20:42:52Z,CLOSED,False,12,10,4,https://github.com/notoriaga,fix rust gen,5,[],https://github.com/swift-nav/libsbp/pull/1109,https://github.com/notoriaga,2,https://github.com/swift-nav/libsbp/pull/1109#issuecomment-1092057011,"Description
fix for rust gen in #1108","Will this need to be accounted for in the console?

I don't think so, this is just a fix for the code gen being a little brittle and failing if the spec is missing a short_desc field for a message. It's just blocking the new message from being added, shouldn't effect existing code",True,{'THUMBS_UP': ['https://github.com/john-michaelburke']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1109,2022-04-07T18:05:54Z,2022-04-07T20:42:44Z,2022-04-07T20:42:52Z,CLOSED,False,12,10,4,https://github.com/notoriaga,fix rust gen,5,[],https://github.com/swift-nav/libsbp/pull/1109,https://github.com/fpezzinosn,3,https://github.com/swift-nav/libsbp/pull/1109#issuecomment-1092182778,"Description
fix for rust gen in #1108",Cherrypicked 30e8c18 and 9753445 into my PR. Closing this one.,True,{'THUMBS_UP': ['https://github.com/notoriaga']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1110,2022-04-07T18:35:23Z,2022-04-08T17:29:11Z,2022-04-08T17:29:12Z,MERGED,True,2580,2041,22,https://github.com/isaactorz,Fix C Bitfield Macros [DEVINFRA-655],1,[],https://github.com/swift-nav/libsbp/pull/1110,https://github.com/isaactorz,1,https://github.com/swift-nav/libsbp/pull/1110,"Description
This PR fixes a bug in the SET macros for bitfields.
The current SET macros will fail if the client attempts to set a non-zero bitfield value to a new value. I've added a new test to test_imu_bitfields in c/test/check_bitfield_macros.c that demonstrates the bug:
START_TEST(test_imu_bitfields) {
  // tow is a u32
  msg_imu_raw_t imu = {.tow = 100};
  // The time status are the two MSBs; 30-31
  SBP_IMU_RAW_TIME_STATUS_SET(
      imu.tow,
     SBP_IMU_RAW_TIME_STATUS_REFERENCE_EPOCH_IS_TIME_OF_SYSTEM_STARTUP /* = 1 */);
   // This works because the time status fields are 0
  fail_unless(imu.tow == (100 | 0x40000000));
  SBP_IMU_RAW_TIME_STATUS_SET(
    imu.tow,
    SBP_IMU_RAW_TIME_STATUS_REFERENCE_EPOCH_IS_UNKNOWN /* = 2 */);
  // The following fails; we expected 01 -> 10 (or 1 -> 2),
  // but instead we get 01 -> 11, because we OR the old fields with the new fields
  fail_unless(imu.tow == (100 | 0x80000000))
}
The change proposed clears the old values of the bitfields before setting the new value so that the expected result is correct.
@swift-nav/devinfra

API compatibility
The change was first proposed here (authored by @reimerix)
The contention was that the current behavior was correct for ""flag"" style bitfields, and the change might break clients relying on that behavior. The suggestion was to add a new macro with the desired behavior.

API compatibility plan
After further discussion and a review of our existing messages, we've concluded that the ""flag"" behavior was not supported to begin with.
Here is an example ""flags"" bitfield definition in our spec:
- PackedObsContent:
    short_desc: GNSS observations for a particular satellite signal
    fields:
        - flags:
            type: u8
            desc: >
              Measurement status flags.
            fields:
              - 7:
                  desc: RAIM exclusion
                  values:
                      - 0: No exclusion
                      - 1: Measurement was excluded by SPP RAIM, use with care
              - 4-6:
                  desc: Reserved
              - 3:
                  desc: Doppler valid
                  values:
                      - 0: Invalid doppler measurement
                      - 1: Valid doppler measurement
              - 2:
                  desc: Half-cycle ambiguity
                  values:
                      - 0: Half cycle phase ambiguity unresolved
                      - 1: Half cycle phase ambiguity resolved
              - 1:
                  desc: Carrier phase valid
                  values:
                      - 0: Invalid carrier phase measurement
                      - 1: Valid carrier phase measurement
              - 0:
                  desc: Pseudorange valid
                  values:
                      - 0: Invalid pseudorange measurement
                      - 1: Valid pseudorange measurement and coarse TOW decoded
Each ""flag"" is declared explicitly and corresponding GET, SET, MASK, and SHIFT macros are generated for each. The client is only able to SET a single bit at a time.
So for example clients cannot do the following:
u8 flags = 0x0F;

SET_PACKEDOBSCONTENT_RAIM_EXCLUSION(flags, 0x80);
fail_unless(flags == 0x8F); // fails, flags is still 0x0F

SET_SET_PACKEDOBSCONTENT_RAIM_EXCLUSION(flags, 1);
fail_unless(flags == 0x8F); // passes
This has been added to the test suite; test_packed_obs_bitfields to demonstrate this usage of the API is not supported.
The test passes before and after changing the SET implementation.

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-655","Description
This PR fixes a bug in the SET macros for bitfields.
The current SET macros will fail if the client attempts to set a non-zero bitfield value to a new value. I've added a new test to test_imu_bitfields in c/test/check_bitfield_macros.c that demonstrates the bug:
START_TEST(test_imu_bitfields) {
  // tow is a u32
  msg_imu_raw_t imu = {.tow = 100};
  // The time status are the two MSBs; 30-31
  SBP_IMU_RAW_TIME_STATUS_SET(
      imu.tow,
     SBP_IMU_RAW_TIME_STATUS_REFERENCE_EPOCH_IS_TIME_OF_SYSTEM_STARTUP /* = 1 */);
   // This works because the time status fields are 0
  fail_unless(imu.tow == (100 | 0x40000000));
  SBP_IMU_RAW_TIME_STATUS_SET(
    imu.tow,
    SBP_IMU_RAW_TIME_STATUS_REFERENCE_EPOCH_IS_UNKNOWN /* = 2 */);
  // The following fails; we expected 01 -> 10 (or 1 -> 2),
  // but instead we get 01 -> 11, because we OR the old fields with the new fields
  fail_unless(imu.tow == (100 | 0x80000000))
}
The change proposed clears the old values of the bitfields before setting the new value so that the expected result is correct.
@swift-nav/devinfra

API compatibility
The change was first proposed here (authored by @reimerix)
The contention was that the current behavior was correct for ""flag"" style bitfields, and the change might break clients relying on that behavior. The suggestion was to add a new macro with the desired behavior.

API compatibility plan
After further discussion and a review of our existing messages, we've concluded that the ""flag"" behavior was not supported to begin with.
Here is an example ""flags"" bitfield definition in our spec:
- PackedObsContent:
    short_desc: GNSS observations for a particular satellite signal
    fields:
        - flags:
            type: u8
            desc: >
              Measurement status flags.
            fields:
              - 7:
                  desc: RAIM exclusion
                  values:
                      - 0: No exclusion
                      - 1: Measurement was excluded by SPP RAIM, use with care
              - 4-6:
                  desc: Reserved
              - 3:
                  desc: Doppler valid
                  values:
                      - 0: Invalid doppler measurement
                      - 1: Valid doppler measurement
              - 2:
                  desc: Half-cycle ambiguity
                  values:
                      - 0: Half cycle phase ambiguity unresolved
                      - 1: Half cycle phase ambiguity resolved
              - 1:
                  desc: Carrier phase valid
                  values:
                      - 0: Invalid carrier phase measurement
                      - 1: Valid carrier phase measurement
              - 0:
                  desc: Pseudorange valid
                  values:
                      - 0: Invalid pseudorange measurement
                      - 1: Valid pseudorange measurement and coarse TOW decoded
Each ""flag"" is declared explicitly and corresponding GET, SET, MASK, and SHIFT macros are generated for each. The client is only able to SET a single bit at a time.
So for example clients cannot do the following:
u8 flags = 0x0F;

SET_PACKEDOBSCONTENT_RAIM_EXCLUSION(flags, 0x80);
fail_unless(flags == 0x8F); // fails, flags is still 0x0F

SET_SET_PACKEDOBSCONTENT_RAIM_EXCLUSION(flags, 1);
fail_unless(flags == 0x8F); // passes
This has been added to the test suite; test_packed_obs_bitfields to demonstrate this usage of the API is not supported.
The test passes before and after changing the SET implementation.

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-655",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1110,2022-04-07T18:35:23Z,2022-04-08T17:29:11Z,2022-04-08T17:29:12Z,MERGED,True,2580,2041,22,https://github.com/isaactorz,Fix C Bitfield Macros [DEVINFRA-655],1,[],https://github.com/swift-nav/libsbp/pull/1110,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1110#issuecomment-1092316638,"Description
This PR fixes a bug in the SET macros for bitfields.
The current SET macros will fail if the client attempts to set a non-zero bitfield value to a new value. I've added a new test to test_imu_bitfields in c/test/check_bitfield_macros.c that demonstrates the bug:
START_TEST(test_imu_bitfields) {
  // tow is a u32
  msg_imu_raw_t imu = {.tow = 100};
  // The time status are the two MSBs; 30-31
  SBP_IMU_RAW_TIME_STATUS_SET(
      imu.tow,
     SBP_IMU_RAW_TIME_STATUS_REFERENCE_EPOCH_IS_TIME_OF_SYSTEM_STARTUP /* = 1 */);
   // This works because the time status fields are 0
  fail_unless(imu.tow == (100 | 0x40000000));
  SBP_IMU_RAW_TIME_STATUS_SET(
    imu.tow,
    SBP_IMU_RAW_TIME_STATUS_REFERENCE_EPOCH_IS_UNKNOWN /* = 2 */);
  // The following fails; we expected 01 -> 10 (or 1 -> 2),
  // but instead we get 01 -> 11, because we OR the old fields with the new fields
  fail_unless(imu.tow == (100 | 0x80000000))
}
The change proposed clears the old values of the bitfields before setting the new value so that the expected result is correct.
@swift-nav/devinfra

API compatibility
The change was first proposed here (authored by @reimerix)
The contention was that the current behavior was correct for ""flag"" style bitfields, and the change might break clients relying on that behavior. The suggestion was to add a new macro with the desired behavior.

API compatibility plan
After further discussion and a review of our existing messages, we've concluded that the ""flag"" behavior was not supported to begin with.
Here is an example ""flags"" bitfield definition in our spec:
- PackedObsContent:
    short_desc: GNSS observations for a particular satellite signal
    fields:
        - flags:
            type: u8
            desc: >
              Measurement status flags.
            fields:
              - 7:
                  desc: RAIM exclusion
                  values:
                      - 0: No exclusion
                      - 1: Measurement was excluded by SPP RAIM, use with care
              - 4-6:
                  desc: Reserved
              - 3:
                  desc: Doppler valid
                  values:
                      - 0: Invalid doppler measurement
                      - 1: Valid doppler measurement
              - 2:
                  desc: Half-cycle ambiguity
                  values:
                      - 0: Half cycle phase ambiguity unresolved
                      - 1: Half cycle phase ambiguity resolved
              - 1:
                  desc: Carrier phase valid
                  values:
                      - 0: Invalid carrier phase measurement
                      - 1: Valid carrier phase measurement
              - 0:
                  desc: Pseudorange valid
                  values:
                      - 0: Invalid pseudorange measurement
                      - 1: Valid pseudorange measurement and coarse TOW decoded
Each ""flag"" is declared explicitly and corresponding GET, SET, MASK, and SHIFT macros are generated for each. The client is only able to SET a single bit at a time.
So for example clients cannot do the following:
u8 flags = 0x0F;

SET_PACKEDOBSCONTENT_RAIM_EXCLUSION(flags, 0x80);
fail_unless(flags == 0x8F); // fails, flags is still 0x0F

SET_SET_PACKEDOBSCONTENT_RAIM_EXCLUSION(flags, 1);
fail_unless(flags == 0x8F); // passes
This has been added to the test suite; test_packed_obs_bitfields to demonstrate this usage of the API is not supported.
The test passes before and after changing the SET implementation.

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-655","FYI @reimerix -- mostly just your original change, but we've added some new tests and validated that this won't cause (unintended) backwards compatibility issues",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1111,2022-04-08T01:25:06Z,2022-04-12T21:04:42Z,2022-04-12T21:04:42Z,MERGED,True,92,4,2,https://github.com/john-michaelburke,Add a rust sbp iterator variant with timeout[CPP-721],2,[],https://github.com/swift-nav/libsbp/pull/1111,https://github.com/john-michaelburke,1,https://github.com/swift-nav/libsbp/pull/1111,"Description
@swift-nav/devinfra
Adds an iter_messages variant with a timeout which triggers when no preamble has been found in the read buffer for some duration. An example of when this behavior is frequently observed is when connecting to a serial device with an unexpected baudrate.
API compatibility
Does this change introduce a API compatibility risk?
This introduces some duplication which would need to be maintained if iter_messages or the SBPDecoder changes in the future but likely minor upkeep. I have added two unittests to hopefully catch any breaking changes to this feature.
JIRA Reference
https://swift-nav.atlassian.net/browse/CPP-721","Description
@swift-nav/devinfra
Adds an iter_messages variant with a timeout which triggers when no preamble has been found in the read buffer for some duration. An example of when this behavior is frequently observed is when connecting to a serial device with an unexpected baudrate.
API compatibility
Does this change introduce a API compatibility risk?
This introduces some duplication which would need to be maintained if iter_messages or the SBPDecoder changes in the future but likely minor upkeep. I have added two unittests to hopefully catch any breaking changes to this feature.
JIRA Reference
https://swift-nav.atlassian.net/browse/CPP-721",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1111,2022-04-08T01:25:06Z,2022-04-12T21:04:42Z,2022-04-12T21:04:42Z,MERGED,True,92,4,2,https://github.com/john-michaelburke,Add a rust sbp iterator variant with timeout[CPP-721],2,[],https://github.com/swift-nav/libsbp/pull/1111,https://github.com/notoriaga,2,https://github.com/swift-nav/libsbp/pull/1111#issuecomment-1093125626,"Description
@swift-nav/devinfra
Adds an iter_messages variant with a timeout which triggers when no preamble has been found in the read buffer for some duration. An example of when this behavior is frequently observed is when connecting to a serial device with an unexpected baudrate.
API compatibility
Does this change introduce a API compatibility risk?
This introduces some duplication which would need to be maintained if iter_messages or the SBPDecoder changes in the future but likely minor upkeep. I have added two unittests to hopefully catch any breaking changes to this feature.
JIRA Reference
https://swift-nav.atlassian.net/browse/CPP-721",Out of curiosity have you gotten a chance to test this out in the console/does it fix the issue you were seeing?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1111,2022-04-08T01:25:06Z,2022-04-12T21:04:42Z,2022-04-12T21:04:42Z,MERGED,True,92,4,2,https://github.com/john-michaelburke,Add a rust sbp iterator variant with timeout[CPP-721],2,[],https://github.com/swift-nav/libsbp/pull/1111,https://github.com/john-michaelburke,3,https://github.com/swift-nav/libsbp/pull/1111#issuecomment-1093128907,"Description
@swift-nav/devinfra
Adds an iter_messages variant with a timeout which triggers when no preamble has been found in the read buffer for some duration. An example of when this behavior is frequently observed is when connecting to a serial device with an unexpected baudrate.
API compatibility
Does this change introduce a API compatibility risk?
This introduces some duplication which would need to be maintained if iter_messages or the SBPDecoder changes in the future but likely minor upkeep. I have added two unittests to hopefully catch any breaking changes to this feature.
JIRA Reference
https://swift-nav.atlassian.net/browse/CPP-721","Out of curiosity have you gotten a chance to test this out in the console/does it fix the issue you were seeing?

Yeah it is working well. The selection of the timeout may need some tuning but the app does not lock up which is a huge win.
I was thinking having some form of a wrapper as you suggested would be potentially cleaner approach but I'm not sure how you would pass the SbpDecoder through FramedRead. I think I would need to hold a reference to an SbpDecoder inside my new struct. Maybe thats not too bad?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1111,2022-04-08T01:25:06Z,2022-04-12T21:04:42Z,2022-04-12T21:04:42Z,MERGED,True,92,4,2,https://github.com/john-michaelburke,Add a rust sbp iterator variant with timeout[CPP-721],2,[],https://github.com/swift-nav/libsbp/pull/1111,https://github.com/notoriaga,4,https://github.com/swift-nav/libsbp/pull/1111#issuecomment-1093130264,"Description
@swift-nav/devinfra
Adds an iter_messages variant with a timeout which triggers when no preamble has been found in the read buffer for some duration. An example of when this behavior is frequently observed is when connecting to a serial device with an unexpected baudrate.
API compatibility
Does this change introduce a API compatibility risk?
This introduces some duplication which would need to be maintained if iter_messages or the SBPDecoder changes in the future but likely minor upkeep. I have added two unittests to hopefully catch any breaking changes to this feature.
JIRA Reference
https://swift-nav.atlassian.net/browse/CPP-721","Out of curiosity have you gotten a chance to test this out in the console/does it fix the issue you were seeing?

Yeah it is working well. The selection of the timeout may need some tuning but the app does not lock up which is a huge win.

Nice!

I was thinking having some form of a wrapper as you suggested would be potentially cleaner approach but I'm not sure how you would pass the SbpDecoder through FramedRead. I think I would need to hold a reference to an SbpDecoder inside my new struct. Maybe thats not too bad?

I think I have something that might work, I'll push a different branch in a few and you can take a look",True,{'THUMBS_UP': ['https://github.com/john-michaelburke']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1112,2022-04-11T00:15:10Z,2022-04-11T22:42:27Z,2022-04-11T23:56:31Z,MERGED,True,35,0,1,https://github.com/adrian-kong,Added TCPExample for Java client,3,[],https://github.com/swift-nav/libsbp/pull/1112,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1112,"Description
@swift-nav/devinfra
TCPExample
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-678","Description
@swift-nav/devinfra
TCPExample
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-678",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1113,2022-04-12T00:01:45Z,2022-04-19T23:37:23Z,2022-04-20T00:45:20Z,CLOSED,False,787,396,394,https://github.com/adrian-kong,Updating libraries and license to 2022,9,[],https://github.com/swift-nav/libsbp/pull/1113,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1113,"Description
@swift-nav/devinfra
Small update to the libraries and the license header to 2022
API compatibility
It should still be compatible, no changes in API.","Description
@swift-nav/devinfra
Small update to the libraries and the license header to 2022
API compatibility
It should still be compatible, no changes in API.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1113,2022-04-12T00:01:45Z,2022-04-19T23:37:23Z,2022-04-20T00:45:20Z,CLOSED,False,787,396,394,https://github.com/adrian-kong,Updating libraries and license to 2022,9,[],https://github.com/swift-nav/libsbp/pull/1113,https://github.com/adrian-kong,2,https://github.com/swift-nav/libsbp/pull/1113#issuecomment-1097554410,"Description
@swift-nav/devinfra
Small update to the libraries and the license header to 2022
API compatibility
It should still be compatible, no changes in API.","Looks good to me. Is there a JIRA task for this one?

nope just a quick and tiny update",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1113,2022-04-12T00:01:45Z,2022-04-19T23:37:23Z,2022-04-20T00:45:20Z,CLOSED,False,787,396,394,https://github.com/adrian-kong,Updating libraries and license to 2022,9,[],https://github.com/swift-nav/libsbp/pull/1113,https://github.com/adrian-kong,3,https://github.com/swift-nav/libsbp/pull/1113#issuecomment-1103263588,"Description
@swift-nav/devinfra
Small update to the libraries and the license header to 2022
API compatibility
It should still be compatible, no changes in API.",oops i think i broke the branch,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1114,2022-04-12T02:33:05Z,2022-04-12T23:10:28Z,2022-04-12T23:10:29Z,MERGED,True,10,1,1,https://github.com/joelynch,Add generated copyright messages,1,[],https://github.com/swift-nav/libsbp/pull/1114,https://github.com/joelynch,1,https://github.com/swift-nav/libsbp/pull/1114,"Description
@swift-nav/devinfra
Fixes the build - adds generated copyright message.
API compatibility
Does this change introduce a API compatibility risk?
no","Description
@swift-nav/devinfra
Fixes the build - adds generated copyright message.
API compatibility
Does this change introduce a API compatibility risk?
no",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1115,2022-04-13T03:20:24Z,2022-04-13T17:14:02Z,2022-04-13T17:14:03Z,MERGED,True,22,7,8,https://github.com/john-michaelburke,Release v4.1.6,1,[],https://github.com/swift-nav/libsbp/pull/1115,https://github.com/john-michaelburke,1,https://github.com/swift-nav/libsbp/pull/1115,"@swift-nav/devinfra
I could not directly push to the main branch.","@swift-nav/devinfra
I could not directly push to the main branch.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1116,2022-04-13T05:41:06Z,,2022-05-25T08:12:38Z,OPEN,False,15279,13288,359,https://github.com/woodfell,C89/90 compatible [DO NOT MERGE],4,['draft'],https://github.com/swift-nav/libsbp/pull/1116,https://github.com/woodfell,1,https://github.com/swift-nav/libsbp/pull/1116,"Hack in C89/90 compatibility. Do not merge.
Lost access to

bool
inline
vsnprintf (potential overflows in printf style string functions)
designated initialisers
inline variable declarations
c++ style comments
apparently a trailing comma in enum declarations is a c99 feature","Hack in C89/90 compatibility. Do not merge.
Lost access to

bool
inline
vsnprintf (potential overflows in printf style string functions)
designated initialisers
inline variable declarations
c++ style comments
apparently a trailing comma in enum declarations is a c99 feature",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1117,2022-04-13T20:59:54Z,2022-04-13T22:56:54Z,2022-04-13T22:56:55Z,MERGED,True,4,4,2,https://github.com/john-michaelburke,Fix rust release.toml and haskell sbp.cabal.,2,[],https://github.com/swift-nav/libsbp/pull/1117,https://github.com/john-michaelburke,1,https://github.com/swift-nav/libsbp/pull/1117,"Description
@swift-nav/devinfra
Rust
There were some breaking changes in cargo-release recently. These changes are needed to use cargo-release on versions beyond 0.19.0, currently it is running at 0.20.0. An alternative approach would be to fix the version we install but this change seems reasonable to me.
Here is where the breaking changes occurred:
https://github.com/crate-ci/cargo-release/releases/tag/v0.19.0
Haskell
I was unable to publish to hackage without fixing this cabal file. I think the >= format is not valid anymore. Here is the error:
Packages relying on Cabal 1.12 or later should specify a specific version of the Cabal spec of the form 'cabal-version: x.y'. Use 'cabal-version: 1.22'.

Looks like there was a breaking change in 2.0: haskell/cabal#4899
Other concerns

We need to upgrade the rust version in the docker container as the newer version of cargo-release requires 2021 version. There were some strange permission issues trying to upgrade the toolchain in the docker. Is there documentation on how to rebuild and deploy the docker tag somewhere?","Description
@swift-nav/devinfra
Rust
There were some breaking changes in cargo-release recently. These changes are needed to use cargo-release on versions beyond 0.19.0, currently it is running at 0.20.0. An alternative approach would be to fix the version we install but this change seems reasonable to me.
Here is where the breaking changes occurred:
https://github.com/crate-ci/cargo-release/releases/tag/v0.19.0
Haskell
I was unable to publish to hackage without fixing this cabal file. I think the >= format is not valid anymore. Here is the error:
Packages relying on Cabal 1.12 or later should specify a specific version of the Cabal spec of the form 'cabal-version: x.y'. Use 'cabal-version: 1.22'.

Looks like there was a breaking change in 2.0: haskell/cabal#4899
Other concerns

We need to upgrade the rust version in the docker container as the newer version of cargo-release requires 2021 version. There were some strange permission issues trying to upgrade the toolchain in the docker. Is there documentation on how to rebuild and deploy the docker tag somewhere?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1117,2022-04-13T20:59:54Z,2022-04-13T22:56:54Z,2022-04-13T22:56:55Z,MERGED,True,4,4,2,https://github.com/john-michaelburke,Fix rust release.toml and haskell sbp.cabal.,2,[],https://github.com/swift-nav/libsbp/pull/1117,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1117#issuecomment-1098544434,"Description
@swift-nav/devinfra
Rust
There were some breaking changes in cargo-release recently. These changes are needed to use cargo-release on versions beyond 0.19.0, currently it is running at 0.20.0. An alternative approach would be to fix the version we install but this change seems reasonable to me.
Here is where the breaking changes occurred:
https://github.com/crate-ci/cargo-release/releases/tag/v0.19.0
Haskell
I was unable to publish to hackage without fixing this cabal file. I think the >= format is not valid anymore. Here is the error:
Packages relying on Cabal 1.12 or later should specify a specific version of the Cabal spec of the form 'cabal-version: x.y'. Use 'cabal-version: 1.22'.

Looks like there was a breaking change in 2.0: haskell/cabal#4899
Other concerns

We need to upgrade the rust version in the docker container as the newer version of cargo-release requires 2021 version. There were some strange permission issues trying to upgrade the toolchain in the docker. Is there documentation on how to rebuild and deploy the docker tag somewhere?","We need to upgrade the rust version in the docker container as the newer version of cargo-release requires 2021 version. There were some strange permission issues trying to upgrade the toolchain in the docker. Is there documentation on how to rebuild and deploy the docker tag somewhere?


The libsbp-build image is managed here: https://github.com/swift-nav/docker-recipes -- so shouldn't be anything special required.",True,{'THUMBS_UP': ['https://github.com/john-michaelburke']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1118,2022-04-20T00:46:44Z,2022-04-20T03:55:04Z,2022-04-20T03:55:04Z,MERGED,True,378,378,377,https://github.com/adrian-kong,Updating libraries and headers to 2022,1,[],https://github.com/swift-nav/libsbp/pull/1118,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1118,"Description
Updates libraries and headers to 2022","Description
Updates libraries and headers to 2022",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1119,2022-04-20T03:08:28Z,2022-05-02T00:32:25Z,2022-05-02T00:32:26Z,MERGED,True,152,37,5,https://github.com/adrian-kong,Publishing to maven central,11,[],https://github.com/swift-nav/libsbp/pull/1119,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1119,"Description
@swift-nav/devinfra
Releases java with
gradle publish

requires the account which should be in lastpass as well as a gpg key
and usage would be:
<dependency>
  <groupId>com.swiftnav</groupId>
  <artifactId>sbp</artifactId>
  <version>1.0.0</version>
</dependency>

I think it should be searchable at https://search.maven.org/artifact/com.swiftnav/sbp when the site gets indexed
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-294","Description
@swift-nav/devinfra
Releases java with
gradle publish

requires the account which should be in lastpass as well as a gpg key
and usage would be:
<dependency>
  <groupId>com.swiftnav</groupId>
  <artifactId>sbp</artifactId>
  <version>1.0.0</version>
</dependency>

I think it should be searchable at https://search.maven.org/artifact/com.swiftnav/sbp when the site gets indexed
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-294",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1119,2022-04-20T03:08:28Z,2022-05-02T00:32:25Z,2022-05-02T00:32:26Z,MERGED,True,152,37,5,https://github.com/adrian-kong,Publishing to maven central,11,[],https://github.com/swift-nav/libsbp/pull/1119,https://github.com/adrian-kong,2,https://github.com/swift-nav/libsbp/pull/1119#issuecomment-1104620854,"Description
@swift-nav/devinfra
Releases java with
gradle publish

requires the account which should be in lastpass as well as a gpg key
and usage would be:
<dependency>
  <groupId>com.swiftnav</groupId>
  <artifactId>sbp</artifactId>
  <version>1.0.0</version>
</dependency>

I think it should be searchable at https://search.maven.org/artifact/com.swiftnav/sbp when the site gets indexed
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-294",removed installing gradle from workflow because it was downloading 4.5.1 which didn't support java method for the generator test. not sure if it broke anything,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1119,2022-04-20T03:08:28Z,2022-05-02T00:32:25Z,2022-05-02T00:32:26Z,MERGED,True,152,37,5,https://github.com/adrian-kong,Publishing to maven central,11,[],https://github.com/swift-nav/libsbp/pull/1119,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1119#issuecomment-1111242463,"Description
@swift-nav/devinfra
Releases java with
gradle publish

requires the account which should be in lastpass as well as a gpg key
and usage would be:
<dependency>
  <groupId>com.swiftnav</groupId>
  <artifactId>sbp</artifactId>
  <version>1.0.0</version>
</dependency>

I think it should be searchable at https://search.maven.org/artifact/com.swiftnav/sbp when the site gets indexed
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-294",@adrian-kong let's move the Java publishing instructions to the HOWTO.md in this repo,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1119,2022-04-20T03:08:28Z,2022-05-02T00:32:25Z,2022-05-02T00:32:26Z,MERGED,True,152,37,5,https://github.com/adrian-kong,Publishing to maven central,11,[],https://github.com/swift-nav/libsbp/pull/1119,https://github.com/notoriaga,4,https://github.com/swift-nav/libsbp/pull/1119#issuecomment-1111598224,"Description
@swift-nav/devinfra
Releases java with
gradle publish

requires the account which should be in lastpass as well as a gpg key
and usage would be:
<dependency>
  <groupId>com.swiftnav</groupId>
  <artifactId>sbp</artifactId>
  <version>1.0.0</version>
</dependency>

I think it should be searchable at https://search.maven.org/artifact/com.swiftnav/sbp when the site gets indexed
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-294","@silverjam we are getting errors from apt-get when building the docker image with ubuntu groovy. groovy is end of life, can we just remove it? or should we look into it more",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1119,2022-04-20T03:08:28Z,2022-05-02T00:32:25Z,2022-05-02T00:32:26Z,MERGED,True,152,37,5,https://github.com/adrian-kong,Publishing to maven central,11,[],https://github.com/swift-nav/libsbp/pull/1119,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/1119#issuecomment-1111611656,"Description
@swift-nav/devinfra
Releases java with
gradle publish

requires the account which should be in lastpass as well as a gpg key
and usage would be:
<dependency>
  <groupId>com.swiftnav</groupId>
  <artifactId>sbp</artifactId>
  <version>1.0.0</version>
</dependency>

I think it should be searchable at https://search.maven.org/artifact/com.swiftnav/sbp when the site gets indexed
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-294","@silverjam we are getting errors from apt-get when building the docker image with ubuntu groovy. groovy is end of life, can we just remove it? or should we look into it more

Yeah, feel free to remove it, let's add a Jira introduce Jammy (22.04) at some point too.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1120,2022-04-20T22:06:23Z,2022-04-20T22:32:09Z,2022-04-20T22:32:09Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - clang-tidy: allow target to be disabled (#109),1,[],https://github.com/swift-nav/libsbp/pull/1120,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1120,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  600ec2a8  ->  31604e72

31604e72  :  clang-tidy: allow target to be disabled (#109)
f22a0f00  :  fix: use correct target types for compilable targets

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/9858/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  600ec2a8  ->  31604e72

31604e72  :  clang-tidy: allow target to be disabled (#109)
f22a0f00  :  fix: use correct target types for compilable targets

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/9858/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1121,2022-04-21T21:00:24Z,2022-05-03T00:26:19Z,2022-05-03T06:03:45Z,MERGED,True,5,7,1,https://github.com/adrian-kong,Deploying tarball to pypi,1,[],https://github.com/swift-nav/libsbp/pull/1121,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1121,"Description
Uploading tarball as well as wheel to pypi
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-55","Description
Uploading tarball as well as wheel to pypi
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-55",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1121,2022-04-21T21:00:24Z,2022-05-03T00:26:19Z,2022-05-03T06:03:45Z,MERGED,True,5,7,1,https://github.com/adrian-kong,Deploying tarball to pypi,1,[],https://github.com/swift-nav/libsbp/pull/1121,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1121#issuecomment-1115765993,"Description
Uploading tarball as well as wheel to pypi
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-55","Here are the final changes that were needed: d2a6dee -- kind of hard to test without trying to do a real release, will have you try cutting a release sometime soon",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1122,2022-04-26T06:06:24Z,2022-05-03T23:20:01Z,2022-05-03T23:20:02Z,MERGED,True,188,69,8,https://github.com/adrian-kong,Runnable sbp java example,5,[],https://github.com/swift-nav/libsbp/pull/1122,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1122,"Description
Added how to use and runnable build for examples in a different module instead of the same gradle project.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-692","Description
Added how to use and runnable build for examples in a different module instead of the same gradle project.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-692",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1122,2022-04-26T06:06:24Z,2022-05-03T23:20:01Z,2022-05-03T23:20:02Z,MERGED,True,188,69,8,https://github.com/adrian-kong,Runnable sbp java example,5,[],https://github.com/swift-nav/libsbp/pull/1122,https://github.com/adrian-kong,2,https://github.com/swift-nav/libsbp/pull/1122#issuecomment-1111798408,"Description
Added how to use and runnable build for examples in a different module instead of the same gradle project.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-692",some issues with docker.yaml file similar to the maven central PR,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1122,2022-04-26T06:06:24Z,2022-05-03T23:20:01Z,2022-05-03T23:20:02Z,MERGED,True,188,69,8,https://github.com/adrian-kong,Runnable sbp java example,5,[],https://github.com/swift-nav/libsbp/pull/1122,https://github.com/adrian-kong,3,https://github.com/swift-nav/libsbp/pull/1122#issuecomment-1114364226,"Description
Added how to use and runnable build for examples in a different module instead of the same gradle project.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-692","split out the docker.yaml thing to a different issue, all checks pass now üëç",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1122,2022-04-26T06:06:24Z,2022-05-03T23:20:01Z,2022-05-03T23:20:02Z,MERGED,True,188,69,8,https://github.com/adrian-kong,Runnable sbp java example,5,[],https://github.com/swift-nav/libsbp/pull/1122,https://github.com/john-michaelburke,4,https://github.com/swift-nav/libsbp/pull/1122#issuecomment-1115471879,"Description
Added how to use and runnable build for examples in a different module instead of the same gradle project.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-692","Looks like you may want to rebase your branch. That being said I think you could have commented out this line to prevent the crash on groovy but keep the workflow for the other distros:

  
    
      libsbp/.github/workflows/docker.yaml
    
    
         Line 16
      in
      031635a
    
  
  
    

        
          
           #          - groovy",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1122,2022-04-26T06:06:24Z,2022-05-03T23:20:01Z,2022-05-03T23:20:02Z,MERGED,True,188,69,8,https://github.com/adrian-kong,Runnable sbp java example,5,[],https://github.com/swift-nav/libsbp/pull/1122,https://github.com/adrian-kong,5,https://github.com/swift-nav/libsbp/pull/1122#issuecomment-1115476740,"Description
Added how to use and runnable build for examples in a different module instead of the same gradle project.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-692","Looks like you may want to rebase your branch. That being said I think you could have commented out this line to prevent the crash on groovy but keep the workflow for the other distros:

  
    
      libsbp/.github/workflows/docker.yaml
    
    
         Line 16
      in
      031635a
    
  
  
    

        
          
           #          - groovy 
        
    
  



i tried that in a diff PR
https://github.com/swift-nav/libsbp/runs/6204715987
it had some error that wasn't relevant to the changes so wasn't sure what was happening for it",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1123,2022-04-26T09:56:37Z,2022-05-02T14:06:19Z,2022-05-02T17:29:43Z,MERGED,True,3207,367,127,https://github.com/reimerix,Add status journal message,12,[],https://github.com/swift-nav/libsbp/pull/1123,https://github.com/reimerix,1,https://github.com/swift-nav/libsbp/pull/1123,"Description
@swift-nav/devinfra
This PR adds a status journal message to libsbp that can be used to output previous status reports along with their respective timestamps. The intent is to use this to periodically output diagnostic information about past events.
API compatibility
‚úÖ  No API compatibility changes
API compatibility plan
‚úÖ  Not applicable
Related PRs

#1126","Description
@swift-nav/devinfra
This PR adds a status journal message to libsbp that can be used to output previous status reports along with their respective timestamps. The intent is to use this to periodically output diagnostic information about past events.
API compatibility
‚úÖ  No API compatibility changes
API compatibility plan
‚úÖ  Not applicable
Related PRs

#1126",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1123,2022-04-26T09:56:37Z,2022-05-02T14:06:19Z,2022-05-02T17:29:43Z,MERGED,True,3207,367,127,https://github.com/reimerix,Add status journal message,12,[],https://github.com/swift-nav/libsbp/pull/1123,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1123#issuecomment-1114316939,"Description
@swift-nav/devinfra
This PR adds a status journal message to libsbp that can be used to output previous status reports along with their respective timestamps. The intent is to use this to periodically output diagnostic information about past events.
API compatibility
‚úÖ  No API compatibility changes
API compatibility plan
‚úÖ  Not applicable
Related PRs

#1126",@reimerix @RReichert I made a few adjustments to reduce duplication and try to improve naming,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1123,2022-04-26T09:56:37Z,2022-05-02T14:06:19Z,2022-05-02T17:29:43Z,MERGED,True,3207,367,127,https://github.com/reimerix,Add status journal message,12,[],https://github.com/swift-nav/libsbp/pull/1123,https://github.com/RReichert,3,https://github.com/swift-nav/libsbp/pull/1123#issuecomment-1114381348,"Description
@swift-nav/devinfra
This PR adds a status journal message to libsbp that can be used to output previous status reports along with their respective timestamps. The intent is to use this to periodically output diagnostic information about past events.
API compatibility
‚úÖ  No API compatibility changes
API compatibility plan
‚úÖ  Not applicable
Related PRs

#1126","Looked over the PR again after the changes, and I'm much happier with the changes. Thanks @silverjam",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/isaactorz,1,https://github.com/swift-nav/libsbp/pull/1124,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/isaactorz,2,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1110269495,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","@swift-nav/devinfra Still a WIP from the implementation side but figured I'd start soliciting feedback on the new pdf format.
The way I implemented the conditional that detects if the field is a GnssSignal is super brittle. Still working out something more robust.
I'm also a latex noob so could use some pointers there. For instance the full set of signals (~65) doesn't fit on the page so I was only able to fit the first 40 on there (table doesn't render when it overflows).
Edit: These items have been addressed.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1111501839,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","@isaactorz Do you want to try to tackle the code smell?  If not I can just dismiss it, I think it triggered just because you touched/changed some already smelly code.  https://sonarcloud.io/project/issues?resolved=false&types=CODE_SMELL&pullRequest=1124&id=swift-nav_libsbp_auto&open=AYBspOo25rY3lIhfSuP1",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/isaactorz,4,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1111555854,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","@isaactorz Do you want to try to tackle the code smell? If not I can just dismiss it, I think it triggered just because you touched/changed some already smelly code. https://sonarcloud.io/project/issues?resolved=false&types=CODE_SMELL&pullRequest=1124&id=swift-nav_libsbp_auto&open=AYBspOo25rY3lIhfSuP1

I'd prefer to dismiss it. Seems to be doing its job without any issues. Even if it's not very pretty üòÖ",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/ljbade,5,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1111589819,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","One thought I have, is that the internal Starling enum names for the signals I think can be confusing for customers since there is a weird mix of some that are based on the signal name e.g. GPS L2CM, and some that are based on the RINEX 3 code names e.g.  GAL E7I.
Would be be better to pick one or the other for the documentation? The RINEX 3 codes we could add a reference to the RINEX spec, otherwise we could use the code names from the various GNSS constellation ICDs (ie the ""official"" names).",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1112401071,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","@isaactorz Do you want to try to tackle the code smell? If not I can just dismiss it, I think it triggered just because you touched/changed some already smelly code. https://sonarcloud.io/project/issues?resolved=false&types=CODE_SMELL&pullRequest=1124&id=swift-nav_libsbp_auto&open=AYBspOo25rY3lIhfSuP1

I'd prefer to dismiss it. Seems to be doing its job without any issues. Even if it's not very pretty üòÖ

Alright, I dismissed it, should pass the next time the analysis is run.",True,{'THUMBS_UP': ['https://github.com/isaactorz']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/silverjam,7,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1112402641,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","One thought I have, is that the internal Starling enum names for the signals I think can be confusing for customers since there is a weird mix of some that are based on the signal name e.g. GPS L2CM, and some that are based on the RINEX 3 code names e.g. GAL E7I.
Would be be better to pick one or the other for the documentation? The RINEX 3 codes we could add a reference to the RINEX spec, otherwise we could use the code names from the various GNSS constellation ICDs (ie the ""official"" names).

@cbeighley @anth-cole Can you help make a call on this?  Should we standardize naming on RINEX or the GNSS constellation ICDs?  Or should we leave it as is?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/CptStubbs,8,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1112667226,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","From my point of view, the Constellation ICD naming conventions make most sense. Navipedia (among other sources) uses that convention it seems, which makes debugging a bit easier. See for example: https://gssc.esa.int/navipedia/index.php/Galileo_Signal_Plan
Just my 2 cents. As long as we remain consistent that's the main thing I think",True,"{'THUMBS_UP': ['https://github.com/silverjam', 'https://github.com/lkloh']}"
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/silverjam,9,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1112706612,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","From my point of view, the Constellation ICD naming conventions make most sense. Navipedia (among other sources) uses that convention it seems, which makes debugging a bit easier. See for example: https://gssc.esa.int/navipedia/index.php/Galileo_Signal_Plan
Just my 2 cents. As long as we remain consistent that's the main thing I think

Internal consistency is good, but not if it generates confusion for customers, if more customers are going to be familiar with Constellation ICD naming conventions then we should go with that.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/cbeighley,10,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1112714106,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","I don't have a super strong opinion - I don't think customers are coming in contact with this stuff very often. We are by far the most common consumers of this convention.
I'll agree that in the abstract, basing it on constellation ICD probably makes the most sense.",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/isaactorz,11,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1113520022,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","So I think from what I gather here, we're leaning towards using the ICD conventions?
If so could someone provide me a template or an example or something for how to reformat these names?
I took a look at that document @CptStubbs linked, but I really wasn't able to tell what this ICD format is from skimming it.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/silverjam,12,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1115474737,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","So I think from what I gather here, we're leaning towards using the ICD conventions?
If so could someone provide me a template or an example or something for how to reformat these names?
I took a look at that document @CptStubbs linked, but I really wasn't able to tell what this ICD format is from skimming it.

Recap'ing the decision from our internal meeting: keep the RINEX naming conventions but provide a another table that maps from RINEX naming conventions to the ICD naming conventions.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/ljbade,13,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1115486925,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","I started working on this before we decided to add a mapping table, but below is the ICD names for each signal, mostly taken from the RINEX 3 specification.

    {0} & {GPS L1 C/A} & {32} & {QZS L1C D} \\
    {1} & {GPS L2C M} & {33} & {QZS L1C P} \\
    {2} & {SBAS L1 C/A} & {34} & {QZS L1C D+P} \\
    {3} & {GLONASS L1OF} & {35} & {QZS L2C M} \\
    {4} & {GLONASS L2OF} & {36} & {QZS L2C L} \\
    {5} & {GPS L1 P(Y)} & {37} & {QZS L2C M_L} \\
    {6} & {GPS L2 P(Y)} & {38} & {QZS L5 I} \\
    {7} & {GPS L2C L} & {39} & {QZS L5 Q} \\
    {8} & {GPS L2C M+L} & {40} & {QZS L5 I+Q} \\
    {9} & {GPS L5 I} & {41} & {SBAS L5 I} \\
    {10} & {GPS L5 Q} & {42} & {SBAS L5 Q} \\
    {11} & {GPS L5 I+Q} & {43} & {SBAS L5 I+Q} \\
    {12} & {BDS B1I} & {44} & {BDS B1C D} \\
    {13} & {BDS B2I} & {45} & {BDS B1C P} \\
    {14} & {GAL E1 B} & {46} & {BDS B1C D+P} \\
    {15} & {GAL E1 C} & {47} & {BDS B2a I} \\
    {16} & {GAL E1 B+C} & {48} & {BDS B2a Q} \\
    {17} & {GAL E6 B} & {49} & {BDS B2a D+P} \\
    {18} & {GAL E6 C} & {50} & {BDS B2b D} \\
    {19} & {GAL E6 B+C} & {51} & {BDS B2b P} \\
    {20} & {GAL E5b I} & {52} & {BDS B2b D+P} \\
    {21} & {GAL E5b Q} & {53} & {BDS B3I} \\
    {22} & {GAL E5b I+Q} & {54} & {BDS B3Q} \\
    {23} & {GAL E5a+b I} & {55} & {BDS B3 I+Q} \\
    {24} & {GAL E5a+b Q} & {56} & {GPS L1C I} \\
    {25} & {GAL E5a+b I+Q} & {57} & {GPS L1C Q} \\
    {26} & {GAL E5a I} & {58} & {GPS L1C I+Q} \\
    {27} & {GAL E5a Q} & {59} & {not used} \\
    {28} & {GAL E5a I+Q} & {60} & {not used} \\
    {29} & {GLONASS L1SF} & {61} & {not used} \\
    {30} & {GLONASS L2SF} & {62} & {not used} \\
    {31} & {QZS L1 C/A} & {63} & {not used} \\

The AUX signals have never been used, I recall they were for the initially dual antenna feature of Piksi Multi which was never implemented. So I'm not sure if they are even worth including.
Unfortunately we do have a number of inconsistencies stemming from the history of the enums in libswiftnav signal.h. For example we don't have BDS B1Q or B2Q, but we do have  B3Q.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/ljbade,14,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1120530266,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","@isaactorz here is a corrected table based on the few things I noticed:
    {0} & {GPS L1CA} & {GPS L1 C/A} & {30} & {GLO L2P} & {GLONASS L2SF} \\
    {1} & {GPS L2CM} & {GPS L2C M} & {31} & {QZS L1CA} & {QZS L1 C/A} \\
    {2} & {SBAS L1CA} & {SBAS L1 C/A} & {32} & {QZS L1CI} & {QZS L1C D} \\
    {3} & {GLO L1OF} & {GLONASS L10F} & {33} & {QZS L1CQ} & {QZS L1C P} \\
    {4} & {GLO L20F} & {GLONASS L20F} & {34} & {QZS L1CX} & {QZS L1C D+P} \\
    {5} & {GPS L1P} & {GPS L1 P(Y)} & {35} & {QZS L2CM} & {QZS L2C M} \\
    {6} & {GPS L2P} & {GPS L2 P(Y)} & {36} & {QZS L2CL} & {QZS L2C L} \\
    {7} & {GPS L2CL} & {GPS L2C L} & {37} & {QZS L2CX} & {QZS L2C ML} \\
    {8} & {GPS L2CX} & {GPS L2C M+L} & {38} & {QZS L5I} & {QZS L5 I} \\
    {9} & {GPS L5I} & {GPS L5 I} & {39} & {QZS L5Q} & {QZS L5 Q} \\
    {10} & {GPS L5Q} & {GPS L5 Q} & {40} & {QZS L5X} & {QZS L5 I+Q} \\
    {11} & {GPS L5X} & {GPS L5 I+Q} & {41} & {SBAS L5I} & {SBAS L5 I} \\
    {12} & {BDS2 B1} & {BDS B1I} & {42} & {SBAS L5Q} & {SBAS L5 Q} \\
    {13} & {BDS2 B2} & {BDS B2I} & {43} & {SBAS L5X} & {SBAS L5 I+Q} \\
    {14} & {GAL E1B} & {GAL E1 B} & {44} & {BDS3 B1CI} & {BDS B1C D} \\
    {15} & {GAL E1C} & {GAL E1 C} & {45} & {BDS3 B1CQ} & {BDS B1C P} \\
    {16} & {GAL E1X} & {GAL E1 B+C} & {46} & {BDS3 B1CX} & {BDS B1C D+P} \\
    {17} & {GAL E6B} & {GAL E6 B} & {47} & {BDS3 B5I} & {BDS B2a D} \\
    {18} & {GAL E6C} & {GAL E6 C} & {48} & {BDS3 B5Q} & {BDS B2a P} \\
    {19} & {GAL E6X} & {GAL E6 B+C} & {49} & {BDS3 B5X} & {BDS B2a D+P} \\
    {20} & {GAL E7I} & {GAL E5b I} & {50} & {BDS3 B7I} & {BDS B2b D} \\
    {21} & {GAL E7Q} & {GAL E5b Q} & {51} & {BDS3 B7Q} & {BDS B2b P} \\
    {22} & {GAL E7X} & {GAL E5b I+Q} & {52} & {BDS3 B7X} & {BDS B2b D+P} \\
    {23} & {GAL E8I} & {GAL E5a+b I} & {53} & {BDS3 B3I} & {BDS B3I} \\
    {24} & {GAL E8I} & {GAL E5a+b Q} & {54} & {BDS3 B3Q} & {BDS B3Q} \\
    {25} & {GAL E8X} & {GAL E5a+b I+Q} & {55} & {BDS3 B3X} & {BDS B3 I+Q} \\
    {26} & {GAL E5I} & {GAL E5a I} & {56} & {GPS L1CI} & {GPS L1C D} \\
    {27} & {GAL E5Q} & {GAL E5a Q} & {57} & {GPS L1CQ} & {GPS L1C P} \\
    {28} & {GAL E5X} & {GAL E5a I+Q} & {58} & {GPS L1CX} & {GPS L1C D+P} \\ 
    {29} & {GLO L1P} & {GLONASS L1SF} \\

otherwise I think this is good to merge",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1124,2022-04-26T21:27:46Z,2022-05-09T22:45:54Z,2022-05-09T22:45:55Z,MERGED,True,74,8,4,https://github.com/isaactorz,Update sbp Docs to Include L5 Signals,18,[],https://github.com/swift-nav/libsbp/pull/1124,https://github.com/isaactorz,15,https://github.com/swift-nav/libsbp/pull/1124#issuecomment-1121376163,"Description
The gnss signals that are enumerated by GnssSignal are incomplete, and thus the table that gets rendered for them in our pdf doc is incomplete.
This change adds a new section to the documentation that enumerates every gnss signal. This table is hardcoded into our latex files.
The messages that contain the fields of GnssSignal will no longer create the table for the bitfields. Instead we a page reference is appended to the description of this field that points readers to the table where the full list of signals is defined.
The new signals table is currently on Page 4, and you can see an example on ~ pg 43 of the field's description referencing this new table.
@swift-nav/devinfra

API compatibility
No API compatibility implications for this change
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-661","otherwise I think this is good to merge

Thanks for giving this a look over, should be good to go now.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1125,2022-04-27T01:43:29Z,2022-05-05T23:00:25Z,2022-05-05T23:00:25Z,MERGED,True,332,3,6,https://github.com/adrian-kong,Generate missing tests via JSON,8,[],https://github.com/swift-nav/libsbp/pull/1125,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1125,"Description
Draft PR on top of missing.py to generate tests for json inputs
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-676","Description
Draft PR on top of missing.py to generate tests for json inputs
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-676",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1125,2022-04-27T01:43:29Z,2022-05-05T23:00:25Z,2022-05-05T23:00:25Z,MERGED,True,332,3,6,https://github.com/adrian-kong,Generate missing tests via JSON,8,[],https://github.com/swift-nav/libsbp/pull/1125,https://github.com/adrian-kong,2,https://github.com/swift-nav/libsbp/pull/1125#issuecomment-1118150390,"Description
Draft PR on top of missing.py to generate tests for json inputs
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-676","minor change in the usage where it reads from the json msg if id isn't provided
python ./json2test.py --in vel_cog.json --out test_vel_cog.yaml",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1125,2022-04-27T01:43:29Z,2022-05-05T23:00:25Z,2022-05-05T23:00:25Z,MERGED,True,332,3,6,https://github.com/adrian-kong,Generate missing tests via JSON,8,[],https://github.com/swift-nav/libsbp/pull/1125,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1125#issuecomment-1118223162,"Description
Draft PR on top of missing.py to generate tests for json inputs
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-676",Some brief docs on these two scripts in HOWTO.md would be great too.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1126,2022-04-28T18:24:20Z,2022-05-02T22:01:47Z,2022-05-02T22:01:48Z,MERGED,True,4667,358,139,https://github.com/silverjam,Add MSG_STATUS_JOURNAL [4.1.x],4,[],https://github.com/swift-nav/libsbp/pull/1126,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1126,"Description
@swift-nav/devinfra
Adds new MSG_STATUS_JOURNAL, see https://swift-nav.atlassian.net/l/c/yYraQXHA
API compatibility
Does this change introduce a API compatibility risk? -> No, just introducing a new message.
Related PRs

#1123","Description
@swift-nav/devinfra
Adds new MSG_STATUS_JOURNAL, see https://swift-nav.atlassian.net/l/c/yYraQXHA
API compatibility
Does this change introduce a API compatibility risk? -> No, just introducing a new message.
Related PRs

#1123",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1126,2022-04-28T18:24:20Z,2022-05-02T22:01:47Z,2022-05-02T22:01:48Z,MERGED,True,4667,358,139,https://github.com/silverjam,Add MSG_STATUS_JOURNAL [4.1.x],4,[],https://github.com/swift-nav/libsbp/pull/1126,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1126#issuecomment-1112556983,"Description
@swift-nav/devinfra
Adds new MSG_STATUS_JOURNAL, see https://swift-nav.atlassian.net/l/c/yYraQXHA
API compatibility
Does this change introduce a API compatibility risk? -> No, just introducing a new message.
Related PRs

#1123",Waiting for docker run on my machine to get to the Rust source,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1127,2022-04-28T22:31:31Z,2022-05-05T13:24:44Z,2022-05-05T15:20:47Z,MERGED,True,3606,56,44,https://github.com/fpezzinosn,Add support for MSG_SSR_CODE_PHASE_BIASES_BOUNDS message [OTA-119],2,[],https://github.com/swift-nav/libsbp/pull/1127,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1127,"Description
@swift-nav/devinfra
Adds the SSR_CODE_PHASE_BIASES_BOUNDS message to the SSR package.
API compatibility
Does this change introduce a API compatibility risk?
It doesn't. It adds a new message.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-119","Description
@swift-nav/devinfra
Adds the SSR_CODE_PHASE_BIASES_BOUNDS message to the SSR package.
API compatibility
Does this change introduce a API compatibility risk?
It doesn't. It adds a new message.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-119",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1127,2022-04-28T22:31:31Z,2022-05-05T13:24:44Z,2022-05-05T15:20:47Z,MERGED,True,3606,56,44,https://github.com/fpezzinosn,Add support for MSG_SSR_CODE_PHASE_BIASES_BOUNDS message [OTA-119],2,[],https://github.com/swift-nav/libsbp/pull/1127,https://github.com/fpezzinosn,2,https://github.com/swift-nav/libsbp/pull/1127#issuecomment-1117564626,"Description
@swift-nav/devinfra
Adds the SSR_CODE_PHASE_BIASES_BOUNDS message to the SSR package.
API compatibility
Does this change introduce a API compatibility risk?
It doesn't. It adds a new message.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-119",@swift-nav/devinfra Any feedback on this? This should be very similar to #1108 and I've incorporated here all the feedback I got there.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1128,2022-04-29T00:18:58Z,2022-05-10T01:12:19Z,2022-05-10T01:12:20Z,MERGED,True,1,3,1,https://github.com/adrian-kong,Fixing unconsumed 4096 error sbp2json,1,[],https://github.com/swift-nav/libsbp/pull/1128,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1128,"Description
Unconsumed 4096 error on sbp2json
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510","Description
Unconsumed 4096 error on sbp2json
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1128,2022-04-29T00:18:58Z,2022-05-10T01:12:19Z,2022-05-10T01:12:20Z,MERGED,True,1,3,1,https://github.com/adrian-kong,Fixing unconsumed 4096 error sbp2json,1,[],https://github.com/swift-nav/libsbp/pull/1128,https://github.com/adrian-kong,2,https://github.com/swift-nav/libsbp/pull/1128#issuecomment-1112770678,"Description
Unconsumed 4096 error on sbp2json
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510","the suggested changes stops the unconsumed 4096 but runs for a long time, not sure how large the file is supposed to be generated but testing this change creates a 1gb json file for a 0.5gb sbp - runs for a long time (was interrupted)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1128,2022-04-29T00:18:58Z,2022-05-10T01:12:19Z,2022-05-10T01:12:20Z,MERGED,True,1,3,1,https://github.com/adrian-kong,Fixing unconsumed 4096 error sbp2json,1,[],https://github.com/swift-nav/libsbp/pull/1128,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/1128#issuecomment-1115487157,"Description
Unconsumed 4096 error on sbp2json
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510","at some point we removed the JIT support for python and the bindings got really slow, so it might actually be working",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1128,2022-04-29T00:18:58Z,2022-05-10T01:12:19Z,2022-05-10T01:12:20Z,MERGED,True,1,3,1,https://github.com/adrian-kong,Fixing unconsumed 4096 error sbp2json,1,[],https://github.com/swift-nav/libsbp/pull/1128,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/1128#issuecomment-1118231858,"Description
Unconsumed 4096 error on sbp2json
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510",What is the behavior of the tool now?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1128,2022-04-29T00:18:58Z,2022-05-10T01:12:19Z,2022-05-10T01:12:20Z,MERGED,True,1,3,1,https://github.com/adrian-kong,Fixing unconsumed 4096 error sbp2json,1,[],https://github.com/swift-nav/libsbp/pull/1128,https://github.com/adrian-kong,5,https://github.com/swift-nav/libsbp/pull/1128#issuecomment-1119138571,"Description
Unconsumed 4096 error on sbp2json
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510","we were playing around with handler instead but that generated more messages than the rust version which was odd but the tool is fixed i think, it worked fine with the 10mb file without unconsumed 4096",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1128,2022-04-29T00:18:58Z,2022-05-10T01:12:19Z,2022-05-10T01:12:20Z,MERGED,True,1,3,1,https://github.com/adrian-kong,Fixing unconsumed 4096 error sbp2json,1,[],https://github.com/swift-nav/libsbp/pull/1128,https://github.com/adrian-kong,6,https://github.com/swift-nav/libsbp/pull/1128#issuecomment-1120523033,"Description
Unconsumed 4096 error on sbp2json
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510",i also made another pull request #1140 which takes out all the manual reading and also fixes the unconsumed 4096,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1129,2022-05-02T02:02:44Z,2022-05-02T05:28:58Z,2022-05-02T05:28:58Z,CLOSED,False,822,1,13,https://github.com/RReichert,ESD-2413 Journaled status reports (master),3,[],https://github.com/swift-nav/libsbp/pull/1129,https://github.com/RReichert,1,https://github.com/swift-nav/libsbp/pull/1129,,,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1129,2022-05-02T02:02:44Z,2022-05-02T05:28:58Z,2022-05-02T05:28:58Z,CLOSED,False,822,1,13,https://github.com/RReichert,ESD-2413 Journaled status reports (master),3,[],https://github.com/swift-nav/libsbp/pull/1129,https://github.com/RReichert,2,https://github.com/swift-nav/libsbp/pull/1129#issuecomment-1114510775,,Going to close and use #1126,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1130,2022-05-04T16:09:12Z,2022-05-17T14:38:14Z,2022-05-17T14:38:15Z,MERGED,True,40478,642,207,https://github.com/fpezzinosn,Add stubbed version of new Integrity Bounds/Flags [OTA-134],2,[],https://github.com/swift-nav/libsbp/pull/1130,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1130,"Description
@swift-nav/devinfra
Reserves the IDs associated with the Satellite Bounds messages that are defined in the staging branch.
API compatibility
Does this change introduce a API compatibility risk?
No
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-134","Description
@swift-nav/devinfra
Reserves the IDs associated with the Satellite Bounds messages that are defined in the staging branch.
API compatibility
Does this change introduce a API compatibility risk?
No
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-134",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1130,2022-05-04T16:09:12Z,2022-05-17T14:38:14Z,2022-05-17T14:38:15Z,MERGED,True,40478,642,207,https://github.com/fpezzinosn,Add stubbed version of new Integrity Bounds/Flags [OTA-134],2,[],https://github.com/swift-nav/libsbp/pull/1130,https://github.com/fpezzinosn,2,https://github.com/swift-nav/libsbp/pull/1130#issuecomment-1117560477,"Description
@swift-nav/devinfra
Reserves the IDs associated with the Satellite Bounds messages that are defined in the staging branch.
API compatibility
Does this change introduce a API compatibility risk?
No
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-134",@silverjam Is this what you were referring as stubbing in your staging proposal?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1130,2022-05-04T16:09:12Z,2022-05-17T14:38:14Z,2022-05-17T14:38:15Z,MERGED,True,40478,642,207,https://github.com/fpezzinosn,Add stubbed version of new Integrity Bounds/Flags [OTA-134],2,[],https://github.com/swift-nav/libsbp/pull/1130,https://github.com/fpezzinosn,3,https://github.com/swift-nav/libsbp/pull/1130#issuecomment-1119968501,"Description
@swift-nav/devinfra
Reserves the IDs associated with the Satellite Bounds messages that are defined in the staging branch.
API compatibility
Does this change introduce a API compatibility risk?
No
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-134",Will convert this into a draft until all the other messages are merged into staging.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1130,2022-05-04T16:09:12Z,2022-05-17T14:38:14Z,2022-05-17T14:38:15Z,MERGED,True,40478,642,207,https://github.com/fpezzinosn,Add stubbed version of new Integrity Bounds/Flags [OTA-134],2,[],https://github.com/swift-nav/libsbp/pull/1130,https://github.com/fpezzinosn,4,https://github.com/swift-nav/libsbp/pull/1130#issuecomment-1125383007,"Description
@swift-nav/devinfra
Reserves the IDs associated with the Satellite Bounds messages that are defined in the staging branch.
API compatibility
Does this change introduce a API compatibility risk?
No
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-134","We need a couple things before we can merge:

an indication in the version when we're on a staging branch (something a -staging should be appended e.g. v4.2.0-g<git_short_hash>-staging).
a compiler macro in sbp.h that indicates if we're on a staging branch e.g. #define SBP_STAGING 1

We can implement here and merge master into staging or implement in master, then cherry pick to staging.
These facilities will be used when we cut a release of Starling and disable parsing of the new messages.

@silverjam Is this the correct place to append -staging so that it propagates everywhere?

  
    
      libsbp/generator/sbpg/generator.py
    
    
        Lines 87 to 101
      in
      e88fbd8
    
  
  
    

        
          
           def parse_release_version(release: str) -> ReleaseVersion: 
        

        
          
             major, minor, patch = release.split('.')[:3] 
        

        
          
             major = major.lstrip('v') 
        

        
          
             if '-' in patch: 
        

        
          
               patch = patch.split('-')[0] 
        

        
          
               patch_pre = '{}-alpha'.format(int(patch.split('-')[0]) + 1) 
        

        
          
               full_version = ""{}.{}.{}"".format(major, minor, patch_pre) 
        

        
          
             else: 
        

        
          
               patch_pre = patch 
        

        
          
               full_version = ""{}.{}.{}"".format(major, minor, patch) 
        

        
          
             return ReleaseVersion(major=major, 
        

        
          
                                   minor=minor, 
        

        
          
                                   patch=patch, 
        

        
          
                                   patch_pre=patch_pre, 
        

        
          
                                   full_version=full_version)",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1130,2022-05-04T16:09:12Z,2022-05-17T14:38:14Z,2022-05-17T14:38:15Z,MERGED,True,40478,642,207,https://github.com/fpezzinosn,Add stubbed version of new Integrity Bounds/Flags [OTA-134],2,[],https://github.com/swift-nav/libsbp/pull/1130,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/1130#issuecomment-1125421139,"Description
@swift-nav/devinfra
Reserves the IDs associated with the Satellite Bounds messages that are defined in the staging branch.
API compatibility
Does this change introduce a API compatibility risk?
No
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-134","We need a couple things before we can merge:

an indication in the version when we're on a staging branch (something a -staging should be appended e.g. v4.2.0-g<git_short_hash>-staging).
a compiler macro in sbp.h that indicates if we're on a staging branch e.g. #define SBP_STAGING 1

We can implement here and merge master into staging or implement in master, then cherry pick to staging.
These facilities will be used when we cut a release of Starling and disable parsing of the new messages.

@silverjam Is this the correct place to append -staging so that it propagates everywhere?

  
    
      libsbp/generator/sbpg/generator.py
    
    
        Lines 87 to 101
      in
      e88fbd8
    
  
  
    

        
          
           def parse_release_version(release: str) -> ReleaseVersion: 
        

        
          
             major, minor, patch = release.split('.')[:3] 
        

        
          
             major = major.lstrip('v') 
        

        
          
             if '-' in patch: 
        

        
          
               patch = patch.split('-')[0] 
        

        
          
               patch_pre = '{}-alpha'.format(int(patch.split('-')[0]) + 1) 
        

        
          
               full_version = ""{}.{}.{}"".format(major, minor, patch_pre) 
        

        
          
             else: 
        

        
          
               patch_pre = patch 
        

        
          
               full_version = ""{}.{}.{}"".format(major, minor, patch) 
        

        
          
             return ReleaseVersion(major=major, 
        

        
          
                                   minor=minor, 
        

        
          
                                   patch=patch, 
        

        
          
                                   patch_pre=patch_pre, 
        

        
          
                                   full_version=full_version) 
        
    
  



Yes, this looks correct",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1130,2022-05-04T16:09:12Z,2022-05-17T14:38:14Z,2022-05-17T14:38:15Z,MERGED,True,40478,642,207,https://github.com/fpezzinosn,Add stubbed version of new Integrity Bounds/Flags [OTA-134],2,[],https://github.com/swift-nav/libsbp/pull/1130,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/1130#issuecomment-1128275023,"Description
@swift-nav/devinfra
Reserves the IDs associated with the Satellite Bounds messages that are defined in the staging branch.
API compatibility
Does this change introduce a API compatibility risk?
No
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-134",@fpezzinosn should be able to rebase and merge this PR now,True,{'THUMBS_UP': ['https://github.com/fpezzinosn']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1131,2022-05-05T13:19:45Z,2022-05-06T20:01:43Z,2022-05-06T20:01:44Z,MERGED,True,9789,564,66,https://github.com/fpezzinosn,Add Atmospheric Corrections and Bounds [OTA-120],4,[],https://github.com/swift-nav/libsbp/pull/1131,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1131,"Description
@swift-nav/devinfra
Added 3 new messages related to Atmospheric Corrections and Bounds

MSG_SSR_STEC_CORRECTION (new evolution of SBP 1531): One Message per Tile
MSG_SSR_GRIDDED_CORRECTION_BOUNDS (new extension of SBP 1532, TROPO + Residuals)
MSG_SSR_TILE_DEFINITION (new evolution of SBP 1526)

API compatibility
Does this change introduce a API compatibility risk?
No, just adding new messages.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-120","Description
@swift-nav/devinfra
Added 3 new messages related to Atmospheric Corrections and Bounds

MSG_SSR_STEC_CORRECTION (new evolution of SBP 1531): One Message per Tile
MSG_SSR_GRIDDED_CORRECTION_BOUNDS (new extension of SBP 1532, TROPO + Residuals)
MSG_SSR_TILE_DEFINITION (new evolution of SBP 1526)

API compatibility
Does this change introduce a API compatibility risk?
No, just adding new messages.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-120",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1132,2022-05-05T20:39:49Z,2022-05-11T17:18:23Z,2022-05-11T17:18:23Z,MERGED,True,14649,7,98,https://github.com/fpezzinosn,Add Integrity Flags messages [OTA-121],11,[],https://github.com/swift-nav/libsbp/pull/1132,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1132,"Description
@swift-nav/devinfra
These messages are:

MSG_SSR_FLAG_HIGH_LEVEL
MSG_SSR_FLAG_SATELLITES
MSG_SSR_FLAG_TROPO_GRID_POINTS
MSG_SSR_FLAG_IONO_GRID_POINTS
MSG_SSR_FLAG_IONO_TILE_SAT_LOS
MSG_SSR_FLAG_IONO_GRID_POINT_SAT_LOS

API compatibility
Does this change introduce a API compatibility risk?
No, just adding new messages to a new package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-121","Description
@swift-nav/devinfra
These messages are:

MSG_SSR_FLAG_HIGH_LEVEL
MSG_SSR_FLAG_SATELLITES
MSG_SSR_FLAG_TROPO_GRID_POINTS
MSG_SSR_FLAG_IONO_GRID_POINTS
MSG_SSR_FLAG_IONO_TILE_SAT_LOS
MSG_SSR_FLAG_IONO_GRID_POINT_SAT_LOS

API compatibility
Does this change introduce a API compatibility risk?
No, just adding new messages to a new package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-121",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1132,2022-05-05T20:39:49Z,2022-05-11T17:18:23Z,2022-05-11T17:18:23Z,MERGED,True,14649,7,98,https://github.com/fpezzinosn,Add Integrity Flags messages [OTA-121],11,[],https://github.com/swift-nav/libsbp/pull/1132,https://github.com/fpezzinosn,2,https://github.com/swift-nav/libsbp/pull/1132#issuecomment-1124037126,"Description
@swift-nav/devinfra
These messages are:

MSG_SSR_FLAG_HIGH_LEVEL
MSG_SSR_FLAG_SATELLITES
MSG_SSR_FLAG_TROPO_GRID_POINTS
MSG_SSR_FLAG_IONO_GRID_POINTS
MSG_SSR_FLAG_IONO_TILE_SAT_LOS
MSG_SSR_FLAG_IONO_GRID_POINT_SAT_LOS

API compatibility
Does this change introduce a API compatibility risk?
No, just adding new messages to a new package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-121","@fpezzinosn -- FYI, we need a follow-up task to review the PDF documentation for these messages, see https://github.com/swift-nav/libsbp/blob/staging/docs/sbp.pdf and check out the ""units"" columns in particular (mainly, the units need to very simple otherwise they'll overflow the layout in the PDF, so any ""usage notes"" or ""caveats"" for the units need to move into the message description).

Ok, will do. I'll also enable the others that are currently set as private to check how their documentation looks.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1133,2022-05-05T22:42:37Z,2022-05-06T00:14:07Z,2022-05-06T00:14:07Z,MERGED,True,23,23,4,https://github.com/adrian-kong,Converted structopt into clap,2,[],https://github.com/swift-nav/libsbp/pull/1133,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1133,"Description
@swift-nav/devinfra
Converted structopt into clap
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-702","Description
@swift-nav/devinfra
Converted structopt into clap
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-702",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1134,2022-05-05T23:50:20Z,2022-05-06T18:33:17Z,2022-05-06T18:33:18Z,MERGED,True,497,50,11,https://github.com/silverjam,validator: allow message deprecation,7,[],https://github.com/swift-nav/libsbp/pull/1134,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1134,"Description
@swift-nav/devinfra
See below.
API compatibility
Does this change introduce a API compatibility risk?
No, this message allows existing messages to be renamed with the _DEP or _DEP_A syntax so that they can be deprecated.
JIRA Reference
n/a -- see #1131 (cc @fpezzinosn)","Description
@swift-nav/devinfra
See below.
API compatibility
Does this change introduce a API compatibility risk?
No, this message allows existing messages to be renamed with the _DEP or _DEP_A syntax so that they can be deprecated.
JIRA Reference
n/a -- see #1131 (cc @fpezzinosn)",True,{'THUMBS_UP': ['https://github.com/fpezzinosn']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1134,2022-05-05T23:50:20Z,2022-05-06T18:33:17Z,2022-05-06T18:33:18Z,MERGED,True,497,50,11,https://github.com/silverjam,validator: allow message deprecation,7,[],https://github.com/swift-nav/libsbp/pull/1134,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1134#issuecomment-1119181218,"Description
@swift-nav/devinfra
See below.
API compatibility
Does this change introduce a API compatibility risk?
No, this message allows existing messages to be renamed with the _DEP or _DEP_A syntax so that they can be deprecated.
JIRA Reference
n/a -- see #1131 (cc @fpezzinosn)","@silverjam I might've given the thumbs up too quickly here.
If a message is deprecated, and another message takes it's place (name), does the new message still have to be backwards compat with the old one?
If not we might need to do more here. The messages are compared based on names, so after the validate_id check, it will still compare the fields of the name against the old name.
Edit: I looked at the PR and it looks like that new message is definitely not compatible with the old one.

New message doesn't need to be backwards compatible, but the old message (with the new name) needs to stay the same, so the same issue applies.

We'll probably have to modify this validator script so that it keys the definitions based on their ID's instead of their names.

I've update the tool to implement this, also applied black, mypy and pylint.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1134,2022-05-05T23:50:20Z,2022-05-06T18:33:17Z,2022-05-06T18:33:18Z,MERGED,True,497,50,11,https://github.com/silverjam,validator: allow message deprecation,7,[],https://github.com/swift-nav/libsbp/pull/1134,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1134#issuecomment-1119816794,"Description
@swift-nav/devinfra
See below.
API compatibility
Does this change introduce a API compatibility risk?
No, this message allows existing messages to be renamed with the _DEP or _DEP_A syntax so that they can be deprecated.
JIRA Reference
n/a -- see #1131 (cc @fpezzinosn)","Two things but otherwise looks good:

I was under the impression that appending fields to messages was legal?


Yeah, I think it might work, but I don't think we've tested it yet, so I was thinking we should make it ""illegal"" until we can verify that it works and doesn't cause issues.  There are certain types of ""appending"" that shouldn't legal, like having appending something after a variable sized array (but I don't think the generator will allow this either).


I thought it might be worthwhile to make the test case for a legal message deprecation change be the change that @fpezzinosn made in his PR. I was going to throw up a PR with that change on a different branch.


Ok, sounds good, I'm going to quickly test that this works with @fpezzinosn's branch before merging.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1134,2022-05-05T23:50:20Z,2022-05-06T18:33:17Z,2022-05-06T18:33:18Z,MERGED,True,497,50,11,https://github.com/silverjam,validator: allow message deprecation,7,[],https://github.com/swift-nav/libsbp/pull/1134,https://github.com/silverjam,4,https://github.com/swift-nav/libsbp/pull/1134#issuecomment-1119877252,"Description
@swift-nav/devinfra
See below.
API compatibility
Does this change introduce a API compatibility risk?
No, this message allows existing messages to be renamed with the _DEP or _DEP_A syntax so that they can be deprecated.
JIRA Reference
n/a -- see #1131 (cc @fpezzinosn)",@isaactorz Any concerns? If not can I get a quick ‚úÖ?,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1135,2022-05-06T00:00:29Z,2022-05-06T07:56:54Z,2022-05-06T07:56:54Z,MERGED,True,12,36,11,https://github.com/silverjam,ci: enable on staging branch,2,[],https://github.com/swift-nav/libsbp/pull/1135,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1135,"Description
@swift-nav/devinfra
Enable CI to run on the staging branch, remove the Docker CI check for now (we have a Jira to bring it back if it's really needed).
API compatibility
Does this change introduce a API compatibility risk?
No, just updating CI.
JIRA Reference
n/a related to the OTA project though","Description
@swift-nav/devinfra
Enable CI to run on the staging branch, remove the Docker CI check for now (we have a Jira to bring it back if it's really needed).
API compatibility
Does this change introduce a API compatibility risk?
No, just updating CI.
JIRA Reference
n/a related to the OTA project though",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1136,2022-05-06T17:16:52Z,2022-05-06T17:59:14Z,2022-05-06T17:59:14Z,MERGED,True,105,0,3,https://github.com/isaactorz,Add Motivating Test Case,2,[],https://github.com/swift-nav/libsbp/pull/1136,https://github.com/isaactorz,1,https://github.com/swift-nav/libsbp/pull/1136,"Adds the original error to the test suite for checking valid message deprications
Edit: I also noticed that I only had the spec validator on the paths to trigger the CI test. I added the test files to the path trigger as well.","Adds the original error to the test suite for checking valid message deprications
Edit: I also noticed that I only had the spec validator on the paths to trigger the CI test. I added the test files to the path trigger as well.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1137,2022-05-06T18:01:22Z,2022-05-06T21:18:50Z,2022-05-06T21:18:51Z,MERGED,True,3427,5,43,https://github.com/fpezzinosn,Add support for MSG_SSR_ORBIT_CLOCK_BOUNDS_DEGRADATION message [OTA-133],2,[],https://github.com/swift-nav/libsbp/pull/1137,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1137,"Description
@swift-nav/devinfra
Added MSG_SSR_ORBIT_CLOCK_BOUNDS_DEGRADATION message to ssr package.
API compatibility
Does this change introduce a API compatibility risk?
No, just added a new message to an existing package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-133","Description
@swift-nav/devinfra
Added MSG_SSR_ORBIT_CLOCK_BOUNDS_DEGRADATION message to ssr package.
API compatibility
Does this change introduce a API compatibility risk?
No, just added a new message to an existing package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-133",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1137,2022-05-06T18:01:22Z,2022-05-06T21:18:50Z,2022-05-06T21:18:51Z,MERGED,True,3427,5,43,https://github.com/fpezzinosn,Add support for MSG_SSR_ORBIT_CLOCK_BOUNDS_DEGRADATION message [OTA-133],2,[],https://github.com/swift-nav/libsbp/pull/1137,https://github.com/notoriaga,2,https://github.com/swift-nav/libsbp/pull/1137#issuecomment-1119923250,"Description
@swift-nav/devinfra
Added MSG_SSR_ORBIT_CLOCK_BOUNDS_DEGRADATION message to ssr package.
API compatibility
Does this change introduce a API compatibility risk?
No, just added a new message to an existing package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-133",Think you just need a make java and commit/push the changes,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1137,2022-05-06T18:01:22Z,2022-05-06T21:18:50Z,2022-05-06T21:18:51Z,MERGED,True,3427,5,43,https://github.com/fpezzinosn,Add support for MSG_SSR_ORBIT_CLOCK_BOUNDS_DEGRADATION message [OTA-133],2,[],https://github.com/swift-nav/libsbp/pull/1137,https://github.com/fpezzinosn,3,https://github.com/swift-nav/libsbp/pull/1137#issuecomment-1119926555,"Description
@swift-nav/devinfra
Added MSG_SSR_ORBIT_CLOCK_BOUNDS_DEGRADATION message to ssr package.
API compatibility
Does this change introduce a API compatibility risk?
No, just added a new message to an existing package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-133","Think you just need a make java and commit/push the changes

That's weird. I thought it was part of make all. I'll do that, thanks!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1138,2022-05-06T19:55:36Z,2022-05-07T06:55:18Z,2022-05-07T06:55:18Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Change to using alias target,1,[],https://github.com/swift-nav/libsbp/pull/1138,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1138,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  31604e72  ->  a4f91f7b

a4f91f7b  :  Change to using alias target
52ef1a33  :  Change Target Name
cd0ff55b  :  Change Optional Target

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10002/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  31604e72  ->  a4f91f7b

a4f91f7b  :  Change to using alias target
52ef1a33  :  Change Target Name
cd0ff55b  :  Change Optional Target

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10002/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1138,2022-05-06T19:55:36Z,2022-05-07T06:55:18Z,2022-05-07T06:55:18Z,CLOSED,False,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Change to using alias target,1,[],https://github.com/swift-nav/libsbp/pull/1138,https://github.com/RReichert,2,https://github.com/swift-nav/libsbp/pull/1138#issuecomment-1120149348,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  31604e72  ->  a4f91f7b

a4f91f7b  :  Change to using alias target
52ef1a33  :  Change Target Name
cd0ff55b  :  Change Optional Target

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10002/.",Already taken care of with recent cmake changes,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1139,2022-05-07T06:03:09Z,2022-05-07T06:40:08Z,2022-05-07T06:40:09Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Integrity unit tests framework (#111),1,[],https://github.com/swift-nav/libsbp/pull/1139,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1139,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  31604e72  ->  4c16386e

4c16386e  :  Integrity unit tests framework (#111)
a4f91f7b  :  Change to using alias target
52ef1a33  :  Change Target Name
cd0ff55b  :  Change Optional Target

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10009/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  31604e72  ->  4c16386e

4c16386e  :  Integrity unit tests framework (#111)
a4f91f7b  :  Change to using alias target
52ef1a33  :  Change Target Name
cd0ff55b  :  Change Optional Target

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10009/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1140,2022-05-09T00:41:23Z,2022-05-12T17:02:10Z,2022-05-12T17:02:11Z,CLOSED,False,22,66,2,https://github.com/adrian-kong,Python sbp2json unconsumed 4096 refactor,3,[],https://github.com/swift-nav/libsbp/pull/1140,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1140,"Description
Refactors sbp2json to use inbuilt handler to parse file,

fixes the unconsumed 4096 but doesn't terminate because file doesn't get closed?
also needs to use that iter method to manually iterate through to maintain the order
also differs from the rust version because the float have 9 extra digits

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510","Description
Refactors sbp2json to use inbuilt handler to parse file,

fixes the unconsumed 4096 but doesn't terminate because file doesn't get closed?
also needs to use that iter method to manually iterate through to maintain the order
also differs from the rust version because the float have 9 extra digits

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1140,2022-05-09T00:41:23Z,2022-05-12T17:02:10Z,2022-05-12T17:02:11Z,CLOSED,False,22,66,2,https://github.com/adrian-kong,Python sbp2json unconsumed 4096 refactor,3,[],https://github.com/swift-nav/libsbp/pull/1140,https://github.com/notoriaga,2,https://github.com/swift-nav/libsbp/pull/1140#issuecomment-1121427293,"Description
Refactors sbp2json to use inbuilt handler to parse file,

fixes the unconsumed 4096 but doesn't terminate because file doesn't get closed?
also needs to use that iter method to manually iterate through to maintain the order
also differs from the rust version because the float have 9 extra digits

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510","also differs from the rust version because the float have 9 extra digits


I think that should be expected, python only has 64 bit floats and rust has 32 and 64 so I imagine you're looking at a field that is actually supposed to be a 32 bit float",True,{'THUMBS_UP': ['https://github.com/adrian-kong']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1140,2022-05-09T00:41:23Z,2022-05-12T17:02:10Z,2022-05-12T17:02:11Z,CLOSED,False,22,66,2,https://github.com/adrian-kong,Python sbp2json unconsumed 4096 refactor,3,[],https://github.com/swift-nav/libsbp/pull/1140,https://github.com/silverjam,3,https://github.com/swift-nav/libsbp/pull/1140#issuecomment-1125225761,"Description
Refactors sbp2json to use inbuilt handler to parse file,

fixes the unconsumed 4096 but doesn't terminate because file doesn't get closed?
also needs to use that iter method to manually iterate through to maintain the order
also differs from the rust version because the float have 9 extra digits

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-510","Going to close this for now, we can re-open if we need to revisit this later",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1141,2022-05-09T10:19:46Z,2022-05-09T10:35:42Z,2022-05-09T10:35:42Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Removed enabled features (#113),1,[],https://github.com/swift-nav/libsbp/pull/1141,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1141,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  4c16386e  ->  93df75d4

93df75d4  :  Removed enabled features (#113)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10026/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  4c16386e  ->  93df75d4

93df75d4  :  Removed enabled features (#113)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10026/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1142,2022-05-10T02:57:28Z,2022-05-11T02:08:23Z,2022-05-11T04:19:23Z,MERGED,True,60,6,3,https://github.com/adrian-kong,Added input and output parameters to rust sbp2json,1,[],https://github.com/swift-nav/libsbp/pull/1142,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1142,"Description
--input and --output parameters to rust sbp2json, json2json, json2sbp
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-738","Description
--input and --output parameters to rust sbp2json, json2json, json2sbp
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-738",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1142,2022-05-10T02:57:28Z,2022-05-11T02:08:23Z,2022-05-11T04:19:23Z,MERGED,True,60,6,3,https://github.com/adrian-kong,Added input and output parameters to rust sbp2json,1,[],https://github.com/swift-nav/libsbp/pull/1142,https://github.com/adrian-kong,2,https://github.com/swift-nav/libsbp/pull/1142#issuecomment-1122977400,"Description
--input and --output parameters to rust sbp2json, json2json, json2sbp
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-738","is there a way to make clap do without the -- parameter? i just saw the comment on the ticket, would it have to instead use std::env::args hmm",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1142,2022-05-10T02:57:28Z,2022-05-11T02:08:23Z,2022-05-11T04:19:23Z,MERGED,True,60,6,3,https://github.com/adrian-kong,Added input and output parameters to rust sbp2json,1,[],https://github.com/swift-nav/libsbp/pull/1142,https://github.com/notoriaga,3,https://github.com/swift-nav/libsbp/pull/1142#issuecomment-1123018585,"Description
--input and --output parameters to rust sbp2json, json2json, json2sbp
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-738","is there a way to make clap do without the -- parameter? i just saw the comment on the ticket, would it have to instead use std::env::args hmm

yeah if you don't specify long/short it should be a positional argument instead of a flag",True,{'THUMBS_UP': ['https://github.com/adrian-kong']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1143,2022-05-11T05:14:11Z,2022-05-11T23:24:32Z,2022-05-11T23:24:33Z,MERGED,True,0,6,3,https://github.com/adrian-kong,sbp2json small usage comment fix,1,[],https://github.com/swift-nav/libsbp/pull/1143,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1143,"Description
Changes the comment for #1142","Description
Changes the comment for #1142",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1144,2022-05-12T13:14:23Z,2022-05-12T17:53:32Z,2022-05-12T17:53:32Z,MERGED,True,3425,4,40,https://github.com/fpezzinosn,Add transformation parameter message [OTA-149],3,[],https://github.com/swift-nav/libsbp/pull/1144,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1144,"Description
@swift-nav/devinfra
Add a new Frame Transformation message to the navigation package.
API compatibility
Does this change introduce a API compatibility risk?
No it doesn't. It adds a new message to an existing package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-149","Description
@swift-nav/devinfra
Add a new Frame Transformation message to the navigation package.
API compatibility
Does this change introduce a API compatibility risk?
No it doesn't. It adds a new message to an existing package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-149",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1145,2022-05-12T13:49:53Z,2022-05-13T17:11:36Z,2022-05-13T17:11:37Z,MERGED,True,2206,4,39,https://github.com/fpezzinosn,Add leap second message [OTA-148],3,[],https://github.com/swift-nav/libsbp/pull/1145,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1145,"Description
@swift-nav/devinfra
Add a new leap second message to the navigation package.
API compatibility
Does this change introduce a API compatibility risk?
No it doesn't. It adds a new message to an existing package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-148","Description
@swift-nav/devinfra
Add a new leap second message to the navigation package.
API compatibility
Does this change introduce a API compatibility risk?
No it doesn't. It adds a new message to an existing package.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-148",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1146,2022-05-12T22:11:53Z,2022-05-12T22:23:06Z,2022-05-12T22:23:30Z,MERGED,True,6,1,1,https://github.com/silverjam,make: add commands to detect staging,1,[],https://github.com/swift-nav/libsbp/pull/1146,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1146,"Description
Add commands to detect when we're on a staging branch
Example run from a master branch:
‚ùØ make version
SBP version: v4.2.0-15-gd85898d1
SBP is staging: 0

Example run from a staging branch:
‚ùØ make version
SBP version: v4.2.0-24-gafe6fb3d
SBP is staging: 1

Related PRs
#1130","Description
Add commands to detect when we're on a staging branch
Example run from a master branch:
‚ùØ make version
SBP version: v4.2.0-15-gd85898d1
SBP is staging: 0

Example run from a staging branch:
‚ùØ make version
SBP version: v4.2.0-24-gafe6fb3d
SBP is staging: 1

Related PRs
#1130",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1147,2022-05-16T22:09:54Z,2022-05-16T22:23:47Z,2022-05-16T22:42:08Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Upgrade Sonarcloud Functionality (#114),1,[],https://github.com/swift-nav/libsbp/pull/1147,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1147,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  93df75d4  ->  6320bbfa

6320bbfa  :  Upgrade Sonarcloud Functionality (swift-nav/cmake#114)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10121/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  93df75d4  ->  6320bbfa

6320bbfa  :  Upgrade Sonarcloud Functionality (swift-nav/cmake#114)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10121/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1148,2022-05-17T17:40:50Z,2022-05-17T17:47:32Z,2022-05-17T17:47:33Z,MERGED,True,1,0,2,https://github.com/fpezzinosn,hide stubbed messages from sbp.pdf,2,[],https://github.com/swift-nav/libsbp/pull/1148,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1148,"Description
@swift-nav/devinfra
Set the public false of stubbed messages to false so they don't show up in sbp.pdf
API compatibility
Does this change introduce a API compatibility risk?
No, just updating the docs
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/BOARD-XXXX","Description
@swift-nav/devinfra
Set the public false of stubbed messages to false so they don't show up in sbp.pdf
API compatibility
Does this change introduce a API compatibility risk?
No, just updating the docs
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/BOARD-XXXX",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1149,2022-05-18T22:53:53Z,2022-05-19T22:01:49Z,2022-05-19T22:01:50Z,MERGED,True,456,500,35,https://github.com/fpezzinosn,Clean up the documentation for the new messages [OTA-150],8,[],https://github.com/swift-nav/libsbp/pull/1149,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1149,"Description
@swift-nav/devinfra
Cleaned up the documentation for the new staged messages.
API compatibility
Does this change introduce a API compatibility risk?
No, just docstrings updates
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-150","Description
@swift-nav/devinfra
Cleaned up the documentation for the new staged messages.
API compatibility
Does this change introduce a API compatibility risk?
No, just docstrings updates
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-150",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1149,2022-05-18T22:53:53Z,2022-05-19T22:01:49Z,2022-05-19T22:01:50Z,MERGED,True,456,500,35,https://github.com/fpezzinosn,Clean up the documentation for the new messages [OTA-150],8,[],https://github.com/swift-nav/libsbp/pull/1149,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1149#issuecomment-1130717589,"Description
@swift-nav/devinfra
Cleaned up the documentation for the new staged messages.
API compatibility
Does this change introduce a API compatibility risk?
No, just docstrings updates
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-150","@silverjam After fixing the overflow in the units columns, the message structure table for MSG SSR GRIDDED CORRECTION BOUNDS, MSG SSR ORBIT CLOCK BOUNDS and MSG SSR ORBIT CLOCK BOUNDS DEGRADATION still clips the page. I guess a solution could be to write shorter descriptions, but then I'm afraid some information will be missing from the document.

We will need to customize rendering for these messages or move the information elsewhere.  Would it make sense to create a dedicated page/table that explains things in more detail or do we need to leave everything in this table?",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1149,2022-05-18T22:53:53Z,2022-05-19T22:01:49Z,2022-05-19T22:01:50Z,MERGED,True,456,500,35,https://github.com/fpezzinosn,Clean up the documentation for the new messages [OTA-150],8,[],https://github.com/swift-nav/libsbp/pull/1149,https://github.com/fpezzinosn,3,https://github.com/swift-nav/libsbp/pull/1149#issuecomment-1131899652,"Description
@swift-nav/devinfra
Cleaned up the documentation for the new staged messages.
API compatibility
Does this change introduce a API compatibility risk?
No, just docstrings updates
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-150","@silverjam After fixing the overflow in the units columns, the message structure table for MSG SSR GRIDDED CORRECTION BOUNDS, MSG SSR ORBIT CLOCK BOUNDS and MSG SSR ORBIT CLOCK BOUNDS DEGRADATION still clips the page. I guess a solution could be to write shorter descriptions, but then I'm afraid some information will be missing from the document.

We will need to customize rendering for these messages or move the information elsewhere. Would it make sense to create a dedicated page/table that explains things in more detail or do we need to leave everything in this table?

I've moved the repeated explanations to notes in the description and then added a See Note 1 for those. I also abbreviated some common terms. Now all the tables fit.",True,{'THUMBS_UP': ['https://github.com/silverjam']}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1149,2022-05-18T22:53:53Z,2022-05-19T22:01:49Z,2022-05-19T22:01:50Z,MERGED,True,456,500,35,https://github.com/fpezzinosn,Clean up the documentation for the new messages [OTA-150],8,[],https://github.com/swift-nav/libsbp/pull/1149,https://github.com/fpezzinosn,4,https://github.com/swift-nav/libsbp/pull/1149#issuecomment-1131903023,"Description
@swift-nav/devinfra
Cleaned up the documentation for the new staged messages.
API compatibility
Does this change introduce a API compatibility risk?
No, just docstrings updates
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-150","@isaactorz Do you know why the validator is failing at the GPS_LEAP_SECOND message? It says that the number of fields is changing, but I didn't modify that in this PR. I only modified docstrings.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1149,2022-05-18T22:53:53Z,2022-05-19T22:01:49Z,2022-05-19T22:01:50Z,MERGED,True,456,500,35,https://github.com/fpezzinosn,Clean up the documentation for the new messages [OTA-150],8,[],https://github.com/swift-nav/libsbp/pull/1149,https://github.com/silverjam,5,https://github.com/swift-nav/libsbp/pull/1149#issuecomment-1131962432,"Description
@swift-nav/devinfra
Cleaned up the documentation for the new staged messages.
API compatibility
Does this change introduce a API compatibility risk?
No, just docstrings updates
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-150","Did MSG_GPS_LEAP_SECOND change in this PR?
INFO:root:Processing Definition: 570 (current: MSG_GPS_LEAP_SECOND, previous: MSG_GPS_LEAP_SECOND)
...
RuntimeError: Breaking Message Mutation Detected!
Number of fields has changed!",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1149,2022-05-18T22:53:53Z,2022-05-19T22:01:49Z,2022-05-19T22:01:50Z,MERGED,True,456,500,35,https://github.com/fpezzinosn,Clean up the documentation for the new messages [OTA-150],8,[],https://github.com/swift-nav/libsbp/pull/1149,https://github.com/silverjam,6,https://github.com/swift-nav/libsbp/pull/1149#issuecomment-1131963621,"Description
@swift-nav/devinfra
Cleaned up the documentation for the new staged messages.
API compatibility
Does this change introduce a API compatibility risk?
No, just docstrings updates
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-150",Or... maybe need to add a special case for stubbed messages to the validator.,True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1150,2022-05-18T23:50:52Z,2022-05-19T00:12:08Z,2022-05-19T00:12:08Z,MERGED,True,1,1,1,https://github.com/swiftnav-svc-jenkins,Auto submodule update: cmake - Sonarcloud submodule inclusion fix (#115),1,[],https://github.com/swift-nav/libsbp/pull/1150,https://github.com/swiftnav-svc-jenkins,1,https://github.com/swift-nav/libsbp/pull/1150,"Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  6320bbfa  ->  63396d60

63396d60  :  Sonarcloud submodule inclusion fix (#115)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10175/.","Automated PR by Jenkins. If CI has passed successfully, merge away!
cmake  6320bbfa  ->  63396d60

63396d60  :  Sonarcloud submodule inclusion fix (#115)

This pull request was created by https://jenkins.ci.swift-nav.com/job/CI%20Infra/job/submodule-update/10175/.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1151,2022-05-19T20:08:01Z,2022-05-19T21:13:04Z,2022-05-19T21:13:05Z,MERGED,True,3,0,1,https://github.com/silverjam,validator: skip stubbed messages [OTA-150],1,[],https://github.com/swift-nav/libsbp/pull/1151,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1151,"Description
@swift-nav/devinfra
Tested on a staging branch PR:
INFO:root:Processing Definition: 570 (current: MSG_GPS_LEAP_SECOND, previous: MSG_GPS_LEAP_SECOND)
WARNING:root:Found stubbed message, skipping validation check...
INFO:root:Processing Definition: 580 (current: MSG_ITRF, previous: MSG_ITRF)
WARNING:root:Found stubbed message, skipping validation check...
INFO:root:Processing Package: swiftnav.sbp.settings

API compatibility
Does this change introduce a API compatibility risk? -> It introduces a change to the validator to allow stubbed messages to change without failing the PR checks.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan: stubbed messages are designed to change, so we don't need compatibility.
JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-150","Description
@swift-nav/devinfra
Tested on a staging branch PR:
INFO:root:Processing Definition: 570 (current: MSG_GPS_LEAP_SECOND, previous: MSG_GPS_LEAP_SECOND)
WARNING:root:Found stubbed message, skipping validation check...
INFO:root:Processing Definition: 580 (current: MSG_ITRF, previous: MSG_ITRF)
WARNING:root:Found stubbed message, skipping validation check...
INFO:root:Processing Package: swiftnav.sbp.settings

API compatibility
Does this change introduce a API compatibility risk? -> It introduces a change to the validator to allow stubbed messages to change without failing the PR checks.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan: stubbed messages are designed to change, so we don't need compatibility.
JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-150",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1152,2022-05-25T08:20:08Z,2022-05-25T22:42:25Z,2022-05-25T22:42:26Z,MERGED,True,18,14,5,https://github.com/silverjam,"add parallel tox, remove python 2.7 support [DEVINFRA-771]",1,[],https://github.com/swift-nav/libsbp/pull/1152,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1152,"Description
@swift-nav/devinfra


We can introduce tox parallel mode to speed up the test-python target in libsbp, but we‚Äôll need to upgrade the GHA job to use Ubuntu 20.04 to get a tox that‚Äôs new enough to run it


(Apparently) this exposes some bugs with Python 2.7 support in Ubuntu, this works locally but could not figure out a fix for GHA‚Ä¶ so I propose we try to drop support for this again, Python 2 has been obsolete/discontinued for 2 years now.  Removing support for Python 2.7 and Python 3.5 opens the door for us to introduce type annotations to our Python code.


API compatibility
Does this change introduce a API compatibility risk?  Does not introduce compatibility issues in SBP messages or the API but drops support for Python 2.7 and Python 3.5 (which are both obsolete).
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan: This is a ""wait and see"" compatibility plan, the last customer we had that was using Python 2 was able to migrate to Python 3 after some prodding, so hopefully we'll OK this time around.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-771","Description
@swift-nav/devinfra


We can introduce tox parallel mode to speed up the test-python target in libsbp, but we‚Äôll need to upgrade the GHA job to use Ubuntu 20.04 to get a tox that‚Äôs new enough to run it


(Apparently) this exposes some bugs with Python 2.7 support in Ubuntu, this works locally but could not figure out a fix for GHA‚Ä¶ so I propose we try to drop support for this again, Python 2 has been obsolete/discontinued for 2 years now.  Removing support for Python 2.7 and Python 3.5 opens the door for us to introduce type annotations to our Python code.


API compatibility
Does this change introduce a API compatibility risk?  Does not introduce compatibility issues in SBP messages or the API but drops support for Python 2.7 and Python 3.5 (which are both obsolete).
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan: This is a ""wait and see"" compatibility plan, the last customer we had that was using Python 2 was able to migrate to Python 3 after some prodding, so hopefully we'll OK this time around.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-771",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1152,2022-05-25T08:20:08Z,2022-05-25T22:42:25Z,2022-05-25T22:42:26Z,MERGED,True,18,14,5,https://github.com/silverjam,"add parallel tox, remove python 2.7 support [DEVINFRA-771]",1,[],https://github.com/swift-nav/libsbp/pull/1152,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1152#issuecomment-1137760656,"Description
@swift-nav/devinfra


We can introduce tox parallel mode to speed up the test-python target in libsbp, but we‚Äôll need to upgrade the GHA job to use Ubuntu 20.04 to get a tox that‚Äôs new enough to run it


(Apparently) this exposes some bugs with Python 2.7 support in Ubuntu, this works locally but could not figure out a fix for GHA‚Ä¶ so I propose we try to drop support for this again, Python 2 has been obsolete/discontinued for 2 years now.  Removing support for Python 2.7 and Python 3.5 opens the door for us to introduce type annotations to our Python code.


API compatibility
Does this change introduce a API compatibility risk?  Does not introduce compatibility issues in SBP messages or the API but drops support for Python 2.7 and Python 3.5 (which are both obsolete).
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan: This is a ""wait and see"" compatibility plan, the last customer we had that was using Python 2 was able to migrate to Python 3 after some prodding, so hopefully we'll OK this time around.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-771","Get's rid of python 2 basically?

Yes, updated the PR description and summary",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1153,2022-05-25T21:08:17Z,2022-05-26T17:43:08Z,2022-05-26T17:43:08Z,MERGED,True,79,324,10,https://github.com/silverjam,"docker: add back apt, focal only, tox fixes",10,[],https://github.com/swift-nav/libsbp/pull/1153,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1153,"Description
@swift-nav/devinfra
Previous docker image removed apt and a number of other things that are useful for debugging the image after the image has been built, so add these back.
In the interest of simplicity, only support focal for the build container.  The purpose of the build container is to provide a consistent build environment for generating bindings, not to provide a build recipe for a bunch of different Ubuntu releases.
Removes unused Docker build files, these haven't been used for a while.
API compatibility
Does this change introduce a API compatibility risk?  No.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-771","Description
@swift-nav/devinfra
Previous docker image removed apt and a number of other things that are useful for debugging the image after the image has been built, so add these back.
In the interest of simplicity, only support focal for the build container.  The purpose of the build container is to provide a consistent build environment for generating bindings, not to provide a build recipe for a bunch of different Ubuntu releases.
Removes unused Docker build files, these haven't been used for a while.
API compatibility
Does this change introduce a API compatibility risk?  No.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-771",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1153,2022-05-25T21:08:17Z,2022-05-26T17:43:08Z,2022-05-26T17:43:08Z,MERGED,True,79,324,10,https://github.com/silverjam,"docker: add back apt, focal only, tox fixes",10,[],https://github.com/swift-nav/libsbp/pull/1153,https://github.com/silverjam,2,https://github.com/swift-nav/libsbp/pull/1153#issuecomment-1138843551,"Description
@swift-nav/devinfra
Previous docker image removed apt and a number of other things that are useful for debugging the image after the image has been built, so add these back.
In the interest of simplicity, only support focal for the build container.  The purpose of the build container is to provide a consistent build environment for generating bindings, not to provide a build recipe for a bunch of different Ubuntu releases.
Removes unused Docker build files, these haven't been used for a while.
API compatibility
Does this change introduce a API compatibility risk?  No.
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-771","What was the reason for removing apt to begin with? Save size?

Possibly",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1154,2022-05-26T17:46:12Z,2022-05-26T18:35:01Z,2022-05-26T18:35:01Z,MERGED,True,0,10,2,https://github.com/silverjam,python: consolidate converage settings,1,[],https://github.com/swift-nav/libsbp/pull/1154,https://github.com/silverjam,1,https://github.com/swift-nav/libsbp/pull/1154,"Description
@swift-nav/devinfra

API compatibility
Does this change introduce a API compatibility risk?

API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-771","Description
@swift-nav/devinfra

API compatibility
Does this change introduce a API compatibility risk?

API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-771",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1155,2022-06-02T23:46:39Z,,2022-06-03T17:13:04Z,OPEN,False,2302,2196,86,https://github.com/fpezzinosn,Updates messages to ICD v1.2 [OTA-161],4,[],https://github.com/swift-nav/libsbp/pull/1155,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1155,"Description
@swift-nav/devinfra
Updates the name of two navigation messages to better reflect their purpose.
Also updates how the bitmask field should be interpreted in the Integrity Flags messages.
There is also an update on how to interpret the Bound values for the Orbit and Clock Bound message.
API compatibility
There's no change in the fields of the messages themselves, only on how the data should be interpreted.

API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-161","Description
@swift-nav/devinfra
Updates the name of two navigation messages to better reflect their purpose.
Also updates how the bitmask field should be interpreted in the Integrity Flags messages.
There is also an update on how to interpret the Bound values for the Orbit and Clock Bound message.
API compatibility
There's no change in the fields of the messages themselves, only on how the data should be interpreted.

API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-161",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1156,2022-06-02T23:46:48Z,,2022-06-03T21:15:32Z,OPEN,False,2331,2163,74,https://github.com/fpezzinosn,Update navigation stubbed msgs names [OTA-161],9,[],https://github.com/swift-nav/libsbp/pull/1156,https://github.com/fpezzinosn,1,https://github.com/swift-nav/libsbp/pull/1156,"Description
@swift-nav/devinfra
Updates the names of two of the stubbed navigation messages.
GPSLeapSecond -> UTCLeapSecond
ITRF -> FrameTransformationParams
This are more appropriate names for the proposed new messages.
API compatibility
Does this change introduce a API compatibility risk?
Two messages are changing names, but since they are stubbed messages not yet published, no one should be consuming them.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-161","Description
@swift-nav/devinfra
Updates the names of two of the stubbed navigation messages.
GPSLeapSecond -> UTCLeapSecond
ITRF -> FrameTransformationParams
This are more appropriate names for the proposed new messages.
API compatibility
Does this change introduce a API compatibility risk?
Two messages are changing names, but since they are stubbed messages not yet published, no one should be consuming them.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-161",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1156,2022-06-02T23:46:48Z,,2022-06-03T21:15:32Z,OPEN,False,2331,2163,74,https://github.com/fpezzinosn,Update navigation stubbed msgs names [OTA-161],9,[],https://github.com/swift-nav/libsbp/pull/1156,https://github.com/fpezzinosn,2,https://github.com/swift-nav/libsbp/pull/1156#issuecomment-1145992137,"Description
@swift-nav/devinfra
Updates the names of two of the stubbed navigation messages.
GPSLeapSecond -> UTCLeapSecond
ITRF -> FrameTransformationParams
This are more appropriate names for the proposed new messages.
API compatibility
Does this change introduce a API compatibility risk?
Two messages are changing names, but since they are stubbed messages not yet published, no one should be consuming them.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-161","The generated artifacts is failing at the make html-python step. There isn't any useful error message in GA, but when running in my local docker image I get:
Extension error:
Could not import extension sphinxcontrib.spelling (exception: The 'enchant' C library was not found and maybe needs to be installed.
See  https://pyenchant.github.io/pyenchant/install.html
for details
)

This was solved by installing python-enchant.
The other check that is failing is sonarcloud. It doesn't like the how one of the functions in the template is using var to create a variable. It's marking that as a code smell.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1156,2022-06-02T23:46:48Z,,2022-06-03T21:15:32Z,OPEN,False,2331,2163,74,https://github.com/fpezzinosn,Update navigation stubbed msgs names [OTA-161],9,[],https://github.com/swift-nav/libsbp/pull/1156,https://github.com/fpezzinosn,3,https://github.com/swift-nav/libsbp/pull/1156#issuecomment-1146368060,"Description
@swift-nav/devinfra
Updates the names of two of the stubbed navigation messages.
GPSLeapSecond -> UTCLeapSecond
ITRF -> FrameTransformationParams
This are more appropriate names for the proposed new messages.
API compatibility
Does this change introduce a API compatibility risk?
Two messages are changing names, but since they are stubbed messages not yet published, no one should be consuming them.
API compatibility plan
If the above is ""Yes"", please detail the compatibility (or migration) plan:

JIRA Reference
https://swift-nav.atlassian.net/browse/OTA-161","I fixed the sonarcloud check by updating the javascript template to use let instead of var.
And regarding the target html-python, Sphinx had language set to None, which raised a warning that was treated as error. I fixed this by setting the language to English
Now there's a new failure related to py36-sbp2json-construct2_9_33 and only that target, all the other python runs pass.",True,{}
swift-nav/libsbp,https://github.com/swift-nav/libsbp,1157,2022-06-03T05:47:00Z,,2022-06-03T05:47:29Z,OPEN,False,2,2,2,https://github.com/adrian-kong,Python 3.10 update [DEVINFRA-769],2,[],https://github.com/swift-nav/libsbp/pull/1157,https://github.com/adrian-kong,1,https://github.com/swift-nav/libsbp/pull/1157,"Description
@swift-nav/devinfra
Releases sbp v4.3.2 so python 3.10 shows on languages in sbp
https://pypi.org/project/sbp/
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-769","Description
@swift-nav/devinfra
Releases sbp v4.3.2 so python 3.10 shows on languages in sbp
https://pypi.org/project/sbp/
JIRA Reference
https://swift-nav.atlassian.net/browse/DEVINFRA-769",True,{}
