openhpc/ohpc,https://github.com/openhpc/ohpc,186,2016-03-02T19:18:55Z,2016-03-02T19:19:18Z,2017-05-25T21:49:39Z,MERGED,True,237,0,2,https://github.com/crbaird,Issue 182,22,[],https://github.com/openhpc/ohpc/pull/186,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/186,merging shine and clustershell in to 1.1:Factory,merging shine and clustershell in to 1.1:Factory,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,193,2016-03-14T10:13:18Z,2016-03-28T13:23:06Z,2016-09-12T20:48:26Z,CLOSED,False,1,1,1,https://github.com/LaHaine,enable Gridengine (issue #192),1,['enhancement'],https://github.com/openhpc/ohpc/pull/193,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/193,This fixes issue #192 by enabling SGE/gridengine support,This fixes issue #192 by enabling SGE/gridengine support,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,193,2016-03-14T10:13:18Z,2016-03-28T13:23:06Z,2016-09-12T20:48:26Z,CLOSED,False,1,1,1,https://github.com/LaHaine,enable Gridengine (issue #192),1,['enhancement'],https://github.com/openhpc/ohpc/pull/193,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/193#issuecomment-202389019,This fixes issue #192 by enabling SGE/gridengine support,Merged onto 1.1 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,209,2016-04-09T10:43:37Z,2016-05-23T17:08:36Z,2016-05-23T17:08:36Z,CLOSED,False,14249,2453,171,https://github.com/surak,Issue 178,174,[],https://github.com/openhpc/ohpc/pull/209,https://github.com/surak,1,https://github.com/openhpc/ohpc/pull/209,commit 1700084,commit 1700084,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,209,2016-04-09T10:43:37Z,2016-05-23T17:08:36Z,2016-05-23T17:08:36Z,CLOSED,False,14249,2453,171,https://github.com/surak,Issue 178,174,[],https://github.com/openhpc/ohpc/pull/209,https://github.com/surak,2,https://github.com/openhpc/ohpc/pull/209#issuecomment-207788781,commit 1700084,Commit #6e1fdc2,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,209,2016-04-09T10:43:37Z,2016-05-23T17:08:36Z,2016-05-23T17:08:36Z,CLOSED,False,14249,2453,171,https://github.com/surak,Issue 178,174,[],https://github.com/openhpc/ohpc/pull/209,https://github.com/surak,3,https://github.com/openhpc/ohpc/pull/209#issuecomment-210407788,commit 1700084,Ping,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,209,2016-04-09T10:43:37Z,2016-05-23T17:08:36Z,2016-05-23T17:08:36Z,CLOSED,False,14249,2453,171,https://github.com/surak,Issue 178,174,[],https://github.com/openhpc/ohpc/pull/209,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/209#issuecomment-212141984,commit 1700084,Sorry for the delay - will get back to the cube work a bit later this week....,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,209,2016-04-09T10:43:37Z,2016-05-23T17:08:36Z,2016-05-23T17:08:36Z,CLOSED,False,14249,2453,171,https://github.com/surak,Issue 178,174,[],https://github.com/openhpc/ohpc/pull/209,https://github.com/surak,5,https://github.com/openhpc/ohpc/pull/209#issuecomment-220965612,commit 1700084,Any news? It still shows as open....,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,209,2016-04-09T10:43:37Z,2016-05-23T17:08:36Z,2016-05-23T17:08:36Z,CLOSED,False,14249,2453,171,https://github.com/surak,Issue 178,174,[],https://github.com/openhpc/ohpc/pull/209,https://github.com/koomie,6,https://github.com/openhpc/ohpc/pull/209#issuecomment-221031745,commit 1700084,"Doh, sorry I dropped the ball on that. I merged onto the issue_178 branch.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,214,2016-04-12T14:30:36Z,2016-04-13T15:02:45Z,2016-09-12T20:48:27Z,MERGED,True,1,0,1,https://github.com/LaHaine,add a build dep on librdmacm-devel to enable RDMA CM support,1,['enhancement'],https://github.com/openhpc/ohpc/pull/214,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/214,I've noticed that the ohpc builds of mvapich2 don't support RDMA CM. It is possible to enable it by adding a build dep on librdmacm-devel.,I've noticed that the ohpc builds of mvapich2 don't support RDMA CM. It is possible to enable it by adding a build dep on librdmacm-devel.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,214,2016-04-12T14:30:36Z,2016-04-13T15:02:45Z,2016-09-12T20:48:27Z,MERGED,True,1,0,1,https://github.com/LaHaine,add a build dep on librdmacm-devel to enable RDMA CM support,1,['enhancement'],https://github.com/openhpc/ohpc/pull/214,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/214#issuecomment-209503339,I've noticed that the ohpc builds of mvapich2 don't support RDMA CM. It is possible to enable it by adding a build dep on librdmacm-devel.,"Thanks for the addition and doing the PR against 1.1_Factory. I landed it on 1.1 and the rebuilds are kicking off now. Assuming there are no issues arising from tests running in CI, we'll squeeze this in for 1.1.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,215,2016-04-13T00:58:56Z,2016-04-13T00:59:44Z,2016-04-13T00:59:44Z,CLOSED,False,20,24,3,https://github.com/epnduque,Master,3,[],https://github.com/openhpc/ohpc/pull/215,https://github.com/epnduque,1,https://github.com/openhpc/ohpc/pull/215,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,217,2016-04-14T09:23:08Z,2016-04-14T12:53:57Z,2016-09-12T20:48:27Z,CLOSED,False,1,0,1,https://github.com/jakub-d,Add NM_CONTROLLED=no option to ifcfg-ib0 ,1,[],https://github.com/openhpc/ohpc/pull/217,https://github.com/jakub-d,1,https://github.com/openhpc/ohpc/pull/217,"Fixes interface initialization on RHEL7.2.
The pdf guide specifies (page 9 for 1.1 Centos7.2 installation):
[sms]# cp /opt/ohpc/pub/examples/network/centos/ifcfg-ib0 /etc/sysconfig/network-scripts

The template file is missing the NM_CONTROLLED=no entry. Without this entry, the interface is not initialized properly.","Fixes interface initialization on RHEL7.2.
The pdf guide specifies (page 9 for 1.1 Centos7.2 installation):
[sms]# cp /opt/ohpc/pub/examples/network/centos/ifcfg-ib0 /etc/sysconfig/network-scripts

The template file is missing the NM_CONTROLLED=no entry. Without this entry, the interface is not initialized properly.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,217,2016-04-14T09:23:08Z,2016-04-14T12:53:57Z,2016-09-12T20:48:27Z,CLOSED,False,1,0,1,https://github.com/jakub-d,Add NM_CONTROLLED=no option to ifcfg-ib0 ,1,[],https://github.com/openhpc/ohpc/pull/217,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/217#issuecomment-209926225,"Fixes interface initialization on RHEL7.2.
The pdf guide specifies (page 9 for 1.1 Centos7.2 installation):
[sms]# cp /opt/ohpc/pub/examples/network/centos/ifcfg-ib0 /etc/sysconfig/network-scripts

The template file is missing the NM_CONTROLLED=no entry. Without this entry, the interface is not initialized properly.",Thanks for the addition. Landed this PR on 1.1 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,234,2016-06-01T03:38:54Z,2016-06-16T19:40:12Z,2016-06-16T19:40:12Z,CLOSED,False,4,1,1,https://github.com/nirmalasrjn,Optimize slurm config,3,"['enhancement', 't:rms', 'built']",https://github.com/openhpc/ohpc/pull/234,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/234,"FastSchedule directive has the default value of 1 which permits fast scheduling. However if a node has less than the configured resources, it will be set to DRAIN, which means, the node will finish the currently running job. But no further jobs will be scheduled on that node. When FastSchedule is set to 0, scheduling decisions are made based on actual configuration of each individual node.","FastSchedule directive has the default value of 1 which permits fast scheduling. However if a node has less than the configured resources, it will be set to DRAIN, which means, the node will finish the currently running job. But no further jobs will be scheduled on that node. When FastSchedule is set to 0, scheduling decisions are made based on actual configuration of each individual node.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,234,2016-06-01T03:38:54Z,2016-06-16T19:40:12Z,2016-06-16T19:40:12Z,CLOSED,False,4,1,1,https://github.com/nirmalasrjn,Optimize slurm config,3,"['enhancement', 't:rms', 'built']",https://github.com/openhpc/ohpc/pull/234,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/234#issuecomment-223593325,"FastSchedule directive has the default value of 1 which permits fast scheduling. However if a node has less than the configured resources, it will be set to DRAIN, which means, the node will finish the currently running job. But no further jobs will be scheduled on that node. When FastSchedule is set to 0, scheduling decisions are made based on actual configuration of each individual node.",Quick question. Do you know if you can avoid having to specify node configuration details in slurm.conf if you adopt FastSchedule=0?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,234,2016-06-01T03:38:54Z,2016-06-16T19:40:12Z,2016-06-16T19:40:12Z,CLOSED,False,4,1,1,https://github.com/nirmalasrjn,Optimize slurm config,3,"['enhancement', 't:rms', 'built']",https://github.com/openhpc/ohpc/pull/234,https://github.com/nirmalasrjn,3,https://github.com/openhpc/ohpc/pull/234#issuecomment-223601715,"FastSchedule directive has the default value of 1 which permits fast scheduling. However if a node has less than the configured resources, it will be set to DRAIN, which means, the node will finish the currently running job. But no further jobs will be scheduled on that node. When FastSchedule is set to 0, scheduling decisions are made based on actual configuration of each individual node.","As far as I know, it does not eliminate the need to specify node configuration details in slurm.conf. When I use the FastSchedule directive, I put in node configuration details too.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,234,2016-06-01T03:38:54Z,2016-06-16T19:40:12Z,2016-06-16T19:40:12Z,CLOSED,False,4,1,1,https://github.com/nirmalasrjn,Optimize slurm config,3,"['enhancement', 't:rms', 'built']",https://github.com/openhpc/ohpc/pull/234,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/234#issuecomment-223692683,"FastSchedule directive has the default value of 1 which permits fast scheduling. However if a node has less than the configured resources, it will be set to DRAIN, which means, the node will finish the currently running job. But no further jobs will be scheduled on that node. When FastSchedule is set to 0, scheduling decisions are made based on actual configuration of each individual node.","So, if the node does not match the configuration that is called out in the slum.conf file, is there a reason to not want it to be set to DRAIN?  If you didn't have to create the node entries by using FastSchedule=0, that would be an advantage in my mind, but if not, I'm not sure one is necessarily better than the other.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,234,2016-06-01T03:38:54Z,2016-06-16T19:40:12Z,2016-06-16T19:40:12Z,CLOSED,False,4,1,1,https://github.com/nirmalasrjn,Optimize slurm config,3,"['enhancement', 't:rms', 'built']",https://github.com/openhpc/ohpc/pull/234,https://github.com/JohnWestlund,5,https://github.com/openhpc/ohpc/pull/234#issuecomment-223696944,"FastSchedule directive has the default value of 1 which permits fast scheduling. However if a node has less than the configured resources, it will be set to DRAIN, which means, the node will finish the currently running job. But no further jobs will be scheduled on that node. When FastSchedule is set to 0, scheduling decisions are made based on actual configuration of each individual node.","That’s correct.  Nodes within a pool should be homogenenous and be correctly defined in the slurm.conf so they can be allocated based on a jobs constraints. If a pool is heterogenous you’re asking for performance and results to be possibly highly variable – but the resource manager should still have the correct definition of the resources. You might be able to get by with an incorrect core count but there are other node features that impose a much harder limit (memory, etc).
At the end of the day this is not something that should be changing often – your slurm.conf should be relatively stable. And if suddenly something is mismatched you probably want to know about it.
John
From: Karl W. Schulz [mailto:notifications@github.com]
Sent: Friday, June 3, 2016 1:58 PM
To: openhpc/ohpc ohpc@noreply.github.com
Subject: Re: [openhpc/ohpc] Optimize slurm config (#234)
So, if the node does not match the configuration that is called out in the slum.conf file, is there a reason to not want it to be set to DRAIN? If you didn't have to create the node entries by using FastSchedule=0, that would be an advantage in my mind, but if not, I'm not sure one is necessarily better than the other.
—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHubhttps://github.com//pull/234#issuecomment-223692683, or mute the threadhttps://github.com/notifications/unsubscribe/AFP7vxIUmOoS7AMsqJUv1kRBm74ms_qCks5qIJU-gaJpZM4IrKKx.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,234,2016-06-01T03:38:54Z,2016-06-16T19:40:12Z,2016-06-16T19:40:12Z,CLOSED,False,4,1,1,https://github.com/nirmalasrjn,Optimize slurm config,3,"['enhancement', 't:rms', 'built']",https://github.com/openhpc/ohpc/pull/234,https://github.com/koomie,6,https://github.com/openhpc/ohpc/pull/234#issuecomment-225014547,"FastSchedule directive has the default value of 1 which permits fast scheduling. However if a node has less than the configured resources, it will be set to DRAIN, which means, the node will finish the currently running job. But no further jobs will be scheduled on that node. When FastSchedule is set to 0, scheduling decisions are made based on actual configuration of each individual node.",Landed the the latest which updates the ReturnToService directive onto 1.1.1 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,234,2016-06-01T03:38:54Z,2016-06-16T19:40:12Z,2016-06-16T19:40:12Z,CLOSED,False,4,1,1,https://github.com/nirmalasrjn,Optimize slurm config,3,"['enhancement', 't:rms', 'built']",https://github.com/openhpc/ohpc/pull/234,https://github.com/koomie,7,https://github.com/openhpc/ohpc/pull/234#issuecomment-225280963,"FastSchedule directive has the default value of 1 which permits fast scheduling. However if a node has less than the configured resources, it will be set to DRAIN, which means, the node will finish the currently running job. But no further jobs will be scheduled on that node. When FastSchedule is set to 0, scheduling decisions are made based on actual configuration of each individual node.",Re-opening to enable build for 1.1,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,234,2016-06-01T03:38:54Z,2016-06-16T19:40:12Z,2016-06-16T19:40:12Z,CLOSED,False,4,1,1,https://github.com/nirmalasrjn,Optimize slurm config,3,"['enhancement', 't:rms', 'built']",https://github.com/openhpc/ohpc/pull/234,https://github.com/koomie,8,https://github.com/openhpc/ohpc/pull/234#issuecomment-226591406,"FastSchedule directive has the default value of 1 which permits fast scheduling. However if a node has less than the configured resources, it will be set to DRAIN, which means, the node will finish the currently running job. But no further jobs will be scheduled on that node. When FastSchedule is set to 0, scheduling decisions are made based on actual configuration of each individual node.",Confirmed ReturnToService=1 setting applied during CI install. Closing this out.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,235,2016-06-01T04:04:37Z,2016-06-03T14:13:47Z,2016-06-10T19:53:22Z,CLOSED,False,8,4,1,https://github.com/nirmalasrjn,Fix for Issue # 213,1,['enhancement'],https://github.com/openhpc/ohpc/pull/235,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/235,"As suggested by Scott Suchyta, appending memlock settings before # End of file","As suggested by Scott Suchyta, appending memlock settings before # End of file",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,235,2016-06-01T04:04:37Z,2016-06-03T14:13:47Z,2016-06-10T19:53:22Z,CLOSED,False,8,4,1,https://github.com/nirmalasrjn,Fix for Issue # 213,1,['enhancement'],https://github.com/openhpc/ohpc/pull/235,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/235#issuecomment-223589884,"As suggested by Scott Suchyta, appending memlock settings before # End of file",Landed patch onto 1.1.1. branch.  Thanks.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,236,2016-06-10T02:35:04Z,2016-06-10T19:52:45Z,2016-06-10T19:52:45Z,CLOSED,False,2,2,2,https://github.com/nirmalasrjn,Enable NFS at boot time,3,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/236,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/236,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,236,2016-06-10T02:35:04Z,2016-06-10T19:52:45Z,2016-06-10T19:52:45Z,CLOSED,False,2,2,2,https://github.com/nirmalasrjn,Enable NFS at boot time,3,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/236,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/236#issuecomment-225279426,,Landed onto 1.1.1 branch.  Thanks @nirmalasrjn .,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,238,2016-06-21T16:58:28Z,2016-06-21T17:04:54Z,2016-06-21T17:04:54Z,CLOSED,False,7999,8669,272,https://github.com/nirmalasrjn,Update from Original,288,[],https://github.com/openhpc/ohpc/pull/238,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/238,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,240,2016-06-22T17:37:58Z,2017-01-09T18:45:54Z,2017-01-11T16:23:06Z,CLOSED,False,6,5,3,https://github.com/nirmalasrjn,Resolves Issue#239,2,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/240,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/240,"To remove hard-coding changed compute_regex variable to point to just
the node prefix.Made appropriate changes to wwsh provision set commands and
stateful provisioning commands where the compute_regex variable has been referenced.","To remove hard-coding changed compute_regex variable to point to just
the node prefix.Made appropriate changes to wwsh provision set commands and
stateful provisioning commands where the compute_regex variable has been referenced.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,240,2016-06-22T17:37:58Z,2017-01-09T18:45:54Z,2017-01-11T16:23:06Z,CLOSED,False,6,5,3,https://github.com/nirmalasrjn,Resolves Issue#239,2,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/240,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/240#issuecomment-233179167,"To remove hard-coding changed compute_regex variable to point to just
the node prefix.Made appropriate changes to wwsh provision set commands and
stateful provisioning commands where the compute_regex variable has been referenced.","Looking at this, I see now why you altered the use of ${compute_regex} in PR #253.  However, I think we need to be careful here. Your redefinition in this PR means that the variable is no longer defining a legitimate regex. At a minimum, the variable would likely need to be renamed to try and minimize confusion, but there are many times when having a regex that covers all compute names is very useful, so I would be in favor of not going this route.
Just thinking out loud here, perhaps an alternative solution would be to introduce another input variable that encapsulates the compute node delimiter.  Say something like:
compute_delim=""${compute_delim:-c}""
or
compute_prefix=${compute_prefix:-c}""
and leave compute_regex as per its original intent.  What do you think about this approach?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,240,2016-06-22T17:37:58Z,2017-01-09T18:45:54Z,2017-01-11T16:23:06Z,CLOSED,False,6,5,3,https://github.com/nirmalasrjn,Resolves Issue#239,2,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/240,https://github.com/nirmalasrjn,3,https://github.com/openhpc/ohpc/pull/240#issuecomment-234089847,"To remove hard-coding changed compute_regex variable to point to just
the node prefix.Made appropriate changes to wwsh provision set commands and
stateful provisioning commands where the compute_regex variable has been referenced.",I agree that it is good to have a regex that covers all compute nodes. I will go with your suggestion to add a new variable. I will do that and resubmit the pull request. Thank you,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,240,2016-06-22T17:37:58Z,2017-01-09T18:45:54Z,2017-01-11T16:23:06Z,CLOSED,False,6,5,3,https://github.com/nirmalasrjn,Resolves Issue#239,2,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/240,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/240#issuecomment-236587115,"To remove hard-coding changed compute_regex variable to point to just
the node prefix.Made appropriate changes to wwsh provision set commands and
stateful provisioning commands where the compute_regex variable has been referenced.",Thanks for updating. Landed on 1.1.2 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,241,2016-06-22T20:57:30Z,2016-08-01T13:56:57Z,2016-08-01T13:56:57Z,CLOSED,False,5,5,2,https://github.com/nirmalasrjn,Resolves Issue#239 Modified Sles12sp1 specific files,2,['enhancement'],https://github.com/openhpc/ohpc/pull/241,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/241,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,241,2016-06-22T20:57:30Z,2016-08-01T13:56:57Z,2016-08-01T13:56:57Z,CLOSED,False,5,5,2,https://github.com/nirmalasrjn,Resolves Issue#239 Modified Sles12sp1 specific files,2,['enhancement'],https://github.com/openhpc/ohpc/pull/241,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/241#issuecomment-236587455,,Thanks for the update. Landed on 1.1.2 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,242,2016-06-24T16:43:21Z,2016-06-29T20:13:12Z,2016-07-20T18:51:44Z,CLOSED,False,1,1,1,https://github.com/oere,Update intel-compilers-devel.spec,1,[],https://github.com/openhpc/ohpc/pull/242,https://github.com/oere,1,https://github.com/openhpc/ohpc/pull/242,Typo in summary of the package.,Typo in summary of the package.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,242,2016-06-24T16:43:21Z,2016-06-29T20:13:12Z,2016-07-20T18:51:44Z,CLOSED,False,1,1,1,https://github.com/oere,Update intel-compilers-devel.spec,1,[],https://github.com/openhpc/ohpc/pull/242,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/242#issuecomment-229474069,Typo in summary of the package.,Thanks for the catch. Landed on 1.1.2 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,244,2016-06-24T20:53:36Z,,2018-04-23T18:10:00Z,OPEN,False,3,1,1,https://github.com/nirmalasrjn,Adds head node as nameserver of compute nodes,1,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/244,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/244,Issue #243,Issue #243,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,244,2016-06-24T20:53:36Z,,2018-04-23T18:10:00Z,OPEN,False,3,1,1,https://github.com/nirmalasrjn,Adds head node as nameserver of compute nodes,1,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/244,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/244#issuecomment-233178370,Issue #243,Landed onto 1.1.2 branch.  Thanks.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,244,2016-06-24T20:53:36Z,,2018-04-23T18:10:00Z,OPEN,False,3,1,1,https://github.com/nirmalasrjn,Adds head node as nameserver of compute nodes,1,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/244,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/244#issuecomment-271424271,Issue #243,"I think we need to think about this one some more and will push to the 1.3 milestone. My concern is that the administrator may have already put reasonable settings for DNS in /etc/resolv.conf. And, they may prefer to resolve via something other than ${sms_name} which was the motivation for suggesting to copy from /etc/resolv.conf in the first place. If we go this route, should probably consider defining a variable for dns resolution and search.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,244,2016-06-24T20:53:36Z,,2018-04-23T18:10:00Z,OPEN,False,3,1,1,https://github.com/nirmalasrjn,Adds head node as nameserver of compute nodes,1,"['enhancement', 'documentation']",https://github.com/openhpc/ohpc/pull/244,https://github.com/crbaird,4,https://github.com/openhpc/ohpc/pull/244#issuecomment-380880721,Issue #243,"Hi @nirmalasrjn. This PR has stalled a bit. Would you have interest in updating it and adding some DNS variables to inputs.tex and re-basing to the 1.3.5 branch, or can it just be closed?
Thanks",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,247,2016-06-24T22:39:28Z,2017-01-09T15:10:03Z,2017-01-09T15:10:03Z,CLOSED,False,4,8,1,https://github.com/nirmalasrjn,Fix syntax error in PR#235 to resolve issue#213,1,"['bug', 'documentation']",https://github.com/openhpc/ohpc/pull/247,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/247,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,247,2016-06-24T22:39:28Z,2017-01-09T15:10:03Z,2017-01-09T15:10:03Z,CLOSED,False,4,8,1,https://github.com/nirmalasrjn,Fix syntax error in PR#235 to resolve issue#213,1,"['bug', 'documentation']",https://github.com/openhpc/ohpc/pull/247,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/247#issuecomment-233178504,,Landed on 1.1.2 branch. Thanks.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,249,2016-06-26T06:16:37Z,2017-01-09T13:38:19Z,2017-01-09T13:38:39Z,CLOSED,False,1,1,1,https://github.com/nirmalasrjn,Fix for Issue#248,1,['documentation'],https://github.com/openhpc/ohpc/pull/249,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/249,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,249,2016-06-26T06:16:37Z,2017-01-09T13:38:19Z,2017-01-09T13:38:39Z,CLOSED,False,1,1,1,https://github.com/nirmalasrjn,Fix for Issue#248,1,['documentation'],https://github.com/openhpc/ohpc/pull/249,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/249#issuecomment-233177993,,Landed on 1.1.2 branch. Thanks.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,249,2016-06-26T06:16:37Z,2017-01-09T13:38:19Z,2017-01-09T13:38:39Z,CLOSED,False,1,1,1,https://github.com/nirmalasrjn,Fix for Issue#248,1,['documentation'],https://github.com/openhpc/ohpc/pull/249,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/249#issuecomment-271286057,,Re-landed on 1.2.1 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,250,2016-06-26T06:32:09Z,2017-01-06T20:53:33Z,2017-01-06T20:53:33Z,CLOSED,False,1,0,1,https://github.com/nirmalasrjn,Add master ip address to /etc/hosts (issue#153),1,['documentation'],https://github.com/openhpc/ohpc/pull/250,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/250,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,250,2016-06-26T06:32:09Z,2017-01-06T20:53:33Z,2017-01-06T20:53:33Z,CLOSED,False,1,0,1,https://github.com/nirmalasrjn,Add master ip address to /etc/hosts (issue#153),1,['documentation'],https://github.com/openhpc/ohpc/pull/250,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/250#issuecomment-233177753,,Merged onto 1.1.2 branch. Thanks.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,253,2016-06-28T18:30:44Z,2019-03-10T21:09:59Z,2019-03-10T21:09:59Z,CLOSED,False,18,20,3,https://github.com/nirmalasrjn,Provides option for stateful provisioning,2,[],https://github.com/openhpc/ohpc/pull/253,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/253,Resolves Issue#252.,Resolves Issue#252.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,253,2016-06-28T18:30:44Z,2019-03-10T21:09:59Z,2019-03-10T21:09:59Z,CLOSED,False,18,20,3,https://github.com/nirmalasrjn,Provides option for stateful provisioning,2,[],https://github.com/openhpc/ohpc/pull/253,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/253#issuecomment-236586244,Resolves Issue#252.,Thanks for updating this PR. Landed on the 1.1.2 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,253,2016-06-28T18:30:44Z,2019-03-10T21:09:59Z,2019-03-10T21:09:59Z,CLOSED,False,18,20,3,https://github.com/nirmalasrjn,Provides option for stateful provisioning,2,[],https://github.com/openhpc/ohpc/pull/253,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/253#issuecomment-271425054,Resolves Issue#252.,"I'm going to re-register this for the 1.3 milestone so can iterate a bit. I like the intent of this change, but might suggest that we not just include the disk settings verbatim from the docs as they are today.  For the script, it should probably introduce some options for the choice of disk, some basic partitioning sizes, etc.....",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,253,2016-06-28T18:30:44Z,2019-03-10T21:09:59Z,2019-03-10T21:09:59Z,CLOSED,False,18,20,3,https://github.com/nirmalasrjn,Provides option for stateful provisioning,2,[],https://github.com/openhpc/ohpc/pull/253,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/253#issuecomment-471344905,Resolves Issue#252.,"No progress here, closing this out.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,255,2016-07-07T20:47:34Z,2016-07-12T18:56:01Z,2016-07-12T18:56:57Z,MERGED,True,3,3,2,https://github.com/dirkmueller,Fix SUSE name,1,[],https://github.com/openhpc/ohpc/pull/255,https://github.com/dirkmueller,1,https://github.com/openhpc/ohpc/pull/255,"SuSE was renamed to SUSE a little bit more than 12 years ago,
its time to adjust.","SuSE was renamed to SUSE a little bit more than 12 years ago,
its time to adjust.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,255,2016-07-07T20:47:34Z,2016-07-12T18:56:01Z,2016-07-12T18:56:57Z,MERGED,True,3,3,2,https://github.com/dirkmueller,Fix SUSE name,1,[],https://github.com/openhpc/ohpc/pull/255,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/255#issuecomment-232144793,"SuSE was renamed to SUSE a little bit more than 12 years ago,
its time to adjust.",Thank you - sorry for propagating the wrong convention.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,258,2016-08-03T21:31:41Z,2017-01-26T22:01:11Z,2017-01-26T22:01:11Z,CLOSED,False,32,6,4,https://github.com/nirmalasrjn,Issue#257,4,[],https://github.com/openhpc/ohpc/pull/258,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/258,Install guide to Include option to enable OpenHPC repository using ISO image and  an input variable that encapsulates compute node delimiter.,Install guide to Include option to enable OpenHPC repository using ISO image and  an input variable that encapsulates compute node delimiter.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,258,2016-08-03T21:31:41Z,2017-01-26T22:01:11Z,2017-01-26T22:01:11Z,CLOSED,False,32,6,4,https://github.com/nirmalasrjn,Issue#257,4,[],https://github.com/openhpc/ohpc/pull/258,https://github.com/nirmalasrjn,2,https://github.com/openhpc/ohpc/pull/258#issuecomment-275527825,Install guide to Include option to enable OpenHPC repository using ISO image and  an input variable that encapsulates compute node delimiter.,"The Issue #239 has taken care of introducing the input variable for compute node delimiter.  Since a  simple utility has been introduced via Issue# 363 to enable OpenHPC repository from downloaded tarball, the part about, enabling OpenHPC repo, using ISO image, has also been taken care of. So this pull request is no longer relevant and is being closed now.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,261,2016-08-24T01:42:44Z,2016-08-24T10:50:05Z,2016-08-24T10:50:29Z,CLOSED,False,3,3,1,https://github.com/cstackpole,Removing packages that do not exist.,1,[],https://github.com/openhpc/ohpc/pull/261,https://github.com/cstackpole,1,https://github.com/openhpc/ohpc/pull/261,When testing I discovered that there are packages it tries to install that do not exist in the CentOS 7 repos.,When testing I discovered that there are packages it tries to install that do not exist in the CentOS 7 repos.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,261,2016-08-24T01:42:44Z,2016-08-24T10:50:05Z,2016-08-24T10:50:29Z,CLOSED,False,3,3,1,https://github.com/cstackpole,Removing packages that do not exist.,1,[],https://github.com/openhpc/ohpc/pull/261,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/261#issuecomment-241944066,When testing I discovered that there are packages it tries to install that do not exist in the CentOS 7 repos.,"Thanks for catching this, @cstackpole . We noticed the same, and pulled the latest CentOS 7 template from the warewulf 3.7 release for our 1.1.2 branch ( #256  ). The OpenHPC 1.2 branch will have the complete latest warewulf release.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,261,2016-08-24T01:42:44Z,2016-08-24T10:50:05Z,2016-08-24T10:50:29Z,CLOSED,False,3,3,1,https://github.com/cstackpole,Removing packages that do not exist.,1,[],https://github.com/openhpc/ohpc/pull/261,https://github.com/cstackpole,3,https://github.com/openhpc/ohpc/pull/261#issuecomment-242024880,When testing I discovered that there are packages it tries to install that do not exist in the CentOS 7 repos.,Doh! I searched to see if anyone had done it before me and came up blank. Maybe bad search terms. Oh well. I will close this merge request then. Thanks!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,263,2016-08-26T21:14:57Z,2016-09-15T20:18:34Z,2016-09-15T20:21:33Z,MERGED,True,108,3,15,https://github.com/ericvh,aarch64: first batch of fixes,9,[],https://github.com/openhpc/ohpc/pull/263,https://github.com/ericvh,1,https://github.com/openhpc/ohpc/pull/263,"With these patches, aarch64 on CentOS_7.2 builds 128 successful packages.  They are predominantly configuration fixes with a single patch against openblas to fix some bad code in the arm64 support.  I regressed them against x86_64 CentOS 7.2 and SuSe 12 SP 1 with no adverse effects on package builds.
Build test results against aarch64 available in my home project: https://build.openhpc.community/project/show/home:eric:OpenHPC:1.2:Factory
This is my first time really doing any sort of packaging work with Linux, I've mostly just stuck to code before, so be gentle.  Happy to take suggestions on ways of doing things better.
Signed-off-by: Eric Van Hensbergen eric.vanhensbergen@arm.com","With these patches, aarch64 on CentOS_7.2 builds 128 successful packages.  They are predominantly configuration fixes with a single patch against openblas to fix some bad code in the arm64 support.  I regressed them against x86_64 CentOS 7.2 and SuSe 12 SP 1 with no adverse effects on package builds.
Build test results against aarch64 available in my home project: https://build.openhpc.community/project/show/home:eric:OpenHPC:1.2:Factory
This is my first time really doing any sort of packaging work with Linux, I've mostly just stuck to code before, so be gentle.  Happy to take suggestions on ways of doing things better.
Signed-off-by: Eric Van Hensbergen eric.vanhensbergen@arm.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,263,2016-08-26T21:14:57Z,2016-09-15T20:18:34Z,2016-09-15T20:21:33Z,MERGED,True,108,3,15,https://github.com/ericvh,aarch64: first batch of fixes,9,[],https://github.com/openhpc/ohpc/pull/263,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/263#issuecomment-247442842,"With these patches, aarch64 on CentOS_7.2 builds 128 successful packages.  They are predominantly configuration fixes with a single patch against openblas to fix some bad code in the arm64 support.  I regressed them against x86_64 CentOS 7.2 and SuSe 12 SP 1 with no adverse effects on package builds.
Build test results against aarch64 available in my home project: https://build.openhpc.community/project/show/home:eric:OpenHPC:1.2:Factory
This is my first time really doing any sort of packaging work with Linux, I've mostly just stuck to code before, so be gentle.  Happy to take suggestions on ways of doing things better.
Signed-off-by: Eric Van Hensbergen eric.vanhensbergen@arm.com","Just a head's up that I landed all of these except for c1c0c34. I'm wondering if we can sort out another option for the lua path, but probably need to get interactive access to an aarch64 environment.
Thanks for the updates.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,269,2016-08-31T21:28:09Z,2016-11-11T00:49:28Z,2016-11-11T00:49:28Z,CLOSED,False,26,0,1,https://github.com/nirmalasrjn,Subnet Manager for InfiniBand Network,1,['documentation'],https://github.com/openhpc/ohpc/pull/269,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/269,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,269,2016-08-31T21:28:09Z,2016-11-11T00:49:28Z,2016-11-11T00:49:28Z,CLOSED,False,26,0,1,https://github.com/nirmalasrjn,Subnet Manager for InfiniBand Network,1,['documentation'],https://github.com/openhpc/ohpc/pull/269,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/269#issuecomment-253836780,,"Going to schedule this for 1.2, but think we need to tweak per comment on the patch.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,269,2016-08-31T21:28:09Z,2016-11-11T00:49:28Z,2016-11-11T00:49:28Z,CLOSED,False,26,0,1,https://github.com/nirmalasrjn,Subnet Manager for InfiniBand Network,1,['documentation'],https://github.com/openhpc/ohpc/pull/269,https://github.com/crbaird,3,https://github.com/openhpc/ohpc/pull/269#issuecomment-259562233,,bumping smart opensm support to update1,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,269,2016-08-31T21:28:09Z,2016-11-11T00:49:28Z,2016-11-11T00:49:28Z,CLOSED,False,26,0,1,https://github.com/nirmalasrjn,Subnet Manager for InfiniBand Network,1,['documentation'],https://github.com/openhpc/ohpc/pull/269,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/269#issuecomment-259819710,,"Hey @nirmalasrjn, we squeezed a tooltip in referencing opensm and a small bit in the recipe script to optionally install;l the extra bit is simply as follows:
# Optionally enable opensm subnet manager                                                                                                  
if [[ ${enable_opensm} -eq 1 ]];then
     zypper -n install opensm
     systemctl enable opensm
     systemctl start opensm
fi

Note: that's the sles example, replace with yum for centos.
I added a default for enable_opensm into the template input files.  Hopefully this a reasonable compromise for what you had in mind.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/raffenet,1,https://github.com/openhpc/ohpc/pull/270,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/raffenet,2,https://github.com/openhpc/ohpc/pull/270#issuecomment-244133968,,I based this largely on the MVAPICH2 spec file. I didn't address all the other parts of the repo that referenced the various MPI families. I can update the request if that is preferred.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/raffenet,3,https://github.com/openhpc/ohpc/pull/270#issuecomment-247072075,,Any feedback on this request?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/270#issuecomment-247381809,,"Thanks a bunch for this PR @raffenet. I've been holding off temporarily as it is requesting a new addition, and I'm expecting we will be advertising a new component addition request process to the community shortly (hopefully by the end of this week). Assuming that happens, I was going to see if you might be amenable to submitting a request for MPICH and can refer back to this PR that you've contributed a starting .spec file.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/270#issuecomment-248021704,,"@raffenet, the submission site for new component requests is now available at:  https://github.com/openhpc/submissions
Would you consider adding MPICH as a new request there? (it should be hopefully be a reasonably quick submission process).",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/raffenet,6,https://github.com/openhpc/ohpc/pull/270#issuecomment-248028231,,"Perfect, will do!",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/koomie,7,https://github.com/openhpc/ohpc/pull/270#issuecomment-248609676,,"Just an FYI, the first round of reviews will be based on submissions received by Monday, September 26th, 2016. (Sorry it's a short turn around time; this is to try and meet a target next release for SC'16).",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/koomie,8,https://github.com/openhpc/ohpc/pull/270#issuecomment-248631358,,Thanks for doing the submission.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/raffenet,9,https://github.com/openhpc/ohpc/pull/270#issuecomment-248632418,,No problem. Should we close this pull request then?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,270,2016-09-01T16:24:36Z,2016-10-19T19:34:55Z,2016-10-19T19:34:55Z,CLOSED,False,206,0,2,https://github.com/raffenet,Add MPICH spec file,1,[],https://github.com/openhpc/ohpc/pull/270,https://github.com/koomie,10,https://github.com/openhpc/ohpc/pull/270#issuecomment-248632759,,I'd say let's leave it open for the time being as it can be a starting point.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,272,2016-09-06T17:54:26Z,2017-09-06T15:22:06Z,2017-09-06T15:22:06Z,CLOSED,False,178,138,77,https://github.com/e4t,spec-File Fixes for branch OpenHPC_1.1.1_Factory,10,[],https://github.com/openhpc/ohpc/pull/272,https://github.com/e4t,1,https://github.com/openhpc/ohpc/pull/272,"These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.","These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,272,2016-09-06T17:54:26Z,2017-09-06T15:22:06Z,2017-09-06T15:22:06Z,CLOSED,False,178,138,77,https://github.com/e4t,spec-File Fixes for branch OpenHPC_1.1.1_Factory,10,[],https://github.com/openhpc/ohpc/pull/272,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/272#issuecomment-327518723,"These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.",This was landed on 1.2 instead.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,273,2016-09-06T17:56:45Z,2018-07-12T02:10:22Z,2018-07-12T02:10:22Z,CLOSED,False,134,129,76,https://github.com/e4t,Obs/open hpc 1.1.2 factory,6,[],https://github.com/openhpc/ohpc/pull/273,https://github.com/e4t,1,https://github.com/openhpc/ohpc/pull/273,"These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.","These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,273,2016-09-06T17:56:45Z,2018-07-12T02:10:22Z,2018-07-12T02:10:22Z,CLOSED,False,134,129,76,https://github.com/e4t,Obs/open hpc 1.1.2 factory,6,[],https://github.com/openhpc/ohpc/pull/273,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/273#issuecomment-404366882,"These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.",closed branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,274,2016-09-06T17:57:45Z,2016-09-15T20:41:08Z,2016-09-15T20:41:21Z,MERGED,True,134,129,76,https://github.com/e4t,Obs/open hpc 1.2 factory,6,[],https://github.com/openhpc/ohpc/pull/274,https://github.com/e4t,1,https://github.com/openhpc/ohpc/pull/274,"These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.","These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,274,2016-09-06T17:57:45Z,2016-09-15T20:41:08Z,2016-09-15T20:41:21Z,MERGED,True,134,129,76,https://github.com/e4t,Obs/open hpc 1.2 factory,6,[],https://github.com/openhpc/ohpc/pull/274,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/274#issuecomment-247449362,"These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.",Thanks @e4t for the detailed description and subtle suggesting regarding %define vs %global.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,275,2016-09-06T17:59:05Z,2017-09-06T15:22:47Z,2017-09-06T15:22:47Z,CLOSED,False,134,129,76,https://github.com/e4t,Master,6,[],https://github.com/openhpc/ohpc/pull/275,https://github.com/e4t,1,https://github.com/openhpc/ohpc/pull/275,"These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.","These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,275,2016-09-06T17:59:05Z,2017-09-06T15:22:47Z,2017-09-06T15:22:47Z,CLOSED,False,134,129,76,https://github.com/e4t,Master,6,[],https://github.com/openhpc/ohpc/pull/275,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/275#issuecomment-327518966,"These fixes address the following issues:

munge: */lib/tmpfiles.d/munge.conf neither gets built nor installed
on SUSE.
Macro definitions like %{!?foo: %define foo bar} should be avoided
due to the scoping rules for rpm macros. a '%global' should be used
instead of the '%define'. This affects %PROJ_DELIM, %compiler_family
and %mpi_family
A macro %{RPM_BUILD_ROOT} does not exist. Either it is the shell variable
${RPM_BUILD_ROOT} or the macro %{buildroot}: this affected the packages
'R', 'spack' and 'gsl'.
An rpmlint check in 'cube' for running ldconfig in the %post and %postun
scripts thru errors and raised the error level above the threshold.
Since this package uses lmod to set up the environment, ldconfig should
not be needed.",landed on 1.2 branch which was merged to master after release.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,311,2016-09-29T14:42:53Z,2017-01-06T20:51:44Z,2017-05-25T21:49:53Z,CLOSED,False,983,16,14,https://github.com/surak,Issue 178,105,[],https://github.com/openhpc/ohpc/pull/311,https://github.com/surak,1,https://github.com/openhpc/ohpc/pull/311,surak@bfbe866,surak@bfbe866,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,312,2016-09-29T19:03:08Z,2016-09-30T14:54:48Z,2016-09-30T14:54:48Z,MERGED,True,392,91,16,https://github.com/ericvh,Second round of aarch64 changes,7,[],https://github.com/openhpc/ohpc/pull/312,https://github.com/ericvh,1,https://github.com/openhpc/ohpc/pull/312,Another set of aarch64 changes to fix various build problems.  Also includes a revised fix for mvapich2 which contains a more generic implementation which will work better across platforms.,Another set of aarch64 changes to fix various build problems.  Also includes a revised fix for mvapich2 which contains a more generic implementation which will work better across platforms.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,312,2016-09-29T19:03:08Z,2016-09-30T14:54:48Z,2016-09-30T14:54:48Z,MERGED,True,392,91,16,https://github.com/ericvh,Second round of aarch64 changes,7,[],https://github.com/openhpc/ohpc/pull/312,https://github.com/ericvh,2,https://github.com/openhpc/ohpc/pull/312#issuecomment-250744980,Another set of aarch64 changes to fix various build problems.  Also includes a revised fix for mvapich2 which contains a more generic implementation which will work better across platforms.,Adding superlu fix to pull request.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,313,2016-10-01T01:29:09Z,2016-10-11T12:59:28Z,2016-10-11T12:59:57Z,MERGED,True,130,28,10,https://github.com/ericvh,papi: build with -fPIC -DPIC and export libpapi.a required by tau,29,[],https://github.com/openhpc/ohpc/pull/313,https://github.com/ericvh,1,https://github.com/openhpc/ohpc/pull/313,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,313,2016-10-01T01:29:09Z,2016-10-11T12:59:28Z,2016-10-11T12:59:57Z,MERGED,True,130,28,10,https://github.com/ericvh,papi: build with -fPIC -DPIC and export libpapi.a required by tau,29,[],https://github.com/openhpc/ohpc/pull/313,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/313#issuecomment-252909504,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Landed on 1.2 branch.  Thanks.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,315,2016-10-13T11:28:11Z,2016-10-14T15:29:56Z,2016-10-14T15:29:56Z,MERGED,True,8,5,3,https://github.com/pawosm-arm,easybuild: update patch after version bump,2,[],https://github.com/openhpc/ohpc/pull/315,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/315,"Currently used easybuild fix fails silently to apply non-x86 patch causing false positive. This fix is less version dependent.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com","Currently used easybuild fix fails silently to apply non-x86 patch causing false positive. This fix is less version dependent.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,315,2016-10-13T11:28:11Z,2016-10-14T15:29:56Z,2016-10-14T15:29:56Z,MERGED,True,8,5,3,https://github.com/pawosm-arm,easybuild: update patch after version bump,2,[],https://github.com/openhpc/ohpc/pull/315,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/315#issuecomment-253488673,"Currently used easybuild fix fails silently to apply non-x86 patch causing false positive. This fix is less version dependent.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com","fwiw: this patch will be irrelevant/broken for the upcoming EasyBuild v3.0.0 (ETA Nov'16), thanks to backporting of the patch into upstream @ easybuilders/easybuild-easyblocks#1003",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,316,2016-10-14T20:54:20Z,2016-10-19T19:21:24Z,2016-10-19T19:21:24Z,MERGED,True,168,43,11,https://github.com/pawosm-arm,warewulf: copy config.sub too,35,[],https://github.com/openhpc/ohpc/pull/316,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/316,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,316,2016-10-14T20:54:20Z,2016-10-19T19:21:24Z,2016-10-19T19:21:24Z,MERGED,True,168,43,11,https://github.com/pawosm-arm,warewulf: copy config.sub too,35,[],https://github.com/openhpc/ohpc/pull/316,https://github.com/jmstover,2,https://github.com/openhpc/ohpc/pull/316#issuecomment-253917719,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"I actually don't see an issue in it. @pawosm-arm , what was the reasoning behind copying the config.guess to the build directory? It... shouldn't need it, but if there's some valid reason I can add it upstream so it's there.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,316,2016-10-14T20:54:20Z,2016-10-19T19:21:24Z,2016-10-19T19:21:24Z,MERGED,True,168,43,11,https://github.com/pawosm-arm,warewulf: copy config.sub too,35,[],https://github.com/openhpc/ohpc/pull/316,https://github.com/pawosm-arm,3,https://github.com/openhpc/ohpc/pull/316#issuecomment-253918743,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"This is possible fix to address build failure on SuSe/AArch64, from the log you can find that config.sub as shipped with warewulf don't quite understand what -suse- means.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,316,2016-10-14T20:54:20Z,2016-10-19T19:21:24Z,2016-10-19T19:21:24Z,MERGED,True,168,43,11,https://github.com/pawosm-arm,warewulf: copy config.sub too,35,[],https://github.com/openhpc/ohpc/pull/316,https://github.com/jmstover,4,https://github.com/openhpc/ohpc/pull/316#issuecomment-253922998,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"Ahh... Yeah, we don't move out much beyond the RHEL based world. ;)
On an SL 6.5 provisioner I have here, the autoconf and RPM config.guess are the same, so there wouldn't be an issue that I can foresee also adding this in upstream as well so the patch isn't needed constantly.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,316,2016-10-14T20:54:20Z,2016-10-19T19:21:24Z,2016-10-19T19:21:24Z,MERGED,True,168,43,11,https://github.com/pawosm-arm,warewulf: copy config.sub too,35,[],https://github.com/openhpc/ohpc/pull/316,https://github.com/pawosm-arm,5,https://github.com/openhpc/ohpc/pull/316#issuecomment-254843286,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"Actually this patch helps with building on SuSe:
https://build.openhpc.community/package/show/home:eric:OpenHPC:1.2:Factory/warewulf-ipmi",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,329,2016-11-02T22:51:33Z,2016-11-02T23:36:43Z,2016-11-02T23:36:43Z,MERGED,True,142,0,3,https://github.com/suchytas,Renaming install_pbs.tex to install_pbspro.tex; naming consistency.,2,[],https://github.com/openhpc/ohpc/pull/329,https://github.com/suchytas,1,https://github.com/openhpc/ohpc/pull/329,Simply renaming the file for naming consistency.,Simply renaming the file for naming consistency.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,330,2016-11-03T02:02:57Z,2016-11-03T16:40:17Z,2016-11-03T16:40:18Z,MERGED,True,71,86,10,https://github.com/suchytas,"Updated the install_pbspro, memlimits, import_ww_files, and steps instructions",17,[],https://github.com/openhpc/ohpc/pull/330,https://github.com/suchytas,1,https://github.com/openhpc/ohpc/pull/330,"Minor updates to install_pbspro.tex. Altair adjusted their RPM to set reasonable defaults.
removed the redundant perl example. Keeping the perl code that inserts the new limits above the ""End of file"" comment
Restructured the import_ww_files section by moving rms and OS specific files into secondary files.","Minor updates to install_pbspro.tex. Altair adjusted their RPM to set reasonable defaults.
removed the redundant perl example. Keeping the perl code that inserts the new limits above the ""End of file"" comment
Restructured the import_ww_files section by moving rms and OS specific files into secondary files.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,331,2016-11-04T01:44:27Z,2016-11-04T09:52:20Z,2016-11-04T09:52:20Z,MERGED,True,38,54,3,https://github.com/suchytas,Updating SLES12 documentation for PBS Professional and the restructuring of the import_ww_files,2,[],https://github.com/openhpc/ohpc/pull/331,https://github.com/suchytas,1,https://github.com/openhpc/ohpc/pull/331,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,333,2016-11-08T20:12:21Z,2016-11-08T20:14:08Z,2016-11-08T20:17:27Z,MERGED,True,18,16,2,https://github.com/boegel,fix offline installation of EasyBuild,2,[],https://github.com/openhpc/ohpc/pull/333,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/333,@crbaird this should fix the offline installation issue we're hitting in #289,@crbaird this should fix the offline installation issue we're hitting in #289,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,334,2016-11-09T19:04:00Z,2016-11-09T19:10:24Z,2016-11-09T19:10:50Z,MERGED,True,4,0,1,https://github.com/pawosm-arm,Hypre: copy config.guess for AArch64,1,[],https://github.com/openhpc/ohpc/pull/334,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/334,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,334,2016-11-09T19:04:00Z,2016-11-09T19:10:24Z,2016-11-09T19:10:50Z,MERGED,True,4,0,1,https://github.com/pawosm-arm,Hypre: copy config.guess for AArch64,1,[],https://github.com/openhpc/ohpc/pull/334,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/334#issuecomment-259498596,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Sorry -- this regressed when we down-reved hypre,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,336,2016-11-10T13:29:33Z,2016-11-10T13:35:52Z,2016-11-10T13:35:52Z,MERGED,True,8,0,4,https://github.com/pawosm-arm,Tests: OpenBLAS: AArch64 tweaks,1,[],https://github.com/openhpc/ohpc/pull/336,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/336,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,336,2016-11-10T13:29:33Z,2016-11-10T13:35:52Z,2016-11-10T13:35:52Z,MERGED,True,8,0,4,https://github.com/pawosm-arm,Tests: OpenBLAS: AArch64 tweaks,1,[],https://github.com/openhpc/ohpc/pull/336,https://github.com/pawosm-arm,2,https://github.com/openhpc/ohpc/pull/336#issuecomment-259690326,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,These tests cannot be linked due to missing symbols in OpenBLAS library for AArch64. These symbols are extensions to BLAS and are provided as x86_64 and MIPS64 assembly and not available for AArch64. The tests should not make calls to them on AArch64.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,338,2016-11-12T17:29:41Z,2016-11-12T17:37:42Z,2016-11-12T17:37:48Z,MERGED,True,327,0,14,https://github.com/ericvh,docs: Add manifest for aarch64 CentOS-7.2 warewulf/slurm configuration,1,[],https://github.com/openhpc/ohpc/pull/338,https://github.com/ericvh,1,https://github.com/openhpc/ohpc/pull/338,Signed-off-by: Eric Van Hensbergen ericvh@gmail.com,Signed-off-by: Eric Van Hensbergen ericvh@gmail.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,342,2016-11-18T16:54:37Z,2017-01-05T17:09:02Z,2017-06-21T18:11:58Z,CLOSED,False,1,1,1,https://github.com/chuckatkins,impi: Adjust version parsing to deal with spaces,1,"['component', 'built']",https://github.com/openhpc/ohpc/pull/342,https://github.com/chuckatkins,1,https://github.com/openhpc/ohpc/pull/342,"This makes the version parsing replace "" Update "" with ""."" to prevent
spaces in generated module file names, which breaks other module
infrastructure.  This is specifically to address a problem with the impi
shipped with Parallel Studio Cluster Edition 2017 Update 1, in which
the version retrieved for automatic module file creation  was
""2017 Update 1"". This now becomes ""2017.1"" thus resulting in a more
sensible module file name that doesn't break the remaining module
infrastructure..","This makes the version parsing replace "" Update "" with ""."" to prevent
spaces in generated module file names, which breaks other module
infrastructure.  This is specifically to address a problem with the impi
shipped with Parallel Studio Cluster Edition 2017 Update 1, in which
the version retrieved for automatic module file creation  was
""2017 Update 1"". This now becomes ""2017.1"" thus resulting in a more
sensible module file name that doesn't break the remaining module
infrastructure..",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,342,2016-11-18T16:54:37Z,2017-01-05T17:09:02Z,2017-06-21T18:11:58Z,CLOSED,False,1,1,1,https://github.com/chuckatkins,impi: Adjust version parsing to deal with spaces,1,"['component', 'built']",https://github.com/openhpc/ohpc/pull/342,https://github.com/chuckatkins,2,https://github.com/openhpc/ohpc/pull/342#issuecomment-261582925,"This makes the version parsing replace "" Update "" with ""."" to prevent
spaces in generated module file names, which breaks other module
infrastructure.  This is specifically to address a problem with the impi
shipped with Parallel Studio Cluster Edition 2017 Update 1, in which
the version retrieved for automatic module file creation  was
""2017 Update 1"". This now becomes ""2017.1"" thus resulting in a more
sensible module file name that doesn't break the remaining module
infrastructure..",Fixes #343,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,342,2016-11-18T16:54:37Z,2017-01-05T17:09:02Z,2017-06-21T18:11:58Z,CLOSED,False,1,1,1,https://github.com/chuckatkins,impi: Adjust version parsing to deal with spaces,1,"['component', 'built']",https://github.com/openhpc/ohpc/pull/342,https://github.com/chuckatkins,3,https://github.com/openhpc/ohpc/pull/342#issuecomment-261583021,"This makes the version parsing replace "" Update "" with ""."" to prevent
spaces in generated module file names, which breaks other module
infrastructure.  This is specifically to address a problem with the impi
shipped with Parallel Studio Cluster Edition 2017 Update 1, in which
the version retrieved for automatic module file creation  was
""2017 Update 1"". This now becomes ""2017.1"" thus resulting in a more
sensible module file name that doesn't break the remaining module
infrastructure..",Fixes #343,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,342,2016-11-18T16:54:37Z,2017-01-05T17:09:02Z,2017-06-21T18:11:58Z,CLOSED,False,1,1,1,https://github.com/chuckatkins,impi: Adjust version parsing to deal with spaces,1,"['component', 'built']",https://github.com/openhpc/ohpc/pull/342,https://github.com/chuckatkins,4,https://github.com/openhpc/ohpc/pull/342#issuecomment-261596157,"This makes the version parsing replace "" Update "" with ""."" to prevent
spaces in generated module file names, which breaks other module
infrastructure.  This is specifically to address a problem with the impi
shipped with Parallel Studio Cluster Edition 2017 Update 1, in which
the version retrieved for automatic module file creation  was
""2017 Update 1"". This now becomes ""2017.1"" thus resulting in a more
sensible module file name that doesn't break the remaining module
infrastructure..","If I had known it was to get pulled into the release branch I would have based it much earlier in the graph.  It looks like the merged into obs/OpenHPC_1.2.1_Factory pulled in a bunch of unrelated stuff.  Would it be helpful if I rebased the branch back to the v1.2.GA tag instead?  the commit is trivial so there shouldn't be any conflicts.  That will let it cleanly merge into both master and release.
Or, since you already did the merge should I just leave it alone instead?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,342,2016-11-18T16:54:37Z,2017-01-05T17:09:02Z,2017-06-21T18:11:58Z,CLOSED,False,1,1,1,https://github.com/chuckatkins,impi: Adjust version parsing to deal with spaces,1,"['component', 'built']",https://github.com/openhpc/ohpc/pull/342,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/342#issuecomment-261598594,"This makes the version parsing replace "" Update "" with ""."" to prevent
spaces in generated module file names, which breaks other module
infrastructure.  This is specifically to address a problem with the impi
shipped with Parallel Studio Cluster Edition 2017 Update 1, in which
the version retrieved for automatic module file creation  was
""2017 Update 1"". This now becomes ""2017.1"" thus resulting in a more
sensible module file name that doesn't break the remaining module
infrastructure..",It's ok. I probably should have cherry-picked it to avoid pulling in unrelated stuff from master branch but it's landed on 1.2.1 now.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,348,2016-12-01T11:58:53Z,2016-12-01T11:59:55Z,2016-12-01T11:59:55Z,CLOSED,False,3395,35,21,https://github.com/LaHaine,Issue347,110,[],https://github.com/openhpc/ohpc/pull/348,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/348,"See issue #347, make find command follow symlinks.","See issue #347, make find command follow symlinks.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,349,2016-12-01T12:05:42Z,2016-12-01T17:22:37Z,2016-12-01T17:26:59Z,MERGED,True,2,2,1,https://github.com/LaHaine,use find -L to follow symlinks,1,['component'],https://github.com/openhpc/ohpc/pull/349,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/349,"This helps in case Intel MPI was installed on a shared file
system. See issue #254, that was fixed the same way.","This helps in case Intel MPI was installed on a shared file
system. See issue #254, that was fixed the same way.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,349,2016-12-01T12:05:42Z,2016-12-01T17:22:37Z,2016-12-01T17:26:59Z,MERGED,True,2,2,1,https://github.com/LaHaine,use find -L to follow symlinks,1,['component'],https://github.com/openhpc/ohpc/pull/349,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/349#issuecomment-264236640,"This helps in case Intel MPI was installed on a shared file
system. See issue #254, that was fixed the same way.","Thanks @LaHaine, I should have caught this back with #254, thanks for adding for the MPI compatibility module as well.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,350,2016-12-07T22:56:08Z,2017-01-10T18:41:58Z,2017-01-11T16:20:27Z,MERGED,True,26,14,4,https://github.com/pawosm-arm,tau: fix link-time problems occuring when using tau compiler wrapper …,2,"['component', 'built']",https://github.com/openhpc/ohpc/pull/350,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/350,"…scripts
Note that as scripts like tau_f90.sh tau_f77.sh started to work,
the 'profiler' variable should not be defined in Fortran programs,
this patch renames 'profiler' to 'profile' where required.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com","…scripts
Note that as scripts like tau_f90.sh tau_f77.sh started to work,
the 'profiler' variable should not be defined in Fortran programs,
this patch renames 'profiler' to 'profile' where required.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,352,2016-12-07T22:58:11Z,2017-01-09T14:12:17Z,2017-01-09T14:12:17Z,CLOSED,False,1,1,1,https://github.com/nirmalasrjn,Add Listening Interface to wwnodescan command (Issue #351),1,['documentation'],https://github.com/openhpc/ohpc/pull/352,https://github.com/nirmalasrjn,1,https://github.com/openhpc/ohpc/pull/352,"If the listen option is not included, then wwnodescan adds nodes
from the interface other than the provisioning interface.","If the listen option is not included, then wwnodescan adds nodes
from the interface other than the provisioning interface.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,352,2016-12-07T22:58:11Z,2017-01-09T14:12:17Z,2017-01-09T14:12:17Z,CLOSED,False,1,1,1,https://github.com/nirmalasrjn,Add Listening Interface to wwnodescan command (Issue #351),1,['documentation'],https://github.com/openhpc/ohpc/pull/352,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/352#issuecomment-271293582,"If the listen option is not included, then wwnodescan adds nodes
from the interface other than the provisioning interface.",Landed on 1.2.1 branch. Thanks.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,358,2017-01-10T16:05:12Z,2017-01-10T18:39:27Z,2017-01-11T16:20:05Z,MERGED,True,35,2,2,https://github.com/pawosm-arm,mpiP: AArch64 fix,1,"['component', 'built']",https://github.com/openhpc/ohpc/pull/358,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/358,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,358,2017-01-10T16:05:12Z,2017-01-10T18:39:27Z,2017-01-11T16:20:05Z,MERGED,True,35,2,2,https://github.com/pawosm-arm,mpiP: AArch64 fix,1,"['component', 'built']",https://github.com/openhpc/ohpc/pull/358,https://github.com/pawosm-arm,2,https://github.com/openhpc/ohpc/pull/358#issuecomment-271616781,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,The backtrace() unwinder as used in mpiP doesn't work on AArch64. I managed to make internal setjmp()-based unwinder to work instead - with this patch mpiP test case passes on AArch64.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,362,2017-01-12T20:18:31Z,2017-03-02T21:12:32Z,2017-03-03T13:46:58Z,CLOSED,False,35,80,5,https://github.com/boegel,EasyBuild 3.0.2 (WIP),2,[],https://github.com/openhpc/ohpc/pull/362,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/362,"(please don't consider this a blocker for OpenHPC v1.2.1, I'm just targeting that branch because I assume it's the most recent, feel free to change)
WIP because of a couple of questions I have:


The OpenHPC module file is now in Tcl syntax, is that intentional? Should we convert it to Lua syntax instead (EasyBuild/3.0.2.lua), since Lmod is used as modules tool anyway?


I can probably rework easybuild.spec to not rely on bootstrap_eb.py at all (and use easy_install instead), the actual installation itself will be identical; except for an EasyBuild-generated module file, but that seems to get in the way now anyway... Maybe that makes sense in this setup? Using the bootstrap script is desirable if you want an EasyBuild module file, but since OpenHPC is taking care of that itself...


Even though this is a major version bump (2.9.0 -> 3.0.2), it's basically backwards compatible, see http://easybuild.readthedocs.io/en/latest/Release_notes.html#v3-0-0-november-16th-2016; especially in the OpenHPC setup where Lmod is being used already


I removed the patches because they are no longer relevant, all those changes have been merged upstream a while ago, and are included in EasyBuild v3.0.2.","(please don't consider this a blocker for OpenHPC v1.2.1, I'm just targeting that branch because I assume it's the most recent, feel free to change)
WIP because of a couple of questions I have:


The OpenHPC module file is now in Tcl syntax, is that intentional? Should we convert it to Lua syntax instead (EasyBuild/3.0.2.lua), since Lmod is used as modules tool anyway?


I can probably rework easybuild.spec to not rely on bootstrap_eb.py at all (and use easy_install instead), the actual installation itself will be identical; except for an EasyBuild-generated module file, but that seems to get in the way now anyway... Maybe that makes sense in this setup? Using the bootstrap script is desirable if you want an EasyBuild module file, but since OpenHPC is taking care of that itself...


Even though this is a major version bump (2.9.0 -> 3.0.2), it's basically backwards compatible, see http://easybuild.readthedocs.io/en/latest/Release_notes.html#v3-0-0-november-16th-2016; especially in the OpenHPC setup where Lmod is being used already


I removed the patches because they are no longer relevant, all those changes have been merged upstream a while ago, and are included in EasyBuild v3.0.2.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,362,2017-01-12T20:18:31Z,2017-03-02T21:12:32Z,2017-03-03T13:46:58Z,CLOSED,False,35,80,5,https://github.com/boegel,EasyBuild 3.0.2 (WIP),2,[],https://github.com/openhpc/ohpc/pull/362,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/362#issuecomment-283781908,"(please don't consider this a blocker for OpenHPC v1.2.1, I'm just targeting that branch because I assume it's the most recent, feel free to change)
WIP because of a couple of questions I have:


The OpenHPC module file is now in Tcl syntax, is that intentional? Should we convert it to Lua syntax instead (EasyBuild/3.0.2.lua), since Lmod is used as modules tool anyway?


I can probably rework easybuild.spec to not rely on bootstrap_eb.py at all (and use easy_install instead), the actual installation itself will be identical; except for an EasyBuild-generated module file, but that seems to get in the way now anyway... Maybe that makes sense in this setup? Using the bootstrap script is desirable if you want an EasyBuild module file, but since OpenHPC is taking care of that itself...


Even though this is a major version bump (2.9.0 -> 3.0.2), it's basically backwards compatible, see http://easybuild.readthedocs.io/en/latest/Release_notes.html#v3-0-0-november-16th-2016; especially in the OpenHPC setup where Lmod is being used already


I removed the patches because they are no longer relevant, all those changes have been merged upstream a while ago, and are included in EasyBuild v3.0.2.",Landed on 1.3 branch. Thanks for the PR.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,362,2017-01-12T20:18:31Z,2017-03-02T21:12:32Z,2017-03-03T13:46:58Z,CLOSED,False,35,80,5,https://github.com/boegel,EasyBuild 3.0.2 (WIP),2,[],https://github.com/openhpc/ohpc/pull/362,https://github.com/boegel,3,https://github.com/openhpc/ohpc/pull/362#issuecomment-283909032,"(please don't consider this a blocker for OpenHPC v1.2.1, I'm just targeting that branch because I assume it's the most recent, feel free to change)
WIP because of a couple of questions I have:


The OpenHPC module file is now in Tcl syntax, is that intentional? Should we convert it to Lua syntax instead (EasyBuild/3.0.2.lua), since Lmod is used as modules tool anyway?


I can probably rework easybuild.spec to not rely on bootstrap_eb.py at all (and use easy_install instead), the actual installation itself will be identical; except for an EasyBuild-generated module file, but that seems to get in the way now anyway... Maybe that makes sense in this setup? Using the bootstrap script is desirable if you want an EasyBuild module file, but since OpenHPC is taking care of that itself...


Even though this is a major version bump (2.9.0 -> 3.0.2), it's basically backwards compatible, see http://easybuild.readthedocs.io/en/latest/Release_notes.html#v3-0-0-november-16th-2016; especially in the OpenHPC setup where Lmod is being used already


I removed the patches because they are no longer relevant, all those changes have been merged upstream a while ago, and are included in EasyBuild v3.0.2.","@crbaird There's an EasyBuild v3.1.0 release already, and an upcoming v3.1.1 (sometime next week).
How much of a time window do I have to bump to the latest version for OpenHPC 1.3?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,362,2017-01-12T20:18:31Z,2017-03-02T21:12:32Z,2017-03-03T13:46:58Z,CLOSED,False,35,80,5,https://github.com/boegel,EasyBuild 3.0.2 (WIP),2,[],https://github.com/openhpc/ohpc/pull/362,https://github.com/crbaird,4,https://github.com/openhpc/ohpc/pull/362#issuecomment-283954013,"(please don't consider this a blocker for OpenHPC v1.2.1, I'm just targeting that branch because I assume it's the most recent, feel free to change)
WIP because of a couple of questions I have:


The OpenHPC module file is now in Tcl syntax, is that intentional? Should we convert it to Lua syntax instead (EasyBuild/3.0.2.lua), since Lmod is used as modules tool anyway?


I can probably rework easybuild.spec to not rely on bootstrap_eb.py at all (and use easy_install instead), the actual installation itself will be identical; except for an EasyBuild-generated module file, but that seems to get in the way now anyway... Maybe that makes sense in this setup? Using the bootstrap script is desirable if you want an EasyBuild module file, but since OpenHPC is taking care of that itself...


Even though this is a major version bump (2.9.0 -> 3.0.2), it's basically backwards compatible, see http://easybuild.readthedocs.io/en/latest/Release_notes.html#v3-0-0-november-16th-2016; especially in the OpenHPC setup where Lmod is being used already


I removed the patches because they are no longer relevant, all those changes have been merged upstream a while ago, and are included in EasyBuild v3.0.2.","@boegel we don't have a hard release date, so let's see if we can land the 3.1.1",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,362,2017-01-12T20:18:31Z,2017-03-02T21:12:32Z,2017-03-03T13:46:58Z,CLOSED,False,35,80,5,https://github.com/boegel,EasyBuild 3.0.2 (WIP),2,[],https://github.com/openhpc/ohpc/pull/362,https://github.com/boegel,5,https://github.com/openhpc/ohpc/pull/362#issuecomment-283956811,"(please don't consider this a blocker for OpenHPC v1.2.1, I'm just targeting that branch because I assume it's the most recent, feel free to change)
WIP because of a couple of questions I have:


The OpenHPC module file is now in Tcl syntax, is that intentional? Should we convert it to Lua syntax instead (EasyBuild/3.0.2.lua), since Lmod is used as modules tool anyway?


I can probably rework easybuild.spec to not rely on bootstrap_eb.py at all (and use easy_install instead), the actual installation itself will be identical; except for an EasyBuild-generated module file, but that seems to get in the way now anyway... Maybe that makes sense in this setup? Using the bootstrap script is desirable if you want an EasyBuild module file, but since OpenHPC is taking care of that itself...


Even though this is a major version bump (2.9.0 -> 3.0.2), it's basically backwards compatible, see http://easybuild.readthedocs.io/en/latest/Release_notes.html#v3-0-0-november-16th-2016; especially in the OpenHPC setup where Lmod is being used already


I removed the patches because they are no longer relevant, all those changes have been merged upstream a while ago, and are included in EasyBuild v3.0.2.","@crbaird OK, I'll try and keep it in mind when I push out the v3.1.1 release of EasyBuild",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,369,2017-02-08T21:01:12Z,2017-02-23T21:15:41Z,2018-07-16T19:38:00Z,MERGED,True,126,39,47,https://github.com/adrianreber,fix building on CentOS 7.3,4,[],https://github.com/openhpc/ohpc/pull/369,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/369,"The included changes are necessary to get the openHPC packages building
on CentOS 7.3.
The result of this can be seen at:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc/packages/
To actually get it working further changes are necessary. This first
commit includes missing or wrong named BuildRequires.","The included changes are necessary to get the openHPC packages building
on CentOS 7.3.
The result of this can be seen at:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc/packages/
To actually get it working further changes are necessary. This first
commit includes missing or wrong named BuildRequires.",True,{'THUMBS_UP': ['https://github.com/pliniosilveira']}
openhpc/ohpc,https://github.com/openhpc/ohpc,369,2017-02-08T21:01:12Z,2017-02-23T21:15:41Z,2018-07-16T19:38:00Z,MERGED,True,126,39,47,https://github.com/adrianreber,fix building on CentOS 7.3,4,[],https://github.com/openhpc/ohpc/pull/369,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/369#issuecomment-282124358,"The included changes are necessary to get the openHPC packages building
on CentOS 7.3.
The result of this can be seen at:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc/packages/
To actually get it working further changes are necessary. This first
commit includes missing or wrong named BuildRequires.",Thank you @adrianreber for the consistency cleanup regarding the macro file definitions and other tweaks for CentOS 7.3,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,382,2017-02-28T11:49:44Z,2017-02-28T13:05:22Z,2017-02-28T13:33:17Z,MERGED,True,3,0,1,https://github.com/LaHaine,enable jobcomp_elasticsearch plugin in slurm,1,[],https://github.com/openhpc/ohpc/pull/382,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/382,The plugin is built automatically if curl-config is found.,The plugin is built automatically if curl-config is found.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,382,2017-02-28T11:49:44Z,2017-02-28T13:05:22Z,2017-02-28T13:33:17Z,MERGED,True,3,0,1,https://github.com/LaHaine,enable jobcomp_elasticsearch plugin in slurm,1,[],https://github.com/openhpc/ohpc/pull/382,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/382#issuecomment-283039668,The plugin is built automatically if curl-config is found.,"Thanks @LaHaine, landed on 1.3 branch.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,383,2017-03-03T18:25:33Z,2017-03-03T18:25:52Z,2017-03-03T18:25:52Z,MERGED,True,89,424,7,https://github.com/crbaird,Update superlu_dist,11,[],https://github.com/openhpc/ohpc/pull/383,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/383,bump superlu_dist version to 5.1.3,bump superlu_dist version to 5.1.3,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,384,2017-03-07T21:34:51Z,2017-03-07T21:36:14Z,2017-03-07T21:36:14Z,CLOSED,False,239,0,2,https://github.com/crbaird,obs,2,[],https://github.com/openhpc/ohpc/pull/384,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/384,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,384,2017-03-07T21:34:51Z,2017-03-07T21:36:14Z,2017-03-07T21:36:14Z,CLOSED,False,239,0,2,https://github.com/crbaird,obs,2,[],https://github.com/openhpc/ohpc/pull/384,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/384#issuecomment-284867072,,pulling in wrong direction. closing.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,385,2017-03-08T11:41:59Z,2017-08-18T21:01:40Z,2017-08-18T21:01:40Z,CLOSED,False,1,0,1,https://github.com/LaHaine,enable hwloc support in slurm,1,[],https://github.com/openhpc/ohpc/pull/385,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/385,"This is used by the task/cgroup plugin, by xpuinfo and by pmix (if enabled)","This is used by the task/cgroup plugin, by xpuinfo and by pmix (if enabled)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,385,2017-03-08T11:41:59Z,2017-08-18T21:01:40Z,2017-08-18T21:01:40Z,CLOSED,False,1,0,1,https://github.com/LaHaine,enable hwloc support in slurm,1,[],https://github.com/openhpc/ohpc/pull/385,https://github.com/LaHaine,2,https://github.com/openhpc/ohpc/pull/385#issuecomment-312634747,"This is used by the task/cgroup plugin, by xpuinfo and by pmix (if enabled)",Can't anybody comment on this pull request?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,385,2017-03-08T11:41:59Z,2017-08-18T21:01:40Z,2017-08-18T21:01:40Z,CLOSED,False,1,0,1,https://github.com/LaHaine,enable hwloc support in slurm,1,[],https://github.com/openhpc/ohpc/pull/385,https://github.com/LaHaine,3,https://github.com/openhpc/ohpc/pull/385#issuecomment-312793996,"This is used by the task/cgroup plugin, by xpuinfo and by pmix (if enabled)",This will fix issue #476.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,385,2017-03-08T11:41:59Z,2017-08-18T21:01:40Z,2017-08-18T21:01:40Z,CLOSED,False,1,0,1,https://github.com/LaHaine,enable hwloc support in slurm,1,[],https://github.com/openhpc/ohpc/pull/385,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/385#issuecomment-313096764,"This is used by the task/cgroup plugin, by xpuinfo and by pmix (if enabled)",My fault for missing this one. Sorry - we'll get it on the radar for the next release.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,385,2017-03-08T11:41:59Z,2017-08-18T21:01:40Z,2017-08-18T21:01:40Z,CLOSED,False,1,0,1,https://github.com/LaHaine,enable hwloc support in slurm,1,[],https://github.com/openhpc/ohpc/pull/385,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/385#issuecomment-323459886,"This is used by the task/cgroup plugin, by xpuinfo and by pmix (if enabled)",Landed on 1.3.2,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,386,2017-03-08T16:53:55Z,2017-03-08T22:28:35Z,2017-03-09T18:21:02Z,MERGED,True,3,4,1,https://github.com/boegel,EasyBuild v3.1.1 (WIP),1,[],https://github.com/openhpc/ohpc/pull/386,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/386,(WIP because I haven't checked whether this passes the integration tests),(WIP because I haven't checked whether this passes the integration tests),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,386,2017-03-08T16:53:55Z,2017-03-08T22:28:35Z,2017-03-09T18:21:02Z,MERGED,True,3,4,1,https://github.com/boegel,EasyBuild v3.1.1 (WIP),1,[],https://github.com/openhpc/ohpc/pull/386,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/386#issuecomment-285433504,(WIP because I haven't checked whether this passes the integration tests),"hi @boegel. The decision to go with TCL module files in OpenHPC is a legacy holdover from convincing sites to use lmod in the first place. We may eventually switch to lua flavored modules, but we'd like to do it consistently across the board.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,387,2017-03-13T17:55:46Z,2017-05-22T16:55:24Z,2018-07-16T19:38:02Z,CLOSED,False,618,1706,45,https://github.com/adrianreber,Add support to build openHPC packages with different gnu compilers versions,5,[],https://github.com/openhpc/ohpc/pull/387,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/387,"The following commits are a bit larger change. This adds the possibility to change between the original gnu compiler (5.4.0) a gnu 6.x compiler based on the software collection devtoolset-6 (https://www.softwarecollections.org/en/scls/rhscl/devtoolset-6/) and a gcc 7 based gnu-compiler package.
To change the used compiler the compiler_family variable needs to be set to either gnu (5.4), dts6 (6.x) or gnu7 (pre gcc 7).
The results of the rebuilds can be found in my copr repositories:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-gcc7/packages/
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-dts6/packages/
To make it easier to add additional compilers many (almost) identical macros have been move from the individual SPEC files to the common OHPC_macros files. Thus every compiler dependent SPEC had to be changed. So, alltough many files had to be changed the good thing is that a lot of code could be removed:
45 files changed, 617 insertions(+), 1702 deletions(-)
As this change also required adapting the OHPC_setup_compiler file I moved this file to a central package so that it exists only once and does not need to be part of every SPEC file.
The two new base packages are ohpc-filesystem which is required now by every openHPC package. This package only provides the base directories of the openHPC tree. Instead of every package owning /opt/ohpc this is now part of this new package. Details in that corresponding commit message.
The other new base package is ohpc-buildroot which provides OHPC_setup_compiler and OHPC_setup_mpi. In addition ohpc-buildroot also requires the lmod-ohpc package. This package seems to be automatically pulled in by the OpenSuse Build Service. Instead of relying on implicit functionality of the build system those dependencies are now explicitly listed.
The new macros are now %ohpc_compiler which replaces the initial compiler section of almost every SPEC file. The second new macro is %ohpc_setup_compiler which replaces the explicit call to OHPC_setup_compiler by a single macro.
In addition unnecessary parts of the spec files have been removed. ldconfig never needs to be executed as the libraries are not in paths ldconfig looks into. '%clean' section are also not required in RPM for a long time. BuildRoot is also always set by RPM automatically.","The following commits are a bit larger change. This adds the possibility to change between the original gnu compiler (5.4.0) a gnu 6.x compiler based on the software collection devtoolset-6 (https://www.softwarecollections.org/en/scls/rhscl/devtoolset-6/) and a gcc 7 based gnu-compiler package.
To change the used compiler the compiler_family variable needs to be set to either gnu (5.4), dts6 (6.x) or gnu7 (pre gcc 7).
The results of the rebuilds can be found in my copr repositories:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-gcc7/packages/
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-dts6/packages/
To make it easier to add additional compilers many (almost) identical macros have been move from the individual SPEC files to the common OHPC_macros files. Thus every compiler dependent SPEC had to be changed. So, alltough many files had to be changed the good thing is that a lot of code could be removed:
45 files changed, 617 insertions(+), 1702 deletions(-)
As this change also required adapting the OHPC_setup_compiler file I moved this file to a central package so that it exists only once and does not need to be part of every SPEC file.
The two new base packages are ohpc-filesystem which is required now by every openHPC package. This package only provides the base directories of the openHPC tree. Instead of every package owning /opt/ohpc this is now part of this new package. Details in that corresponding commit message.
The other new base package is ohpc-buildroot which provides OHPC_setup_compiler and OHPC_setup_mpi. In addition ohpc-buildroot also requires the lmod-ohpc package. This package seems to be automatically pulled in by the OpenSuse Build Service. Instead of relying on implicit functionality of the build system those dependencies are now explicitly listed.
The new macros are now %ohpc_compiler which replaces the initial compiler section of almost every SPEC file. The second new macro is %ohpc_setup_compiler which replaces the explicit call to OHPC_setup_compiler by a single macro.
In addition unnecessary parts of the spec files have been removed. ldconfig never needs to be executed as the libraries are not in paths ldconfig looks into. '%clean' section are also not required in RPM for a long time. BuildRoot is also always set by RPM automatically.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,387,2017-03-13T17:55:46Z,2017-05-22T16:55:24Z,2018-07-16T19:38:02Z,CLOSED,False,618,1706,45,https://github.com/adrianreber,Add support to build openHPC packages with different gnu compilers versions,5,[],https://github.com/openhpc/ohpc/pull/387,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/387#issuecomment-296941274,"The following commits are a bit larger change. This adds the possibility to change between the original gnu compiler (5.4.0) a gnu 6.x compiler based on the software collection devtoolset-6 (https://www.softwarecollections.org/en/scls/rhscl/devtoolset-6/) and a gcc 7 based gnu-compiler package.
To change the used compiler the compiler_family variable needs to be set to either gnu (5.4), dts6 (6.x) or gnu7 (pre gcc 7).
The results of the rebuilds can be found in my copr repositories:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-gcc7/packages/
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-dts6/packages/
To make it easier to add additional compilers many (almost) identical macros have been move from the individual SPEC files to the common OHPC_macros files. Thus every compiler dependent SPEC had to be changed. So, alltough many files had to be changed the good thing is that a lot of code could be removed:
45 files changed, 617 insertions(+), 1702 deletions(-)
As this change also required adapting the OHPC_setup_compiler file I moved this file to a central package so that it exists only once and does not need to be part of every SPEC file.
The two new base packages are ohpc-filesystem which is required now by every openHPC package. This package only provides the base directories of the openHPC tree. Instead of every package owning /opt/ohpc this is now part of this new package. Details in that corresponding commit message.
The other new base package is ohpc-buildroot which provides OHPC_setup_compiler and OHPC_setup_mpi. In addition ohpc-buildroot also requires the lmod-ohpc package. This package seems to be automatically pulled in by the OpenSuse Build Service. Instead of relying on implicit functionality of the build system those dependencies are now explicitly listed.
The new macros are now %ohpc_compiler which replaces the initial compiler section of almost every SPEC file. The second new macro is %ohpc_setup_compiler which replaces the explicit call to OHPC_setup_compiler by a single macro.
In addition unnecessary parts of the spec files have been removed. ldconfig never needs to be executed as the libraries are not in paths ldconfig looks into. '%clean' section are also not required in RPM for a long time. BuildRoot is also always set by RPM automatically.",Rebased to avoid conflicts,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,387,2017-03-13T17:55:46Z,2017-05-22T16:55:24Z,2018-07-16T19:38:02Z,CLOSED,False,618,1706,45,https://github.com/adrianreber,Add support to build openHPC packages with different gnu compilers versions,5,[],https://github.com/openhpc/ohpc/pull/387,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/387#issuecomment-303158291,"The following commits are a bit larger change. This adds the possibility to change between the original gnu compiler (5.4.0) a gnu 6.x compiler based on the software collection devtoolset-6 (https://www.softwarecollections.org/en/scls/rhscl/devtoolset-6/) and a gcc 7 based gnu-compiler package.
To change the used compiler the compiler_family variable needs to be set to either gnu (5.4), dts6 (6.x) or gnu7 (pre gcc 7).
The results of the rebuilds can be found in my copr repositories:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-gcc7/packages/
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-dts6/packages/
To make it easier to add additional compilers many (almost) identical macros have been move from the individual SPEC files to the common OHPC_macros files. Thus every compiler dependent SPEC had to be changed. So, alltough many files had to be changed the good thing is that a lot of code could be removed:
45 files changed, 617 insertions(+), 1702 deletions(-)
As this change also required adapting the OHPC_setup_compiler file I moved this file to a central package so that it exists only once and does not need to be part of every SPEC file.
The two new base packages are ohpc-filesystem which is required now by every openHPC package. This package only provides the base directories of the openHPC tree. Instead of every package owning /opt/ohpc this is now part of this new package. Details in that corresponding commit message.
The other new base package is ohpc-buildroot which provides OHPC_setup_compiler and OHPC_setup_mpi. In addition ohpc-buildroot also requires the lmod-ohpc package. This package seems to be automatically pulled in by the OpenSuse Build Service. Instead of relying on implicit functionality of the build system those dependencies are now explicitly listed.
The new macros are now %ohpc_compiler which replaces the initial compiler section of almost every SPEC file. The second new macro is %ohpc_setup_compiler which replaces the explicit call to OHPC_setup_compiler by a single macro.
In addition unnecessary parts of the spec files have been removed. ldconfig never needs to be executed as the libraries are not in paths ldconfig looks into. '%clean' section are also not required in RPM for a long time. BuildRoot is also always set by RPM automatically.","@adrianreber, you may have noticed I landed this on 1.3.1. In the end, I wasn't able to use it 100% as is in our build system, but I tried to keep the spirit of the changes and expanded the centralization effort for MPI families as well.  I created #447 to track some follow on work and document the latest approach. It's similar to what you had, but uses variables to toggle the compiler/mpi family settings (kind of like your ohpc_bootstrap flag).",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,389,2017-03-15T08:01:27Z,,2017-03-15T08:01:27Z,OPEN,False,16,14,1,https://github.com/LaHaine,use systemd units in slurm,3,[],https://github.com/openhpc/ohpc/pull/389,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/389,"This is my proposed fix for issue #388 Maybe the LSB init scripts can be removed later as well, I am not sure about SLES.","This is my proposed fix for issue #388 Maybe the LSB init scripts can be removed later as well, I am not sure about SLES.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,392,2017-03-20T17:42:09Z,2017-03-20T17:45:50Z,2017-05-05T18:29:46Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v3.1.2,1,[],https://github.com/openhpc/ohpc/pull/392,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/392,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,399,2017-03-31T21:58:39Z,,2017-03-31T21:58:39Z,OPEN,False,2,2,1,https://github.com/linno60,Update INSTALL,1,[],https://github.com/openhpc/ohpc/pull/399,https://github.com/linno60,1,https://github.com/openhpc/ohpc/pull/399,seperate -> separate,seperate -> separate,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,430,2017-04-22T16:01:59Z,,2017-04-22T16:01:59Z,OPEN,False,29,27,1,https://github.com/danmack,"Style fixes on indenttion, space count, tabs",1,[],https://github.com/openhpc/ohpc/pull/430,https://github.com/danmack,1,https://github.com/openhpc/ohpc/pull/430,"removed extra spaces on line ends
removed inconsistent use of tabs on some lines
separated perl statement with argument by at least one space
indentation fix for one block

Signed-off-by: Dan Mack mack@macktronics.com","removed extra spaces on line ends
removed inconsistent use of tabs on some lines
separated perl statement with argument by at least one space
indentation fix for one block

Signed-off-by: Dan Mack mack@macktronics.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,431,2017-04-22T16:41:44Z,,2017-04-22T16:41:44Z,OPEN,False,82,85,1,https://github.com/danmack,style fixups,1,[],https://github.com/openhpc/ohpc/pull/431,https://github.com/danmack,1,https://github.com/openhpc/ohpc/pull/431,"made consistent, the use of whitespace with if statements
removed trailing whitespace
enforced spaces for indentation throughout

Signed-off-by: Dan Mack mack@macktronics.com","made consistent, the use of whitespace with if statements
removed trailing whitespace
enforced spaces for indentation throughout

Signed-off-by: Dan Mack mack@macktronics.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,433,2017-04-26T18:17:31Z,2017-04-26T21:47:43Z,2017-04-26T21:47:43Z,CLOSED,False,1,1,1,https://github.com/rberg2,fix if statment in conman spec file,1,[],https://github.com/openhpc/ohpc/pull/433,https://github.com/rberg2,1,https://github.com/openhpc/ohpc/pull/433,Signed-off-by: Richard Berg rchrd.berg@gmail.com,Signed-off-by: Richard Berg rchrd.berg@gmail.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,433,2017-04-26T18:17:31Z,2017-04-26T21:47:43Z,2017-04-26T21:47:43Z,CLOSED,False,1,1,1,https://github.com/rberg2,fix if statment in conman spec file,1,[],https://github.com/openhpc/ohpc/pull/433,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/433#issuecomment-297551147,Signed-off-by: Richard Berg rchrd.berg@gmail.com,Thanks for this fix. We'll get it queue up for the next planned release.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,434,2017-04-26T21:04:44Z,2017-04-28T21:47:27Z,2017-04-28T21:49:11Z,MERGED,True,790,0,5,https://github.com/pawosm-arm,valgrind: AArch64 fix (imported from Valgrind SVN),1,[],https://github.com/openhpc/ohpc/pull/434,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/434,This is to fix following issue: https://bugs.kde.org/show_bug.cgi?id=369459,This is to fix following issue: https://bugs.kde.org/show_bug.cgi?id=369459,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,434,2017-04-26T21:04:44Z,2017-04-28T21:47:27Z,2017-04-28T21:49:11Z,MERGED,True,790,0,5,https://github.com/pawosm-arm,valgrind: AArch64 fix (imported from Valgrind SVN),1,[],https://github.com/openhpc/ohpc/pull/434,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/434#issuecomment-298114647,This is to fix following issue: https://bugs.kde.org/show_bug.cgi?id=369459,Thanks @pawosm-arm,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,439,2017-05-02T14:51:35Z,2017-05-03T18:03:49Z,2017-05-03T18:51:34Z,CLOSED,False,4,0,1,https://github.com/pliniosilveira,Make Lmod conflicts to Modules,1,[],https://github.com/openhpc/ohpc/pull/439,https://github.com/pliniosilveira,1,https://github.com/openhpc/ohpc/pull/439,Make Lmod conflicts to Modules (Suse's environment modules).,Make Lmod conflicts to Modules (Suse's environment modules).,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,439,2017-05-02T14:51:35Z,2017-05-03T18:03:49Z,2017-05-03T18:51:34Z,CLOSED,False,4,0,1,https://github.com/pliniosilveira,Make Lmod conflicts to Modules,1,[],https://github.com/openhpc/ohpc/pull/439,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/439#issuecomment-298989130,Make Lmod conflicts to Modules (Suse's environment modules).,Thanks for this suggestion. Landed on 1.3.1 brach.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,441,2017-05-03T18:12:55Z,2017-07-17T22:16:43Z,2017-07-17T22:16:43Z,CLOSED,False,11542,0,55,https://github.com/pawosm-arm,io-libs: add pnetcdf 1.8.1,1,[],https://github.com/openhpc/ohpc/pull/441,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/441,"This adds pnetcdf library (version 1.8.1) which fulfills one of the dependencies required by one of LLNL CORAL benchmarks.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com","This adds pnetcdf library (version 1.8.1) which fulfills one of the dependencies required by one of LLNL CORAL benchmarks.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,441,2017-05-03T18:12:55Z,2017-07-17T22:16:43Z,2017-07-17T22:16:43Z,CLOSED,False,11542,0,55,https://github.com/pawosm-arm,io-libs: add pnetcdf 1.8.1,1,[],https://github.com/openhpc/ohpc/pull/441,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/441#issuecomment-299565687,"This adds pnetcdf library (version 1.8.1) which fulfills one of the dependencies required by one of LLNL CORAL benchmarks.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com","Hey there @pawosm-arm,  as a new component request would you mind submitting this to component submission form at https://github.com/openhpc/submissions?
Since you already have a PR for starting .spec file, I'd mention that in the request as well.  Thanks.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,441,2017-05-03T18:12:55Z,2017-07-17T22:16:43Z,2017-07-17T22:16:43Z,CLOSED,False,11542,0,55,https://github.com/pawosm-arm,io-libs: add pnetcdf 1.8.1,1,[],https://github.com/openhpc/ohpc/pull/441,https://github.com/pawosm-arm,3,https://github.com/openhpc/ohpc/pull/441#issuecomment-303812208,"This adds pnetcdf library (version 1.8.1) which fulfills one of the dependencies required by one of LLNL CORAL benchmarks.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com",sumbission: openhpc/submissions#20,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,441,2017-05-03T18:12:55Z,2017-07-17T22:16:43Z,2017-07-17T22:16:43Z,CLOSED,False,11542,0,55,https://github.com/pawosm-arm,io-libs: add pnetcdf 1.8.1,1,[],https://github.com/openhpc/ohpc/pull/441,https://github.com/crbaird,4,https://github.com/openhpc/ohpc/pull/441#issuecomment-315901224,"This adds pnetcdf library (version 1.8.1) which fulfills one of the dependencies required by one of LLNL CORAL benchmarks.
Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com",Landed this as PR #490 against obs/OpenHPC_1.3.2_Factory,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,444,2017-05-06T10:31:10Z,2017-05-22T16:49:56Z,2017-05-22T16:49:56Z,CLOSED,False,4,4,2,https://github.com/pawosm-arm,docs: sort out CentOS version number,1,[],https://github.com/openhpc/ohpc/pull/444,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/444,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,444,2017-05-06T10:31:10Z,2017-05-22T16:49:56Z,2017-05-22T16:49:56Z,CLOSED,False,4,4,2,https://github.com/pawosm-arm,docs: sort out CentOS version number,1,[],https://github.com/openhpc/ohpc/pull/444,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/444#issuecomment-303156893,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"Hi @pawosm-arm. I had made some similar changes to the 1.3.1 branch so I did not land the PR as is. However, you caught a couple that I missed so I did make a couple of more changes based on your suggestion. I'm going to close this, but if I missed something on the 1.3.1 branch related to the version strings in the docs, let me know.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,445,2017-05-10T12:26:39Z,2017-05-22T16:38:48Z,2017-05-22T16:38:48Z,CLOSED,False,4,4,4,https://github.com/a74nh,"Remove post-build-checks conflicts for slurm,munge,warewulf",1,[],https://github.com/openhpc/ohpc/pull/445,https://github.com/a74nh,1,https://github.com/openhpc/ohpc/pull/445,"slurm, munge and warewulf all use BuildConflicts for post-build-checks.
I noticed that almost every other package in ohpc has #!BuildIgnore instead.
I'm not sure if this difference is intentional or not.
Privately, I'm using OBS 2.8 (build.openhpc.community uses OBS 2.7), and these three packages fail to build unless I make these changes.
According to this url, OBS previously didn't handle buildconflicts correctly and now does: openSUSE/open-build-service#2004","slurm, munge and warewulf all use BuildConflicts for post-build-checks.
I noticed that almost every other package in ohpc has #!BuildIgnore instead.
I'm not sure if this difference is intentional or not.
Privately, I'm using OBS 2.8 (build.openhpc.community uses OBS 2.7), and these three packages fail to build unless I make these changes.
According to this url, OBS previously didn't handle buildconflicts correctly and now does: openSUSE/open-build-service#2004",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,445,2017-05-10T12:26:39Z,2017-05-22T16:38:48Z,2017-05-22T16:38:48Z,CLOSED,False,4,4,4,https://github.com/a74nh,"Remove post-build-checks conflicts for slurm,munge,warewulf",1,[],https://github.com/openhpc/ohpc/pull/445,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/445#issuecomment-303153886,"slurm, munge and warewulf all use BuildConflicts for post-build-checks.
I noticed that almost every other package in ohpc has #!BuildIgnore instead.
I'm not sure if this difference is intentional or not.
Privately, I'm using OBS 2.8 (build.openhpc.community uses OBS 2.7), and these three packages fail to build unless I make these changes.
According to this url, OBS previously didn't handle buildconflicts correctly and now does: openSUSE/open-build-service#2004",Thanks for these. Landed on the 1.3.1 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,448,2017-05-12T13:40:13Z,2017-05-12T13:44:07Z,2017-05-12T14:34:27Z,MERGED,True,53,9,2,https://github.com/boegel,EasyBuild v3.2.1,1,[],https://github.com/openhpc/ohpc/pull/448,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/448,"Although the updating the bootstrap script is not strictly required, it's worthwhile since it was enhanced a bit to have better sanity checking, cfr. easybuilders/easybuild-framework#2199 (it would have helped in catching the problem we had a while ago with having $EASYBUILD_VERSION set).","Although the updating the bootstrap script is not strictly required, it's worthwhile since it was enhanced a bit to have better sanity checking, cfr. easybuilders/easybuild-framework#2199 (it would have helped in catching the problem we had a while ago with having $EASYBUILD_VERSION set).",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,449,2017-05-15T15:46:36Z,,2017-08-22T17:21:39Z,OPEN,False,1918,9,51,https://github.com/pawosm-arm,compiler-families: LLVM compiler family,14,[],https://github.com/openhpc/ohpc/pull/449,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/449,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,449,2017-05-15T15:46:36Z,,2017-08-22T17:21:39Z,OPEN,False,1918,9,51,https://github.com/pawosm-arm,compiler-families: LLVM compiler family,14,[],https://github.com/openhpc/ohpc/pull/449,https://github.com/pawosm-arm,2,https://github.com/openhpc/ohpc/pull/449#issuecomment-301516502,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,openhpc/submissions#18,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,449,2017-05-15T15:46:36Z,,2017-08-22T17:21:39Z,OPEN,False,1918,9,51,https://github.com/pawosm-arm,compiler-families: LLVM compiler family,14,[],https://github.com/openhpc/ohpc/pull/449,https://github.com/pawosm-arm,3,https://github.com/openhpc/ohpc/pull/449#issuecomment-303237895,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"There is one thing missing here: the Fortran compiler. Now we can freely add it:
https://github.com/flang-compiler which I plan to do for the second iteration of this PR.
Thanks for all of your comments!",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,449,2017-05-15T15:46:36Z,,2017-08-22T17:21:39Z,OPEN,False,1918,9,51,https://github.com/pawosm-arm,compiler-families: LLVM compiler family,14,[],https://github.com/openhpc/ohpc/pull/449,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/449#issuecomment-303311852,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"I have started to compile the openHPC packages with your llvm package:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-clang/packages/
Not much right now, but I will continue. The main changes are to disable fortran if the compiler_family is set to llvm.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,449,2017-05-15T15:46:36Z,,2017-08-22T17:21:39Z,OPEN,False,1918,9,51,https://github.com/pawosm-arm,compiler-families: LLVM compiler family,14,[],https://github.com/openhpc/ohpc/pull/449,https://github.com/pawosm-arm,5,https://github.com/openhpc/ohpc/pull/449#issuecomment-305248689,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Improved version force-pushed,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,449,2017-05-15T15:46:36Z,,2017-08-22T17:21:39Z,OPEN,False,1918,9,51,https://github.com/pawosm-arm,compiler-families: LLVM compiler family,14,[],https://github.com/openhpc/ohpc/pull/449,https://github.com/adrianreber,6,https://github.com/openhpc/ohpc/pull/449#issuecomment-312261305,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"One more question concerning the used bootstrap compiler as there was mail thread on openhpc-devel about problems on aarch64.
Did you try building llvm with the OS compiler on CentOS 7.3 and you get the failure you mentioned or was it a failure on CentOS 7.2. If possible I still would like to avoid the gcc-7 dependency.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,450,2017-05-15T16:00:56Z,2017-05-18T20:51:34Z,2017-05-18T20:51:34Z,MERGED,True,77,15,3,https://github.com/pawosm-arm,valgrind: use AArch64 fallback code only for ThunderX chips,1,[],https://github.com/openhpc/ohpc/pull/450,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/450,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,454,2017-05-23T20:46:19Z,2017-05-23T20:46:30Z,2017-05-23T20:46:30Z,MERGED,True,78,0,7,https://github.com/crbaird,Add BeeGFS client install and config recipe (#340),8,[],https://github.com/openhpc/ohpc/pull/454,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/454,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,455,2017-05-24T14:18:38Z,2017-05-31T20:48:12Z,2017-06-01T05:58:54Z,CLOSED,False,89,116,22,https://github.com/adrianreber,Also simplify the mpi selection,2,['infrastructure'],https://github.com/openhpc/ohpc/pull/455,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/455,"With the new flag %%ohpc_mpi_dependent the macro %%ohpc_setup_compiler
can automatically run the necessary things for MPI dependent packages.
With this change OHPC_setup_mpi is also removed from all SPEC files
as the ohpc-buildroot supplied version can be used by all packages.","With the new flag %%ohpc_mpi_dependent the macro %%ohpc_setup_compiler
can automatically run the necessary things for MPI dependent packages.
With this change OHPC_setup_mpi is also removed from all SPEC files
as the ohpc-buildroot supplied version can be used by all packages.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,455,2017-05-24T14:18:38Z,2017-05-31T20:48:12Z,2017-06-01T05:58:54Z,CLOSED,False,89,116,22,https://github.com/adrianreber,Also simplify the mpi selection,2,['infrastructure'],https://github.com/openhpc/ohpc/pull/455,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/455#issuecomment-305312668,"With the new flag %%ohpc_mpi_dependent the macro %%ohpc_setup_compiler
can automatically run the necessary things for MPI dependent packages.
With this change OHPC_setup_mpi is also removed from all SPEC files
as the ohpc-buildroot supplied version can be used by all packages.","More nice work here @adrianreber, thanks for the improvements. I landed this on 1.3.1 with the exception of bumping the release string. In the ohpc builds, OBS is managing that string for us so I like to leave it a canonical value. I realize we have some other specs that are not consistent, so I'll try to clean those up separately.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,455,2017-05-24T14:18:38Z,2017-05-31T20:48:12Z,2017-06-01T05:58:54Z,CLOSED,False,89,116,22,https://github.com/adrianreber,Also simplify the mpi selection,2,['infrastructure'],https://github.com/openhpc/ohpc/pull/455,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/455#issuecomment-305396624,"With the new flag %%ohpc_mpi_dependent the macro %%ohpc_setup_compiler
can automatically run the necessary things for MPI dependent packages.
With this change OHPC_setup_mpi is also removed from all SPEC files
as the ohpc-buildroot supplied version can be used by all packages.",@koomie Thanks for merging. I was not aware of OBS's release handling. Thanks for letting me know.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/456,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/456#issuecomment-305013516,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"Thanks for the separate cmake package. I guess the
compiler-families: LLVM compiler family
commit does not really belong in this PR. I will test the package tomorrow, but I have a few comments until then.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/pawosm-arm,3,https://github.com/openhpc/ohpc/pull/456#issuecomment-305027018,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"Hi,
The second commit indeed doesn't belong to this PR, still I'm working on the same branch on the LLVM compiler (fortunately, there's some progress in it).",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/pawosm-arm,4,https://github.com/openhpc/ohpc/pull/456#issuecomment-305035753,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,I've force-pushed updated commit.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/adrianreber,5,https://github.com/openhpc/ohpc/pull/456#issuecomment-305180929,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"I tested the package and it works. I can build llvm using this cmake RPM. Thanks.
To build outside of OBS the SPEC file needs
Source1: OHPC_macros
and I would like to see the %{?dist} tag being part of 'Release:'
@koomie should this be filed at submissions? Or can it be merged as is?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/pawosm-arm,6,https://github.com/openhpc/ohpc/pull/456#issuecomment-305226302,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,modified.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/chuckatkins,7,https://github.com/openhpc/ohpc/pull/456#issuecomment-310175562,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"Some of the dependent packages are missing.  CMake will still build since it uses it's own internal copies of things but to properly use system supplied dependencies, the full list of dev-packages is: bzip2-devel, curl-devel, expat-devel, ncurses-devel, jsoncpp-devel, libarchive-devel, xz-devel, rhash-devel, libuv-devel, and zlib-devel.
Also, configure is just a wrapper around the bootstrap script.  Really you'll
want to call it directly instead: ./bootstrap --prefix=${install_path} --system-libs --no-qt-gui (actually without the --system-libs option none of the dependencies get used anyways).
Lastly, since you're updating, at this point the 3.8.2 patch release is available
instead of 3.8.1.
(Sorry this may be coming out of the blue.  I don't really contribute much to this project but I am a regular contributor to CMake, just in case you were wondering ""who the heck is this guy, he's not a regular here"")",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/pawosm-arm,8,https://github.com/openhpc/ohpc/pull/456#issuecomment-310651499,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"Hi,
I wouldn't consider myself as regular either.
Changes pushed:

Updated 3.8.1 to 3.8.2
used ./bootstrap with provided flags (except --system-libs) instead of ./configure wrapper
added devel-dependencies but only those that resolve on OpenHPC OBS

Due to lack of flags like --no-system-libuv, the --system-libs flag can't be used.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/adrianreber,9,https://github.com/openhpc/ohpc/pull/456#issuecomment-311064997,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,@koomie I would say this is ready to be merged. Probably the 1.3.2 branch? Do we need to go through submissions?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/koomie,10,https://github.com/openhpc/ohpc/pull/456#issuecomment-312258663,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,"Since this is a dependency for an item already accepted I don't think we need to file a separate submission. We're a bit heads down at the moment to prepare for a tutorial at the PEARC conference, but I will get a 1.3.2 build area setup in OBS and we can land this there.  Thanks.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,456,2017-05-24T14:30:30Z,2017-08-15T18:02:08Z,2017-08-15T18:02:09Z,CLOSED,False,530,0,19,https://github.com/pawosm-arm,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/456,https://github.com/crbaird,11,https://github.com/openhpc/ohpc/pull/456#issuecomment-322542105,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,pulled in 0a88af3,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,457,2017-05-25T21:13:49Z,2017-05-25T21:19:47Z,2017-05-25T21:20:13Z,MERGED,True,760,8,31,https://github.com/koomie,xCAT recipe,4,[],https://github.com/openhpc/ohpc/pull/457,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/457,starting draft for an example xCAT based recipe (#323),starting draft for an example xCAT based recipe (#323),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,459,2017-05-31T14:52:34Z,2017-05-31T20:08:16Z,2017-06-01T05:55:29Z,MERGED,True,6,0,1,https://github.com/adrianreber,OHPC_macros: fix build outside of OBS,1,[],https://github.com/openhpc/ohpc/pull/459,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/459,"When building the OpenHPC packages outside of OBS some builds for
CentOS/RHEL are failing as the necessary macros are not available. This
sets the 'rhel_version' macro to 700 if the 'rhel' macro equals 7.
Signed-off-by: Adrian Reber areber@redhat.com","When building the OpenHPC packages outside of OBS some builds for
CentOS/RHEL are failing as the necessary macros are not available. This
sets the 'rhel_version' macro to 700 if the 'rhel' macro equals 7.
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,459,2017-05-31T14:52:34Z,2017-05-31T20:08:16Z,2017-06-01T05:55:29Z,MERGED,True,6,0,1,https://github.com/adrianreber,OHPC_macros: fix build outside of OBS,1,[],https://github.com/openhpc/ohpc/pull/459,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/459#issuecomment-305301961,"When building the OpenHPC packages outside of OBS some builds for
CentOS/RHEL are failing as the necessary macros are not available. This
sets the 'rhel_version' macro to 700 if the 'rhel' macro equals 7.
Signed-off-by: Adrian Reber areber@redhat.com",Thanks.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,460,2017-06-01T09:56:28Z,2017-06-01T12:45:30Z,2017-06-01T13:46:02Z,MERGED,True,6,12,1,https://github.com/adrianreber,singularity: few small fixes to singularity.spec,1,[],https://github.com/openhpc/ohpc/pull/460,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/460,"The main reason for the changes was that the package was not building
without Source1: OHPC_macros outside of OBS.
Additionally:

removed %%_rel macro as it is not used in OpenHPC
removed unused definition of PNAME
removed BuildRoot as it is automatically set by RPM
moved building from the %%install to the %%build section
replaced %%{?mflags_install} in %%install with
%%{?_smp_mflags} in %%build


neither %%{?mflags} nor %%{?mflags_install} is defined
on CentOS:
rpm --eval '%{?mflags}'
rpm --eval '%{?mflags_install}'


but %%{?_smp_mflags} is defined:
rpm --eval '%{?_smp_mflags}'
-j2



removed %%clean section (automatically inserted by RPM)

Signed-off-by: Adrian Reber areber@redhat.com","The main reason for the changes was that the package was not building
without Source1: OHPC_macros outside of OBS.
Additionally:

removed %%_rel macro as it is not used in OpenHPC
removed unused definition of PNAME
removed BuildRoot as it is automatically set by RPM
moved building from the %%install to the %%build section
replaced %%{?mflags_install} in %%install with
%%{?_smp_mflags} in %%build


neither %%{?mflags} nor %%{?mflags_install} is defined
on CentOS:
rpm --eval '%{?mflags}'
rpm --eval '%{?mflags_install}'


but %%{?_smp_mflags} is defined:
rpm --eval '%{?_smp_mflags}'
-j2



removed %%clean section (automatically inserted by RPM)

Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,460,2017-06-01T09:56:28Z,2017-06-01T12:45:30Z,2017-06-01T13:46:02Z,MERGED,True,6,12,1,https://github.com/adrianreber,singularity: few small fixes to singularity.spec,1,[],https://github.com/openhpc/ohpc/pull/460,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/460#issuecomment-305482383,"The main reason for the changes was that the package was not building
without Source1: OHPC_macros outside of OBS.
Additionally:

removed %%_rel macro as it is not used in OpenHPC
removed unused definition of PNAME
removed BuildRoot as it is automatically set by RPM
moved building from the %%install to the %%build section
replaced %%{?mflags_install} in %%install with
%%{?_smp_mflags} in %%build


neither %%{?mflags} nor %%{?mflags_install} is defined
on CentOS:
rpm --eval '%{?mflags}'
rpm --eval '%{?mflags_install}'


but %%{?_smp_mflags} is defined:
rpm --eval '%{?_smp_mflags}'
-j2



removed %%clean section (automatically inserted by RPM)

Signed-off-by: Adrian Reber areber@redhat.com","Thanks, @adrianreber",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,477,2017-07-04T10:39:10Z,2017-08-25T14:15:44Z,2018-07-16T19:38:04Z,MERGED,True,7,38,1,https://github.com/adrianreber,nagios: fix building on RHEL/CentOS,1,[],https://github.com/openhpc/ohpc/pull/477,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/477,"Building the nagios package outside of OBS failed as it was missing the
BR on systemd. This adds the necessary BuildRequires and cleaned up the
nagios spec file a bit:

removed setting PROJ_DELIM as it comes from OHPC_macros
removed setting PNAME as it is not used
removed BuildRoot - automatically defined by RPM
fixed systemd Requires and BuildRequires
removed German summary as no other package has localized summaries
removed trailing whitespaces
removed cleaning of buildroot - done by RPM
use predefined systemd macros for service control in preun/post/postun

Signed-off-by: Adrian Reber areber@redhat.com","Building the nagios package outside of OBS failed as it was missing the
BR on systemd. This adds the necessary BuildRequires and cleaned up the
nagios spec file a bit:

removed setting PROJ_DELIM as it comes from OHPC_macros
removed setting PNAME as it is not used
removed BuildRoot - automatically defined by RPM
fixed systemd Requires and BuildRequires
removed German summary as no other package has localized summaries
removed trailing whitespaces
removed cleaning of buildroot - done by RPM
use predefined systemd macros for service control in preun/post/postun

Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,477,2017-07-04T10:39:10Z,2017-08-25T14:15:44Z,2018-07-16T19:38:04Z,MERGED,True,7,38,1,https://github.com/adrianreber,nagios: fix building on RHEL/CentOS,1,[],https://github.com/openhpc/ohpc/pull/477,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/477#issuecomment-312845882,"Building the nagios package outside of OBS failed as it was missing the
BR on systemd. This adds the necessary BuildRequires and cleaned up the
nagios spec file a bit:

removed setting PROJ_DELIM as it comes from OHPC_macros
removed setting PNAME as it is not used
removed BuildRoot - automatically defined by RPM
fixed systemd Requires and BuildRequires
removed German summary as no other package has localized summaries
removed trailing whitespaces
removed cleaning of buildroot - done by RPM
use predefined systemd macros for service control in preun/post/postun

Signed-off-by: Adrian Reber areber@redhat.com",I have not tested this on suse. I guess (hope) that the systemd rpm macros are the same.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,478,2017-07-04T13:56:49Z,2018-07-02T12:21:33Z,2018-07-16T19:38:08Z,CLOSED,False,101,74,10,https://github.com/adrianreber,[RFC] openmpi: support multiple Open MPI versions in parallel,2,[],https://github.com/openhpc/ohpc/pull/478,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/478,"In order to support the installation of multiple Open MPI versions in
parallel and the compilation of dependent software packages, the
Open MPI spec file, OHPC_macros and OHPC_setup_mpi has been enhanced.
In addition to defining mpi_family like mvapich2, mpich and openmpi the
mpi_family can be defined as openmpiv1.10, openmpiv2.0, openmpiv2.1 and
openmpiv3.0 (rc1 currently). This enables to compile and install the
complete Open MPI dependent software stack in parallel to each other.
Using 'modules av' gives now the following after loading the compiler
module:
        ------ /opt/ohpc/pub/moduledeps/gnu ------

openmpi/1.10.7    openmpi/2.0.3    openmpi/2.1.1    openmpi/3.0.0rc1 (D)
Loading one of the Open MPI modules makes software based on that version
available:
        -------- /opt/ohpc/pub/moduledeps/gnu-openmpiv2.1 ------

imb/4.1
Signed-off-by: Adrian Reber areber@redhat.com","In order to support the installation of multiple Open MPI versions in
parallel and the compilation of dependent software packages, the
Open MPI spec file, OHPC_macros and OHPC_setup_mpi has been enhanced.
In addition to defining mpi_family like mvapich2, mpich and openmpi the
mpi_family can be defined as openmpiv1.10, openmpiv2.0, openmpiv2.1 and
openmpiv3.0 (rc1 currently). This enables to compile and install the
complete Open MPI dependent software stack in parallel to each other.
Using 'modules av' gives now the following after loading the compiler
module:
        ------ /opt/ohpc/pub/moduledeps/gnu ------

openmpi/1.10.7    openmpi/2.0.3    openmpi/2.1.1    openmpi/3.0.0rc1 (D)
Loading one of the Open MPI modules makes software based on that version
available:
        -------- /opt/ohpc/pub/moduledeps/gnu-openmpiv2.1 ------

imb/4.1
Signed-off-by: Adrian Reber areber@redhat.com",True,{'THUMBS_UP': ['https://github.com/viniciusferrao']}
openhpc/ohpc,https://github.com/openhpc/ohpc,478,2017-07-04T13:56:49Z,2018-07-02T12:21:33Z,2018-07-16T19:38:08Z,CLOSED,False,101,74,10,https://github.com/adrianreber,[RFC] openmpi: support multiple Open MPI versions in parallel,2,[],https://github.com/openhpc/ohpc/pull/478,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/478#issuecomment-313307252,"In order to support the installation of multiple Open MPI versions in
parallel and the compilation of dependent software packages, the
Open MPI spec file, OHPC_macros and OHPC_setup_mpi has been enhanced.
In addition to defining mpi_family like mvapich2, mpich and openmpi the
mpi_family can be defined as openmpiv1.10, openmpiv2.0, openmpiv2.1 and
openmpiv3.0 (rc1 currently). This enables to compile and install the
complete Open MPI dependent software stack in parallel to each other.
Using 'modules av' gives now the following after loading the compiler
module:
        ------ /opt/ohpc/pub/moduledeps/gnu ------

openmpi/1.10.7    openmpi/2.0.3    openmpi/2.1.1    openmpi/3.0.0rc1 (D)
Loading one of the Open MPI modules makes software based on that version
available:
        -------- /opt/ohpc/pub/moduledeps/gnu-openmpiv2.1 ------

imb/4.1
Signed-off-by: Adrian Reber areber@redhat.com",Updated with additional fixes to build all packages with all Open MPI versions.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,480,2017-07-05T12:49:51Z,2017-08-11T13:44:51Z,2017-08-11T13:44:56Z,CLOSED,False,11,2,1,https://github.com/chuckatkins,Use distributed compiler version for Intel MPI,1,[],https://github.com/openhpc/ohpc/pull/480,https://github.com/chuckatkins,1,https://github.com/openhpc/ohpc/pull/480,"This creates a consistent versioning for Intel MPI when the version string extracted from mpiicc has oddball modifiers like ""2017 Update 2"" or ""2018 Beta Update 1"".
The only issue I see this change could cause is that it creates new modules for all the intel-mpi installations since a new versioning scheme is used to be consistent with the compiler versions.  This won't invalidate any existing module using the old scheme (i.e. 2017.2 for 2017 Update 2) but it will create duplicate modules for those already present.  If this change were to be accepted, then perhaps it could be modified with a warning during the post-install step for the user to purge previous modules that are versioned differently?
Or if the re-versioning is too disruptive I can easily rebase it for 1.4","This creates a consistent versioning for Intel MPI when the version string extracted from mpiicc has oddball modifiers like ""2017 Update 2"" or ""2018 Beta Update 1"".
The only issue I see this change could cause is that it creates new modules for all the intel-mpi installations since a new versioning scheme is used to be consistent with the compiler versions.  This won't invalidate any existing module using the old scheme (i.e. 2017.2 for 2017 Update 2) but it will create duplicate modules for those already present.  If this change were to be accepted, then perhaps it could be modified with a warning during the post-install step for the user to purge previous modules that are versioned differently?
Or if the re-versioning is too disruptive I can easily rebase it for 1.4",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,481,2017-07-06T07:00:59Z,2017-08-25T13:45:48Z,2017-08-25T13:49:19Z,MERGED,True,72,103,6,https://github.com/adrianreber,fix building tau and cube and some cleanups,2,[],https://github.com/openhpc/ohpc/pull/481,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/481,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,481,2017-07-06T07:00:59Z,2017-08-25T13:45:48Z,2017-08-25T13:49:19Z,MERGED,True,72,103,6,https://github.com/adrianreber,fix building tau and cube and some cleanups,2,[],https://github.com/openhpc/ohpc/pull/481,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/481#issuecomment-324925683,,Thanks @adrianreber. Landed on 1.3.2.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,482,2017-07-06T14:38:33Z,2017-07-15T02:19:18Z,2017-07-15T02:19:23Z,MERGED,True,157,23,5,https://github.com/adrianreber,build_order: resolve and print out the correct build order,6,[],https://github.com/openhpc/ohpc/pull/482,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/482,"Building the OpenHPC packages outside of OBS in clean environment requires each time to manually decide in which order to build the packages. These scripts extract (Build)Requires of all spec files and try to resolve to correct order in which the OpenHPC packages should be built.
$ misc/build_order.sh
lua-filesystem.spec lua-bitop.spec sigar.spec luaposix.spec lmod.spec ohpc-filesystem.spec munge.spec [...]","Building the OpenHPC packages outside of OBS in clean environment requires each time to manually decide in which order to build the packages. These scripts extract (Build)Requires of all spec files and try to resolve to correct order in which the OpenHPC packages should be built.
$ misc/build_order.sh
lua-filesystem.spec lua-bitop.spec sigar.spec luaposix.spec lmod.spec ohpc-filesystem.spec munge.spec [...]",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,485,2017-07-14T15:08:46Z,2017-07-14T15:11:04Z,2017-07-14T15:11:04Z,MERGED,True,536,0,4,https://github.com/koomie,Plasma addition,2,[],https://github.com/openhpc/ohpc/pull/485,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/485,Initiating PR for PLASMA based on initial work by @takekato (#469).,Initiating PR for PLASMA based on initial work by @takekato (#469).,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,487,2017-07-15T03:53:00Z,2017-07-15T03:54:22Z,2017-07-15T04:08:21Z,MERGED,True,764,0,5,https://github.com/koomie,Scotch,4,[],https://github.com/openhpc/ohpc/pull/487,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/487,PR to land Scotch based on intial work by @takekato (#467),PR to land Scotch based on intial work by @takekato (#467),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,488,2017-07-15T04:07:39Z,2017-07-15T04:08:02Z,2017-07-15T04:08:10Z,MERGED,True,812,0,5,https://github.com/koomie,Ptscotch,4,[],https://github.com/openhpc/ohpc/pull/488,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/488,PR to land pscotch based on intial work by @takekato (#467),PR to land pscotch based on intial work by @takekato (#467),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,489,2017-07-17T20:11:09Z,2017-07-17T20:11:29Z,2017-07-17T20:11:48Z,MERGED,True,17,60,1,https://github.com/crbaird,standardize serial scotch spec file,7,[],https://github.com/openhpc/ohpc/pull/489,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/489,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,490,2017-07-17T22:06:42Z,2017-07-17T22:07:04Z,2017-07-17T22:49:08Z,MERGED,True,11542,0,55,https://github.com/crbaird,io-libs: add pnetcdf 1.8.1,1,[],https://github.com/openhpc/ohpc/pull/490,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/490,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,491,2017-07-19T03:28:36Z,2017-07-19T03:29:21Z,2017-07-19T03:29:21Z,MERGED,True,530,0,19,https://github.com/crbaird,adding newer CMake as needed by LLVM,1,[],https://github.com/openhpc/ohpc/pull/491,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/491,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,Signed-off-by: Paul Osmialowski pawel.osmialowski@arm.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,493,2017-07-19T13:31:12Z,2017-07-27T23:16:47Z,2017-07-28T06:56:14Z,MERGED,True,4,0,2,https://github.com/linuxstudio,fixed documentation for (#492),1,[],https://github.com/openhpc/ohpc/pull/493,https://github.com/linuxstudio,1,https://github.com/openhpc/ohpc/pull/493,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,519,2017-08-03T12:57:23Z,2017-08-25T13:56:58Z,2017-08-25T14:11:20Z,MERGED,True,202,27,9,https://github.com/a74nh,Update the install guide for Aarch64,3,[],https://github.com/openhpc/ohpc/pull/519,https://github.com/a74nh,1,https://github.com/openhpc/ohpc/pull/519,"I was browsing the Aarch64 install guide and noticed a few differences compared to x86:


The ""Enable forwarding of system logs"" section was in a different place.


The beegfs section was missing. It's possible this was intentional, however the rest of the aarch64 doc does reference beegfs throughout.


Some of the tables in the appendix ""Package Manifest"" were out of date. This was only for the tables without gnu7 references in them.


The document is also incorrect for 1.3.1 and 1.3 in the same ways, but it's probably too late to update now.","I was browsing the Aarch64 install guide and noticed a few differences compared to x86:


The ""Enable forwarding of system logs"" section was in a different place.


The beegfs section was missing. It's possible this was intentional, however the rest of the aarch64 doc does reference beegfs throughout.


Some of the tables in the appendix ""Package Manifest"" were out of date. This was only for the tables without gnu7 references in them.


The document is also incorrect for 1.3.1 and 1.3 in the same ways, but it's probably too late to update now.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,519,2017-08-03T12:57:23Z,2017-08-25T13:56:58Z,2017-08-25T14:11:20Z,MERGED,True,202,27,9,https://github.com/a74nh,Update the install guide for Aarch64,3,[],https://github.com/openhpc/ohpc/pull/519,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/519#issuecomment-324931737,"I was browsing the Aarch64 install guide and noticed a few differences compared to x86:


The ""Enable forwarding of system logs"" section was in a different place.


The beegfs section was missing. It's possible this was intentional, however the rest of the aarch64 doc does reference beegfs throughout.


Some of the tables in the appendix ""Package Manifest"" were out of date. This was only for the tables without gnu7 references in them.


The document is also incorrect for 1.3.1 and 1.3 in the same ways, but it's probably too late to update now.","@a74nh, note that I landed this on the 1.3.2 branch in preparation for the next release but reverted commit c456296.  The reason beegfs was not in there is because we are currently instructing users to leverage public beegfs repos available at https://www.beegfs.io/release/beegfs_6/dists/
At present, they do not have aarch64 builds published, so we didn't call out the installation in the recipe.
PBS was not likely in the manifest as we don't have a test cluster for it, but happy to put it in there.  Note that the manifest versions will be changing here as we update for the 1.3.2 repo configuration.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,522,2017-08-08T19:48:32Z,2018-03-30T20:16:24Z,2018-03-30T20:16:24Z,CLOSED,False,3734,50,86,https://github.com/mrmhodak,Adding xCAT stateful recipe,4,[],https://github.com/openhpc/ohpc/pull/522,https://github.com/mrmhodak,1,https://github.com/openhpc/ohpc/pull/522,"Adding xCAT stateful recipe -  CentOS Slurm only for now. Will add more later.
The provisioning strategy is to have have xCAT first install a generic OS image and do OpenHPC installation and other customization using a postbootscript run by xCAT after OS install and reboot. The process pretty much exactly follows chroot image creation in stateless recipes, with the exception that commands  are added to script the file for later execution (rather than executed in chroot environment).  Also, all services on the compute nodes need to be explicitly started because the nodes will not be rebooted again. Additionally, local repo mirrors are used for installation on the nodes so that nodes do not have to go to the Internet to get packages.
Multiple other changes including:


Using xCAT command wherever possible- psh to run commands on all nodes, rcons to access SOL consoles, rpower and rsetboot to start provisioning process.


Adjustments to parse_doc.pl needed to extract version number to download the right tarball. (BTW, I cannot see any way for the script to find the full version number (i.e. 1.3.1). That is stored in ohpc-doc.sty, which is not read by the script. For now I have created \VERLONG command in steps.tex)


Several files have been split into ""_stateful"" version even though changes are minor, but I could not find a toggle reliably working for ""lslisting"" environment.
Le me know if anything needs to be changed/fixed.","Adding xCAT stateful recipe -  CentOS Slurm only for now. Will add more later.
The provisioning strategy is to have have xCAT first install a generic OS image and do OpenHPC installation and other customization using a postbootscript run by xCAT after OS install and reboot. The process pretty much exactly follows chroot image creation in stateless recipes, with the exception that commands  are added to script the file for later execution (rather than executed in chroot environment).  Also, all services on the compute nodes need to be explicitly started because the nodes will not be rebooted again. Additionally, local repo mirrors are used for installation on the nodes so that nodes do not have to go to the Internet to get packages.
Multiple other changes including:


Using xCAT command wherever possible- psh to run commands on all nodes, rcons to access SOL consoles, rpower and rsetboot to start provisioning process.


Adjustments to parse_doc.pl needed to extract version number to download the right tarball. (BTW, I cannot see any way for the script to find the full version number (i.e. 1.3.1). That is stored in ohpc-doc.sty, which is not read by the script. For now I have created \VERLONG command in steps.tex)


Several files have been split into ""_stateful"" version even though changes are minor, but I could not find a toggle reliably working for ""lslisting"" environment.
Le me know if anything needs to be changed/fixed.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,522,2017-08-08T19:48:32Z,2018-03-30T20:16:24Z,2018-03-30T20:16:24Z,CLOSED,False,3734,50,86,https://github.com/mrmhodak,Adding xCAT stateful recipe,4,[],https://github.com/openhpc/ohpc/pull/522,https://github.com/mrmhodak,2,https://github.com/openhpc/ohpc/pull/522#issuecomment-336560783,"Adding xCAT stateful recipe -  CentOS Slurm only for now. Will add more later.
The provisioning strategy is to have have xCAT first install a generic OS image and do OpenHPC installation and other customization using a postbootscript run by xCAT after OS install and reboot. The process pretty much exactly follows chroot image creation in stateless recipes, with the exception that commands  are added to script the file for later execution (rather than executed in chroot environment).  Also, all services on the compute nodes need to be explicitly started because the nodes will not be rebooted again. Additionally, local repo mirrors are used for installation on the nodes so that nodes do not have to go to the Internet to get packages.
Multiple other changes including:


Using xCAT command wherever possible- psh to run commands on all nodes, rcons to access SOL consoles, rpower and rsetboot to start provisioning process.


Adjustments to parse_doc.pl needed to extract version number to download the right tarball. (BTW, I cannot see any way for the script to find the full version number (i.e. 1.3.1). That is stored in ohpc-doc.sty, which is not read by the script. For now I have created \VERLONG command in steps.tex)


Several files have been split into ""_stateful"" version even though changes are minor, but I could not find a toggle reliably working for ""lslisting"" environment.
Le me know if anything needs to be changed/fixed.","#575 is the request to merge, this is now obsolete",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,522,2017-08-08T19:48:32Z,2018-03-30T20:16:24Z,2018-03-30T20:16:24Z,CLOSED,False,3734,50,86,https://github.com/mrmhodak,Adding xCAT stateful recipe,4,[],https://github.com/openhpc/ohpc/pull/522,https://github.com/crbaird,3,https://github.com/openhpc/ohpc/pull/522#issuecomment-377612794,"Adding xCAT stateful recipe -  CentOS Slurm only for now. Will add more later.
The provisioning strategy is to have have xCAT first install a generic OS image and do OpenHPC installation and other customization using a postbootscript run by xCAT after OS install and reboot. The process pretty much exactly follows chroot image creation in stateless recipes, with the exception that commands  are added to script the file for later execution (rather than executed in chroot environment).  Also, all services on the compute nodes need to be explicitly started because the nodes will not be rebooted again. Additionally, local repo mirrors are used for installation on the nodes so that nodes do not have to go to the Internet to get packages.
Multiple other changes including:


Using xCAT command wherever possible- psh to run commands on all nodes, rcons to access SOL consoles, rpower and rsetboot to start provisioning process.


Adjustments to parse_doc.pl needed to extract version number to download the right tarball. (BTW, I cannot see any way for the script to find the full version number (i.e. 1.3.1). That is stored in ohpc-doc.sty, which is not read by the script. For now I have created \VERLONG command in steps.tex)


Several files have been split into ""_stateful"" version even though changes are minor, but I could not find a toggle reliably working for ""lslisting"" environment.
Le me know if anything needs to be changed/fixed.",tests passing in CI,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,523,2017-08-11T14:36:39Z,,2018-04-23T18:10:20Z,OPEN,False,54,24,2,https://github.com/chuckatkins,Set impi default version to match the loaded version of the intel-compiler,1,[],https://github.com/openhpc/ohpc/pull/523,https://github.com/chuckatkins,1,https://github.com/openhpc/ohpc/pull/523,Implementation of compiler <-> mpi version matching as discussed in #479 .  The only issue I currently see with this is that it still needs some way to deal with the lmod cache.  The impi version default changes when the intel module is loaded or swapped but the lmod cache doesn't reflect the change.,Implementation of compiler <-> mpi version matching as discussed in #479 .  The only issue I currently see with this is that it still needs some way to deal with the lmod cache.  The impi version default changes when the intel module is loaded or swapped but the lmod cache doesn't reflect the change.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,523,2017-08-11T14:36:39Z,,2018-04-23T18:10:20Z,OPEN,False,54,24,2,https://github.com/chuckatkins,Set impi default version to match the loaded version of the intel-compiler,1,[],https://github.com/openhpc/ohpc/pull/523,https://github.com/chuckatkins,2,https://github.com/openhpc/ohpc/pull/523#issuecomment-321887837,Implementation of compiler <-> mpi version matching as discussed in #479 .  The only issue I currently see with this is that it still needs some way to deal with the lmod cache.  The impi version default changes when the intel module is loaded or swapped but the lmod cache doesn't reflect the change.,"I've updated and reworked this, it should work correctly now, i.e., setting the default impi version to match its respective compiler, but still allow explicit combinations of any version to be loaded.
As per the discussion in TACC/Lmod#312, this isn't really possible to do the way I had first attempted with a variable in the impi/.version file because of how the spider cache works.  However, I was able to do this through the directory structure.  Basically, the idea is to add a versioned folder in the moduledeps that is specific to the actual compiler version, just compiler family.  This will then have version files that set the default and then just symlink to the actual modules.  The resulting module layout would look like this:
First, the modules created by the intel compiler ohpc package:
# Compiler modules
modules/intel/1 # add moduledeps/versioned/intel/1 to the MODULEPATH
modules/intel/2 # add moduledeps/versioned/intel/2 to the MODULEPATH
modules/intel/3 # add moduledeps/versioned/intel/3 to the MODULEPATH

# A compiler-version specific impi .version file to set the impi default specific
# to the compiler version
moduledeps/versioned/intel/1/impi/.version #set default to ""10""
moduledeps/versioned/intel/2/impi/.version #set default to ""20""
moduledeps/versioned/intel/3/impi/.version #set default to ""30""

And then files created by the impi ohpc package:
# gnu-compiler impi modules are nothing special
moduledeps/gnu/impi/10
moduledeps/gnu/impi/20
moduledeps/gnu/impi/30

# intel-compiler impi modules are created, but hidden in a . folder
moduledeps/intel/.impi/10
moduledeps/intel/.impi/20
moduledeps/intel/.impi/30

# intel-compiler version specific modules, really just symlinks to the actual modules
moduledeps/versioned/intel/1/impi/10 -> moduledeps/intel/.impi/10
moduledeps/versioned/intel/1/impi/20 -> moduledeps/intel/.impi/20
moduledeps/versioned/intel/1/impi/30 -> moduledeps/intel/.impi/30
moduledeps/versioned/intel/2/impi/10 -> moduledeps/intel/.impi/10
moduledeps/versioned/intel/2/impi/20 -> moduledeps/intel/.impi/20
moduledeps/versioned/intel/2/impi/30 -> moduledeps/intel/.impi/30
moduledeps/versioned/intel/3/impi/10 -> moduledeps/intel/.impi/10
moduledeps/versioned/intel/3/impi/20 -> moduledeps/intel/.impi/20
moduledeps/versioned/intel/3/impi/30 -> moduledeps/intel/.impi/30",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,523,2017-08-11T14:36:39Z,,2018-04-23T18:10:20Z,OPEN,False,54,24,2,https://github.com/chuckatkins,Set impi default version to match the loaded version of the intel-compiler,1,[],https://github.com/openhpc/ohpc/pull/523,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/523#issuecomment-325034447,Implementation of compiler <-> mpi version matching as discussed in #479 .  The only issue I currently see with this is that it still needs some way to deal with the lmod cache.  The impi version default changes when the intel module is loaded or swapped but the lmod cache doesn't reflect the change.,"Many thanks for this detailed explanation. I grok the issue much better now. While thinking about this, I'm also thinking about a scenario which will surely happen at some point where there is ABI incompatibility with a future version of pxse. At that point, we would presumably want to call out the resulting pxse-linked builds as a new variant name - similar to when the gnu7 variant was introduced for gcc builds
That will necessitate the need to introduce unique MODULEPATHs (e.g. something like intel/intel19) which is related to the approach you are trying to take to relate impi to a subset of compiler versions.
I'd like to propose that we leave this open for now and cogitate on a solution that can hopefully deal with your compiler/mpi matching desires and prep for a new intel variant at some point.
We'll include the updated compatibility packages in the next v1.3.2 release (trying to get that out next week) since they do a better job on determining the underlying version and alleviate the dependency on things like intel-compxe-doc which caused some headaches for a couple of users.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,525,2017-08-18T06:41:33Z,2017-09-06T15:22:13Z,2017-09-06T15:22:13Z,CLOSED,False,109035,0,451,https://github.com/TakayukiTerajima,Plasma test,2,[],https://github.com/openhpc/ohpc/pull/525,https://github.com/TakayukiTerajima,1,https://github.com/openhpc/ohpc/pull/525,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,525,2017-08-18T06:41:33Z,2017-09-06T15:22:13Z,2017-09-06T15:22:13Z,CLOSED,False,109035,0,451,https://github.com/TakayukiTerajima,Plasma test,2,[],https://github.com/openhpc/ohpc/pull/525,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/525#issuecomment-327518759,,Plasma tests imported in 299bbec,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,532,2017-08-31T18:38:43Z,2017-09-06T14:47:00Z,2017-09-06T14:52:44Z,MERGED,True,28,16,2,https://github.com/chuckatkins,Fix version checks for Intel compiler and mpi with 2016,2,[],https://github.com/openhpc/ohpc/pull/532,https://github.com/chuckatkins,1,https://github.com/openhpc/ohpc/pull/532,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,534,2017-08-31T20:53:48Z,2017-10-11T21:10:28Z,2017-10-11T21:10:28Z,MERGED,True,140,0,2,https://github.com/chuckatkins,Add python-mpi4py (2.0.0),1,[],https://github.com/openhpc/ohpc/pull/534,https://github.com/chuckatkins,1,https://github.com/openhpc/ohpc/pull/534,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,534,2017-08-31T20:53:48Z,2017-10-11T21:10:28Z,2017-10-11T21:10:28Z,MERGED,True,140,0,2,https://github.com/chuckatkins,Add python-mpi4py (2.0.0),1,[],https://github.com/openhpc/ohpc/pull/534,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/534#issuecomment-326429733,,"Could I ask you to file a companion component submission request for mpi4py over at: https://github.com/openhpc/submissions?
It's intended to be pretty light weight and I would include references to this PR to indicate there is a starting .spec file (that's always helpful).",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,534,2017-08-31T20:53:48Z,2017-10-11T21:10:28Z,2017-10-11T21:10:28Z,MERGED,True,140,0,2,https://github.com/chuckatkins,Add python-mpi4py (2.0.0),1,[],https://github.com/openhpc/ohpc/pull/534,https://github.com/chuckatkins,3,https://github.com/openhpc/ohpc/pull/534#issuecomment-326430399,,Certainly!  I just wasn't clear on the process for requesting/submitting a new package (I probably missed it in the docs somewhere).  Should I close this then and work through that process instead?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,538,2017-09-08T18:03:03Z,2018-06-01T21:17:14Z,2018-06-01T21:17:14Z,MERGED,True,1,1,1,https://github.com/mrmhodak,Fix typo,1,[],https://github.com/openhpc/ohpc/pull/538,https://github.com/mrmhodak,1,https://github.com/openhpc/ohpc/pull/538,Typo in computes test,Typo in computes test,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,539,2017-09-11T09:03:44Z,2017-09-11T13:59:00Z,2017-10-17T19:18:02Z,MERGED,True,11,3,2,https://github.com/boegel,update EasyBuild to v3.4.0,4,[],https://github.com/openhpc/ohpc/pull/539,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/539,"(not sure which branch to target, so I went with master...)","(not sure which branch to target, so I went with master...)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,539,2017-09-11T09:03:44Z,2017-09-11T13:59:00Z,2017-10-17T19:18:02Z,MERGED,True,11,3,2,https://github.com/boegel,update EasyBuild to v3.4.0,4,[],https://github.com/openhpc/ohpc/pull/539,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/539#issuecomment-328537760,"(not sure which branch to target, so I went with master...)","Thanks, @boegel",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,556,2017-09-20T19:48:43Z,2017-09-20T20:36:54Z,2018-07-16T19:38:10Z,MERGED,True,8,8,3,https://github.com/adrianreber,gcc: update to 7.2.0,1,[],https://github.com/openhpc/ohpc/pull/556,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/556,"Fixes #542
Signed-off-by: Adrian Reber areber@redhat.com","Fixes #542
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,556,2017-09-20T19:48:43Z,2017-09-20T20:36:54Z,2018-07-16T19:38:10Z,MERGED,True,8,8,3,https://github.com/adrianreber,gcc: update to 7.2.0,1,[],https://github.com/openhpc/ohpc/pull/556,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/556#issuecomment-330961427,"Fixes #542
Signed-off-by: Adrian Reber areber@redhat.com",I was able to successfully rebuild all packages except llvm. For the few remaining build failures on 1.3.3 (unrelated to gcc 7.2.0) I will open a separate PR.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,557,2017-09-20T20:03:01Z,2017-09-25T21:49:16Z,2017-09-25T21:49:25Z,MERGED,True,8,13,4,https://github.com/adrianreber,Various cleanups and build fixes,1,[],https://github.com/openhpc/ohpc/pull/557,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/557,"This fixes a few broken builds on the 1.3.3 branch and does some minor
cleanups. Especially implicit defined or already defined parts from
OHPC_macros have been removed.
Signed-off-by: Adrian Reber areber@redhat.com","This fixes a few broken builds on the 1.3.3 branch and does some minor
cleanups. Especially implicit defined or already defined parts from
OHPC_macros have been removed.
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,558,2017-09-21T15:12:19Z,2017-09-26T18:31:07Z,2018-07-16T19:38:11Z,MERGED,True,66,711,4,https://github.com/adrianreber,Update pmix to 2.0.1 and Open MPI to 3.0.0,3,[],https://github.com/openhpc/ohpc/pull/558,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/558,"This PR tries to change the Open MPI package to include psm2 just like psm without creating any special packages like it used to do (openmpi-psm2-gnu7-ohpc) -> #475
This PR also updates pmix to 2.0.1 -> #466
This PR also updates Open MPI to 3.0.0 -> #543","This PR tries to change the Open MPI package to include psm2 just like psm without creating any special packages like it used to do (openmpi-psm2-gnu7-ohpc) -> #475
This PR also updates pmix to 2.0.1 -> #466
This PR also updates Open MPI to 3.0.0 -> #543",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,564,2017-10-04T09:44:47Z,2017-10-04T20:51:53Z,2017-10-04T20:51:53Z,MERGED,True,42,0,1,https://github.com/adrianreber,get_source.sh: script which tries to download sources,1,[],https://github.com/openhpc/ohpc/pull/564,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/564,"If building outside of OBS an automated way of getting all the
source tarballs is missing. Instead of manually downloading all
the required source archives this script tries to be clever
and downloads the source archives in the components SOURCES directory.
It only tries to download 'SourceX' lines with 'http' in them
and it also tries to handle URLs with '#[?]/' where the downloaded
source archive has another name then what rpmbuild is looking for.
It works like this:
$ misc/get_source.sh lmod.spec
./components/admin/lmod/SPECS/lmod.spec
Source0:   https://github.com/TACC/Lmod/archive/7.7.1.tar.gz#$/lmod-7.7.1.tar.gz
Trying to get https://github.com/TACC/Lmod/archive/7.7.1.tar.gz#$/lmod-7.7.1.tar.gz
https://github.com/TACC/Lmod/archive/7.7.1.tar.gz#$/lmod-7.7.1.tar.gz
Source1:   OHPC_macros
Signed-off-by: Adrian Reber areber@redhat.com","If building outside of OBS an automated way of getting all the
source tarballs is missing. Instead of manually downloading all
the required source archives this script tries to be clever
and downloads the source archives in the components SOURCES directory.
It only tries to download 'SourceX' lines with 'http' in them
and it also tries to handle URLs with '#[?]/' where the downloaded
source archive has another name then what rpmbuild is looking for.
It works like this:
$ misc/get_source.sh lmod.spec
./components/admin/lmod/SPECS/lmod.spec
Source0:   https://github.com/TACC/Lmod/archive/7.7.1.tar.gz#$/lmod-7.7.1.tar.gz
Trying to get https://github.com/TACC/Lmod/archive/7.7.1.tar.gz#$/lmod-7.7.1.tar.gz
https://github.com/TACC/Lmod/archive/7.7.1.tar.gz#$/lmod-7.7.1.tar.gz
Source1:   OHPC_macros
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,568,2017-10-10T14:19:42Z,2017-10-17T17:49:12Z,2017-10-17T18:21:25Z,MERGED,True,7,587,1,https://github.com/adrianreber,python-Cython: fixed building python-Cython,2,[],https://github.com/openhpc/ohpc/pull/568,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/568,"Added OHPC_macros for correct PROJ_DELIM
Removed reference to Suse and http://bugs.opensuse.org/ as it is
an OpenHPC spec file now
Removed old changelog entries

Signed-off-by: Adrian Reber areber@redhat.com","Added OHPC_macros for correct PROJ_DELIM
Removed reference to Suse and http://bugs.opensuse.org/ as it is
an OpenHPC spec file now
Removed old changelog entries

Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,569,2017-10-11T09:06:45Z,2017-10-16T16:05:34Z,2017-10-16T16:05:46Z,MERGED,True,6,6,3,https://github.com/jabl,Update NFS mount options in docs,1,['documentation'],https://github.com/openhpc/ohpc/pull/569,https://github.com/jabl,1,https://github.com/openhpc/ohpc/pull/569,"By not setting rsize/wsize, the client and server will autonegotiate
the maximum sizes, leading typically to the best performance.


cto is the default NFS-standard conforming semantics so no need to
specify it explicitly.


nodev,nosuid are for security. If /opt/ohpc/pub contains no suid
binaries, one could add nosuid to that mount as well.


noatime is good for performance, and atime updates are typically
useless.","By not setting rsize/wsize, the client and server will autonegotiate
the maximum sizes, leading typically to the best performance.


cto is the default NFS-standard conforming semantics so no need to
specify it explicitly.


nodev,nosuid are for security. If /opt/ohpc/pub contains no suid
binaries, one could add nosuid to that mount as well.


noatime is good for performance, and atime updates are typically
useless.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,569,2017-10-11T09:06:45Z,2017-10-16T16:05:34Z,2017-10-16T16:05:46Z,MERGED,True,6,6,3,https://github.com/jabl,Update NFS mount options in docs,1,['documentation'],https://github.com/openhpc/ohpc/pull/569,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/569#issuecomment-335776258,"By not setting rsize/wsize, the client and server will autonegotiate
the maximum sizes, leading typically to the best performance.


cto is the default NFS-standard conforming semantics so no need to
specify it explicitly.


nodev,nosuid are for security. If /opt/ohpc/pub contains no suid
binaries, one could add nosuid to that mount as well.


noatime is good for performance, and atime updates are typically
useless.","Just a quick comment on nosuid. Singularity and pbspro rely for a few binaries on suid
https://github.com/openhpc/ohpc/blob/obs/OpenHPC_1.3.3_Factory/components/runtimes/singularity/SPECS/singularity.spec#L154
So that nosuid sounds problematic for those two cases at least.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,569,2017-10-11T09:06:45Z,2017-10-16T16:05:34Z,2017-10-16T16:05:46Z,MERGED,True,6,6,3,https://github.com/jabl,Update NFS mount options in docs,1,['documentation'],https://github.com/openhpc/ohpc/pull/569,https://github.com/jabl,3,https://github.com/openhpc/ohpc/pull/569#issuecomment-335779790,"By not setting rsize/wsize, the client and server will autonegotiate
the maximum sizes, leading typically to the best performance.


cto is the default NFS-standard conforming semantics so no need to
specify it explicitly.


nodev,nosuid are for security. If /opt/ohpc/pub contains no suid
binaries, one could add nosuid to that mount as well.


noatime is good for performance, and atime updates are typically
useless.","Thanks for the heads-up. Yes, that means that /opt/ohpc/pub should not be mounted nosuid, although it shouldn't be a problem for /home.
Now that you mention Singularity, does nodev break mounting container images? If so, /home shouldn't be mounted nodev I guess? Ostensibly, nodev should prevent character or block special files, but container images are regular files. However inside the container image there's /dev, /proc and such, might that be a problem?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,569,2017-10-11T09:06:45Z,2017-10-16T16:05:34Z,2017-10-16T16:05:46Z,MERGED,True,6,6,3,https://github.com/jabl,Update NFS mount options in docs,1,['documentation'],https://github.com/openhpc/ohpc/pull/569,https://github.com/jmstover,4,https://github.com/openhpc/ohpc/pull/569#issuecomment-335849658,"By not setting rsize/wsize, the client and server will autonegotiate
the maximum sizes, leading typically to the best performance.


cto is the default NFS-standard conforming semantics so no need to
specify it explicitly.


nodev,nosuid are for security. If /opt/ohpc/pub contains no suid
binaries, one could add nosuid to that mount as well.


noatime is good for performance, and atime updates are typically
useless.","@gmkurtzer
Can you comment on the nodev option to a mount with Singularity? I... don't know about that.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,569,2017-10-11T09:06:45Z,2017-10-16T16:05:34Z,2017-10-16T16:05:46Z,MERGED,True,6,6,3,https://github.com/jabl,Update NFS mount options in docs,1,['documentation'],https://github.com/openhpc/ohpc/pull/569,https://github.com/gmkurtzer,5,https://github.com/openhpc/ohpc/pull/569#issuecomment-336229214,"By not setting rsize/wsize, the client and server will autonegotiate
the maximum sizes, leading typically to the best performance.


cto is the default NFS-standard conforming semantics so no need to
specify it explicitly.


nodev,nosuid are for security. If /opt/ohpc/pub contains no suid
binaries, one could add nosuid to that mount as well.


noatime is good for performance, and atime updates are typically
useless.","The nodev mount option should not be a problem for Singularity. The only NFS mount options that have been a problem is no_root_squash on a directory where a Singularity image file exists, and nosuid on an exported directory where Singularity has been installed.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,572,2017-10-12T07:38:53Z,2017-10-16T21:28:41Z,2017-10-17T14:12:15Z,MERGED,True,409,6,5,https://github.com/adrianreber,fix building prun and meta-packages due to missing files,2,[],https://github.com/openhpc/ohpc/pull/572,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/572,Signed-off-by: Adrian Reber areber@redhat.com,Signed-off-by: Adrian Reber areber@redhat.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,572,2017-10-12T07:38:53Z,2017-10-16T21:28:41Z,2017-10-17T14:12:15Z,MERGED,True,409,6,5,https://github.com/adrianreber,fix building prun and meta-packages due to missing files,2,[],https://github.com/openhpc/ohpc/pull/572,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/572#issuecomment-336047091,Signed-off-by: Adrian Reber areber@redhat.com,This is pretty simple as it only adds the missing LICENSE files to the SOURCES directory. This could also be a link or we could generally move the LICENSE file to the SOURCES directory instead of being in one directory above.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,572,2017-10-12T07:38:53Z,2017-10-16T21:28:41Z,2017-10-17T14:12:15Z,MERGED,True,409,6,5,https://github.com/adrianreber,fix building prun and meta-packages due to missing files,2,[],https://github.com/openhpc/ohpc/pull/572,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/572#issuecomment-336957000,Signed-off-by: Adrian Reber areber@redhat.com,I pushed some more fixes. The second commit tries to add '3's in two more openmpi dependent spec files.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,573,2017-10-12T07:45:33Z,2017-10-13T13:30:05Z,2018-07-16T19:38:15Z,MERGED,True,20,2,2,https://github.com/adrianreber,misc/build_order: fix build_order scripts,1,[],https://github.com/openhpc/ohpc/pull/573,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/573,"The build_order scripts are now skipping packages starting with
'kmod' and the RPM defines are now correct when running on Fedora.
Signed-off-by: Adrian Reber areber@redhat.com","The build_order scripts are now skipping packages starting with
'kmod' and the RPM defines are now correct when running on Fedora.
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,575,2017-10-13T18:25:39Z,2018-01-23T04:31:05Z,2018-01-23T04:31:06Z,CLOSED,False,1224,46,48,https://github.com/mrmhodak,Adding xCAT stateful recipe,5,[],https://github.com/openhpc/ohpc/pull/575,https://github.com/mrmhodak,1,https://github.com/openhpc/ohpc/pull/575,"This is an equivalent to original  request #522 ,  but updated to 1.3.3 with minor adjustments. I will close the old request.
Here is a full description from the previous PR:
Adding xCAT stateful recipe - CentOS Slurm only for now. Will add more later.
The provisioning strategy is to have have xCAT first install a generic OS image and do OpenHPC installation and other customization using a postbootscript run by xCAT after OS install and reboot. The process pretty much exactly follows chroot image creation in stateless recipes, with the exception that commands are added to script the file for later execution (rather than executed in chroot environment). Also, all services on the compute nodes need to be explicitly started because the nodes will not be rebooted again. Additionally, local repo mirrors are used for installation on the nodes so that nodes do not have to go to the Internet to get packages.
Multiple other changes including:
Using xCAT command wherever possible- psh to run commands on all nodes, rcons to access SOL consoles, rpower and rsetboot to start provisioning process.
Adjustments to parse_doc.pl needed to extract version number to download the right tarball. (BTW, I cannot see any way for the script to find the full version number (i.e. 1.3.1). That is stored in ohpc-doc.sty, which is not read by the script. For now I have created \VERLONG command in steps.tex)
Several files have been split into ""_stateful"" version even though changes are minor, but I could not find a toggle reliably working for ""lslisting"" environment.
Le me know if anything needs to be changed/fixed.","This is an equivalent to original  request #522 ,  but updated to 1.3.3 with minor adjustments. I will close the old request.
Here is a full description from the previous PR:
Adding xCAT stateful recipe - CentOS Slurm only for now. Will add more later.
The provisioning strategy is to have have xCAT first install a generic OS image and do OpenHPC installation and other customization using a postbootscript run by xCAT after OS install and reboot. The process pretty much exactly follows chroot image creation in stateless recipes, with the exception that commands are added to script the file for later execution (rather than executed in chroot environment). Also, all services on the compute nodes need to be explicitly started because the nodes will not be rebooted again. Additionally, local repo mirrors are used for installation on the nodes so that nodes do not have to go to the Internet to get packages.
Multiple other changes including:
Using xCAT command wherever possible- psh to run commands on all nodes, rcons to access SOL consoles, rpower and rsetboot to start provisioning process.
Adjustments to parse_doc.pl needed to extract version number to download the right tarball. (BTW, I cannot see any way for the script to find the full version number (i.e. 1.3.1). That is stored in ohpc-doc.sty, which is not read by the script. For now I have created \VERLONG command in steps.tex)
Several files have been split into ""_stateful"" version even though changes are minor, but I could not find a toggle reliably working for ""lslisting"" environment.
Le me know if anything needs to be changed/fixed.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,575,2017-10-13T18:25:39Z,2018-01-23T04:31:05Z,2018-01-23T04:31:06Z,CLOSED,False,1224,46,48,https://github.com/mrmhodak,Adding xCAT stateful recipe,5,[],https://github.com/openhpc/ohpc/pull/575,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/575#issuecomment-340759816,"This is an equivalent to original  request #522 ,  but updated to 1.3.3 with minor adjustments. I will close the old request.
Here is a full description from the previous PR:
Adding xCAT stateful recipe - CentOS Slurm only for now. Will add more later.
The provisioning strategy is to have have xCAT first install a generic OS image and do OpenHPC installation and other customization using a postbootscript run by xCAT after OS install and reboot. The process pretty much exactly follows chroot image creation in stateless recipes, with the exception that commands are added to script the file for later execution (rather than executed in chroot environment). Also, all services on the compute nodes need to be explicitly started because the nodes will not be rebooted again. Additionally, local repo mirrors are used for installation on the nodes so that nodes do not have to go to the Internet to get packages.
Multiple other changes including:
Using xCAT command wherever possible- psh to run commands on all nodes, rcons to access SOL consoles, rpower and rsetboot to start provisioning process.
Adjustments to parse_doc.pl needed to extract version number to download the right tarball. (BTW, I cannot see any way for the script to find the full version number (i.e. 1.3.1). That is stored in ohpc-doc.sty, which is not read by the script. For now I have created \VERLONG command in steps.tex)
Several files have been split into ""_stateful"" version even though changes are minor, but I could not find a toggle reliably working for ""lslisting"" environment.
Le me know if anything needs to be changed/fixed.","We're having some issues with the current xCAT stateless recipe which I need to iron out for the next 1.3.3 release. Consequently, will schedule this stateful recipe for 1.3.4 milestone.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,575,2017-10-13T18:25:39Z,2018-01-23T04:31:05Z,2018-01-23T04:31:06Z,CLOSED,False,1224,46,48,https://github.com/mrmhodak,Adding xCAT stateful recipe,5,[],https://github.com/openhpc/ohpc/pull/575,https://github.com/mrmhodak,3,https://github.com/openhpc/ohpc/pull/575#issuecomment-354613152,"This is an equivalent to original  request #522 ,  but updated to 1.3.3 with minor adjustments. I will close the old request.
Here is a full description from the previous PR:
Adding xCAT stateful recipe - CentOS Slurm only for now. Will add more later.
The provisioning strategy is to have have xCAT first install a generic OS image and do OpenHPC installation and other customization using a postbootscript run by xCAT after OS install and reboot. The process pretty much exactly follows chroot image creation in stateless recipes, with the exception that commands are added to script the file for later execution (rather than executed in chroot environment). Also, all services on the compute nodes need to be explicitly started because the nodes will not be rebooted again. Additionally, local repo mirrors are used for installation on the nodes so that nodes do not have to go to the Internet to get packages.
Multiple other changes including:
Using xCAT command wherever possible- psh to run commands on all nodes, rcons to access SOL consoles, rpower and rsetboot to start provisioning process.
Adjustments to parse_doc.pl needed to extract version number to download the right tarball. (BTW, I cannot see any way for the script to find the full version number (i.e. 1.3.1). That is stored in ohpc-doc.sty, which is not read by the script. For now I have created \VERLONG command in steps.tex)
Several files have been split into ""_stateful"" version even though changes are minor, but I could not find a toggle reliably working for ""lslisting"" environment.
Le me know if anything needs to be changed/fixed.","I have updated the xCAT stateful recipe to the 1.3.4 branch and will send a pull request shortly.

In the process, I have changed the approach: Previous iterations defined a post-install script for OpeHPC component installation, which was run by xCAT as a part of the nodes’ installation process. This works, but makes finding and fixing errors in the script difficult (execution happens away from user’s eyes).

The new approach is to install OS on the nodes early in the process by using a generic OS image automatically created by xCAT. OpenHPC components are installed once the nodes are installed and running. Effectively, this is very similar to what happens in a stateless approach except that instead of installing into a chroot environment,  the installations happen on running nodes (accomplished by using xCAT’s parallel execution command psh).

I will submit in the next few days, after I do one more test on my main test server, which is currently down.

In the meantime, let me know if you have any comments/questions.

Thanks.

From: Karl W. Schulz [mailto:notifications@github.com]
Sent: Tuesday, October 31, 2017 9:21 AM
To: openhpc/ohpc <ohpc@noreply.github.com>
Cc: Miroslav Hodak <mhodak@lenovo.com>; Author <author@noreply.github.com>
Subject: Re: [openhpc/ohpc] Adding xCAT stateful recipe (#575)


We're having some issues with the current xCAT stateful recipe which I need to iron out for the next 1.3.3 release. Consequently, will schedule this stateful recipe for 1.3.4 milestone.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<#575 (comment)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AYY5BDqj1qbjUdXoPg2cYEQ64yxRsyqjks5sxx6xgaJpZM4P44CG>.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,575,2017-10-13T18:25:39Z,2018-01-23T04:31:05Z,2018-01-23T04:31:06Z,CLOSED,False,1224,46,48,https://github.com/mrmhodak,Adding xCAT stateful recipe,5,[],https://github.com/openhpc/ohpc/pull/575,https://github.com/mrmhodak,4,https://github.com/openhpc/ohpc/pull/575#issuecomment-359673391,"This is an equivalent to original  request #522 ,  but updated to 1.3.3 with minor adjustments. I will close the old request.
Here is a full description from the previous PR:
Adding xCAT stateful recipe - CentOS Slurm only for now. Will add more later.
The provisioning strategy is to have have xCAT first install a generic OS image and do OpenHPC installation and other customization using a postbootscript run by xCAT after OS install and reboot. The process pretty much exactly follows chroot image creation in stateless recipes, with the exception that commands are added to script the file for later execution (rather than executed in chroot environment). Also, all services on the compute nodes need to be explicitly started because the nodes will not be rebooted again. Additionally, local repo mirrors are used for installation on the nodes so that nodes do not have to go to the Internet to get packages.
Multiple other changes including:
Using xCAT command wherever possible- psh to run commands on all nodes, rcons to access SOL consoles, rpower and rsetboot to start provisioning process.
Adjustments to parse_doc.pl needed to extract version number to download the right tarball. (BTW, I cannot see any way for the script to find the full version number (i.e. 1.3.1). That is stored in ohpc-doc.sty, which is not read by the script. For now I have created \VERLONG command in steps.tex)
Several files have been split into ""_stateful"" version even though changes are minor, but I could not find a toggle reliably working for ""lslisting"" environment.
Le me know if anything needs to be changed/fixed.","Closing this one, it is obsolete now. PR #643 should be used instead.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,576,2017-10-16T10:35:12Z,2017-10-18T15:50:31Z,2017-10-18T15:51:51Z,CLOSED,False,7,3,2,https://github.com/rengolin,[docs] Add simple checks to base install commands,1,[],https://github.com/openhpc/ohpc/pull/576,https://github.com/rengolin,1,https://github.com/openhpc/ohpc/pull/576,"This is a first attempt at improving the command lines in the documents.
Most of them just allow safe copy and paste across by checking already updated files, thus avoiding duplicated commands. The bulk is, therefore, uncontroversial, as long as we're happy to have the checks on most places. If this is the case, and this patch is accepted, I'll create a pull request to all others.
The more complicated changes will be submitted after the initial cleanup.
Reference repo: https://git.linaro.org/leg/hpc/ohpc-scripts.git/
This change: https://git.linaro.org/leg/hpc/ohpc-scripts.git/tree/centos7/00_base_install.sh","This is a first attempt at improving the command lines in the documents.
Most of them just allow safe copy and paste across by checking already updated files, thus avoiding duplicated commands. The bulk is, therefore, uncontroversial, as long as we're happy to have the checks on most places. If this is the case, and this patch is accepted, I'll create a pull request to all others.
The more complicated changes will be submitted after the initial cleanup.
Reference repo: https://git.linaro.org/leg/hpc/ohpc-scripts.git/
This change: https://git.linaro.org/leg/hpc/ohpc-scripts.git/tree/centos7/00_base_install.sh",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,576,2017-10-16T10:35:12Z,2017-10-18T15:50:31Z,2017-10-18T15:51:51Z,CLOSED,False,7,3,2,https://github.com/rengolin,[docs] Add simple checks to base install commands,1,[],https://github.com/openhpc/ohpc/pull/576,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/576#issuecomment-337589524,"This is a first attempt at improving the command lines in the documents.
Most of them just allow safe copy and paste across by checking already updated files, thus avoiding duplicated commands. The bulk is, therefore, uncontroversial, as long as we're happy to have the checks on most places. If this is the case, and this patch is accepted, I'll create a pull request to all others.
The more complicated changes will be submitted after the initial cleanup.
Reference repo: https://git.linaro.org/leg/hpc/ohpc-scripts.git/
This change: https://git.linaro.org/leg/hpc/ohpc-scripts.git/tree/centos7/00_base_install.sh","I would suggest to not continue this particular approach as it will complicate/bloat the recipe examples and will, in the end, still result in something that is not 100% re-runnable. Recall that the target audience assumption called out specifically in the docs is for experienced Linux administrators. In the same we expect they can understand regex'es, I think it's reasonable to assume they understand runlevel services and not appending a file twice.
That being said, I understand the motivation and desire to potentially have a companion ""installer"" which is re-runnable. We provide a bash script now that we can 100% validate in CI which is good, but as you know, it does not preserve state. When we have talked about this before (spurred by discussion at last year's SC BoF), the thought was that seasoned users are likely to put all of this under configuration management control, and that's the right way to maintain system state. Unfortunately, there is no single config management system we could choose to make everyone happy, so we prefer a simple example script (a la what we provide with recipe.sh) for validation.
There was some interest expressed in creating an installer that could more automatically apply an OpenHPC recipe (possibly using one or more configuration management systems). I started a prototype of that earlier this year, but haven't had a chance to work on that lately. The general approach though is to introduce more keyword options in our latex recipes (so as opposed to your systemd checks, we introduce additional keyword macros like (*\enableservice*) httpd.service and (*\appendfile*) to append to a file.  Those can then be leveraged by a separate installer to implement stateful implementations (and could potentially help a less seasoned user walk thru the installation easier).  With this approach, we could still have a single input (our latex docs) that would generate the bash recipe that we have today, along with a companion input script for an installer that would ultimately allow folks to implement key system state changes in multiple ways.
Having started some of this, I realize it is non-trivial effort. Once we get through the current high-priority items for v1.3.3, we can dig in deeper and I'll show you what I have done on this front.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,576,2017-10-16T10:35:12Z,2017-10-18T15:50:31Z,2017-10-18T15:51:51Z,CLOSED,False,7,3,2,https://github.com/rengolin,[docs] Add simple checks to base install commands,1,[],https://github.com/openhpc/ohpc/pull/576,https://github.com/rengolin,3,https://github.com/openhpc/ohpc/pull/576#issuecomment-337637302,"This is a first attempt at improving the command lines in the documents.
Most of them just allow safe copy and paste across by checking already updated files, thus avoiding duplicated commands. The bulk is, therefore, uncontroversial, as long as we're happy to have the checks on most places. If this is the case, and this patch is accepted, I'll create a pull request to all others.
The more complicated changes will be submitted after the initial cleanup.
Reference repo: https://git.linaro.org/leg/hpc/ohpc-scripts.git/
This change: https://git.linaro.org/leg/hpc/ohpc-scripts.git/tree/centos7/00_base_install.sh","Hi Karl,
Makes sense. I have to work on Ansible scripts for some of those, so I'll just abandon the docs changes and will do that internally, so that later we can share and collaborate on some standard way of doing that.
Thanks!
--renato",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,577,2017-10-17T08:58:02Z,2017-11-02T20:10:42Z,2017-11-02T20:10:42Z,CLOSED,False,2,2,1,https://github.com/jabl,Update warewulf stateful install doc to use ext4,1,[],https://github.com/openhpc/ohpc/pull/577,https://github.com/jabl,1,https://github.com/openhpc/ohpc/pull/577,Also increase the size of /boot in the example to 1 GB.,Also increase the size of /boot in the example to 1 GB.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,577,2017-10-17T08:58:02Z,2017-11-02T20:10:42Z,2017-11-02T20:10:42Z,CLOSED,False,2,2,1,https://github.com/jabl,Update warewulf stateful install doc to use ext4,1,[],https://github.com/openhpc/ohpc/pull/577,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/577#issuecomment-337185604,Also increase the size of /boot in the example to 1 GB.,Have you tested with ext4?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,577,2017-10-17T08:58:02Z,2017-11-02T20:10:42Z,2017-11-02T20:10:42Z,CLOSED,False,2,2,1,https://github.com/jabl,Update warewulf stateful install doc to use ext4,1,[],https://github.com/openhpc/ohpc/pull/577,https://github.com/jabl,3,https://github.com/openhpc/ohpc/pull/577#issuecomment-338147909,Also increase the size of /boot in the example to 1 GB.,"Err, actually I'm having some problems on my virtual test cluster to get the stateful provisioning to work at all; it kernel panics on boot. Anyway, I get the same error message with the original ext3 instructions, so at least my patch didn't cause this. :)
But, I don't see any reason why ext4 wouldn't work. In /etc/warewulf/bootstrap.conf one can see that the ext4 driver is included; actually on many modern distros including centos7 the kernel is compiled with CONFIG_EXT4_USE_FOR_EXT23=y meaning that the ext4 driver is used for ext2/3 and there are no separate ext2/3 drivers.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,577,2017-10-17T08:58:02Z,2017-11-02T20:10:42Z,2017-11-02T20:10:42Z,CLOSED,False,2,2,1,https://github.com/jabl,Update warewulf stateful install doc to use ext4,1,[],https://github.com/openhpc/ohpc/pull/577,https://github.com/jabl,4,https://github.com/openhpc/ohpc/pull/577#issuecomment-341543401,Also increase the size of /boot in the example to 1 GB.,"Well, anyway, it seems that as of 752666c the openhpc docs reference the new warewulf 3.8 way of doing things, so this PR is moot. Closing.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,578,2017-10-17T14:18:38Z,2017-10-17T14:38:11Z,2018-07-16T19:38:16Z,CLOSED,False,18,39,1,https://github.com/adrianreber,lua-filesystem: clean up spec file,1,[],https://github.com/openhpc/ohpc/pull/578,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/578,"removed setting PROJ_DELIM; this is done by OHPC_macros
replaced 'define' with 'global' to avoid scope problems and warnings
removed BuildRoot (not necessary) and debug_package (OHPC_macros)
removed implicit build dependency on perl
removed setting unused variables
removed opensuse comments; it is an OpenHPC spec file now

Signed-off-by: Adrian Reber areber@redhat.com","removed setting PROJ_DELIM; this is done by OHPC_macros
replaced 'define' with 'global' to avoid scope problems and warnings
removed BuildRoot (not necessary) and debug_package (OHPC_macros)
removed implicit build dependency on perl
removed setting unused variables
removed opensuse comments; it is an OpenHPC spec file now

Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,580,2017-10-17T19:17:50Z,2017-10-19T02:59:57Z,2017-12-15T21:04:33Z,MERGED,True,1,1,1,https://github.com/boegel,update EasyBuild to v3.4.1,1,[],https://github.com/openhpc/ohpc/pull/580,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/580,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,580,2017-10-17T19:17:50Z,2017-10-19T02:59:57Z,2017-12-15T21:04:33Z,MERGED,True,1,1,1,https://github.com/boegel,update EasyBuild to v3.4.1,1,[],https://github.com/openhpc/ohpc/pull/580,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/580#issuecomment-337786026,,"Thanks, @boegel",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,587,2017-10-22T11:53:03Z,2017-10-27T18:58:12Z,2017-10-27T18:58:12Z,MERGED,True,17,17,17,https://github.com/adrianreber,This adds a dist-tag for everyone,1,[],https://github.com/openhpc/ohpc/pull/587,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/587,Signed-off-by: Adrian Reber areber@redhat.com,Signed-off-by: Adrian Reber areber@redhat.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,590,2017-10-27T03:18:30Z,2017-10-29T20:02:37Z,2017-10-29T20:02:37Z,CLOSED,False,1,1,1,None,Fix URL of SOURCE.,1,[],https://github.com/openhpc/ohpc/pull/590,None,1,https://github.com/openhpc/ohpc/pull/590,"As I mentioned on issue #589 , I found that the URL in the spec file of python-Cython.
Apparently, the download URL format of python-Cython might change after the spec file was created.","As I mentioned on issue #589 , I found that the URL in the spec file of python-Cython.
Apparently, the download URL format of python-Cython might change after the spec file was created.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,590,2017-10-27T03:18:30Z,2017-10-29T20:02:37Z,2017-10-29T20:02:37Z,CLOSED,False,1,1,1,None,Fix URL of SOURCE.,1,[],https://github.com/openhpc/ohpc/pull/590,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/590#issuecomment-339881126,"As I mentioned on issue #589 , I found that the URL in the spec file of python-Cython.
Apparently, the download URL format of python-Cython might change after the spec file was created.","Which error do you see? This resulting URL works for me:
https://pypi.python.org/packages/source/C/Cython/Cython-0.23.4.tar.gz",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,590,2017-10-27T03:18:30Z,2017-10-29T20:02:37Z,2017-10-29T20:02:37Z,CLOSED,False,1,1,1,None,Fix URL of SOURCE.,1,[],https://github.com/openhpc/ohpc/pull/590,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/590#issuecomment-340059706,"As I mentioned on issue #589 , I found that the URL in the spec file of python-Cython.
Apparently, the download URL format of python-Cython might change after the spec file was created.","Maybe the issue is that the current spec has http instead of https?  It does look like the http variant has stopped working, so I updated to use http with the same path.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,590,2017-10-27T03:18:30Z,2017-10-29T20:02:37Z,2017-10-29T20:02:37Z,CLOSED,False,1,1,1,None,Fix URL of SOURCE.,1,[],https://github.com/openhpc/ohpc/pull/590,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/590#issuecomment-340153395,"As I mentioned on issue #589 , I found that the URL in the spec file of python-Cython.
Apparently, the download URL format of python-Cython might change after the spec file was created.",Same here. Fixed in 1.3.3 and could be closed now.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,594,2017-11-01T23:20:32Z,2017-11-02T02:58:26Z,2017-11-02T02:58:26Z,MERGED,True,95,0,9,https://github.com/marcemq,Added Sensys monitoring documentation.,1,[],https://github.com/openhpc/ohpc/pull/594,https://github.com/marcemq,1,https://github.com/openhpc/ohpc/pull/594,Signed-off-by: Marcela Morales Quispe marcela.morales.quispe@intel.com,Signed-off-by: Marcela Morales Quispe marcela.morales.quispe@intel.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,595,2017-11-02T18:21:19Z,2017-11-02T18:21:40Z,2017-11-02T18:21:40Z,MERGED,True,24,1,2,https://github.com/crbaird,Sesnys Test Added,1,[],https://github.com/openhpc/ohpc/pull/595,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/595,Signed-off-by: Gustavo Martinez Bernal gustavo.martinez.bernal@intel.com,Signed-off-by: Gustavo Martinez Bernal gustavo.martinez.bernal@intel.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,599,2017-11-05T18:57:01Z,2017-11-27T21:38:21Z,2017-11-27T21:38:21Z,MERGED,True,71,14,15,https://github.com/adrianreber,Introduce ppc64le build-related options in .spec files,1,[],https://github.com/openhpc/ohpc/pull/599,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/599,"With this all spec files have been adapted to also build on ppc64le.
Right now only llvm-compilers.spec does not build on ppc64le with:
llvm5-compilers-ohpc-5.0.0/llvm/projects/libunwind/include/__libunwind_config.h:55:4: error: #error ""Unsupported architecture.""
As this seems to be part of the actual source code and not packaging
related, and as nothing depends yet on llvm-compilers, llvm-compilers
has been ignored for the ppc64le effort.
This is also only compile tested but a first step towards ppc64le
support.
Test build results available at:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-ppc64le/packages/
Signed-off-by: Adrian Reber areber@redhat.com","With this all spec files have been adapted to also build on ppc64le.
Right now only llvm-compilers.spec does not build on ppc64le with:
llvm5-compilers-ohpc-5.0.0/llvm/projects/libunwind/include/__libunwind_config.h:55:4: error: #error ""Unsupported architecture.""
As this seems to be part of the actual source code and not packaging
related, and as nothing depends yet on llvm-compilers, llvm-compilers
has been ignored for the ppc64le effort.
This is also only compile tested but a first step towards ppc64le
support.
Test build results available at:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-ppc64le/packages/
Signed-off-by: Adrian Reber areber@redhat.com",True,{'THUMBS_UP': ['https://github.com/eshelman']}
openhpc/ohpc,https://github.com/openhpc/ohpc,599,2017-11-05T18:57:01Z,2017-11-27T21:38:21Z,2017-11-27T21:38:21Z,MERGED,True,71,14,15,https://github.com/adrianreber,Introduce ppc64le build-related options in .spec files,1,[],https://github.com/openhpc/ohpc/pull/599,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/599#issuecomment-343073694,"With this all spec files have been adapted to also build on ppc64le.
Right now only llvm-compilers.spec does not build on ppc64le with:
llvm5-compilers-ohpc-5.0.0/llvm/projects/libunwind/include/__libunwind_config.h:55:4: error: #error ""Unsupported architecture.""
As this seems to be part of the actual source code and not packaging
related, and as nothing depends yet on llvm-compilers, llvm-compilers
has been ignored for the ppc64le effort.
This is also only compile tested but a first step towards ppc64le
support.
Test build results available at:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-ppc64le/packages/
Signed-off-by: Adrian Reber areber@redhat.com",Changed to be a PR against 1.3.4,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,599,2017-11-05T18:57:01Z,2017-11-27T21:38:21Z,2017-11-27T21:38:21Z,MERGED,True,71,14,15,https://github.com/adrianreber,Introduce ppc64le build-related options in .spec files,1,[],https://github.com/openhpc/ohpc/pull/599,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/599#issuecomment-343074362,"With this all spec files have been adapted to also build on ppc64le.
Right now only llvm-compilers.spec does not build on ppc64le with:
llvm5-compilers-ohpc-5.0.0/llvm/projects/libunwind/include/__libunwind_config.h:55:4: error: #error ""Unsupported architecture.""
As this seems to be part of the actual source code and not packaging
related, and as nothing depends yet on llvm-compilers, llvm-compilers
has been ignored for the ppc64le effort.
This is also only compile tested but a first step towards ppc64le
support.
Test build results available at:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-ppc64le/packages/
Signed-off-by: Adrian Reber areber@redhat.com",I need to rebase and fix this PR.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,599,2017-11-05T18:57:01Z,2017-11-27T21:38:21Z,2017-11-27T21:38:21Z,MERGED,True,71,14,15,https://github.com/adrianreber,Introduce ppc64le build-related options in .spec files,1,[],https://github.com/openhpc/ohpc/pull/599,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/599#issuecomment-343121797,"With this all spec files have been adapted to also build on ppc64le.
Right now only llvm-compilers.spec does not build on ppc64le with:
llvm5-compilers-ohpc-5.0.0/llvm/projects/libunwind/include/__libunwind_config.h:55:4: error: #error ""Unsupported architecture.""
As this seems to be part of the actual source code and not packaging
related, and as nothing depends yet on llvm-compilers, llvm-compilers
has been ignored for the ppc64le effort.
This is also only compile tested but a first step towards ppc64le
support.
Test build results available at:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-ppc64le/packages/
Signed-off-by: Adrian Reber areber@redhat.com",Rebased and conflicts resolved.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,599,2017-11-05T18:57:01Z,2017-11-27T21:38:21Z,2017-11-27T21:38:21Z,MERGED,True,71,14,15,https://github.com/adrianreber,Introduce ppc64le build-related options in .spec files,1,[],https://github.com/openhpc/ohpc/pull/599,https://github.com/adrianreber,5,https://github.com/openhpc/ohpc/pull/599#issuecomment-344310506,"With this all spec files have been adapted to also build on ppc64le.
Right now only llvm-compilers.spec does not build on ppc64le with:
llvm5-compilers-ohpc-5.0.0/llvm/projects/libunwind/include/__libunwind_config.h:55:4: error: #error ""Unsupported architecture.""
As this seems to be part of the actual source code and not packaging
related, and as nothing depends yet on llvm-compilers, llvm-compilers
has been ignored for the ppc64le effort.
This is also only compile tested but a first step towards ppc64le
support.
Test build results available at:
https://copr.fedorainfracloud.org/coprs/adrian/ohpc-ppc64le/packages/
Signed-off-by: Adrian Reber areber@redhat.com",fixed llvm ppc64le build failures,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,600,2017-11-09T08:18:05Z,2020-04-02T22:42:36Z,2020-04-02T22:42:36Z,MERGED,True,6,3,3,https://github.com/jabl,Use ip instead of ifconfig,2,[],https://github.com/openhpc/ohpc/pull/600,https://github.com/jabl,1,https://github.com/openhpc/ohpc/pull/600,"net-tools hasn't seen a release since 2001, whereas iproute2 is
actively developed and included by default.  By modifying the setup
instructions to use ip instead of ifconfig net-tools can thus be
removed from the dependencies.","net-tools hasn't seen a release since 2001, whereas iproute2 is
actively developed and included by default.  By modifying the setup
instructions to use ip instead of ifconfig net-tools can thus be
removed from the dependencies.",True,"{'THUMBS_UP': ['https://github.com/adrianreber', 'https://github.com/novosirj']}"
openhpc/ohpc,https://github.com/openhpc/ohpc,600,2017-11-09T08:18:05Z,2020-04-02T22:42:36Z,2020-04-02T22:42:36Z,MERGED,True,6,3,3,https://github.com/jabl,Use ip instead of ifconfig,2,[],https://github.com/openhpc/ohpc/pull/600,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/600#issuecomment-347334303,"net-tools hasn't seen a release since 2001, whereas iproute2 is
actively developed and included by default.  By modifying the setup
instructions to use ip instead of ifconfig net-tools can thus be
removed from the dependencies.","I'm pretty sure we tried this a while back and while ip worked fine for standard physical interfaces, we ran into problems using it on aliased interfaces (e.g. eth0:0). I don't remember the exact details but I do remember having to back it out as it broke the CI system which does have some reliance on aliasing.
I will try to recreate again to remember the details and perhaps we can find a solution.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,602,2017-11-24T17:14:44Z,2018-01-19T20:47:18Z,2018-01-19T20:47:18Z,MERGED,True,18,39,1,https://github.com/adrianreber,lua-filesystem: clean up spec file,1,[],https://github.com/openhpc/ohpc/pull/602,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/602,"removed setting PROJ_DELIM; this is done by OHPC_macros
replaced 'define' with 'global' to avoid scope problems and warnings
removed BuildRoot (not necessary) and debug_package (OHPC_macros)
removed implicit build dependency on perl
removed setting unused variables
removed opensuse comments; it is an OpenHPC spec file now

Signed-off-by: Adrian Reber areber@redhat.com","removed setting PROJ_DELIM; this is done by OHPC_macros
replaced 'define' with 'global' to avoid scope problems and warnings
removed BuildRoot (not necessary) and debug_package (OHPC_macros)
removed implicit build dependency on perl
removed setting unused variables
removed opensuse comments; it is an OpenHPC spec file now

Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,603,2017-11-24T17:33:52Z,2017-11-27T21:25:06Z,2017-11-27T21:25:06Z,MERGED,True,96,4,4,https://github.com/adrianreber,add script to quickly build a SRPM,5,[],https://github.com/openhpc/ohpc/pull/603,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/603,"The script build_srpm.sh builds a SRPM for specified packages. It
creates the necessary files in the SOURCES directory by either
downloading those files or creating symbolic links.
 $ misc/build_srpm.sh lua
 Building SRPM for ./components/distro-packages/lua-filesystem/SPECS/lua-filesystem.spec
 /home/adrian/rpmbuild/SRPMS/lua-filesystem-ohpc-1.6.3-0.src.rpm
 Building SRPM for ./components/distro-packages/lua-posix/SPECS/luaposix.spec
 /home/adrian/rpmbuild/SRPMS/lua-posix-ohpc-33.2.1-1.ohpc.src.rpm
 Building SRPM for ./components/distro-packages/lua-bit/SPECS/lua-bitop.spec
 /home/adrian/rpmbuild/SRPMS/lua-bit-ohpc-1.0.2-1.ohpc.src.rpm

In combination with the build_order.sh script this can be used to create the OpenHPC SRPMs and rebuild them locally in the correct order.","The script build_srpm.sh builds a SRPM for specified packages. It
creates the necessary files in the SOURCES directory by either
downloading those files or creating symbolic links.
 $ misc/build_srpm.sh lua
 Building SRPM for ./components/distro-packages/lua-filesystem/SPECS/lua-filesystem.spec
 /home/adrian/rpmbuild/SRPMS/lua-filesystem-ohpc-1.6.3-0.src.rpm
 Building SRPM for ./components/distro-packages/lua-posix/SPECS/luaposix.spec
 /home/adrian/rpmbuild/SRPMS/lua-posix-ohpc-33.2.1-1.ohpc.src.rpm
 Building SRPM for ./components/distro-packages/lua-bit/SPECS/lua-bitop.spec
 /home/adrian/rpmbuild/SRPMS/lua-bit-ohpc-1.0.2-1.ohpc.src.rpm

In combination with the build_order.sh script this can be used to create the OpenHPC SRPMs and rebuild them locally in the correct order.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,604,2017-11-27T10:44:36Z,2017-11-27T19:57:23Z,2017-11-27T19:57:47Z,MERGED,True,176,12,5,https://github.com/mslacken,ucontext not supportet by newer glibc version,6,[],https://github.com/openhpc/ohpc/pull/604,https://github.com/mslacken,1,https://github.com/openhpc/ohpc/pull/604,"See also
https://sourceware.org/git/gitweb.cgi?p=glibc.git;a=commitdiff;h=251287734e89a52da3db682a8241eb6bccc050c9;hp=c86ed71d633c22d6f638576f7660c52a5f783d66","See also
https://sourceware.org/git/gitweb.cgi?p=glibc.git;a=commitdiff;h=251287734e89a52da3db682a8241eb6bccc050c9;hp=c86ed71d633c22d6f638576f7660c52a5f783d66",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,604,2017-11-27T10:44:36Z,2017-11-27T19:57:23Z,2017-11-27T19:57:47Z,MERGED,True,176,12,5,https://github.com/mslacken,ucontext not supportet by newer glibc version,6,[],https://github.com/openhpc/ohpc/pull/604,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/604#issuecomment-347216350,"See also
https://sourceware.org/git/gitweb.cgi?p=glibc.git;a=commitdiff;h=251287734e89a52da3db682a8241eb6bccc050c9;hp=c86ed71d633c22d6f638576f7660c52a5f783d66","Looks correct; I had to do similar patches for another project. Is upstream tau still active, had they had a look at your patch?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,604,2017-11-27T10:44:36Z,2017-11-27T19:57:23Z,2017-11-27T19:57:47Z,MERGED,True,176,12,5,https://github.com/mslacken,ucontext not supportet by newer glibc version,6,[],https://github.com/openhpc/ohpc/pull/604,https://github.com/mslacken,3,https://github.com/openhpc/ohpc/pull/604#issuecomment-347270216,"See also
https://sourceware.org/git/gitweb.cgi?p=glibc.git;a=commitdiff;h=251287734e89a52da3db682a8241eb6bccc050c9;hp=c86ed71d633c22d6f638576f7660c52a5f783d66","On Mo, 2017-11-27 at 15:26 +0000, Adrian Reber wrote:
 Looks correct; I had to do similar patches for another project. Is
 upstream tau still active, had they had a look at your patch?
 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub, or mute the thread.
Hello Adrian,
the fix will be in the next point release, see the attached mail.

kind regards,
Christian
-- 
Christian Goll
CGoll@suse.de

SUSE Linux GmbH
GF: Felix Imendörffer, Jane Smithard, Graham Norton HRB 21284 (AG
Nürnberg)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,604,2017-11-27T10:44:36Z,2017-11-27T19:57:23Z,2017-11-27T19:57:47Z,MERGED,True,176,12,5,https://github.com/mslacken,ucontext not supportet by newer glibc version,6,[],https://github.com/openhpc/ohpc/pull/604,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/604#issuecomment-347294660,"See also
https://sourceware.org/git/gitweb.cgi?p=glibc.git;a=commitdiff;h=251287734e89a52da3db682a8241eb6bccc050c9;hp=c86ed71d633c22d6f638576f7660c52a5f783d66","Cool, I am 👍 for merging this.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,604,2017-11-27T10:44:36Z,2017-11-27T19:57:23Z,2017-11-27T19:57:47Z,MERGED,True,176,12,5,https://github.com/mslacken,ucontext not supportet by newer glibc version,6,[],https://github.com/openhpc/ohpc/pull/604,https://github.com/crbaird,5,https://github.com/openhpc/ohpc/pull/604#issuecomment-347307859,"See also
https://sourceware.org/git/gitweb.cgi?p=glibc.git;a=commitdiff;h=251287734e89a52da3db682a8241eb6bccc050c9;hp=c86ed71d633c22d6f638576f7660c52a5f783d66","Thanks for the PR, @mslacken",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,630,2017-12-05T09:18:59Z,2018-07-02T12:20:58Z,2018-07-02T12:20:58Z,CLOSED,False,499,358,52,https://github.com/adrianreber,environment modules based dependencies,1,[],https://github.com/openhpc/ohpc/pull/630,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/630,"In order to avoid base OS breakage due to duplicate or wrong
dependencies, this introduces a completely different dependency model
for OpenHPC.
The main problem with the automatically generated SO based dependencies
is that OpenHPC packages can have the same SO 'Requires' or 'Provides'
as packages installed by the base OS.
As the OpenHPC packages are installed outside of the dynamic loader's
scope the dependencies are correctly solved in the RPM database but not
in the running system.
To avoid those problems this patch disables the RPM internal dependency
generator and replaces it with a environment module based
implementation.
This new environment module based generator creates dependencies like:
repoquery --requires openblas-gnu7-ohpc
lmod-ohpc
ohpc-filesystem
ohpc-module(gnu7)
repoquery --provides openblas-gnu7-ohpc
ohpc-module(openblas)
ohpc-module(openblas/0.2.20)
openblas-gnu7-ohpc = 0.2.20-1.ohpc
openblas-gnu7-ohpc(x86-64) = 0.2.20-1.ohpc
repoquery --requires tau-gnu7-openmpi3-ohpc
lmod-ohpc >= 7.6.1
ohpc-module(gnu7-openmpi3)
ohpc-module(papi)
ohpc-module(pdtoolkit)
The created dependencies can directly be used in the 'module load'
syntax.
The new dependency generators are looking for environment module files
in 'modulefiles/' and 'moduledeps/' and create the dependencies based
on paths, filenames, prepend-path and depends-on.
Besides the infrastructure changes in this commit, the following changes
in the RPM spec files can be made to simplify dependency handling.
If the variable 'ohpc_required_modules' is set to a valid environment
modules name the necessary 'BuildRequires:' and 'Requires:' statements
will be generated:
llvm-compilers.spec: %global ohpc_required_modules cmake
rpm -qpR ~/rpmbuild/SRPMS/llvm5-compilers-ohpc-5.0.0-1.ohpc.src.rpm  | grep cmake
ohpc-module(cmake)
repoquery --provides cmake-ohpc
cmake-ohpc = 3.9.2-1.ohpc
cmake-ohpc(x86-64) = 3.9.2-1.ohpc
ohpc-module(cmake)
ohpc-module(cmake/3.9.2)
And if using the macro '%ohpc_load_modules' in the '%build' and
'%install' section the previously defined required modules will
be automatically loaded.
The resulting binary RPM will only require 'ohpc-module(cmake)' if it is
mentioned in the environment modules file.
Right now this has only been compile tested and the results can be seen
here: https://copr.fedorainfracloud.org/coprs/adrian/ohpc-modules-final/
Signed-off-by: Adrian Reber areber@redhat.com","In order to avoid base OS breakage due to duplicate or wrong
dependencies, this introduces a completely different dependency model
for OpenHPC.
The main problem with the automatically generated SO based dependencies
is that OpenHPC packages can have the same SO 'Requires' or 'Provides'
as packages installed by the base OS.
As the OpenHPC packages are installed outside of the dynamic loader's
scope the dependencies are correctly solved in the RPM database but not
in the running system.
To avoid those problems this patch disables the RPM internal dependency
generator and replaces it with a environment module based
implementation.
This new environment module based generator creates dependencies like:
repoquery --requires openblas-gnu7-ohpc
lmod-ohpc
ohpc-filesystem
ohpc-module(gnu7)
repoquery --provides openblas-gnu7-ohpc
ohpc-module(openblas)
ohpc-module(openblas/0.2.20)
openblas-gnu7-ohpc = 0.2.20-1.ohpc
openblas-gnu7-ohpc(x86-64) = 0.2.20-1.ohpc
repoquery --requires tau-gnu7-openmpi3-ohpc
lmod-ohpc >= 7.6.1
ohpc-module(gnu7-openmpi3)
ohpc-module(papi)
ohpc-module(pdtoolkit)
The created dependencies can directly be used in the 'module load'
syntax.
The new dependency generators are looking for environment module files
in 'modulefiles/' and 'moduledeps/' and create the dependencies based
on paths, filenames, prepend-path and depends-on.
Besides the infrastructure changes in this commit, the following changes
in the RPM spec files can be made to simplify dependency handling.
If the variable 'ohpc_required_modules' is set to a valid environment
modules name the necessary 'BuildRequires:' and 'Requires:' statements
will be generated:
llvm-compilers.spec: %global ohpc_required_modules cmake
rpm -qpR ~/rpmbuild/SRPMS/llvm5-compilers-ohpc-5.0.0-1.ohpc.src.rpm  | grep cmake
ohpc-module(cmake)
repoquery --provides cmake-ohpc
cmake-ohpc = 3.9.2-1.ohpc
cmake-ohpc(x86-64) = 3.9.2-1.ohpc
ohpc-module(cmake)
ohpc-module(cmake/3.9.2)
And if using the macro '%ohpc_load_modules' in the '%build' and
'%install' section the previously defined required modules will
be automatically loaded.
The resulting binary RPM will only require 'ohpc-module(cmake)' if it is
mentioned in the environment modules file.
Right now this has only been compile tested and the results can be seen
here: https://copr.fedorainfracloud.org/coprs/adrian/ohpc-modules-final/
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,630,2017-12-05T09:18:59Z,2018-07-02T12:20:58Z,2018-07-02T12:20:58Z,CLOSED,False,499,358,52,https://github.com/adrianreber,environment modules based dependencies,1,[],https://github.com/openhpc/ohpc/pull/630,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/630#issuecomment-349246427,"In order to avoid base OS breakage due to duplicate or wrong
dependencies, this introduces a completely different dependency model
for OpenHPC.
The main problem with the automatically generated SO based dependencies
is that OpenHPC packages can have the same SO 'Requires' or 'Provides'
as packages installed by the base OS.
As the OpenHPC packages are installed outside of the dynamic loader's
scope the dependencies are correctly solved in the RPM database but not
in the running system.
To avoid those problems this patch disables the RPM internal dependency
generator and replaces it with a environment module based
implementation.
This new environment module based generator creates dependencies like:
repoquery --requires openblas-gnu7-ohpc
lmod-ohpc
ohpc-filesystem
ohpc-module(gnu7)
repoquery --provides openblas-gnu7-ohpc
ohpc-module(openblas)
ohpc-module(openblas/0.2.20)
openblas-gnu7-ohpc = 0.2.20-1.ohpc
openblas-gnu7-ohpc(x86-64) = 0.2.20-1.ohpc
repoquery --requires tau-gnu7-openmpi3-ohpc
lmod-ohpc >= 7.6.1
ohpc-module(gnu7-openmpi3)
ohpc-module(papi)
ohpc-module(pdtoolkit)
The created dependencies can directly be used in the 'module load'
syntax.
The new dependency generators are looking for environment module files
in 'modulefiles/' and 'moduledeps/' and create the dependencies based
on paths, filenames, prepend-path and depends-on.
Besides the infrastructure changes in this commit, the following changes
in the RPM spec files can be made to simplify dependency handling.
If the variable 'ohpc_required_modules' is set to a valid environment
modules name the necessary 'BuildRequires:' and 'Requires:' statements
will be generated:
llvm-compilers.spec: %global ohpc_required_modules cmake
rpm -qpR ~/rpmbuild/SRPMS/llvm5-compilers-ohpc-5.0.0-1.ohpc.src.rpm  | grep cmake
ohpc-module(cmake)
repoquery --provides cmake-ohpc
cmake-ohpc = 3.9.2-1.ohpc
cmake-ohpc(x86-64) = 3.9.2-1.ohpc
ohpc-module(cmake)
ohpc-module(cmake/3.9.2)
And if using the macro '%ohpc_load_modules' in the '%build' and
'%install' section the previously defined required modules will
be automatically loaded.
The resulting binary RPM will only require 'ohpc-module(cmake)' if it is
mentioned in the environment modules file.
Right now this has only been compile tested and the results can be seen
here: https://copr.fedorainfracloud.org/coprs/adrian/ohpc-modules-final/
Signed-off-by: Adrian Reber areber@redhat.com","This needs to be rebased on top of recent version changes, but I wanted to submit a PR for today's TSC meeting.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,632,2017-12-08T15:01:59Z,2017-12-08T15:04:55Z,2017-12-08T15:08:55Z,MERGED,True,1,1,1,https://github.com/suchytas,#631 updating version of pbspro.spec file to latest 14.1.2,1,[],https://github.com/openhpc/ohpc/pull/632,https://github.com/suchytas,1,https://github.com/openhpc/ohpc/pull/632,updating version of pbspro.spec file to latest 14.1.2; verified that source URL.,updating version of pbspro.spec file to latest 14.1.2; verified that source URL.,True,{'THUMBS_UP': ['https://github.com/mike0042']}
openhpc/ohpc,https://github.com/openhpc/ohpc,633,2017-12-11T15:10:49Z,2018-06-01T12:54:35Z,2018-06-01T12:54:35Z,CLOSED,False,762,0,6,https://github.com/adrianreber,slurm-spank-x11: add X11 forwarding plugin,1,[],https://github.com/openhpc/ohpc/pull/633,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/633,"slurm-spank-x11 is a X11 forwarding plugin for srun. With the plugin
installed following is possible:
$ srun --x11
https://slurm.schedmd.com/faq.html#x11
Signed-off-by: Adrian Reber areber@redhat.com","slurm-spank-x11 is a X11 forwarding plugin for srun. With the plugin
installed following is possible:
$ srun --x11
https://slurm.schedmd.com/faq.html#x11
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,633,2017-12-11T15:10:49Z,2018-06-01T12:54:35Z,2018-06-01T12:54:35Z,CLOSED,False,762,0,6,https://github.com/adrianreber,slurm-spank-x11: add X11 forwarding plugin,1,[],https://github.com/openhpc/ohpc/pull/633,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/633#issuecomment-393871604,"slurm-spank-x11 is a X11 forwarding plugin for srun. With the plugin
installed following is possible:
$ srun --x11
https://slurm.schedmd.com/faq.html#x11
Signed-off-by: Adrian Reber areber@redhat.com",Superseded by new slurm versions where x11 support is now fully integrated with the main Slurm code.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,634,2017-12-15T21:05:17Z,2017-12-15T23:05:22Z,2017-12-16T08:41:52Z,MERGED,True,3,3,1,https://github.com/boegel,update to EasyBuild v3.5.0,1,[],https://github.com/openhpc/ohpc/pull/634,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/634,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,634,2017-12-15T21:05:17Z,2017-12-15T23:05:22Z,2017-12-16T08:41:52Z,MERGED,True,3,3,1,https://github.com/boegel,update to EasyBuild v3.5.0,1,[],https://github.com/openhpc/ohpc/pull/634,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/634#issuecomment-352133837,,"Thanks, @boegel",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,637,2017-12-19T22:18:00Z,2017-12-19T22:30:34Z,2017-12-19T22:30:55Z,MERGED,True,2,0,2,https://github.com/PaulUTK,Opafm variable in input.local,1,[],https://github.com/openhpc/ohpc/pull/637,https://github.com/PaulUTK,1,https://github.com/openhpc/ohpc/pull/637,The input.local files were missing the opafm variable being defined. The recipe.sh script checks for these variables in order to install the opafm package and enable the service. Adding the variable to the input.local file will allow a user to select that parameter now for use.,The input.local files were missing the opafm variable being defined. The recipe.sh script checks for these variables in order to install the opafm package and enable the service. Adding the variable to the input.local file will allow a user to select that parameter now for use.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,637,2017-12-19T22:18:00Z,2017-12-19T22:30:34Z,2017-12-19T22:30:55Z,MERGED,True,2,0,2,https://github.com/PaulUTK,Opafm variable in input.local,1,[],https://github.com/openhpc/ohpc/pull/637,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/637#issuecomment-352906561,The input.local files were missing the opafm variable being defined. The recipe.sh script checks for these variables in order to install the opafm package and enable the service. Adding the variable to the input.local file will allow a user to select that parameter now for use.,Thanks for the catch and fix.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,638,2017-12-20T16:28:04Z,2018-06-01T12:50:14Z,2018-06-01T12:50:14Z,CLOSED,False,381,8,7,https://github.com/PaulUTK,Recipe.sh lustre-client-ohpc-module does not exist,16,[],https://github.com/openhpc/ohpc/pull/638,https://github.com/PaulUTK,1,https://github.com/openhpc/ohpc/pull/638,Changing lustre-client-ohpc-modules to kmod-lustre-client-ohpc as the former does not exist anymore.,Changing lustre-client-ohpc-modules to kmod-lustre-client-ohpc as the former does not exist anymore.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,638,2017-12-20T16:28:04Z,2018-06-01T12:50:14Z,2018-06-01T12:50:14Z,CLOSED,False,381,8,7,https://github.com/PaulUTK,Recipe.sh lustre-client-ohpc-module does not exist,16,[],https://github.com/openhpc/ohpc/pull/638,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/638#issuecomment-393870537,Changing lustre-client-ohpc-modules to kmod-lustre-client-ohpc as the former does not exist anymore.,"Thanks for this catch. I also realized at some point that the kernel module packaging changed, but ended up modifying the docs to just rely on lustre-client-ohpc which pulls in the kmod-lustre-client-ohpc package as a dependency.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,639,2017-12-20T21:08:29Z,,2017-12-20T21:08:29Z,OPEN,False,378,5,6,https://github.com/PaulUTK,Recipe nagios perl command checks for /bin/mail instead of /usr/bin/mail,16,[],https://github.com/openhpc/ohpc/pull/639,https://github.com/PaulUTK,1,https://github.com/openhpc/ohpc/pull/639,Fixing perl script to check for /usr/bin/mail instead of /bin/mail and changes it to /usr/bin/mailx.,Fixing perl script to check for /usr/bin/mail instead of /bin/mail and changes it to /usr/bin/mailx.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,641,2017-12-31T20:07:42Z,2018-01-19T20:43:51Z,2018-01-19T20:43:51Z,MERGED,True,1,0,1,https://github.com/PaulUTK,"EPEL repo is required in the chroot for nagios plugins, fping and qstat (xCAT recipe).",1,['documentation'],https://github.com/openhpc/ohpc/pull/641,https://github.com/PaulUTK,1,https://github.com/openhpc/ohpc/pull/641,I'm adding the epel repo to the chroot. At least nagios needs it to fulfill the qstat and fping package dependencies. There may be other optional packages that require this as well which is why I'm not putting it into the nagios area only.,I'm adding the epel repo to the chroot. At least nagios needs it to fulfill the qstat and fping package dependencies. There may be other optional packages that require this as well which is why I'm not putting it into the nagios area only.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,642,2018-01-06T07:02:51Z,2018-02-10T22:23:14Z,2018-02-10T22:23:14Z,CLOSED,False,9,5,2,https://github.com/mrmhodak,Specific uid and gid for slurm system user,3,[],https://github.com/openhpc/ohpc/pull/642,https://github.com/mrmhodak,1,https://github.com/openhpc/ohpc/pull/642,"Slurm requires that uid/gid are the same across the cluster, this patch follows the example of munge spec file (which uses uid/gid 200) and sets uid and gid to 201.
Differing ids are a problem for stateful xCAT install, where ids end up being different - stateful xCAT image installs different packages than default install on the SMS.
Regardless, given that this is a requirement ( https://slurm.schedmd.com/accounting.html) it is a good practice to enforce this.","Slurm requires that uid/gid are the same across the cluster, this patch follows the example of munge spec file (which uses uid/gid 200) and sets uid and gid to 201.
Differing ids are a problem for stateful xCAT install, where ids end up being different - stateful xCAT image installs different packages than default install on the SMS.
Regardless, given that this is a requirement ( https://slurm.schedmd.com/accounting.html) it is a good practice to enforce this.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,642,2018-01-06T07:02:51Z,2018-02-10T22:23:14Z,2018-02-10T22:23:14Z,CLOSED,False,9,5,2,https://github.com/mrmhodak,Specific uid and gid for slurm system user,3,[],https://github.com/openhpc/ohpc/pull/642,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/642#issuecomment-355753001,"Slurm requires that uid/gid are the same across the cluster, this patch follows the example of munge spec file (which uses uid/gid 200) and sets uid and gid to 201.
Differing ids are a problem for stateful xCAT install, where ids end up being different - stateful xCAT image installs different packages than default install on the SMS.
Regardless, given that this is a requirement ( https://slurm.schedmd.com/accounting.html) it is a good practice to enforce this.","I like this as I already hit the problem of different UID/GID when using OpenHPC without any provisioning system. I was using ansible to set up the master and the compute nodes and I just created the slurm user before installing the RPM. But something like this makes it of course even easier.
I am just unsure about the actual UID. Looking at munge 201 makes sense but looking how Fedora/CentOS/RHEL handles static ID distribution I am not sure we should use 200/201:

https://pagure.io/setup/blob/master/f/uidgid
https://fedoraproject.org/wiki/Packaging:UsersAndGroups

Maybe this is something for the future to use higher IDs from system account ID range:
$ cat /etc/login.defs
# System accounts
SYS_UID_MIN               201
SYS_UID_MAX               999",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,642,2018-01-06T07:02:51Z,2018-02-10T22:23:14Z,2018-02-10T22:23:14Z,CLOSED,False,9,5,2,https://github.com/mrmhodak,Specific uid and gid for slurm system user,3,[],https://github.com/openhpc/ohpc/pull/642,https://github.com/mrmhodak,3,https://github.com/openhpc/ohpc/pull/642#issuecomment-355757461,"Slurm requires that uid/gid are the same across the cluster, this patch follows the example of munge spec file (which uses uid/gid 200) and sets uid and gid to 201.
Differing ids are a problem for stateful xCAT install, where ids end up being different - stateful xCAT image installs different packages than default install on the SMS.
Regardless, given that this is a requirement ( https://slurm.schedmd.com/accounting.html) it is a good practice to enforce this.","Good point. I checked Suse and their system uid/guids start from 100. So we should go with 201 and 202 for munge and slurm, respectively. I will update the PR.
There is also a possibility that the 200 number was chosen to avoid conflict with other packages (note that if uid/gid of 200 already exist, the user/group creation fails), but using numbers outside the expected range is not a good solution.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,642,2018-01-06T07:02:51Z,2018-02-10T22:23:14Z,2018-02-10T22:23:14Z,CLOSED,False,9,5,2,https://github.com/mrmhodak,Specific uid and gid for slurm system user,3,[],https://github.com/openhpc/ohpc/pull/642,https://github.com/mrmhodak,4,https://github.com/openhpc/ohpc/pull/642#issuecomment-355758840,"Slurm requires that uid/gid are the same across the cluster, this patch follows the example of munge spec file (which uses uid/gid 200) and sets uid and gid to 201.
Differing ids are a problem for stateful xCAT install, where ids end up being different - stateful xCAT image installs different packages than default install on the SMS.
Regardless, given that this is a requirement ( https://slurm.schedmd.com/accounting.html) it is a good practice to enforce this.","Updated. Munge has uid/guid of 201, slurm 202. This should work for both CentOS and Suse.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,642,2018-01-06T07:02:51Z,2018-02-10T22:23:14Z,2018-02-10T22:23:14Z,CLOSED,False,9,5,2,https://github.com/mrmhodak,Specific uid and gid for slurm system user,3,[],https://github.com/openhpc/ohpc/pull/642,https://github.com/mrmhodak,5,https://github.com/openhpc/ohpc/pull/642#issuecomment-364700516,"Slurm requires that uid/gid are the same across the cluster, this patch follows the example of munge spec file (which uses uid/gid 200) and sets uid and gid to 201.
Differing ids are a problem for stateful xCAT install, where ids end up being different - stateful xCAT image installs different packages than default install on the SMS.
Regardless, given that this is a requirement ( https://slurm.schedmd.com/accounting.html) it is a good practice to enforce this.",This has been resubmitted as #673 to satisfy new submission requirements.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,643,2018-01-08T06:30:33Z,2018-02-10T07:00:31Z,2018-02-10T07:00:46Z,CLOSED,False,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,9,[],https://github.com/openhpc/ohpc/pull/643,https://github.com/mrmhodak,1,https://github.com/openhpc/ohpc/pull/643,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.","Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,643,2018-01-08T06:30:33Z,2018-02-10T07:00:31Z,2018-02-10T07:00:46Z,CLOSED,False,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,9,[],https://github.com/openhpc/ohpc/pull/643,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/643#issuecomment-363815845,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.","Thank you for updating this against the latest revision. I'm getting ready to work on starting to land this - can I make one request though?  We have just recently adopted a model to enforce signed requests to acknowledge a Certificate of Origin. Additional information is available here: https://github.com/openhpc/ohpc/wiki/Contributions
Assuming you agree, can you update the PR to include the 'Signed-off-by' option.
Thanks.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,643,2018-01-08T06:30:33Z,2018-02-10T07:00:31Z,2018-02-10T07:00:46Z,CLOSED,False,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,9,[],https://github.com/openhpc/ohpc/pull/643,https://github.com/mrmhodak,3,https://github.com/openhpc/ohpc/pull/643#issuecomment-364168481,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.","I feel stupid asking this, but how to do it retroactively?
I agree with the terms, but presumably, all the 9 commits have be changed, and I am not sure how.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,643,2018-01-08T06:30:33Z,2018-02-10T07:00:31Z,2018-02-10T07:00:46Z,CLOSED,False,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,9,[],https://github.com/openhpc/ohpc/pull/643,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/643#issuecomment-364174178,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.","Let's see if the suggestion mentioned https://gist.github.com/kwk/d70f20d17b18c4f3296d might work?  You would have to change the commit count in the example from 2 to 9, and add the correct email, etc, but that should get your local fork updated.
If the local commit logs look good after that, I think you will have to do a forced push to your fork (which I believe will update the PR as well).  In theory, that would look something like:
git push -f -u origin mrmhodak:OpenHPC_1.3.4_add_doc",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,643,2018-01-08T06:30:33Z,2018-02-10T07:00:31Z,2018-02-10T07:00:46Z,CLOSED,False,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,9,[],https://github.com/openhpc/ohpc/pull/643,https://github.com/mrmhodak,5,https://github.com/openhpc/ohpc/pull/643#issuecomment-364218621,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.","That wants a ""ref"" to rewrite. I love how git can make simple things hard.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,643,2018-01-08T06:30:33Z,2018-02-10T07:00:31Z,2018-02-10T07:00:46Z,CLOSED,False,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,9,[],https://github.com/openhpc/ohpc/pull/643,https://github.com/koomie,6,https://github.com/openhpc/ohpc/pull/643#issuecomment-364460225,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.","Sorry for the difficulty here.  Perhaps another, simpler option might be to just create a new pull request? You could create a new local branch off of openhpc:obs/OpenHPC_1.3.4_Factory and then copy in the files you modified.  Then, git commit -s, push to your fork, and open another pull request.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,643,2018-01-08T06:30:33Z,2018-02-10T07:00:31Z,2018-02-10T07:00:46Z,CLOSED,False,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,9,[],https://github.com/openhpc/ohpc/pull/643,https://github.com/mrmhodak,7,https://github.com/openhpc/ohpc/pull/643#issuecomment-364496639,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.",That is what going to do,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,643,2018-01-08T06:30:33Z,2018-02-10T07:00:31Z,2018-02-10T07:00:46Z,CLOSED,False,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,9,[],https://github.com/openhpc/ohpc/pull/643,https://github.com/mrmhodak,8,https://github.com/openhpc/ohpc/pull/643#issuecomment-364631519,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.","Closing, superseded by #672 .",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,645,2018-01-10T23:23:22Z,2018-01-12T14:49:29Z,2018-01-16T21:06:14Z,MERGED,True,134,2,5,https://github.com/koomie,admin/ohpc-filesystem: include custom requires/provides plugin files for RPM dependency analysis,4,['enhancement'],https://github.com/openhpc/ohpc/pull/645,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/645,"This includes several new files that are housed in /usr/lib/rpm to trigger the rpm dependency analysis plugin to use ohpc-provided scripts for analyzing ELF dependencies. These only get triggered for files installed into the %{OHPC_HOME} path.  This is one potential approach intended to avoid namespace collision with library .so's of the same name that might come from the underlying OS or other package repos (the example discussed in TSC meetings was openblas).
In this approach, an additional color of (ohpc) is appended to relevant Provides and Requires dependencies if the .so is housed within %{OHPC_HOME}.","This includes several new files that are housed in /usr/lib/rpm to trigger the rpm dependency analysis plugin to use ohpc-provided scripts for analyzing ELF dependencies. These only get triggered for files installed into the %{OHPC_HOME} path.  This is one potential approach intended to avoid namespace collision with library .so's of the same name that might come from the underlying OS or other package repos (the example discussed in TSC meetings was openblas).
In this approach, an additional color of (ohpc) is appended to relevant Provides and Requires dependencies if the .so is housed within %{OHPC_HOME}.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,645,2018-01-10T23:23:22Z,2018-01-12T14:49:29Z,2018-01-16T21:06:14Z,MERGED,True,134,2,5,https://github.com/koomie,admin/ohpc-filesystem: include custom requires/provides plugin files for RPM dependency analysis,4,['enhancement'],https://github.com/openhpc/ohpc/pull/645,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/645#issuecomment-356972233,"This includes several new files that are housed in /usr/lib/rpm to trigger the rpm dependency analysis plugin to use ohpc-provided scripts for analyzing ELF dependencies. These only get triggered for files installed into the %{OHPC_HOME} path.  This is one potential approach intended to avoid namespace collision with library .so's of the same name that might come from the underlying OS or other package repos (the example discussed in TSC meetings was openblas).
In this approach, an additional color of (ohpc) is appended to relevant Provides and Requires dependencies if the .so is housed within %{OHPC_HOME}.","@adrianreber, these are updated dependency analysis files based on the TSC discussion. I removed any use of a TMPDIR, and added another command-line argument to ohpc-find-requires using our standard %{OHPC_HOME}% macro (so that there was no hard-coding of the /opt/ohpc path).  I'm double checking things in my home project on obs, but if this seems reasonable, I'll land on the 1.3.4 branch and start rebuilding all the relevant packages so we can see if other issues crop up.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,647,2018-01-11T23:43:58Z,2018-01-11T23:44:52Z,2018-01-11T23:45:01Z,MERGED,True,1,1,1,https://github.com/koomie,compiler-families/gnu-compilers: include --disable-static option for build,1,[],https://github.com/openhpc/ohpc/pull/647,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/647,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,648,2018-01-12T21:03:43Z,2018-01-12T21:04:31Z,2018-01-12T21:04:39Z,MERGED,True,11,4,3,https://github.com/koomie,admin/ohpc-filesystem: update rpm dependency config to provide defaul…,1,[],https://github.com/openhpc/ohpc/pull/648,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/648,"…t ohpc
path in cases where OHPC_HOME macro is not defined.
Signed-off-by: Karl W. Schulz karl.w.schulz@intel.com","…t ohpc
path in cases where OHPC_HOME macro is not defined.
Signed-off-by: Karl W. Schulz karl.w.schulz@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,650,2018-01-16T20:47:13Z,2018-01-16T21:43:17Z,2018-01-17T06:41:32Z,MERGED,True,29,18,3,https://github.com/koomie,admin/ohpc-filesystem: modified approach for creation of ohpc.attr fi…,2,[],https://github.com/openhpc/ohpc/pull/650,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/650,"…le. Leverage OHPC_HOME macro at build time in ohpc-filesystem as opposed to using potentially undefined macros in .attr file. Follow up to #645.
Signed-off-by: Karl W. Schulz karl.w.schulz@intel.com","…le. Leverage OHPC_HOME macro at build time in ohpc-filesystem as opposed to using potentially undefined macros in .attr file. Follow up to #645.
Signed-off-by: Karl W. Schulz karl.w.schulz@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,650,2018-01-16T20:47:13Z,2018-01-16T21:43:17Z,2018-01-17T06:41:32Z,MERGED,True,29,18,3,https://github.com/koomie,admin/ohpc-filesystem: modified approach for creation of ohpc.attr fi…,2,[],https://github.com/openhpc/ohpc/pull/650,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/650#issuecomment-358212335,"…le. Leverage OHPC_HOME macro at build time in ohpc-filesystem as opposed to using potentially undefined macros in .attr file. Follow up to #645.
Signed-off-by: Karl W. Schulz karl.w.schulz@intel.com",👍 I was also thinking about doing it this way.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,653,2018-01-17T19:11:03Z,2018-01-19T17:06:07Z,2018-02-24T13:16:25Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v3.5.1,1,[],https://github.com/openhpc/ohpc/pull/653,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/653,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,653,2018-01-17T19:11:03Z,2018-01-19T17:06:07Z,2018-02-24T13:16:25Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v3.5.1,1,[],https://github.com/openhpc/ohpc/pull/653,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/653#issuecomment-359028688,,bumping to v3.5.1 (#635),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,657,2018-01-23T11:21:00Z,2018-01-23T11:21:28Z,2018-01-23T11:21:33Z,MERGED,True,7,0,1,https://github.com/koomie,sles specific update for rpm dependency plugin config,2,[],https://github.com/openhpc/ohpc/pull/657,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/657,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/scottaltair,1,https://github.com/openhpc/ohpc/pull/660,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh","Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/660#issuecomment-360814604,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh","@scottaltair : Question about the pbspro spec file. It prints out a lot of text during installation, which seems unnecessary as OpenHPC provides the documentation in its recipes. This seems to be the only OpenHPC package which prints this kind of information during installation and I think it could be removed.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/scottaltair,3,https://github.com/openhpc/ohpc/pull/660#issuecomment-360815756,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh","@adrianreber sorry, I don't believe I am following your concern about the pbspro.spec file. Can you provide me with specific example?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/660#issuecomment-360817044,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh","So actually this is unrelated to this PR. So sorry for hijacking it but I was always thinking if this is necessary. I am talking about these messages:
%postun -n %{pname}-%{pbs_server}%{PROJ_DELIM}
echo
echo ""NOTE: /etc/pbs.conf and the PBS_HOME directory must be deleted manually""
echo
%postun -n %{pname}-%{pbs_execution}%{PROJ_DELIM}
echo
echo ""NOTE: /etc/pbs.conf and the PBS_HOME directory must be deleted manually""
echo
%postun -n %{pname}-%{pbs_client}%{PROJ_DELIM}
echo
echo ""NOTE: /etc/pbs.conf must be deleted manually""
echo",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/mike0042,5,https://github.com/openhpc/ohpc/pull/660#issuecomment-360817076,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh",@adrianreber : The spec file is directly responsible for printing one message after PBS Pro has been uninstalled. The remainder of the messages come from a script called pbs_postinstall that is part of the PBS Pro package itself. We could redirect stdout/stderr from pbs_postinstall to /dev/null or an installation log file.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/adrianreber,6,https://github.com/openhpc/ohpc/pull/660#issuecomment-360818027,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh","@mike0042 Thanks. I was thinking about many more messages. Right now it seems so little. But thanks for pointing out it comes from a script.
Right now I am still asking if this is necessary. Maybe someone else from the community can also comment if they think it is useful or if it is not required.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/mike0042,7,https://github.com/openhpc/ohpc/pull/660#issuecomment-360821308,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh","@adrianreber : I added those messages to the PBS Pro spec file when we went open source. The spec file was later adapted to work with OpenHPC. I felt it was important to inform the admin there were files that the package left behind. In the case they weren't planning to install another version of PBS Pro, they could manually delete them.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/adrianreber,8,https://github.com/openhpc/ohpc/pull/660#issuecomment-360969088,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh","@mike0042 I personally think that it is not necessary as we have a lot of packages leaving old files around during uninstall. I think that there is not much value in printing information during install/uninstall of RPM packages as those messages might never be read.
Anyway, this PR is the wrong place to discuss this as it is unrelated to the PR. I should probably open a new issue, but it was more an observation.
There is still the merge conflict marker in the documentation which needs to be cleaned up before this PR can be merged.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/mike0042,9,https://github.com/openhpc/ohpc/pull/660#issuecomment-361316553,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh","@scottaltair : You'll want to remove the three %postun blocks in the spec file and redirect stdout/stderr to /dev/null in the three places where pbs_postinstall is called. That should silence all messages. Rebasing your branch should git rid of the merge conflict that was pointed out.
@adrianreber : Please reference the new ticket from this PR once you open it. Thanks!",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,660,2018-01-26T15:19:37Z,2018-01-29T21:26:13Z,2018-01-29T21:26:13Z,CLOSED,False,73,43,2,https://github.com/scottaltair,#631 Updating pbspro.spec for 14.1.2 release and then some,12,[],https://github.com/openhpc/ohpc/pull/660,https://github.com/scottaltair,10,https://github.com/openhpc/ohpc/pull/660#issuecomment-361391851,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh","This PR is no longer valid. Will be opening a new PR. Attempted to rebase and clean up, but made it worse.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,661,2018-01-26T15:35:33Z,2018-01-26T15:36:42Z,2018-02-07T15:11:42Z,MERGED,True,1,1,1,https://github.com/koomie,bump version for gcc (#659),2,[],https://github.com/openhpc/ohpc/pull/661,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/661,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,664,2018-01-29T21:41:11Z,2018-01-31T14:17:24Z,2018-01-31T14:17:24Z,MERGED,True,81,52,2,https://github.com/scottaltair,Updating pbspro.spec for v14.1.2 and cleaning up misc,2,[],https://github.com/openhpc/ohpc/pull/664,https://github.com/scottaltair,1,https://github.com/openhpc/ohpc/pull/664,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh
Reduced verbosity by commenting out %postun and redirecting pbs_postinstall to /devnull
Addressing the OBS Badness values. Nothing wrong with build.","Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh
Reduced verbosity by commenting out %postun and redirecting pbs_postinstall to /devnull
Addressing the OBS Badness values. Nothing wrong with build.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,664,2018-01-29T21:41:11Z,2018-01-31T14:17:24Z,2018-01-31T14:17:24Z,MERGED,True,81,52,2,https://github.com/scottaltair,Updating pbspro.spec for v14.1.2 and cleaning up misc,2,[],https://github.com/openhpc/ohpc/pull/664,https://github.com/scottaltair,2,https://github.com/openhpc/ohpc/pull/664#issuecomment-361396741,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh
Reduced verbosity by commenting out %postun and redirecting pbs_postinstall to /devnull
Addressing the OBS Badness values. Nothing wrong with build.",@adrianreber and @mike0042 - I have closed out the previous PR. Here is the new one. See the description above that addresses the comments in the old PR (#631 and #660 ),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,664,2018-01-29T21:41:11Z,2018-01-31T14:17:24Z,2018-01-31T14:17:24Z,MERGED,True,81,52,2,https://github.com/scottaltair,Updating pbspro.spec for v14.1.2 and cleaning up misc,2,[],https://github.com/openhpc/ohpc/pull/664,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/664#issuecomment-361836106,"Updating pbspro.spec to refer to 14.1.2 (latest open source version)
Cleaned up variable name consistencies (pname vs pbs_name, etc)
Altair move the location of the packages; change to Source0
Altair agreed to create 'make dist' tar.gz, which OpenHPC will be relying on. No requirement to run autogen.sh
Reduced verbosity by commenting out %postun and redirecting pbs_postinstall to /devnull
Addressing the OBS Badness values. Nothing wrong with build.",Thanks for the reduction in verbosity.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,669,2018-02-07T17:49:41Z,2018-02-07T18:06:56Z,2018-02-07T18:09:46Z,CLOSED,False,1,1,1,https://github.com/koomie,perf-tools/papi: bump version to v5.6.0 (#668),1,[],https://github.com/openhpc/ohpc/pull/669,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/669,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,669,2018-02-07T17:49:41Z,2018-02-07T18:06:56Z,2018-02-07T18:09:46Z,CLOSED,False,1,1,1,https://github.com/koomie,perf-tools/papi: bump version to v5.6.0 (#668),1,[],https://github.com/openhpc/ohpc/pull/669,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/669#issuecomment-363857500,,Testing DCO check. Did not like me switching emails on the commit so going to redo.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,670,2018-02-07T18:14:53Z,2018-02-07T18:16:27Z,2018-02-07T18:16:32Z,MERGED,True,1,1,1,https://github.com/koomie,perf-tools/papi: bump version to v5.6.0 (#668),1,[],https://github.com/openhpc/ohpc/pull/670,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/670,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,671,2018-02-07T20:38:15Z,2018-02-07T20:38:50Z,2018-02-07T20:38:50Z,MERGED,True,75,0,1,https://github.com/crbaird, admin/meta-packages: expand mpi permutations of io-libs and perf-tools,4,[],https://github.com/openhpc/ohpc/pull/671,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/671,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,672,2018-02-10T06:55:46Z,2018-02-12T14:09:05Z,2018-02-12T14:09:05Z,MERGED,True,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,1,[],https://github.com/openhpc/ohpc/pull/672,https://github.com/mrmhodak,1,https://github.com/openhpc/ohpc/pull/672,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.
This replaces PR#643.
Signed-off-by: mhodak mhodak@lenovo.com","Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.
This replaces PR#643.
Signed-off-by: mhodak mhodak@lenovo.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,672,2018-02-10T06:55:46Z,2018-02-12T14:09:05Z,2018-02-12T14:09:05Z,MERGED,True,1207,67,36,https://github.com/mrmhodak,xCAT stateful guide for 1.3.4,1,[],https://github.com/openhpc/ohpc/pull/672,https://github.com/mrmhodak,2,https://github.com/openhpc/ohpc/pull/672#issuecomment-364631488,"Adding xCAT stateful Guide.
Compute nodes are installed with BOS as soon as xCAT is installed. OpenHPC components are added to both SMS and nodes when nodes are up and running.
Also, minor updates to existing xCAT documentation to use xCAT commands where possible.
This replaces PR#643.
Signed-off-by: mhodak mhodak@lenovo.com","Please note that it would be good to merge #642 at the same time, otherwise slurm ends with different user ids on the nodes compared to SMS. I will update that PR to include the required signed-off message.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,673,2018-02-10T22:22:23Z,2018-03-23T17:33:02Z,2018-03-23T17:33:02Z,MERGED,True,9,5,2,https://github.com/mrmhodak,Consistent UIDs/GIDs for slurm and munge,1,[],https://github.com/openhpc/ohpc/pull/673,https://github.com/mrmhodak,1,https://github.com/openhpc/ohpc/pull/673,"Resubmission of #642, see that discussion for additional information.
Slurm and munge UID/GUIDs need to be consistent across the cluster. Munge already sets uid/guid of 200. This patch changes that to 201 (CentOS SYS_UID_MIN is 201) and sets slurm's to 202.
xCAT stateful install has problems without this patch, because nodes and SMS end up with slurm ids being off by one, but this issue can come up in other contexts.
Signed-off-by: mhodak mhodak@lenovo.com","Resubmission of #642, see that discussion for additional information.
Slurm and munge UID/GUIDs need to be consistent across the cluster. Munge already sets uid/guid of 200. This patch changes that to 201 (CentOS SYS_UID_MIN is 201) and sets slurm's to 202.
xCAT stateful install has problems without this patch, because nodes and SMS end up with slurm ids being off by one, but this issue can come up in other contexts.
Signed-off-by: mhodak mhodak@lenovo.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,674,2018-02-13T19:04:09Z,2018-02-13T19:04:32Z,2018-02-15T07:50:31Z,MERGED,True,90,0,1,https://github.com/crbaird,initial import of NHC (#666),1,[],https://github.com/openhpc/ohpc/pull/674,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/674,Signed-off-by: Reese Baird reese.baird@intel.com,Signed-off-by: Reese Baird reese.baird@intel.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,674,2018-02-13T19:04:09Z,2018-02-13T19:04:32Z,2018-02-15T07:50:31Z,MERGED,True,90,0,1,https://github.com/crbaird,initial import of NHC (#666),1,[],https://github.com/openhpc/ohpc/pull/674,https://github.com/mslacken,2,https://github.com/openhpc/ohpc/pull/674#issuecomment-365525715,Signed-off-by: Reese Baird reese.baird@intel.com,"Hello Reese,
the checks and so maybe nhc itself seem be brocken. Perhaps you should downgrade to 1.4.1, where the tests run through (at least on SUSE dists).
kind regards,
Christian",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,674,2018-02-13T19:04:09Z,2018-02-13T19:04:32Z,2018-02-15T07:50:31Z,MERGED,True,90,0,1,https://github.com/crbaird,initial import of NHC (#666),1,[],https://github.com/openhpc/ohpc/pull/674,https://github.com/crbaird,3,https://github.com/openhpc/ohpc/pull/674#issuecomment-365709228,Signed-off-by: Reese Baird reese.baird@intel.com,"Hi Christian -
There was an issue noting this on the NHC github:
mej/nhc#31
I've pulled in that patch to our build and tests now pass on SUSE.
Cheers,
Reese",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,674,2018-02-13T19:04:09Z,2018-02-13T19:04:32Z,2018-02-15T07:50:31Z,MERGED,True,90,0,1,https://github.com/crbaird,initial import of NHC (#666),1,[],https://github.com/openhpc/ohpc/pull/674,https://github.com/mslacken,4,https://github.com/openhpc/ohpc/pull/674#issuecomment-365849223,Signed-off-by: Reese Baird reese.baird@intel.com,"Hello Resse,
thanks for that info. I did not investigate the upstream issues yes.
kind regards,
Christian",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,675,2018-02-13T22:41:30Z,2018-02-20T21:27:07Z,2018-02-20T21:27:07Z,MERGED,True,26,0,1,https://github.com/crbaird,import of contributing guidlines,3,[],https://github.com/openhpc/ohpc/pull/675,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/675,"committed to master for github to see
Signed-off-by: Reese Baird reese.baird@intel.com","committed to master for github to see
Signed-off-by: Reese Baird reese.baird@intel.com",True,{'THUMBS_UP': ['https://github.com/adrianreber']}
openhpc/ohpc,https://github.com/openhpc/ohpc,675,2018-02-13T22:41:30Z,2018-02-20T21:27:07Z,2018-02-20T21:27:07Z,MERGED,True,26,0,1,https://github.com/crbaird,import of contributing guidlines,3,[],https://github.com/openhpc/ohpc/pull/675,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/675#issuecomment-365661785,"committed to master for github to see
Signed-off-by: Reese Baird reese.baird@intel.com","I really like this: 👍 The thing about the latest branch is sometimes a bit hard to discover, but I am also not sure how to differently describe it to make it easier to understand. Thanks for formulating this!",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,675,2018-02-13T22:41:30Z,2018-02-20T21:27:07Z,2018-02-20T21:27:07Z,MERGED,True,26,0,1,https://github.com/crbaird,import of contributing guidlines,3,[],https://github.com/openhpc/ohpc/pull/675,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/675#issuecomment-367124267,"committed to master for github to see
Signed-off-by: Reese Baird reese.baird@intel.com","Looks good, I think we should probably update the existing wiki page on contributions to mention this standalone file though.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,677,2018-02-20T21:36:47Z,2018-02-21T19:05:45Z,2018-02-21T19:05:45Z,MERGED,True,99,0,2,https://github.com/crbaird,initial import of python34-build-patch,1,[],https://github.com/openhpc/ohpc/pull/677,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/677,"A patch in the EPEL distribution of python3 (https://src.fedoraproject.org/rpms/python3/blob/master/f/00001-rpath.patch) causes numpy to fail at build time when using the Intel PSXE compilers on RHEL-like systems. This package contains a patch to revert that EPEL patch. Making this package a build requirement of numpy-intel-ohpc allows builds to complete successfully.
Signed-off-by: Reese Baird reese.baird@intel.com","A patch in the EPEL distribution of python3 (https://src.fedoraproject.org/rpms/python3/blob/master/f/00001-rpath.patch) causes numpy to fail at build time when using the Intel PSXE compilers on RHEL-like systems. This package contains a patch to revert that EPEL patch. Making this package a build requirement of numpy-intel-ohpc allows builds to complete successfully.
Signed-off-by: Reese Baird reese.baird@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,678,2018-02-21T22:44:37Z,2018-02-23T17:20:45Z,2018-02-23T17:20:45Z,MERGED,True,31,7,1,https://github.com/crbaird,macros for OHPC-style builds of multiple python flavored packages from a single spec,3,[],https://github.com/openhpc/ohpc/pull/678,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/678,"This PR adds the notion of a python family similar to our compiler and mpi families to allow a single spec file to produce multiple rpms for both python2.7 and python3.4. It defaults to python3, and a _link file in OBS can be used to use python2 as an alternative.
Signed-off-by: Reese Baird reese.baird@intel.com","This PR adds the notion of a python family similar to our compiler and mpi families to allow a single spec file to produce multiple rpms for both python2.7 and python3.4. It defaults to python3, and a _link file in OBS can be used to use python2 as an alternative.
Signed-off-by: Reese Baird reese.baird@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,678,2018-02-21T22:44:37Z,2018-02-23T17:20:45Z,2018-02-23T17:20:45Z,MERGED,True,31,7,1,https://github.com/crbaird,macros for OHPC-style builds of multiple python flavored packages from a single spec,3,[],https://github.com/openhpc/ohpc/pull/678,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/678#issuecomment-367718897,"This PR adds the notion of a python family similar to our compiler and mpi families to allow a single spec file to produce multiple rpms for both python2.7 and python3.4. It defaults to python3, and a _link file in OBS can be used to use python2 as an alternative.
Signed-off-by: Reese Baird reese.baird@intel.com","Thanks for the clarification. 👍
One idea would be to move the BuildRequires to this file, so that we can just set ohpc_python_dependent to 1 and all BuildRequires and Requires are automatically set like with the compilers and MPI. Just an idea. Maybe even your intel compiler python34-build-patch requirement could be in the central macro file.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,679,2018-02-23T17:24:44Z,2018-02-26T17:48:00Z,2018-02-26T17:48:00Z,MERGED,True,19,2,1,https://github.com/crbaird,rms/slurm: require gtk2 to trigger build of sview (#605),2,[],https://github.com/openhpc/ohpc/pull/679,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/679,"A user on the mailing list requested sview.
Signed-off-by: Reese Baird reese.baird@intel.com","A user on the mailing list requested sview.
Signed-off-by: Reese Baird reese.baird@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,679,2018-02-23T17:24:44Z,2018-02-26T17:48:00Z,2018-02-26T17:48:00Z,MERGED,True,19,2,1,https://github.com/crbaird,rms/slurm: require gtk2 to trigger build of sview (#605),2,[],https://github.com/openhpc/ohpc/pull/679,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/679#issuecomment-368081015,"A user on the mailing list requested sview.
Signed-off-by: Reese Baird reese.baird@intel.com","I don't think most folks are going to want to have to pull in all of gtk2 for a default install. Instead, what I might suggest if we want to include build support for sview, is to package that up in a separate sub package (e.g. slurm-sview) so that the gtk dependencies can be isolated to an optional package.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,679,2018-02-23T17:24:44Z,2018-02-26T17:48:00Z,2018-02-26T17:48:00Z,MERGED,True,19,2,1,https://github.com/crbaird,rms/slurm: require gtk2 to trigger build of sview (#605),2,[],https://github.com/openhpc/ohpc/pull/679,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/679#issuecomment-368228342,"A user on the mailing list requested sview.
Signed-off-by: Reese Baird reese.baird@intel.com",👍 You could squash those two commits two one commit. I do not think that steps during this review need to be part of the repository.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,680,2018-02-27T18:50:24Z,2018-02-28T21:54:12Z,2018-02-28T21:54:12Z,MERGED,True,57,11,1,https://github.com/crbaird,adios: use new ohpc python macros; add python sub-package (#654)(#627),2,[],https://github.com/openhpc/ohpc/pull/680,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/680,"Since most of adios is not a python library, I split that off in to a separate sub-package
Signed-off-by: Reese Baird reese.baird@intel.com","Since most of adios is not a python library, I split that off in to a separate sub-package
Signed-off-by: Reese Baird reese.baird@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,682,2018-03-07T20:27:28Z,2018-03-08T21:06:53Z,2018-03-09T08:01:42Z,MERGED,True,2,2,1,https://github.com/boegel,EasyBuild 3.5.3,1,[],https://github.com/openhpc/ohpc/pull/682,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/682,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,682,2018-03-07T20:27:28Z,2018-03-08T21:06:53Z,2018-03-09T08:01:42Z,MERGED,True,2,2,1,https://github.com/boegel,EasyBuild 3.5.3,1,[],https://github.com/openhpc/ohpc/pull/682,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/682#issuecomment-371624519,,"Thanks, @boegel",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,688,2018-03-19T17:09:21Z,2018-03-19T20:41:35Z,2018-03-19T20:41:35Z,MERGED,True,23839,0,78,https://github.com/sidio47,Obs/open hpc 1.3.4 factory,10,[],https://github.com/openhpc/ohpc/pull/688,https://github.com/sidio47,1,https://github.com/openhpc/ohpc/pull/688,MFEM initial test suite setup (#665),MFEM initial test suite setup (#665),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,690,2018-03-22T17:42:50Z,2018-03-22T17:44:13Z,2018-03-22T17:44:13Z,MERGED,True,83,535,4,https://github.com/koomie,PMIx update,7,[],https://github.com/openhpc/ohpc/pull/690,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/690,Update PMIx to v2.0.2 and re-enable external PMIx configuration in latest SLURM build.,Update PMIx to v2.0.2 and re-enable external PMIx configuration in latest SLURM build.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,691,2018-03-22T21:44:55Z,2018-03-22T21:56:38Z,2018-03-23T17:43:26Z,CLOSED,False,25,7,5,https://github.com/scottaltair,Updating pbspro x86_64 recipes to support munge,3,[],https://github.com/openhpc/ohpc/pull/691,https://github.com/scottaltair,1,https://github.com/openhpc/ohpc/pull/691,"PBS Professional 14.1.x supports munge integration.

Updating steps.tex for SLES and CentOS to include PBS_AUTH_METHOD variable, adding common/mrsh.tex, and common/import_ww_files_pbs.tex.
Removed SLURm specific reference in common/mrsh.tex (not necessary to reference only SLURM)
Updated common/pbspro_startup.tex to enable and start munge

Signed-off-by: Scott Suchyta scott@altair.com","PBS Professional 14.1.x supports munge integration.

Updating steps.tex for SLES and CentOS to include PBS_AUTH_METHOD variable, adding common/mrsh.tex, and common/import_ww_files_pbs.tex.
Removed SLURm specific reference in common/mrsh.tex (not necessary to reference only SLURM)
Updated common/pbspro_startup.tex to enable and start munge

Signed-off-by: Scott Suchyta scott@altair.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,692,2018-03-22T21:58:34Z,2018-03-22T21:59:23Z,2018-03-23T17:43:26Z,CLOSED,False,25,7,5,https://github.com/scottaltair,Updating pbspro x86_64 recipes to support munge,3,[],https://github.com/openhpc/ohpc/pull/692,https://github.com/scottaltair,1,https://github.com/openhpc/ohpc/pull/692,"PBS Professional 14.1.x supports munge integration.

Updating steps.tex for SLES and CentOS to include PBS_AUTH_METHOD variable, adding common/mrsh.tex, and common/import_ww_files_pbs.tex.
Removed SLURM specific reference in common/mrsh.tex (not necessary to reference only SLURM)
Updated common/pbspro_startup.tex to enable and start munge

Signed-off-by: scottaltair scott@altair.com","PBS Professional 14.1.x supports munge integration.

Updating steps.tex for SLES and CentOS to include PBS_AUTH_METHOD variable, adding common/mrsh.tex, and common/import_ww_files_pbs.tex.
Removed SLURM specific reference in common/mrsh.tex (not necessary to reference only SLURM)
Updated common/pbspro_startup.tex to enable and start munge

Signed-off-by: scottaltair scott@altair.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,692,2018-03-22T21:58:34Z,2018-03-22T21:59:23Z,2018-03-23T17:43:26Z,CLOSED,False,25,7,5,https://github.com/scottaltair,Updating pbspro x86_64 recipes to support munge,3,[],https://github.com/openhpc/ohpc/pull/692,https://github.com/scottaltair,2,https://github.com/openhpc/ohpc/pull/692#issuecomment-375471457,"PBS Professional 14.1.x supports munge integration.

Updating steps.tex for SLES and CentOS to include PBS_AUTH_METHOD variable, adding common/mrsh.tex, and common/import_ww_files_pbs.tex.
Removed SLURM specific reference in common/mrsh.tex (not necessary to reference only SLURM)
Updated common/pbspro_startup.tex to enable and start munge

Signed-off-by: scottaltair scott@altair.com",Darn commits!!! Trying again later.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,693,2018-03-23T19:14:39Z,2018-03-25T22:02:35Z,2018-03-26T14:35:27Z,MERGED,True,538,0,10,https://github.com/scottaltair,Adding PBS Professional aarch64 recipe,1,[],https://github.com/openhpc/ohpc/pull/693,https://github.com/scottaltair,1,https://github.com/openhpc/ohpc/pull/693,Signed-off-by: Scott Suchyta scott@altair.com,Signed-off-by: Scott Suchyta scott@altair.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/chuckatkins,1,https://github.com/openhpc/ohpc/pull/708,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/708#issuecomment-384783025,,"Thanks, @chuckatkins. Is this causing an issue for you? The automatic dependency generator in rpmbuild should be handling this, and it seems like it is working in our CI testing:
rpm -q --requires phdf5-gnu7-openmpi3-ohpc | grep libz
libz.so.1()(64bit)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/chuckatkins,3,https://github.com/openhpc/ohpc/pull/708#issuecomment-384787806,,"It is.  The dependency generator will make sure the zlib runtime package gets pulled in but not the dev package, so you can end up with linker errors from missing libz.so (not libz.so.1).  I ran into the issue when building a minimal container for circle CI: https://github.com/ornladios/ADIOS2/blob/master/scripts/circle/el7-gnu7-openmpi-ohpc/Dockerfile .  If I don't explicitly add the zlib-devel package then linker errors ""unable to find -lz"" show up when building with hdf5.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/chuckatkins,4,https://github.com/openhpc/ohpc/pull/708#issuecomment-393244915,,@crbaird ping?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/708#issuecomment-393308329,,"Can I ask if you were using the hdf5 generated wrapper scripts (e.g. h5pcc) or compiling/linking with the ohpc module env vars?
I built your docker container (after removing zlib-devel and disabling the libfabric build) and can compile hdf5 examples ok using the module provided vars as follows:
$ module list

Currently Loaded Modules:
  1) gnu7/7.3.0   2) openmpi3/3.0.0   3) phdf5/1.10.1

$ mpicc $HDF5_DIR/share/hdf5_examples/c/h5_write.c -I$HDF5_INC  -L$HDF5_LIB -lhdf5

However, I do get the linkage failure with h5pcc and I think the rub is that the wrappers are adding the -lz linkage when they really don't need to since it is pulled in dynamically.
	libz.so.1 => /lib64/libz.so.1 (0x00007f525fbe2000)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/chuckatkins,6,https://github.com/openhpc/ohpc/pull/708#issuecomment-393312877,,"The issue is indeed with the hdf5 compiler wrappers.  CMake searches for h5cc or h5pcc and interogates them to get the necessary include dirs and libraries needed to use with your regular compilers instead of the wrappers.  So while libz.so might not actually be needed, h5cc says it is.  So really adding zlib-devel as a dependency is a workaround for h5cc not properly hiding private depencies.  Dropping private depencies really needs to be addressed in upstream hdf5 but until that happens the h5cc and h5pcc wrappers provided by the ohpc package are broken without the zlib-devel depency.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/koomie,7,https://github.com/openhpc/ohpc/pull/708#issuecomment-393329252,,"Since we are building to support dynamic linkage only, how would you feel about leaving the zlib dependency as is, but I patch the wrappers (h5cc, h5fc, h5c++ and their parallel equivalents) to not include these unneeded private link options?
I'm testing locally and the patches are straight forward since the wrappers are autoconf'ed.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/chuckatkins,8,https://github.com/openhpc/ohpc/pull/708#issuecomment-393331907,,Sounds good.  I can look into submitting a fix upstream.  So long as the wrappers work with the appropriate options to interogate the necessary dependencies then it should be fine.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/koomie,9,https://github.com/openhpc/ohpc/pull/708#issuecomment-393348452,,Updated approach in #749.  I think a generic fix for upstream is more complicated - we know we want dynamic linkage - but if someone was trying to do a build with static libs then the wrappers would need to retain that logic.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,708,2018-04-25T19:38:59Z,2018-05-30T23:47:33Z,2018-05-30T23:47:33Z,CLOSED,False,1,0,1,https://github.com/chuckatkins,Add missing zlib-devel runtime dependency to phdf5,1,[],https://github.com/openhpc/ohpc/pull/708,https://github.com/chuckatkins,10,https://github.com/openhpc/ohpc/pull/708#issuecomment-393354806,,"Thanks for the fix.  It should be pretty simple to add the ""if building static"" logic.  Regardless, this works good for here in the meantime.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,711,2018-04-26T17:46:44Z,2018-05-15T03:47:16Z,2018-05-29T13:22:58Z,MERGED,True,56,10,2,https://github.com/boegel,EasyBuild v3.6.0 + updated bootstrap script,1,[],https://github.com/openhpc/ohpc/pull/711,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/711,updated bootstrap script deals with some changes that were made to PyPI,updated bootstrap script deals with some changes that were made to PyPI,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,711,2018-04-26T17:46:44Z,2018-05-15T03:47:16Z,2018-05-29T13:22:58Z,MERGED,True,56,10,2,https://github.com/boegel,EasyBuild v3.6.0 + updated bootstrap script,1,[],https://github.com/openhpc/ohpc/pull/711,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/711#issuecomment-389033968,updated bootstrap script deals with some changes that were made to PyPI,"Thanks as always, @boegel",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,713,2018-05-02T12:52:58Z,2018-05-02T13:18:26Z,2018-05-02T13:18:26Z,MERGED,True,406,5,4,https://github.com/jvalll3,"Add dimemas, extrae and paraver spec files",3,[],https://github.com/openhpc/ohpc/pull/713,https://github.com/jvalll3,1,https://github.com/openhpc/ohpc/pull/713,Signed-off-by: Juan Valls juan.valls@bsc.es,Signed-off-by: Juan Valls juan.valls@bsc.es,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,714,2018-05-02T20:52:22Z,2018-06-01T21:11:13Z,2018-06-01T21:11:13Z,MERGED,True,12,12,9,https://github.com/crbaird,fix parallel studio abbreviation (pxse -> psxe),1,[],https://github.com/openhpc/ohpc/pull/714,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/714,Signed-off-by: Reese Baird reese.baird@intel.com,Signed-off-by: Reese Baird reese.baird@intel.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,716,2018-05-11T05:41:31Z,2018-05-11T05:45:14Z,2018-05-11T05:45:14Z,CLOSED,False,1,0,1,https://github.com/ktpedre,Explicitly require SLURM to include hwloc support.,1,[],https://github.com/openhpc/ohpc/pull/716,https://github.com/ktpedre,1,https://github.com/openhpc/ohpc/pull/716,"This will find the base OS version, not the OpenHPC hwloc version.
If rebuilding SLURM RPMs and the base OS does not have hwloc-devel installed, SLURM will be built without hwloc support.  Adding the --with-hwloc forces a dependency on hwloc-devel.
Signed-off-by: Kevin Pedretti ktpedre@sandia.gov","This will find the base OS version, not the OpenHPC hwloc version.
If rebuilding SLURM RPMs and the base OS does not have hwloc-devel installed, SLURM will be built without hwloc support.  Adding the --with-hwloc forces a dependency on hwloc-devel.
Signed-off-by: Kevin Pedretti ktpedre@sandia.gov",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,717,2018-05-11T05:47:19Z,2018-08-30T03:06:34Z,2018-08-30T03:07:47Z,CLOSED,False,1,0,1,https://github.com/ktpedre,Add SLURM dependency on hwloc,1,[],https://github.com/openhpc/ohpc/pull/717,https://github.com/ktpedre,1,https://github.com/openhpc/ohpc/pull/717,"This will find the base OS version, not the OpenHPC hwloc version.
If rebuilding SLURM RPMs and the base OS does not have hwloc-devel installed, SLURM will be built without hwloc support. Adding the --with-hwloc forces a dependency on hwloc-devel.
Signed-off-by: Kevin Pedretti ktpedre@sandia.gov","This will find the base OS version, not the OpenHPC hwloc version.
If rebuilding SLURM RPMs and the base OS does not have hwloc-devel installed, SLURM will be built without hwloc support. Adding the --with-hwloc forces a dependency on hwloc-devel.
Signed-off-by: Kevin Pedretti ktpedre@sandia.gov",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,717,2018-05-11T05:47:19Z,2018-08-30T03:06:34Z,2018-08-30T03:07:47Z,CLOSED,False,1,0,1,https://github.com/ktpedre,Add SLURM dependency on hwloc,1,[],https://github.com/openhpc/ohpc/pull/717,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/717#issuecomment-388288248,"This will find the base OS version, not the OpenHPC hwloc version.
If rebuilding SLURM RPMs and the base OS does not have hwloc-devel installed, SLURM will be built without hwloc support. Adding the --with-hwloc forces a dependency on hwloc-devel.
Signed-off-by: Kevin Pedretti ktpedre@sandia.gov","@ktpedre The text in your first comment should be part of your commit message, especially the Signed-off-by and then the DCO check should not fail.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,717,2018-05-11T05:47:19Z,2018-08-30T03:06:34Z,2018-08-30T03:07:47Z,CLOSED,False,1,0,1,https://github.com/ktpedre,Add SLURM dependency on hwloc,1,[],https://github.com/openhpc/ohpc/pull/717,https://github.com/ktpedre,3,https://github.com/openhpc/ohpc/pull/717#issuecomment-417175068,"This will find the base OS version, not the OpenHPC hwloc version.
If rebuilding SLURM RPMs and the base OS does not have hwloc-devel installed, SLURM will be built without hwloc support. Adding the --with-hwloc forces a dependency on hwloc-devel.
Signed-off-by: Kevin Pedretti ktpedre@sandia.gov","Closing, as this was merged in #814",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,719,2018-05-14T20:33:27Z,2018-05-14T20:35:08Z,2018-05-14T20:35:08Z,MERGED,True,76,7,1,https://github.com/koomie,compiler-families/intel-compilers-devel: fix for erroneous removal of,1,[],https://github.com/openhpc/ohpc/pull/719,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/719,"ohpc-style modulefiles during package upgrade (#718)
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu","ohpc-style modulefiles during package upgrade (#718)
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,743,2018-05-29T13:23:12Z,2018-05-29T18:07:24Z,2018-05-29T18:07:30Z,MERGED,True,3,3,1,https://github.com/boegel,EasyBuild v3.6.1,1,[],https://github.com/openhpc/ohpc/pull/743,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/743,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,743,2018-05-29T13:23:12Z,2018-05-29T18:07:24Z,2018-05-29T18:07:30Z,MERGED,True,3,3,1,https://github.com/boegel,EasyBuild v3.6.1,1,[],https://github.com/openhpc/ohpc/pull/743,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/743#issuecomment-392878815,,"Thanks, @boegel (#746)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,747,2018-05-30T00:45:46Z,2018-06-02T15:43:47Z,2018-06-02T15:43:47Z,MERGED,True,1197,1,36,https://github.com/cmcantalupo,Add GEOPM and msr-safe to OpenHPC,2,[],https://github.com/openhpc/ohpc/pull/747,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/747,"We are planning on tagging GEOPM version 0.5.0 tomorrow or Thursday, and we will update this pull request to point to the new release at that time.  For now we are just looking for any feedback this request which is based on GEOPM version 0.4.0, the latest stable release.","We are planning on tagging GEOPM version 0.5.0 tomorrow or Thursday, and we will update this pull request to point to the new release at that time.  For now we are just looking for any feedback this request which is based on GEOPM version 0.4.0, the latest stable release.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,747,2018-05-30T00:45:46Z,2018-06-02T15:43:47Z,2018-06-02T15:43:47Z,MERGED,True,1197,1,36,https://github.com/cmcantalupo,Add GEOPM and msr-safe to OpenHPC,2,[],https://github.com/openhpc/ohpc/pull/747,https://github.com/cmcantalupo,2,https://github.com/openhpc/ohpc/pull/747#issuecomment-393174812,"We are planning on tagging GEOPM version 0.5.0 tomorrow or Thursday, and we will update this pull request to point to the new release at that time.  For now we are just looking for any feedback this request which is based on GEOPM version 0.4.0, the latest stable release.",@adrianreber Thanks for all of the feedback!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,747,2018-05-30T00:45:46Z,2018-06-02T15:43:47Z,2018-06-02T15:43:47Z,MERGED,True,1197,1,36,https://github.com/cmcantalupo,Add GEOPM and msr-safe to OpenHPC,2,[],https://github.com/openhpc/ohpc/pull/747,https://github.com/cmcantalupo,3,https://github.com/openhpc/ohpc/pull/747#issuecomment-393708480,"We are planning on tagging GEOPM version 0.5.0 tomorrow or Thursday, and we will update this pull request to point to the new release at that time.  For now we are just looking for any feedback this request which is based on GEOPM version 0.4.0, the latest stable release.","We believe that this pull request is ready to be merged.  We have tagged and released GEOPM version 0.5.0 (https://github.com/geopm/geopm/releases/tag/v0.5.0), and we have updated the spec file accordingly.  We have also given the test content some exercise in our cluster, but we are not able to check all combinations of tool chain / MPI / resource manager.
Note that GEOPM has a requirement that the MPI processes are pinned to distinct CPUs.  The prun script does not enforce this requirement, which is enforced by the GEOPM launcher during normal use, so we forked the script to add the options we require to the command line when an environment variable is not available.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,749,2018-05-30T23:04:06Z,2018-05-30T23:10:11Z,2018-05-30T23:10:22Z,MERGED,True,79,1,8,https://github.com/koomie,update for hdf5 builds to fix h5wrapper(s) inclusion of unnecessary library linkage,2,[],https://github.com/openhpc/ohpc/pull/749,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/749,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,756,2018-06-14T20:34:57Z,2018-06-14T20:50:06Z,2018-06-14T20:50:59Z,CLOSED,False,158,350,3,https://github.com/scottaltair,Update pbspro.spec to support PBS Professional 18.1.2 and other details,2,[],https://github.com/openhpc/ohpc/pull/756,https://github.com/scottaltair,1,https://github.com/openhpc/ohpc/pull/756,"Addressing #755

Updated copyright formatting and year
Updated pbs_version to 18.1.2
Removed pbs.null.patch and reference in pbspro.spec
Removed systemd.patch and references in pbspro.spec - per the upstream pbspro.spec
Updated pbspro.spec with Cray CLE logic
Cleaned up preun logic
Updated pbspro.spec with posttrans to correct unconditional rm of /etc/init.d/pbs","Addressing #755

Updated copyright formatting and year
Updated pbs_version to 18.1.2
Removed pbs.null.patch and reference in pbspro.spec
Removed systemd.patch and references in pbspro.spec - per the upstream pbspro.spec
Updated pbspro.spec with Cray CLE logic
Cleaned up preun logic
Updated pbspro.spec with posttrans to correct unconditional rm of /etc/init.d/pbs",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,756,2018-06-14T20:34:57Z,2018-06-14T20:50:06Z,2018-06-14T20:50:59Z,CLOSED,False,158,350,3,https://github.com/scottaltair,Update pbspro.spec to support PBS Professional 18.1.2 and other details,2,[],https://github.com/openhpc/ohpc/pull/756,https://github.com/scottaltair,2,https://github.com/openhpc/ohpc/pull/756#issuecomment-397433806,"Addressing #755

Updated copyright formatting and year
Updated pbs_version to 18.1.2
Removed pbs.null.patch and reference in pbspro.spec
Removed systemd.patch and references in pbspro.spec - per the upstream pbspro.spec
Updated pbspro.spec with Cray CLE logic
Cleaned up preun logic
Updated pbspro.spec with posttrans to correct unconditional rm of /etc/init.d/pbs","Missing sign-off, again.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,757,2018-06-14T20:53:20Z,2018-08-24T14:29:22Z,2018-08-24T14:29:22Z,MERGED,True,159,351,3,https://github.com/scottaltair,Update pbspro.spec to support PBS Pro 18.1.2 and other details,1,[],https://github.com/openhpc/ohpc/pull/757,https://github.com/scottaltair,1,https://github.com/openhpc/ohpc/pull/757,"Addressing #755

Updated copyright formatting and year
Updated pbs_version to 18.1.2
Removed pbs.null.patch and reference in pbspro.spec
Removed systemd.patch and references in pbspro.spec - per the upstream pbspro.spec
Updated pbspro.spec with Cray CLE logic
Cleaned up preun logic
Updated pbspro.spec with posttrans to correct unconditional rm of /etc/init.d/pbs

Signed-off-by: Scott Suchyta scott@altair.com","Addressing #755

Updated copyright formatting and year
Updated pbs_version to 18.1.2
Removed pbs.null.patch and reference in pbspro.spec
Removed systemd.patch and references in pbspro.spec - per the upstream pbspro.spec
Updated pbspro.spec with Cray CLE logic
Cleaned up preun logic
Updated pbspro.spec with posttrans to correct unconditional rm of /etc/init.d/pbs

Signed-off-by: Scott Suchyta scott@altair.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,761,2018-06-25T14:01:37Z,2018-06-26T17:05:45Z,2018-06-26T17:05:45Z,MERGED,True,1,1,1,https://github.com/cmcantalupo,Update geopm to 0.5.1,1,[],https://github.com/openhpc/ohpc/pull/761,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/761,We published a hotfix for a few issues.  This patch updates the spec file to point to version 0.5.1.,We published a hotfix for a few issues.  This patch updates the spec file to point to version 0.5.1.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,761,2018-06-25T14:01:37Z,2018-06-26T17:05:45Z,2018-06-26T17:05:45Z,MERGED,True,1,1,1,https://github.com/cmcantalupo,Update geopm to 0.5.1,1,[],https://github.com/openhpc/ohpc/pull/761,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/761#issuecomment-400391012,We published a hotfix for a few issues.  This patch updates the spec file to point to version 0.5.1.,"thanks, @cmcantalupo",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,783,2018-06-29T09:02:12Z,2018-06-29T09:15:58Z,2018-06-29T09:15:58Z,CLOSED,False,8,8,4,https://github.com/jabl,Remove noatime from NFS mount options,3,[],https://github.com/openhpc/ohpc/pull/783,https://github.com/jabl,1,https://github.com/openhpc/ohpc/pull/783,"In commit 67141e1 I, among other
things, added noatime to the NFS mount options.  However, it turns out
that the Linux NFS client, in fact, ignores any atime related mount
options, and instead unconditionally implements its own relaxed atime
semantics.  For more detauils, see
http://man7.org/linux/man-pages/man5/nfs.5.html .","In commit 67141e1 I, among other
things, added noatime to the NFS mount options.  However, it turns out
that the Linux NFS client, in fact, ignores any atime related mount
options, and instead unconditionally implements its own relaxed atime
semantics.  For more detauils, see
http://man7.org/linux/man-pages/man5/nfs.5.html .",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,783,2018-06-29T09:02:12Z,2018-06-29T09:15:58Z,2018-06-29T09:15:58Z,CLOSED,False,8,8,4,https://github.com/jabl,Remove noatime from NFS mount options,3,[],https://github.com/openhpc/ohpc/pull/783,https://github.com/jabl,2,https://github.com/openhpc/ohpc/pull/783#issuecomment-401298303,"In commit 67141e1 I, among other
things, added noatime to the NFS mount options.  However, it turns out
that the Linux NFS client, in fact, ignores any atime related mount
options, and instead unconditionally implements its own relaxed atime
semantics.  For more detauils, see
http://man7.org/linux/man-pages/man5/nfs.5.html .","Oh, what a mess, I'll close this and do a new one...",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,784,2018-06-29T09:20:09Z,2018-06-29T13:34:47Z,2018-06-29T13:36:02Z,MERGED,True,8,8,4,https://github.com/jabl,Remove noatime from NFS mount options,1,[],https://github.com/openhpc/ohpc/pull/784,https://github.com/jabl,1,https://github.com/openhpc/ohpc/pull/784,"In commit 67141e1 I, among other things, added noatime to the NFS
mount options. However, it turns out that the Linux NFS client, in
fact, ignores any atime related mount options, and instead
unconditionally implements its own relaxed atime semantics. For more
details, see http://man7.org/linux/man-pages/man5/nfs.5.html .
Signed-off-by: Janne Blomqvist janne.blomqvist@aalto.fi","In commit 67141e1 I, among other things, added noatime to the NFS
mount options. However, it turns out that the Linux NFS client, in
fact, ignores any atime related mount options, and instead
unconditionally implements its own relaxed atime semantics. For more
details, see http://man7.org/linux/man-pages/man5/nfs.5.html .
Signed-off-by: Janne Blomqvist janne.blomqvist@aalto.fi",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,784,2018-06-29T09:20:09Z,2018-06-29T13:34:47Z,2018-06-29T13:36:02Z,MERGED,True,8,8,4,https://github.com/jabl,Remove noatime from NFS mount options,1,[],https://github.com/openhpc/ohpc/pull/784,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/784#issuecomment-401356230,"In commit 67141e1 I, among other things, added noatime to the NFS
mount options. However, it turns out that the Linux NFS client, in
fact, ignores any atime related mount options, and instead
unconditionally implements its own relaxed atime semantics. For more
details, see http://man7.org/linux/man-pages/man5/nfs.5.html .
Signed-off-by: Janne Blomqvist janne.blomqvist@aalto.fi",Thanks - I didn't realize it was a NOOP for NFS mounts.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,787,2018-07-09T09:48:32Z,2018-07-09T16:54:26Z,2018-07-09T16:54:30Z,CLOSED,False,2,2,1,https://github.com/adrianreber,msr-safe: comment out unknown kernel module macros,1,[],https://github.com/openhpc/ohpc/pull/787,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/787,"Not sure if this is correct, but those macros are undefined and the
lustre SPEC has them also commented out.
Signed-off-by: Adrian Reber areber@redhat.com","Not sure if this is correct, but those macros are undefined and the
lustre SPEC has them also commented out.
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,787,2018-07-09T09:48:32Z,2018-07-09T16:54:26Z,2018-07-09T16:54:30Z,CLOSED,False,2,2,1,https://github.com/adrianreber,msr-safe: comment out unknown kernel module macros,1,[],https://github.com/openhpc/ohpc/pull/787,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/787#issuecomment-403423809,"Not sure if this is correct, but those macros are undefined and the
lustre SPEC has them also commented out.
Signed-off-by: Adrian Reber areber@redhat.com",msr-safe does not build for me outside of OBS. I saw that the two kernel module macros are undefined. In the lustre module it is just commented out. Not sure if this is the right 'fix'.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,787,2018-07-09T09:48:32Z,2018-07-09T16:54:26Z,2018-07-09T16:54:30Z,CLOSED,False,2,2,1,https://github.com/adrianreber,msr-safe: comment out unknown kernel module macros,1,[],https://github.com/openhpc/ohpc/pull/787,https://github.com/cmcantalupo,3,https://github.com/openhpc/ohpc/pull/787#issuecomment-403536988,"Not sure if this is correct, but those macros are undefined and the
lustre SPEC has them also commented out.
Signed-off-by: Adrian Reber areber@redhat.com","Are you building on a SLE system, and if so do we need to add a section like:
%if 0%{?sles_version} || 0%{?suse_version}
BuildRequires:  %suse_kernel_module_package_buildreqs
%suse_kernel_module_package default
%else
BuildRequires: %kernel_module_package_buildreqs
%kernel_module_package default
%endif

https://forums.opensuse.org/showthread.php/487046-rpmbuild-cannot-understand-kernel_module_package-macro
I'm just guessing here since I don't know what OS was causing the problem, and the post was made 5 years ago.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,787,2018-07-09T09:48:32Z,2018-07-09T16:54:26Z,2018-07-09T16:54:30Z,CLOSED,False,2,2,1,https://github.com/adrianreber,msr-safe: comment out unknown kernel module macros,1,[],https://github.com/openhpc/ohpc/pull/787,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/787#issuecomment-403546483,"Not sure if this is correct, but those macros are undefined and the
lustre SPEC has them also commented out.
Signed-off-by: Adrian Reber areber@redhat.com","Actually I am only trying to build the SRPM on Fedora 28.  This has not been a problem until now.
Now I see that lustre-client also does not build on Fedora 28 for the same reason. The reason why it did not matter for lustre-client is that nothing requires lustre-client in contrast to msr-safe which is required by geopm.
I stumbled over this as the script misc/build-order.sh fails now with msr-safe/geopm dependency problems.
So I think this PR can be closed and I have to deal with not building this package on Fedora 28.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,788,2018-07-09T10:16:20Z,2018-07-11T15:13:49Z,2018-07-11T15:13:49Z,MERGED,True,3,2,2,https://github.com/adrianreber,Fix adios python dependencies and build_order script,2,[],https://github.com/openhpc/ohpc/pull/788,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/788,The build_order script stumbled about an unversioned python dependency in adios. This tries to fix this.,The build_order script stumbled about an unversioned python dependency in adios. This tries to fix this.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,789,2018-07-09T16:49:02Z,2018-07-09T16:50:06Z,2018-07-09T17:19:32Z,MERGED,True,14,0,2,https://github.com/koomie,mpi-families/mpich: apply patch to allow use of HYDRA_BINDING env var…,1,[],https://github.com/openhpc/ohpc/pull/789,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/789,"…iable (#750)
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu","…iable (#750)
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,None,1,https://github.com/openhpc/ohpc/pull/791,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang","The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/791#issuecomment-403550788,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang","This is no comment about the content but I wonder why it passed the DCO check.
All commits are expected to carry a 'Signed-off-by:' and I do not see it. @koomie",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,None,3,https://github.com/openhpc/ohpc/pull/791#issuecomment-403551365,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang","That wondered me too.
I learned about DCO like five minutes ago and amended and force pushed the DCO signed commit right now.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/791#issuecomment-403551801,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang","Ah, I can see it also now. Strange.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,None,5,https://github.com/openhpc/ohpc/pull/791#issuecomment-403552644,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang","But you were still right.
The commit still passed the DCO check before I new what DCO is and before I amended the commit.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,https://github.com/koomie,6,https://github.com/openhpc/ohpc/pull/791#issuecomment-403555523,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang",I'm perplexed as well; perhaps a temporary glitch in the matrix? I just created an unsigned PR #792 and the check seemed to behave as I expect.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,https://github.com/koomie,7,https://github.com/openhpc/ohpc/pull/791#issuecomment-404205888,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang","Thanks for bringing this up.  Agree that having the modules set INCLUDE is not helping folks much and we don't rely on it for testing (it's likely there based on historical baggage). The high level intent for the resulting modules is really to provide the end user a consistent set of env variables that they can rely on for application compilation and to setup dynamic library search paths. The vars we strive to provide for consistency are of the form FOO_DIR, FOO_BIN, FOO_LIB, and FOO_INC. So, for a version of HDF5, this might map to:
HDF5_DIR -> /opt/ohpc/pub/libs/gnu7/hdf5/1.10.2"")
HDF5_BIN -> /opt/ohpc/pub/libs/gnu7/hdf5/1.10.2/bin"")
HDF5_LIB -> /opt/ohpc/pub/libs/gnu7/hdf5/1.10.2/lib"")
HDF5_INC -> /opt/ohpc/pub/libs/gnu7/hdf5/1.10.2/include"")

With the module loaded, the typical use case is for the user to leverage these vars in their build system (a la things like -I${FOO_INC}/foo.h, -L${FOO_LIB} -lfoo, etc) and this is what we leverage for integration testing.
Let me bring this up for discussion with the technical steering committee - strikes me we could either remove setting INCLUDE at all or amend to set CPATH as you suggest which has potential different implications for expected end-user interaction and testing.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,None,8,https://github.com/openhpc/ohpc/pull/791#issuecomment-404212285,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang","My suggestion with CPATH was more based on this:
When installing a library on a standard linux distro, say installing boost (and boost-dev) on Ubuntu, the headers go into /usr/include (or something like that) and the libs go into /usr/lib (or similar).
At the end, developers simply write #include <boost/filesystem.hpp> and that's it.
Same with libraries - they just write -lboost_filesystem on the linker line.
gcc will find the files on its own.
Putting stuff into CPATH mimics this the best.
When something builds on another system after calling apt install boost-dev, it will also build on an ohpc system after calling module load boost.
But I see your point with polluting the CPATH when just loading a library.
It may pull in unnecessary headers which may shadow desired ones.
However, even with everything in the CPATH people still have to specify the directory such as #include <boost/header.hpp>.
Yet another option is to provide distinct devel-packages for the libraries, such that module load boost just puts BOOST_LIB on LD_LIBRARY_PATH and module load boost-devel additionally puts BOOST_INC on CPATH.
People who do not want to compile code will just use the library package.
However, this will introduce a second - partially redundant - module file and may be annoying to maintain.
I could try something like this.
Thoughts?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,https://github.com/koomie,9,https://github.com/openhpc/ohpc/pull/791#issuecomment-411860967,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang","Just wanted to follow up on this to let you know that we've had several discussions on this topic in recent TSC meetings. Overall, there is a strong sentiment to keep the existing convention of exposing a consistent set of environment variables (_DIR, _INC, _LIB, etc) that users can count on to access headers and libraries in their own build systems and to be very transparent about the paths.
That being said, we looked at ways a site could potentially leverage these settings to optionally augment CPATH and LIBRARY_PATH, ideally without touching the existing modulefiles.  One of the suggestions was to explore the use of a custom module hook in Lmod that could trigger off of an environment variable to optionally add to CPATH and LIBRARY_PATH.  It turns out we needed one change in Lmod to support this and it is doable with the most recent 7.8.1 release (and we'll use that for the next ohpc release).
To highlight a working example that could hopefully give you the functionality you were after with the PR, below is code that could be added to the site-wide Lmod config which defines load/unload hooks that will scan for _INC and _LIB style env vars during the module load/unload process and use the values to include in CPATH/LIBRARY_PATH respectively.  In this example, the code  is added to:
/opt/ohpc/admin/lmod/lmod/libexec/SitePackage.lua
-- Example load/unload hooks to manage CPATH and LIBRARY_PATH
-- environment variables to paths provided by OpenHPC modulefiles
-- (using _INC and _LIB env variable conventions).

local hook = require(""Hook"")

function ohpc_cpath_set(t)

	 if (os.getenv(""OHPC_MOD_SET_CPATH"") == ""1"" ) then

	 	 local modFile = io.open(t.fn,""r"")

		 local includeDir=""""
	 	 local libDir=""""

	 	 for line in modFile:lines() do

	     	     includeDir=string.match(line,""^setenv%s*%w*_INC%s*(%S*)"")
		     if includeDir ~= nil then
		   	prepend_path(""CPATH"",includeDir)
		     end		
		     
	     	     libDir=string.match(line,""^setenv%s*%w*_LIB%s*(%S*)"")
		     if libDir ~= nil then
		   	prepend_path(""LIBRARY_PATH"",libDir)
		     end		
	    	 end

		 modFile:close()
	end
end

function ohpc_cpath_unset(t)

	 if (os.getenv(""OHPC_MOD_SET_CPATH"") == ""1"" ) then

	 	 local modFile = io.open(t.fn,""r"")

	 	 local includeDir=""""
		 local libDir=""""

	 	 for line in modFile:lines() do
	     	     includeDir=string.match(line,""^setenv%s*%w*_INC%s*(%S*)"")
		     if includeDir ~= nil then
			remove_path(""CPATH"",includeDir)
		     end		
		     
	     	     libDir=string.match(line,""^setenv%s*%w*_LIB%s*(%S*)"")
		     if libDir ~= nil then
		   	remove_path(""LIBRARY_PATH"",libDir)
		     end		
	    	 end
		 modFile:close()
	end
end

hook.register(""load"",  ohpc_cpath_set)
hook.register(""unload"",ohpc_cpath_unset)

Now, let's see an example. With this modification, we can set OHPC_MOD_SET_CPATH=1 in order to trigger the extra logic in the modulehooks for existing ohpc-style modulefiles.
Set env variable to opt-in to set CPATH and LIBRARY_PATH
$ export OHPC_MOD_SET_CPATH=1

NOTE: nothing set initially
$ echo $CPATH $LIBRARY_PATH


Now, load openblas
$ module load openblas
$ echo $CPATH $LIBRARY_PATH
/opt/ohpc/pub/libs/gnu7/openblas/0.2.20/include /opt/ohpc/pub/libs/gnu7/openblas/0.2.20/lib

Unload - back to being empty
$ module unload openblas
$ echo $CPATH $LIBRARY_PATH


Should you want to play with this approach locally, there is a newer lmod-ohpc version build in the ohpc factory. URL for x86/centos is:
http://build.openhpc.community/OpenHPC:/1.3:/Update6:/Factory/CentOS_7/x86_64/",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,791,2018-07-09T17:04:54Z,2018-08-20T09:04:30Z,2018-08-20T09:04:30Z,CLOSED,False,36,36,35,None,Replaces INCLUDE with CPATH in the module files of all libraries providing headers.,1,[],https://github.com/openhpc/ohpc/pull/791,None,10,https://github.com/openhpc/ohpc/pull/791#issuecomment-414248322,"The module files for nearly all libraries set the wrong environment variable INCLUDE for the include-directory containing the header files.
The point is, that no compiler actually uses that variable.
Instead, gcc and llvm for instance use the following three variables:

CPATH
Paths given via this variable apply to all supported languages and are appended at the end after all paths given via -I.
C_INCLUDE_PATH
Paths given via this variable apply to C only and are appended at the end after all paths given via -isystem, which are processed after all paths given via -I.
CPLUS_INCLUDE_PATH
This variable is the same as above, but for C++.

The question now is: What was the initial intention when that code was written?

Did you want to bring the headers to a common path which could be included easily?
Because in this case, it is necessary to strip the colons out of $INCLUDE and replace them with multiple -I.
So people need something like
INCPATHS=""-I ${INCLUDE//:/ -I }""
to get a proper command line for gcc.
Since the first point is documented nowhere, I believe the intention was to bring the headers to a common path which the compiler searches by default.
In that case, the current situation is a bug and INCLUDE should be replaced by the appropriate of the variables above.

I used CPATH as the appropriate variable, so one has not to step down what is C++ and what is C.
I did not change the spec .../components/io-libs/netcdf-Fortran/SPECS/netcdf-fortran.spec because it is Fortran and there is no CPATH-alternative for that language.
I am not sure, whether I may have overlooked some other libraries which are actually Fortran rather than C/C++.
Also, I did not change the spec .../components/compiler-families/gnu-compilers/SPECS/gnu-compilers.spec.
gcc knows where its own headers are located, so they should not be part of CPATH.
In this case, I think one could delete the line prepending gcc's include directory to INCLUDE entirely.
Nobody is ever going to make use of this.
However, this was just the first step.
Note, that there is also a variable called LIBRARY_PATH which points to directories with static libraries which would otherwise be added to the linker command via multiple -L switches.
My impression of environment modules is, that developers compiling their code on the head node before running it on compute nodes do not have to know that header files and libraries are located at some awkward paths such as /opt/ohpc/pub/utils/valgrind/3.13.0/lib/valgrind/.
They should be able to just write include ""..."" in their code and use -l switches on their linker commands with the compiler finding the appropriate files on its own.
Right now, developers have to know some specific paths, because for instance the static library libcoregrind-amd64-linux.a is only available under the path above and there is no dynamic version of it.
So, is there a specific reason, why LIBRARY_PATH is missing?
Right now, only EasyBuild is setting it, but it does not seem to be necessary.
At the same time sionlib, scorep, autotools and valgrind have static libraries without LIBRARY_PATH set.
As before, gcc has static libraries but does not need the variable.
gcc knows, where its libraries are.
Should I change this, too and create a new pull request?
Best regards
Wolfgang","This is nice and elegant, and actually obsoletes the PR.
I don't speak Lua, so I didn't thought of fiddling around with lmod.
I think I can close the PR now.
Regards",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,792,2018-07-09T17:22:37Z,2018-07-11T14:56:00Z,2018-07-13T22:21:55Z,CLOSED,False,1,0,1,https://github.com/koomie,noop: checking DCO check ,1,[],https://github.com/openhpc/ohpc/pull/792,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/792,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,794,2018-07-11T12:30:29Z,2018-07-12T02:09:07Z,2018-07-12T02:09:07Z,MERGED,True,88,985,119,https://github.com/adrianreber,SPEC file cleanup and gcc-8 builds fixes,29,[],https://github.com/openhpc/ohpc/pull/794,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/794,"This started as a cleanup attempt to remove unneeded SPEC file tags and attributes.
While testing it I found some gcc-8 errors which I fixed on the way. For me everything builds now except adios. The adios problem is related to python. I tried to fix it but I am not sure if it compiles with python3.
Let me know if I should this PR in two PRs.
One cleanup PR and one fix gcc-8 PR. As my build fixes depend partly on my cleanups it would be more difficult, but I could remove the build fix commits from my branch and once the cleanup is hopefully merged I could open a second PR. Just wanted to show that I have tested it.","This started as a cleanup attempt to remove unneeded SPEC file tags and attributes.
While testing it I found some gcc-8 errors which I fixed on the way. For me everything builds now except adios. The adios problem is related to python. I tried to fix it but I am not sure if it compiles with python3.
Let me know if I should this PR in two PRs.
One cleanup PR and one fix gcc-8 PR. As my build fixes depend partly on my cleanups it would be more difficult, but I could remove the build fix commits from my branch and once the cleanup is hopefully merged I could open a second PR. Just wanted to show that I have tested it.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,796,2018-07-11T20:45:11Z,2018-07-11T21:25:06Z,2018-07-12T13:36:28Z,MERGED,True,3,3,1,https://github.com/boegel, EasyBuild v3.6.2,1,[],https://github.com/openhpc/ohpc/pull/796,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/796,Signed-off-by: Kenneth Hoste kenneth.hoste@ugent.be,Signed-off-by: Kenneth Hoste kenneth.hoste@ugent.be,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,796,2018-07-11T20:45:11Z,2018-07-11T21:25:06Z,2018-07-12T13:36:28Z,MERGED,True,3,3,1,https://github.com/boegel, EasyBuild v3.6.2,1,[],https://github.com/openhpc/ohpc/pull/796,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/796#issuecomment-404314723,Signed-off-by: Kenneth Hoste kenneth.hoste@ugent.be,"Thanks, @boegel (#797)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,799,2018-07-11T21:50:28Z,2018-07-11T21:51:42Z,2018-07-16T18:38:15Z,MERGED,True,3,3,1,https://github.com/crbaird,"Revert "" EasyBuild v3.6.2""",1,[],https://github.com/openhpc/ohpc/pull/799,https://github.com/crbaird,1,https://github.com/openhpc/ohpc/pull/799,"Reverts #796
will land again on obs/OpenHPC_1.3.6_Factory","Reverts #796
will land again on obs/OpenHPC_1.3.6_Factory",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,800,2018-07-11T23:32:08Z,2018-07-12T00:07:18Z,2018-07-12T00:07:29Z,CLOSED,False,5,0,1,https://github.com/ECoulter,OpenHPC 1.3.6 spack config suggestion,4,[],https://github.com/openhpc/ohpc/pull/800,https://github.com/ECoulter,1,https://github.com/openhpc/ohpc/pull/800,"Just a couple of changes to the default Spack configuration, so that admins will be able to install user-accessible software without having to make changes to the spack config.
Addition of the spack_install_path variable
Allows for Spack to create packages in a publicly-accessible
location by default. Currently 'spack install foo' results
in foo being installed under /opt/ohpc/admin/..., which is
inaccessible to users.
Modified in the %install section via
sed -i ""s@  install_tree:.*@  install_tree: %{spack_install_path}@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

(sed takes any delimiter - '@' doesn't conflict with path specification)
Modifications to the default spack module install path
Installing modulefiles under default OHPC tree for now, with a spack
prefix - something like the
below may be more appropriate, however, to differentiate between those
built by spack, and those provided by OpenHPC.
Putting spack modules in a custom location would also require modification of the
spack module, to add those to the modulepath.
sed -i ""s@    tcl:.*@  tcl: %{spack_install_path}/modules/@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

Just modifying tcl path for now; lmod is not enabled by default in spack currently...
discussion about default module system ongoing in the spack project.
(spack/spack#5955)
Please let me know if this should've been raised as an issue first!","Just a couple of changes to the default Spack configuration, so that admins will be able to install user-accessible software without having to make changes to the spack config.
Addition of the spack_install_path variable
Allows for Spack to create packages in a publicly-accessible
location by default. Currently 'spack install foo' results
in foo being installed under /opt/ohpc/admin/..., which is
inaccessible to users.
Modified in the %install section via
sed -i ""s@  install_tree:.*@  install_tree: %{spack_install_path}@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

(sed takes any delimiter - '@' doesn't conflict with path specification)
Modifications to the default spack module install path
Installing modulefiles under default OHPC tree for now, with a spack
prefix - something like the
below may be more appropriate, however, to differentiate between those
built by spack, and those provided by OpenHPC.
Putting spack modules in a custom location would also require modification of the
spack module, to add those to the modulepath.
sed -i ""s@    tcl:.*@  tcl: %{spack_install_path}/modules/@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

Just modifying tcl path for now; lmod is not enabled by default in spack currently...
discussion about default module system ongoing in the spack project.
(spack/spack#5955)
Please let me know if this should've been raised as an issue first!",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,801,2018-07-12T00:11:56Z,2018-07-13T20:28:04Z,2018-08-08T19:28:05Z,CLOSED,False,5,0,1,https://github.com/ECoulter,Small change to spack default package install path,1,[],https://github.com/openhpc/ohpc/pull/801,https://github.com/ECoulter,1,https://github.com/openhpc/ohpc/pull/801,"Just a couple of changes to the default Spack configuration, so that admins will be able to install user-accessible software without having to make changes to the spack config.
Addition of the spack_install_path variable
Allows for Spack to create packages in a publicly-accessible
location by default. Currently 'spack install foo' results
in foo being installed under /opt/ohpc/admin/..., which is
inaccessible to users.
Modified in the %install section via
sed -i ""s@  install_tree:.*@  install_tree: %{spack_install_path}@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

(sed takes any delimiter - '@' doesn't conflict with path specification)
Modifications to the default spack module install path
Installing modulefiles under default OHPC tree for now, with a spack
prefix - something like the
below may be more appropriate, however, to differentiate between those
built by spack, and those provided by OpenHPC.
Putting spack modules in a custom location would also require modification of the
spack module, to add those to the modulepath.
sed -i ""s@    tcl:.*@  tcl: %{spack_install_path}/modules/@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

Just modifying tcl path for now; lmod is not enabled by default in spack currently...
discussion about default module system ongoing in the spack project.
(spack/spack#5955)
Please let me know if this should've been raised as an issue first! (This time, at least, I've signed off on the commit properly...)","Just a couple of changes to the default Spack configuration, so that admins will be able to install user-accessible software without having to make changes to the spack config.
Addition of the spack_install_path variable
Allows for Spack to create packages in a publicly-accessible
location by default. Currently 'spack install foo' results
in foo being installed under /opt/ohpc/admin/..., which is
inaccessible to users.
Modified in the %install section via
sed -i ""s@  install_tree:.*@  install_tree: %{spack_install_path}@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

(sed takes any delimiter - '@' doesn't conflict with path specification)
Modifications to the default spack module install path
Installing modulefiles under default OHPC tree for now, with a spack
prefix - something like the
below may be more appropriate, however, to differentiate between those
built by spack, and those provided by OpenHPC.
Putting spack modules in a custom location would also require modification of the
spack module, to add those to the modulepath.
sed -i ""s@    tcl:.*@  tcl: %{spack_install_path}/modules/@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

Just modifying tcl path for now; lmod is not enabled by default in spack currently...
discussion about default module system ongoing in the spack project.
(spack/spack#5955)
Please let me know if this should've been raised as an issue first! (This time, at least, I've signed off on the commit properly...)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,801,2018-07-12T00:11:56Z,2018-07-13T20:28:04Z,2018-08-08T19:28:05Z,CLOSED,False,5,0,1,https://github.com/ECoulter,Small change to spack default package install path,1,[],https://github.com/openhpc/ohpc/pull/801,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/801#issuecomment-404485710,"Just a couple of changes to the default Spack configuration, so that admins will be able to install user-accessible software without having to make changes to the spack config.
Addition of the spack_install_path variable
Allows for Spack to create packages in a publicly-accessible
location by default. Currently 'spack install foo' results
in foo being installed under /opt/ohpc/admin/..., which is
inaccessible to users.
Modified in the %install section via
sed -i ""s@  install_tree:.*@  install_tree: %{spack_install_path}@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

(sed takes any delimiter - '@' doesn't conflict with path specification)
Modifications to the default spack module install path
Installing modulefiles under default OHPC tree for now, with a spack
prefix - something like the
below may be more appropriate, however, to differentiate between those
built by spack, and those provided by OpenHPC.
Putting spack modules in a custom location would also require modification of the
spack module, to add those to the modulepath.
sed -i ""s@    tcl:.*@  tcl: %{spack_install_path}/modules/@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

Just modifying tcl path for now; lmod is not enabled by default in spack currently...
discussion about default module system ongoing in the spack project.
(spack/spack#5955)
Please let me know if this should've been raised as an issue first! (This time, at least, I've signed off on the commit properly...)","Could you squash your commits and force push, just that we do not introduce commits changing things back and forth.",True,{'THUMBS_UP': ['https://github.com/ECoulter']}
openhpc/ohpc,https://github.com/openhpc/ohpc,801,2018-07-12T00:11:56Z,2018-07-13T20:28:04Z,2018-08-08T19:28:05Z,CLOSED,False,5,0,1,https://github.com/ECoulter,Small change to spack default package install path,1,[],https://github.com/openhpc/ohpc/pull/801,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/801#issuecomment-404499465,"Just a couple of changes to the default Spack configuration, so that admins will be able to install user-accessible software without having to make changes to the spack config.
Addition of the spack_install_path variable
Allows for Spack to create packages in a publicly-accessible
location by default. Currently 'spack install foo' results
in foo being installed under /opt/ohpc/admin/..., which is
inaccessible to users.
Modified in the %install section via
sed -i ""s@  install_tree:.*@  install_tree: %{spack_install_path}@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

(sed takes any delimiter - '@' doesn't conflict with path specification)
Modifications to the default spack module install path
Installing modulefiles under default OHPC tree for now, with a spack
prefix - something like the
below may be more appropriate, however, to differentiate between those
built by spack, and those provided by OpenHPC.
Putting spack modules in a custom location would also require modification of the
spack module, to add those to the modulepath.
sed -i ""s@    tcl:.*@  tcl: %{spack_install_path}/modules/@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

Just modifying tcl path for now; lmod is not enabled by default in spack currently...
discussion about default module system ongoing in the spack project.
(spack/spack#5955)
Please let me know if this should've been raised as an issue first! (This time, at least, I've signed off on the commit properly...)",Thanks for all your quick fixes!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,801,2018-07-12T00:11:56Z,2018-07-13T20:28:04Z,2018-08-08T19:28:05Z,CLOSED,False,5,0,1,https://github.com/ECoulter,Small change to spack default package install path,1,[],https://github.com/openhpc/ohpc/pull/801,https://github.com/ECoulter,4,https://github.com/openhpc/ohpc/pull/801#issuecomment-404944830,"Just a couple of changes to the default Spack configuration, so that admins will be able to install user-accessible software without having to make changes to the spack config.
Addition of the spack_install_path variable
Allows for Spack to create packages in a publicly-accessible
location by default. Currently 'spack install foo' results
in foo being installed under /opt/ohpc/admin/..., which is
inaccessible to users.
Modified in the %install section via
sed -i ""s@  install_tree:.*@  install_tree: %{spack_install_path}@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

(sed takes any delimiter - '@' doesn't conflict with path specification)
Modifications to the default spack module install path
Installing modulefiles under default OHPC tree for now, with a spack
prefix - something like the
below may be more appropriate, however, to differentiate between those
built by spack, and those provided by OpenHPC.
Putting spack modules in a custom location would also require modification of the
spack module, to add those to the modulepath.
sed -i ""s@    tcl:.*@  tcl: %{spack_install_path}/modules/@"" %{buildroot}%{install_path}/etc/spack/defaults/config.yaml

Just modifying tcl path for now; lmod is not enabled by default in spack currently...
discussion about default module system ongoing in the spack project.
(spack/spack#5955)
Please let me know if this should've been raised as an issue first! (This time, at least, I've signed off on the commit properly...)","Actually, belay this for now. More digging shows that the spack config needs more changes to be really friendly. This results in default module names like spack/linux-x86_64-centos/package-name which can't be loaded concurrently, along with a top-of-the-heirarchy spack module that's inaccessible to users.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,803,2018-07-13T06:16:19Z,2018-07-13T21:14:31Z,2018-07-14T05:17:34Z,MERGED,True,87,0,4,https://github.com/adrianreber,travis: configure travis,1,['infrastructure'],https://github.com/openhpc/ohpc/pull/803,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/803,"Our initial travis test is a small python script which only looks at the
SPEC files of the pull request and checks if they include any lines we
do not need. Currently this includes:

'^Source999.*$' (That is reserved for OHPC_macros)
'^Source.*OHPC_macros$' (That is not necessary anymore)
'^%changelog.*' (We removed all changelogs)
'^DocDir.*' (Set by OHPC_macros)
'^BuildRoot.*' (Not necessary anymore)
'^%defattr(-,root,root).*' (Setting the default value is not necessary)

With this initial travis setup running we can easily include more and
more checks in the future.
Signed-off-by: Adrian Reber areber@redhat.com","Our initial travis test is a small python script which only looks at the
SPEC files of the pull request and checks if they include any lines we
do not need. Currently this includes:

'^Source999.*$' (That is reserved for OHPC_macros)
'^Source.*OHPC_macros$' (That is not necessary anymore)
'^%changelog.*' (We removed all changelogs)
'^DocDir.*' (Set by OHPC_macros)
'^BuildRoot.*' (Not necessary anymore)
'^%defattr(-,root,root).*' (Setting the default value is not necessary)

With this initial travis setup running we can easily include more and
more checks in the future.
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,803,2018-07-13T06:16:19Z,2018-07-13T21:14:31Z,2018-07-14T05:17:34Z,MERGED,True,87,0,4,https://github.com/adrianreber,travis: configure travis,1,['infrastructure'],https://github.com/openhpc/ohpc/pull/803,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/803#issuecomment-404955747,"Our initial travis test is a small python script which only looks at the
SPEC files of the pull request and checks if they include any lines we
do not need. Currently this includes:

'^Source999.*$' (That is reserved for OHPC_macros)
'^Source.*OHPC_macros$' (That is not necessary anymore)
'^%changelog.*' (We removed all changelogs)
'^DocDir.*' (Set by OHPC_macros)
'^BuildRoot.*' (Not necessary anymore)
'^%defattr(-,root,root).*' (Setting the default value is not necessary)

With this initial travis setup running we can easily include more and
more checks in the future.
Signed-off-by: Adrian Reber areber@redhat.com","This is awesome, thanks for getting it going.",True,{'THUMBS_UP': ['https://github.com/ECoulter']}
openhpc/ohpc,https://github.com/openhpc/ohpc,803,2018-07-13T06:16:19Z,2018-07-13T21:14:31Z,2018-07-14T05:17:34Z,MERGED,True,87,0,4,https://github.com/adrianreber,travis: configure travis,1,['infrastructure'],https://github.com/openhpc/ohpc/pull/803,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/803#issuecomment-404971003,"Our initial travis test is a small python script which only looks at the
SPEC files of the pull request and checks if they include any lines we
do not need. Currently this includes:

'^Source999.*$' (That is reserved for OHPC_macros)
'^Source.*OHPC_macros$' (That is not necessary anymore)
'^%changelog.*' (We removed all changelogs)
'^DocDir.*' (Set by OHPC_macros)
'^BuildRoot.*' (Not necessary anymore)
'^%defattr(-,root,root).*' (Setting the default value is not necessary)

With this initial travis setup running we can easily include more and
more checks in the future.
Signed-off-by: Adrian Reber areber@redhat.com","FYI we should be up and running with this travis config now for future PR's. I spot checked a few things with #805, seemed groovy to me.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,803,2018-07-13T06:16:19Z,2018-07-13T21:14:31Z,2018-07-14T05:17:34Z,MERGED,True,87,0,4,https://github.com/adrianreber,travis: configure travis,1,['infrastructure'],https://github.com/openhpc/ohpc/pull/803,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/803#issuecomment-404999764,"Our initial travis test is a small python script which only looks at the
SPEC files of the pull request and checks if they include any lines we
do not need. Currently this includes:

'^Source999.*$' (That is reserved for OHPC_macros)
'^Source.*OHPC_macros$' (That is not necessary anymore)
'^%changelog.*' (We removed all changelogs)
'^DocDir.*' (Set by OHPC_macros)
'^BuildRoot.*' (Not necessary anymore)
'^%defattr(-,root,root).*' (Setting the default value is not necessary)

With this initial travis setup running we can easily include more and
more checks in the future.
Signed-off-by: Adrian Reber areber@redhat.com",👍,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,804,2018-07-13T17:49:11Z,2018-07-13T19:59:28Z,2018-07-13T19:59:28Z,MERGED,True,1,1,1,https://github.com/adrianreber,OHPC_macros: set disttag to current branch name,1,[],https://github.com/openhpc/ohpc/pull/804,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/804,"This sets the disttag to the current branch name. This replicates OBS's
behavior to append the current release string to the release.
Currently this is "".ohpc.1.3.6""
Signed-off-by: Adrian Reber areber@redhat.com","This sets the disttag to the current branch name. This replicates OBS's
behavior to append the current release string to the release.
Currently this is "".ohpc.1.3.6""
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,804,2018-07-13T17:49:11Z,2018-07-13T19:59:28Z,2018-07-13T19:59:28Z,MERGED,True,1,1,1,https://github.com/adrianreber,OHPC_macros: set disttag to current branch name,1,[],https://github.com/openhpc/ohpc/pull/804,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/804#issuecomment-404905755,"This sets the disttag to the current branch name. This replicates OBS's
behavior to append the current release string to the release.
Currently this is "".ohpc.1.3.6""
Signed-off-by: Adrian Reber areber@redhat.com","@koomie: would this be something worth carrying and upgrading it with each new branch, so that outside of OBS built packages also get the correct disttag?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,804,2018-07-13T17:49:11Z,2018-07-13T19:59:28Z,2018-07-13T19:59:28Z,MERGED,True,1,1,1,https://github.com/adrianreber,OHPC_macros: set disttag to current branch name,1,[],https://github.com/openhpc/ohpc/pull/804,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/804#issuecomment-404938180,"This sets the disttag to the current branch name. This replicates OBS's
behavior to append the current release string to the release.
Currently this is "".ohpc.1.3.6""
Signed-off-by: Adrian Reber areber@redhat.com","Users rebuilding from .src RPMs will have the correct disttag directly, but we can update this per branch along the way for consistency for folks starting straight from git repo.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,805,2018-07-13T22:26:02Z,2018-07-17T13:15:49Z,2018-07-20T21:19:16Z,CLOSED,False,2,2,2,https://github.com/koomie,noop PR testing,3,[],https://github.com/openhpc/ohpc/pull/805,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/805,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,806,2018-07-16T11:02:20Z,2018-07-16T12:49:19Z,2018-07-16T18:46:09Z,MERGED,True,7,15,1,https://github.com/adrianreber,Update fftw to 3.3.8,4,[],https://github.com/openhpc/ohpc/pull/806,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/806,Updated fftw to 3.3.8 (#774) and a few small SPEC file cleanups.,Updated fftw to 3.3.8 (#774) and a few small SPEC file cleanups.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,806,2018-07-16T11:02:20Z,2018-07-16T12:49:19Z,2018-07-16T18:46:09Z,MERGED,True,7,15,1,https://github.com/adrianreber,Update fftw to 3.3.8,4,[],https://github.com/openhpc/ohpc/pull/806,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/806#issuecomment-405327621,Updated fftw to 3.3.8 (#774) and a few small SPEC file cleanups.,"@rengolin Quick question concerning optimization. With this PR we turned on --enable-sse2 --enable-avx for x86_64.
In the help of fftw's configure I see --enable-neon. Is this something to turn on for OpenHPC's fftw package?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,806,2018-07-16T11:02:20Z,2018-07-16T12:49:19Z,2018-07-16T18:46:09Z,MERGED,True,7,15,1,https://github.com/adrianreber,Update fftw to 3.3.8,4,[],https://github.com/openhpc/ohpc/pull/806,https://github.com/rengolin,3,https://github.com/openhpc/ohpc/pull/806#issuecomment-405335021,Updated fftw to 3.3.8 (#774) and a few small SPEC file cleanups.,"Yes. All Arm64 machines have NEON, so we want that enabled anywhere. Even Arm32 nowadays all have neon, including Rpi2, so not a big deal. The only board without it that you can buy nowadays is Rpi1, but honestly, we're safer ignoring it altogether. :)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,806,2018-07-16T11:02:20Z,2018-07-16T12:49:19Z,2018-07-16T18:46:09Z,MERGED,True,7,15,1,https://github.com/adrianreber,Update fftw to 3.3.8,4,[],https://github.com/openhpc/ohpc/pull/806,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/806#issuecomment-405342161,Updated fftw to 3.3.8 (#774) and a few small SPEC file cleanups.,"@rengolin thanks, will open a new PR with --enable-neon for aarch64",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,807,2018-07-16T14:16:06Z,2018-08-08T14:07:29Z,2018-08-08T14:07:30Z,CLOSED,False,0,0,0,https://github.com/adrianreber,travis: add rebuild_srpm travis test,0,[],https://github.com/openhpc/ohpc/pull/807,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/807,"This adds a second travis test which rebuilds all RPMs in a pull
request, for all SPEC files the pull request includes.
To reduce code duplication the parts of the Dockerfiles which would be
same have been factored out and the actual Dockerfiles are created
before running travis dynamically.
Signed-off-by: Adrian Reber areber@redhat.com","This adds a second travis test which rebuilds all RPMs in a pull
request, for all SPEC files the pull request includes.
To reduce code duplication the parts of the Dockerfiles which would be
same have been factored out and the actual Dockerfiles are created
before running travis dynamically.
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,807,2018-07-16T14:16:06Z,2018-08-08T14:07:29Z,2018-08-08T14:07:30Z,CLOSED,False,0,0,0,https://github.com/adrianreber,travis: add rebuild_srpm travis test,0,[],https://github.com/openhpc/ohpc/pull/807,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/807#issuecomment-405263200,"This adds a second travis test which rebuilds all RPMs in a pull
request, for all SPEC files the pull request includes.
To reduce code duplication the parts of the Dockerfiles which would be
same have been factored out and the actual Dockerfiles are created
before running travis dynamically.
Signed-off-by: Adrian Reber areber@redhat.com","A successful travis run of a test commit changing two spec files can be seen here:
https://travis-ci.org/adrianreber/ohpc/builds/404461556",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,807,2018-07-16T14:16:06Z,2018-08-08T14:07:29Z,2018-08-08T14:07:30Z,CLOSED,False,0,0,0,https://github.com/adrianreber,travis: add rebuild_srpm travis test,0,[],https://github.com/openhpc/ohpc/pull/807,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/807#issuecomment-405264180,"This adds a second travis test which rebuilds all RPMs in a pull
request, for all SPEC files the pull request includes.
To reduce code duplication the parts of the Dockerfiles which would be
same have been factored out and the actual Dockerfiles are created
before running travis dynamically.
Signed-off-by: Adrian Reber areber@redhat.com","Ah, the newly added test fails in this PR. Because the Dockerfile ends in check_spec and that is also my check if there is a spec file in the PR. Maybe I should also check that the file is under components.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,807,2018-07-16T14:16:06Z,2018-08-08T14:07:29Z,2018-08-08T14:07:30Z,CLOSED,False,0,0,0,https://github.com/adrianreber,travis: add rebuild_srpm travis test,0,[],https://github.com/openhpc/ohpc/pull/807,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/807#issuecomment-405646421,"This adds a second travis test which rebuilds all RPMs in a pull
request, for all SPEC files the pull request includes.
To reduce code duplication the parts of the Dockerfiles which would be
same have been factored out and the actual Dockerfiles are created
before running travis dynamically.
Signed-off-by: Adrian Reber areber@redhat.com","Concerning what to rebuild. We could rebuild only the changed RPMs of a pull request to make sure we get the results in a reasonable time. We could, additionally, add a 'allow_failures' test case which rebuilds all packages starting from the changed package in the dependency chain.
So right now we could just merge this PR and I will fix the SPEC file detection in a follow up PR.
And then I can work on a rebuild-everything-starting-with-this-package-in-the-dependency-chain travis test case with 'allow_failures' just as an additional data point about the pull request.
As travis is x86_64 only (except for software emulated qemu VMs) it will take some time, but not two days.
Using travis does not mean we cannot merge a PR before travis finishes. We can still merge it any time  we want. But if something breaks somewhere we can always look at the travis results later to see if the breakage was already detected by travis.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,808,2018-07-16T19:39:41Z,2018-07-16T20:41:02Z,2018-07-16T20:41:02Z,MERGED,True,27,7,1,https://github.com/adrianreber,fftw: also build single and long double precision,1,[],https://github.com/openhpc/ohpc/pull/808,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/808,"With this change fftw is now built three times. For single, double, and
long double precision. This does not yet enable quad precision as quad
precision does not support building with MPI support.
This commit also enable '--enable-neon' for aarch64 builds.
Signed-off-by: Adrian Reber areber@redhat.com","With this change fftw is now built three times. For single, double, and
long double precision. This does not yet enable quad precision as quad
precision does not support building with MPI support.
This commit also enable '--enable-neon' for aarch64 builds.
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,808,2018-07-16T19:39:41Z,2018-07-16T20:41:02Z,2018-07-16T20:41:02Z,MERGED,True,27,7,1,https://github.com/adrianreber,fftw: also build single and long double precision,1,[],https://github.com/openhpc/ohpc/pull/808,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/808#issuecomment-405357810,"With this change fftw is now built three times. For single, double, and
long double precision. This does not yet enable quad precision as quad
precision does not support building with MPI support.
This commit also enable '--enable-neon' for aarch64 builds.
Signed-off-by: Adrian Reber areber@redhat.com",I have not tested this on aarch64 and we also talked about additional test cases which this does not include.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,809,2018-07-18T18:24:47Z,2018-07-19T02:11:30Z,2018-07-19T02:15:24Z,MERGED,True,163,0,3,https://github.com/koomie,add compatibility package for arm-hpc compilers,6,[],https://github.com/openhpc/ohpc/pull/809,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/809,work towards arm-hpc family builds (#685),work towards arm-hpc family builds (#685),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,809,2018-07-18T18:24:47Z,2018-07-19T02:11:30Z,2018-07-19T02:15:24Z,MERGED,True,163,0,3,https://github.com/koomie,add compatibility package for arm-hpc compilers,6,[],https://github.com/openhpc/ohpc/pull/809,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/809#issuecomment-406032699,work towards arm-hpc family builds (#685),I would also recommend squashing the commits where you fix errors. No need to introduce commits with errors to have them fixed in the same pull request. Excited to see the arm-hpc compiler. Cool.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,812,2018-07-20T21:43:05Z,2018-07-20T21:57:54Z,2018-09-05T19:57:02Z,MERGED,True,1,1,1,https://github.com/koomie,admin/lmod: bump version to v7.7.39 (#811),1,[],https://github.com/openhpc/ohpc/pull/812,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/812,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,814,2018-07-24T03:08:13Z,2018-07-31T15:01:06Z,2018-07-31T15:01:06Z,MERGED,True,2,0,1,https://github.com/ktpedre,Build SLURM with numa and hwloc support.,1,[],https://github.com/openhpc/ohpc/pull/814,https://github.com/ktpedre,1,https://github.com/openhpc/ohpc/pull/814,"This is needed for SLURM's NUMA affinity features to work.
Signed-off-by: Kevin Pedretti ktpedre@sandia.gov","This is needed for SLURM's NUMA affinity features to work.
Signed-off-by: Kevin Pedretti ktpedre@sandia.gov",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,815,2018-07-30T12:01:44Z,,2018-07-30T12:01:44Z,OPEN,False,20,3,3,https://github.com/erbap,Use of recipe.sh without ipmitool or with version 1.5,1,[],https://github.com/openhpc/ohpc/pull/815,https://github.com/erbap,1,https://github.com/openhpc/ohpc/pull/815,Signed-off-by: Eric Baplue eric.baplue@gmail.com,Signed-off-by: Eric Baplue eric.baplue@gmail.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,818,2018-08-09T09:16:44Z,2018-08-09T19:06:19Z,2018-08-09T19:06:28Z,MERGED,True,15,67,57,https://github.com/adrianreber,Define PNAME globally,6,[],https://github.com/openhpc/ohpc/pull/818,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/818,"The main reason for this PR is to move the definition of PNAME into OHPC_macros for all SPEC globally.
During the testing of this I fixed one encoding error in likwid.spec and one typo in our travis test script.","The main reason for this PR is to move the definition of PNAME into OHPC_macros for all SPEC globally.
During the testing of this I fixed one encoding error in likwid.spec and one typo in our travis test script.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,818,2018-08-09T09:16:44Z,2018-08-09T19:06:19Z,2018-08-09T19:06:28Z,MERGED,True,15,67,57,https://github.com/adrianreber,Define PNAME globally,6,[],https://github.com/openhpc/ohpc/pull/818,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/818#issuecomment-411704435,"The main reason for this PR is to move the definition of PNAME into OHPC_macros for all SPEC globally.
During the testing of this I fixed one encoding error in likwid.spec and one typo in our travis test script.",I had to include a more SPEC file fixes for the travis check.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,819,2018-08-10T14:21:03Z,2018-08-10T14:22:13Z,2018-08-10T14:24:10Z,CLOSED,False,19,19,15,https://github.com/jabl,Update pdsh project URL,1,[],https://github.com/openhpc/ohpc/pull/819,https://github.com/jabl,1,https://github.com/openhpc/ohpc/pull/819,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,820,2018-08-10T14:26:02Z,2018-08-10T15:00:34Z,2018-08-10T15:00:34Z,MERGED,True,19,19,15,https://github.com/jabl,Update pdsh project URL,1,[],https://github.com/openhpc/ohpc/pull/820,https://github.com/jabl,1,https://github.com/openhpc/ohpc/pull/820,Signed-off-by: Janne Blomqvist janne.blomqvist@aalto.fi,Signed-off-by: Janne Blomqvist janne.blomqvist@aalto.fi,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,820,2018-08-10T14:26:02Z,2018-08-10T15:00:34Z,2018-08-10T15:00:34Z,MERGED,True,19,19,15,https://github.com/jabl,Update pdsh project URL,1,[],https://github.com/openhpc/ohpc/pull/820,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/820#issuecomment-412109189,Signed-off-by: Janne Blomqvist janne.blomqvist@aalto.fi,"Thanks for updated URL. Note that the value in the .spec file is the authoritative source for us - the other files get created and updated automatically as part of the release process (ie. those manifest tables are machine generated by querying the final release RPMs).
Long story short should the URL need to be updated again in the future, it can just be done in the .spec file, but we can land this since those manifest files will all get updated for 1.3.6 anyway.
Thanks.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,821,2018-08-13T21:34:36Z,2018-10-05T21:05:03Z,2018-10-05T21:05:11Z,MERGED,True,42,41,9,https://github.com/bgeltz,Update config files per GEOPM requirements.,1,[],https://github.com/openhpc/ohpc/pull/821,https://github.com/bgeltz,1,https://github.com/openhpc/ohpc/pull/821,"Disable intel_pstate kernel driver via the kernel cmdline.
Enable SLURM's task/affinity plugin for per rank CPU pinning.

Signed-off-by: Brad Geltz brad.geltz@intel.com","Disable intel_pstate kernel driver via the kernel cmdline.
Enable SLURM's task/affinity plugin for per rank CPU pinning.

Signed-off-by: Brad Geltz brad.geltz@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,821,2018-08-13T21:34:36Z,2018-10-05T21:05:03Z,2018-10-05T21:05:11Z,MERGED,True,42,41,9,https://github.com/bgeltz,Update config files per GEOPM requirements.,1,[],https://github.com/openhpc/ohpc/pull/821,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/821#issuecomment-427498577,"Disable intel_pstate kernel driver via the kernel cmdline.
Enable SLURM's task/affinity plugin for per rank CPU pinning.

Signed-off-by: Brad Geltz brad.geltz@intel.com","thanks, @bgeltz",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,822,2018-08-14T16:36:13Z,,2018-08-27T20:41:43Z,OPEN,False,26,11,1,https://github.com/pawosm-arm,Arm HPC Compiler and Arm Performance Libraries,5,[],https://github.com/openhpc/ohpc/pull/822,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/822,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,823,2018-08-14T16:38:05Z,2018-09-09T22:54:23Z,2018-09-09T22:54:23Z,MERGED,True,15,4,1,https://github.com/pawosm-arm,arm compiler: R quirks,1,[],https://github.com/openhpc/ohpc/pull/823,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/823,Link R against ArmPL library (OpenMP flavour),Link R against ArmPL library (OpenMP flavour),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,824,2018-08-14T16:41:55Z,2018-08-17T19:03:54Z,2018-08-17T19:03:54Z,MERGED,True,5,0,1,https://github.com/pawosm-arm,Arm compiler: mvapich2 quirks,1,[],https://github.com/openhpc/ohpc/pull/824,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/824,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,825,2018-08-14T17:19:11Z,2018-08-17T19:02:39Z,2018-08-17T19:02:39Z,MERGED,True,39,0,2,https://github.com/pawosm-arm,Arm compiler: boost quirks,1,[],https://github.com/openhpc/ohpc/pull/825,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/825,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,826,2018-08-15T07:57:42Z,2018-08-17T19:04:59Z,2018-08-17T19:05:00Z,MERGED,True,8,2,1,https://github.com/pawosm-arm,arm compiler: scalapack quirks,1,[],https://github.com/openhpc/ohpc/pull/826,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/826,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,827,2018-08-15T07:58:21Z,2018-09-09T22:53:58Z,2018-09-09T22:53:58Z,MERGED,True,233,12,3,https://github.com/pawosm-arm,arm compiler: mumps quirks,1,[],https://github.com/openhpc/ohpc/pull/827,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/827,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,828,2018-08-15T10:10:13Z,2018-08-17T19:01:19Z,2018-08-17T19:01:20Z,MERGED,True,5,0,1,https://github.com/pawosm-arm,arm compiler: openmpi quirks,1,[],https://github.com/openhpc/ohpc/pull/828,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/828,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,829,2018-08-16T13:09:56Z,2018-08-17T19:06:14Z,2018-08-17T19:06:14Z,MERGED,True,15,0,3,https://github.com/pawosm-arm,arm compiler: hdf5/netcdf quirks,1,[],https://github.com/openhpc/ohpc/pull/829,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/829,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,830,2018-08-16T17:51:27Z,2018-09-09T22:53:41Z,2018-09-09T22:53:41Z,MERGED,True,19,6,1,https://github.com/pawosm-arm,arm compiler: trilinos quirks,1,[],https://github.com/openhpc/ohpc/pull/830,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/830,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,831,2018-08-17T07:18:26Z,2018-08-17T19:00:14Z,2018-08-17T19:00:14Z,MERGED,True,5,0,1,https://github.com/pawosm-arm,arm compiler: mpich quirks,1,[],https://github.com/openhpc/ohpc/pull/831,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/831,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,832,2018-08-19T19:27:30Z,2018-09-09T22:53:14Z,2018-09-09T22:53:14Z,MERGED,True,3,3,1,https://github.com/pawosm-arm,scalapack: reworked 'if' expression,1,[],https://github.com/openhpc/ohpc/pull/832,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/832,This 'if' expression in modulefile did not work on any of my CentOS7 machines; repaced with something that actually works.,This 'if' expression in modulefile did not work on any of my CentOS7 machines; repaced with something that actually works.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,833,2018-08-22T13:18:09Z,2018-09-09T22:52:51Z,2018-09-09T22:52:51Z,MERGED,True,20,6,1,https://github.com/pawosm-arm,arm compiler: petsc quirks,1,[],https://github.com/openhpc/ohpc/pull/833,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/833,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,834,2018-08-23T14:29:26Z,2018-09-09T22:52:20Z,2018-09-09T22:52:20Z,MERGED,True,214,10,3,https://github.com/pawosm-arm,arm compiler: numpy quirks,1,[],https://github.com/openhpc/ohpc/pull/834,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/834,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,835,2018-08-23T14:32:03Z,2018-09-09T22:51:49Z,2018-09-09T22:51:49Z,MERGED,True,31,4,1,https://github.com/pawosm-arm,arm compiler: scipy quirks,1,[],https://github.com/openhpc/ohpc/pull/835,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/835,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,836,2018-08-26T16:36:36Z,2018-09-05T19:17:01Z,2018-09-05T19:17:02Z,MERGED,True,14,1,2,https://github.com/pawosm-arm,arm compiler: adios quirks,1,[],https://github.com/openhpc/ohpc/pull/836,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/836,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,837,2018-08-27T06:27:14Z,2018-08-27T19:59:04Z,2018-08-27T19:59:05Z,MERGED,True,365,0,2,https://github.com/pawosm-arm,arm compiler: sionlib quirks,1,[],https://github.com/openhpc/ohpc/pull/837,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/837,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,838,2018-08-27T19:18:32Z,2018-09-09T22:51:20Z,2018-09-09T22:51:20Z,MERGED,True,31,8,1,https://github.com/pawosm-arm,arm compiler: plasma quirks,1,[],https://github.com/openhpc/ohpc/pull/838,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/838,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,839,2018-08-28T22:29:58Z,2018-09-05T19:15:14Z,2018-09-05T19:15:14Z,MERGED,True,3,3,1,https://github.com/pawosm-arm,arm compiler: slepc quirks,1,[],https://github.com/openhpc/ohpc/pull/839,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/839,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,840,2018-08-29T16:02:26Z,2018-09-09T22:50:40Z,2018-09-09T22:50:41Z,MERGED,True,14,7,1,https://github.com/pawosm-arm,arm compiler: hypre quirks,1,[],https://github.com/openhpc/ohpc/pull/840,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/840,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,841,2018-08-29T16:57:44Z,2018-09-05T12:19:44Z,2018-09-05T12:19:44Z,MERGED,True,21,0,1,https://github.com/pawosm-arm,arm compiler: scotch quirks,1,[],https://github.com/openhpc/ohpc/pull/841,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/841,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,842,2018-08-29T17:21:55Z,2018-09-09T22:50:01Z,2018-09-09T22:50:01Z,MERGED,True,54,5,3,https://github.com/pawosm-arm,arm compiler: superlu quirks,2,[],https://github.com/openhpc/ohpc/pull/842,https://github.com/pawosm-arm,1,https://github.com/openhpc/ohpc/pull/842,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,843,2018-09-05T20:36:32Z,2018-09-05T20:39:10Z,2018-09-05T20:39:10Z,MERGED,True,1,0,1,https://github.com/koomie,arm hpc RPM packages do not currently enable Provides metadata for,1,[],https://github.com/openhpc/ohpc/pull/843,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/843,".so's that are shipped with the compiler or performance
libraries. Until this is fixed, instruct rpmbuild to skip listing key
.so's provided by the compiler toolchain as formal Requires for ohpc
builds.
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu",".so's that are shipped with the compiler or performance
libraries. Until this is fixed, instruct rpmbuild to skip listing key
.so's provided by the compiler toolchain as formal Requires for ohpc
builds.
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,844,2018-09-06T17:39:32Z,2018-09-09T22:48:56Z,2018-10-02T18:22:32Z,MERGED,True,24,15,2,https://github.com/chuckatkins,CMake: Bump to 3.12.1 and use more system libraries as dependencies,1,[],https://github.com/openhpc/ohpc/pull/844,https://github.com/chuckatkins,1,https://github.com/openhpc/ohpc/pull/844,"3.12 addressed an important bug introduced into 3.11 that causes the Intel C compiler to not be able to properly use -std=gnu11 and instead always use -std=c11, which forces ANSI C compatibility and breaks POSIX functionality.","3.12 addressed an important bug introduced into 3.11 that causes the Intel C compiler to not be able to properly use -std=gnu11 and instead always use -std=c11, which forces ANSI C compatibility and breaks POSIX functionality.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,844,2018-09-06T17:39:32Z,2018-09-09T22:48:56Z,2018-10-02T18:22:32Z,MERGED,True,24,15,2,https://github.com/chuckatkins,CMake: Bump to 3.12.1 and use more system libraries as dependencies,1,[],https://github.com/openhpc/ohpc/pull/844,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/844#issuecomment-419210475,"3.12 addressed an important bug introduced into 3.11 that causes the Intel C compiler to not be able to properly use -std=gnu11 and instead always use -std=c11, which forces ANSI C compatibility and breaks POSIX functionality.","@chuckatkins could you open the pull request against 1.3.6? OpenHPC branching is a bit confusing, but the current devel branch (1.3.6 right now) is where the newest code lives. Once 1.3.6 is released it is merged back into master.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,844,2018-09-06T17:39:32Z,2018-09-09T22:48:56Z,2018-10-02T18:22:32Z,MERGED,True,24,15,2,https://github.com/chuckatkins,CMake: Bump to 3.12.1 and use more system libraries as dependencies,1,[],https://github.com/openhpc/ohpc/pull/844,https://github.com/chuckatkins,3,https://github.com/openhpc/ohpc/pull/844#issuecomment-419216007,"3.12 addressed an important bug introduced into 3.11 that causes the Intel C compiler to not be able to properly use -std=gnu11 and instead always use -std=c11, which forces ANSI C compatibility and breaks POSIX functionality.",@adrianreber I think this should be good now.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,844,2018-09-06T17:39:32Z,2018-09-09T22:48:56Z,2018-10-02T18:22:32Z,MERGED,True,24,15,2,https://github.com/chuckatkins,CMake: Bump to 3.12.1 and use more system libraries as dependencies,1,[],https://github.com/openhpc/ohpc/pull/844,https://github.com/crbaird,4,https://github.com/openhpc/ohpc/pull/844#issuecomment-419750763,"3.12 addressed an important bug introduced into 3.11 that causes the Intel C compiler to not be able to properly use -std=gnu11 and instead always use -std=c11, which forces ANSI C compatibility and breaks POSIX functionality.","thanks, @chuckatkins",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,844,2018-09-06T17:39:32Z,2018-09-09T22:48:56Z,2018-10-02T18:22:32Z,MERGED,True,24,15,2,https://github.com/chuckatkins,CMake: Bump to 3.12.1 and use more system libraries as dependencies,1,[],https://github.com/openhpc/ohpc/pull/844,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/844#issuecomment-423637329,"3.12 addressed an important bug introduced into 3.11 that causes the Intel C compiler to not be able to properly use -std=gnu11 and instead always use -std=c11, which forces ANSI C compatibility and breaks POSIX functionality.","@chuckatkins, have you built this latest version with SLES12? The CentOS build went fine but seeing an error in SLES, example log is below.
https://build.openhpc.community/package/live_build_log/OpenHPC:1.3:Update6:Factory/cmake/SLE_12/x86_64
[ 75%] Building CXX object Source/CMakeFiles/ccmake.dir/CursesDialog/cmCursesOptionsWidget.cxx.o
[ 1010s] In file included from /home/abuild/rpmbuild/BUILD/cmake-3.12.1/Source/CursesDialog/cmCursesOptionsWidget.h:8:0,
[ 1010s]                  from /home/abuild/rpmbuild/BUILD/cmake-3.12.1/Source/CursesDialog/cmCursesOptionsWidget.cxx:3:
[ 1010s] /home/abuild/rpmbuild/BUILD/cmake-3.12.1/Source/CursesDialog/cmCursesStandardIncludes.h:18:18: fatal error: form.h: No such file or directory

It's erring on form.h; I thought perhaps the build might be missing ncurses-devel, but that is present in the build. I also see that the cmake src has it's own form.h so I'm not sure if this error is in reference to an included source, or to one that should be resolved externally. Just curious if you might have a thought before diving in further.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,844,2018-09-06T17:39:32Z,2018-09-09T22:48:56Z,2018-10-02T18:22:32Z,MERGED,True,24,15,2,https://github.com/chuckatkins,CMake: Bump to 3.12.1 and use more system libraries as dependencies,1,[],https://github.com/openhpc/ohpc/pull/844,https://github.com/crbaird,6,https://github.com/openhpc/ohpc/pull/844#issuecomment-426376975,"3.12 addressed an important bug introduced into 3.11 that causes the Intel C compiler to not be able to properly use -std=gnu11 and instead always use -std=c11, which forces ANSI C compatibility and breaks POSIX functionality.",The CentOS ncurses-devel puts a form.h in a default include path while the SLE ncurses-devel does not. This is now patched in OHPC 1.3.6 Factory. Cmake should really check for the header file at config time.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,846,2018-09-07T06:32:08Z,2018-09-07T13:45:09Z,2018-09-07T13:45:09Z,MERGED,True,0,46,4,https://github.com/adrianreber,compilers: remove dts conditionals,1,[],https://github.com/openhpc/ohpc/pull/846,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/846,"The work to use the devtoolset based compiler for OpenHPC on CentOS does
not need to be part of the repository if it is unused. If necessary it
can be brought back from git any time.
Signed-off-by: Adrian Reber areber@redhat.com","The work to use the devtoolset based compiler for OpenHPC on CentOS does
not need to be part of the repository if it is unused. If necessary it
can be brought back from git any time.
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,853,2018-10-02T02:00:12Z,2018-10-02T16:16:16Z,2018-10-02T16:16:29Z,MERGED,True,340,1,3,https://github.com/cmcantalupo,Add spank plugin to msr-safe to enable save/restore for jobs.,1,[],https://github.com/openhpc/ohpc/pull/853,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/853,"Include patch from msr-safe mainline that came in before
the spank plugin as well.

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com","Include patch from msr-safe mainline that came in before
the spank plugin as well.

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,853,2018-10-02T02:00:12Z,2018-10-02T16:16:16Z,2018-10-02T16:16:29Z,MERGED,True,340,1,3,https://github.com/cmcantalupo,Add spank plugin to msr-safe to enable save/restore for jobs.,1,[],https://github.com/openhpc/ohpc/pull/853,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/853#issuecomment-426335955,"Include patch from msr-safe mainline that came in before
the spank plugin as well.

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com","thanks, @cmcantalupo",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,854,2018-10-03T22:14:45Z,2018-10-04T18:10:36Z,2018-10-04T18:10:36Z,MERGED,True,4,3,2,https://github.com/cmcantalupo,Modify msr-safe spank plugin RPM name.,1,[],https://github.com/openhpc/ohpc/pull/854,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/854,"Was msr-safe-ohpc-slurm => msr-safe-slurm-ohpc
Also add dependency from geopm to the msr-safe slurm plugin.

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com","Was msr-safe-ohpc-slurm => msr-safe-slurm-ohpc
Also add dependency from geopm to the msr-safe slurm plugin.

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,855,2018-10-04T18:45:47Z,2018-10-04T19:17:25Z,2018-10-04T19:17:38Z,MERGED,True,1,754,3,https://github.com/dianarg,Update GEOPM from v0.5.1 to v0.6.0,1,[],https://github.com/openhpc/ohpc/pull/855,https://github.com/dianarg,1,https://github.com/openhpc/ohpc/pull/855,Signed-off-by: Diana Guttman diana.r.guttman@intel.com,Signed-off-by: Diana Guttman diana.r.guttman@intel.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,855,2018-10-04T18:45:47Z,2018-10-04T19:17:25Z,2018-10-04T19:17:38Z,MERGED,True,1,754,3,https://github.com/dianarg,Update GEOPM from v0.5.1 to v0.6.0,1,[],https://github.com/openhpc/ohpc/pull/855,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/855#issuecomment-427137896,Signed-off-by: Diana Guttman diana.r.guttman@intel.com,"thanks, @dianarg",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,856,2018-10-05T23:41:28Z,2018-10-08T20:30:18Z,2018-10-08T20:30:19Z,MERGED,True,10,4,4,https://github.com/bgeltz,Fix failing unit tests for GEOPM.,2,[],https://github.com/openhpc/ohpc/pull/856,https://github.com/bgeltz,1,https://github.com/openhpc/ohpc/pull/856,Signed-off-by: Brad Geltz brad.geltz@intel.com,Signed-off-by: Brad Geltz brad.geltz@intel.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,857,2018-10-10T21:58:48Z,,2018-10-10T21:58:48Z,OPEN,False,6,0,1,https://github.com/cmcantalupo,Check that intel_pstate driver is disabled on the compute node.,1,[],https://github.com/openhpc/ohpc/pull/857,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/857,Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com,Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,859,2018-10-24T13:39:22Z,2018-10-31T15:43:54Z,2018-10-31T15:53:14Z,MERGED,True,30,30,2,https://github.com/boegel,Easybuild 3.7.1 + update EasyBuild bootstrap script to latest version,2,[],https://github.com/openhpc/ohpc/pull/859,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/859,EasyBuild v3.7.1 was released last week,EasyBuild v3.7.1 was released last week,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,859,2018-10-24T13:39:22Z,2018-10-31T15:43:54Z,2018-10-31T15:53:14Z,MERGED,True,30,30,2,https://github.com/boegel,Easybuild 3.7.1 + update EasyBuild bootstrap script to latest version,2,[],https://github.com/openhpc/ohpc/pull/859,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/859#issuecomment-434738889,EasyBuild v3.7.1 was released last week,"thanks, @boegel",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,860,2018-10-25T22:04:28Z,2018-10-30T01:38:28Z,2018-10-30T01:38:28Z,CLOSED,False,2946,0,6,https://github.com/dianarg,Add geopm patches since 0.6.0 release.,1,[],https://github.com/openhpc/ohpc/pull/860,https://github.com/dianarg,1,https://github.com/openhpc/ohpc/pull/860,One patch is required for Skylake-based platforms.  The others are needed to correctly capture all MPI calls of interest in Fortran code.,One patch is required for Skylake-based platforms.  The others are needed to correctly capture all MPI calls of interest in Fortran code.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,860,2018-10-25T22:04:28Z,2018-10-30T01:38:28Z,2018-10-30T01:38:28Z,CLOSED,False,2946,0,6,https://github.com/dianarg,Add geopm patches since 0.6.0 release.,1,[],https://github.com/openhpc/ohpc/pull/860,https://github.com/cmcantalupo,2,https://github.com/openhpc/ohpc/pull/860#issuecomment-434135987,One patch is required for Skylake-based platforms.  The others are needed to correctly capture all MPI calls of interest in Fortran code.,"Please merge PR #865 instead of this one.  We have added these patches into a hotfix. @dianarg, can you close this PR please.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,862,2018-10-26T23:04:04Z,2018-10-26T23:07:32Z,2018-10-26T23:31:50Z,MERGED,True,12,2,2,https://github.com/koomie,update msr-safe build to enable usage on SLES,9,[],https://github.com/openhpc/ohpc/pull/862,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/862,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,862,2018-10-26T23:04:04Z,2018-10-26T23:07:32Z,2018-10-26T23:31:50Z,MERGED,True,12,2,2,https://github.com/koomie,update msr-safe build to enable usage on SLES,9,[],https://github.com/openhpc/ohpc/pull/862,https://github.com/cmcantalupo,2,https://github.com/openhpc/ohpc/pull/862#issuecomment-433569275,,Thanks Karl!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,863,2018-10-27T15:50:17Z,2018-10-27T16:54:15Z,2018-10-27T16:54:15Z,MERGED,True,8,6,1,https://github.com/koomie,rms/pbspro: updating version to v18.1.3,2,[],https://github.com/openhpc/ohpc/pull/863,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/863,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,864,2018-10-29T00:23:38Z,2018-10-29T00:27:31Z,2018-10-29T00:27:34Z,MERGED,True,1,1,1,https://github.com/koomie,rms/pmix: update version to v2.1.4,1,[],https://github.com/openhpc/ohpc/pull/864,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/864,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,Signed-off-by: Karl W. Schulz karl@ices.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,865,2018-10-30T01:06:10Z,2018-10-30T03:15:30Z,2018-10-30T03:15:41Z,MERGED,True,1,1,1,https://github.com/cmcantalupo,Update geopm to v0.6.1,1,[],https://github.com/openhpc/ohpc/pull/865,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/865,We just released v0.6.1 which contains some bug fixes for v0.6.0.,We just released v0.6.1 which contains some bug fixes for v0.6.0.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,865,2018-10-30T01:06:10Z,2018-10-30T03:15:30Z,2018-10-30T03:15:41Z,MERGED,True,1,1,1,https://github.com/cmcantalupo,Update geopm to v0.6.1,1,[],https://github.com/openhpc/ohpc/pull/865,https://github.com/crbaird,2,https://github.com/openhpc/ohpc/pull/865#issuecomment-434157004,We just released v0.6.1 which contains some bug fixes for v0.6.0.,"thanks, @cmcantalupo",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,866,2018-11-02T17:03:18Z,2018-11-02T17:22:52Z,2018-11-02T17:23:23Z,CLOSED,False,2,2,1,https://github.com/ChrisDowning,Updated Singularity version,1,[],https://github.com/openhpc/ohpc/pull/866,https://github.com/ChrisDowning,1,https://github.com/openhpc/ohpc/pull/866,Signed-off-by: Chris chrisdowning250@gmail.com,Signed-off-by: Chris chrisdowning250@gmail.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,866,2018-11-02T17:03:18Z,2018-11-02T17:22:52Z,2018-11-02T17:23:23Z,CLOSED,False,2,2,1,https://github.com/ChrisDowning,Updated Singularity version,1,[],https://github.com/openhpc/ohpc/pull/866,https://github.com/ChrisDowning,2,https://github.com/openhpc/ohpc/pull/866#issuecomment-435450983,Signed-off-by: Chris chrisdowning250@gmail.com,Having Github issues - use other version...,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,867,2018-11-02T17:22:13Z,2018-11-02T18:21:58Z,2018-12-18T21:45:42Z,MERGED,True,2,2,1,https://github.com/ChrisDowning,Updated Singularity to 2.6.0,1,[],https://github.com/openhpc/ohpc/pull/867,https://github.com/ChrisDowning,1,https://github.com/openhpc/ohpc/pull/867,"Increment Singularity package version to 2.6.0 to avoid environment variables bugs.
Also modified URL to point to the new Singularity organisation (Sylabs rather than Singularityware).
Signed-off-by: Chris chrisdowning250@gmail.com","Increment Singularity package version to 2.6.0 to avoid environment variables bugs.
Also modified URL to point to the new Singularity organisation (Sylabs rather than Singularityware).
Signed-off-by: Chris chrisdowning250@gmail.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,868,2018-11-03T16:14:33Z,2019-06-05T19:26:27Z,2019-06-05T20:06:46Z,MERGED,True,1,315,3,https://github.com/cmcantalupo,Update msr-safe to version 1.2.1.,1,['obs_ready'],https://github.com/openhpc/ohpc/pull/868,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/868,Signed-off-by: Diana Guttman diana.r.guttman@intel.com,Signed-off-by: Diana Guttman diana.r.guttman@intel.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,868,2018-11-03T16:14:33Z,2019-06-05T19:26:27Z,2019-06-05T20:06:46Z,MERGED,True,1,315,3,https://github.com/cmcantalupo,Update msr-safe to version 1.2.1.,1,['obs_ready'],https://github.com/openhpc/ohpc/pull/868,https://github.com/cmcantalupo,2,https://github.com/openhpc/ohpc/pull/868#issuecomment-499108000,Signed-off-by: Diana Guttman diana.r.guttman@intel.com,Is this update going to make it into the next OpenHPC release?  Thanks for any help with merging it and I'd be happy to answer any questions about the update.  Looks like the pull request is against the 1.3.6 factory I will update to the 1.3.8 factory.  Sorry for the mistake.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,868,2018-11-03T16:14:33Z,2019-06-05T19:26:27Z,2019-06-05T20:06:46Z,MERGED,True,1,315,3,https://github.com/cmcantalupo,Update msr-safe to version 1.2.1.,1,['obs_ready'],https://github.com/openhpc/ohpc/pull/868,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/868#issuecomment-499221427,Signed-off-by: Diana Guttman diana.r.guttman@intel.com,thx for update - will take a crack at the build here shortly.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,868,2018-11-03T16:14:33Z,2019-06-05T19:26:27Z,2019-06-05T20:06:46Z,MERGED,True,1,315,3,https://github.com/cmcantalupo,Update msr-safe to version 1.2.1.,1,['obs_ready'],https://github.com/openhpc/ohpc/pull/868,https://github.com/cmcantalupo,4,https://github.com/openhpc/ohpc/pull/868#issuecomment-499231509,Signed-off-by: Diana Guttman diana.r.guttman@intel.com,Thanks!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,869,2018-11-03T16:33:30Z,2019-10-28T16:15:32Z,2019-10-28T16:15:33Z,CLOSED,False,2,1,1,https://github.com/cmcantalupo,Explicitly install msr-safe package.,2,[],https://github.com/openhpc/ohpc/pull/869,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/869,"The msr-safe-ohpc package is a dependency of the msr-safe-slurm-ohpc
which is already part of the GEOPM install instructions.
Therefore, this modification is not a functional change to which
packages will be installed if the instructions are followed.
Explictly listing the msr-safe-ohpc package will avoid a problem
with using the msr-safe kernel module in the case where a user
chooses not to intall the slurm plugin package.

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com","The msr-safe-ohpc package is a dependency of the msr-safe-slurm-ohpc
which is already part of the GEOPM install instructions.
Therefore, this modification is not a functional change to which
packages will be installed if the instructions are followed.
Explictly listing the msr-safe-ohpc package will avoid a problem
with using the msr-safe kernel module in the case where a user
chooses not to intall the slurm plugin package.

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,869,2018-11-03T16:33:30Z,2019-10-28T16:15:32Z,2019-10-28T16:15:33Z,CLOSED,False,2,1,1,https://github.com/cmcantalupo,Explicitly install msr-safe package.,2,[],https://github.com/openhpc/ohpc/pull/869,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/869#issuecomment-547023657,"The msr-safe-ohpc package is a dependency of the msr-safe-slurm-ohpc
which is already part of the GEOPM install instructions.
Therefore, this modification is not a functional change to which
packages will be installed if the instructions are followed.
Explictly listing the msr-safe-ohpc package will avoid a problem
with using the msr-safe kernel module in the case where a user
chooses not to intall the slurm plugin package.

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com",Had to cherry-pick this patch but it has landed on 1.3.9 branch (52e76e9),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,870,2018-11-05T03:53:58Z,2018-11-05T04:01:36Z,2018-11-05T04:01:42Z,MERGED,True,47,47,2,https://github.com/koomie,perf-tools/paraver: update build to use system gcc; gui is not a comp…,1,[],https://github.com/openhpc/ohpc/pull/870,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/870,"…iler/mpi
variant package
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu","…iler/mpi
variant package
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,870,2018-11-05T03:53:58Z,2018-11-05T04:01:36Z,2018-11-05T04:01:42Z,MERGED,True,47,47,2,https://github.com/koomie,perf-tools/paraver: update build to use system gcc; gui is not a comp…,1,[],https://github.com/openhpc/ohpc/pull/870,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/870#issuecomment-435748874,"…iler/mpi
variant package
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu",Note: Travis check seemed to be confused as commit also re-named a .spec file. Will need to update this at some point to deal with this possibility.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,874,2018-11-25T20:48:47Z,2019-01-24T19:32:01Z,2019-01-24T20:02:21Z,MERGED,True,61,238,20,https://github.com/adrianreber,SPEC file cleanups,20,[],https://github.com/openhpc/ohpc/pull/874,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/874,"This mainly removes conditionals from SPEC files for distributions (EL5, EL6, Fedora) which OpenHPC does not support. It also cleans up trailing whitespace and commented out lines.","This mainly removes conditionals from SPEC files for distributions (EL5, EL6, Fedora) which OpenHPC does not support. It also cleans up trailing whitespace and commented out lines.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,874,2018-11-25T20:48:47Z,2019-01-24T19:32:01Z,2019-01-24T20:02:21Z,MERGED,True,61,238,20,https://github.com/adrianreber,SPEC file cleanups,20,[],https://github.com/openhpc/ohpc/pull/874,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/874#issuecomment-457320448,"This mainly removes conditionals from SPEC files for distributions (EL5, EL6, Fedora) which OpenHPC does not support. It also cleans up trailing whitespace and commented out lines.",@koomie any chance of getting this merged before all the packages will see updates for the next release?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,874,2018-11-25T20:48:47Z,2019-01-24T19:32:01Z,2019-01-24T20:02:21Z,MERGED,True,61,238,20,https://github.com/adrianreber,SPEC file cleanups,20,[],https://github.com/openhpc/ohpc/pull/874,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/874#issuecomment-457326809,"This mainly removes conditionals from SPEC files for distributions (EL5, EL6, Fedora) which OpenHPC does not support. It also cleans up trailing whitespace and commented out lines.",yep - thx for the reminder.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,874,2018-11-25T20:48:47Z,2019-01-24T19:32:01Z,2019-01-24T20:02:21Z,MERGED,True,61,238,20,https://github.com/adrianreber,SPEC file cleanups,20,[],https://github.com/openhpc/ohpc/pull/874,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/874#issuecomment-457336627,"This mainly removes conditionals from SPEC files for distributions (EL5, EL6, Fedora) which OpenHPC does not support. It also cleans up trailing whitespace and commented out lines.","Thanks, let me know if I broke something which needs fixing.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,876,2018-12-10T20:17:43Z,,2020-07-20T15:28:15Z,OPEN,False,1,1,1,https://github.com/jabl,Don't use biosdevname for predictable network interface names,1,[],https://github.com/openhpc/ohpc/pull/876,https://github.com/jabl,1,https://github.com/openhpc/ohpc/pull/876,"There are two ways of doing the predictable network interface names
thing. The original biosdevname approach by Dell, and the newer scheme
by systemd/udev,
https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/
.
Most distros have dropped biosdevname (including RHEL upstream,
Fedora, see https://bugzilla.redhat.com/show_bug.cgi?id=965718 for
issues with biosdevname and why it was dropped), and are nowadays
using the udev naming convention.
RHEL 7, however, is a bit of a weird hybrid, in that in a default
installation the udev naming is used, except if it's a Dell system, in
which case biosdevname is used. This default logic can be overridden
with the biosdevname=0/1 kernel command line arguments. See
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/sec-consistent_network_device_naming_using_biosdevname
For Warewulf, lets follow upstream and thus not force the use of
biosdevname, and instead use the udev scheme as specified by
net.ifnames=1 without the additional biosdevname=1 argument.","There are two ways of doing the predictable network interface names
thing. The original biosdevname approach by Dell, and the newer scheme
by systemd/udev,
https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/
.
Most distros have dropped biosdevname (including RHEL upstream,
Fedora, see https://bugzilla.redhat.com/show_bug.cgi?id=965718 for
issues with biosdevname and why it was dropped), and are nowadays
using the udev naming convention.
RHEL 7, however, is a bit of a weird hybrid, in that in a default
installation the udev naming is used, except if it's a Dell system, in
which case biosdevname is used. This default logic can be overridden
with the biosdevname=0/1 kernel command line arguments. See
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/sec-consistent_network_device_naming_using_biosdevname
For Warewulf, lets follow upstream and thus not force the use of
biosdevname, and instead use the udev scheme as specified by
net.ifnames=1 without the additional biosdevname=1 argument.",True,"{'THUMBS_UP': ['https://github.com/novosirj', 'https://github.com/sabo']}"
openhpc/ohpc,https://github.com/openhpc/ohpc,876,2018-12-10T20:17:43Z,,2020-07-20T15:28:15Z,OPEN,False,1,1,1,https://github.com/jabl,Don't use biosdevname for predictable network interface names,1,[],https://github.com/openhpc/ohpc/pull/876,https://github.com/jabl,2,https://github.com/openhpc/ohpc/pull/876#issuecomment-480156851,"There are two ways of doing the predictable network interface names
thing. The original biosdevname approach by Dell, and the newer scheme
by systemd/udev,
https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/
.
Most distros have dropped biosdevname (including RHEL upstream,
Fedora, see https://bugzilla.redhat.com/show_bug.cgi?id=965718 for
issues with biosdevname and why it was dropped), and are nowadays
using the udev naming convention.
RHEL 7, however, is a bit of a weird hybrid, in that in a default
installation the udev naming is used, except if it's a Dell system, in
which case biosdevname is used. This default logic can be overridden
with the biosdevname=0/1 kernel command line arguments. See
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/sec-consistent_network_device_naming_using_biosdevname
For Warewulf, lets follow upstream and thus not force the use of
biosdevname, and instead use the udev scheme as specified by
net.ifnames=1 without the additional biosdevname=1 argument.",Ping?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,876,2018-12-10T20:17:43Z,,2020-07-20T15:28:15Z,OPEN,False,1,1,1,https://github.com/jabl,Don't use biosdevname for predictable network interface names,1,[],https://github.com/openhpc/ohpc/pull/876,https://github.com/jabl,3,https://github.com/openhpc/ohpc/pull/876#issuecomment-505133701,"There are two ways of doing the predictable network interface names
thing. The original biosdevname approach by Dell, and the newer scheme
by systemd/udev,
https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/
.
Most distros have dropped biosdevname (including RHEL upstream,
Fedora, see https://bugzilla.redhat.com/show_bug.cgi?id=965718 for
issues with biosdevname and why it was dropped), and are nowadays
using the udev naming convention.
RHEL 7, however, is a bit of a weird hybrid, in that in a default
installation the udev naming is used, except if it's a Dell system, in
which case biosdevname is used. This default logic can be overridden
with the biosdevname=0/1 kernel command line arguments. See
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/sec-consistent_network_device_naming_using_biosdevname
For Warewulf, lets follow upstream and thus not force the use of
biosdevname, and instead use the udev scheme as specified by
net.ifnames=1 without the additional biosdevname=1 argument.",Ping?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,876,2018-12-10T20:17:43Z,,2020-07-20T15:28:15Z,OPEN,False,1,1,1,https://github.com/jabl,Don't use biosdevname for predictable network interface names,1,[],https://github.com/openhpc/ohpc/pull/876,https://github.com/sabo,4,https://github.com/openhpc/ohpc/pull/876#issuecomment-661110565,"There are two ways of doing the predictable network interface names
thing. The original biosdevname approach by Dell, and the newer scheme
by systemd/udev,
https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/
.
Most distros have dropped biosdevname (including RHEL upstream,
Fedora, see https://bugzilla.redhat.com/show_bug.cgi?id=965718 for
issues with biosdevname and why it was dropped), and are nowadays
using the udev naming convention.
RHEL 7, however, is a bit of a weird hybrid, in that in a default
installation the udev naming is used, except if it's a Dell system, in
which case biosdevname is used. This default logic can be overridden
with the biosdevname=0/1 kernel command line arguments. See
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/sec-consistent_network_device_naming_using_biosdevname
For Warewulf, lets follow upstream and thus not force the use of
biosdevname, and instead use the udev scheme as specified by
net.ifnames=1 without the additional biosdevname=1 argument.","We were running into device name difficulties on a new Warewulf & CentOS 8 cluster while following the current docs, and removing the biosdevname=1 argument resolved the issue. Thanks @jabl for pointing this out and making this PR.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/877,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.","This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/877#issuecomment-446119244,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.",CI failure due to missing group tag in python-Cython.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/boegel,3,https://github.com/openhpc/ohpc/pull/877#issuecomment-446123631,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.","@adrianreber Isn't Python 2.7 also available for RHEL8? EasyBuild will be happy if python2 is available. Also, Spack supports Python 3 afaik.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/877#issuecomment-446130146,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.","@boegel There might be python2 for some limited time, not sure. If you look at the RHEL 7.5 release notes at:
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.5_release_notes/chap-red_hat_enterprise_linux-7.5_release_notes-deprecated_functionality
it says: ""Python 2 will be replaced with Python 3 in the next Red Hat Enterprise Linux (RHEL) major release"". So I would recommend using python3. I think OpenHPC should try to only use python3 (if possible) if there will be an OpenHPC release for CentOS 8. But as we do not know when CentOS 8 will be available and what it will look like we still have some time. It also not decided if and when OpenHPC will support CentOS 8. This is just my very early effort to prepare OpenHPC to be ready for CentOS 8.
I would try to avoid anything python2 for this effort, but all of this depends on what the TSC thinks about it.
Looking at https://pythonclock.org/ it does not really make sense to work with python2 any more.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/boegel,5,https://github.com/openhpc/ohpc/pull/877#issuecomment-446132126,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.",@adrianreber See https://developers.redhat.com/blog/2018/11/14/python-in-rhel-8/ for more info on Python 2 vs 3 in RHEL8,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/adrianreber,6,https://github.com/openhpc/ohpc/pull/877#issuecomment-446133956,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.","@boegel That page also says ""It won’t be in RHEL 8 Beta, but there will come a day when support for Python 2 will end. If you maintain Python 2 code, you should think about porting it to Python 3.""",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/boegel,7,https://github.com/openhpc/ohpc/pull/877#issuecomment-446147288,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.","@adrianreber Sure, and I fully agree with that, but as far as I can tell, Python 2 will still be available in RHEL8, at least in the first release. Otherwise we would have already received stronger signals, I think...",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/adrianreber,8,https://github.com/openhpc/ohpc/pull/877#issuecomment-446150557,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.",@boegel This is probably best discussed by the TSC.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/boegel,9,https://github.com/openhpc/ohpc/pull/877#issuecomment-446534046,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.","@adrianreber Agreed. I wasn't trying to push for Python 2, let me be clear. I hope to fix the compatibility issues in EasyBuild soon.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/adrianreber,10,https://github.com/openhpc/ohpc/pull/877#issuecomment-462478534,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.","@koomie rebased and force pushed. Now with annobin. Using annobin would make it a lot easier for us, as we can just use the default RPM build flags. I added a bootstrap annobin flag to the annobin SPEC file to be able to build annobin without having annobin installed. So first builds needs the bootstrap flag set to '1' and then it can stay at '0'. For every major gcc release we probably need to do a bootstrap annobin build.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,877,2018-12-11T08:37:46Z,2020-04-02T07:45:26Z,2020-04-02T07:45:26Z,CLOSED,False,333,83,30,https://github.com/adrianreber,Add support to build packages on RHEL8 beta,30,[],https://github.com/openhpc/ohpc/pull/877,https://github.com/koomie,11,https://github.com/openhpc/ohpc/pull/877#issuecomment-607525891,"This includes all commits from my previous cleanup PR (#874). So it would make sense to merge the cleanup PR first.
This is a rebuild of all OpenHPC packages against the RHEL8 beta. I rebuilt all packages against CentOS 7.6 to make sure nothing breaks with the RHEL8 beta changes.
As pbspro is broken with CentOS 7.6 (openpbs/openpbs#910) this PR also includes a fix for pbspro.
Some OpenHPC packages failed to rebuild against the RHEL8 beta. The most problems are related to python2.
I skipped following OpenHPC packages on the RHEL8 beta because they are part of the OS already in the same version:

lua-filesystem
lua-bitop
luaposix
autoconf
automake
lsof
valgrind
libtool

Following packages failed to build on the RHEL8 beta because they seem python2 only:

singularity (it seems there is a patch in Fedora for python3 builds)
pbspro
genders
easybuild (easybuilders/easybuild-framework#133)
spack
ganglia
mpiP
slurm
shine
geopm
tau
plasma
petsc
trilinos
adios

Following packages did not build because there is no EPEL8:

cmake (not sure why any more)
warewulf-ipmi
warewulf-provision
warewulf-vnfs
nagios
warewulf-cluster
nagios-plugins
wxparaver

The following packages are also not building for various other reasons:

sigar
msr-safe
sensys
extrae
pdsh (needs slurm)
mfem (requires petsc)
slepc (requires petsc)

Another problem I found during rebuild on the RHEL8 beta is related to annobin, a GCC plugin which
creates annotated binaries (https://fedoraproject.org/wiki/Changes/Annobin).
For all OpenHPC packages I disabled annobin globally in the SPEC files by setting '%undefine _annotated_build'.
If I am now starting to build python packages with the OpenHPC compiler using the default python3 from RHEL8 I will get CFLAGS from python3 which also has the annobin usage hard-coded. The problem right now is that there is no way to disable annobin for any python3 packages built with a compiler which does not support annobin:
https://bugzilla.redhat.com/show_bug.cgi?id=1536569
https://bugzilla.redhat.com/show_bug.cgi?id=1634784
The current work-around is this:
export CFLAGS=""-iplugindir=/usr/lib/gcc/x86_64-redhat-linux/8/plugin -fplugin=annobin -fplugin-arg-annobin-disable""
This first changes the plugin search path to the plugin path of the system compiler it then loads the annobin plugin to disable it. So there is no way to disable the plugin without enabling it first.
Unfortunately this means that we are now loading the GCC plugins from the system compiler and not from the OpenHPC compiler. Right not that is not problematic as it is almost the same version, but this could become a problem in the future. I have also not tested in any way how this interacts with non GCC compilers.","I believe we can close this out now that we are building against 8.1 proper, yes?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,878,2018-12-11T16:55:13Z,2018-12-11T17:03:24Z,2018-12-11T17:03:24Z,CLOSED,False,1,1,1,https://github.com/LaHaine,Update ohpc-find-requires,1,[],https://github.com/openhpc/ohpc/pull/878,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/878,fix error printing in case of a missing search path,fix error printing in case of a missing search path,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,879,2018-12-11T17:01:56Z,2019-02-07T14:16:52Z,2019-02-07T14:16:59Z,CLOSED,False,229,202,3,https://github.com/LaHaine,Update ohpc-find-requires,2,[],https://github.com/openhpc/ohpc/pull/879,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/879,"fix error printing in case no search path was provided
Signed-off-by: Götz Waschk goetz.waschk@desy.de","fix error printing in case no search path was provided
Signed-off-by: Götz Waschk goetz.waschk@desy.de",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,879,2018-12-11T17:01:56Z,2019-02-07T14:16:52Z,2019-02-07T14:16:59Z,CLOSED,False,229,202,3,https://github.com/LaHaine,Update ohpc-find-requires,2,[],https://github.com/openhpc/ohpc/pull/879,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/879#issuecomment-461376718,"fix error printing in case no search path was provided
Signed-off-by: Götz Waschk goetz.waschk@desy.de","The commit is from LaHaine <LaHaine@users.noreply.github.com> but signed off by Signed-off-by: Götz Waschk goetz.waschk@desy.de, that is why the DCO check fails. Can you fix that? Besides that it looks correct.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,880,2018-12-19T07:27:28Z,2019-02-07T14:15:10Z,2019-04-19T10:28:35Z,MERGED,True,10,6,2,https://github.com/boegel,EasyBuild 3.8.1,2,[],https://github.com/openhpc/ohpc/pull/880,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/880,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,880,2018-12-19T07:27:28Z,2019-02-07T14:15:10Z,2019-04-19T10:28:35Z,MERGED,True,10,6,2,https://github.com/boegel,EasyBuild 3.8.1,2,[],https://github.com/openhpc/ohpc/pull/880,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/880#issuecomment-461360163,,"@adrianreber: EasyBuild 3.8.1 is out now, shall I update this in-place or open a new PR?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,880,2018-12-19T07:27:28Z,2019-02-07T14:15:10Z,2019-04-19T10:28:35Z,MERGED,True,10,6,2,https://github.com/boegel,EasyBuild 3.8.1,2,[],https://github.com/openhpc/ohpc/pull/880,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/880#issuecomment-461361442,,Just force push.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,880,2018-12-19T07:27:28Z,2019-02-07T14:15:10Z,2019-04-19T10:28:35Z,MERGED,True,10,6,2,https://github.com/boegel,EasyBuild 3.8.1,2,[],https://github.com/openhpc/ohpc/pull/880,https://github.com/boegel,4,https://github.com/openhpc/ohpc/pull/880#issuecomment-461362337,,@adrianreber done!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,880,2018-12-19T07:27:28Z,2019-02-07T14:15:10Z,2019-04-19T10:28:35Z,MERGED,True,10,6,2,https://github.com/boegel,EasyBuild 3.8.1,2,[],https://github.com/openhpc/ohpc/pull/880,https://github.com/adrianreber,5,https://github.com/openhpc/ohpc/pull/880#issuecomment-461364008,,"Thanks. Looks good. I think I cannot merge PRs, so @koomie @crbaird please merge.
Fixes: #893",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,880,2018-12-19T07:27:28Z,2019-02-07T14:15:10Z,2019-04-19T10:28:35Z,MERGED,True,10,6,2,https://github.com/boegel,EasyBuild 3.8.1,2,[],https://github.com/openhpc/ohpc/pull/880,https://github.com/koomie,6,https://github.com/openhpc/ohpc/pull/880#issuecomment-461443059,,"Thanks for the update. Landed and builds completed successfully:
https://build.openhpc.community/package/show/OpenHPC:1.3:Update7:Factory/easybuild",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,881,2018-12-28T20:38:40Z,2019-04-22T21:16:34Z,2019-04-22T21:16:35Z,CLOSED,False,1,1,1,https://github.com/ChrisDowning,Update Singularity to 2.6.1 to address CVE,1,[],https://github.com/openhpc/ohpc/pull/881,https://github.com/ChrisDowning,1,https://github.com/openhpc/ohpc/pull/881,Addresses security issue with Singularity 2.4 - 2.6: https://github.com/sylabs/singularity/releases/tag/2.6.1,Addresses security issue with Singularity 2.4 - 2.6: https://github.com/sylabs/singularity/releases/tag/2.6.1,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,881,2018-12-28T20:38:40Z,2019-04-22T21:16:34Z,2019-04-22T21:16:35Z,CLOSED,False,1,1,1,https://github.com/ChrisDowning,Update Singularity to 2.6.1 to address CVE,1,[],https://github.com/openhpc/ohpc/pull/881,https://github.com/jmstover,2,https://github.com/openhpc/ohpc/pull/881#issuecomment-450423800,Addresses security issue with Singularity 2.4 - 2.6: https://github.com/sylabs/singularity/releases/tag/2.6.1,"Blink ... ... Well, it's right, but I didn't notice the repo this was on. whistles",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,881,2018-12-28T20:38:40Z,2019-04-22T21:16:34Z,2019-04-22T21:16:35Z,CLOSED,False,1,1,1,https://github.com/ChrisDowning,Update Singularity to 2.6.1 to address CVE,1,[],https://github.com/openhpc/ohpc/pull/881,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/881#issuecomment-485555710,Addresses security issue with Singularity 2.4 - 2.6: https://github.com/sylabs/singularity/releases/tag/2.6.1,Superseded by 3.x release in ohpc v1.3.7 release.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,923,2019-02-07T10:10:42Z,2019-02-07T14:12:48Z,2019-02-07T14:12:49Z,MERGED,True,3,3,1,https://github.com/adrianreber,Update spack to 0.12.1,1,[],https://github.com/openhpc/ohpc/pull/923,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/923,Fixes: #898,Fixes: #898,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,924,2019-02-07T11:49:34Z,2019-02-07T14:12:10Z,2019-02-07T14:12:10Z,MERGED,True,1,1,1,https://github.com/LaHaine,fix error printing in case no search path was provided,1,[],https://github.com/openhpc/ohpc/pull/924,https://github.com/LaHaine,1,https://github.com/openhpc/ohpc/pull/924,Signed-off-by: Götz Waschk goetz.waschk@desy.de,Signed-off-by: Götz Waschk goetz.waschk@desy.de,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,925,2019-02-12T07:33:19Z,2019-02-27T19:50:17Z,2019-02-27T19:50:17Z,MERGED,True,39,2,2,https://github.com/adrianreber,Fix pbspro build failure on Centos 7.6,1,[],https://github.com/openhpc/ohpc/pull/925,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/925,"Patch taken from openpbs/openpbs#910
Signed-off-by: Adrian Reber areber@redhat.com","Patch taken from openpbs/openpbs#910
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,926,2019-02-12T07:34:46Z,2019-02-12T14:11:09Z,2019-02-12T14:11:09Z,MERGED,True,2,2,1,https://github.com/adrianreber,Upgrade boost to 1.69.0,1,[],https://github.com/openhpc/ohpc/pull/926,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/926,Fixes #906,Fixes #906,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,927,2019-02-12T08:39:55Z,2019-02-12T14:10:46Z,2019-02-12T14:10:46Z,MERGED,True,2,21,1,https://github.com/adrianreber,Hypre update and cleanup,2,[],https://github.com/openhpc/ohpc/pull/927,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/927,Fixes: #907,Fixes: #907,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,928,2019-02-12T11:02:26Z,2019-02-12T14:09:15Z,2019-02-12T14:09:15Z,MERGED,True,2,5,1,https://github.com/adrianreber,slepc: upgraded slepc to 3.10.2,1,[],https://github.com/openhpc/ohpc/pull/928,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/928,Fixes: #908,Fixes: #908,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,929,2019-02-12T13:18:00Z,2019-02-12T14:08:42Z,2019-02-12T14:08:42Z,MERGED,True,5,5,2,https://github.com/adrianreber,superlu_dist: upgraded to 6.1.1,1,[],https://github.com/openhpc/ohpc/pull/929,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/929,Fixes: #909,Fixes: #909,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,930,2019-02-12T13:57:45Z,2019-02-12T14:07:02Z,2019-02-12T14:07:02Z,MERGED,True,1,1,1,https://github.com/adrianreber,scorep: updated to 4.1,1,[],https://github.com/openhpc/ohpc/pull/930,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/930,Fixes: #911,Fixes: #911,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,931,2019-02-13T13:39:50Z,2019-02-13T13:43:15Z,2019-02-13T13:43:31Z,MERGED,True,9,15,3,https://github.com/koomie,update mpich build to use ch4 device instead of ch3 (#905),10,[],https://github.com/openhpc/ohpc/pull/931,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/931,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,933,2019-02-14T18:43:13Z,2019-02-15T14:39:07Z,2019-02-15T14:39:07Z,MERGED,True,31,0,2,https://github.com/adrianreber,boost: fix for MPI related errors,1,[],https://github.com/openhpc/ohpc/pull/933,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/933,As discussed: a patch to fix possible errors when using MPI.,As discussed: a patch to fix possible errors when using MPI.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,936,2019-02-20T19:37:19Z,2019-02-28T16:55:25Z,2019-02-28T16:55:25Z,MERGED,True,120,77,1,https://github.com/mike0042,Update PBS Pro to version 19.1.1,2,[],https://github.com/openhpc/ohpc/pull/936,https://github.com/mike0042,1,https://github.com/openhpc/ohpc/pull/936,Bring the OHPC spec file for PBS Pro closer to the one packaged with PBS and update the version to 19.1.1.,Bring the OHPC spec file for PBS Pro closer to the one packaged with PBS and update the version to 19.1.1.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,939,2019-02-28T22:37:15Z,2019-02-28T22:39:55Z,2019-02-28T22:40:02Z,MERGED,True,2,5,1,https://github.com/koomie,rms/pbspro: remove centos7.6 patch landed on latest version; revert,1,[],https://github.com/openhpc/ohpc/pull/939,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/939,"changes to buildrequires for postgres
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu","changes to buildrequires for postgres
Signed-off-by: Karl W. Schulz karl@ices.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,941,2019-03-04T19:16:52Z,2019-03-04T19:20:18Z,2019-03-04T19:20:48Z,MERGED,True,66,0,2,https://github.com/koomie,apply patch to mpich for slurm job launch,2,[],https://github.com/openhpc/ohpc/pull/941,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/941,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,945,2019-03-11T09:03:00Z,2019-03-13T03:20:36Z,2019-03-13T03:20:36Z,MERGED,True,13,0,2,https://github.com/jabl,Make munged log via syslog,1,[],https://github.com/openhpc/ohpc/pull/945,https://github.com/jabl,1,https://github.com/openhpc/ohpc/pull/945,"By default munge writes logs by itself to
/var/long/munge/munged.log. This prevents those logs from being
forwarded to the log server (e.g. the OpenHPC SMS/admin machine), and
in case those logs for one reason or another grows rapidly (e.g.
dun/munge#26) it can be a problem for
diskless nodes or compute nodes with small partitions for /var/log.
This should fix #943
Signed-off-by: Janne Blomqvist janne.blomqvist@aalto.fi","By default munge writes logs by itself to
/var/long/munge/munged.log. This prevents those logs from being
forwarded to the log server (e.g. the OpenHPC SMS/admin machine), and
in case those logs for one reason or another grows rapidly (e.g.
dun/munge#26) it can be a problem for
diskless nodes or compute nodes with small partitions for /var/log.
This should fix #943
Signed-off-by: Janne Blomqvist janne.blomqvist@aalto.fi",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,945,2019-03-11T09:03:00Z,2019-03-13T03:20:36Z,2019-03-13T03:20:36Z,MERGED,True,13,0,2,https://github.com/jabl,Make munged log via syslog,1,[],https://github.com/openhpc/ohpc/pull/945,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/945#issuecomment-472264063,"By default munge writes logs by itself to
/var/long/munge/munged.log. This prevents those logs from being
forwarded to the log server (e.g. the OpenHPC SMS/admin machine), and
in case those logs for one reason or another grows rapidly (e.g.
dun/munge#26) it can be a problem for
diskless nodes or compute nodes with small partitions for /var/log.
This should fix #943
Signed-off-by: Janne Blomqvist janne.blomqvist@aalto.fi","This looks close but you also need to apply said patch that is introduced, i.e. we need %patch4 later down in the .spec file. I tested this by hand and will add this in.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,947,2019-03-13T17:32:48Z,2019-03-25T15:43:38Z,2019-03-25T15:43:38Z,CLOSED,False,6,6,2,https://github.com/amblakem,Upgrade Intel MPI benchmarks to 2019.2.,2,[],https://github.com/openhpc/ohpc/pull/947,https://github.com/amblakem,1,https://github.com/openhpc/ohpc/pull/947,"Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,947,2019-03-13T17:32:48Z,2019-03-25T15:43:38Z,2019-03-25T15:43:38Z,CLOSED,False,6,6,2,https://github.com/amblakem,Upgrade Intel MPI benchmarks to 2019.2.,2,[],https://github.com/openhpc/ohpc/pull/947,https://github.com/amblakem,2,https://github.com/openhpc/ohpc/pull/947#issuecomment-476254931,"Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com",I just realized that I did this against the wrong base.  Sorry about that.  I'll resubmit,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,950,2019-03-25T15:51:21Z,2019-05-15T14:04:57Z,2019-05-15T14:15:38Z,CLOSED,False,11,22,2,https://github.com/amblakem,Upgrade Intel MPI benchmarks to 2019.2,4,[],https://github.com/openhpc/ohpc/pull/950,https://github.com/amblakem,1,https://github.com/openhpc/ohpc/pull/950,"Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,950,2019-03-25T15:51:21Z,2019-05-15T14:04:57Z,2019-05-15T14:15:38Z,CLOSED,False,11,22,2,https://github.com/amblakem,Upgrade Intel MPI benchmarks to 2019.2,4,[],https://github.com/openhpc/ohpc/pull/950,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/950#issuecomment-485515245,"Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","There are multiple issues with this PR - I'm guessing you did not try to build before submission.

the setup macro fails since the leading directory name is changed.  Looks like new dirname includes IMB and an extra v in the path.

cd mpi-benchmarks-2019.2
/var/tmp/rpm-tmp.zvwJjR: line 35: cd: mpi-benchmarks-2019.2: No such file or directory


After fixing above, the current Patch1 being applied to allow use of mpicc for compilation no longer applies in this latest version.

Patch #1 (imb.cc.patch):
+ /usr/bin/cat /root/rpmbuild/SOURCES/imb.cc.patch
+ /usr/bin/patch -p0 --fuzz=0
can't find file to patch at input line 3
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------


After disabling patch, build fails since  the src directory is no longer present.

+ cd src
/var/tmp/rpm-tmp.X6CTfJ: line 36: cd: src: No such file or directory

I've stopped here - not sure what all else is problematic but this needs work. Also, looking at the upstream GitHub for this newer release I see at least one other issue with the updated build system that is introduced in 2019.x. In particular, the Makefile (https://github.com/intel/mpi-benchmarks/blob/master/Makefile) has hard-coded top-level targets that are calling make -j with parallel options directly within it's own Makefile. This is not going to behave as expected for standard packaging which can call the top-level with parallel options as well.
You probably want to get that addressed first so that users (and packagers) can call top-level build with parallel options. Typical mechanism for RPM is make %{?_smp_mflags}",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,950,2019-03-25T15:51:21Z,2019-05-15T14:04:57Z,2019-05-15T14:15:38Z,CLOSED,False,11,22,2,https://github.com/amblakem,Upgrade Intel MPI benchmarks to 2019.2,4,[],https://github.com/openhpc/ohpc/pull/950,https://github.com/amblakem,3,https://github.com/openhpc/ohpc/pull/950#issuecomment-485519152,"Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","Thank you for the feedback. I did build this locally, but it looks like I made a mistake in my process. I'm sorry for that. I'll address the issues that I can, and work with the upstream author regarding the hard-coded uses of make.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,950,2019-03-25T15:51:21Z,2019-05-15T14:04:57Z,2019-05-15T14:15:38Z,CLOSED,False,11,22,2,https://github.com/amblakem,Upgrade Intel MPI benchmarks to 2019.2,4,[],https://github.com/openhpc/ohpc/pull/950,https://github.com/amblakem,4,https://github.com/openhpc/ohpc/pull/950#issuecomment-485587134,"Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","Again, sorry about my mistake with the initial PR.  I see where my process broke down and I'll try not to do that again.  With this latest commit I've manually tested against a couple compiler\MPI variants.  I tried to use other packages for reference when doing these updates.
I don't have a good way for testing against all compiler\MPI combinations.  If you have any specific guidance on how to do that I can make sure that future submissions are more thoroughly tested.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,950,2019-03-25T15:51:21Z,2019-05-15T14:04:57Z,2019-05-15T14:15:38Z,CLOSED,False,11,22,2,https://github.com/amblakem,Upgrade Intel MPI benchmarks to 2019.2,4,[],https://github.com/openhpc/ohpc/pull/950,https://github.com/amblakem,5,https://github.com/openhpc/ohpc/pull/950#issuecomment-491860041,"Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","In particular, the Makefile (https://github.com/intel/mpi-benchmarks/blob/master/Makefile) has hard-coded top-level targets that are calling make -j with parallel options directly within it's own Makefile.

I apologize for taking so long to follow up on this point.  I'm told that this is fixed now, but this fix won't be available until the next IMB release later in the year.  If you'd like, we can close this PR and #946 and I can resubmit when this fix is in place.
edit I missed the obvious solution of including a patch with the fix instead of waiting for the upstream fix.  Sorry about that, I'll add that to this PR shortly.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,950,2019-03-25T15:51:21Z,2019-05-15T14:04:57Z,2019-05-15T14:15:38Z,CLOSED,False,11,22,2,https://github.com/amblakem,Upgrade Intel MPI benchmarks to 2019.2,4,[],https://github.com/openhpc/ohpc/pull/950,https://github.com/koomie,6,https://github.com/openhpc/ohpc/pull/950#issuecomment-492668995,"Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com",I'd suggest letting the upstream folks fix the release first as it will be beneficial for all potential users. I will close this PR and leave #946 open so we can revisit when there is a new release.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,950,2019-03-25T15:51:21Z,2019-05-15T14:04:57Z,2019-05-15T14:15:38Z,CLOSED,False,11,22,2,https://github.com/amblakem,Upgrade Intel MPI benchmarks to 2019.2,4,[],https://github.com/openhpc/ohpc/pull/950,https://github.com/amblakem,7,https://github.com/openhpc/ohpc/pull/950#issuecomment-492673291,"Should fix #946
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com",That does sound like the best path forward.  Thank you @koomie,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,952,2019-04-02T08:19:09Z,2019-04-05T13:59:52Z,2019-04-05T13:59:52Z,MERGED,True,8,2,1,https://github.com/adrianreber,singularity: fix file permissions,1,[],https://github.com/openhpc/ohpc/pull/952,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/952,"According to #951 OpenHPC's singularity package had wrong file
permissions for certain files. This adapts the file permissions as seen
in the upstream spec file.
Signed-off-by: Adrian Reber areber@redhat.com","According to #951 OpenHPC's singularity package had wrong file
permissions for certain files. This adapts the file permissions as seen
in the upstream spec file.
Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,954,2019-04-16T21:05:13Z,,2019-04-17T14:51:13Z,OPEN,False,38,6,2,https://github.com/ktpedre,First cut at adding plumbing for microarchitecture optimized builds.,3,[],https://github.com/openhpc/ohpc/pull/954,https://github.com/ktpedre,1,https://github.com/openhpc/ohpc/pull/954,"The goal is to make it easier for vendors and end-users to rebuild
OpenHPC packages with microarchitecture optimizations, if they choose
to do so.","The goal is to make it easier for vendors and end-users to rebuild
OpenHPC packages with microarchitecture optimizations, if they choose
to do so.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,956,2019-04-19T10:29:51Z,2019-04-23T14:33:34Z,2019-05-21T00:31:48Z,MERGED,True,17,9,2,https://github.com/boegel,EasyBuild (v3.9.1),2,"['component', 't:dev-tools', 'built', 'obs_ready']",https://github.com/openhpc/ohpc/pull/956,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/956,https://pypi.org/project/easybuild/3.9.0,https://pypi.org/project/easybuild/3.9.0,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,956,2019-04-19T10:29:51Z,2019-04-23T14:33:34Z,2019-05-21T00:31:48Z,MERGED,True,17,9,2,https://github.com/boegel,EasyBuild (v3.9.1),2,"['component', 't:dev-tools', 'built', 'obs_ready']",https://github.com/openhpc/ohpc/pull/956,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/956#issuecomment-485847078,https://pypi.org/project/easybuild/3.9.0,"Thanks @boegel, updated builds are now live in obs for next release (https://build.openhpc.community/package/show/OpenHPC:1.3:Update8:Factory/easybuild)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,956,2019-04-19T10:29:51Z,2019-04-23T14:33:34Z,2019-05-21T00:31:48Z,MERGED,True,17,9,2,https://github.com/boegel,EasyBuild (v3.9.1),2,"['component', 't:dev-tools', 'built', 'obs_ready']",https://github.com/openhpc/ohpc/pull/956,https://github.com/boegel,3,https://github.com/openhpc/ohpc/pull/956#issuecomment-485850818,https://pypi.org/project/easybuild/3.9.0,👍,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,956,2019-04-19T10:29:51Z,2019-04-23T14:33:34Z,2019-05-21T00:31:48Z,MERGED,True,17,9,2,https://github.com/boegel,EasyBuild (v3.9.1),2,"['component', 't:dev-tools', 'built', 'obs_ready']",https://github.com/openhpc/ohpc/pull/956,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/956#issuecomment-494196233,https://pypi.org/project/easybuild/3.9.0,v3.9.1 builds now live in OBS as a results of #998.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,986,2019-04-22T19:47:14Z,2019-05-26T13:18:36Z,2019-05-26T13:18:36Z,MERGED,True,1,2,1,https://github.com/cmcantalupo,Update geopm to version 1.0,1,[],https://github.com/openhpc/ohpc/pull/986,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/986,Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com,Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,986,2019-04-22T19:47:14Z,2019-05-26T13:18:36Z,2019-05-26T13:18:36Z,MERGED,True,1,2,1,https://github.com/cmcantalupo,Update geopm to version 1.0,1,[],https://github.com/openhpc/ohpc/pull/986,https://github.com/cmcantalupo,2,https://github.com/openhpc/ohpc/pull/986#issuecomment-485558560,Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com,#985,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,989,2019-04-25T09:53:17Z,2019-04-25T13:39:27Z,2019-04-25T13:39:27Z,MERGED,True,103,9,3,https://github.com/adrianreber,Update boost to 1.70.0,2,[],https://github.com/openhpc/ohpc/pull/989,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/989,"This includes a patch to pickup the default optimization flags from the OS to build boost.
It also changes the output during the compile to print the actual compiler invocation to see in the build logs which compiler flags have been used.
Fixes: #971","This includes a patch to pickup the default optimization flags from the OS to build boost.
It also changes the output during the compile to print the actual compiler invocation to see in the build logs which compiler flags have been used.
Fixes: #971",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,990,2019-04-29T22:52:35Z,2019-05-06T03:40:15Z,2019-05-06T14:55:43Z,MERGED,True,101,2485,14,https://github.com/j-ogas,add charliecloud 0.9.9,2,[],https://github.com/openhpc/ohpc/pull/990,https://github.com/j-ogas,1,https://github.com/openhpc/ohpc/pull/990,"Addresses #968.
This pull request introduces changes from 0.9.9 that reduce packaging complexity.
The goal is to collaborate with you folks to include relevant changes from our upstream version now and more closely in future.
A couple notes:

patches removed — 0.9.9 accounts for aarch64 and includes pre-built man pages in the source tarball (obtained from source0). In 0.9.10, the tarball will include pre-built html files. For the time being, we've been packaging a readme with the URL to the html documentation online.
added -test subpackage — we feel like the test suite is an important part of the charliecloud package. If possible, we'd like to include it going forward. The rpmlintrc has been updated accordingly.","Addresses #968.
This pull request introduces changes from 0.9.9 that reduce packaging complexity.
The goal is to collaborate with you folks to include relevant changes from our upstream version now and more closely in future.
A couple notes:

patches removed — 0.9.9 accounts for aarch64 and includes pre-built man pages in the source tarball (obtained from source0). In 0.9.10, the tarball will include pre-built html files. For the time being, we've been packaging a readme with the URL to the html documentation online.
added -test subpackage — we feel like the test suite is an important part of the charliecloud package. If possible, we'd like to include it going forward. The rpmlintrc has been updated accordingly.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,990,2019-04-29T22:52:35Z,2019-05-06T03:40:15Z,2019-05-06T14:55:43Z,MERGED,True,101,2485,14,https://github.com/j-ogas,add charliecloud 0.9.9,2,[],https://github.com/openhpc/ohpc/pull/990,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/990#issuecomment-487851358,"Addresses #968.
This pull request introduces changes from 0.9.9 that reduce packaging complexity.
The goal is to collaborate with you folks to include relevant changes from our upstream version now and more closely in future.
A couple notes:

patches removed — 0.9.9 accounts for aarch64 and includes pre-built man pages in the source tarball (obtained from source0). In 0.9.10, the tarball will include pre-built html files. For the time being, we've been packaging a readme with the URL to the html documentation online.
added -test subpackage — we feel like the test suite is an important part of the charliecloud package. If possible, we'd like to include it going forward. The rpmlintrc has been updated accordingly.","Please add a Signed-Off-By, amend your commit and force push to your branch.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,992,2019-05-06T06:15:40Z,2019-05-06T12:58:37Z,2019-05-06T12:58:37Z,MERGED,True,1,1,1,https://github.com/adrianreber,petsc: Upgrade petsc tp 3.11.1,1,[],https://github.com/openhpc/ohpc/pull/992,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/992,See #975,See #975,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,993,2019-05-07T07:38:53Z,2019-05-08T12:38:17Z,2019-05-08T12:38:17Z,MERGED,True,1,1,1,https://github.com/adrianreber,slepc: Upgrade slepc to 3.11.1,1,[],https://github.com/openhpc/ohpc/pull/993,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/993,See #976,See #976,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,994,2019-05-08T14:33:36Z,2019-05-08T15:31:09Z,2019-05-08T15:31:09Z,MERGED,True,1,1,1,https://github.com/utdsimmons,io-libs/hdf5: update to v1.10.5 (#962),1,[],https://github.com/openhpc/ohpc/pull/994,https://github.com/utdsimmons,1,https://github.com/openhpc/ohpc/pull/994,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,994,2019-05-08T14:33:36Z,2019-05-08T15:31:09Z,2019-05-08T15:31:09Z,MERGED,True,1,1,1,https://github.com/utdsimmons,io-libs/hdf5: update to v1.10.5 (#962),1,[],https://github.com/openhpc/ohpc/pull/994,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/994#issuecomment-490514424,,"Can you please add a Signed-Off-By statement, amend your commit and force push to your branch to pass the DCO check?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,994,2019-05-08T14:33:36Z,2019-05-08T15:31:09Z,2019-05-08T15:31:09Z,MERGED,True,1,1,1,https://github.com/utdsimmons,io-libs/hdf5: update to v1.10.5 (#962),1,[],https://github.com/openhpc/ohpc/pull/994,https://github.com/utdsimmons,3,https://github.com/openhpc/ohpc/pull/994#issuecomment-490527731,,Done; looks like everything is passing,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,995,2019-05-13T09:11:10Z,2019-05-15T14:11:48Z,2019-05-15T14:11:48Z,MERGED,True,20,124,1,https://github.com/adrianreber,plasma: Update to 18.11.1,1,[],https://github.com/openhpc/ohpc/pull/995,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/995,"This is real big update. The plasma build-system is completely different
now. This change includes running 'plasmatest' during %check to
verify that this newly build plasma does what it is supposed to do.","This is real big update. The plasma build-system is completely different
now. This change includes running 'plasmatest' during %check to
verify that this newly build plasma does what it is supposed to do.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,995,2019-05-13T09:11:10Z,2019-05-15T14:11:48Z,2019-05-15T14:11:48Z,MERGED,True,20,124,1,https://github.com/adrianreber,plasma: Update to 18.11.1,1,[],https://github.com/openhpc/ohpc/pull/995,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/995#issuecomment-491742772,"This is real big update. The plasma build-system is completely different
now. This change includes running 'plasmatest' during %check to
verify that this newly build plasma does what it is supposed to do.","@koomie: plasma has a completely different build system but it seems to work. Do we have some tests using plasma? To verify that this plasma still behaves as the old versions? I was not able to test against the Intel compiler.
Fixes: #987",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,995,2019-05-13T09:11:10Z,2019-05-15T14:11:48Z,2019-05-15T14:11:48Z,MERGED,True,20,124,1,https://github.com/adrianreber,plasma: Update to 18.11.1,1,[],https://github.com/openhpc/ohpc/pull/995,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/995#issuecomment-492671286,"This is real big update. The plasma build-system is completely different
now. This change includes running 'plasmatest' during %check to
verify that this newly build plasma does what it is supposed to do.","We do have some basic tests included in the integration test suite.   I will land this now and if all goes south in integration testing, we can revisit to decide whether to revert back or not.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/amblakem,1,https://github.com/openhpc/ohpc/pull/996,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/996#issuecomment-492116130,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution",As you are mentioning OpenHPC 2.0. I just saw that lua-posix and lua-filesystem can be installed via yum on RHEL8. Do those packages maybe also already exist for SLES 15 (or openSUSE)?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/amblakem,3,https://github.com/openhpc/ohpc/pull/996#issuecomment-492292234,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","Good point, thank you @adrianreber.  OpenSUSE 15.1 does have lua5[13]-lua{filesystem,posix} available but with a newer version than what's currently in OpenHPC.  If you think it would be better to leverage the distribution provided packages, we can close this and I can try and make that work instead.  There is also a lua-lmod package available to OpenSUSE 15.1 but I'm assuming that we'd still want the OpenHPC specific package?
I tried to build lmod-ohpc against the distribution provided lua5[13]-{filesystem,posix}, but this was unsuccessful.  From what I can tell, lua5[13]-luaposix doesn't actually provide /usr/lib64/lua/5.?/posix.so .  I can look into that a bit more if I should be leveraging the distribution packages instead of building from source.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/996#issuecomment-492294507,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","For #877 (trying to build OpenHPC on RHEL8) I was using -filesystem and -posix from the OS and it worked. If both target operating systems have the packages and if they work it does not seem to be necessary to provide OpenHPC rebuilds. Not sure what the right approach for OpenHPC is, just was wanted to mention it and I was curious.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/996#issuecomment-492670744,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","I believe we did have to provide this previously due to lack of functionality provided in SLES. It would be worth a little investigation to see if we could use distro lua variants on a newer OpenSUE 15.x release, if not we can continue to include necessary dependence in ohpc.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/koomie,6,https://github.com/openhpc/ohpc/pull/996#issuecomment-492674147,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","@amblakem, do you mind digging a little bit more to see if you can get lmod to build with openSUSE 15.x variant using distro lua packages?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/amblakem,7,https://github.com/openhpc/ohpc/pull/996#issuecomment-492675607,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","Not at all, I'd be happy to.  I'll report back as soon as I have more information.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/koomie,8,https://github.com/openhpc/ohpc/pull/996#issuecomment-492676398,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","Thanks - I'd say don't go crazy if it doesn't seem doable; but if can be done, I'd like to not have to carry around the extra lua dependencies in 2.x series.",True,{'THUMBS_UP': ['https://github.com/adrianreber']}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/amblakem,9,https://github.com/openhpc/ohpc/pull/996#issuecomment-492750980,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","I was able to use the distribution packages and build lmod-ohpc on OpenSUSE 15.1.  So as not to conflict with what @adrianreber has done, I used his work from #877 to create a spec file for lmod-ohpc that also works with OpenSUSE [1].  With this, I was able to build and install lmod-ohpc and use module to load gnu8 and a few libraries.  I also confirmed that this spec file still works on SLE12.  Through my basic testing, everything looks good.
If you'd like me to make a PR against @adrianreber's branch or something, please let me know. I'm not sure the best way to submit these changes.
One thing to note, the lua5?-lua{filesystem,posix} packages appear to be in OpenSUSE 15.1 but not in SLE15.1.  I'm not super familiar with the new relationship between OpenSUSE and SLE, so the packages available to OpenSUSE 15.1 may be available to SLE15.1.   The SUSE software page[2] shows that SLE15 distribution has an ""experimental"" versions of at least lua53-luaposix but I did not try to build against this.
[1]  https://gist.github.com/amblakem/c68341219c9c2de0c21258161b412de5
[2] https://software.opensuse.org/package/lua53-luaposix",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/adrianreber,10,https://github.com/openhpc/ohpc/pull/996#issuecomment-492799096,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","@amblakem : about #877 , we have no decision yet when we want to merge this. From my point of view, you could just grab my (lua, lmod) changes and include them in your PR. As your PR changes much less it is much easier to merge than my big change.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/amblakem,11,https://github.com/openhpc/ohpc/pull/996#issuecomment-492821083,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution",Thanks @adrianreber.  I went ahead and removed my previous update that built the lua modules from source.  The PR attached now updates lmod to the latest version and uses the distribution provided lua filesystem and posix modules for OpenSUSE 15.1 and RHEL8.  I tested this on OpenSUSE 15.1 and SLE12 but don't have access to RHEL8 at the moment.  I'll make sure to set up a RHEL8 environment so that I can test this (and future) PRs that target OpenHPC 2.0.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,996,2019-05-13T21:31:59Z,2019-06-19T21:21:11Z,2019-06-19T21:21:53Z,CLOSED,False,46,14,1,https://github.com/amblakem,lmod: Support OpenSUSE 15.1 and RHEL 8,1,[],https://github.com/openhpc/ohpc/pull/996,https://github.com/amblakem,12,https://github.com/openhpc/ohpc/pull/996#issuecomment-503751262,"Hi,
I understand that OpenSUSE 15.1 support is targeted for OpenHPC 2.0 and as such the following packages may need to be updated, but I'm submitting this PR against the current versions to document some of the changes that may be required.  I completely understand if this PR is not merged in favor of an alternate approach.  My initial testing shows that once the changes below are committed and lmod-ohpc is installed, about 40% of the OpenHPC packages can be built against OpenSUSE 15.1 without modification.  That number increases to about 50% when packages that rely on /etc/SuSE-release[1] are fixed, but I don't yet have a PR ready for those changes.
I've tested this PR on the current beta OpenSUSE 15.1, SLE12.4, and CentOS 7.
[1] /etc/SuSE-release was deprecated, which breaks packages that depend on that file existing for detecting a SUSE distribution","Now that OpenHPC 1.3.8 and OpenSUSE 15.1 are officially released, I think there may be a better approach to updating LMOD than what I did in this PR.  I'm going to go ahead and close out this in favor of work that @jcsiadal is doing, which he should be submitting soon.
Thank you @adrianreber and @koomie for your guidance.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,997,2019-05-15T14:24:11Z,2019-05-22T20:46:14Z,2019-05-22T20:46:14Z,MERGED,True,7,2,1,https://github.com/adrianreber,scorep: Update to 5.0,1,[],https://github.com/openhpc/ohpc/pull/997,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/997,Use base OS compiler optimization flags.,Use base OS compiler optimization flags.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,998,2019-05-20T18:46:39Z,2019-05-20T19:30:02Z,2019-05-20T20:49:52Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild 3.9.1,1,[],https://github.com/openhpc/ohpc/pull/998,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/998,https://pypi.org/project/easybuild,https://pypi.org/project/easybuild,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1001,2019-06-09T09:44:40Z,2019-06-09T15:40:59Z,2019-06-09T15:40:59Z,MERGED,True,13,4,2,https://github.com/boegel,Easybuild 3.9.2,2,[],https://github.com/openhpc/ohpc/pull/1001,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1001,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1003,2019-06-10T16:06:29Z,2019-06-10T16:19:50Z,2019-06-10T21:20:29Z,MERGED,True,4,5,3,https://github.com/dianarg,Fix GEOPM tests,2,[],https://github.com/openhpc/ohpc/pull/1003,https://github.com/dianarg,1,https://github.com/openhpc/ohpc/pull/1003,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1003,2019-06-10T16:06:29Z,2019-06-10T16:19:50Z,2019-06-10T21:20:29Z,MERGED,True,4,5,3,https://github.com/dianarg,Fix GEOPM tests,2,[],https://github.com/openhpc/ohpc/pull/1003,https://github.com/cmcantalupo,2,https://github.com/openhpc/ohpc/pull/1003#issuecomment-500480445,,Thanks @crbaird!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1003,2019-06-10T16:06:29Z,2019-06-10T16:19:50Z,2019-06-10T21:20:29Z,MERGED,True,4,5,3,https://github.com/dianarg,Fix GEOPM tests,2,[],https://github.com/openhpc/ohpc/pull/1003,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/1003#issuecomment-500507050,,"Has GEOPM_CTL=pthread been tested and run successfully with all of the MPI variants? (openmpi, mpich, mvapich2, impi).  It doesn't seem to cooperate with much in our CI environment.
GEOPM_CTL=process seems to at least work with some I tested by hand so will revert to that.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1003,2019-06-10T16:06:29Z,2019-06-10T16:19:50Z,2019-06-10T21:20:29Z,MERGED,True,4,5,3,https://github.com/dianarg,Fix GEOPM tests,2,[],https://github.com/openhpc/ohpc/pull/1003,https://github.com/cmcantalupo,4,https://github.com/openhpc/ohpc/pull/1003#issuecomment-500599361,,"Didn't see this come in right away, but thanks for switching it back to process mode from pthread mode.  I think this is better tested in the context of the OpenHPC test environment, and that seems to reflect your experience.  The OpenHPC tests don't use geopmlaunch in favor or supporting the prun wrapper and modifying the environment in the test scripts.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1004,2019-06-12T04:13:59Z,2019-06-12T04:21:35Z,2019-06-12T04:21:35Z,MERGED,True,1,1,1,https://github.com/cmcantalupo,"Update lscpu call to use ""geopmread --cache"" in GEOPM tests",1,[],https://github.com/openhpc/ohpc/pull/1004,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/1004,"Name of lscpu cache file has changed from ""/tmp/geopm-lscpu.log"" to
""/tmp/geopm-topo-cache"".

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com","Name of lscpu cache file has changed from ""/tmp/geopm-lscpu.log"" to
""/tmp/geopm-topo-cache"".

Signed-off-by: Christopher M. Cantalupo christopher.m.cantalupo@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1005,2019-06-21T23:07:38Z,2019-08-14T01:42:29Z,2019-11-18T21:32:17Z,CLOSED,False,92,182,8,https://github.com/jcsiadal,Lmod update for OpenSUSE 15,2,[],https://github.com/openhpc/ohpc/pull/1005,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1005,"This updates the Lmod component and its required distros to add OpenSUSE 15 support. I included the preliminary changes for RHEL 8.
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Dropped conditionals for SLES before SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Add support for Lua 5.3.

Basic testing done on SLES12SP4, OpenSUSE 15.1, and CentOS 7-1810.
I got rid of conditional conflicts. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
I didn't update Lmod source. It gets updated every 1 or 2 weeks, and occasionally several times in a day. Someone more savvy with its development cycle should pick the right target version.","This updates the Lmod component and its required distros to add OpenSUSE 15 support. I included the preliminary changes for RHEL 8.
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Dropped conditionals for SLES before SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Add support for Lua 5.3.

Basic testing done on SLES12SP4, OpenSUSE 15.1, and CentOS 7-1810.
I got rid of conditional conflicts. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
I didn't update Lmod source. It gets updated every 1 or 2 weeks, and occasionally several times in a day. Someone more savvy with its development cycle should pick the right target version.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1005,2019-06-21T23:07:38Z,2019-08-14T01:42:29Z,2019-11-18T21:32:17Z,CLOSED,False,92,182,8,https://github.com/jcsiadal,Lmod update for OpenSUSE 15,2,[],https://github.com/openhpc/ohpc/pull/1005,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1005#issuecomment-504640538,"This updates the Lmod component and its required distros to add OpenSUSE 15 support. I included the preliminary changes for RHEL 8.
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Dropped conditionals for SLES before SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Add support for Lua 5.3.

Basic testing done on SLES12SP4, OpenSUSE 15.1, and CentOS 7-1810.
I got rid of conditional conflicts. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
I didn't update Lmod source. It gets updated every 1 or 2 weeks, and occasionally several times in a day. Someone more savvy with its development cycle should pick the right target version.","You found a bug in out travis scripts, but thankfully @amblakem already fixed it in #1006. Once #1006 is merged it would be good to rebase this PR.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1005,2019-06-21T23:07:38Z,2019-08-14T01:42:29Z,2019-11-18T21:32:17Z,CLOSED,False,92,182,8,https://github.com/jcsiadal,Lmod update for OpenSUSE 15,2,[],https://github.com/openhpc/ohpc/pull/1005,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1005#issuecomment-505089835,"This updates the Lmod component and its required distros to add OpenSUSE 15 support. I included the preliminary changes for RHEL 8.
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Dropped conditionals for SLES before SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Add support for Lua 5.3.

Basic testing done on SLES12SP4, OpenSUSE 15.1, and CentOS 7-1810.
I got rid of conditional conflicts. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
I didn't update Lmod source. It gets updated every 1 or 2 weeks, and occasionally several times in a day. Someone more savvy with its development cycle should pick the right target version.",Rebased. I also fixed a mistake in not checking luaver before setting it. Best practice is to permit override if using rpmbuild manually.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1005,2019-06-21T23:07:38Z,2019-08-14T01:42:29Z,2019-11-18T21:32:17Z,CLOSED,False,92,182,8,https://github.com/jcsiadal,Lmod update for OpenSUSE 15,2,[],https://github.com/openhpc/ohpc/pull/1005,https://github.com/jcsiadal,4,https://github.com/openhpc/ohpc/pull/1005#issuecomment-520678371,"This updates the Lmod component and its required distros to add OpenSUSE 15 support. I included the preliminary changes for RHEL 8.
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Dropped conditionals for SLES before SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Add support for Lua 5.3.

Basic testing done on SLES12SP4, OpenSUSE 15.1, and CentOS 7-1810.
I got rid of conditional conflicts. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
I didn't update Lmod source. It gets updated every 1 or 2 weeks, and occasionally several times in a day. Someone more savvy with its development cycle should pick the right target version.","Additional changes made to OHPC_macros. Updates Python to 3.6 for RHEL7, RHEL8, and SLE15. Also includes changes from Adrian's update for RHEL8.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1005,2019-06-21T23:07:38Z,2019-08-14T01:42:29Z,2019-11-18T21:32:17Z,CLOSED,False,92,182,8,https://github.com/jcsiadal,Lmod update for OpenSUSE 15,2,[],https://github.com/openhpc/ohpc/pull/1005,https://github.com/jcsiadal,5,https://github.com/openhpc/ohpc/pull/1005#issuecomment-521070228,"This updates the Lmod component and its required distros to add OpenSUSE 15 support. I included the preliminary changes for RHEL 8.
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Dropped conditionals for SLES before SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Add support for Lua 5.3.

Basic testing done on SLES12SP4, OpenSUSE 15.1, and CentOS 7-1810.
I got rid of conditional conflicts. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
I didn't update Lmod source. It gets updated every 1 or 2 weeks, and occasionally several times in a day. Someone more savvy with its development cycle should pick the right target version.",Closing. Moved all changes to PR1023.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1006,2019-06-22T00:17:31Z,2019-06-23T15:17:07Z,2019-06-23T15:17:07Z,MERGED,True,1,1,1,https://github.com/amblakem,Do not check that deleted spec files conform to project guidelines,1,[],https://github.com/openhpc/ohpc/pull/1006,https://github.com/amblakem,1,https://github.com/openhpc/ohpc/pull/1006,"I noticed with #1005 that Travis was attempting to check a deleted spec file to ensure that it had the required spec file components.  I don't think this is the desired behavior.  This PR should filter out deleted items from being checked if the version of git being used is less than 1.8.5.  From what I can tell, travis is using a CentOS 7 docker image which is git version 1.8.3.
$ git --version
git version 1.8.3.1
$ grep filter tests/travis/check_spec.py
command = ['git', 'diff', '--diff-filter=ACMRTUXB', '--name-only', sys.argv[1]]
$ tests/travis/check_spec.py 90ebc7959bb698545959a2e1e4c0f8e21211d197...36214738481f5189a665d66e699040d1e2ae6ef7
About to run command git diff --diff-filter=ACMRTUXB --name-only 90ebc7959bb698545959a2e1e4c0f8e21211d197...36214738481f5189a665d66e699040d1e2ae6ef7
Checking that (^Source42.*$|^Source.*OHPC_macros$|^%changelog.*|^DocDir.*|^BuildRoot.*|^%defattr\(-,root,root\).*|^.*%global.*PROJ_DELIM.*$) does not exist

--> Scanning spec file components/admin/lmod/SPECS/lmod.spec

--> Scanning spec file components/distro-packages/lua-filesystem/SPECS/lua-filesystem.spec

--> Scanning spec file components/distro-packages/lua-posix/SPECS/luaposix.spec

No consistency errors found. Exiting.
$ cat /etc/centos-release
CentOS Linux release 7.6.1810 (Core)

edit according to #870 this issue also exists when renaming spec files.  From my testing, this PR fixes that issue as well.","I noticed with #1005 that Travis was attempting to check a deleted spec file to ensure that it had the required spec file components.  I don't think this is the desired behavior.  This PR should filter out deleted items from being checked if the version of git being used is less than 1.8.5.  From what I can tell, travis is using a CentOS 7 docker image which is git version 1.8.3.
$ git --version
git version 1.8.3.1
$ grep filter tests/travis/check_spec.py
command = ['git', 'diff', '--diff-filter=ACMRTUXB', '--name-only', sys.argv[1]]
$ tests/travis/check_spec.py 90ebc7959bb698545959a2e1e4c0f8e21211d197...36214738481f5189a665d66e699040d1e2ae6ef7
About to run command git diff --diff-filter=ACMRTUXB --name-only 90ebc7959bb698545959a2e1e4c0f8e21211d197...36214738481f5189a665d66e699040d1e2ae6ef7
Checking that (^Source42.*$|^Source.*OHPC_macros$|^%changelog.*|^DocDir.*|^BuildRoot.*|^%defattr\(-,root,root\).*|^.*%global.*PROJ_DELIM.*$) does not exist

--> Scanning spec file components/admin/lmod/SPECS/lmod.spec

--> Scanning spec file components/distro-packages/lua-filesystem/SPECS/lua-filesystem.spec

--> Scanning spec file components/distro-packages/lua-posix/SPECS/luaposix.spec

No consistency errors found. Exiting.
$ cat /etc/centos-release
CentOS Linux release 7.6.1810 (Core)

edit according to #870 this issue also exists when renaming spec files.  From my testing, this PR fixes that issue as well.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1006,2019-06-22T00:17:31Z,2019-06-23T15:17:07Z,2019-06-23T15:17:07Z,MERGED,True,1,1,1,https://github.com/amblakem,Do not check that deleted spec files conform to project guidelines,1,[],https://github.com/openhpc/ohpc/pull/1006,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1006#issuecomment-504640457,"I noticed with #1005 that Travis was attempting to check a deleted spec file to ensure that it had the required spec file components.  I don't think this is the desired behavior.  This PR should filter out deleted items from being checked if the version of git being used is less than 1.8.5.  From what I can tell, travis is using a CentOS 7 docker image which is git version 1.8.3.
$ git --version
git version 1.8.3.1
$ grep filter tests/travis/check_spec.py
command = ['git', 'diff', '--diff-filter=ACMRTUXB', '--name-only', sys.argv[1]]
$ tests/travis/check_spec.py 90ebc7959bb698545959a2e1e4c0f8e21211d197...36214738481f5189a665d66e699040d1e2ae6ef7
About to run command git diff --diff-filter=ACMRTUXB --name-only 90ebc7959bb698545959a2e1e4c0f8e21211d197...36214738481f5189a665d66e699040d1e2ae6ef7
Checking that (^Source42.*$|^Source.*OHPC_macros$|^%changelog.*|^DocDir.*|^BuildRoot.*|^%defattr\(-,root,root\).*|^.*%global.*PROJ_DELIM.*$) does not exist

--> Scanning spec file components/admin/lmod/SPECS/lmod.spec

--> Scanning spec file components/distro-packages/lua-filesystem/SPECS/lua-filesystem.spec

--> Scanning spec file components/distro-packages/lua-posix/SPECS/luaposix.spec

No consistency errors found. Exiting.
$ cat /etc/centos-release
CentOS Linux release 7.6.1810 (Core)

edit according to #870 this issue also exists when renaming spec files.  From my testing, this PR fixes that issue as well.",Thanks for the quick fix!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1007,2019-06-24T23:54:59Z,2019-08-14T01:44:15Z,2019-11-18T21:31:50Z,CLOSED,False,6,3,4,https://github.com/jcsiadal,OpenSUSE 15 support for openhpc-base,2,[],https://github.com/openhpc/ohpc/pull/1007,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1007,"Update to build and install all of the packages in the openhpc-base metafile (examples, losf, pdsh, conman, cmake), and their build and installation dependencies. Lmod was installed using RPM packages created in #1005.
Updates include a few cosmetic changes and a required change to pdsh.
When built independently on OpenSUSE 15.1, pdsh is defaulting to lib64. Not known if this is an issue under OBS; however, the specfile explicitly uses lib, so it makes sense to force the source configurator to also use lib.","Update to build and install all of the packages in the openhpc-base metafile (examples, losf, pdsh, conman, cmake), and their build and installation dependencies. Lmod was installed using RPM packages created in #1005.
Updates include a few cosmetic changes and a required change to pdsh.
When built independently on OpenSUSE 15.1, pdsh is defaulting to lib64. Not known if this is an issue under OBS; however, the specfile explicitly uses lib, so it makes sense to force the source configurator to also use lib.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1007,2019-06-24T23:54:59Z,2019-08-14T01:44:15Z,2019-11-18T21:31:50Z,CLOSED,False,6,3,4,https://github.com/jcsiadal,OpenSUSE 15 support for openhpc-base,2,[],https://github.com/openhpc/ohpc/pull/1007,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1007#issuecomment-521070544,"Update to build and install all of the packages in the openhpc-base metafile (examples, losf, pdsh, conman, cmake), and their build and installation dependencies. Lmod was installed using RPM packages created in #1005.
Updates include a few cosmetic changes and a required change to pdsh.
When built independently on OpenSUSE 15.1, pdsh is defaulting to lib64. Not known if this is an issue under OBS; however, the specfile explicitly uses lib, so it makes sense to force the source configurator to also use lib.",Moved all commits to PR1023.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1008,2019-06-27T17:59:50Z,2019-08-29T18:59:52Z,2019-08-29T18:59:52Z,CLOSED,False,1,1,1,https://github.com/bgeltz,Update msr-safe to version 1.3.0,1,[],https://github.com/openhpc/ohpc/pull/1008,https://github.com/bgeltz,1,https://github.com/openhpc/ohpc/pull/1008,"The spank plugin that ships with the previous version (v1.2.1) is broken.
Signed-off-by: Brad Geltz brad.geltz@intel.com","The spank plugin that ships with the previous version (v1.2.1) is broken.
Signed-off-by: Brad Geltz brad.geltz@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1008,2019-06-27T17:59:50Z,2019-08-29T18:59:52Z,2019-08-29T18:59:52Z,CLOSED,False,1,1,1,https://github.com/bgeltz,Update msr-safe to version 1.3.0,1,[],https://github.com/openhpc/ohpc/pull/1008,https://github.com/cmcantalupo,2,https://github.com/openhpc/ohpc/pull/1008#issuecomment-509440806,"The spank plugin that ships with the previous version (v1.2.1) is broken.
Signed-off-by: Brad Geltz brad.geltz@intel.com","@koomie & @crbaird & @slabasan:
Sorry for loosing track of the latest msr-safe version when I requested that the 1.3.8 OpenHPC release include msr-safe 1.2.1.   The pull request for OpenHPC to upgrate to msr-safe 1.2.1 had been open for a long time, but I mistakenly thought it was reflecting the latest msr-safe version.  The msr-safe 1.3.0 release fixes critical bugs in the msrsave command line tool and the spank plugin for save/restore.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1008,2019-06-27T17:59:50Z,2019-08-29T18:59:52Z,2019-08-29T18:59:52Z,CLOSED,False,1,1,1,https://github.com/bgeltz,Update msr-safe to version 1.3.0,1,[],https://github.com/openhpc/ohpc/pull/1008,https://github.com/bgeltz,3,https://github.com/openhpc/ohpc/pull/1008#issuecomment-526318088,"The spank plugin that ships with the previous version (v1.2.1) is broken.
Signed-off-by: Brad Geltz brad.geltz@intel.com",Closing in favor of #1025,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1010,2019-07-01T21:33:34Z,2020-01-13T21:12:30Z,2020-01-13T21:15:58Z,CLOSED,False,116,332,12,https://github.com/jcsiadal,Update Warewulf to development branch (3.9),2,[],https://github.com/openhpc/ohpc/pull/1010,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1010,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Not certain what is the OpenHPC guideline for pulling a component development branch into the OpenHPC development branch. I thought it would be good to make the update available and start the discussion. Development and testing for OpenSUSE 15 needs the ability to build a working cluster and this support exists in the current WW development branch. As WW 3.9 should be out  before OHPC 2.0, this made more sense than backporting.
Changes:

All 5 of the spec files were updated. For lack of a better standard, version was set to the target version of 3.9, with the release set to 0.1 to denote pre-production. The previous svn release string generator was used inconsistently, but could be updated to use git.
As a temporary fix, specfiles source the development branch. The misc/get-source.sh successfully prepares the source.
Patch files updated to retain functionality. Upstreamed patches removed and patch files reordered if needed.
Dropped any conditionals used for < CentOS 7 or SLES 12SP3.
Builds tested on OpenSUSE 15.1 and CentOS 7.6.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Not certain what is the OpenHPC guideline for pulling a component development branch into the OpenHPC development branch. I thought it would be good to make the update available and start the discussion. Development and testing for OpenSUSE 15 needs the ability to build a working cluster and this support exists in the current WW development branch. As WW 3.9 should be out  before OHPC 2.0, this made more sense than backporting.
Changes:

All 5 of the spec files were updated. For lack of a better standard, version was set to the target version of 3.9, with the release set to 0.1 to denote pre-production. The previous svn release string generator was used inconsistently, but could be updated to use git.
As a temporary fix, specfiles source the development branch. The misc/get-source.sh successfully prepares the source.
Patch files updated to retain functionality. Upstreamed patches removed and patch files reordered if needed.
Dropped any conditionals used for < CentOS 7 or SLES 12SP3.
Builds tested on OpenSUSE 15.1 and CentOS 7.6.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1010,2019-07-01T21:33:34Z,2020-01-13T21:12:30Z,2020-01-13T21:15:58Z,CLOSED,False,116,332,12,https://github.com/jcsiadal,Update Warewulf to development branch (3.9),2,[],https://github.com/openhpc/ohpc/pull/1010,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1010#issuecomment-573872927,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Not certain what is the OpenHPC guideline for pulling a component development branch into the OpenHPC development branch. I thought it would be good to make the update available and start the discussion. Development and testing for OpenSUSE 15 needs the ability to build a working cluster and this support exists in the current WW development branch. As WW 3.9 should be out  before OHPC 2.0, this made more sense than backporting.
Changes:

All 5 of the spec files were updated. For lack of a better standard, version was set to the target version of 3.9, with the release set to 0.1 to denote pre-production. The previous svn release string generator was used inconsistently, but could be updated to use git.
As a temporary fix, specfiles source the development branch. The misc/get-source.sh successfully prepares the source.
Patch files updated to retain functionality. Upstreamed patches removed and patch files reordered if needed.
Dropped any conditionals used for < CentOS 7 or SLES 12SP3.
Builds tested on OpenSUSE 15.1 and CentOS 7.6.",Really stale PR. Will be making more updates and resubmitting soon.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1011,2019-07-03T18:29:18Z,2019-08-14T01:45:13Z,2019-11-18T21:31:56Z,CLOSED,False,3,1,3,https://github.com/jcsiadal,MPI specfile updates to support OpenSUSE Leap 15,3,[],https://github.com/openhpc/ohpc/pull/1011,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1011,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
I'm hitting this issue with several specfiles. Autoconf treats OpenSUSE 15 as a multiarch OS and defaults %libdir to /lib64. OpenHPC specfiles hardcode [PREFIX]/lib in scripts and %files, so the simpler fix is to force ./configure to use the desired directory.
With the OpenMPI build and resulting RPMs working, this allows about a dozen other current packages to build correctly under OpenSUSE Leap 15.1.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
I'm hitting this issue with several specfiles. Autoconf treats OpenSUSE 15 as a multiarch OS and defaults %libdir to /lib64. OpenHPC specfiles hardcode [PREFIX]/lib in scripts and %files, so the simpler fix is to force ./configure to use the desired directory.
With the OpenMPI build and resulting RPMs working, this allows about a dozen other current packages to build correctly under OpenSUSE Leap 15.1.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1011,2019-07-03T18:29:18Z,2019-08-14T01:45:13Z,2019-11-18T21:31:56Z,CLOSED,False,3,1,3,https://github.com/jcsiadal,MPI specfile updates to support OpenSUSE Leap 15,3,[],https://github.com/openhpc/ohpc/pull/1011,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1011#issuecomment-516185471,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
I'm hitting this issue with several specfiles. Autoconf treats OpenSUSE 15 as a multiarch OS and defaults %libdir to /lib64. OpenHPC specfiles hardcode [PREFIX]/lib in scripts and %files, so the simpler fix is to force ./configure to use the desired directory.
With the OpenMPI build and resulting RPMs working, this allows about a dozen other current packages to build correctly under OpenSUSE Leap 15.1.",Added mpich and mvapich. Same fix needed for those specfiles.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1011,2019-07-03T18:29:18Z,2019-08-14T01:45:13Z,2019-11-18T21:31:56Z,CLOSED,False,3,1,3,https://github.com/jcsiadal,MPI specfile updates to support OpenSUSE Leap 15,3,[],https://github.com/openhpc/ohpc/pull/1011,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1011#issuecomment-521070685,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
I'm hitting this issue with several specfiles. Autoconf treats OpenSUSE 15 as a multiarch OS and defaults %libdir to /lib64. OpenHPC specfiles hardcode [PREFIX]/lib in scripts and %files, so the simpler fix is to force ./configure to use the desired directory.
With the OpenMPI build and resulting RPMs working, this allows about a dozen other current packages to build correctly under OpenSUSE Leap 15.1.",Merged all commits into PR#1023.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1012,2019-07-08T15:58:32Z,2019-10-17T22:38:30Z,2019-10-17T22:38:30Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild 3.9.4,2,[],https://github.com/openhpc/ohpc/pull/1012,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1012,https://pypi.org/project/easybuild/3.9.3/,https://pypi.org/project/easybuild/3.9.3/,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1012,2019-07-08T15:58:32Z,2019-10-17T22:38:30Z,2019-10-17T22:38:30Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild 3.9.4,2,[],https://github.com/openhpc/ohpc/pull/1012,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/1012#issuecomment-533623472,https://pypi.org/project/easybuild/3.9.3/,Now updated to EasyBuild v3.9.4 (last and final EasyBuild 3.x release),True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1018,2019-07-30T15:22:07Z,2019-10-17T22:57:18Z,2019-10-17T22:57:18Z,CLOSED,False,1,1,1,https://github.com/amblakem,Use the proper path for the nologin shell,1,[],https://github.com/openhpc/ohpc/pull/1018,https://github.com/amblakem,1,https://github.com/openhpc/ohpc/pull/1018,"Should fix #1017.
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","Should fix #1017.
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1018,2019-07-30T15:22:07Z,2019-10-17T22:57:18Z,2019-10-17T22:57:18Z,CLOSED,False,1,1,1,https://github.com/amblakem,Use the proper path for the nologin shell,1,[],https://github.com/openhpc/ohpc/pull/1018,https://github.com/amblakem,2,https://github.com/openhpc/ohpc/pull/1018#issuecomment-516525700,"Should fix #1017.
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","Alongside the slurm.spec file is a spec.latest.patch file which also has this issue[1].  This patch appears to be out of sync as it's referencing SLURM 17.11.5.  I can't find references to where this patch is used, can it be deleted?
[1] https://github.com/openhpc/ohpc/blob/obs/OpenHPC_1.3.8_Factory/components/rms/slurm/SPECS/spec.latest.patch#L533",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1018,2019-07-30T15:22:07Z,2019-10-17T22:57:18Z,2019-10-17T22:57:18Z,CLOSED,False,1,1,1,https://github.com/amblakem,Use the proper path for the nologin shell,1,[],https://github.com/openhpc/ohpc/pull/1018,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/1018#issuecomment-521377657,"Should fix #1017.
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","Alongside the slurm.spec file is a spec.latest.patch file which also has this issue[1]. This patch appears to be out of sync as it's referencing SLURM 17.11.5. I can't find references to where this patch is used, can it be deleted?
[1] https://github.com/openhpc/ohpc/blob/obs/OpenHPC_1.3.8_Factory/components/rms/slurm/SPECS/spec.latest.patch#L533

This patch isn't used formally in the build process, but helps us keep track of changes we have to apply against the upstream .spec file. I've updated it to reflect changes against v18.08.8 and I've landed your 6ed9982 patch on the ohpc 1.3.8.1 branch.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1018,2019-07-30T15:22:07Z,2019-10-17T22:57:18Z,2019-10-17T22:57:18Z,CLOSED,False,1,1,1,https://github.com/amblakem,Use the proper path for the nologin shell,1,[],https://github.com/openhpc/ohpc/pull/1018,https://github.com/amblakem,4,https://github.com/openhpc/ohpc/pull/1018#issuecomment-521396249,"Should fix #1017.
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com","Gotcha, that makes sense.  This is good information, thank you for explaining @koomie.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1018,2019-07-30T15:22:07Z,2019-10-17T22:57:18Z,2019-10-17T22:57:18Z,CLOSED,False,1,1,1,https://github.com/amblakem,Use the proper path for the nologin shell,1,[],https://github.com/openhpc/ohpc/pull/1018,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/1018#issuecomment-543397027,"Should fix #1017.
Signed-off-by: Aaron Blakeman aaron.blakeman@intel.com",This was landed in 7d240cd for v1.3.8.1 and carried forward.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1019,2019-07-30T21:58:29Z,2019-08-14T20:05:49Z,2019-11-18T21:32:13Z,MERGED,True,4,4,4,https://github.com/jcsiadal,Update post-build-check ignore macro,1,[],https://github.com/openhpc/ohpc/pull/1019,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1019,"Most of the other specfiles already implement the BuildIgnores comment. The remaining four use an invalid RPM syntax, so these packages cannot be compiled outside of OBS without correcting them first.","Most of the other specfiles already implement the BuildIgnores comment. The remaining four use an invalid RPM syntax, so these packages cannot be compiled outside of OBS without correcting them first.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1020,2019-08-01T05:30:34Z,2019-08-14T17:34:49Z,2019-08-14T17:37:55Z,MERGED,True,65,0,1,https://github.com/mrmhodak,Add node name patch file for mpich,2,[],https://github.com/openhpc/ohpc/pull/1020,https://github.com/mrmhodak,1,https://github.com/openhpc/ohpc/pull/1020,Adding patch file fixing mpich issue where jobs fail if some nodes do not end with a number. From pmodels/mpich#3947,Adding patch file fixing mpich issue where jobs fail if some nodes do not end with a number. From pmodels/mpich#3947,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1020,2019-08-01T05:30:34Z,2019-08-14T17:34:49Z,2019-08-14T17:37:55Z,MERGED,True,65,0,1,https://github.com/mrmhodak,Add node name patch file for mpich,2,[],https://github.com/openhpc/ohpc/pull/1020,https://github.com/mrmhodak,2,https://github.com/openhpc/ohpc/pull/1020#issuecomment-517522650,Adding patch file fixing mpich issue where jobs fail if some nodes do not end with a number. From pmodels/mpich#3947,"Lets wait on merging, this may not be the right patch .",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1020,2019-08-01T05:30:34Z,2019-08-14T17:34:49Z,2019-08-14T17:37:55Z,MERGED,True,65,0,1,https://github.com/mrmhodak,Add node name patch file for mpich,2,[],https://github.com/openhpc/ohpc/pull/1020,https://github.com/mrmhodak,3,https://github.com/openhpc/ohpc/pull/1020#issuecomment-518092064,Adding patch file fixing mpich issue where jobs fail if some nodes do not end with a number. From pmodels/mpich#3947,"After more testing, it turned out that the original patch was not correct. mpich has provided a new patch  - again pmodels/mpich#3947, which works correctly. I have updated the file and now this pull request is ready to be merged.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1021,2019-08-01T05:47:31Z,2019-08-14T17:36:23Z,2019-08-14T17:56:05Z,MERGED,True,2,0,1,https://github.com/mrmhodak,Apply patch to fix node name issue in mpich,1,[],https://github.com/openhpc/ohpc/pull/1021,https://github.com/mrmhodak,1,https://github.com/openhpc/ohpc/pull/1021,Applies patch from #1020,Applies patch from #1020,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1021,2019-08-01T05:47:31Z,2019-08-14T17:36:23Z,2019-08-14T17:56:05Z,MERGED,True,2,0,1,https://github.com/mrmhodak,Apply patch to fix node name issue in mpich,1,[],https://github.com/openhpc/ohpc/pull/1021,https://github.com/mrmhodak,2,https://github.com/openhpc/ohpc/pull/1021#issuecomment-517522503,Applies patch from #1020,"Lets wait on merging, this may not be the right patch .",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1021,2019-08-01T05:47:31Z,2019-08-14T17:36:23Z,2019-08-14T17:56:05Z,MERGED,True,2,0,1,https://github.com/mrmhodak,Apply patch to fix node name issue in mpich,1,[],https://github.com/openhpc/ohpc/pull/1021,https://github.com/mrmhodak,3,https://github.com/openhpc/ohpc/pull/1021#issuecomment-518093507,Applies patch from #1020,"The patch has been updated in #1020, this pull request is ready to be merged",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1021,2019-08-01T05:47:31Z,2019-08-14T17:36:23Z,2019-08-14T17:56:05Z,MERGED,True,2,0,1,https://github.com/mrmhodak,Apply patch to fix node name issue in mpich,1,[],https://github.com/openhpc/ohpc/pull/1021,https://github.com/mrmhodak,4,https://github.com/openhpc/ohpc/pull/1021#issuecomment-521347035,Applies patch from #1020,"Actually, I have a feeling that applying patch can fail at build time. Let me know if that is the case. I had to adjust the patch to apply to 3.3 and I am not sure if the patch file is that or not.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1021,2019-08-01T05:47:31Z,2019-08-14T17:36:23Z,2019-08-14T17:56:05Z,MERGED,True,2,0,1,https://github.com/mrmhodak,Apply patch to fix node name issue in mpich,1,[],https://github.com/openhpc/ohpc/pull/1021,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/1021#issuecomment-521351593,Applies patch from #1020,"yeah, it looks like the patch was generated against the v3.3.1 release. There are a few other bug fixes in that release so I'm trying a built with that now.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1023,2019-08-14T01:41:27Z,2019-12-17T02:29:00Z,2020-01-13T21:22:55Z,CLOSED,False,534,292,59,https://github.com/jcsiadal,Support OpenSUSE LEAP 15.1,18,[],https://github.com/openhpc/ohpc/pull/1023,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1023,"These changes update the current 2.0 branch to support OpenSUSE LEAP 15.1.
The goal was to get all components building, creating valid RPMs, and installing correctly.
All components build and install except for docs, mrsh, nagios-plugins, test-suite, llvm, and dimemas. An mrsh fix is available in PR#877 (RHEL8 beta).
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Added support for Lua 5.3. SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
Dropped conditionals for SLES before 12SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
OpenBLAS, Lustre client, and OCR were updated to the latest versions.
In OHPC_macros, Python was updated to 3.6 for RHEL7, RHEL8, and SLE15. Also includes changes from Adrian's update for RHEL8.
Fixed a serious build bug in pdtoolkit. The configure scripts are missing spaces around some bash conditional operators. This causes that condition to always read true, resulting in the wrong compiler being used.
Most specfiles needed to fix library installation directory. Autoconf treats OpenSUSE 15 as a multiarch OS and defaults %libdir to /lib64. OpenHPC specfiles hardcode [PREFIX]/lib in scripts and %files, with a few exceptions that use [PREFIX]/lib64. I believe the right fix is to update ./configure and other pre-build scripts to match the hardcoded directory.

This PR replaces PR#1005, PR#1007, PR#1011. These removes any dependency for previous PRs to be merged first.
PR#1010 (Warewulf update) is also required to install the cluster; I left this as a seperate PR since it updates to a development branch.
Basic testing was done on OpenSUSE 15.1, and CentOS 7-1810. Intel components were built using Intel Parallel Studio 2019U4.","These changes update the current 2.0 branch to support OpenSUSE LEAP 15.1.
The goal was to get all components building, creating valid RPMs, and installing correctly.
All components build and install except for docs, mrsh, nagios-plugins, test-suite, llvm, and dimemas. An mrsh fix is available in PR#877 (RHEL8 beta).
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Added support for Lua 5.3. SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
Dropped conditionals for SLES before 12SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
OpenBLAS, Lustre client, and OCR were updated to the latest versions.
In OHPC_macros, Python was updated to 3.6 for RHEL7, RHEL8, and SLE15. Also includes changes from Adrian's update for RHEL8.
Fixed a serious build bug in pdtoolkit. The configure scripts are missing spaces around some bash conditional operators. This causes that condition to always read true, resulting in the wrong compiler being used.
Most specfiles needed to fix library installation directory. Autoconf treats OpenSUSE 15 as a multiarch OS and defaults %libdir to /lib64. OpenHPC specfiles hardcode [PREFIX]/lib in scripts and %files, with a few exceptions that use [PREFIX]/lib64. I believe the right fix is to update ./configure and other pre-build scripts to match the hardcoded directory.

This PR replaces PR#1005, PR#1007, PR#1011. These removes any dependency for previous PRs to be merged first.
PR#1010 (Warewulf update) is also required to install the cluster; I left this as a seperate PR since it updates to a development branch.
Basic testing was done on OpenSUSE 15.1, and CentOS 7-1810. Intel components were built using Intel Parallel Studio 2019U4.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1023,2019-08-14T01:41:27Z,2019-12-17T02:29:00Z,2020-01-13T21:22:55Z,CLOSED,False,534,292,59,https://github.com/jcsiadal,Support OpenSUSE LEAP 15.1,18,[],https://github.com/openhpc/ohpc/pull/1023,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1023#issuecomment-521333570,"These changes update the current 2.0 branch to support OpenSUSE LEAP 15.1.
The goal was to get all components building, creating valid RPMs, and installing correctly.
All components build and install except for docs, mrsh, nagios-plugins, test-suite, llvm, and dimemas. An mrsh fix is available in PR#877 (RHEL8 beta).
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Added support for Lua 5.3. SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
Dropped conditionals for SLES before 12SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
OpenBLAS, Lustre client, and OCR were updated to the latest versions.
In OHPC_macros, Python was updated to 3.6 for RHEL7, RHEL8, and SLE15. Also includes changes from Adrian's update for RHEL8.
Fixed a serious build bug in pdtoolkit. The configure scripts are missing spaces around some bash conditional operators. This causes that condition to always read true, resulting in the wrong compiler being used.
Most specfiles needed to fix library installation directory. Autoconf treats OpenSUSE 15 as a multiarch OS and defaults %libdir to /lib64. OpenHPC specfiles hardcode [PREFIX]/lib in scripts and %files, with a few exceptions that use [PREFIX]/lib64. I believe the right fix is to update ./configure and other pre-build scripts to match the hardcoded directory.

This PR replaces PR#1005, PR#1007, PR#1011. These removes any dependency for previous PRs to be merged first.
PR#1010 (Warewulf update) is also required to install the cluster; I left this as a seperate PR since it updates to a development branch.
Basic testing was done on OpenSUSE 15.1, and CentOS 7-1810. Intel components were built using Intel Parallel Studio 2019U4.","I've added a patch for Travis. The current regex expression prevents the use of PROJ_DELIM in any context of a global variable, so this fails:
%global myvar myvalue%PROJ_DELIM
I don't believe this was the intention. It flagged a line Karl added to lustre.spec two years ago to make sure the rpm use the correct basename.
I updated the regex so that re-definition of PROJ_DELIM is flagged as an error, but the macro can be used as a value when creating other global variables.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1023,2019-08-14T01:41:27Z,2019-12-17T02:29:00Z,2020-01-13T21:22:55Z,CLOSED,False,534,292,59,https://github.com/jcsiadal,Support OpenSUSE LEAP 15.1,18,[],https://github.com/openhpc/ohpc/pull/1023,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1023#issuecomment-523728154,"These changes update the current 2.0 branch to support OpenSUSE LEAP 15.1.
The goal was to get all components building, creating valid RPMs, and installing correctly.
All components build and install except for docs, mrsh, nagios-plugins, test-suite, llvm, and dimemas. An mrsh fix is available in PR#877 (RHEL8 beta).
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Added support for Lua 5.3. SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
Dropped conditionals for SLES before 12SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
OpenBLAS, Lustre client, and OCR were updated to the latest versions.
In OHPC_macros, Python was updated to 3.6 for RHEL7, RHEL8, and SLE15. Also includes changes from Adrian's update for RHEL8.
Fixed a serious build bug in pdtoolkit. The configure scripts are missing spaces around some bash conditional operators. This causes that condition to always read true, resulting in the wrong compiler being used.
Most specfiles needed to fix library installation directory. Autoconf treats OpenSUSE 15 as a multiarch OS and defaults %libdir to /lib64. OpenHPC specfiles hardcode [PREFIX]/lib in scripts and %files, with a few exceptions that use [PREFIX]/lib64. I believe the right fix is to update ./configure and other pre-build scripts to match the hardcoded directory.

This PR replaces PR#1005, PR#1007, PR#1011. These removes any dependency for previous PRs to be merged first.
PR#1010 (Warewulf update) is also required to install the cluster; I left this as a seperate PR since it updates to a development branch.
Basic testing was done on OpenSUSE 15.1, and CentOS 7-1810. Intel components were built using Intel Parallel Studio 2019U4.","I confirmed the mrsh patch in RHEL8 PR also fixes it in SUSE 15. Nothing in mrsh is modified here.
Updates docs and nagios-plugins. These are building now.
Add more updates to fix components that were building without error, but placing libs in /lib64.
Rebased everything to the latest 2.0 branch.

Based on 1.3.8 RPMs, all of the components use /lib, except for numpy, mpi4py, scipy, gcc, R, opencoarrays, easybuild, and all python extensions.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1023,2019-08-14T01:41:27Z,2019-12-17T02:29:00Z,2020-01-13T21:22:55Z,CLOSED,False,534,292,59,https://github.com/jcsiadal,Support OpenSUSE LEAP 15.1,18,[],https://github.com/openhpc/ohpc/pull/1023,https://github.com/jcsiadal,4,https://github.com/openhpc/ohpc/pull/1023#issuecomment-566351470,"These changes update the current 2.0 branch to support OpenSUSE LEAP 15.1.
The goal was to get all components building, creating valid RPMs, and installing correctly.
All components build and install except for docs, mrsh, nagios-plugins, test-suite, llvm, and dimemas. An mrsh fix is available in PR#877 (RHEL8 beta).
Summary of changes:

Since it's used by multiple specfiles, the luaver assignment is moved to OHPC_macros
Added support for Lua 5.3. SUSE provides Lua packages in its SLE developer language repo. It's possible to eliminate all extra lua packages in favor of those provided by the distro. Just for consideration.
Dropped conditionals for SLES before 12SP3
Removed the lua-bit component. Nothing supported depends on it anymore.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
OpenBLAS, Lustre client, and OCR were updated to the latest versions.
In OHPC_macros, Python was updated to 3.6 for RHEL7, RHEL8, and SLE15. Also includes changes from Adrian's update for RHEL8.
Fixed a serious build bug in pdtoolkit. The configure scripts are missing spaces around some bash conditional operators. This causes that condition to always read true, resulting in the wrong compiler being used.
Most specfiles needed to fix library installation directory. Autoconf treats OpenSUSE 15 as a multiarch OS and defaults %libdir to /lib64. OpenHPC specfiles hardcode [PREFIX]/lib in scripts and %files, with a few exceptions that use [PREFIX]/lib64. I believe the right fix is to update ./configure and other pre-build scripts to match the hardcoded directory.

This PR replaces PR#1005, PR#1007, PR#1011. These removes any dependency for previous PRs to be merged first.
PR#1010 (Warewulf update) is also required to install the cluster; I left this as a seperate PR since it updates to a development branch.
Basic testing was done on OpenSUSE 15.1, and CentOS 7-1810. Intel components were built using Intel Parallel Studio 2019U4.",Closing this request. Have synchronized the my fork and have started a new build. Will submit a new PR.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1025,2019-08-23T14:52:05Z,2019-10-23T10:56:25Z,2019-10-23T10:56:26Z,MERGED,True,1,1,1,https://github.com/cmcantalupo,Updates msr-safe to version 1.4.0,1,[],https://github.com/openhpc/ohpc/pull/1025,https://github.com/cmcantalupo,1,https://github.com/openhpc/ohpc/pull/1025,"Add a patch on top of 1.3.0 from the master branch which fixes save restore for MSRs with open write masks.  This should be applied instead of #1008.  @bgeltz can you take that PR down?  Thanks.
relates to #1008","Add a patch on top of 1.3.0 from the master branch which fixes save restore for MSRs with open write masks.  This should be applied instead of #1008.  @bgeltz can you take that PR down?  Thanks.
relates to #1008",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1025,2019-08-23T14:52:05Z,2019-10-23T10:56:25Z,2019-10-23T10:56:26Z,MERGED,True,1,1,1,https://github.com/cmcantalupo,Updates msr-safe to version 1.4.0,1,[],https://github.com/openhpc/ohpc/pull/1025,https://github.com/cmcantalupo,2,https://github.com/openhpc/ohpc/pull/1025#issuecomment-537661561,"Add a patch on top of 1.3.0 from the master branch which fixes save restore for MSRs with open write masks.  This should be applied instead of #1008.  @bgeltz can you take that PR down?  Thanks.
relates to #1008",Branch has been updated to msr-safe version 1.4.0 release which includes the patch that was previously being applied.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1029,2019-09-11T23:26:20Z,2019-10-17T23:02:35Z,2019-10-24T22:53:35Z,CLOSED,False,2,2,2,https://github.com/jcsiadal,Update petsc to 3.11.3,1,[],https://github.com/openhpc/ohpc/pull/1029,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1029,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Updates PETSC to the latest version. This was needed to build the current version of PFLOTRAN.
I've testing the build process on CentOS 7.6 and my OpenSUSE 15.1 branch. I've compiled and run PFLOTRAN against the resulting petsc-intel-impi-ohpc rpm install.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Updates PETSC to the latest version. This was needed to build the current version of PFLOTRAN.
I've testing the build process on CentOS 7.6 and my OpenSUSE 15.1 branch. I've compiled and run PFLOTRAN against the resulting petsc-intel-impi-ohpc rpm install.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1029,2019-09-11T23:26:20Z,2019-10-17T23:02:35Z,2019-10-24T22:53:35Z,CLOSED,False,2,2,2,https://github.com/jcsiadal,Update petsc to 3.11.3,1,[],https://github.com/openhpc/ohpc/pull/1029,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1029#issuecomment-543398991,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Updates PETSC to the latest version. This was needed to build the current version of PFLOTRAN.
I've testing the build process on CentOS 7.6 and my OpenSUSE 15.1 branch. I've compiled and run PFLOTRAN against the resulting petsc-intel-impi-ohpc rpm install.",Sorry I missed this one earlier - I think it is superseded by a newer PETSC v3.12 release (#1047) which is built for the 1.3.9 work.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1032,2019-09-20T02:08:55Z,2019-10-17T22:44:18Z,2019-12-13T05:17:19Z,MERGED,True,1,1,1,https://github.com/NaohiroTamura,Fixed 'ls' output in README for creating OHPC local repo,1,[],https://github.com/openhpc/ohpc/pull/1032,https://github.com/NaohiroTamura,1,https://github.com/openhpc/ohpc/pull/1032,"This patch corrected the 'ls' command output in README of
OpenHPC-@Version@.@distro@.@ARCH@.tar.","This patch corrected the 'ls' command output in README of
OpenHPC-@Version@.@distro@.@ARCH@.tar.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1032,2019-09-20T02:08:55Z,2019-10-17T22:44:18Z,2019-12-13T05:17:19Z,MERGED,True,1,1,1,https://github.com/NaohiroTamura,Fixed 'ls' output in README for creating OHPC local repo,1,[],https://github.com/openhpc/ohpc/pull/1032,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1032#issuecomment-543392802,"This patch corrected the 'ls' command output in README of
OpenHPC-@Version@.@distro@.@ARCH@.tar.",Thank you for this documentation fix - it will be included in next v1.3.9 release.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1034,2019-09-24T00:55:24Z,2019-10-10T12:16:56Z,2019-10-10T12:16:56Z,MERGED,True,1,1,1,https://github.com/amblakem,Use less specific python version for travis,1,[],https://github.com/openhpc/ohpc/pull/1034,https://github.com/amblakem,1,https://github.com/openhpc/ohpc/pull/1034,"In #1032 travis is failing because the python36 command is not found.  It looks like EPEL has deprecated this package in favor of the CentOS 7.7 provided one[1].
Because the default python3 is the appropriate version already and because the shebang in check_spec.py already calls out the less specific python version, I think it's appropriate that the Dockerfile be updated to match.
edited to reflect the package was deprecated not renamed
[1] https://lists.fedoraproject.org/archives/list/epel-devel@lists.fedoraproject.org/thread/GUSLTD5AJWFEGBFK5EYFVH3LHQVHUBAP/#AT736IKJUKNLP55YQETEFN2YJ5GM2YWO","In #1032 travis is failing because the python36 command is not found.  It looks like EPEL has deprecated this package in favor of the CentOS 7.7 provided one[1].
Because the default python3 is the appropriate version already and because the shebang in check_spec.py already calls out the less specific python version, I think it's appropriate that the Dockerfile be updated to match.
edited to reflect the package was deprecated not renamed
[1] https://lists.fedoraproject.org/archives/list/epel-devel@lists.fedoraproject.org/thread/GUSLTD5AJWFEGBFK5EYFVH3LHQVHUBAP/#AT736IKJUKNLP55YQETEFN2YJ5GM2YWO",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1052,2019-10-09T20:19:46Z,2019-10-10T21:12:51Z,2019-10-14T15:45:36Z,MERGED,True,10,45,3,https://github.com/mike0042,Update PBS Pro to version 19.1.3,2,[],https://github.com/openhpc/ohpc/pull/1052,https://github.com/mike0042,1,https://github.com/openhpc/ohpc/pull/1052,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1052,2019-10-09T20:19:46Z,2019-10-10T21:12:51Z,2019-10-14T15:45:36Z,MERGED,True,10,45,3,https://github.com/mike0042,Update PBS Pro to version 19.1.3,2,[],https://github.com/openhpc/ohpc/pull/1052,https://github.com/mike0042,2,https://github.com/openhpc/ohpc/pull/1052#issuecomment-540829866,,@koomie - Do you want this cherry picked anyplace else?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1052,2019-10-09T20:19:46Z,2019-10-10T21:12:51Z,2019-10-14T15:45:36Z,MERGED,True,10,45,3,https://github.com/mike0042,Update PBS Pro to version 19.1.3,2,[],https://github.com/openhpc/ohpc/pull/1052,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/1052#issuecomment-541757108,,"No, I think we're ok. I can land the same on the 2.0 branch at some point.  Thanks for the update.",True,{'THUMBS_UP': ['https://github.com/mike0042']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1053,2019-10-09T21:34:10Z,2019-10-10T20:16:23Z,2019-10-10T20:16:23Z,MERGED,True,23,0,2,https://github.com/amblakem,Patch intel-linux toolset to use -std=c++11 ,1,[],https://github.com/openhpc/ohpc/pull/1053,https://github.com/amblakem,1,https://github.com/openhpc/ohpc/pull/1053,"The boost intel-linux toolset has an issue[1] open regarding the missing -std=c++11 for the intel compiler.  I've added a patch that implements the suggested fix from that issue.  I ran the boost ohpc test suite and the non resource manager based tests seem to be passing.  I haven't run the resource manager based tests as my local environment isn't yet set up for that.
Should fix #1035
[1] boostorg/build#475","The boost intel-linux toolset has an issue[1] open regarding the missing -std=c++11 for the intel compiler.  I've added a patch that implements the suggested fix from that issue.  I ran the boost ohpc test suite and the non resource manager based tests seem to be passing.  I haven't run the resource manager based tests as my local environment isn't yet set up for that.
Should fix #1035
[1] boostorg/build#475",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1074,2019-10-21T11:57:04Z,2019-10-21T12:04:51Z,2019-10-21T12:04:51Z,MERGED,True,4,13,1,https://github.com/adrianreber,hypre: Upgrade to to 2.18.1,1,[],https://github.com/openhpc/ohpc/pull/1074,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1074,"hypre changed its license from LGPL-2.1 to Apache-2.0/MIT
the fei-base directory is no longer part of hypre (it used to be
copied to include/FEI_mv/

Fixes: #1065","hypre changed its license from LGPL-2.1 to Apache-2.0/MIT
the fei-base directory is no longer part of hypre (it used to be
copied to include/FEI_mv/

Fixes: #1065",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1075,2019-10-21T14:30:24Z,2019-12-18T19:24:41Z,2019-12-18T19:24:41Z,CLOSED,False,2,3,1,https://github.com/adrianreber,pmix: remove unnecessary BuildRequires,1,[],https://github.com/openhpc/ohpc/pull/1075,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1075,"remove BR on lmod and libtool as it is unused
update to 2.2.3
switch Source to Source0 (newer RPMs require that)

Signed-off-by: Adrian Reber areber@redhat.com","remove BR on lmod and libtool as it is unused
update to 2.2.3
switch Source to Source0 (newer RPMs require that)

Signed-off-by: Adrian Reber areber@redhat.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1075,2019-10-21T14:30:24Z,2019-12-18T19:24:41Z,2019-12-18T19:24:41Z,CLOSED,False,2,3,1,https://github.com/adrianreber,pmix: remove unnecessary BuildRequires,1,[],https://github.com/openhpc/ohpc/pull/1075,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1075#issuecomment-567174582,"remove BR on lmod and libtool as it is unused
update to 2.2.3
switch Source to Source0 (newer RPMs require that)

Signed-off-by: Adrian Reber areber@redhat.com",Landed the companion PR on 2.0.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1076,2019-10-21T15:14:31Z,2019-12-18T19:23:41Z,2019-12-18T19:23:41Z,MERGED,True,2,3,1,https://github.com/adrianreber,pmix: remove unnecessary BuildRequires,1,[],https://github.com/openhpc/ohpc/pull/1076,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1076,"remove BR on lmod and libtool as it is unused
update to 2.2.3
switch Source to Source0 (newer RPMs require that)

Same PR as on the 1.3.9 branch","remove BR on lmod and libtool as it is unused
update to 2.2.3
switch Source to Source0 (newer RPMs require that)

Same PR as on the 1.3.9 branch",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1077,2019-10-22T05:29:05Z,2020-01-06T17:24:00Z,2020-01-06T17:24:00Z,MERGED,True,196,55,7,https://github.com/adrianreber,changes for RHEL/CentOS 8,5,[],https://github.com/openhpc/ohpc/pull/1077,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1077,For some testing on CentOS 8 I am submitting a few of my #877 changes as separate pull requests.,For some testing on CentOS 8 I am submitting a few of my #877 changes as separate pull requests.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1077,2019-10-22T05:29:05Z,2020-01-06T17:24:00Z,2020-01-06T17:24:00Z,MERGED,True,196,55,7,https://github.com/adrianreber,changes for RHEL/CentOS 8,5,[],https://github.com/openhpc/ohpc/pull/1077,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1077#issuecomment-544837381,For some testing on CentOS 8 I am submitting a few of my #877 changes as separate pull requests.,Pushing more RHEL/CentOS 8 changes to this PR.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1077,2019-10-22T05:29:05Z,2020-01-06T17:24:00Z,2020-01-06T17:24:00Z,MERGED,True,196,55,7,https://github.com/adrianreber,changes for RHEL/CentOS 8,5,[],https://github.com/openhpc/ohpc/pull/1077,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/1077#issuecomment-559114898,For some testing on CentOS 8 I am submitting a few of my #877 changes as separate pull requests.,"As discussed this are the first few basic packages tested on RHEL 8. With this I can get slurm and gcc9 running using our lmod.
One of the changes to lmod is to not conflict with environment-modules from the OS any more, but to use the existing module files installed by the OS. Running module load os extends the MODULEPATH to offer the OS installed modules. In our discussions we decided to not display the OS provided modules automatically to not create confusion if there are additional MPI based modules from the OS. If the user, however, explicitly loads the os module, these OS based modules can also be used.
Concerning the announced slurm upgrade to 19.x for 2.0. To provide a minimal working set I just made sure 18.x builds and works on RHEL 8, we can still do the update later in the development cycle.
@koomie if possible let's get this merged to have a starting point for 2.0 (and so that I do not have to carry around so many commits locally).",True,{'THUMBS_UP': ['https://github.com/viniciusferrao']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1077,2019-10-22T05:29:05Z,2020-01-06T17:24:00Z,2020-01-06T17:24:00Z,MERGED,True,196,55,7,https://github.com/adrianreber,changes for RHEL/CentOS 8,5,[],https://github.com/openhpc/ohpc/pull/1077,https://github.com/jcsiadal,4,https://github.com/openhpc/ohpc/pull/1077#issuecomment-566675320,For some testing on CentOS 8 I am submitting a few of my #877 changes as separate pull requests.,Could we eliminate the double-pass build and place a BuildRequires for the OS-provided annobin and use it for bootstrap? I'm assuming here that we ultimately need to provide a newer annobin package than the one in CentOS8.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1077,2019-10-22T05:29:05Z,2020-01-06T17:24:00Z,2020-01-06T17:24:00Z,MERGED,True,196,55,7,https://github.com/adrianreber,changes for RHEL/CentOS 8,5,[],https://github.com/openhpc/ohpc/pull/1077,https://github.com/adrianreber,5,https://github.com/openhpc/ohpc/pull/1077#issuecomment-566909803,For some testing on CentOS 8 I am submitting a few of my #877 changes as separate pull requests.,"Could we eliminate the double-pass build and place a BuildRequires for the OS-provided annobin and use it for bootstrap? I'm assuming here that we ultimately need to provide a newer annobin package than the one in CentOS8.

Using the annobin from the OS will probably work as long as we stay on GCC 9. Once we switch to 10 this could probably break and we have to do the bootstrap build anyway.
Currently the main reason to have our own annobin package is to make sure we are not relying on the OS annobin as it requires to point our GCC to the OS GCC plugin path which might be a problem once we switch to GCC 10. As we rely on the RPM optflags from the OS which enable annobin we have to provide the plugin in out plugin path. Currently our annobin usage is more trying to avoid a broken compiler than the actual annobin information.
Do you still think we should use the OS annobin for bootstrap? Not sure myself, just trying to not break our compiler? If you have any changes which you think make sense I am happy to include them in this PR.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1081,2019-10-25T22:02:36Z,2019-10-30T17:35:44Z,2019-10-30T17:36:10Z,MERGED,True,26,2,2,https://github.com/amblakem,Use caf and cafrun wrappers for opencoarrays tests,1,[],https://github.com/openhpc/ohpc/pull/1081,https://github.com/amblakem,1,https://github.com/openhpc/ohpc/pull/1081,"In #884 it was determined that the caf wrapper script was broken.  According to the documentation this wrapper is the preferred method for using opencoarrays.  In order to ensure that this script is working going forward, this PR modifies the existing opencoarrays tests to use caf instead of calling mpif* directly.  Additionally, it adds another resource manager test to ensure that cafrun runs MPI jobs as expected.
When I tested this on OpenHPC 1.3.8.1 the tests fail with an expected error[1] as described in #884.  With the current 1.3.9 that's staged, these tests pass for openmpi3 and mpich.  I'm seeing failures for mvapich2 but I believe that's a known issue.
[1]
## ----------- ##
## Core tests. ##
## ----------- ##

configure:1921: checking for a BSD-compatible install
configure:1989: result: /bin/install -c
configure:2000: checking whether build environment is sane
configure:2055: result: yes
configure:2206: checking for a thread-safe mkdir -p
configure:2245: result: /bin/mkdir -p
configure:2252: checking for gawk
configure:2268: found /bin/gawk
configure:2279: result: gawk
configure:2290: checking whether make sets $(MAKE)
configure:2312: result: yes
configure:2341: checking whether make supports nested variables
configure:2358: result: yes
configure:2453: checking whether make supports nested variables
configure:2470: result: yes
configure:2483: checking for OPENCOARRAYS_DIR environment variable
configure:2491: result: no
configure:2606: checking for Fortran 77 compiler version
configure:2615: caf --version >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2615: caf -v >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2615: caf -V >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2615: caf -qversion >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2641: checking whether the Fortran 77 compiler works
configure:2663: caf   conftest.f  >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2667: $? = 0
configure:2705: result: no
configure: failed program was:
|       program main
|
|       end
configure:2710: error: in `/home/ohpc-test/tests/libs/opencoarrays':
configure:2712: error: Fortran 77 compiler cannot create executables","In #884 it was determined that the caf wrapper script was broken.  According to the documentation this wrapper is the preferred method for using opencoarrays.  In order to ensure that this script is working going forward, this PR modifies the existing opencoarrays tests to use caf instead of calling mpif* directly.  Additionally, it adds another resource manager test to ensure that cafrun runs MPI jobs as expected.
When I tested this on OpenHPC 1.3.8.1 the tests fail with an expected error[1] as described in #884.  With the current 1.3.9 that's staged, these tests pass for openmpi3 and mpich.  I'm seeing failures for mvapich2 but I believe that's a known issue.
[1]
## ----------- ##
## Core tests. ##
## ----------- ##

configure:1921: checking for a BSD-compatible install
configure:1989: result: /bin/install -c
configure:2000: checking whether build environment is sane
configure:2055: result: yes
configure:2206: checking for a thread-safe mkdir -p
configure:2245: result: /bin/mkdir -p
configure:2252: checking for gawk
configure:2268: found /bin/gawk
configure:2279: result: gawk
configure:2290: checking whether make sets $(MAKE)
configure:2312: result: yes
configure:2341: checking whether make supports nested variables
configure:2358: result: yes
configure:2453: checking whether make supports nested variables
configure:2470: result: yes
configure:2483: checking for OPENCOARRAYS_DIR environment variable
configure:2491: result: no
configure:2606: checking for Fortran 77 compiler version
configure:2615: caf --version >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2615: caf -v >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2615: caf -V >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2615: caf -qversion >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2641: checking whether the Fortran 77 compiler works
configure:2663: caf   conftest.f  >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2667: $? = 0
configure:2705: result: no
configure: failed program was:
|       program main
|
|       end
configure:2710: error: in `/home/ohpc-test/tests/libs/opencoarrays':
configure:2712: error: Fortran 77 compiler cannot create executables",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1081,2019-10-25T22:02:36Z,2019-10-30T17:35:44Z,2019-10-30T17:36:10Z,MERGED,True,26,2,2,https://github.com/amblakem,Use caf and cafrun wrappers for opencoarrays tests,1,[],https://github.com/openhpc/ohpc/pull/1081,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1081#issuecomment-548026173,"In #884 it was determined that the caf wrapper script was broken.  According to the documentation this wrapper is the preferred method for using opencoarrays.  In order to ensure that this script is working going forward, this PR modifies the existing opencoarrays tests to use caf instead of calling mpif* directly.  Additionally, it adds another resource manager test to ensure that cafrun runs MPI jobs as expected.
When I tested this on OpenHPC 1.3.8.1 the tests fail with an expected error[1] as described in #884.  With the current 1.3.9 that's staged, these tests pass for openmpi3 and mpich.  I'm seeing failures for mvapich2 but I believe that's a known issue.
[1]
## ----------- ##
## Core tests. ##
## ----------- ##

configure:1921: checking for a BSD-compatible install
configure:1989: result: /bin/install -c
configure:2000: checking whether build environment is sane
configure:2055: result: yes
configure:2206: checking for a thread-safe mkdir -p
configure:2245: result: /bin/mkdir -p
configure:2252: checking for gawk
configure:2268: found /bin/gawk
configure:2279: result: gawk
configure:2290: checking whether make sets $(MAKE)
configure:2312: result: yes
configure:2341: checking whether make supports nested variables
configure:2358: result: yes
configure:2453: checking whether make supports nested variables
configure:2470: result: yes
configure:2483: checking for OPENCOARRAYS_DIR environment variable
configure:2491: result: no
configure:2606: checking for Fortran 77 compiler version
configure:2615: caf --version >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2615: caf -v >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2615: caf -V >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2615: caf -qversion >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2626: $? = 0
configure:2641: checking whether the Fortran 77 compiler works
configure:2663: caf   conftest.f  >&5
Failed to find static library /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/lib64/libcaf_mpi.a or shared library alternatives.
Error in /opt/ohpc/pub/libs/gnu8/mpich/opencoarrays/2.6.3/bin/caf in function . on line 235. Please report this error at http://bit.ly/OpenCoarrays-new-issue
configure:2667: $? = 0
configure:2705: result: no
configure: failed program was:
|       program main
|
|       end
configure:2710: error: in `/home/ohpc-test/tests/libs/opencoarrays':
configure:2712: error: Fortran 77 compiler cannot create executables",Thanks for this tweak.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1087,2019-11-21T00:59:06Z,2019-12-18T19:20:10Z,2019-12-18T19:50:51Z,MERGED,True,189,151,4,https://github.com/jcsiadal,LLVM Update to 9.0.0,2,[],https://github.com/openhpc/ohpc/pull/1087,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1087,"LLVM 9.0.0 compiler suite
Includes: clang, lld, clang-tools-extra, libcxx, libcxxabi, libunwind, compiler-rt, openmp
This is a 2-stage build using GCC8 for bootstrap. After stage 1, the entire suite is rebuilt using only the LLVM/Clang toolchain, to remove dependencies.
There is no supported Fortran frontend for LLVM9. F18 is not yet included and flang is supported only through LLVM7. Until F18 is official, a previous release of LLVM with flang should remain active in OpenHPC.
OpenHPC tests are updated. I used gfortran as a placeholder for llvm9 and removed llvm4. I don't have a way to pre-test this before a PR. If this doesn't work, the Fortran portion of the test will need a way to conditionally disable it.
The build takes 2-3 hours on a newer dual CPU platform. LLVM is a finicky build and I kept hitting race conditions using parallel cmake. I serialized some of it to avoid this, but it's possible that it may still hit issues on slower systems.
I certainly can't say this is the ideal configuration, but it does build successfully and appears to work. In some cases, configuration choice is out of necessity; for example, when openmp is configured under runtimes, it won't receive cmake variables and won't build. Configuring openmp as a project avoids needing to patch src files. Hopefully, this LLVM config is a good base for further optimizations. I didn't spilt the runtimes into their own package--that may be a good feature-add.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com","LLVM 9.0.0 compiler suite
Includes: clang, lld, clang-tools-extra, libcxx, libcxxabi, libunwind, compiler-rt, openmp
This is a 2-stage build using GCC8 for bootstrap. After stage 1, the entire suite is rebuilt using only the LLVM/Clang toolchain, to remove dependencies.
There is no supported Fortran frontend for LLVM9. F18 is not yet included and flang is supported only through LLVM7. Until F18 is official, a previous release of LLVM with flang should remain active in OpenHPC.
OpenHPC tests are updated. I used gfortran as a placeholder for llvm9 and removed llvm4. I don't have a way to pre-test this before a PR. If this doesn't work, the Fortran portion of the test will need a way to conditionally disable it.
The build takes 2-3 hours on a newer dual CPU platform. LLVM is a finicky build and I kept hitting race conditions using parallel cmake. I serialized some of it to avoid this, but it's possible that it may still hit issues on slower systems.
I certainly can't say this is the ideal configuration, but it does build successfully and appears to work. In some cases, configuration choice is out of necessity; for example, when openmp is configured under runtimes, it won't receive cmake variables and won't build. Configuring openmp as a project avoids needing to patch src files. Hopefully, this LLVM config is a good base for further optimizations. I didn't spilt the runtimes into their own package--that may be a good feature-add.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1087,2019-11-21T00:59:06Z,2019-12-18T19:20:10Z,2019-12-18T19:50:51Z,MERGED,True,189,151,4,https://github.com/jcsiadal,LLVM Update to 9.0.0,2,[],https://github.com/openhpc/ohpc/pull/1087,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1087#issuecomment-567147837,"LLVM 9.0.0 compiler suite
Includes: clang, lld, clang-tools-extra, libcxx, libcxxabi, libunwind, compiler-rt, openmp
This is a 2-stage build using GCC8 for bootstrap. After stage 1, the entire suite is rebuilt using only the LLVM/Clang toolchain, to remove dependencies.
There is no supported Fortran frontend for LLVM9. F18 is not yet included and flang is supported only through LLVM7. Until F18 is official, a previous release of LLVM with flang should remain active in OpenHPC.
OpenHPC tests are updated. I used gfortran as a placeholder for llvm9 and removed llvm4. I don't have a way to pre-test this before a PR. If this doesn't work, the Fortran portion of the test will need a way to conditionally disable it.
The build takes 2-3 hours on a newer dual CPU platform. LLVM is a finicky build and I kept hitting race conditions using parallel cmake. I serialized some of it to avoid this, but it's possible that it may still hit issues on slower systems.
I certainly can't say this is the ideal configuration, but it does build successfully and appears to work. In some cases, configuration choice is out of necessity; for example, when openmp is configured under runtimes, it won't receive cmake variables and won't build. Configuring openmp as a project avoids needing to patch src files. Hopefully, this LLVM config is a good base for further optimizations. I didn't spilt the runtimes into their own package--that may be a good feature-add.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com",Updated to build using GNU9 for bootstrap.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1088,2019-11-22T22:33:09Z,2020-10-21T11:13:52Z,2020-11-16T22:25:07Z,CLOSED,False,29,31,1,https://github.com/jcsiadal,geopm 1.1.0 - Add support for OpenSUSE 15.1,7,[],https://github.com/openhpc/ohpc/pull/1088,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1088,"Updated from original pull request -- rebased to latest 2.0 branch.
Updates geopm 1.1 for OpenSUSE 15.1.
Includes changes from geopm source author.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com","Updated from original pull request -- rebased to latest 2.0 branch.
Updates geopm 1.1 for OpenSUSE 15.1.
Includes changes from geopm source author.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1088,2019-11-22T22:33:09Z,2020-10-21T11:13:52Z,2020-11-16T22:25:07Z,CLOSED,False,29,31,1,https://github.com/jcsiadal,geopm 1.1.0 - Add support for OpenSUSE 15.1,7,[],https://github.com/openhpc/ohpc/pull/1088,https://github.com/cmcantalupo,2,https://github.com/openhpc/ohpc/pull/1088#issuecomment-563481303,"Updated from original pull request -- rebased to latest 2.0 branch.
Updates geopm 1.1 for OpenSUSE 15.1.
Includes changes from geopm source author.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com","I found an issue with the way that SUSE 15 SP1 is expanding the ""python_lib_dir"" macro.  On my system is is resolving to python3.4 even though system python is version 3.6.  The solution below works:
cmcantalupo@63affab#diff-b8e4a72d27eb119bd04fdd9147258aa1R115",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1088,2019-11-22T22:33:09Z,2020-10-21T11:13:52Z,2020-11-16T22:25:07Z,CLOSED,False,29,31,1,https://github.com/jcsiadal,geopm 1.1.0 - Add support for OpenSUSE 15.1,7,[],https://github.com/openhpc/ohpc/pull/1088,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1088#issuecomment-565564157,"Updated from original pull request -- rebased to latest 2.0 branch.
Updates geopm 1.1 for OpenSUSE 15.1.
Includes changes from geopm source author.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com","You're right about that. None of the PRs for the HPC_macros file for 2.0 have been merged, so the new distros aren't working. The fix needs to merge into that file. Your method is easier to maintain than the current method of setting Python based on OS version.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1088,2019-11-22T22:33:09Z,2020-10-21T11:13:52Z,2020-11-16T22:25:07Z,CLOSED,False,29,31,1,https://github.com/jcsiadal,geopm 1.1.0 - Add support for OpenSUSE 15.1,7,[],https://github.com/openhpc/ohpc/pull/1088,https://github.com/cmcantalupo,4,https://github.com/openhpc/ohpc/pull/1088#issuecomment-565665295,"Updated from original pull request -- rebased to latest 2.0 branch.
Updates geopm 1.1 for OpenSUSE 15.1.
Includes changes from geopm source author.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com","I added a spec file variable to track the site-package directory in the version here:
https://review.gerrithub.io/c/geopm/geopm/+/477493/
rather than expanding the variable in place in the module file section.  Functionally the same though.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1089,2019-11-22T23:18:20Z,2019-12-11T16:00:29Z,2019-12-11T16:00:29Z,CLOSED,False,2109,1783,178,https://github.com/amblakem,Merge obs/OpenHPC_1.3.9_Factory and 2.0,171,[],https://github.com/openhpc/ohpc/pull/1089,https://github.com/amblakem,1,https://github.com/openhpc/ohpc/pull/1089,"I'm not sure what the exact strategy will be to get the 1.3.9 changes into 2.0, but I'm submitting a merge of 1.3.9 into 2.0 as a PR in case it's useful.  Feel free to close this in favor of another method, if you already had something planned.
Even with the new release target of Q1 2020 for 2.0, there's still alot of changes required. I believe that it would be handy to have an updated 2.0 base soon, so that people can base their work off of it.","I'm not sure what the exact strategy will be to get the 1.3.9 changes into 2.0, but I'm submitting a merge of 1.3.9 into 2.0 as a PR in case it's useful.  Feel free to close this in favor of another method, if you already had something planned.
Even with the new release target of Q1 2020 for 2.0, there's still alot of changes required. I believe that it would be handy to have an updated 2.0 base soon, so that people can base their work off of it.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1091,2019-11-26T13:08:21Z,2020-01-06T17:20:09Z,2020-01-07T07:05:28Z,CLOSED,False,212,0,8,https://github.com/adrianreber,Add information about OpenHPC based containers,1,[],https://github.com/openhpc/ohpc/pull/1091,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1091,"(This is still using my private quay.io registry URLs, which can be replaced later with the real location)
During SC19 there were a couple of questions about OpenHPC based containers. Although it is easy to create an OpenHPC based container (see Dockerfiles) it is even more convenient if it already exists.
Details about the containers can be found in the README.md file.

make # to build all container
make push # build and push all container to a registry
make check # run some simple checks using the containers","(This is still using my private quay.io registry URLs, which can be replaced later with the real location)
During SC19 there were a couple of questions about OpenHPC based containers. Although it is easy to create an OpenHPC based container (see Dockerfiles) it is even more convenient if it already exists.
Details about the containers can be found in the README.md file.

make # to build all container
make push # build and push all container to a registry
make check # run some simple checks using the containers",True,"{'THUMBS_UP': ['https://github.com/amblakem', 'https://github.com/crbaird']}"
openhpc/ohpc,https://github.com/openhpc/ohpc,1091,2019-11-26T13:08:21Z,2020-01-06T17:20:09Z,2020-01-07T07:05:28Z,CLOSED,False,212,0,8,https://github.com/adrianreber,Add information about OpenHPC based containers,1,[],https://github.com/openhpc/ohpc/pull/1091,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1091#issuecomment-558620554,"(This is still using my private quay.io registry URLs, which can be replaced later with the real location)
During SC19 there were a couple of questions about OpenHPC based containers. Although it is easy to create an OpenHPC based container (see Dockerfiles) it is even more convenient if it already exists.
Details about the containers can be found in the README.md file.

make # to build all container
make push # build and push all container to a registry
make check # run some simple checks using the containers",@koomie @crbaird As discussed in Denver. This is a try to provide OpenHPC based containers.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1091,2019-11-26T13:08:21Z,2020-01-06T17:20:09Z,2020-01-07T07:05:28Z,CLOSED,False,212,0,8,https://github.com/adrianreber,Add information about OpenHPC based containers,1,[],https://github.com/openhpc/ohpc/pull/1091,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/1091#issuecomment-571227621,"(This is still using my private quay.io registry URLs, which can be replaced later with the real location)
During SC19 there were a couple of questions about OpenHPC based containers. Although it is easy to create an OpenHPC based container (see Dockerfiles) it is even more convenient if it already exists.
Details about the containers can be found in the README.md file.

make # to build all container
make push # build and push all container to a registry
make check # run some simple checks using the containers","I landed this on the 2.0 branch. These will presumably need to get updated to use the gnu9 or gnu10 variant depending on what version ships with 2.0.  Now that there is a containers subdirectory, I moved the previous singularity example to reside here as well.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1091,2019-11-26T13:08:21Z,2020-01-06T17:20:09Z,2020-01-07T07:05:28Z,CLOSED,False,212,0,8,https://github.com/adrianreber,Add information about OpenHPC based containers,1,[],https://github.com/openhpc/ohpc/pull/1091,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/1091#issuecomment-571463804,"(This is still using my private quay.io registry URLs, which can be replaced later with the real location)
During SC19 there were a couple of questions about OpenHPC based containers. Although it is easy to create an OpenHPC based container (see Dockerfiles) it is even more convenient if it already exists.
Details about the containers can be found in the README.md file.

make # to build all container
make push # build and push all container to a registry
make check # run some simple checks using the containers","I landed this on the 2.0 branch. These will presumably need to get updated to use the gnu9 or gnu10 variant depending on what version ships with 2.0. Now that there is a containers subdirectory, I moved the previous singularity example to reside here as well.

@koomie Just let me know whenever I need to adapt/change anything with this.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1092,2019-12-09T02:26:39Z,2019-12-11T15:47:53Z,2019-12-13T05:16:38Z,CLOSED,False,17,4,1,https://github.com/NaohiroTamura,Fixed misc/build_order.py KeyError,1,[],https://github.com/openhpc/ohpc/pull/1092,https://github.com/NaohiroTamura,1,https://github.com/openhpc/ohpc/pull/1092,"This patch fixed misc/build_order.py KeyError by taking rpm
python_prefix macro into consideration.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","This patch fixed misc/build_order.py KeyError by taking rpm
python_prefix macro into consideration.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1092,2019-12-09T02:26:39Z,2019-12-11T15:47:53Z,2019-12-13T05:16:38Z,CLOSED,False,17,4,1,https://github.com/NaohiroTamura,Fixed misc/build_order.py KeyError,1,[],https://github.com/openhpc/ohpc/pull/1092,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1092#issuecomment-564254960,"This patch fixed misc/build_order.py KeyError by taking rpm
python_prefix macro into consideration.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",@NaohiroTamura thanks for fixing this script. Happy to see it has more users than just me.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1092,2019-12-09T02:26:39Z,2019-12-11T15:47:53Z,2019-12-13T05:16:38Z,CLOSED,False,17,4,1,https://github.com/NaohiroTamura,Fixed misc/build_order.py KeyError,1,[],https://github.com/openhpc/ohpc/pull/1092,https://github.com/NaohiroTamura,3,https://github.com/openhpc/ohpc/pull/1092#issuecomment-564341913,"This patch fixed misc/build_order.py KeyError by taking rpm
python_prefix macro into consideration.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","@adrianreber I'm also happy to have feedback from the original author. I was able to rebuild ohpc 1.3.9 on my local centos7.7 using this script, thanks!  And any comment or suggestion about this patch is very welcome.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1092,2019-12-09T02:26:39Z,2019-12-11T15:47:53Z,2019-12-13T05:16:38Z,CLOSED,False,17,4,1,https://github.com/NaohiroTamura,Fixed misc/build_order.py KeyError,1,[],https://github.com/openhpc/ohpc/pull/1092,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/1092#issuecomment-564599952,"This patch fixed misc/build_order.py KeyError by taking rpm
python_prefix macro into consideration.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",If it works I am 👍 for merging it. @koomie can you merge it? Not sure if it makes more sense to merge it on the 1.3.9 branch or rather on the 2.0 branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1092,2019-12-09T02:26:39Z,2019-12-11T15:47:53Z,2019-12-13T05:16:38Z,CLOSED,False,17,4,1,https://github.com/NaohiroTamura,Fixed misc/build_order.py KeyError,1,[],https://github.com/openhpc/ohpc/pull/1092,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/1092#issuecomment-564605322,"This patch fixed misc/build_order.py KeyError by taking rpm
python_prefix macro into consideration.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",2.0 branch makes more sense to me and I landed this there (d9fa377). Thanks for the fix.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1092,2019-12-09T02:26:39Z,2019-12-11T15:47:53Z,2019-12-13T05:16:38Z,CLOSED,False,17,4,1,https://github.com/NaohiroTamura,Fixed misc/build_order.py KeyError,1,[],https://github.com/openhpc/ohpc/pull/1092,https://github.com/NaohiroTamura,6,https://github.com/openhpc/ohpc/pull/1092#issuecomment-564785608,"This patch fixed misc/build_order.py KeyError by taking rpm
python_prefix macro into consideration.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",@adrianreber @koomie thanks!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1094,2019-12-13T05:40:45Z,2019-12-18T19:22:42Z,2019-12-19T01:28:27Z,MERGED,True,1,1,1,https://github.com/NaohiroTamura,Fixed misc/get_source.sh OHPC_macros open error,1,[],https://github.com/openhpc/ohpc/pull/1094,https://github.com/NaohiroTamura,1,https://github.com/openhpc/ohpc/pull/1094,"This patch fixed misc/get_source.sh ""error: Unable to open
../SOURCES/OHPC_macros: No such file or directory"" by updating
'_sourcedir' rpm macros, and also updated 'rhel' for OHPC 2.0.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","This patch fixed misc/get_source.sh ""error: Unable to open
../SOURCES/OHPC_macros: No such file or directory"" by updating
'_sourcedir' rpm macros, and also updated 'rhel' for OHPC 2.0.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1094,2019-12-13T05:40:45Z,2019-12-18T19:22:42Z,2019-12-19T01:28:27Z,MERGED,True,1,1,1,https://github.com/NaohiroTamura,Fixed misc/get_source.sh OHPC_macros open error,1,[],https://github.com/openhpc/ohpc/pull/1094,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1094#issuecomment-565321567,"This patch fixed misc/get_source.sh ""error: Unable to open
../SOURCES/OHPC_macros: No such file or directory"" by updating
'_sourcedir' rpm macros, and also updated 'rhel' for OHPC 2.0.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",Good idea. That makes it much easier. It requires that the OpenHPC directory does not change from components/GROUP/PACKAGE/SPECS/. So far the layout seems to be the same for all packages.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1094,2019-12-13T05:40:45Z,2019-12-18T19:22:42Z,2019-12-19T01:28:27Z,MERGED,True,1,1,1,https://github.com/NaohiroTamura,Fixed misc/get_source.sh OHPC_macros open error,1,[],https://github.com/openhpc/ohpc/pull/1094,https://github.com/NaohiroTamura,3,https://github.com/openhpc/ohpc/pull/1094#issuecomment-567275382,"This patch fixed misc/get_source.sh ""error: Unable to open
../SOURCES/OHPC_macros: No such file or directory"" by updating
'_sourcedir' rpm macros, and also updated 'rhel' for OHPC 2.0.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","@adrianreber @koomie , thanks!",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1095,2019-12-14T06:33:36Z,2020-10-21T11:13:52Z,2020-11-16T22:25:14Z,CLOSED,False,10,15,1,https://github.com/jcsiadal,Remove SUSE hardcoded kernel dependency in msr-safe,2,[],https://github.com/openhpc/ohpc/pull/1095,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1095,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Removes hardcoded default kernel dependency for SUSE. This prevented using the srpm to create a kernel driver for a custom kernel. Instead, it defines the kernel variant as a global macro (defaulting to the default kernel).
Also gets rid of the custom driver build sections in favor of the generic kernel_module macro.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Removes hardcoded default kernel dependency for SUSE. This prevented using the srpm to create a kernel driver for a custom kernel. Instead, it defines the kernel variant as a global macro (defaulting to the default kernel).
Also gets rid of the custom driver build sections in favor of the generic kernel_module macro.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1096,2019-12-16T14:18:52Z,2020-03-11T15:11:30Z,2020-03-11T15:11:31Z,CLOSED,False,37,1,1,https://github.com/TomTheBear,Version bump to 5.0.0 and compiler selection for ARMv8 and POWER,4,[],https://github.com/openhpc/ohpc/pull/1096,https://github.com/TomTheBear,1,https://github.com/openhpc/ohpc/pull/1096,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1096,2019-12-16T14:18:52Z,2020-03-11T15:11:30Z,2020-03-11T15:11:31Z,CLOSED,False,37,1,1,https://github.com/TomTheBear,Version bump to 5.0.0 and compiler selection for ARMv8 and POWER,4,[],https://github.com/openhpc/ohpc/pull/1096,https://github.com/TomTheBear,2,https://github.com/openhpc/ohpc/pull/1096#issuecomment-590810826,,I did the steps recommended by DCO but no changes? Any hints? Should I close this PR and open a new one?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1096,2019-12-16T14:18:52Z,2020-03-11T15:11:30Z,2020-03-11T15:11:31Z,CLOSED,False,37,1,1,https://github.com/TomTheBear,Version bump to 5.0.0 and compiler selection for ARMv8 and POWER,4,[],https://github.com/openhpc/ohpc/pull/1096,https://github.com/TomTheBear,3,https://github.com/openhpc/ohpc/pull/1096#issuecomment-597690713,,I'll close and reopen the PR.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1097,2019-12-17T03:11:26Z,2020-01-07T16:11:19Z,2020-01-13T20:01:21Z,MERGED,True,77,460,16,https://github.com/jcsiadal,"Update bootstrap/core components (RPM macros, lmod, compiler/mpi setup)",9,[],https://github.com/openhpc/ohpc/pull/1097,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1097,"Updates the core components needed to launch general build of all OpenSUSE LEAP 15.1 packages.
Tested bootstrap builds on LEAP 15.1, SLES 15, and CentOS 8.
Summary of changes:

Removed all of the distro Lua packages. There are not needed post-SLES12, as the distros provide them.
Moved luaver assignment to OHPC_macros. It also checks lua_version first, which is defined under OpenSUSE.
Added updates for Lua 5.3.
Updated python macros, using the built-ins instead guessing based on OS. This section could probably be mostly removed if we updated the macro names in the individual specs to use the built-ins (and ditched Python2 support).
Dropped conditionals for SLES before 12SP3. Kept the SLES12SP4 just in case, but it would make the files easier to read if these were dropped also. Similarly, following new OBS docs and moving sles_version to sle_version.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
Added and then removed the annobin check. There needs to be a better method to bootstrap it.","Updates the core components needed to launch general build of all OpenSUSE LEAP 15.1 packages.
Tested bootstrap builds on LEAP 15.1, SLES 15, and CentOS 8.
Summary of changes:

Removed all of the distro Lua packages. There are not needed post-SLES12, as the distros provide them.
Moved luaver assignment to OHPC_macros. It also checks lua_version first, which is defined under OpenSUSE.
Added updates for Lua 5.3.
Updated python macros, using the built-ins instead guessing based on OS. This section could probably be mostly removed if we updated the macro names in the individual specs to use the built-ins (and ditched Python2 support).
Dropped conditionals for SLES before 12SP3. Kept the SLES12SP4 just in case, but it would make the files easier to read if these were dropped also. Similarly, following new OBS docs and moving sles_version to sle_version.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
Added and then removed the annobin check. There needs to be a better method to bootstrap it.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1097,2019-12-17T03:11:26Z,2020-01-07T16:11:19Z,2020-01-13T20:01:21Z,MERGED,True,77,460,16,https://github.com/jcsiadal,"Update bootstrap/core components (RPM macros, lmod, compiler/mpi setup)",9,[],https://github.com/openhpc/ohpc/pull/1097,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1097#issuecomment-566431031,"Updates the core components needed to launch general build of all OpenSUSE LEAP 15.1 packages.
Tested bootstrap builds on LEAP 15.1, SLES 15, and CentOS 8.
Summary of changes:

Removed all of the distro Lua packages. There are not needed post-SLES12, as the distros provide them.
Moved luaver assignment to OHPC_macros. It also checks lua_version first, which is defined under OpenSUSE.
Added updates for Lua 5.3.
Updated python macros, using the built-ins instead guessing based on OS. This section could probably be mostly removed if we updated the macro names in the individual specs to use the built-ins (and ditched Python2 support).
Dropped conditionals for SLES before 12SP3. Kept the SLES12SP4 just in case, but it would make the files easier to read if these were dropped also. Similarly, following new OBS docs and moving sles_version to sle_version.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
Added and then removed the annobin check. There needs to be a better method to bootstrap it.",@jcsiadal Thanks for the cleanups. I like the idea of this PR. I also have been thinking about all the distribution specific macros and I thought to remove all the _version macros for rhel/centos and similar. My idea was to just rely on%{rhel}. This tells us the version of the CentOS or RHEL release and that's all we need. This way we do not rely on OBS injected macros because I think we do not need them. All we need it to detect if it is CentOS or LEAP and %{rhel} should be enough.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1097,2019-12-17T03:11:26Z,2020-01-07T16:11:19Z,2020-01-13T20:01:21Z,MERGED,True,77,460,16,https://github.com/jcsiadal,"Update bootstrap/core components (RPM macros, lmod, compiler/mpi setup)",9,[],https://github.com/openhpc/ohpc/pull/1097,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1097#issuecomment-566682496,"Updates the core components needed to launch general build of all OpenSUSE LEAP 15.1 packages.
Tested bootstrap builds on LEAP 15.1, SLES 15, and CentOS 8.
Summary of changes:

Removed all of the distro Lua packages. There are not needed post-SLES12, as the distros provide them.
Moved luaver assignment to OHPC_macros. It also checks lua_version first, which is defined under OpenSUSE.
Added updates for Lua 5.3.
Updated python macros, using the built-ins instead guessing based on OS. This section could probably be mostly removed if we updated the macro names in the individual specs to use the built-ins (and ditched Python2 support).
Dropped conditionals for SLES before 12SP3. Kept the SLES12SP4 just in case, but it would make the files easier to read if these were dropped also. Similarly, following new OBS docs and moving sles_version to sle_version.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
Added and then removed the annobin check. There needs to be a better method to bootstrap it.",Thanks for catching the error. Also made me remember to update my build system and add gnu9 to the permutations.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1097,2019-12-17T03:11:26Z,2020-01-07T16:11:19Z,2020-01-13T20:01:21Z,MERGED,True,77,460,16,https://github.com/jcsiadal,"Update bootstrap/core components (RPM macros, lmod, compiler/mpi setup)",9,[],https://github.com/openhpc/ohpc/pull/1097,https://github.com/jcsiadal,4,https://github.com/openhpc/ohpc/pull/1097#issuecomment-567211239,"Updates the core components needed to launch general build of all OpenSUSE LEAP 15.1 packages.
Tested bootstrap builds on LEAP 15.1, SLES 15, and CentOS 8.
Summary of changes:

Removed all of the distro Lua packages. There are not needed post-SLES12, as the distros provide them.
Moved luaver assignment to OHPC_macros. It also checks lua_version first, which is defined under OpenSUSE.
Added updates for Lua 5.3.
Updated python macros, using the built-ins instead guessing based on OS. This section could probably be mostly removed if we updated the macro names in the individual specs to use the built-ins (and ditched Python2 support).
Dropped conditionals for SLES before 12SP3. Kept the SLES12SP4 just in case, but it would make the files easier to read if these were dropped also. Similarly, following new OBS docs and moving sles_version to sle_version.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
Added and then removed the annobin check. There needs to be a better method to bootstrap it.",Merged changes from the current 2.0 branch. Removed Python2 support entirely. Added OpenMPI4. Updated default families.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1097,2019-12-17T03:11:26Z,2020-01-07T16:11:19Z,2020-01-13T20:01:21Z,MERGED,True,77,460,16,https://github.com/jcsiadal,"Update bootstrap/core components (RPM macros, lmod, compiler/mpi setup)",9,[],https://github.com/openhpc/ohpc/pull/1097,https://github.com/jcsiadal,5,https://github.com/openhpc/ohpc/pull/1097#issuecomment-567243096,"Updates the core components needed to launch general build of all OpenSUSE LEAP 15.1 packages.
Tested bootstrap builds on LEAP 15.1, SLES 15, and CentOS 8.
Summary of changes:

Removed all of the distro Lua packages. There are not needed post-SLES12, as the distros provide them.
Moved luaver assignment to OHPC_macros. It also checks lua_version first, which is defined under OpenSUSE.
Added updates for Lua 5.3.
Updated python macros, using the built-ins instead guessing based on OS. This section could probably be mostly removed if we updated the macro names in the individual specs to use the built-ins (and ditched Python2 support).
Dropped conditionals for SLES before 12SP3. Kept the SLES12SP4 just in case, but it would make the files easier to read if these were dropped also. Similarly, following new OBS docs and moving sles_version to sle_version.
Removed conditional conflicts in LMOD. I can install SUSE-built environment-modules and I assume this should be still be a conflict. Similarly, I can get Modules for CentOS.
Added and then removed the annobin check. There needs to be a better method to bootstrap it.",One more addition: added GNU9 and OpenMPI4 to the admin setup scripts. This is needed to support builds with updated compiler families.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1098,2019-12-18T19:24:57Z,2020-03-22T22:21:17Z,2020-09-08T16:34:32Z,CLOSED,False,25,32,2,https://github.com/jcsiadal,Update for Intel devel pkgs,1,[],https://github.com/openhpc/ohpc/pull/1098,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1098,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Current version in 1.3.9 and 2.0 doesn't work correctly. The %{version} tags in command substitution are not escaped, so they're substituted at build time instead of run time.
This update also updates the Intel Parallel Studio XE version to 2020. FYI: compiler version is 19.1.x in PSXE2020.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Current version in 1.3.9 and 2.0 doesn't work correctly. The %{version} tags in command substitution are not escaped, so they're substituted at build time instead of run time.
This update also updates the Intel Parallel Studio XE version to 2020. FYI: compiler version is 19.1.x in PSXE2020.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1098,2019-12-18T19:24:57Z,2020-03-22T22:21:17Z,2020-09-08T16:34:32Z,CLOSED,False,25,32,2,https://github.com/jcsiadal,Update for Intel devel pkgs,1,[],https://github.com/openhpc/ohpc/pull/1098,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1098#issuecomment-602285648,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Current version in 1.3.9 and 2.0 doesn't work correctly. The %{version} tags in command substitution are not escaped, so they're substituted at build time instead of run time.
This update also updates the Intel Parallel Studio XE version to 2020. FYI: compiler version is 19.1.x in PSXE2020.",Will resubmit fixes if needed.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1099,2019-12-19T00:13:57Z,2020-01-22T01:32:09Z,2020-01-22T17:46:53Z,MERGED,True,22,191,4,https://github.com/jcsiadal,Basic update to OpenMPI 4.0.2,5,[],https://github.com/openhpc/ohpc/pull/1099,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1099,"Updates OpenMPI to version 4.0.2. No changes or optimization made other than needed to successfully build and install the package. Left the existing patch in place; it patches, but I haven't confirmed it's needed.
Includes fix for the GNU9 LMOD path, as it still points to gnu8 module deps, which prevents loading the new MPI modules.
I created this to provide an OpenMPI 4.0 package, so I could work on other package builds. This provides the RPM and core files needed.
Reference issue #1080.","Updates OpenMPI to version 4.0.2. No changes or optimization made other than needed to successfully build and install the package. Left the existing patch in place; it patches, but I haven't confirmed it's needed.
Includes fix for the GNU9 LMOD path, as it still points to gnu8 module deps, which prevents loading the new MPI modules.
I created this to provide an OpenMPI 4.0 package, so I could work on other package builds. This provides the RPM and core files needed.
Reference issue #1080.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1099,2019-12-19T00:13:57Z,2020-01-22T01:32:09Z,2020-01-22T17:46:53Z,MERGED,True,22,191,4,https://github.com/jcsiadal,Basic update to OpenMPI 4.0.2,5,[],https://github.com/openhpc/ohpc/pull/1099,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1099#issuecomment-575890596,"Updates OpenMPI to version 4.0.2. No changes or optimization made other than needed to successfully build and install the package. Left the existing patch in place; it patches, but I haven't confirmed it's needed.
Includes fix for the GNU9 LMOD path, as it still points to gnu8 module deps, which prevents loading the new MPI modules.
I created this to provide an OpenMPI 4.0 package, so I could work on other package builds. This provides the RPM and core files needed.
Reference issue #1080.","I tried your patch at https://obs.openhpc.community/package/show/home:adrianr/openmpi4-gnu9 and it needed a rebase to pick up the correct OHPC_macros file and a simple fix to not depend on infinipath-psm: adrianreber@45ebb81
If you include my commit in this PR and rebase it, I would say it is ready to be merged.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1099,2019-12-19T00:13:57Z,2020-01-22T01:32:09Z,2020-01-22T17:46:53Z,MERGED,True,22,191,4,https://github.com/jcsiadal,Basic update to OpenMPI 4.0.2,5,[],https://github.com/openhpc/ohpc/pull/1099,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1099#issuecomment-576837058,"Updates OpenMPI to version 4.0.2. No changes or optimization made other than needed to successfully build and install the package. Left the existing patch in place; it patches, but I haven't confirmed it's needed.
Includes fix for the GNU9 LMOD path, as it still points to gnu8 module deps, which prevents loading the new MPI modules.
I created this to provide an OpenMPI 4.0 package, so I could work on other package builds. This provides the RPM and core files needed.
Reference issue #1080.",Updated with current 2.0 commits and Adrian's patch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1108,2020-01-09T21:30:32Z,2021-12-21T19:45:00Z,2021-12-21T19:45:00Z,CLOSED,False,104,1,1,https://github.com/dhilst,Add support for OpenMPI3 linked with MOFED stack,2,[],https://github.com/openhpc/ohpc/pull/1108,https://github.com/dhilst,1,https://github.com/openhpc/ohpc/pull/1108,Enable support for compiling openmpi libraries with MOFED stack,Enable support for compiling openmpi libraries with MOFED stack,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1109,2020-01-10T14:10:31Z,2020-01-10T14:25:19Z,2020-01-10T14:28:16Z,MERGED,True,15,32,4,https://github.com/koomie,"updates for cmake and lmod (#1103, #1100)",6,[],https://github.com/openhpc/ohpc/pull/1109,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1109,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1110,2020-01-13T12:47:20Z,2020-01-13T14:23:28Z,2020-01-13T15:44:22Z,MERGED,True,57,6843,3,https://github.com/adrianreber,slurm: Upgrade slurm to 19.05.05,1,[],https://github.com/openhpc/ohpc/pull/1110,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1110,"Build tests in OBS: https://obs.openhpc.community/package/show/home:adrianr/slurm
Packages successfully tested on RHEL 8.","Build tests in OBS: https://obs.openhpc.community/package/show/home:adrianr/slurm
Packages successfully tested on RHEL 8.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1111,2020-01-13T15:45:20Z,2020-01-14T14:32:06Z,2020-01-14T14:32:06Z,MERGED,True,6,14,1,https://github.com/adrianreber,clustershell: update to 1.8.3 and switch to python3,1,[],https://github.com/openhpc/ohpc/pull/1111,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1111,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1112,2020-01-14T14:34:52Z,2020-01-22T01:42:21Z,2020-01-22T01:42:22Z,MERGED,True,6,12,1,https://github.com/adrianreber,conman: remove tcp_wrappers from RHEL build,1,[],https://github.com/openhpc/ohpc/pull/1112,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1112,"tcp_wrappers have been deprecated in RHEL 8:
https://bugzilla.redhat.com/show_bug.cgi?id=1495181","tcp_wrappers have been deprecated in RHEL 8:
https://bugzilla.redhat.com/show_bug.cgi?id=1495181",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1114,2020-01-14T16:23:15Z,2020-01-14T16:25:51Z,2020-01-14T16:25:51Z,MERGED,True,2,1,1,https://github.com/adrianreber,clustershell: fix installation as root and non-root,1,[],https://github.com/openhpc/ohpc/pull/1114,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1114,Fix for the build error seen in OBS.,Fix for the build error seen in OBS.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1115,2020-01-14T17:04:37Z,2020-01-14T17:44:13Z,2020-01-14T17:44:13Z,MERGED,True,0,7,1,https://github.com/adrianreber,gnu9: one section for gnu9 is enough,1,[],https://github.com/openhpc/ohpc/pull/1115,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1115,and use that one which actually uses gnu9,and use that one which actually uses gnu9,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1117,2020-01-15T01:30:50Z,2020-03-29T19:01:13Z,2020-11-16T22:25:12Z,CLOSED,False,55,36,3,https://github.com/jcsiadal,Annobin updates for CentOS and OpenSUSE,5,[],https://github.com/openhpc/ohpc/pull/1117,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1117,"First, this fixes a typo for ScientificLinux and deletes the extra gnu9 entry in OHPC_macros.
This update implements the annobin package for CentOS. To avoid the chicken/egg problem, there is a flag to disable OpenHPC ohpc-annobin on any package, if needed. This allows gnu9 and ohpc-annobin to build. ohpc-annobin loads gnu9 and performs a bootstrap build; then rebuilds using itself.
I re-enabled annotation on CentOS 8. I've been rebuilding everything and it doesn't appear to have created additional build fails.
I added Requires needed for annobin to build under OpenSUSE. Have not tested that it works as expected, but it builds without error.","First, this fixes a typo for ScientificLinux and deletes the extra gnu9 entry in OHPC_macros.
This update implements the annobin package for CentOS. To avoid the chicken/egg problem, there is a flag to disable OpenHPC ohpc-annobin on any package, if needed. This allows gnu9 and ohpc-annobin to build. ohpc-annobin loads gnu9 and performs a bootstrap build; then rebuilds using itself.
I re-enabled annotation on CentOS 8. I've been rebuilding everything and it doesn't appear to have created additional build fails.
I added Requires needed for annobin to build under OpenSUSE. Have not tested that it works as expected, but it builds without error.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1117,2020-01-15T01:30:50Z,2020-03-29T19:01:13Z,2020-11-16T22:25:12Z,CLOSED,False,55,36,3,https://github.com/jcsiadal,Annobin updates for CentOS and OpenSUSE,5,[],https://github.com/openhpc/ohpc/pull/1117,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1117#issuecomment-574522626,"First, this fixes a typo for ScientificLinux and deletes the extra gnu9 entry in OHPC_macros.
This update implements the annobin package for CentOS. To avoid the chicken/egg problem, there is a flag to disable OpenHPC ohpc-annobin on any package, if needed. This allows gnu9 and ohpc-annobin to build. ohpc-annobin loads gnu9 and performs a bootstrap build; then rebuilds using itself.
I re-enabled annotation on CentOS 8. I've been rebuilding everything and it doesn't appear to have created additional build fails.
I added Requires needed for annobin to build under OpenSUSE. Have not tested that it works as expected, but it builds without error.","@jcsiadal Thanks for all your work getting annobin working on both OSes. Looks good. Not sure we really need to care about scientific Linux anymore.
There has been some discussion about dropping annobin support for now as long as nothing really breaks. My initial annobin work was motivated because it was not possible to build python packages without annobin support. I especially did not want to rely on annobin from the OS if we ever update to gcc 10. This seems to be fixed now with this : https://bugzilla.redhat.com/show_bug.cgi?id=1634784
It seems we do not have to deal with annobin right now. We probably need to decide if we just want to remove the whole annobin setup from git to not confuse people. All our work on it would then have been for nothing.
We still need to make sure to disable annobin in OHPC_macros to not enable it when building with the OpenHPC compiler.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1117,2020-01-15T01:30:50Z,2020-03-29T19:01:13Z,2020-11-16T22:25:12Z,CLOSED,False,55,36,3,https://github.com/jcsiadal,Annobin updates for CentOS and OpenSUSE,5,[],https://github.com/openhpc/ohpc/pull/1117,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/1117#issuecomment-574667105,"First, this fixes a typo for ScientificLinux and deletes the extra gnu9 entry in OHPC_macros.
This update implements the annobin package for CentOS. To avoid the chicken/egg problem, there is a flag to disable OpenHPC ohpc-annobin on any package, if needed. This allows gnu9 and ohpc-annobin to build. ohpc-annobin loads gnu9 and performs a bootstrap build; then rebuilds using itself.
I re-enabled annotation on CentOS 8. I've been rebuilding everything and it doesn't appear to have created additional build fails.
I added Requires needed for annobin to build under OpenSUSE. Have not tested that it works as expected, but it builds without error.","Yes, I will bring it up for discussion in today's TSC meeting, but I'm in favor of disabling annobin across the board for our builds with the python fix that is in rhel 8.1.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1117,2020-01-15T01:30:50Z,2020-03-29T19:01:13Z,2020-11-16T22:25:12Z,CLOSED,False,55,36,3,https://github.com/jcsiadal,Annobin updates for CentOS and OpenSUSE,5,[],https://github.com/openhpc/ohpc/pull/1117,https://github.com/jcsiadal,4,https://github.com/openhpc/ohpc/pull/1117#issuecomment-574776010,"First, this fixes a typo for ScientificLinux and deletes the extra gnu9 entry in OHPC_macros.
This update implements the annobin package for CentOS. To avoid the chicken/egg problem, there is a flag to disable OpenHPC ohpc-annobin on any package, if needed. This allows gnu9 and ohpc-annobin to build. ohpc-annobin loads gnu9 and performs a bootstrap build; then rebuilds using itself.
I re-enabled annotation on CentOS 8. I've been rebuilding everything and it doesn't appear to have created additional build fails.
I added Requires needed for annobin to build under OpenSUSE. Have not tested that it works as expected, but it builds without error.","Updated this PR. Disables annotation on all OpenHPC builds, but keeps the typo fixes and SPEC update of the annobin package.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1117,2020-01-15T01:30:50Z,2020-03-29T19:01:13Z,2020-11-16T22:25:12Z,CLOSED,False,55,36,3,https://github.com/jcsiadal,Annobin updates for CentOS and OpenSUSE,5,[],https://github.com/openhpc/ohpc/pull/1117,https://github.com/jcsiadal,5,https://github.com/openhpc/ohpc/pull/1117#issuecomment-605683470,"First, this fixes a typo for ScientificLinux and deletes the extra gnu9 entry in OHPC_macros.
This update implements the annobin package for CentOS. To avoid the chicken/egg problem, there is a flag to disable OpenHPC ohpc-annobin on any package, if needed. This allows gnu9 and ohpc-annobin to build. ohpc-annobin loads gnu9 and performs a bootstrap build; then rebuilds using itself.
I re-enabled annotation on CentOS 8. I've been rebuilding everything and it doesn't appear to have created additional build fails.
I added Requires needed for annobin to build under OpenSUSE. Have not tested that it works as expected, but it builds without error.",Closing. Annobin will not be included in 2.0.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1119,2020-01-16T01:07:51Z,2020-03-29T19:03:12Z,2020-09-08T16:34:12Z,CLOSED,False,36,15,23,https://github.com/jcsiadal,Fix library location for OpenSUSE 15.1,1,[],https://github.com/openhpc/ohpc/pull/1119,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1119,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Local builds on OpenSUSE are working, but library files will be located under ""lib64"". On CentOS and SLES12, these libraries are located under ""lib"". This update updates the configuration so that OpenSUSE 15 builds set the prefix correctly. No impact to CentOS 8 builds.
According to my notes, nothing else is needed to get these files building under OpenSUSE 15.
Also includes a few changes from ""sles_version"" to ""sle_version"", since we no longer need to support SLES 11 and earlier.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Local builds on OpenSUSE are working, but library files will be located under ""lib64"". On CentOS and SLES12, these libraries are located under ""lib"". This update updates the configuration so that OpenSUSE 15 builds set the prefix correctly. No impact to CentOS 8 builds.
According to my notes, nothing else is needed to get these files building under OpenSUSE 15.
Also includes a few changes from ""sles_version"" to ""sle_version"", since we no longer need to support SLES 11 and earlier.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1119,2020-01-16T01:07:51Z,2020-03-29T19:03:12Z,2020-09-08T16:34:12Z,CLOSED,False,36,15,23,https://github.com/jcsiadal,Fix library location for OpenSUSE 15.1,1,[],https://github.com/openhpc/ohpc/pull/1119,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1119#issuecomment-605683746,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Local builds on OpenSUSE are working, but library files will be located under ""lib64"". On CentOS and SLES12, these libraries are located under ""lib"". This update updates the configuration so that OpenSUSE 15 builds set the prefix correctly. No impact to CentOS 8 builds.
According to my notes, nothing else is needed to get these files building under OpenSUSE 15.
Also includes a few changes from ""sles_version"" to ""sle_version"", since we no longer need to support SLES 11 and earlier.","I've put in some other PRs that will conflict with this merge, so I'm going to break this into a pull for each library that still needs it.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1120,2020-01-17T21:01:03Z,2020-01-22T01:13:16Z,2020-01-22T17:46:50Z,MERGED,True,84,61,2,https://github.com/jcsiadal,Update likwid to 5.0.1,6,[],https://github.com/openhpc/ohpc/pull/1120,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1120,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Title says it all. Updates likwid to the latest release, updating the OpenHPC specfile with content of the specfile provided by the likwid project.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Title says it all. Updates likwid to the latest release, updating the OpenHPC specfile with content of the specfile provided by the likwid project.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1121,2020-01-20T13:28:26Z,2020-01-22T01:44:12Z,2020-01-22T01:44:12Z,MERGED,True,54,38,8,https://github.com/adrianreber,More changes for 2.0 branch,6,[],https://github.com/openhpc/ohpc/pull/1121,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1121,"I continued to build packages and if #1099 and #1112 are merged this could also be merged.
#1099 needs a simple fix which is included in this PR","I continued to build packages and if #1099 and #1112 are merged this could also be merged.
#1099 needs a simple fix which is included in this PR",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1122,2020-01-21T19:46:58Z,2020-10-21T11:13:53Z,2020-11-16T22:25:11Z,CLOSED,False,1,0,1,https://github.com/jcsiadal,Move license files from/usr/share to %{OHPC_PUB},1,[],https://github.com/openhpc/ohpc/pull/1122,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1122,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Modern RPM specs should use the %license macro instead of the %doc macro for license files, so that licenses are installed even if the user disables documentation. I'm not recommending we change all of the current packages, but only make sure that installation works as intended when the %license macro is used.
Currently, designated license files will install to /usr/share/licenses. This patch moves licenses to %{OHPC_PUB}/doc/licenses.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Modern RPM specs should use the %license macro instead of the %doc macro for license files, so that licenses are installed even if the user disables documentation. I'm not recommending we change all of the current packages, but only make sure that installation works as intended when the %license macro is used.
Currently, designated license files will install to /usr/share/licenses. This patch moves licenses to %{OHPC_PUB}/doc/licenses.",True,{'THUMBS_UP': ['https://github.com/adrianreber']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1123,2020-01-22T06:20:06Z,2020-01-28T02:36:25Z,2020-01-28T02:36:25Z,MERGED,True,204,165,31,https://github.com/adrianreber,More changes for the upcoming 2.0 release,25,[],https://github.com/openhpc/ohpc/pull/1123,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1123,"Continuing to rebuild packages on my 2.0 branch.
All packages available at: https://obs.openhpc.community/project/show/home:adrianr","Continuing to rebuild packages on my 2.0 branch.
All packages available at: https://obs.openhpc.community/project/show/home:adrianr",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1127,2020-01-29T01:36:02Z,2020-01-29T01:41:56Z,2020-01-29T01:41:57Z,MERGED,True,6,3,1,https://github.com/koomie,updated approach for psxe builds in 2.0 series,2,[],https://github.com/openhpc/ohpc/pull/1127,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1127,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1133,2020-02-10T08:01:07Z,2020-02-19T02:19:42Z,2020-02-25T01:18:05Z,MERGED,True,1,5,1,https://github.com/NaohiroTamura,Removed duplicated gnu9,1,[],https://github.com/openhpc/ohpc/pull/1133,https://github.com/NaohiroTamura,1,https://github.com/openhpc/ohpc/pull/1133,"gnu9 is defined from L.79 to L.82.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","gnu9 is defined from L.79 to L.82.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1133,2020-02-10T08:01:07Z,2020-02-19T02:19:42Z,2020-02-25T01:18:05Z,MERGED,True,1,5,1,https://github.com/NaohiroTamura,Removed duplicated gnu9,1,[],https://github.com/openhpc/ohpc/pull/1133,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1133#issuecomment-588001391,"gnu9 is defined from L.79 to L.82.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","Oops. I think that was caught previously, but I must have messed up resolving conflicts from previous merges.  Thanks for the catch.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1133,2020-02-10T08:01:07Z,2020-02-19T02:19:42Z,2020-02-25T01:18:05Z,MERGED,True,1,5,1,https://github.com/NaohiroTamura,Removed duplicated gnu9,1,[],https://github.com/openhpc/ohpc/pull/1133,https://github.com/NaohiroTamura,3,https://github.com/openhpc/ohpc/pull/1133#issuecomment-588133281,"gnu9 is defined from L.79 to L.82.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","@koomie, thanks for merging!",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1136,2020-02-14T10:28:55Z,2020-02-14T14:11:19Z,2020-02-14T14:11:19Z,MERGED,True,140,72,3,https://github.com/boegel,update to EasyBuild v4.1.1,4,[],https://github.com/openhpc/ohpc/pull/1136,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1136,"cfr. #1033
I would like to get rid of the use of the bootstrap script, since pip install EasyBuild works just fine now, so it should be possible to significantly simplify the .spec file, but this will have to do for now...
(WIP because needs proper testing)","cfr. #1033
I would like to get rid of the use of the bootstrap script, since pip install EasyBuild works just fine now, so it should be possible to significantly simplify the .spec file, but this will have to do for now...
(WIP because needs proper testing)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1136,2020-02-14T10:28:55Z,2020-02-14T14:11:19Z,2020-02-14T14:11:19Z,MERGED,True,140,72,3,https://github.com/boegel,update to EasyBuild v4.1.1,4,[],https://github.com/openhpc/ohpc/pull/1136,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1136#issuecomment-586284778,"cfr. #1033
I would like to get rid of the use of the bootstrap script, since pip install EasyBuild works just fine now, so it should be possible to significantly simplify the .spec file, but this will have to do for now...
(WIP because needs proper testing)","Thanks a lot!
@koomie, I verified it in the 2.0 OBS and this builds on CentOS and LEAP. I also like the extended test case. Would that work in our environment?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1137,2020-02-14T14:04:19Z,2020-02-14T14:10:08Z,2020-02-14T14:10:08Z,MERGED,True,18,11,1,https://github.com/adrianreber,2.0 spack,1,[],https://github.com/openhpc/ohpc/pull/1137,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1137,Update for 2.0 branch build tested in OBS,Update for 2.0 branch build tested in OBS,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1138,2020-02-14T15:44:15Z,2020-02-14T15:59:07Z,2020-02-14T16:02:38Z,MERGED,True,1,1,1,https://github.com/adrianreber,easybuild: a macro needs a '%',1,[],https://github.com/openhpc/ohpc/pull/1138,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1138,"@boegel @koomie
There is a single '%' missing and thus the macro is not expanded. Simple fix.","@boegel @koomie
There is a single '%' missing and thus the macro is not expanded. Simple fix.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1138,2020-02-14T15:44:15Z,2020-02-14T15:59:07Z,2020-02-14T16:02:38Z,MERGED,True,1,1,1,https://github.com/adrianreber,easybuild: a macro needs a '%',1,[],https://github.com/openhpc/ohpc/pull/1138,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/1138#issuecomment-586352139,"@boegel @koomie
There is a single '%' missing and thus the macro is not expanded. Simple fix.",Thanks @adrianreber 👍,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1142,2020-02-18T23:24:58Z,2020-02-18T23:28:43Z,2020-02-18T23:28:50Z,MERGED,True,8,3,1,https://github.com/koomie,fixes for genders build on rhel8/leap15,5,[],https://github.com/openhpc/ohpc/pull/1142,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1142,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1143,2020-02-19T02:15:13Z,2020-02-19T02:17:42Z,2020-02-19T02:17:42Z,MERGED,True,3,0,1,https://github.com/koomie,OHPC_macros: add dependency requirement for parallel packages using impi,1,[],https://github.com/openhpc/ohpc/pull/1143,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1143,"family.
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu","family.
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1144,2020-02-19T14:17:12Z,2020-07-17T00:08:00Z,2020-07-17T00:09:52Z,MERGED,True,73,51,12,https://github.com/adrianreber,containers: update OpenHPC containers for 2.0 release,1,[],https://github.com/openhpc/ohpc/pull/1144,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1144,"This updates the OpenHPC based container images to use the upcoming release 2.0. As this has not been released yet, the images are versioned using 1.9.9. Using these images it is, however, possible to early try out small parts of the upcoming OpenHPC 2.0 release.
In addition too the previous images there is now also an image using the OpenHPC compiler and EasyBuild. The EasyBuild integration is not yet working correctly, but let's hope it will be soon.
@koomie I would like to use this as a basis for an article where we could point users to try out the upcoming release. The whole EasyBuild integration is also experimental, but maybe a good starting point which we can use to improve it.","This updates the OpenHPC based container images to use the upcoming release 2.0. As this has not been released yet, the images are versioned using 1.9.9. Using these images it is, however, possible to early try out small parts of the upcoming OpenHPC 2.0 release.
In addition too the previous images there is now also an image using the OpenHPC compiler and EasyBuild. The EasyBuild integration is not yet working correctly, but let's hope it will be soon.
@koomie I would like to use this as a basis for an article where we could point users to try out the upcoming release. The whole EasyBuild integration is also experimental, but maybe a good starting point which we can use to improve it.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1144,2020-02-19T14:17:12Z,2020-07-17T00:08:00Z,2020-07-17T00:09:52Z,MERGED,True,73,51,12,https://github.com/adrianreber,containers: update OpenHPC containers for 2.0 release,1,[],https://github.com/openhpc/ohpc/pull/1144,https://github.com/chuckatkins,2,https://github.com/openhpc/ohpc/pull/1144#issuecomment-617315786,"This updates the OpenHPC based container images to use the upcoming release 2.0. As this has not been released yet, the images are versioned using 1.9.9. Using these images it is, however, possible to early try out small parts of the upcoming OpenHPC 2.0 release.
In addition too the previous images there is now also an image using the OpenHPC compiler and EasyBuild. The EasyBuild integration is not yet working correctly, but let's hope it will be soon.
@koomie I would like to use this as a basis for an article where we could point users to try out the upcoming release. The whole EasyBuild integration is also experimental, but maybe a good starting point which we can use to improve it.","Rather than explicitly adding things to the PATH and LD_LIBRARY_PATH with ENV in the docker file, would it instead be better to setup a default set of modules to load in /etc/profile.d?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1144,2020-02-19T14:17:12Z,2020-07-17T00:08:00Z,2020-07-17T00:09:52Z,MERGED,True,73,51,12,https://github.com/adrianreber,containers: update OpenHPC containers for 2.0 release,1,[],https://github.com/openhpc/ohpc/pull/1144,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/1144#issuecomment-617323072,"This updates the OpenHPC based container images to use the upcoming release 2.0. As this has not been released yet, the images are versioned using 1.9.9. Using these images it is, however, possible to early try out small parts of the upcoming OpenHPC 2.0 release.
In addition too the previous images there is now also an image using the OpenHPC compiler and EasyBuild. The EasyBuild integration is not yet working correctly, but let's hope it will be soon.
@koomie I would like to use this as a basis for an article where we could point users to try out the upcoming release. The whole EasyBuild integration is also experimental, but maybe a good starting point which we can use to improve it.","@chuckatkins Thanks for the interest in this work.

Rather than explicitly adding things to the PATH and LD_LIBRARY_PATH with ENV in the docker file, would it instead be better to setup a default set of modules to load in /etc/profile.d?

That was my first attempt, but if you are running a container you are not running a login shell, so all the usual scripts are not parsed. In my tries it was not possible to have any scripts parsed. Which is really strange but I did not figure it out.
I tried to tell the container to run a login shell with something like this /bin/bash -l -c. This would work, but if there is any space in the command passed to the container it would need to wrapped in quotes:
podman run --rm -v `pwd`/test:/tmp:z quay.io/ohpc/ohpc-gnu9:1.9.9 'gcc -o /tmp/hello /tmp/hello.c'

Which would work, but would be unexpected for the user to have all the commands be surrounded by quotes.
The problem I have is that modules are useless in a container. I have not found a way to load the modules in such a way, that the user can still pass whichever command they need into the container.
Extending the PATH seemed to be most transparent way for a user to use the container without any additional requirements about how the command has to changed from its normal command-line use case.
If you have any solution how to do it better I am happy to include this. I still think it is really strange to not be able to have the shell parse some configuration file, but I tried a few different things and nothing worked.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1144,2020-02-19T14:17:12Z,2020-07-17T00:08:00Z,2020-07-17T00:09:52Z,MERGED,True,73,51,12,https://github.com/adrianreber,containers: update OpenHPC containers for 2.0 release,1,[],https://github.com/openhpc/ohpc/pull/1144,https://github.com/chuckatkins,4,https://github.com/openhpc/ohpc/pull/1144#issuecomment-618148567,"This updates the OpenHPC based container images to use the upcoming release 2.0. As this has not been released yet, the images are versioned using 1.9.9. Using these images it is, however, possible to early try out small parts of the upcoming OpenHPC 2.0 release.
In addition too the previous images there is now also an image using the OpenHPC compiler and EasyBuild. The EasyBuild integration is not yet working correctly, but let's hope it will be soon.
@koomie I would like to use this as a basis for an article where we could point users to try out the upcoming release. The whole EasyBuild integration is also experimental, but maybe a good starting point which we can use to improve it.","This pr caught my eye because I've been using OpenHPC for a while now for the various CI images we use for https://github.com/ornladios/adios2 and I'm always tinkering with them to try to make them better.    I've essentially come up with a way to do it by

setting up the default module environment in a profile.d script
loading the default environment in another profile.d script
wrapping the commands passed in a login shell with a dummy entrypoint shell script with the shebang #!/bin/bash -l

You can see it worked out in a CentOS 7 image with OHPC 1.3.9 and gnu8 + openmpi3 as the modules: https://gist.github.com/chuckatkins/994c8d88fb88f15433b08539162e8ac6
$ docker build foo .
...
$ docker run foo module avail

------------------------ /opt/ohpc/pub/moduledeps/gnu8 -------------------------
   openmpi3/3.1.4 (L)

-------------------------- /opt/ohpc/pub/modulefiles ---------------------------
   gnu8/8.3.0 (L)    prun/1.3

  Where:
   L:  Module is loaded

Use ""module spider"" to find all possible modules.
Use ""module keyword key1 key2 ..."" to search for all possible modules matching
any of the ""keys"".


$ docker run foo gcc --version
gcc (GCC) 8.3.0
Copyright (C) 2018 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

$",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1144,2020-02-19T14:17:12Z,2020-07-17T00:08:00Z,2020-07-17T00:09:52Z,MERGED,True,73,51,12,https://github.com/adrianreber,containers: update OpenHPC containers for 2.0 release,1,[],https://github.com/openhpc/ohpc/pull/1144,https://github.com/adrianreber,5,https://github.com/openhpc/ohpc/pull/1144#issuecomment-618225666,"This updates the OpenHPC based container images to use the upcoming release 2.0. As this has not been released yet, the images are versioned using 1.9.9. Using these images it is, however, possible to early try out small parts of the upcoming OpenHPC 2.0 release.
In addition too the previous images there is now also an image using the OpenHPC compiler and EasyBuild. The EasyBuild integration is not yet working correctly, but let's hope it will be soon.
@koomie I would like to use this as a basis for an article where we could point users to try out the upcoming release. The whole EasyBuild integration is also experimental, but maybe a good starting point which we can use to improve it.",@chuckatkins Thanks a lot. That looks very promising. I will try to include this in this PR.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1144,2020-02-19T14:17:12Z,2020-07-17T00:08:00Z,2020-07-17T00:09:52Z,MERGED,True,73,51,12,https://github.com/adrianreber,containers: update OpenHPC containers for 2.0 release,1,[],https://github.com/openhpc/ohpc/pull/1144,https://github.com/chuckatkins,6,https://github.com/openhpc/ohpc/pull/1144#issuecomment-618232887,"This updates the OpenHPC based container images to use the upcoming release 2.0. As this has not been released yet, the images are versioned using 1.9.9. Using these images it is, however, possible to early try out small parts of the upcoming OpenHPC 2.0 release.
In addition too the previous images there is now also an image using the OpenHPC compiler and EasyBuild. The EasyBuild integration is not yet working correctly, but let's hope it will be soon.
@koomie I would like to use this as a basis for an article where we could point users to try out the upcoming release. The whole EasyBuild integration is also experimental, but maybe a good starting point which we can use to improve it.","Thanks! I've faced a similar problem with additional RUN steps in the image to build dependencies needed for the ci.  In that case though there's no ENTRYPOINT login shell wrapper so I instead manually source the profile to use the modules in the build step for the image, in the case of Intel,
RUN curl -L urlforsource | tar -xz && \
    cd srcdir && \
    . /etc/profile && \
    module load intel openmpi3 && \
    export CC=icc CXX=icpc FC=ifort && \
    ./configure ... && \
   ...

I'm looking forward to the 2.0 release as 1.3.x has been extremely productive for us.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1144,2020-02-19T14:17:12Z,2020-07-17T00:08:00Z,2020-07-17T00:09:52Z,MERGED,True,73,51,12,https://github.com/adrianreber,containers: update OpenHPC containers for 2.0 release,1,[],https://github.com/openhpc/ohpc/pull/1144,https://github.com/adrianreber,7,https://github.com/openhpc/ohpc/pull/1144#issuecomment-658592733,"This updates the OpenHPC based container images to use the upcoming release 2.0. As this has not been released yet, the images are versioned using 1.9.9. Using these images it is, however, possible to early try out small parts of the upcoming OpenHPC 2.0 release.
In addition too the previous images there is now also an image using the OpenHPC compiler and EasyBuild. The EasyBuild integration is not yet working correctly, but let's hope it will be soon.
@koomie I would like to use this as a basis for an article where we could point users to try out the upcoming release. The whole EasyBuild integration is also experimental, but maybe a good starting point which we can use to improve it.","@chuckatkins Updated the containers to use your scripts. Works pretty good. Thanks a lot!
@koomie Can you merge this? The containers are available with the latest and 2.0.0 tags as described in the README.md and this could be added to the final 2.0 announcement.
On a Fedora 31 system I get the following output using one of these containers:
$ podman run --rm quay.io/ohpc/ohpc-gnu9-mpich:2.0.0 module avail
Trying to pull quay.io/ohpc/ohpc-gnu9-mpich:2.0.0...
Getting image source signatures
Copying blob a3ed95caeb02 done  
Copying blob a3ed95caeb02 done  
Copying blob a3ed95caeb02 done  
Copying blob d71c5eab96b2 done  
Copying blob 0b857c1c1b37 done  
Copying blob 43a6eb02a4c1 done  
Copying blob a3ed95caeb02 skipped: already exists  
Copying blob a3ed95caeb02 skipped: already exists  
Copying blob 10ee501cf0ee done  
Copying blob 1fd5ad98a54d done  
Copying blob c14bede4e69a done  
Copying blob 1cad15cc459c done  
Copying blob a5dd42d12c78 done  
Writing manifest to image destination
Storing signatures

------------------------ /opt/ohpc/pub/moduledeps/gnu9 -------------------------
   mpich/3.3.2-ofi (L)

-------------------------- /opt/ohpc/pub/modulefiles ---------------------------
   gnu9/9.2.0 (L)    libfabric/1.10.1 (L)    os    prun/2.0

  Where:
   L:  Module is loaded

Use ""module spider"" to find all possible modules and extensions.
Use ""module keyword key1 key2 ..."" to search for all possible modules matching
any of the ""keys"".

$ podman run --rm quay.io/ohpc/ohpc-gnu9 which gcc
Trying to pull quay.io/ohpc/ohpc-gnu9...
Getting image source signatures
Copying blob 43a6eb02a4c1 skipped: already exists  
Copying blob d71c5eab96b2 skipped: already exists  
Copying blob c14bede4e69a skipped: already exists  
Copying blob 0b857c1c1b37 skipped: already exists  
Copying blob 10ee501cf0ee skipped: already exists  
Copying blob 1fd5ad98a54d skipped: already exists  
Copying blob a3ed95caeb02 done  
Copying blob a3ed95caeb02 done  
Copying blob a3ed95caeb02 done  
Copying blob a3ed95caeb02 done  
Writing manifest to image destination
Storing signatures
/opt/ohpc/pub/compiler/gcc/9.2.0/bin/gcc",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1144,2020-02-19T14:17:12Z,2020-07-17T00:08:00Z,2020-07-17T00:09:52Z,MERGED,True,73,51,12,https://github.com/adrianreber,containers: update OpenHPC containers for 2.0 release,1,[],https://github.com/openhpc/ohpc/pull/1144,https://github.com/koomie,8,https://github.com/openhpc/ohpc/pull/1144#issuecomment-659746450,"This updates the OpenHPC based container images to use the upcoming release 2.0. As this has not been released yet, the images are versioned using 1.9.9. Using these images it is, however, possible to early try out small parts of the upcoming OpenHPC 2.0 release.
In addition too the previous images there is now also an image using the OpenHPC compiler and EasyBuild. The EasyBuild integration is not yet working correctly, but let's hope it will be soon.
@koomie I would like to use this as a basis for an article where we could point users to try out the upcoming release. The whole EasyBuild integration is also experimental, but maybe a good starting point which we can use to improve it.",Looks good to me. Thx.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1145,2020-02-21T14:07:04Z,,2021-08-13T11:18:24Z,OPEN,False,56,0,4,https://github.com/adrianreber,easybuild integration,4,[],https://github.com/openhpc/ohpc/pull/1145,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1145,"With the help of @boegel I was able to create an integration of the OpenHPC compiler into EasyBuild.
In the end it does not really help a lot as no EasyBuild definition is yet aware of this toolchain and only used if explicitly selected (--try-toolchain GCC,9.2.0-ohpc-gnu). It is also not clear how EasyBuild can use the hierarchical module setup of OpenHPC (maybe by combining it into toolchain definitions???), but it is a first step towards a better integration of EasyBuild and OpenHPC.","With the help of @boegel I was able to create an integration of the OpenHPC compiler into EasyBuild.
In the end it does not really help a lot as no EasyBuild definition is yet aware of this toolchain and only used if explicitly selected (--try-toolchain GCC,9.2.0-ohpc-gnu). It is also not clear how EasyBuild can use the hierarchical module setup of OpenHPC (maybe by combining it into toolchain definitions???), but it is a first step towards a better integration of EasyBuild and OpenHPC.",True,{'HOORAY': ['https://github.com/omula']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1145,2020-02-21T14:07:04Z,,2021-08-13T11:18:24Z,OPEN,False,56,0,4,https://github.com/adrianreber,easybuild integration,4,[],https://github.com/openhpc/ohpc/pull/1145,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/1145#issuecomment-589720482,"With the help of @boegel I was able to create an integration of the OpenHPC compiler into EasyBuild.
In the end it does not really help a lot as no EasyBuild definition is yet aware of this toolchain and only used if explicitly selected (--try-toolchain GCC,9.2.0-ohpc-gnu). It is also not clear how EasyBuild can use the hierarchical module setup of OpenHPC (maybe by combining it into toolchain definitions???), but it is a first step towards a better integration of EasyBuild and OpenHPC.","Looks good to me after a quick review.
W.r.t. the easyconfig files like the GCC-9.2.0-ohpc-gnu9.eb that is now added as a part of the EasyBuild installation: would it make sense to collect those in a separate RPM?
It shouldn't be too hard to write a script that spits out all required easyconfig files based on a template for GCC, etc., to populate that RPM...",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1145,2020-02-21T14:07:04Z,,2021-08-13T11:18:24Z,OPEN,False,56,0,4,https://github.com/adrianreber,easybuild integration,4,[],https://github.com/openhpc/ohpc/pull/1145,https://github.com/boegel,3,https://github.com/openhpc/ohpc/pull/1145#issuecomment-742362955,"With the help of @boegel I was able to create an integration of the OpenHPC compiler into EasyBuild.
In the end it does not really help a lot as no EasyBuild definition is yet aware of this toolchain and only used if explicitly selected (--try-toolchain GCC,9.2.0-ohpc-gnu). It is also not clear how EasyBuild can use the hierarchical module setup of OpenHPC (maybe by combining it into toolchain definitions???), but it is a first step towards a better integration of EasyBuild and OpenHPC.",@adrianreber No interest in pursuing this?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1145,2020-02-21T14:07:04Z,,2021-08-13T11:18:24Z,OPEN,False,56,0,4,https://github.com/adrianreber,easybuild integration,4,[],https://github.com/openhpc/ohpc/pull/1145,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/1145#issuecomment-769788182,"With the help of @boegel I was able to create an integration of the OpenHPC compiler into EasyBuild.
In the end it does not really help a lot as no EasyBuild definition is yet aware of this toolchain and only used if explicitly selected (--try-toolchain GCC,9.2.0-ohpc-gnu). It is also not clear how EasyBuild can use the hierarchical module setup of OpenHPC (maybe by combining it into toolchain definitions???), but it is a first step towards a better integration of EasyBuild and OpenHPC.",I would prefer to have this closed. This is over a year old and has not been merged and I doubt it will be merged. I am not really familiar with the changes any more. Better to have it closed than keep it forever open.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1146,2020-02-24T19:37:53Z,2020-02-26T20:01:02Z,2020-02-28T00:26:18Z,MERGED,True,665,713,28,https://github.com/jcsiadal,Update to Warewulf3 Development branch,8,[],https://github.com/openhpc/ohpc/pull/1146,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1146,"Update Warewulf to use the latest development branch supporting CentOS8 and OpenSUSE15.1.
I have confirmed the resulting packages build and install without errors on CentOS 8 and on OpenSUSE LEAP 15.1. I have not tested them yet for operation, so I'm creating this PR in case anyone would like to help validate the packages for cluster installs.
Instead of updating the existing specfiles, this uses the specfiles included with Warewulf and modifies them for OpenHPC format. The  script ohpc/misc/ww-import-spec.sh will generate updated specfiles from Warewulf source. The specs in this PR are unmodified from the output of that script.
Existing patches were updated, or were removed if not applicable or reconcilable with new source.
TO DO: Upstream several of the patches. They include useful checks and fixes that are not OpenHPC-specific.","Update Warewulf to use the latest development branch supporting CentOS8 and OpenSUSE15.1.
I have confirmed the resulting packages build and install without errors on CentOS 8 and on OpenSUSE LEAP 15.1. I have not tested them yet for operation, so I'm creating this PR in case anyone would like to help validate the packages for cluster installs.
Instead of updating the existing specfiles, this uses the specfiles included with Warewulf and modifies them for OpenHPC format. The  script ohpc/misc/ww-import-spec.sh will generate updated specfiles from Warewulf source. The specs in this PR are unmodified from the output of that script.
Existing patches were updated, or were removed if not applicable or reconcilable with new source.
TO DO: Upstream several of the patches. They include useful checks and fixes that are not OpenHPC-specific.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1146,2020-02-24T19:37:53Z,2020-02-26T20:01:02Z,2020-02-28T00:26:18Z,MERGED,True,665,713,28,https://github.com/jcsiadal,Update to Warewulf3 Development branch,8,[],https://github.com/openhpc/ohpc/pull/1146,https://github.com/NaohiroTamura,2,https://github.com/openhpc/ohpc/pull/1146#issuecomment-591850697,"Update Warewulf to use the latest development branch supporting CentOS8 and OpenSUSE15.1.
I have confirmed the resulting packages build and install without errors on CentOS 8 and on OpenSUSE LEAP 15.1. I have not tested them yet for operation, so I'm creating this PR in case anyone would like to help validate the packages for cluster installs.
Instead of updating the existing specfiles, this uses the specfiles included with Warewulf and modifies them for OpenHPC format. The  script ohpc/misc/ww-import-spec.sh will generate updated specfiles from Warewulf source. The specs in this PR are unmodified from the output of that script.
Existing patches were updated, or were removed if not applicable or reconcilable with new source.
TO DO: Upstream several of the patches. They include useful checks and fixes that are not OpenHPC-specific.","@jcsiadal
Compilation on CentOS8.1 was OK in my local environment, but Leap 15.1 was failed due to a missing package ""bsdtar"".
I found your ""bsdtar"" patch [1] into Warewulf3 repository, but this change was removed in your next patch [2].
Is this removal intentionally or accidentally?
Thanks.
Naohiro
[1] Add missing bsdtar to spec
warewulf/warewulf3@0252c1f#diff-887ff84fcee7e115d4c48edd47149c0d
[2] Updated spec files (1st try)
warewulf/warewulf3@634b50c#diff-887ff84fcee7e115d4c48edd47149c0d",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1146,2020-02-24T19:37:53Z,2020-02-26T20:01:02Z,2020-02-28T00:26:18Z,MERGED,True,665,713,28,https://github.com/jcsiadal,Update to Warewulf3 Development branch,8,[],https://github.com/openhpc/ohpc/pull/1146,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1146#issuecomment-592100921,"Update Warewulf to use the latest development branch supporting CentOS8 and OpenSUSE15.1.
I have confirmed the resulting packages build and install without errors on CentOS 8 and on OpenSUSE LEAP 15.1. I have not tested them yet for operation, so I'm creating this PR in case anyone would like to help validate the packages for cluster installs.
Instead of updating the existing specfiles, this uses the specfiles included with Warewulf and modifies them for OpenHPC format. The  script ohpc/misc/ww-import-spec.sh will generate updated specfiles from Warewulf source. The specs in this PR are unmodified from the output of that script.
Existing patches were updated, or were removed if not applicable or reconcilable with new source.
TO DO: Upstream several of the patches. They include useful checks and fixes that are not OpenHPC-specific.","Thank you; it's definitely my error. I need to start using mock so I'm testing RPMs in a more pristine environment--my snapshot VM still includes some non-essential packages.


From: NaohiroTamura <notifications@github.com>
Sent: Thursday, February 27, 2020 12:42 AM
To: openhpc/ohpc <ohpc@noreply.github.com>
Cc: Siadal, Jeremy C <jeremy.c.siadal@intel.com>; Mention <mention@noreply.github.com>
Subject: Re: [openhpc/ohpc] Update to Warewulf3 Development branch (#1146)


@jcsiadal<https://github.com/jcsiadal>
Compilation on CentOS8.1 was OK in my local environment, but Leap 15.1 was failed due to a missing package ""bsdtar"".
I found your ""bsdtar"" patch [1] into Warewulf3 repository, but this change was removed in your next patch [2].
Is this removal intentionally or accidentally?

Thanks.
Naohiro
[1] Add missing bsdtar to spec
warewulf/warewulf3@0252c1f#diff-887ff84fcee7e115d4c48edd47149c0d<warewulf/warewulf3@0252c1f#diff-887ff84fcee7e115d4c48edd47149c0d>
[2] Updated spec files (1st try)
warewulf/warewulf3@634b50c#diff-887ff84fcee7e115d4c48edd47149c0d<warewulf/warewulf3@634b50c#diff-887ff84fcee7e115d4c48edd47149c0d>

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub<#1146?email_source=notifications&email_token=AIWNVI4DHCRE5U6TOL4SDOLRE54FHA5CNFSM4K2P64D2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENDOZSI#issuecomment-591850697>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AIWNVI3RVRIXWXRXMIL3YBTRE54FHANCNFSM4K2P64DQ>.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1146,2020-02-24T19:37:53Z,2020-02-26T20:01:02Z,2020-02-28T00:26:18Z,MERGED,True,665,713,28,https://github.com/jcsiadal,Update to Warewulf3 Development branch,8,[],https://github.com/openhpc/ohpc/pull/1146,https://github.com/NaohiroTamura,4,https://github.com/openhpc/ohpc/pull/1146#issuecomment-592247560,"Update Warewulf to use the latest development branch supporting CentOS8 and OpenSUSE15.1.
I have confirmed the resulting packages build and install without errors on CentOS 8 and on OpenSUSE LEAP 15.1. I have not tested them yet for operation, so I'm creating this PR in case anyone would like to help validate the packages for cluster installs.
Instead of updating the existing specfiles, this uses the specfiles included with Warewulf and modifies them for OpenHPC format. The  script ohpc/misc/ww-import-spec.sh will generate updated specfiles from Warewulf source. The specs in this PR are unmodified from the output of that script.
Existing patches were updated, or were removed if not applicable or reconcilable with new source.
TO DO: Upstream several of the patches. They include useful checks and fixes that are not OpenHPC-specific.","@jcsiadal Thanks for the quick follow up on this!
I understood the situation. That means that  my CentOS 8.1 environment was not pristine too.
And I forgot to mention that Leap 15.1 build was OK after installing ""bsdtar"".",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1147,2020-02-25T19:29:30Z,2020-02-25T19:37:39Z,2020-02-25T19:37:40Z,CLOSED,False,4,1,2,https://github.com/koomie,2.0,2,[],https://github.com/openhpc/ohpc/pull/1147,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1147,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1148,2020-02-25T19:44:45Z,2020-02-25T19:47:02Z,2020-02-25T19:47:03Z,MERGED,True,1,1,1,https://github.com/koomie,mpi-families/mpich: update configure tweaks for arm1 compiler variant,1,[],https://github.com/openhpc/ohpc/pull/1148,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1148,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1149,2020-02-26T01:43:58Z,2020-02-26T01:46:20Z,2020-02-26T01:46:25Z,MERGED,True,1,19,1,https://github.com/koomie,dev-tools/hwloc: updating buildrequires,1,[],https://github.com/openhpc/ohpc/pull/1149,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1149,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1152,2020-03-02T18:56:42Z,2020-03-02T18:58:46Z,2020-03-02T18:58:46Z,MERGED,True,69,33,6,https://github.com/koomie,fixes for warewulf to build under OBS,21,[],https://github.com/openhpc/ohpc/pull/1152,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1152,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1154,2020-03-04T20:10:24Z,2020-03-04T22:31:05Z,2020-09-08T16:34:16Z,MERGED,True,332,355,2,https://github.com/jcsiadal,Update metapackages,1,[],https://github.com/openhpc/ohpc/pull/1154,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1154,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
We're internally testing OpenHPC 2.0 on CentOS 8. This update allows us to install the ohpc-(base, base-compute, and warewulf) meta-packages.
Instead of updating this meta-package independently and duplicating work, I modified the macros to grab default values from OHPC_macros.
The losf was updated to bypass a CentOS7 yum requirement.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
We're internally testing OpenHPC 2.0 on CentOS 8. This update allows us to install the ohpc-(base, base-compute, and warewulf) meta-packages.
Instead of updating this meta-package independently and duplicating work, I modified the macros to grab default values from OHPC_macros.
The losf was updated to bypass a CentOS7 yum requirement.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1154,2020-03-04T20:10:24Z,2020-03-04T22:31:05Z,2020-09-08T16:34:16Z,MERGED,True,332,355,2,https://github.com/jcsiadal,Update metapackages,1,[],https://github.com/openhpc/ohpc/pull/1154,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1154#issuecomment-594897566,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
We're internally testing OpenHPC 2.0 on CentOS 8. This update allows us to install the ohpc-(base, base-compute, and warewulf) meta-packages.
Instead of updating this meta-package independently and duplicating work, I modified the macros to grab default values from OHPC_macros.
The losf was updated to bypass a CentOS7 yum requirement.","I had also updated the metapackages earlier today, but I like what you did to use compiler_family directly. I also missed the chrony change - thanks for that.
I will land this but tweak a few things after the fact. I've been doing away with checks of both sles_version and suse_version as suse_version is set on both Leap and SLES.  And, a quick check seems to show that sle_version is also set on both.
Also, slowly want to start using %{rhel} for the rhel check to avoid an OBS'ism of rhel_version.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1155,2020-03-05T00:55:54Z,2020-03-05T22:07:12Z,2020-03-05T22:07:12Z,CLOSED,False,473,507,220,https://github.com/srinathv,2.0,21,[],https://github.com/openhpc/ohpc/pull/1155,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1155,"*replacement of RPM_OPT_FLAG with ""-O3 -fsimdmath"" and -llapack,-lblas with ""-armpl""

added -fPIC for scotch also
scotch-arm1 and scalapack-arm1-mpich  both OS build in OBS.","*replacement of RPM_OPT_FLAG with ""-O3 -fsimdmath"" and -llapack,-lblas with ""-armpl""

added -fPIC for scotch also
scotch-arm1 and scalapack-arm1-mpich  both OS build in OBS.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1155,2020-03-05T00:55:54Z,2020-03-05T22:07:12Z,2020-03-05T22:07:12Z,CLOSED,False,473,507,220,https://github.com/srinathv,2.0,21,[],https://github.com/openhpc/ohpc/pull/1155,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1155#issuecomment-595238584,"*replacement of RPM_OPT_FLAG with ""-O3 -fsimdmath"" and -llapack,-lblas with ""-armpl""

added -fPIC for scotch also
scotch-arm1 and scalapack-arm1-mpich  both OS build in OBS.","@srinathv, you will need to ""sign"" your commits in order to accept the DCO (https://github.com/openhpc/ohpc/wiki/Contributions)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1155,2020-03-05T00:55:54Z,2020-03-05T22:07:12Z,2020-03-05T22:07:12Z,CLOSED,False,473,507,220,https://github.com/srinathv,2.0,21,[],https://github.com/openhpc/ohpc/pull/1155,https://github.com/srinathv,3,https://github.com/openhpc/ohpc/pull/1155#issuecomment-595251111,"*replacement of RPM_OPT_FLAG with ""-O3 -fsimdmath"" and -llapack,-lblas with ""-armpl""

added -fPIC for scotch also
scotch-arm1 and scalapack-arm1-mpich  both OS build in OBS.","I see . that I need to use ""git commit -s"" on commits to sing off.  How
do I do that to past commits?

Thank you for your time.
===============
Srinath Vadlamani
===============
…
On Thu, Mar 5, 2020 at 6:48 AM Karl W. Schulz ***@***.***> wrote:
 @srinathv <https://github.com/srinathv>, you will need to ""sign"" your
 commits in order to accept the DCO (
 https://github.com/openhpc/ohpc/wiki/Contributions)

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#1155?email_source=notifications&email_token=AAEO6CK5DF2JVQGPAP4QELDRF6UR7A5CNFSM4LB7HRC2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEN5J5OA#issuecomment-595238584>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AAEO6COTFYMYM2XPGDWIES3RF6UR7ANCNFSM4LB7HRCQ>
 .",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1155,2020-03-05T00:55:54Z,2020-03-05T22:07:12Z,2020-03-05T22:07:12Z,CLOSED,False,473,507,220,https://github.com/srinathv,2.0,21,[],https://github.com/openhpc/ohpc/pull/1155,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/1155#issuecomment-595252609,"*replacement of RPM_OPT_FLAG with ""-O3 -fsimdmath"" and -llapack,-lblas with ""-armpl""

added -fPIC for scotch also
scotch-arm1 and scalapack-arm1-mpich  both OS build in OBS.","You can amend specific commits or use filter-branch to sign the last n commits. See, for example: https://gist.github.com/kwk/d70f20d17b18c4f3296d",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1155,2020-03-05T00:55:54Z,2020-03-05T22:07:12Z,2020-03-05T22:07:12Z,CLOSED,False,473,507,220,https://github.com/srinathv,2.0,21,[],https://github.com/openhpc/ohpc/pull/1155,https://github.com/srinathv,5,https://github.com/openhpc/ohpc/pull/1155#issuecomment-595253562,"*replacement of RPM_OPT_FLAG with ""-O3 -fsimdmath"" and -llapack,-lblas with ""-armpl""

added -fPIC for scotch also
scotch-arm1 and scalapack-arm1-mpich  both OS build in OBS.","I followed :
https://github.com/openhpc/ohpc/pull/1155/checks
but still see sign off issues.
Thank you for your time.
===============
Srinath Vadlamani
===============


On Thu, Mar 5, 2020 at 7:15 AM Srinath Vadlamani <
srinath.vadlamani@gmail.com> wrote:
…
 I see . that I need to use ""git commit -s"" on commits to sing off.  How
 do I do that to past commits?

 Thank you for your time.
 ===============
 Srinath Vadlamani
 ===============


 On Thu, Mar 5, 2020 at 6:48 AM Karl W. Schulz ***@***.***>
 wrote:

> @srinathv <https://github.com/srinathv>, you will need to ""sign"" your
> commits in order to accept the DCO (
> https://github.com/openhpc/ohpc/wiki/Contributions)
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <#1155?email_source=notifications&email_token=AAEO6CK5DF2JVQGPAP4QELDRF6UR7A5CNFSM4LB7HRC2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEN5J5OA#issuecomment-595238584>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AAEO6COTFYMYM2XPGDWIES3RF6UR7ANCNFSM4LB7HRCQ>
> .
>",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1155,2020-03-05T00:55:54Z,2020-03-05T22:07:12Z,2020-03-05T22:07:12Z,CLOSED,False,473,507,220,https://github.com/srinathv,2.0,21,[],https://github.com/openhpc/ohpc/pull/1155,https://github.com/srinathv,6,https://github.com/openhpc/ohpc/pull/1155#issuecomment-595254726,"*replacement of RPM_OPT_FLAG with ""-O3 -fsimdmath"" and -llapack,-lblas with ""-armpl""

added -fPIC for scotch also
scotch-arm1 and scalapack-arm1-mpich  both OS build in OBS.","It appears there are 4 commits that have a bad email address for Karl.
Thank you for your time.
===============
Srinath Vadlamani
===============


On Thu, Mar 5, 2020 at 7:20 AM Srinath Vadlamani <
srinath.vadlamani@gmail.com> wrote:
…
 I followed :
 https://github.com/openhpc/ohpc/pull/1155/checks
 but still see sign off issues.
 Thank you for your time.
 ===============
 Srinath Vadlamani
 ===============


 On Thu, Mar 5, 2020 at 7:15 AM Srinath Vadlamani <
 ***@***.***> wrote:

> I see . that I need to use ""git commit -s"" on commits to sing off.  How
> do I do that to past commits?
>
> Thank you for your time.
> ===============
> Srinath Vadlamani
> ===============
>
>
> On Thu, Mar 5, 2020 at 6:48 AM Karl W. Schulz ***@***.***>
> wrote:
>
>> @srinathv <https://github.com/srinathv>, you will need to ""sign"" your
>> commits in order to accept the DCO (
>> https://github.com/openhpc/ohpc/wiki/Contributions)
>>
>> —
>> You are receiving this because you were mentioned.
>> Reply to this email directly, view it on GitHub
>> <#1155?email_source=notifications&email_token=AAEO6CK5DF2JVQGPAP4QELDRF6UR7A5CNFSM4LB7HRC2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEN5J5OA#issuecomment-595238584>,
>> or unsubscribe
>> <https://github.com/notifications/unsubscribe-auth/AAEO6COTFYMYM2XPGDWIES3RF6UR7ANCNFSM4LB7HRCQ>
>> .
>>
>",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1155,2020-03-05T00:55:54Z,2020-03-05T22:07:12Z,2020-03-05T22:07:12Z,CLOSED,False,473,507,220,https://github.com/srinathv,2.0,21,[],https://github.com/openhpc/ohpc/pull/1155,https://github.com/koomie,7,https://github.com/openhpc/ohpc/pull/1155#issuecomment-595262692,"*replacement of RPM_OPT_FLAG with ""-O3 -fsimdmath"" and -llapack,-lblas with ""-armpl""

added -fPIC for scotch also
scotch-arm1 and scalapack-arm1-mpich  both OS build in OBS.","I think you have gotten yourself in a pickle with your merges from upstream (and you have now signed commits that were not your changes). You should probably be rebasing your changes on top of the upstream changes for a clean PR.
If it's not too much trouble, I'd suggest branching again from the current 2.0  in your fork and apply your changes for a new PR.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1156,2020-03-05T14:58:07Z,2020-03-05T15:16:14Z,2020-03-05T15:16:14Z,MERGED,True,1,1,1,https://github.com/NaohiroTamura,Fixed wwbootstrap kernel file check problem,1,[],https://github.com/openhpc/ohpc/pull/1156,https://github.com/NaohiroTamura,1,https://github.com/openhpc/ohpc/pull/1156,"This patch fixed kernel file check condition so that wwbootstrap can
exit if and only if neither vmlinuz-$opt_kversion nor
vmlinux-$opt_kversion.gz exist.
Without this fix, wwbootstrap doesn't stop even though /boot is
empty.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","This patch fixed kernel file check condition so that wwbootstrap can
exit if and only if neither vmlinuz-$opt_kversion nor
vmlinux-$opt_kversion.gz exist.
Without this fix, wwbootstrap doesn't stop even though /boot is
empty.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1157,2020-03-07T00:28:19Z,2020-03-07T15:18:57Z,2020-03-07T15:18:57Z,MERGED,True,7,6,2,https://github.com/srinathv,2.0,6,[],https://github.com/openhpc/ohpc/pull/1157,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1157,serial scotch and scalapack w/ mpich now build with arm1,serial scotch and scalapack w/ mpich now build with arm1,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1161,2020-03-09T19:59:36Z,2020-03-09T20:49:20Z,2020-03-09T20:49:20Z,MERGED,True,57,9,3,https://github.com/srinathv,2.0,6,[],https://github.com/openhpc/ohpc/pull/1161,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1161,superlu serial now builds with arm1.,superlu serial now builds with arm1.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1162,2020-03-11T15:22:22Z,2020-10-21T11:13:54Z,2020-10-21T11:13:54Z,CLOSED,False,12,2,1,https://github.com/TomTheBear,[LIKWID] Version bump to 5.0.1 and add support for ARM builds,1,[],https://github.com/openhpc/ohpc/pull/1162,https://github.com/TomTheBear,1,https://github.com/openhpc/ohpc/pull/1162,"Update version to newest (5.0.1)
Add compiler check for builds on ARM platforms (COMPILER=ARMCLANG)","Update version to newest (5.0.1)
Add compiler check for builds on ARM platforms (COMPILER=ARMCLANG)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1164,2020-03-11T19:32:24Z,2020-03-11T19:52:58Z,2020-03-11T19:52:58Z,MERGED,True,28,170,5,https://github.com/srinathv,2.0,19,[],https://github.com/openhpc/ohpc/pull/1164,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1164,Mumps on OBS now builds with arm compiler for openmpi4 and mpich with opt for both c and fortran compilers.,Mumps on OBS now builds with arm compiler for openmpi4 and mpich with opt for both c and fortran compilers.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1166,2020-03-16T02:23:42Z,2020-06-16T07:05:23Z,2020-06-16T07:05:23Z,CLOSED,False,90,39,6,https://github.com/jcsiadal,Boost update for PSXE 2020,1,[],https://github.com/openhpc/ohpc/pull/1166,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1166,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
This updates boost to build with Intel nextgen switch. Unfortunately, ICC then switches to a clang backend, but b2 continues to use old ICC switches. Options like xCORE cause the nextgen ICC to crash.
I did a rather hacky update using sed to fix up a bunch of files. This should be more cleanly migrated to a patchfile (and merged with the current Intel patch). In the event I can't work on this over the next few weeks, I wanted to get the changes uploaded.
The reason for so many ""-O3"" replacements is that it's a fast and safe method to replace a switch I need to remove. I would clean these up after I can review the patched files.
Other updates:
Depending on what backend compiler is needed, Intel MPI uses different wrappers. Instead of confining this to boost, I added new macros to OHPC_macros. There's a table of the correct wrapper in our docs. Also should note that some other OpenHPC components could be using the wrong wrapper.
Made patch names consistent with each other. I don't see a need for the version in the name, since a patch either applies to the current package version or it should be deleted.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
This updates boost to build with Intel nextgen switch. Unfortunately, ICC then switches to a clang backend, but b2 continues to use old ICC switches. Options like xCORE cause the nextgen ICC to crash.
I did a rather hacky update using sed to fix up a bunch of files. This should be more cleanly migrated to a patchfile (and merged with the current Intel patch). In the event I can't work on this over the next few weeks, I wanted to get the changes uploaded.
The reason for so many ""-O3"" replacements is that it's a fast and safe method to replace a switch I need to remove. I would clean these up after I can review the patched files.
Other updates:
Depending on what backend compiler is needed, Intel MPI uses different wrappers. Instead of confining this to boost, I added new macros to OHPC_macros. There's a table of the correct wrapper in our docs. Also should note that some other OpenHPC components could be using the wrong wrapper.
Made patch names consistent with each other. I don't see a need for the version in the name, since a patch either applies to the current package version or it should be deleted.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1166,2020-03-16T02:23:42Z,2020-06-16T07:05:23Z,2020-06-16T07:05:23Z,CLOSED,False,90,39,6,https://github.com/jcsiadal,Boost update for PSXE 2020,1,[],https://github.com/openhpc/ohpc/pull/1166,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1166#issuecomment-605683244,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
This updates boost to build with Intel nextgen switch. Unfortunately, ICC then switches to a clang backend, but b2 continues to use old ICC switches. Options like xCORE cause the nextgen ICC to crash.
I did a rather hacky update using sed to fix up a bunch of files. This should be more cleanly migrated to a patchfile (and merged with the current Intel patch). In the event I can't work on this over the next few weeks, I wanted to get the changes uploaded.
The reason for so many ""-O3"" replacements is that it's a fast and safe method to replace a switch I need to remove. I would clean these up after I can review the patched files.
Other updates:
Depending on what backend compiler is needed, Intel MPI uses different wrappers. Instead of confining this to boost, I added new macros to OHPC_macros. There's a table of the correct wrapper in our docs. Also should note that some other OpenHPC components could be using the wrong wrapper.
Made patch names consistent with each other. I don't see a need for the version in the name, since a patch either applies to the current package version or it should be deleted.","Per last TSC, @koomie will loop back on whether to implement the nextgen switch, or if the issue has been resolved in the next boost release. Putting this on hold for now.
If we do need to fix this, I'll own getting a proper patchfile implemented.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1166,2020-03-16T02:23:42Z,2020-06-16T07:05:23Z,2020-06-16T07:05:23Z,CLOSED,False,90,39,6,https://github.com/jcsiadal,Boost update for PSXE 2020,1,[],https://github.com/openhpc/ohpc/pull/1166,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/1166#issuecomment-610644990,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
This updates boost to build with Intel nextgen switch. Unfortunately, ICC then switches to a clang backend, but b2 continues to use old ICC switches. Options like xCORE cause the nextgen ICC to crash.
I did a rather hacky update using sed to fix up a bunch of files. This should be more cleanly migrated to a patchfile (and merged with the current Intel patch). In the event I can't work on this over the next few weeks, I wanted to get the changes uploaded.
The reason for so many ""-O3"" replacements is that it's a fast and safe method to replace a switch I need to remove. I would clean these up after I can review the patched files.
Other updates:
Depending on what backend compiler is needed, Intel MPI uses different wrappers. Instead of confining this to boost, I added new macros to OHPC_macros. There's a table of the correct wrapper in our docs. Also should note that some other OpenHPC components could be using the wrong wrapper.
Made patch names consistent with each other. I don't see a need for the version in the name, since a patch either applies to the current package version or it should be deleted.","I ended up creating a standalone patch for the bjam files that you were changing with sed.  This allowed the intel compiler variant builds to complete. Not all of the tests are passing in CI though with some undefined references when compiling some example programs against the installed boost built with nextgen option. The version of boost we're building for ohpc 2.0 all passes for gcc9, so this may be an issue mixing oldgen/nextgen intel libs.
I'll try to grab a snapshot when this configuration rolls around again in CI.
Separate comment on the wrapper business. We set things up with the compatibility package for impi such that mpicc maps to mpiicc when the intel variant is loaded. This is intentional to make things easier for the end user as most just assume mpicc is what they want.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1166,2020-03-16T02:23:42Z,2020-06-16T07:05:23Z,2020-06-16T07:05:23Z,CLOSED,False,90,39,6,https://github.com/jcsiadal,Boost update for PSXE 2020,1,[],https://github.com/openhpc/ohpc/pull/1166,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/1166#issuecomment-610661988,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
This updates boost to build with Intel nextgen switch. Unfortunately, ICC then switches to a clang backend, but b2 continues to use old ICC switches. Options like xCORE cause the nextgen ICC to crash.
I did a rather hacky update using sed to fix up a bunch of files. This should be more cleanly migrated to a patchfile (and merged with the current Intel patch). In the event I can't work on this over the next few weeks, I wanted to get the changes uploaded.
The reason for so many ""-O3"" replacements is that it's a fast and safe method to replace a switch I need to remove. I would clean these up after I can review the patched files.
Other updates:
Depending on what backend compiler is needed, Intel MPI uses different wrappers. Instead of confining this to boost, I added new macros to OHPC_macros. There's a table of the correct wrapper in our docs. Also should note that some other OpenHPC components could be using the wrong wrapper.
Made patch names consistent with each other. I don't see a need for the version in the name, since a patch either applies to the current package version or it should be deleted.","Unfortunately, this issue turns out to be what I was most worried about. Most of our Boost tests work I suspect because a lot of Boost is header only. However, when you need to link against a lib that was  compiled with -qnextgen and you are not using that flag for the current compilation, you can get unresolved C++ symbols. Here is an example that we see with an ohpc test trying to link against Boost's regex library
compile example code that ships with boost 1.71.0 with -qnextgen option.  Works fine.
karl@sms001 test (2.0) $ icpc -qnextgen -I/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include -g -O2 -L/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/lib  -lboost_regex named_subexpressions_test.cpp 
karl@sms001 test (2.0) $ ./a.out
karl@sms001 test (2.0) $ echo $?
0

compile example code that ships with boost 1.71.0 without -qnextgen option. It no workie.
karl@sms001 test (2.0) $ icpc -I/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include -g -O2 -L/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/lib  -lboost_regex named_subexpressions_test.cpp 
/tmp/icpcbunIMt.o: In function `boost::basic_regex<wchar_t, boost::regex_traits<wchar_t, boost::cpp_regex_traits<wchar_t> > >::assign(wchar_t const*, wchar_t const*, unsigned int)':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/basic_regex.hpp:387: undefined reference to `boost::basic_regex<wchar_t, boost::regex_traits<wchar_t, boost::cpp_regex_traits<wchar_t> > >::do_assign(wchar_t const*, wchar_t const*, unsigned int)'
/tmp/icpcbunIMt.o: In function `boost::re_detail_107100::perl_matcher<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> >, boost::regex_traits<wchar_t, boost::cpp_regex_traits<wchar_t> > >::perl_matcher(wchar_t const*, wchar_t const*, boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > >&, boost::basic_regex<wchar_t, boost::regex_traits<wchar_t, boost::cpp_regex_traits<wchar_t> > > const&, boost::regex_constants::_match_flags, wchar_t const*)':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher.hpp:391: undefined reference to `boost::re_detail_107100::perl_matcher<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> >, boost::regex_traits<wchar_t, boost::cpp_regex_traits<wchar_t> > >::construct_init(boost::basic_regex<wchar_t, boost::regex_traits<wchar_t, boost::cpp_regex_traits<wchar_t> > > const&, boost::regex_constants::_match_flags)'
/tmp/icpcbunIMt.o: In function `boost::basic_regex<char, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::assign(char const*, char const*, unsigned int)':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/basic_regex.hpp:387: undefined reference to `boost::basic_regex<char, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::do_assign(char const*, char const*, unsigned int)'
/tmp/icpcbunIMt.o: In function `boost::re_detail_107100::perl_matcher<char const*, std::allocator<boost::sub_match<char const*> >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::perl_matcher(char const*, char const*, boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > >&, boost::basic_regex<char, boost::regex_traits<char, boost::cpp_regex_traits<char> > > const&, boost::regex_constants::_match_flags, char const*)':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher.hpp:391: undefined reference to `boost::re_detail_107100::perl_matcher<char const*, std::allocator<boost::sub_match<char const*> >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::construct_init(boost::basic_regex<char, boost::regex_traits<char, boost::cpp_regex_traits<char> > > const&, boost::regex_constants::_match_flags)'
/tmp/icpcbunIMt.o: In function `boost::re_detail_107100::perl_matcher<char const*, std::allocator<boost::sub_match<char const*> >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::match_prefix()':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > >::maybe_assign(boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > > const&)'
/tmp/icpcbunIMt.o: In function `boost::re_detail_107100::perl_matcher<char const*, std::allocator<boost::sub_match<char const*> >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::match_match()':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_non_recursive.hpp:1108: undefined reference to `boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > >::maybe_assign(boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > > const&)'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<char>::transform[abi:cxx11](char const*, char const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:962: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<char>::transform[abi:cxx11](char const*, char const*) const'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<char>::transform_primary[abi:cxx11](char const*, char const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:966: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<char>::transform_primary[abi:cxx11](char const*, char const*) const'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<char>::transform[abi:cxx11](char const*, char const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:962: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<char>::transform[abi:cxx11](char const*, char const*) const'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<char>::transform_primary[abi:cxx11](char const*, char const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:966: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<char>::transform_primary[abi:cxx11](char const*, char const*) const'
/tmp/icpcbunIMt.o: In function `boost::re_detail_107100::perl_matcher<char const*, std::allocator<boost::sub_match<char const*> >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::match_prefix()':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > >::maybe_assign(boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > > const&)'
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > >::maybe_assign(boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > > const&)'
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > >::maybe_assign(boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > > const&)'
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > >::maybe_assign(boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > > const&)'
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > >::maybe_assign(boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > > const&)'
/tmp/icpcbunIMt.o:/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: more undefined references to `boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > >::maybe_assign(boost::match_results<char const*, std::allocator<boost::sub_match<char const*> > > const&)' follow
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<char>::transform[abi:cxx11](char const*, char const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:962: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<char>::transform[abi:cxx11](char const*, char const*) const'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<char>::transform_primary[abi:cxx11](char const*, char const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:966: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<char>::transform_primary[abi:cxx11](char const*, char const*) const'
/tmp/icpcbunIMt.o: In function `boost::re_detail_107100::perl_matcher<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> >, boost::regex_traits<wchar_t, boost::cpp_regex_traits<wchar_t> > >::match_prefix()':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > >::maybe_assign(boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > > const&)'
/tmp/icpcbunIMt.o: In function `boost::re_detail_107100::perl_matcher<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> >, boost::regex_traits<wchar_t, boost::cpp_regex_traits<wchar_t> > >::match_match()':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_non_recursive.hpp:1108: undefined reference to `boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > >::maybe_assign(boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > > const&)'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<wchar_t>::transform[abi:cxx11](wchar_t const*, wchar_t const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:962: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<wchar_t>::transform[abi:cxx11](wchar_t const*, wchar_t const*) const'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<wchar_t>::transform_primary[abi:cxx11](wchar_t const*, wchar_t const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:966: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<wchar_t>::transform_primary[abi:cxx11](wchar_t const*, wchar_t const*) const'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<wchar_t>::transform[abi:cxx11](wchar_t const*, wchar_t const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:962: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<wchar_t>::transform[abi:cxx11](wchar_t const*, wchar_t const*) const'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<wchar_t>::transform_primary[abi:cxx11](wchar_t const*, wchar_t const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:966: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<wchar_t>::transform_primary[abi:cxx11](wchar_t const*, wchar_t const*) const'
/tmp/icpcbunIMt.o: In function `boost::re_detail_107100::perl_matcher<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> >, boost::regex_traits<wchar_t, boost::cpp_regex_traits<wchar_t> > >::match_prefix()':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > >::maybe_assign(boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > > const&)'
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > >::maybe_assign(boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > > const&)'
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > >::maybe_assign(boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > > const&)'
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > >::maybe_assign(boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > > const&)'
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: undefined reference to `boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > >::maybe_assign(boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > > const&)'
/tmp/icpcbunIMt.o:/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/perl_matcher_common.hpp:346: more undefined references to `boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > >::maybe_assign(boost::match_results<wchar_t const*, std::allocator<boost::sub_match<wchar_t const*> > > const&)' follow
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<wchar_t>::transform[abi:cxx11](wchar_t const*, wchar_t const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:962: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<wchar_t>::transform[abi:cxx11](wchar_t const*, wchar_t const*) const'
/tmp/icpcbunIMt.o: In function `boost::cpp_regex_traits<wchar_t>::transform_primary[abi:cxx11](wchar_t const*, wchar_t const*) const':
/opt/ohpc/pub/libs/intel/openmpi4/boost/1.71.0/include/boost/regex/v4/cpp_regex_traits.hpp:966: undefined reference to `boost::re_detail_107100::cpp_regex_traits_implementation<wchar_t>::transform_primary[abi:cxx11](wchar_t const*, wchar_t const*) const'",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1166,2020-03-16T02:23:42Z,2020-06-16T07:05:23Z,2020-06-16T07:05:23Z,CLOSED,False,90,39,6,https://github.com/jcsiadal,Boost update for PSXE 2020,1,[],https://github.com/openhpc/ohpc/pull/1166,https://github.com/jcsiadal,5,https://github.com/openhpc/ohpc/pull/1166#issuecomment-611860060,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
This updates boost to build with Intel nextgen switch. Unfortunately, ICC then switches to a clang backend, but b2 continues to use old ICC switches. Options like xCORE cause the nextgen ICC to crash.
I did a rather hacky update using sed to fix up a bunch of files. This should be more cleanly migrated to a patchfile (and merged with the current Intel patch). In the event I can't work on this over the next few weeks, I wanted to get the changes uploaded.
The reason for so many ""-O3"" replacements is that it's a fast and safe method to replace a switch I need to remove. I would clean these up after I can review the patched files.
Other updates:
Depending on what backend compiler is needed, Intel MPI uses different wrappers. Instead of confining this to boost, I added new macros to OHPC_macros. There's a table of the correct wrapper in our docs. Also should note that some other OpenHPC components could be using the wrong wrapper.
Made patch names consistent with each other. I don't see a need for the version in the name, since a patch either applies to the current package version or it should be deleted.","The current implementation of handling impi wrappers isn't correct. The main mpi compiler binary uses argv[0] to determine which compiler to call, so a softlink from mpicc to mpiicc will always use the gcc compiler, just like calling mpicc directly.
In general, an OSS project shouldn't be writing into commercial software installations.
I'm working on IMB and it's very fussy about wrappers being set correctly. Even with gcc/mpich, CXX must point to mpich mpicc or it will fail to build. I can't see anywhere that this is set in macros or modules.
With the approval of ohpc_cc, ohpc_cxx, etc, configuration should be moved into either ohpc_seetup_mpi, or into the individual lmods. I'd be happy to get a PR in right away; just need to figure out where the config should go.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1166,2020-03-16T02:23:42Z,2020-06-16T07:05:23Z,2020-06-16T07:05:23Z,CLOSED,False,90,39,6,https://github.com/jcsiadal,Boost update for PSXE 2020,1,[],https://github.com/openhpc/ohpc/pull/1166,https://github.com/koomie,6,https://github.com/openhpc/ohpc/pull/1166#issuecomment-614913971,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
This updates boost to build with Intel nextgen switch. Unfortunately, ICC then switches to a clang backend, but b2 continues to use old ICC switches. Options like xCORE cause the nextgen ICC to crash.
I did a rather hacky update using sed to fix up a bunch of files. This should be more cleanly migrated to a patchfile (and merged with the current Intel patch). In the event I can't work on this over the next few weeks, I wanted to get the changes uploaded.
The reason for so many ""-O3"" replacements is that it's a fast and safe method to replace a switch I need to remove. I would clean these up after I can review the patched files.
Other updates:
Depending on what backend compiler is needed, Intel MPI uses different wrappers. Instead of confining this to boost, I added new macros to OHPC_macros. There's a table of the correct wrapper in our docs. Also should note that some other OpenHPC components could be using the wrong wrapper.
Made patch names consistent with each other. I don't see a need for the version in the name, since a patch either applies to the current package version or it should be deleted.","gcc:
[test@sms001 ~]$ module list

Currently Loaded Modules:
  1) autotools   2) prun/2.0   3) gnu9/9.2.0   4) openmpi4/4.0.3   5) ohpc

[test@sms001 ~]$ mpicc -show
gcc -I/opt/ohpc/pub/mpi/openmpi4-gnu9/4.0.3/include -pthread -Wl,-rpath -Wl,/opt/ohpc/pub/mpi/openmpi4-gnu9/4.0.3/lib -Wl,--enable-new-dtags -L/opt/ohpc/pub/mpi/openmpi4-gnu9/4.0.3/lib -lmpi


intel:
[test@sms001 ~]$ module swap gnu9 intel

The following have been reloaded with a version change:
  1) openmpi4/4.0.3 => openmpi4/4.0.2

[test@sms001 ~]$ mpicc -show
icc -I/opt/ohpc/pub/mpi/openmpi4-intel/4.0.2/include -pthread -Wl,-rpath -Wl,/opt/ohpc/pub/mpi/openmpi4-intel/4.0.2/lib -Wl,--enable-new-dtags -L/opt/ohpc/pub/mpi/openmpi4-intel/4.0.2/lib -lmpi",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1166,2020-03-16T02:23:42Z,2020-06-16T07:05:23Z,2020-06-16T07:05:23Z,CLOSED,False,90,39,6,https://github.com/jcsiadal,Boost update for PSXE 2020,1,[],https://github.com/openhpc/ohpc/pull/1166,https://github.com/jcsiadal,7,https://github.com/openhpc/ohpc/pull/1166#issuecomment-644575050,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
This updates boost to build with Intel nextgen switch. Unfortunately, ICC then switches to a clang backend, but b2 continues to use old ICC switches. Options like xCORE cause the nextgen ICC to crash.
I did a rather hacky update using sed to fix up a bunch of files. This should be more cleanly migrated to a patchfile (and merged with the current Intel patch). In the event I can't work on this over the next few weeks, I wanted to get the changes uploaded.
The reason for so many ""-O3"" replacements is that it's a fast and safe method to replace a switch I need to remove. I would clean these up after I can review the patched files.
Other updates:
Depending on what backend compiler is needed, Intel MPI uses different wrappers. Instead of confining this to boost, I added new macros to OHPC_macros. There's a table of the correct wrapper in our docs. Also should note that some other OpenHPC components could be using the wrong wrapper.
Made patch names consistent with each other. I don't see a need for the version in the name, since a patch either applies to the current package version or it should be deleted.","Finally have boost building with Intel v19 compiler without using the nextgen switch. Still a fair amount of cleanup to go, then testing on OpenSUSE.
Update will be a fair amount of changes from this pull request, so I'm closing.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1167,2020-03-16T19:41:08Z,2020-03-19T15:48:39Z,2020-03-19T15:48:39Z,MERGED,True,6,7,2,https://github.com/srinathv,"Revert ""2.0""",1,[],https://github.com/openhpc/ohpc/pull/1167,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1167,"Reverts #1157
Arm IP approval is still under consideration.","Reverts #1157
Arm IP approval is still under consideration.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1168,2020-03-16T20:55:05Z,2020-03-19T15:48:23Z,2020-03-19T15:48:23Z,MERGED,True,170,28,5,https://github.com/srinathv,"Revert ""2.0""",1,[],https://github.com/openhpc/ohpc/pull/1168,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1168,"Reverts #1164
Approval IP is in progress.","Reverts #1164
Approval IP is in progress.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1169,2020-03-19T09:43:47Z,2020-03-19T15:27:32Z,2020-03-25T07:53:59Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild 4.1.2,1,[],https://github.com/openhpc/ohpc/pull/1169,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1169,"EasyBuild v4.1.2 includes an important security fix, see https://lists.ugent.be/wws/arc/easybuild/2020-03/msg00030.html for more information.","EasyBuild v4.1.2 includes an important security fix, see https://lists.ugent.be/wws/arc/easybuild/2020-03/msg00030.html for more information.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1169,2020-03-19T09:43:47Z,2020-03-19T15:27:32Z,2020-03-25T07:53:59Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild 4.1.2,1,[],https://github.com/openhpc/ohpc/pull/1169,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1169#issuecomment-603689387,"EasyBuild v4.1.2 includes an important security fix, see https://lists.ugent.be/wws/arc/easybuild/2020-03/msg00030.html for more information.","This fails to build because the URL does not work:
https://pypi.io/packages/source/e/easybuild-easyblocks/easybuild-easyblocks-4.1.2.tar.gz
Gives me a 404.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1169,2020-03-19T09:43:47Z,2020-03-19T15:27:32Z,2020-03-25T07:53:59Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild 4.1.2,1,[],https://github.com/openhpc/ohpc/pull/1169,https://github.com/boegel,3,https://github.com/openhpc/ohpc/pull/1169#issuecomment-603691568,"EasyBuild v4.1.2 includes an important security fix, see https://lists.ugent.be/wws/arc/easybuild/2020-03/msg00030.html for more information.","Ah, right, I overlooked that part...
There was only a new release of easybuild-framework (4.1.2), the other two components easybuild-easyblocks and easybuild-easyconfigs are still at 4.1.1 (the overall EasyBuild version is determined by the max of the components).
I'll open a follow-up PR to fix this...",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1169,2020-03-19T09:43:47Z,2020-03-19T15:27:32Z,2020-03-25T07:53:59Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild 4.1.2,1,[],https://github.com/openhpc/ohpc/pull/1169,https://github.com/boegel,4,https://github.com/openhpc/ohpc/pull/1169#issuecomment-603693063,"EasyBuild v4.1.2 includes an important security fix, see https://lists.ugent.be/wws/arc/easybuild/2020-03/msg00030.html for more information.",should be fixed with #1173...,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1171,2020-03-23T08:10:53Z,2020-04-02T23:00:12Z,2020-04-12T21:20:17Z,MERGED,True,22,1,2,https://github.com/jcsiadal,fftw updates for Parallel Studio 2020,2,[],https://github.com/openhpc/ohpc/pull/1171,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1171,"Update the build process to support FFTW 3.3.8 on CentOS8 when built with IntelR) Parallel Studio 2020.
Two changes:

The -no-gcc flag has been replaced with -gcc-sys, which avoids some header compilation errors.
The pre-built configure file doesn't create working testfiles; rather than patch configure, run autoreconf.

Builds confirmed on LEAP 15.1 and CentOS 8.1.","Update the build process to support FFTW 3.3.8 on CentOS8 when built with IntelR) Parallel Studio 2020.
Two changes:

The -no-gcc flag has been replaced with -gcc-sys, which avoids some header compilation errors.
The pre-built configure file doesn't create working testfiles; rather than patch configure, run autoreconf.

Builds confirmed on LEAP 15.1 and CentOS 8.1.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1172,2020-03-25T07:41:02Z,2020-03-25T13:42:43Z,2020-03-25T13:42:43Z,MERGED,True,1,1,1,https://github.com/adrianreber,superlu_dist: correctly set flags for the Intel compiler,1,[],https://github.com/openhpc/ohpc/pull/1172,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1172,"One of the previous commits wrongly re-arranged the compiler flag conditionals. This should fix it again, so that GCC does not get Intel flags.
Just saw this while looking over the failed gnu9 builds in obs:
[  169s] /usr/bin/ld: cannot find -lmkl_intel_ilp64
[  169s] /usr/bin/ld: cannot find -lmkl_sequential
[  169s] /usr/bin/ld: cannot find -lmkl_core

That looks wrong when using GCC. This PR should fix this. Last broken gnu9 build.","One of the previous commits wrongly re-arranged the compiler flag conditionals. This should fix it again, so that GCC does not get Intel flags.
Just saw this while looking over the failed gnu9 builds in obs:
[  169s] /usr/bin/ld: cannot find -lmkl_intel_ilp64
[  169s] /usr/bin/ld: cannot find -lmkl_sequential
[  169s] /usr/bin/ld: cannot find -lmkl_core

That looks wrong when using GCC. This PR should fix this. Last broken gnu9 build.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1173,2020-03-25T07:53:44Z,2020-03-25T11:11:08Z,2020-03-25T11:11:08Z,MERGED,True,5,2,1,https://github.com/boegel,fix EasyBuild v4.1.2: easyblocks/easyconfigs components are still at 4.1.1,1,[],https://github.com/openhpc/ohpc/pull/1173,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1173,fix for #1169,fix for #1169,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1174,2020-03-25T09:00:28Z,2020-03-27T17:05:56Z,2020-03-27T17:05:57Z,MERGED,True,4,4,1,https://github.com/NaohiroTamura,Fixed wwbootstrap for Leap 15.1 aarch64,1,[],https://github.com/openhpc/ohpc/pull/1174,https://github.com/NaohiroTamura,1,https://github.com/openhpc/ohpc/pull/1174,"Leap 15.1 aarch64 kernel is gzipped ELF, and iPXE can boot neither
gzipped ELF nor gunzipped ELF, but Image.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","Leap 15.1 aarch64 kernel is gzipped ELF, and iPXE can boot neither
gzipped ELF nor gunzipped ELF, but Image.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1174,2020-03-25T09:00:28Z,2020-03-27T17:05:56Z,2020-03-27T17:05:57Z,MERGED,True,4,4,1,https://github.com/NaohiroTamura,Fixed wwbootstrap for Leap 15.1 aarch64,1,[],https://github.com/openhpc/ohpc/pull/1174,https://github.com/NaohiroTamura,2,https://github.com/openhpc/ohpc/pull/1174#issuecomment-603727412,"Leap 15.1 aarch64 kernel is gzipped ELF, and iPXE can boot neither
gzipped ELF nor gunzipped ELF, but Image.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","Here is iPXE error log:
iPXE 1.0.0+ -- Open Source Network Boot Firmware -- http://ipxe.org
Features: DNS HTTP iSCSI TFTP AoE EFI Menu

net0: 52:54:00:7d:57:78 using SNP on SNP-0000:00:01.0 (open)
  [Link:up, TX:0 TXE:0 RX:0 RXE:0]
Configuring (net0 52:54:00:7d:57:78)... ok
net0: 10.124.196.65/255.255.255.0
Next server: 10.124.196.102
Filename: http://10.124.196.102/WW/ipxe/cfg/52:54:00:7d:57:78
http://10.124.196.102/WW/ipxe/cfg/52%3A54%3A00%3A7d%3A57%3A78... ok
[Security] 3rd party image[0] can be loaded after EndOfDxe: .
InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B 239440140
Unloading driver at 0x00000000000
52:54:00:7d:57:78 : 469 bytes [script]
Now booting c4 with Warewulf bootstrap (4.12.14-lp151.27-default)
http://10.124.196.102/WW/bootstrap/aarch64/10/initfs.gz... ok
[Security] 3rd party image[0] can be loaded after EndOfDxe: .
InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B 239440140
Unloading driver at 0x00000000000
http://10.124.196.102/WW/bootstrap/aarch64/10/kernel... ok
[Security] 3rd party image[0] can be loaded after EndOfDxe: .
InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B 239440140
Unloading driver at 0x00000000000
Could not select: Exec format error (http://ipxe.org/2e008081)
Could not boot image: Exec format error (http://ipxe.org/2e008081)
No more network devices

The file format of kernel is:
# file /srv/warewulf/bootstrap/aarch64/10/kernel
/srv/warewulf/bootstrap/aarch64/10/kernel: ELF 64-bit LSB executable, ARM aarch64, version 1 (SYSV), statically linked, BuildID[sha1]=aedb9849a5b463dde2e20a44185b44ac36e4f6e5, not stripped

Here is iPXE OK log:
iPXE 1.0.0+ -- Open Source Network Boot Firmware -- http://ipxe.org
Features: DNS HTTP iSCSI TFTP AoE EFI Menu

net0: 52:54:00:7d:57:78 using SNP on SNP-0000:00:01.0 (open)
  [Link:up, TX:0 TXE:0 RX:0 RXE:0]
Configuring (net0 52:54:00:7d:57:78)... ok
net0: 10.124.196.65/255.255.255.0
Next server: 10.124.196.102
Filename: http://10.124.196.102/WW/ipxe/cfg/52:54:00:7d:57:78
http://10.124.196.102/WW/ipxe/cfg/52%3A54%3A00%3A7d%3A57%3A78... ok
[Security] 3rd party image[0] can be loaded after EndOfDxe: .
InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B 239440140
Unloading driver at 0x00000000000
52:54:00:7d:57:78 : 469 bytes [script]
Now booting c4 with Warewulf bootstrap (4.12.14-lp151.27-default)
http://10.124.196.102/WW/bootstrap/aarch64/10/initfs.gz... ok
[Security] 3rd party image[0] can be loaded after EndOfDxe: .
InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B 239440140
Unloading driver at 0x00000000000
http://10.124.196.102/WW/bootstrap/aarch64/10/kernel... ok
[Security] 3rd party image[0] can be loaded after EndOfDxe: .
InstallProtocolInterface: 5B1B31A1-9562-11D2-8E3F-00A0C969723B 239440140
Loading driver at 0x002332BA000 EntryPoint=0x00233FDF640
Loading driver at 0x002332BA000 EntryPoint=0x00233FDF640
InstallProtocolInterface: BC62157E-3E33-4FEC-9920-2D3B36D750DF 23958EB18
ProtectUefiImageCommon - 0x39440140
  - 0x00000002332BA000 - 0x000000000199D000
SetUefiImageMemoryAttributes - 0x00000002332BA000 - 0x0000000000001000 (0x0000000000004008)
SetUefiImageMemoryAttributes - 0x00000002332BB000 - 0x0000000000DF3000 (0x0000000000020008)
SetUefiImageMemoryAttributes - 0x00000002340AE000 - 0x0000000000BA9000 (0x0000000000004008)
SetUefiImageMemoryAttributes - 0x00000002332BA000 - 0x000000000199D000 (0x0000000000000008)
Unloading driver at 0x002332BA000

The file format of kernel is:
# file /srv/warewulf/bootstrap/aarch64/10/kernel
/srv/warewulf/bootstrap/aarch64/10/kernel: MS-DOS executable",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1176,2020-03-29T21:22:44Z,2020-06-15T08:15:16Z,2020-06-15T08:15:16Z,CLOSED,False,15,12,1,https://github.com/jcsiadal,Valgrind 3.15 update for OpenSUSE 15,3,[],https://github.com/openhpc/ohpc/pull/1176,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1176,"FIx library location on OpenSUSE 15 local build to match OBS build, plus minor RPM tune-up.","FIx library location on OpenSUSE 15 local build to match OBS build, plus minor RPM tune-up.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1176,2020-03-29T21:22:44Z,2020-06-15T08:15:16Z,2020-06-15T08:15:16Z,CLOSED,False,15,12,1,https://github.com/jcsiadal,Valgrind 3.15 update for OpenSUSE 15,3,[],https://github.com/openhpc/ohpc/pull/1176,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1176#issuecomment-643976659,"FIx library location on OpenSUSE 15 local build to match OBS build, plus minor RPM tune-up.",Outdated - closing.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1177,2020-03-30T02:20:48Z,2020-04-02T22:58:28Z,2020-04-12T21:19:09Z,MERGED,True,12,11,1,https://github.com/jcsiadal,Powerman update to 2.3.26,1,[],https://github.com/openhpc/ohpc/pull/1177,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1177,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
PowerMan update to 2.3.26.
Removed tcp_wrapper support. Deprecated in CentOS 7 and removed in CentOS 8.
Minor bug fixup needed. No obvious switch for ./configure; it will probably be resolved in the next version.
Tested that it builds and installs on CentOS8.1 and OpenSUSE LEAP 15.1.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
PowerMan update to 2.3.26.
Removed tcp_wrapper support. Deprecated in CentOS 7 and removed in CentOS 8.
Minor bug fixup needed. No obvious switch for ./configure; it will probably be resolved in the next version.
Tested that it builds and installs on CentOS8.1 and OpenSUSE LEAP 15.1.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1178,2020-03-30T02:34:04Z,2020-05-06T11:11:48Z,2020-09-08T16:35:45Z,MERGED,True,11,2,1,https://github.com/jcsiadal,Update gsl for SUSE,1,[],https://github.com/openhpc/ohpc/pull/1178,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1178,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Update to fix libdir location when building OpenSUSE 15 outside of OBS, plus minor RPM updates.
Build and install tested on CentOS 8.1 and OpenSUSE 15.1 with gnu9 and PSXE 2020.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Update to fix libdir location when building OpenSUSE 15 outside of OBS, plus minor RPM updates.
Build and install tested on CentOS 8.1 and OpenSUSE 15.1 with gnu9 and PSXE 2020.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1181,2020-04-02T16:34:56Z,2020-04-02T16:40:44Z,2020-04-02T16:40:57Z,MERGED,True,119,1,3,https://github.com/koomie,parallel-libs/boost: patches to build intel variant with -qnextgen. T…,1,[],https://github.com/openhpc/ohpc/pull/1181,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1181,"…hanks to
jcsiadal jeremy.c.siadal@intel.com for the underlying bjam updates.
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu","…hanks to
jcsiadal jeremy.c.siadal@intel.com for the underlying bjam updates.
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1184,2020-04-07T17:47:56Z,2020-04-07T17:57:10Z,2020-04-07T17:57:10Z,MERGED,True,180,1,3,https://github.com/koomie,updates to OHPC_macros and ohpc-filesystem package for alternate build flag support (#1183),14,[],https://github.com/openhpc/ohpc/pull/1184,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1184,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1185,2020-04-08T01:29:36Z,2020-04-13T15:26:49Z,2020-04-13T15:26:49Z,MERGED,True,1,1,1,https://github.com/NaohiroTamura,Added grub2-common to centos8.tmpl,1,[],https://github.com/openhpc/ohpc/pull/1185,https://github.com/NaohiroTamura,1,https://github.com/openhpc/ohpc/pull/1185,"If ""wwmkchroot centos-8 $CHROOT"" doesn't install grub2-common package,
""yum -y --installroot=$CHROOT install kernel"" doesn't create
/boot/vmlinuz and /boot/initramfs which files ""wwbootstrap"" requires.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com","If ""wwmkchroot centos-8 $CHROOT"" doesn't install grub2-common package,
""yum -y --installroot=$CHROOT install kernel"" doesn't create
/boot/vmlinuz and /boot/initramfs which files ""wwbootstrap"" requires.
Signed-off-by: Naohiro Tamura naohirot@jp.fujitsu.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1187,2020-04-12T19:56:28Z,2020-09-08T11:23:49Z,2020-09-08T16:34:08Z,MERGED,True,7,3,2,https://github.com/jcsiadal,Update WW IPoIB example,1,[],https://github.com/openhpc/ohpc/pull/1187,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1187,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Internally, this is the file we use  now for CentOS 8 builds, as the new release requires the use of Network Manager. It also adds MTU settings set through WW.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Internally, this is the file we use  now for CentOS 8 builds, as the new release requires the use of Network Manager. It also adds MTU settings set through WW.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1189,2020-04-13T15:50:27Z,2020-04-16T21:32:12Z,2020-09-08T16:34:00Z,CLOSED,False,42,38,2,https://github.com/jcsiadal,MPI setup scripts configure correct compiler environment,2,[],https://github.com/openhpc/ohpc/pull/1189,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1189,"This updates the MPI setup so that compiler environment points to the correct MPI wrapper for the preferred compiler chain. It makes more sense to centralize the logic tree to one place instead of requiring each MPI-based component to repeat the same steps, especially for the Intel MPI Library.
Secondly, it updates the impi environment module.  OpenHPC should not be modifying the installation of Parallel Studio or changing binary file operation. I confirmed with our developer consulting team that setting the environment is correct method to accomplish the end goal.
You can verify which compiler is called using ""mpicc -compile-info"".","This updates the MPI setup so that compiler environment points to the correct MPI wrapper for the preferred compiler chain. It makes more sense to centralize the logic tree to one place instead of requiring each MPI-based component to repeat the same steps, especially for the Intel MPI Library.
Secondly, it updates the impi environment module.  OpenHPC should not be modifying the installation of Parallel Studio or changing binary file operation. I confirmed with our developer consulting team that setting the environment is correct method to accomplish the end goal.
You can verify which compiler is called using ""mpicc -compile-info"".",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1189,2020-04-13T15:50:27Z,2020-04-16T21:32:12Z,2020-09-08T16:34:00Z,CLOSED,False,42,38,2,https://github.com/jcsiadal,MPI setup scripts configure correct compiler environment,2,[],https://github.com/openhpc/ohpc/pull/1189,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1189#issuecomment-614907632,"This updates the MPI setup so that compiler environment points to the correct MPI wrapper for the preferred compiler chain. It makes more sense to centralize the logic tree to one place instead of requiring each MPI-based component to repeat the same steps, especially for the Intel MPI Library.
Secondly, it updates the impi environment module.  OpenHPC should not be modifying the installation of Parallel Studio or changing binary file operation. I confirmed with our developer consulting team that setting the environment is correct method to accomplish the end goal.
You can verify which compiler is called using ""mpicc -compile-info"".","As mentioned in previous TSC call, this is not what we want. The impi compatibility module does not prevent end users from using wrapper scripts like mpiicc, but the beauty is that they do not have to use it. Since all of our builds rely on modules we can continue as is.  Setting env vars like CXX=mpicxx unilaterally would also be problematic as some packages build with a mix of MPI and non-MPI and most parallel packages have build detection for MPI wrapper scripts. A subset of these also have no idea about the existence of mpiicc and assume that MPI C codes should always be built with mpicc.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1190,2020-04-13T15:55:31Z,2020-04-16T21:36:24Z,2020-09-08T16:34:04Z,CLOSED,False,21,23,1,https://github.com/jcsiadal,IMB update to 2019.6,3,[],https://github.com/openhpc/ohpc/pull/1190,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1190,"Updates the IMB benchmark to the latest release.
This PR requires #1189 in order to preconfigure the MPI compiler environment.","Updates the IMB benchmark to the latest release.
This PR requires #1189 in order to preconfigure the MPI compiler environment.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1190,2020-04-13T15:55:31Z,2020-04-16T21:36:24Z,2020-09-08T16:34:04Z,CLOSED,False,21,23,1,https://github.com/jcsiadal,IMB update to 2019.6,3,[],https://github.com/openhpc/ohpc/pull/1190,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1190#issuecomment-614909353,"Updates the IMB benchmark to the latest release.
This PR requires #1189 in order to preconfigure the MPI compiler environment.","Thanks for this update.  Given the reliance on #1189 which we don't want to land, I had to cherry-pick your update and amend slightly in #1192.  The majority of build variants are now enabled in OBS.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1191,2020-04-14T19:07:02Z,2020-04-14T19:35:30Z,2020-04-15T07:44:03Z,MERGED,True,4,7,1,https://github.com/boegel,EasyBuild 4.2.0,1,"['component', 'built']",https://github.com/openhpc/ohpc/pull/1191,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1191,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1192,2020-04-16T20:21:14Z,2020-04-16T20:31:03Z,2020-04-16T20:31:09Z,MERGED,True,26,23,1,https://github.com/koomie,imb update to 2019.6 - pulling in bits from #1190,4,[],https://github.com/openhpc/ohpc/pull/1192,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1192,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1193,2020-04-17T19:04:52Z,2020-04-17T19:06:44Z,2020-04-17T19:06:44Z,MERGED,True,446,0,2,https://github.com/koomie,perf-tools/tau: add patch to address POMP2_Begin resolution,1,[],https://github.com/openhpc/ohpc/pull/1193,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1193,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1194,2020-04-20T04:09:32Z,2020-10-01T18:22:09Z,2020-10-01T18:22:09Z,CLOSED,False,487,0,2,https://github.com/jcsiadal,Add Magpie 2.3,6,[],https://github.com/openhpc/ohpc/pull/1194,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1194,"The Magpie 2.3 collection of scripts. I'm sure there are additional optimizations to do and adding user tests is in the works. I thought it would be a good idea to take a look at the current code, make sure it's on-track, and confirm its working in OBS.
Their is no formal build. Instead, the extracted files are cleaned up and then copied directly into the installation directory.
An LMOD file is provided. Java is a minor issue, as JAVA_HOME is required for some components. Since there's no OpenHPC Java standard, I set up the modulefile to detect it dynamically. I had originally done the detect on install, but it would miss Java updates or version switches. Java will need to be installed to each compute node by te cluster admin.","The Magpie 2.3 collection of scripts. I'm sure there are additional optimizations to do and adding user tests is in the works. I thought it would be a good idea to take a look at the current code, make sure it's on-track, and confirm its working in OBS.
Their is no formal build. Instead, the extracted files are cleaned up and then copied directly into the installation directory.
An LMOD file is provided. Java is a minor issue, as JAVA_HOME is required for some components. Since there's no OpenHPC Java standard, I set up the modulefile to detect it dynamically. I had originally done the detect on install, but it would miss Java updates or version switches. Java will need to be installed to each compute node by te cluster admin.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1194,2020-04-20T04:09:32Z,2020-10-01T18:22:09Z,2020-10-01T18:22:09Z,CLOSED,False,487,0,2,https://github.com/jcsiadal,Add Magpie 2.3,6,[],https://github.com/openhpc/ohpc/pull/1194,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1194#issuecomment-702314991,"The Magpie 2.3 collection of scripts. I'm sure there are additional optimizations to do and adding user tests is in the works. I thought it would be a good idea to take a look at the current code, make sure it's on-track, and confirm its working in OBS.
Their is no formal build. Instead, the extracted files are cleaned up and then copied directly into the installation directory.
An LMOD file is provided. Java is a minor issue, as JAVA_HOME is required for some components. Since there's no OpenHPC Java standard, I set up the modulefile to detect it dynamically. I had originally done the detect on install, but it would miss Java updates or version switches. Java will need to be installed to each compute node by te cluster admin.",Updating to new version. Will submit in a new PR.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1195,2020-04-21T21:13:55Z,2020-04-22T10:16:44Z,2020-04-22T10:16:44Z,MERGED,True,35,23,4,https://github.com/srinathv,plasma,6,[],https://github.com/openhpc/ohpc/pull/1195,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1195,plasma should be working.  But this PR will have some phdf5 changes also.,plasma should be working.  But this PR will have some phdf5 changes also.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1196,2020-04-22T01:26:25Z,2020-04-22T01:29:15Z,2020-04-22T01:29:20Z,MERGED,True,4,4,1,https://github.com/koomie,perf-tools/msr-safe: update kernel rev for centos8,1,[],https://github.com/openhpc/ohpc/pull/1196,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1196,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1197,2020-04-23T21:39:21Z,2020-04-23T21:50:04Z,2020-04-23T21:50:08Z,MERGED,True,132,170,2,https://github.com/koomie,rms/slurm: bump to v20.02.1,1,[],https://github.com/openhpc/ohpc/pull/1197,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1197,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1198,2020-04-29T13:36:57Z,2020-06-11T21:46:30Z,2020-06-11T21:46:30Z,CLOSED,False,40,28,3,https://github.com/srinathv,2.0,20,[],https://github.com/openhpc/ohpc/pull/1198,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1198,Should resolve hypre build with arm compiler,Should resolve hypre build with arm compiler,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1198,2020-04-29T13:36:57Z,2020-06-11T21:46:30Z,2020-06-11T21:46:30Z,CLOSED,False,40,28,3,https://github.com/srinathv,2.0,20,[],https://github.com/openhpc/ohpc/pull/1198,https://github.com/srinathv,2,https://github.com/openhpc/ohpc/pull/1198#issuecomment-621364846,Should resolve hypre build with arm compiler,I believe that plasma is also addressed.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1198,2020-04-29T13:36:57Z,2020-06-11T21:46:30Z,2020-06-11T21:46:30Z,CLOSED,False,40,28,3,https://github.com/srinathv,2.0,20,[],https://github.com/openhpc/ohpc/pull/1198,https://github.com/srinathv,3,https://github.com/openhpc/ohpc/pull/1198#issuecomment-621413153,Should resolve hypre build with arm compiler,012a9e6 commit addresses siolib,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1198,2020-04-29T13:36:57Z,2020-06-11T21:46:30Z,2020-06-11T21:46:30Z,CLOSED,False,40,28,3,https://github.com/srinathv,2.0,20,[],https://github.com/openhpc/ohpc/pull/1198,https://github.com/srinathv,4,https://github.com/openhpc/ohpc/pull/1198#issuecomment-642943429,Should resolve hypre build with arm compiler,This PR actually breaks other platform builds of hypre. Close to defect.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1202,2020-05-03T20:54:21Z,2020-05-04T14:20:30Z,2020-09-08T16:33:56Z,MERGED,True,0,7654,58,https://github.com/jcsiadal,Delete source for components removed from 2.0,1,[],https://github.com/openhpc/ohpc/pull/1202,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1202,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Simple housekeeping request to prune ganglia, Nagios, ndo-utils, mpiP, and ocr directories.
Reference issue #1201.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Simple housekeeping request to prune ganglia, Nagios, ndo-utils, mpiP, and ocr directories.
Reference issue #1201.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1203,2020-05-04T17:59:41Z,2020-05-04T18:06:53Z,2020-05-04T18:06:57Z,MERGED,True,21,1,2,https://github.com/koomie,ucx ,2,[],https://github.com/openhpc/ohpc/pull/1203,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1203,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1204,2020-05-05T01:51:50Z,2020-05-05T01:58:18Z,2020-05-05T01:58:18Z,MERGED,True,20,3,2,https://github.com/koomie,mpi-families/mpich: enable ch4 device with ucx-build,1,[],https://github.com/openhpc/ohpc/pull/1204,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1204,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1206,2020-05-10T20:45:26Z,2020-05-10T20:47:49Z,2020-05-10T20:48:04Z,MERGED,True,486,0,3,https://github.com/koomie,mpi-families/libfabric: add libfabric,1,[],https://github.com/openhpc/ohpc/pull/1206,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1206,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1208,2020-05-11T05:46:17Z,2020-05-15T22:51:21Z,2020-09-08T16:33:54Z,MERGED,True,2,0,2,https://github.com/jcsiadal,Updates to allow mpich/mvapich to build locally on OpenSUSE 15,1,[],https://github.com/openhpc/ohpc/pull/1208,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1208,"Updates the configure options so that the specfiles will build locally on OpenSUSE 15. On OpenSUSE, configure sets libdir to lib64 (normally correct), and the build fails when rpmbuild tries to operate on files under lib.
This problem doesn't happen on CentOS 8.","Updates the configure options so that the specfiles will build locally on OpenSUSE 15. On OpenSUSE, configure sets libdir to lib64 (normally correct), and the build fails when rpmbuild tries to operate on files under lib.
This problem doesn't happen on CentOS 8.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1210,2020-05-12T21:33:41Z,2020-05-12T21:36:18Z,2020-05-12T21:36:24Z,MERGED,True,9,3,1,https://github.com/koomie,parallel-libs/petsc: add locale for rhel build; use default ohpc comp…,1,[],https://github.com/openhpc/ohpc/pull/1210,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1210,"…ile flags
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu","…ile flags
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1211,2020-05-13T21:49:06Z,2020-05-15T22:49:16Z,2020-05-15T22:49:16Z,MERGED,True,24,19,1,https://github.com/srinathv,parallel-libs/hypre:,1,[],https://github.com/openhpc/ohpc/pull/1211,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1211,"Changed logic for 'optflag' and 'blas_lapack_flag' to contain the
appropviate values for linking the linear algebra libraries and
vectorization settings. (#1153)
Signed-off-by: Srinath Vadlamani srinath.vadlamani@arm.com","Changed logic for 'optflag' and 'blas_lapack_flag' to contain the
appropviate values for linking the linear algebra libraries and
vectorization settings. (#1153)
Signed-off-by: Srinath Vadlamani srinath.vadlamani@arm.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1212,2020-05-14T23:42:46Z,2020-10-21T11:13:54Z,2020-10-21T11:13:54Z,CLOSED,False,121,11,1,https://github.com/jcsiadal,PMIx update to add PRRTE,4,[],https://github.com/openhpc/ohpc/pull/1212,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1212,"This PR is for review and consideration, pending new PMIx and PRRTE releases. This spec is pulling from the latest master branch commits, as earlier PRRTE does not include required feature support, and current PRRTE source won't build against anything but current OpenPMIx.
Addresses issue #1200 .
This update includes the following changes:

Changes pmix name to openpmix, to match the openpmix project; I didn't change the OpenHPC component name, since it doesn't impact the RPM.
Adds PRRTE to the build. This is/will be required by PBS Pro, as I understand.
Update OpenPMIX to include support for munge, PSM, and OPA, if these are installed. This will require adding a extra repo to the CentOS8 OBS config.
PRRTE includes support for Slurm and PBS Pro.","This PR is for review and consideration, pending new PMIx and PRRTE releases. This spec is pulling from the latest master branch commits, as earlier PRRTE does not include required feature support, and current PRRTE source won't build against anything but current OpenPMIx.
Addresses issue #1200 .
This update includes the following changes:

Changes pmix name to openpmix, to match the openpmix project; I didn't change the OpenHPC component name, since it doesn't impact the RPM.
Adds PRRTE to the build. This is/will be required by PBS Pro, as I understand.
Update OpenPMIX to include support for munge, PSM, and OPA, if these are installed. This will require adding a extra repo to the CentOS8 OBS config.
PRRTE includes support for Slurm and PBS Pro.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1213,2020-05-18T03:30:02Z,2020-10-21T11:13:54Z,2020-11-16T22:25:09Z,CLOSED,False,8,5,1,https://github.com/jcsiadal,Score-P update for OpenSUSE,1,[],https://github.com/openhpc/ohpc/pull/1213,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1213,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Yet another package that needs some configuration help when built locally on OpenSUSE. It will build without errors, but libraries are placed in lib64 and the module files won't work.
I added some minor granularity to the files section, but ideally it should be made very specific, so that extra files or missing files are caught during the build instead of during runtime.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Yet another package that needs some configuration help when built locally on OpenSUSE. It will build without errors, but libraries are placed in lib64 and the module files won't work.
I added some minor granularity to the files section, but ideally it should be made very specific, so that extra files or missing files are caught during the build instead of during runtime.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1215,2020-05-20T16:02:34Z,2020-10-21T11:13:55Z,2020-10-21T11:13:55Z,CLOSED,False,1,5,1,https://github.com/srinathv,armpl is working for blas/lapack for aarch64,1,[],https://github.com/openhpc/ohpc/pull/1215,https://github.com/srinathv,1,https://github.com/openhpc/ohpc/pull/1215,This should not break x86 compiler variants while building hypre w/ armpl for blas/lapack for ACFL aarch64.,This should not break x86 compiler variants while building hypre w/ armpl for blas/lapack for ACFL aarch64.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1216,2020-05-20T20:35:25Z,2020-07-08T12:56:04Z,2020-07-08T12:56:09Z,CLOSED,False,1,1,1,https://github.com/boegel,EasyBuild 4.2.1,1,[],https://github.com/openhpc/ohpc/pull/1216,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1216,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1216,2020-05-20T20:35:25Z,2020-07-08T12:56:04Z,2020-07-08T12:56:09Z,CLOSED,False,1,1,1,https://github.com/boegel,EasyBuild 4.2.1,1,[],https://github.com/openhpc/ohpc/pull/1216,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/1216#issuecomment-655501468,,superseded by #1242,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1217,2020-05-27T13:55:41Z,2020-05-27T21:48:32Z,2020-05-27T21:48:39Z,MERGED,True,14,5,2,https://github.com/koomie,updates for mpich to allow dual installation of ucx/libfabric (ofi) based builds,4,[],https://github.com/openhpc/ohpc/pull/1217,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1217,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1220,2020-06-04T13:04:46Z,2020-06-04T13:08:13Z,2020-06-04T13:08:17Z,MERGED,True,5,1,1,https://github.com/koomie,mpi-families/mpich: add to BuildRequires for ofi-based build,1,[],https://github.com/openhpc/ohpc/pull/1220,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1220,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1222,2020-06-12T23:35:57Z,2020-06-17T18:19:13Z,2020-06-17T18:19:13Z,MERGED,True,0,4,4,https://github.com/solj,docs: Remove reference to nonexistent package,1,[],https://github.com/openhpc/ohpc/pull/1222,https://github.com/solj,1,https://github.com/openhpc/ohpc/pull/1222,"I don't claim to know much about this package or why it's not in centos8. I was just going through the documentation to install openhpc and this package doesn't exist anymore.
There is no branch for centos8: https://git.centos.org/rpms/infinipath-psm/branches","I don't claim to know much about this package or why it's not in centos8. I was just going through the documentation to install openhpc and this package doesn't exist anymore.
There is no branch for centos8: https://git.centos.org/rpms/infinipath-psm/branches",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1222,2020-06-12T23:35:57Z,2020-06-17T18:19:13Z,2020-06-17T18:19:13Z,MERGED,True,0,4,4,https://github.com/solj,docs: Remove reference to nonexistent package,1,[],https://github.com/openhpc/ohpc/pull/1222,https://github.com/solj,2,https://github.com/openhpc/ohpc/pull/1222#issuecomment-643523313,"I don't claim to know much about this package or why it's not in centos8. I was just going through the documentation to install openhpc and this package doesn't exist anymore.
There is no branch for centos8: https://git.centos.org/rpms/infinipath-psm/branches","The travisci failure seems unrelated to my changes. Looks like a temporary blip in the build system. Unfortunately, I'm unable to retry the build.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1222,2020-06-12T23:35:57Z,2020-06-17T18:19:13Z,2020-06-17T18:19:13Z,MERGED,True,0,4,4,https://github.com/solj,docs: Remove reference to nonexistent package,1,[],https://github.com/openhpc/ohpc/pull/1222,https://github.com/solj,3,https://github.com/openhpc/ohpc/pull/1222#issuecomment-643525773,"I don't claim to know much about this package or why it's not in centos8. I was just going through the documentation to install openhpc and this package doesn't exist anymore.
There is no branch for centos8: https://git.centos.org/rpms/infinipath-psm/branches","Also, it looks like the command in section 3.6 may be unnecessary because the package is included in the ""Infiniband Support"" group.
# yum groupinfo ""Infiniband Support"" | grep opa-basic
   opa-basic-tools",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1224,2020-06-16T18:16:11Z,2020-07-06T13:17:13Z,2020-07-06T13:17:13Z,MERGED,True,396,382,57,https://github.com/mike0042,Update from PBS Pro 19.1.3 to OpenPBS 20.0.0,1,[],https://github.com/openhpc/ohpc/pull/1224,https://github.com/mike0042,1,https://github.com/openhpc/ohpc/pull/1224,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1225,2020-06-17T18:18:37Z,2020-07-29T01:45:05Z,2020-09-08T16:33:12Z,MERGED,True,114,740,10,https://github.com/jcsiadal,Boost update to 1.73.0,7,[],https://github.com/openhpc/ohpc/pull/1225,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1225,"Update Boost C++ libs to latest version. This also resolved the compilation issues seen with Intel Parallel Studio 2020--no more nextgen switch needed.
All of the patches made for previous versions were deleted. I added back the option patch. The ARM patch is still there, but I have not confirmed it will work.
There is also an update to glibc from Red Hat that I had to incorporate to fix compilation errors with the gnu9 toolchain. The new version resolves some bugs with fixincludes.
I have not tested the resulting functionality of the libs, but this does get all of the x86_64 permutations built.","Update Boost C++ libs to latest version. This also resolved the compilation issues seen with Intel Parallel Studio 2020--no more nextgen switch needed.
All of the patches made for previous versions were deleted. I added back the option patch. The ARM patch is still there, but I have not confirmed it will work.
There is also an update to glibc from Red Hat that I had to incorporate to fix compilation errors with the gnu9 toolchain. The new version resolves some bugs with fixincludes.
I have not tested the resulting functionality of the libs, but this does get all of the x86_64 permutations built.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1226,2020-06-19T12:56:02Z,2020-07-17T22:54:40Z,2020-07-17T22:56:47Z,MERGED,True,0,3,1,https://github.com/solj,docs: Clean up extra step from c6a3e98c,1,"['bug', 'documentation']",https://github.com/openhpc/ohpc/pull/1226,https://github.com/solj,1,https://github.com/openhpc/ohpc/pull/1226,"This updates the documentation to reflect the upstream CentOS switch to
using systemd for managing the tftp service.
Signed-off-by: Sol Jerome solj@utdallas.edu","This updates the documentation to reflect the upstream CentOS switch to
using systemd for managing the tftp service.
Signed-off-by: Sol Jerome solj@utdallas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1226,2020-06-19T12:56:02Z,2020-07-17T22:54:40Z,2020-07-17T22:56:47Z,MERGED,True,0,3,1,https://github.com/solj,docs: Clean up extra step from c6a3e98c,1,"['bug', 'documentation']",https://github.com/openhpc/ohpc/pull/1226,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1226#issuecomment-660371507,"This updates the documentation to reflect the upstream CentOS switch to
using systemd for managing the tftp service.
Signed-off-by: Sol Jerome solj@utdallas.edu",Thanks for this fix.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1227,2020-06-19T22:08:09Z,2020-06-29T12:08:51Z,2020-06-29T12:08:51Z,MERGED,True,2,2,1,https://github.com/solj,tests: Update travis-ci tests,1,[],https://github.com/openhpc/ohpc/pull/1227,https://github.com/solj,1,https://github.com/openhpc/ohpc/pull/1227,"This updates the travis-ci tests to run on CentOS 8 instead of 7.
Signed-off-by: Sol Jerome solj@utdallas.edu","This updates the travis-ci tests to run on CentOS 8 instead of 7.
Signed-off-by: Sol Jerome solj@utdallas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1227,2020-06-19T22:08:09Z,2020-06-29T12:08:51Z,2020-06-29T12:08:51Z,MERGED,True,2,2,1,https://github.com/solj,tests: Update travis-ci tests,1,[],https://github.com/openhpc/ohpc/pull/1227,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1227#issuecomment-647302515,"This updates the travis-ci tests to run on CentOS 8 instead of 7.
Signed-off-by: Sol Jerome solj@utdallas.edu",👍,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1228,2020-06-23T21:03:03Z,,2021-08-13T11:18:24Z,OPEN,False,31,0,1,https://github.com/solj,docs: Add documentation for using NFSv4,1,[],https://github.com/openhpc/ohpc/pull/1228,https://github.com/solj,1,https://github.com/openhpc/ohpc/pull/1228,"This adds instructions for using NFSv4 instead of NFSv3 for serving
shared network filesystems from the sms.
Signed-off-by: Sol Jerome solj@utdallas.edu","This adds instructions for using NFSv4 instead of NFSv3 for serving
shared network filesystems from the sms.
Signed-off-by: Sol Jerome solj@utdallas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1228,2020-06-23T21:03:03Z,,2021-08-13T11:18:24Z,OPEN,False,31,0,1,https://github.com/solj,docs: Add documentation for using NFSv4,1,[],https://github.com/openhpc/ohpc/pull/1228,https://github.com/solj,2,https://github.com/openhpc/ohpc/pull/1228#issuecomment-648421960,"This adds instructions for using NFSv4 instead of NFSv3 for serving
shared network filesystems from the sms.
Signed-off-by: Sol Jerome solj@utdallas.edu",I'm not sure this is something you'll actually want to merge but we plan on doing this in our environment so that we can easily configure the firewall for NFS.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1229,2020-06-25T15:02:48Z,2020-07-29T00:34:37Z,2020-07-29T00:34:37Z,MERGED,True,3,2,1,https://github.com/solj,docs: Update rsyslog configuration,1,[],https://github.com/openhpc/ohpc/pull/1229,https://github.com/solj,1,https://github.com/openhpc/ohpc/pull/1229,"The CentOS 8 rsyslog configuration doesn't use the old-style configs.
https://www.rsyslog.com/doc/v8-stable/configuration/modules/imudp.html#examples
Signed-off-by: Sol Jerome solj@utdallas.edu","The CentOS 8 rsyslog configuration doesn't use the old-style configs.
https://www.rsyslog.com/doc/v8-stable/configuration/modules/imudp.html#examples
Signed-off-by: Sol Jerome solj@utdallas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1231,2020-06-27T01:47:26Z,2020-10-21T11:13:56Z,2020-10-21T11:13:56Z,CLOSED,False,65,26,1,https://github.com/solj,components: Proper fix for #520,2,[],https://github.com/openhpc/ohpc/pull/1231,https://github.com/solj,1,https://github.com/openhpc/ohpc/pull/1231,"The fix in 8744b04 doesn't actually resolve the issue with a
restrictive umask. Quoting the mkpath page:
mode

The numeric permissions mode to apply to each created directory
(defaults to 0777), to be modified by the current umask. If the
directory already exists (and thus does not need to be created),
the permissions will not be modified.

This means that the mode settings that were applied previously still
respected the restrictive umask and resulted in a nonworking pxeboot
configuration.
This commit modifies the previous fix to use make_path instead since the
chmod parameter does precisely what we want.
chmod => $num

Takes a numeric mode to apply to each created directory (not modified
by the current umask). If the directory already exists (and thus
does not need to be created), the permissions will not be modified.

Signed-off-by: Sol Jerome solj@utdallas.edu","The fix in 8744b04 doesn't actually resolve the issue with a
restrictive umask. Quoting the mkpath page:
mode

The numeric permissions mode to apply to each created directory
(defaults to 0777), to be modified by the current umask. If the
directory already exists (and thus does not need to be created),
the permissions will not be modified.

This means that the mode settings that were applied previously still
respected the restrictive umask and resulted in a nonworking pxeboot
configuration.
This commit modifies the previous fix to use make_path instead since the
chmod parameter does precisely what we want.
chmod => $num

Takes a numeric mode to apply to each created directory (not modified
by the current umask). If the directory already exists (and thus
does not need to be created), the permissions will not be modified.

Signed-off-by: Sol Jerome solj@utdallas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1231,2020-06-27T01:47:26Z,2020-10-21T11:13:56Z,2020-10-21T11:13:56Z,CLOSED,False,65,26,1,https://github.com/solj,components: Proper fix for #520,2,[],https://github.com/openhpc/ohpc/pull/1231,https://github.com/jmstover,2,https://github.com/openhpc/ohpc/pull/1231#issuecomment-650560614,"The fix in 8744b04 doesn't actually resolve the issue with a
restrictive umask. Quoting the mkpath page:
mode

The numeric permissions mode to apply to each created directory
(defaults to 0777), to be modified by the current umask. If the
directory already exists (and thus does not need to be created),
the permissions will not be modified.

This means that the mode settings that were applied previously still
respected the restrictive umask and resulted in a nonworking pxeboot
configuration.
This commit modifies the previous fix to use make_path instead since the
chmod parameter does precisely what we want.
chmod => $num

Takes a numeric mode to apply to each created directory (not modified
by the current umask). If the directory already exists (and thus
does not need to be created), the permissions will not be modified.

Signed-off-by: Sol Jerome solj@utdallas.edu","@solj ... If y'all are hitting a restrictive umask can you add this to upstream as well?
https://github.com/warewulf/warewulf3
Thanks.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1231,2020-06-27T01:47:26Z,2020-10-21T11:13:56Z,2020-10-21T11:13:56Z,CLOSED,False,65,26,1,https://github.com/solj,components: Proper fix for #520,2,[],https://github.com/openhpc/ohpc/pull/1231,https://github.com/solj,3,https://github.com/openhpc/ohpc/pull/1231#issuecomment-651200898,"The fix in 8744b04 doesn't actually resolve the issue with a
restrictive umask. Quoting the mkpath page:
mode

The numeric permissions mode to apply to each created directory
(defaults to 0777), to be modified by the current umask. If the
directory already exists (and thus does not need to be created),
the permissions will not be modified.

This means that the mode settings that were applied previously still
respected the restrictive umask and resulted in a nonworking pxeboot
configuration.
This commit modifies the previous fix to use make_path instead since the
chmod parameter does precisely what we want.
chmod => $num

Takes a numeric mode to apply to each created directory (not modified
by the current umask). If the directory already exists (and thus
does not need to be created), the permissions will not be modified.

Signed-off-by: Sol Jerome solj@utdallas.edu","@solj ... If y'all are hitting a restrictive umask can you add this to upstream as well?
https://github.com/warewulf/warewulf3
Thanks.

Sure thing. Will put in a pull request shortly.
Thanks!",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1235,2020-07-06T13:28:04Z,2020-07-06T13:30:51Z,2020-07-06T13:31:00Z,MERGED,True,2,2,1,https://github.com/koomie,build fixes for new openpbs,2,[],https://github.com/openhpc/ohpc/pull/1235,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1235,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1242,2020-07-08T12:55:51Z,2020-07-09T23:46:19Z,2020-07-09T23:46:20Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild 4.2.2,1,[],https://github.com/openhpc/ohpc/pull/1242,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1242,fix for #1240,fix for #1240,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1245,2020-07-09T12:12:13Z,2020-07-09T12:13:53Z,2020-07-09T12:13:57Z,MERGED,True,1,1,1,https://github.com/koomie,compiler-families/gnu-compilers: bump to v9.3 (#1244),1,[],https://github.com/openhpc/ohpc/pull/1245,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1245,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1247,2020-07-13T22:12:03Z,2020-07-13T22:17:39Z,2020-07-13T22:17:39Z,MERGED,True,4,1,1,https://github.com/koomie,update openmpi version (#1246),3,[],https://github.com/openhpc/ohpc/pull/1247,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1247,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1250,2020-07-29T01:26:39Z,2020-07-29T01:45:04Z,2020-07-29T01:45:04Z,MERGED,True,110,732,10,https://github.com/koomie,Jcsiadal boost,12,[],https://github.com/openhpc/ohpc/pull/1250,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1250,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1250,2020-07-29T01:26:39Z,2020-07-29T01:45:04Z,2020-07-29T01:45:04Z,MERGED,True,110,732,10,https://github.com/koomie,Jcsiadal boost,12,[],https://github.com/openhpc/ohpc/pull/1250,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1250#issuecomment-665381940,,A few fixes on top of #1225,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1253,2020-08-24T23:38:33Z,2020-08-25T00:23:03Z,2020-08-25T00:23:03Z,MERGED,True,21,32,3,https://github.com/koomie,fs/lustre-client: bump to v2.12.5; include some changes from upstream,3,[],https://github.com/openhpc/ohpc/pull/1253,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1253,".spec and adjust logic to find locally installed kernel
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu",".spec and adjust logic to find locally installed kernel
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1255,2020-09-11T19:13:19Z,2020-09-14T01:21:48Z,2020-10-01T18:02:57Z,MERGED,True,41,34,3,https://github.com/jcsiadal,Trilinos update to 13.0.0,1,[],https://github.com/openhpc/ohpc/pull/1255,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1255,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Solution to issue #1254.
Updates Trilinos to v13 and have confirmed successful local builds using intel/impi and gnu9/openmpi4. I have not updated the tests yet.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Solution to issue #1254.
Updates Trilinos to v13 and have confirmed successful local builds using intel/impi and gnu9/openmpi4. I have not updated the tests yet.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1255,2020-09-11T19:13:19Z,2020-09-14T01:21:48Z,2020-10-01T18:02:57Z,MERGED,True,41,34,3,https://github.com/jcsiadal,Trilinos update to 13.0.0,1,[],https://github.com/openhpc/ohpc/pull/1255,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1255#issuecomment-691271337,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Solution to issue #1254.
Updates Trilinos to v13 and have confirmed successful local builds using intel/impi and gnu9/openmpi4. I have not updated the tests yet.","Thank you for this, I will look at landing and seeing impact on testing over the weekend.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1255,2020-09-11T19:13:19Z,2020-09-14T01:21:48Z,2020-10-01T18:02:57Z,MERGED,True,41,34,3,https://github.com/jcsiadal,Trilinos update to 13.0.0,1,[],https://github.com/openhpc/ohpc/pull/1255,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/1255#issuecomment-692305555,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Solution to issue #1254.
Updates Trilinos to v13 and have confirmed successful local builds using intel/impi and gnu9/openmpi4. I have not updated the tests yet.","Note that it looks like there were a few changes in this newer trilinos release that prevented any of our CI results from running. One was build related, the others were related to deprecated features or a Kokkhos scope assumption requiring chances to the existing test collateral.  After updating, the tests are building again and initial CI results looking OK.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1256,2020-09-14T01:09:04Z,2020-09-14T01:21:47Z,2020-09-14T01:21:47Z,MERGED,True,42,34,3,https://github.com/koomie,Trilinos update,3,[],https://github.com/openhpc/ohpc/pull/1256,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1256,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1258,2020-09-15T20:10:28Z,2020-09-15T20:53:19Z,2020-09-21T06:43:24Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.3.0,1,[],https://github.com/openhpc/ohpc/pull/1258,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1258,@koomie Is this still in time for the OpenHPC 2.0 release?,@koomie Is this still in time for the OpenHPC 2.0 release?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1258,2020-09-15T20:10:28Z,2020-09-15T20:53:19Z,2020-09-21T06:43:24Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.3.0,1,[],https://github.com/openhpc/ohpc/pull/1258,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1258#issuecomment-692987193,@koomie Is this still in time for the OpenHPC 2.0 release?,"Looks like we got a build failure on Leap 15.2...
https://obs.openhpc.community/package/live_build_log/OpenHPC:2.0:Factory/easybuild/Leap_15/x86_64",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1258,2020-09-15T20:10:28Z,2020-09-15T20:53:19Z,2020-09-21T06:43:24Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.3.0,1,[],https://github.com/openhpc/ohpc/pull/1258,https://github.com/boegel,3,https://github.com/openhpc/ohpc/pull/1258#issuecomment-693202697,@koomie Is this still in time for the OpenHPC 2.0 release?,"@koomie ssl.SSLError: [SSL] malloc failure
I don't see how that can be caused by something specific to EasyBuild, looks like a much more general issue with SSL support in the Python 3.6.10 being used?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1258,2020-09-15T20:10:28Z,2020-09-15T20:53:19Z,2020-09-21T06:43:24Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.3.0,1,[],https://github.com/openhpc/ohpc/pull/1258,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/1258#issuecomment-695855707,@koomie Is this still in time for the OpenHPC 2.0 release?,"Well, file this under the auspices of huge time sinks, but I finally got to the bottom of it. It seems that the newer version of openssl that is in Leap 15.2 has a change of behavior which assumes that the getrandom() system call is always available (and won't revert to using /dev/urandom like older versions).  I really should have clued in faster when EasyBuild built ok on aarch64 but not x86_64. The primary difference in our ohpc build environments between those two is the host kernel which supports the OBS chroot build environment (much newer for the arm builds).
Seems a kernel of v3.17 or newer is required to support this system call and our primary x86 build server was just under that threshold. Once I bumped it up, openssl worked ok and latest EasyBuild is compiling on Leap15.2.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1258,2020-09-15T20:10:28Z,2020-09-15T20:53:19Z,2020-09-21T06:43:24Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.3.0,1,[],https://github.com/openhpc/ohpc/pull/1258,https://github.com/boegel,5,https://github.com/openhpc/ohpc/pull/1258#issuecomment-695932061,@koomie Is this still in time for the OpenHPC 2.0 release?,"\o/
Thanks for hunting this down @koomie!",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1259,2020-09-21T20:17:23Z,2020-09-21T21:49:53Z,2020-09-21T22:37:46Z,MERGED,True,2,3,1,https://github.com/koomie,perf-tools/msr-safe: remove hard-coded kernel,1,[],https://github.com/openhpc/ohpc/pull/1259,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1259,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1260,2020-09-22T11:54:37Z,2020-09-22T11:57:15Z,2020-09-22T11:57:15Z,MERGED,True,146,5,3,https://github.com/koomie,perf-tools/dimemas: bump to v5.4.2. Also add local ohpc build of flex…,1,[],https://github.com/openhpc/ohpc/pull/1260,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1260,"… to fix
issues observed on Leap15. dimemas will not build against dynamic flex lib
introduced in leap 15, so update to leverage local build which mimics previous
flex packaging that provides static lib.
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu","… to fix
issues observed on Leap15. dimemas will not build against dynamic flex lib
introduced in leap 15, so update to leverage local build which mimics previous
flex packaging that provides static lib.
Signed-off-by: Karl W. Schulz karl@oden.utexas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1263,2020-10-01T16:50:26Z,2020-11-04T15:08:19Z,2020-11-16T18:39:00Z,MERGED,True,137,126,2,https://github.com/jcsiadal,Update LLVM to 10.,1,[],https://github.com/openhpc/ohpc/pull/1263,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1263,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Updates LLVM/Clang to version 10. Both distros have current versions of clang available; this build is different because it implements a 2-stage build with bootstrap. This should completely eliminate most GCC libs from the runtime toolchain.
I added a conflict to distro-provided libunwind-devel. The lld linker searches /usr/lib64 before its local llvm lib directory and it breaks if it finds libunwind.so. Not sure where to fix this other than forcing the user to implement command line options for lld, so I added a conflict. SCOREp requires the distro libunwind-devel, but only during build.
Tested on CentOS 8.2 and OpenSUSE 15.2. Built a few test C++ apps with the resulting RPMs. Successful builds on OBS.
Build takes approximately 90 minutes on a fast, dedicated build system.
Other notes:

Moved to ninja build system; this is what the llvm developers use
Included more  llvm tools
Leaving some static libs in place as they seem to be required by clang/lld at runtime
Fixed the Python ambiguity problem with a global search/replace; not sure if any of the Python 2 stuff is even used, but keeping it to be safe.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Updates LLVM/Clang to version 10. Both distros have current versions of clang available; this build is different because it implements a 2-stage build with bootstrap. This should completely eliminate most GCC libs from the runtime toolchain.
I added a conflict to distro-provided libunwind-devel. The lld linker searches /usr/lib64 before its local llvm lib directory and it breaks if it finds libunwind.so. Not sure where to fix this other than forcing the user to implement command line options for lld, so I added a conflict. SCOREp requires the distro libunwind-devel, but only during build.
Tested on CentOS 8.2 and OpenSUSE 15.2. Built a few test C++ apps with the resulting RPMs. Successful builds on OBS.
Build takes approximately 90 minutes on a fast, dedicated build system.
Other notes:

Moved to ninja build system; this is what the llvm developers use
Included more  llvm tools
Leaving some static libs in place as they seem to be required by clang/lld at runtime
Fixed the Python ambiguity problem with a global search/replace; not sure if any of the Python 2 stuff is even used, but keeping it to be safe.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1263,2020-10-01T16:50:26Z,2020-11-04T15:08:19Z,2020-11-16T18:39:00Z,MERGED,True,137,126,2,https://github.com/jcsiadal,Update LLVM to 10.,1,[],https://github.com/openhpc/ohpc/pull/1263,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1263#issuecomment-721787344,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Updates LLVM/Clang to version 10. Both distros have current versions of clang available; this build is different because it implements a 2-stage build with bootstrap. This should completely eliminate most GCC libs from the runtime toolchain.
I added a conflict to distro-provided libunwind-devel. The lld linker searches /usr/lib64 before its local llvm lib directory and it breaks if it finds libunwind.so. Not sure where to fix this other than forcing the user to implement command line options for lld, so I added a conflict. SCOREp requires the distro libunwind-devel, but only during build.
Tested on CentOS 8.2 and OpenSUSE 15.2. Built a few test C++ apps with the resulting RPMs. Successful builds on OBS.
Build takes approximately 90 minutes on a fast, dedicated build system.
Other notes:

Moved to ninja build system; this is what the llvm developers use
Included more  llvm tools
Leaving some static libs in place as they seem to be required by clang/lld at runtime
Fixed the Python ambiguity problem with a global search/replace; not sure if any of the Python 2 stuff is even used, but keeping it to be safe.",I don't know why Travis is failing in this case. I suspect it is related to the branch switch under the covers (2.0 -> 2.x). The check_spec.py utility seems to run ok for me locally on this branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1263,2020-10-01T16:50:26Z,2020-11-04T15:08:19Z,2020-11-16T18:39:00Z,MERGED,True,137,126,2,https://github.com/jcsiadal,Update LLVM to 10.,1,[],https://github.com/openhpc/ohpc/pull/1263,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/1263#issuecomment-721800370,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Updates LLVM/Clang to version 10. Both distros have current versions of clang available; this build is different because it implements a 2-stage build with bootstrap. This should completely eliminate most GCC libs from the runtime toolchain.
I added a conflict to distro-provided libunwind-devel. The lld linker searches /usr/lib64 before its local llvm lib directory and it breaks if it finds libunwind.so. Not sure where to fix this other than forcing the user to implement command line options for lld, so I added a conflict. SCOREp requires the distro libunwind-devel, but only during build.
Tested on CentOS 8.2 and OpenSUSE 15.2. Built a few test C++ apps with the resulting RPMs. Successful builds on OBS.
Build takes approximately 90 minutes on a fast, dedicated build system.
Other notes:

Moved to ninja build system; this is what the llvm developers use
Included more  llvm tools
Leaving some static libs in place as they seem to be required by clang/lld at runtime
Fixed the Python ambiguity problem with a global search/replace; not sure if any of the Python 2 stuff is even used, but keeping it to be safe.",Enabled build in OBS for 2.1:Factory,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1264,2020-10-01T18:20:25Z,2022-06-01T17:05:26Z,2022-06-01T17:05:27Z,CLOSED,False,33,27,5,https://github.com/jcsiadal,Fix local hdf/netcdf builds on OpenSUSE,2,[],https://github.com/openhpc/ohpc/pull/1264,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1264,"These RPMs will not correctly build on a local OpenSUSE system. I've retested the build on fresh OpenSUSE install.
Simple fix to update set the lib location.","These RPMs will not correctly build on a local OpenSUSE system. I've retested the build on fresh OpenSUSE install.
Simple fix to update set the lib location.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1264,2020-10-01T18:20:25Z,2022-06-01T17:05:26Z,2022-06-01T17:05:27Z,CLOSED,False,33,27,5,https://github.com/jcsiadal,Fix local hdf/netcdf builds on OpenSUSE,2,[],https://github.com/openhpc/ohpc/pull/1264,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1264#issuecomment-1143885486,"These RPMs will not correctly build on a local OpenSUSE system. I've retested the build on fresh OpenSUSE install.
Simple fix to update set the lib location.",Closing. Will rebase and resubmit.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1269,2020-10-08T18:56:27Z,2020-10-21T11:13:57Z,2020-10-21T11:13:57Z,CLOSED,False,2,1,1,https://github.com/adrianreber,containers: small fixups,1,[],https://github.com/openhpc/ohpc/pull/1269,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1269,"Base the container on the tag centos8 (8.2.2004). This, in contrast to 8 (8.0.1905) or latest (7.8.2003), seems to be based on CentOS 8.2.
Also install openssh-clients in the container which is needed for MPI runtime on remote nodes.","Base the container on the tag centos8 (8.2.2004). This, in contrast to 8 (8.0.1905) or latest (7.8.2003), seems to be based on CentOS 8.2.
Also install openssh-clients in the container which is needed for MPI runtime on remote nodes.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1270,2020-10-19T05:38:25Z,2020-11-18T00:17:36Z,2020-11-18T00:17:36Z,MERGED,True,14,0,2,https://github.com/jcsiadal,Update Warewulf initrd to include firmware symlinks,2,[],https://github.com/openhpc/ohpc/pull/1270,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1270,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
New Intel NIC drivers load firmware using a symlink under /lib/firmware pointing to the canonical file in the same directory. The wwbootstrap utility adds only true files to the initrd. This update also adds symlinks matching the bootstrap.conf list.
I plan to also upstream this to WW.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
New Intel NIC drivers load firmware using a symlink under /lib/firmware pointing to the canonical file in the same directory. The wwbootstrap utility adds only true files to the initrd. This update also adds symlinks matching the bootstrap.conf list.
I plan to also upstream this to WW.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1270,2020-10-19T05:38:25Z,2020-11-18T00:17:36Z,2020-11-18T00:17:36Z,MERGED,True,14,0,2,https://github.com/jcsiadal,Update Warewulf initrd to include firmware symlinks,2,[],https://github.com/openhpc/ohpc/pull/1270,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1270#issuecomment-729153452,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
New Intel NIC drivers load firmware using a symlink under /lib/firmware pointing to the canonical file in the same directory. The wwbootstrap utility adds only true files to the initrd. This update also adds symlinks matching the bootstrap.conf list.
I plan to also upstream this to WW.",Accidently hit the delete button on the wrong branch during cleanup. Restored and reopening.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1270,2020-10-19T05:38:25Z,2020-11-18T00:17:36Z,2020-11-18T00:17:36Z,MERGED,True,14,0,2,https://github.com/jcsiadal,Update Warewulf initrd to include firmware symlinks,2,[],https://github.com/openhpc/ohpc/pull/1270,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1270#issuecomment-729153640,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
New Intel NIC drivers load firmware using a symlink under /lib/firmware pointing to the canonical file in the same directory. The wwbootstrap utility adds only true files to the initrd. This update also adds symlinks matching the bootstrap.conf list.
I plan to also upstream this to WW.",Also checked build on OBS. Looks OK.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1271,2020-10-21T12:20:26Z,2020-10-21T13:06:52Z,2020-10-21T13:06:52Z,MERGED,True,2,1,1,https://github.com/adrianreber,containers: small fixups,1,[],https://github.com/openhpc/ohpc/pull/1271,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1271,@koomie I see that you closed my original PR (#1269) for this against the 2.0 branch. As these changes are already used for the published containers it would make sense to get these merged. I re-created the PR against the 2.x branch.,@koomie I see that you closed my original PR (#1269) for this against the 2.0 branch. As these changes are already used for the published containers it would make sense to get these merged. I re-created the PR against the 2.x branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1271,2020-10-21T12:20:26Z,2020-10-21T13:06:52Z,2020-10-21T13:06:52Z,MERGED,True,2,1,1,https://github.com/adrianreber,containers: small fixups,1,[],https://github.com/openhpc/ohpc/pull/1271,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1271#issuecomment-713555229,@koomie I see that you closed my original PR (#1269) for this against the 2.0 branch. As these changes are already used for the published containers it would make sense to get these merged. I re-created the PR against the 2.x branch.,Sorry. I think Github did that on it's own because I created a 2.x branch from 2.0 (and deleted the 2.0 branch).,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1275,2020-11-10T08:59:45Z,2020-11-18T00:25:03Z,2020-11-18T07:53:18Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.3.1,1,[],https://github.com/openhpc/ohpc/pull/1275,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1275,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1276,2020-11-17T03:11:58Z,2021-03-22T13:11:00Z,2021-03-28T02:00:12Z,MERGED,True,487,0,3,https://github.com/jcsiadal,Magpie 2.5,2,[],https://github.com/openhpc/ohpc/pull/1276,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1276,"Adds LLNL Magpie 2.5 collection. Build is validated on all 4 OBS arch/OS combos. Resolves issue #1188 .
For the build process, the magpie tarball is extracted and the files are cleaned up so RPMlint doesn't throw an error.
An LMOD file is provided. The variable JAVA_HOME is required, and since there's no OpenHPC Java standard, I set up the modulefile to detect it dynamically.
Java will still need to be installed to each compute node by the cluster admin. If it was more than one package, I would add a client metafile package to the build.
No test suite component yet. I've had some discussion with internal folks who use Magpie and there's no obvious validation test that would be simple to implement.","Adds LLNL Magpie 2.5 collection. Build is validated on all 4 OBS arch/OS combos. Resolves issue #1188 .
For the build process, the magpie tarball is extracted and the files are cleaned up so RPMlint doesn't throw an error.
An LMOD file is provided. The variable JAVA_HOME is required, and since there's no OpenHPC Java standard, I set up the modulefile to detect it dynamically.
Java will still need to be installed to each compute node by the cluster admin. If it was more than one package, I would add a client metafile package to the build.
No test suite component yet. I've had some discussion with internal folks who use Magpie and there's no obvious validation test that would be simple to implement.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1278,2020-11-20T16:51:00Z,,2020-11-21T13:03:25Z,OPEN,False,1,1,1,https://github.com/TomTheBear,Likwid 5.1.0,1,[],https://github.com/openhpc/ohpc/pull/1278,https://github.com/TomTheBear,1,https://github.com/openhpc/ohpc/pull/1278,This PR updates the version to the latest release 5.1.0,This PR updates the version to the latest release 5.1.0,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1283,2020-12-10T21:17:29Z,2020-12-11T13:54:21Z,2020-12-11T14:10:00Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.3.2,1,[],https://github.com/openhpc/ohpc/pull/1283,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1283,https://pypi.org/project/easybuild/4.3.2,https://pypi.org/project/easybuild/4.3.2,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1284,2020-12-11T11:44:33Z,2020-12-11T13:57:37Z,2020-12-11T13:57:37Z,MERGED,True,41,11,6,https://github.com/adrianreber,Switch from Travis to GitHub Actions,2,[],https://github.com/openhpc/ohpc/pull/1284,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1284,"@koomie: as discussed, this switches our PR and push triggered CI from Travis (now that is no longer free) to GitHub Actions.","@koomie: as discussed, this switches our PR and push triggered CI from Travis (now that is no longer free) to GitHub Actions.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1290,2021-01-12T19:28:29Z,2021-01-12T21:56:35Z,2021-01-12T21:56:35Z,MERGED,True,18,0,1,https://github.com/koomie,rms/slurm: enable sview build in standalone package (#1289),1,[],https://github.com/openhpc/ohpc/pull/1290,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1290,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,Signed-off-by: Karl W. Schulz karl@oden.utexas.edu,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1294,2021-02-03T02:32:41Z,,2021-08-13T11:18:24Z,OPEN,False,304,0,10,https://github.com/ahillbright,Add Bright Cluster Manager 9.0 OpenHPC recipe,1,[],https://github.com/openhpc/ohpc/pull/1294,https://github.com/ahillbright,1,https://github.com/openhpc/ohpc/pull/1294,"This PR introduces a recipe for integrating Bright Cluster Manager 9.0/SLURM/CentOS 8 clusters with OpenHPC. The recipe is mainly based off the existing xCAT/Warewulf recipes with modifications to make it work in a Bright cluster.
Signed-off-by: Andrew Hill andrew.hill@brightcomputing.com","This PR introduces a recipe for integrating Bright Cluster Manager 9.0/SLURM/CentOS 8 clusters with OpenHPC. The recipe is mainly based off the existing xCAT/Warewulf recipes with modifications to make it work in a Bright cluster.
Signed-off-by: Andrew Hill andrew.hill@brightcomputing.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1311,2021-02-23T16:51:27Z,2021-02-23T16:58:50Z,2021-02-23T16:58:57Z,MERGED,True,22,25,1,https://github.com/koomie,"changes to support latest singularity build and enable bash completion (#1310,#1309)",4,[],https://github.com/openhpc/ohpc/pull/1311,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1311,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1312,2021-02-23T20:01:55Z,2021-03-24T14:12:35Z,2021-03-24T14:17:42Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.3.3,1,[],https://github.com/openhpc/ohpc/pull/1312,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1312,Signed-off-by: Kenneth Hoste kenneth.hoste@ugent.be,Signed-off-by: Kenneth Hoste kenneth.hoste@ugent.be,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1323,2021-05-18T16:50:55Z,2021-05-18T17:04:20Z,2021-05-18T17:18:44Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.3.4,1,[],https://github.com/openhpc/ohpc/pull/1323,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1323,"This was actually released back in April, but I forgot to open a PR here for it... 🤦","This was actually released back in April, but I forgot to open a PR here for it... 🤦",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1325,2021-06-11T18:54:40Z,2021-06-24T17:15:07Z,2021-06-25T05:23:28Z,CLOSED,False,22,334,14,https://github.com/jcsiadal,Remove Singularity from future releases,4,[],https://github.com/openhpc/ohpc/pull/1325,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1325,"With OpenSUSE 15.3 and the latest EPEL, distros are providing newer versions of Singularity that OpenHPC. I know this topic has come up in the past, but now seems like the right time to defer this package to the distros.
I believe I caught all of the instances related to OpenHPC 2.2+ There is an open question on how to configure testing for Charliecloud, since it's not obvious Singularity is needed to test Charliecloud. I modified the test to check for singularity so the log will show the problem.","With OpenSUSE 15.3 and the latest EPEL, distros are providing newer versions of Singularity that OpenHPC. I know this topic has come up in the past, but now seems like the right time to defer this package to the distros.
I believe I caught all of the instances related to OpenHPC 2.2+ There is an open question on how to configure testing for Charliecloud, since it's not obvious Singularity is needed to test Charliecloud. I modified the test to check for singularity so the log will show the problem.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1325,2021-06-11T18:54:40Z,2021-06-24T17:15:07Z,2021-06-25T05:23:28Z,CLOSED,False,22,334,14,https://github.com/jcsiadal,Remove Singularity from future releases,4,[],https://github.com/openhpc/ohpc/pull/1325,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1325#issuecomment-862427548,"With OpenSUSE 15.3 and the latest EPEL, distros are providing newer versions of Singularity that OpenHPC. I know this topic has come up in the past, but now seems like the right time to defer this package to the distros.
I believe I caught all of the instances related to OpenHPC 2.2+ There is an open question on how to configure testing for Charliecloud, since it's not obvious Singularity is needed to test Charliecloud. I modified the test to check for singularity so the log will show the problem.","If we did this, I don't think we would want to remove singularity checks. We still want to have a basic smoke test, but they would need to rely on the distro provided version instead. We still need to validate that the install instructions correctly land a working version.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1325,2021-06-11T18:54:40Z,2021-06-24T17:15:07Z,2021-06-25T05:23:28Z,CLOSED,False,22,334,14,https://github.com/jcsiadal,Remove Singularity from future releases,4,[],https://github.com/openhpc/ohpc/pull/1325,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1325#issuecomment-867812892,"With OpenSUSE 15.3 and the latest EPEL, distros are providing newer versions of Singularity that OpenHPC. I know this topic has come up in the past, but now seems like the right time to defer this package to the distros.
I believe I caught all of the instances related to OpenHPC 2.2+ There is an open question on how to configure testing for Charliecloud, since it's not obvious Singularity is needed to test Charliecloud. I modified the test to check for singularity so the log will show the problem.",Closing. Replace with #1327.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1326,2021-06-18T13:29:34Z,,2021-06-18T13:30:08Z,OPEN,False,22,1,1,https://github.com/TomTheBear,Update LIKWID to version 5.2.0 and enable aarch64 builds,2,[],https://github.com/openhpc/ohpc/pull/1326,https://github.com/TomTheBear,1,https://github.com/openhpc/ohpc/pull/1326,This PR adds version 5.2.0 of LIKWID with Intel IcelakeSP and AMD Zen3 support. The spec file was updated to work also for aarch64 builds.,This PR adds version 5.2.0 of LIKWID with Intel IcelakeSP and AMD Zen3 support. The spec file was updated to work also for aarch64 builds.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1327,2021-06-24T17:14:28Z,,2022-06-01T18:27:10Z,OPEN,False,23,189,9,https://github.com/jcsiadal,Remove Singularity from future releases (updated),2,[],https://github.com/openhpc/ohpc/pull/1327,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1327,"Replaces #1325.
With OpenSUSE 15.3 and the latest EPEL, distros are providing newer versions of Singularity that OpenHPC. The decision was made at the TSC to remove the provided package in favor of using the distro packages.
Testing is updated. Singularity remains as a check using the distro package. It no longer uses modules as distros already add bash completion for Singularity.
Documentation is not updated. We need to keep in mind that OpenSUSE requires all Singularity users to be added to the ""singularity"" group or they will get permission denied errors.","Replaces #1325.
With OpenSUSE 15.3 and the latest EPEL, distros are providing newer versions of Singularity that OpenHPC. The decision was made at the TSC to remove the provided package in favor of using the distro packages.
Testing is updated. Singularity remains as a check using the distro package. It no longer uses modules as distros already add bash completion for Singularity.
Documentation is not updated. We need to keep in mind that OpenSUSE requires all Singularity users to be added to the ""singularity"" group or they will get permission denied errors.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1327,2021-06-24T17:14:28Z,,2022-06-01T18:27:10Z,OPEN,False,23,189,9,https://github.com/jcsiadal,Remove Singularity from future releases (updated),2,[],https://github.com/openhpc/ohpc/pull/1327,https://github.com/ruixingw,2,https://github.com/openhpc/ohpc/pull/1327#issuecomment-871056674,"Replaces #1325.
With OpenSUSE 15.3 and the latest EPEL, distros are providing newer versions of Singularity that OpenHPC. The decision was made at the TSC to remove the provided package in favor of using the distro packages.
Testing is updated. Singularity remains as a check using the distro package. It no longer uses modules as distros already add bash completion for Singularity.
Documentation is not updated. We need to keep in mind that OpenSUSE requires all Singularity users to be added to the ""singularity"" group or they will get permission denied errors.","If this is removed from OHPC and distro packages are recommended, does it mean every compute nodes have to install Singularity to their own local disk? (assuming stateful installation)",True,{'EYES': ['https://github.com/viniciusferrao']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1327,2021-06-24T17:14:28Z,,2022-06-01T18:27:10Z,OPEN,False,23,189,9,https://github.com/jcsiadal,Remove Singularity from future releases (updated),2,[],https://github.com/openhpc/ohpc/pull/1327,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1327#issuecomment-1129485055,"Replaces #1325.
With OpenSUSE 15.3 and the latest EPEL, distros are providing newer versions of Singularity that OpenHPC. The decision was made at the TSC to remove the provided package in favor of using the distro packages.
Testing is updated. Singularity remains as a check using the distro package. It no longer uses modules as distros already add bash completion for Singularity.
Documentation is not updated. We need to keep in mind that OpenSUSE requires all Singularity users to be added to the ""singularity"" group or they will get permission denied errors.",@adrianreber take a look at this. The TSC decision last year was to remove Singularity from OpenHPC. I've rebased this to the current 2.x branch.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1327,2021-06-24T17:14:28Z,,2022-06-01T18:27:10Z,OPEN,False,23,189,9,https://github.com/jcsiadal,Remove Singularity from future releases (updated),2,[],https://github.com/openhpc/ohpc/pull/1327,https://github.com/jcsiadal,4,https://github.com/openhpc/ohpc/pull/1327#issuecomment-1143991372,"Replaces #1325.
With OpenSUSE 15.3 and the latest EPEL, distros are providing newer versions of Singularity that OpenHPC. The decision was made at the TSC to remove the provided package in favor of using the distro packages.
Testing is updated. Singularity remains as a check using the distro package. It no longer uses modules as distros already add bash completion for Singularity.
Documentation is not updated. We need to keep in mind that OpenSUSE requires all Singularity users to be added to the ""singularity"" group or they will get permission denied errors.",@adrianreber - I think changes to the CI are an issue here. The validation tests are looking for .spec file that shouldn't exist with the package removal.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1328,2021-06-26T07:36:18Z,2021-07-06T13:14:19Z,2021-07-06T13:14:22Z,CLOSED,False,1,1,1,https://github.com/boegel,EasyBuild v4.4.0,1,[],https://github.com/openhpc/ohpc/pull/1328,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1328,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1328,2021-06-26T07:36:18Z,2021-07-06T13:14:19Z,2021-07-06T13:14:22Z,CLOSED,False,1,1,1,https://github.com/boegel,EasyBuild v4.4.0,1,[],https://github.com/openhpc/ohpc/pull/1328,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/1328#issuecomment-874749281,,superseded by #1331,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1330,2021-07-06T07:57:53Z,,2022-05-26T15:01:25Z,OPEN,False,127,637,9,https://github.com/jcsiadal,TAU update to 2.30.1,5,[],https://github.com/openhpc/ohpc/pull/1330,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1330,"Updated TAU needed for LEAP/SLES 15U3.
Rewrote most of the scripting. It's better aligned with RPM workflow now, so that all pre-build source modification is in the %prep section, and all code generation is in the %build section. I couldn't understand the reason for the previous double-build operation (old bug-workaround maybe), so it's gone.
TAU is an odd package because of its insistence on absolute paths everywhere. Any remaining build path strings are similar to the current 2.29 RPM--they are strings in lib files; however, readelf -a reports no leftover build path in libs or binaries. Test-suite results are identical to the 2.29 RPM results.
Building successfully on OBS, except for arm where the compiler licenses are missing or expired.
We'll be doing more testing on this update internally.","Updated TAU needed for LEAP/SLES 15U3.
Rewrote most of the scripting. It's better aligned with RPM workflow now, so that all pre-build source modification is in the %prep section, and all code generation is in the %build section. I couldn't understand the reason for the previous double-build operation (old bug-workaround maybe), so it's gone.
TAU is an odd package because of its insistence on absolute paths everywhere. Any remaining build path strings are similar to the current 2.29 RPM--they are strings in lib files; however, readelf -a reports no leftover build path in libs or binaries. Test-suite results are identical to the 2.29 RPM results.
Building successfully on OBS, except for arm where the compiler licenses are missing or expired.
We'll be doing more testing on this update internally.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1331,2021-07-06T13:14:06Z,2021-09-07T11:32:33Z,2021-09-07T11:32:36Z,CLOSED,False,1325,572,100,https://github.com/boegel,EasyBuild v4.4.1,53,[],https://github.com/openhpc/ohpc/pull/1331,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1331,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1331,2021-07-06T13:14:06Z,2021-09-07T11:32:33Z,2021-09-07T11:32:36Z,CLOSED,False,1325,572,100,https://github.com/boegel,EasyBuild v4.4.1,53,[],https://github.com/openhpc/ohpc/pull/1331,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/1331#issuecomment-914226738,,"superseded by #1349, so closing",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1334,2021-07-08T01:10:35Z,2021-09-08T16:03:25Z,2021-09-08T16:03:25Z,CLOSED,False,0,0,0,https://github.com/rhenwood-arm,Compatability layer for Arm 21 compiler release.,0,[],https://github.com/openhpc/ohpc/pull/1334,https://github.com/rhenwood-arm,1,https://github.com/openhpc/ohpc/pull/1334,The current Arm compiler release is 21. Update the compatibility spec file to use this release.,The current Arm compiler release is 21. Update the compatibility spec file to use this release.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1334,2021-07-08T01:10:35Z,2021-09-08T16:03:25Z,2021-09-08T16:03:25Z,CLOSED,False,0,0,0,https://github.com/rhenwood-arm,Compatability layer for Arm 21 compiler release.,0,[],https://github.com/openhpc/ohpc/pull/1334,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1334#issuecomment-915255322,The current Arm compiler release is 21. Update the compatibility spec file to use this release.,"Just noticed this PR got funky with 101 file changes.  Do you want to update (or create a fresh PR) to isolate your change. Alternatively, if you can confirm that 4a31fae is the only intended change, I can cherry-pick that directly.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1336,2021-07-12T11:42:33Z,2021-07-13T00:39:54Z,2021-07-13T00:39:54Z,CLOSED,False,1,2,1,https://github.com/xiexianbin,Fix slurm.conf NodeName config bug,1,[],https://github.com/openhpc/ohpc/pull/1336,https://github.com/xiexianbin,1,https://github.com/openhpc/ohpc/pull/1336,issue #1335,issue #1335,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1337,2021-07-12T17:53:43Z,2021-11-13T01:14:45Z,2021-11-13T01:14:45Z,CLOSED,False,1367,599,101,https://github.com/jcsiadal,CMake update to 3.20.5,56,[],https://github.com/openhpc/ohpc/pull/1337,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1337,"This updates CMake to version 3.20.5. Also revised the build to align with rpmbuild stages and made the bootstrap parallel.
Quick background: Several packages that were building without error on SLES15SP3 using the distro cmake were moved to the OpenHPC 2.3 cmake and then encountered build errors. I updated the OpenHPC cmake to this version (3.20.5) and the packages again built without errors.
Will also post update to ohpc-filesystem. Individual packages shouldn't need to own the root utilities directory.","This updates CMake to version 3.20.5. Also revised the build to align with rpmbuild stages and made the bootstrap parallel.
Quick background: Several packages that were building without error on SLES15SP3 using the distro cmake were moved to the OpenHPC 2.3 cmake and then encountered build errors. I updated the OpenHPC cmake to this version (3.20.5) and the packages again built without errors.
Will also post update to ohpc-filesystem. Individual packages shouldn't need to own the root utilities directory.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1337,2021-07-12T17:53:43Z,2021-11-13T01:14:45Z,2021-11-13T01:14:45Z,CLOSED,False,1367,599,101,https://github.com/jcsiadal,CMake update to 3.20.5,56,[],https://github.com/openhpc/ohpc/pull/1337,https://github.com/koomie,2,https://github.com/openhpc/ohpc/pull/1337#issuecomment-967752768,"This updates CMake to version 3.20.5. Also revised the build to align with rpmbuild stages and made the bootstrap parallel.
Quick background: Several packages that were building without error on SLES15SP3 using the distro cmake were moved to the OpenHPC 2.3 cmake and then encountered build errors. I updated the OpenHPC cmake to this version (3.20.5) and the packages again built without errors.
Will also post update to ohpc-filesystem. Individual packages shouldn't need to own the root utilities directory.",Superseded by #1356,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1338,2021-07-13T00:49:32Z,,2022-04-25T07:13:07Z,OPEN,False,1,2,1,https://github.com/xiexianbin,Fix slurm.conf NodeName config bug,1,[],https://github.com/openhpc/ohpc/pull/1338,https://github.com/xiexianbin,1,https://github.com/openhpc/ohpc/pull/1338,"issue #1335
Signed-off-by: xiexianbin me@xiexianbin.cn","issue #1335
Signed-off-by: xiexianbin me@xiexianbin.cn",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1338,2021-07-13T00:49:32Z,,2022-04-25T07:13:07Z,OPEN,False,1,2,1,https://github.com/xiexianbin,Fix slurm.conf NodeName config bug,1,[],https://github.com/openhpc/ohpc/pull/1338,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1338#issuecomment-1096296237,"issue #1335
Signed-off-by: xiexianbin me@xiexianbin.cn",Can you please rebase this PR?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1338,2021-07-13T00:49:32Z,,2022-04-25T07:13:07Z,OPEN,False,1,2,1,https://github.com/xiexianbin,Fix slurm.conf NodeName config bug,1,[],https://github.com/openhpc/ohpc/pull/1338,https://github.com/xiexianbin,3,https://github.com/openhpc/ohpc/pull/1338#issuecomment-1101941625,"issue #1335
Signed-off-by: xiexianbin me@xiexianbin.cn",rebase Done,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1338,2021-07-13T00:49:32Z,,2022-04-25T07:13:07Z,OPEN,False,1,2,1,https://github.com/xiexianbin,Fix slurm.conf NodeName config bug,1,[],https://github.com/openhpc/ohpc/pull/1338,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/1338#issuecomment-1108161740,"issue #1335
Signed-off-by: xiexianbin me@xiexianbin.cn","This sounds correct from my point of view, but I am not 100% sure. @koomie if you have a chance please have a look if this is correct.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1339,2021-07-13T01:37:58Z,,2021-08-13T11:18:24Z,OPEN,False,1368,615,101,https://github.com/jcsiadal,Updated filesystem RPM,55,[],https://github.com/openhpc/ohpc/pull/1339,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1339,"Signed-off-by: Jeremy Siadal jeremy.c.siadal@intel.com
Need to add utils subdirectory to the filesystem RPM.
Looking at the current layout, there are two authoritative (hardcoded) sources for the OHPC FS hierarchy: OHPC_macros and ohpc-filesystem. They do not reference each other and they're synchronized manually. instead, we should maintain a single authoritative source and all other RPMs should refer to it. OHPC_macros makes the most sense.
I've added OHPC_macros and replaced hard-coded values with macros. The resulting RPMs are identical to the original, except for utils and doc being added to the FS.","Signed-off-by: Jeremy Siadal jeremy.c.siadal@intel.com
Need to add utils subdirectory to the filesystem RPM.
Looking at the current layout, there are two authoritative (hardcoded) sources for the OHPC FS hierarchy: OHPC_macros and ohpc-filesystem. They do not reference each other and they're synchronized manually. instead, we should maintain a single authoritative source and all other RPMs should refer to it. OHPC_macros makes the most sense.
I've added OHPC_macros and replaced hard-coded values with macros. The resulting RPMs are identical to the original, except for utils and doc being added to the FS.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1339,2021-07-13T01:37:58Z,,2021-08-13T11:18:24Z,OPEN,False,1368,615,101,https://github.com/jcsiadal,Updated filesystem RPM,55,[],https://github.com/openhpc/ohpc/pull/1339,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1339#issuecomment-878713868,"Signed-off-by: Jeremy Siadal jeremy.c.siadal@intel.com
Need to add utils subdirectory to the filesystem RPM.
Looking at the current layout, there are two authoritative (hardcoded) sources for the OHPC FS hierarchy: OHPC_macros and ohpc-filesystem. They do not reference each other and they're synchronized manually. instead, we should maintain a single authoritative source and all other RPMs should refer to it. OHPC_macros makes the most sense.
I've added OHPC_macros and replaced hard-coded values with macros. The resulting RPMs are identical to the original, except for utils and doc being added to the FS.",Also added the URL. Not sure why that hasn't been picked up by our automated checks before.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1340,2021-07-20T23:02:44Z,2022-06-01T17:03:27Z,2022-06-01T17:03:27Z,CLOSED,False,1488,733,104,https://github.com/jcsiadal,NetCDF update to supprt OpenSUSE 15.3,59,[],https://github.com/openhpc/ohpc/pull/1340,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1340,"Update needed for netcdf-fortran to support building on LEAP 15.3 with Intel PSXE Compilers. I updated all three packages at the same time.

The code authors prefer cmake/make over configure/make, so specfiles are updated to use that method. I also tested pure cmake and it also works. I had some build issues with the current cmake, but both the distro-provided and latest cmake versions worked. CMake update submitted as  PR#1337.
(I prefer we move exclusively to our cmake. I've see too many issues when the cmake version changes and this let's us ignore changes to the distro cmake)
Updated the specfiles to conform to most of the distro RPM spec standards.
Updated description with the latest text from Unidata.
Note that using cmake changes the resulting netcdf-cxx4 lib name. Not sure if they intended that and devs have not responded to my issue.","Update needed for netcdf-fortran to support building on LEAP 15.3 with Intel PSXE Compilers. I updated all three packages at the same time.

The code authors prefer cmake/make over configure/make, so specfiles are updated to use that method. I also tested pure cmake and it also works. I had some build issues with the current cmake, but both the distro-provided and latest cmake versions worked. CMake update submitted as  PR#1337.
(I prefer we move exclusively to our cmake. I've see too many issues when the cmake version changes and this let's us ignore changes to the distro cmake)
Updated the specfiles to conform to most of the distro RPM spec standards.
Updated description with the latest text from Unidata.
Note that using cmake changes the resulting netcdf-cxx4 lib name. Not sure if they intended that and devs have not responded to my issue.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1340,2021-07-20T23:02:44Z,2022-06-01T17:03:27Z,2022-06-01T17:03:27Z,CLOSED,False,1488,733,104,https://github.com/jcsiadal,NetCDF update to supprt OpenSUSE 15.3,59,[],https://github.com/openhpc/ohpc/pull/1340,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1340#issuecomment-1143882959,"Update needed for netcdf-fortran to support building on LEAP 15.3 with Intel PSXE Compilers. I updated all three packages at the same time.

The code authors prefer cmake/make over configure/make, so specfiles are updated to use that method. I also tested pure cmake and it also works. I had some build issues with the current cmake, but both the distro-provided and latest cmake versions worked. CMake update submitted as  PR#1337.
(I prefer we move exclusively to our cmake. I've see too many issues when the cmake version changes and this let's us ignore changes to the distro cmake)
Updated the specfiles to conform to most of the distro RPM spec standards.
Updated description with the latest text from Unidata.
Note that using cmake changes the resulting netcdf-cxx4 lib name. Not sure if they intended that and devs have not responded to my issue.",Closing. Will issue new update for OpenSUSE 15.4.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1341,2021-08-03T01:56:33Z,2021-11-12T20:22:24Z,2021-11-12T20:22:25Z,CLOSED,False,614,291,5,https://github.com/jcsiadal,intel-compiler/mpi-devel package update to oneAPI,5,[],https://github.com/openhpc/ohpc/pull/1341,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1341,"This updates the intel-compiler-devel and intel-mpi-devel packages to use oneAPI. I'm interested in having others try this out and getting feedback. Given that oneAPI has been out for half-a-year, I'd like migrate before the next release. That said, I'll need some help with OBS Testing. it will require modifying the base images to install the toolkit release package instead of PSXE and I don't have experience with that.
Reference issue #1317
This was tested on CentOS 8.4 and OpenSUSE 15.3 with the latest PSXE and two oneAPI releases. Tested builds of various package using the latest oneAPI HPC TK. Packages seem to be working, but there are a lot of warnings about unsupported command line options.
This is a short summary of changes:

The compiler package includes a oneAPI release package that configures the YUM repo. After this is installed, the compiler-devel package can be installed and will install the oneAPI HPC Toolkit as a dependency.
Included oneAPI modulefiles are used. OHPC intel/impi module names remain the the same, but are greatly simplified, prepending the oneAPI module directory only when needed.
The legacy compilers are used, to simplify initial migration.
A minimum version is set. Older oneAPI builds don't work with LMOD without patching oneAPI modulefiles.
Install/removal of the RPMs won't clobber any generated files that the user has modified.
The previous PSXE package is renamed and works the same way it used to. I tried to simplify a lot of it, since the 1.x stuff isn't relevant any more.

I would ultimately like move the module generation to a utility and call it in pre and post. That way an admin could update their configuration without reinstalling the RPM.","This updates the intel-compiler-devel and intel-mpi-devel packages to use oneAPI. I'm interested in having others try this out and getting feedback. Given that oneAPI has been out for half-a-year, I'd like migrate before the next release. That said, I'll need some help with OBS Testing. it will require modifying the base images to install the toolkit release package instead of PSXE and I don't have experience with that.
Reference issue #1317
This was tested on CentOS 8.4 and OpenSUSE 15.3 with the latest PSXE and two oneAPI releases. Tested builds of various package using the latest oneAPI HPC TK. Packages seem to be working, but there are a lot of warnings about unsupported command line options.
This is a short summary of changes:

The compiler package includes a oneAPI release package that configures the YUM repo. After this is installed, the compiler-devel package can be installed and will install the oneAPI HPC Toolkit as a dependency.
Included oneAPI modulefiles are used. OHPC intel/impi module names remain the the same, but are greatly simplified, prepending the oneAPI module directory only when needed.
The legacy compilers are used, to simplify initial migration.
A minimum version is set. Older oneAPI builds don't work with LMOD without patching oneAPI modulefiles.
Install/removal of the RPMs won't clobber any generated files that the user has modified.
The previous PSXE package is renamed and works the same way it used to. I tried to simplify a lot of it, since the 1.x stuff isn't relevant any more.

I would ultimately like move the module generation to a utility and call it in pre and post. That way an admin could update their configuration without reinstalling the RPM.",True,"{'THUMBS_UP': ['https://github.com/viniciusferrao', 'https://github.com/whophil']}"
openhpc/ohpc,https://github.com/openhpc/ohpc,1341,2021-08-03T01:56:33Z,2021-11-12T20:22:24Z,2021-11-12T20:22:25Z,CLOSED,False,614,291,5,https://github.com/jcsiadal,intel-compiler/mpi-devel package update to oneAPI,5,[],https://github.com/openhpc/ohpc/pull/1341,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1341#issuecomment-893878172,"This updates the intel-compiler-devel and intel-mpi-devel packages to use oneAPI. I'm interested in having others try this out and getting feedback. Given that oneAPI has been out for half-a-year, I'd like migrate before the next release. That said, I'll need some help with OBS Testing. it will require modifying the base images to install the toolkit release package instead of PSXE and I don't have experience with that.
Reference issue #1317
This was tested on CentOS 8.4 and OpenSUSE 15.3 with the latest PSXE and two oneAPI releases. Tested builds of various package using the latest oneAPI HPC TK. Packages seem to be working, but there are a lot of warnings about unsupported command line options.
This is a short summary of changes:

The compiler package includes a oneAPI release package that configures the YUM repo. After this is installed, the compiler-devel package can be installed and will install the oneAPI HPC Toolkit as a dependency.
Included oneAPI modulefiles are used. OHPC intel/impi module names remain the the same, but are greatly simplified, prepending the oneAPI module directory only when needed.
The legacy compilers are used, to simplify initial migration.
A minimum version is set. Older oneAPI builds don't work with LMOD without patching oneAPI modulefiles.
Install/removal of the RPMs won't clobber any generated files that the user has modified.
The previous PSXE package is renamed and works the same way it used to. I tried to simplify a lot of it, since the 1.x stuff isn't relevant any more.

I would ultimately like move the module generation to a utility and call it in pre and post. That way an admin could update their configuration without reinstalling the RPM.","Locally built all OpenHPC 2.x packages on OpenSUSE 15.3 with this PR and other applicable PRs applied. Everything builds except for dimemas, metis, mumps, petsc, plasma, scipy, slepc, and superlu_dist. I'm going to work on updates for these.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1341,2021-08-03T01:56:33Z,2021-11-12T20:22:24Z,2021-11-12T20:22:25Z,CLOSED,False,614,291,5,https://github.com/jcsiadal,intel-compiler/mpi-devel package update to oneAPI,5,[],https://github.com/openhpc/ohpc/pull/1341,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1341#issuecomment-894966996,"This updates the intel-compiler-devel and intel-mpi-devel packages to use oneAPI. I'm interested in having others try this out and getting feedback. Given that oneAPI has been out for half-a-year, I'd like migrate before the next release. That said, I'll need some help with OBS Testing. it will require modifying the base images to install the toolkit release package instead of PSXE and I don't have experience with that.
Reference issue #1317
This was tested on CentOS 8.4 and OpenSUSE 15.3 with the latest PSXE and two oneAPI releases. Tested builds of various package using the latest oneAPI HPC TK. Packages seem to be working, but there are a lot of warnings about unsupported command line options.
This is a short summary of changes:

The compiler package includes a oneAPI release package that configures the YUM repo. After this is installed, the compiler-devel package can be installed and will install the oneAPI HPC Toolkit as a dependency.
Included oneAPI modulefiles are used. OHPC intel/impi module names remain the the same, but are greatly simplified, prepending the oneAPI module directory only when needed.
The legacy compilers are used, to simplify initial migration.
A minimum version is set. Older oneAPI builds don't work with LMOD without patching oneAPI modulefiles.
Install/removal of the RPMs won't clobber any generated files that the user has modified.
The previous PSXE package is renamed and works the same way it used to. I tried to simplify a lot of it, since the 1.x stuff isn't relevant any more.

I would ultimately like move the module generation to a utility and call it in pre and post. That way an admin could update their configuration without reinstalling the RPM.","I pushed a minor fixup. All packages are building with oneAPI 2021.3 except for R and SciPy. Both of those packages should be updated to new versions. I'm able to build R using its latest release.
Trilinos also builds correctly with a one line patch; it was not building successfully before on Parallel Studio.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1341,2021-08-03T01:56:33Z,2021-11-12T20:22:24Z,2021-11-12T20:22:25Z,CLOSED,False,614,291,5,https://github.com/jcsiadal,intel-compiler/mpi-devel package update to oneAPI,5,[],https://github.com/openhpc/ohpc/pull/1341,https://github.com/koomie,4,https://github.com/openhpc/ohpc/pull/1341#issuecomment-967482862,"This updates the intel-compiler-devel and intel-mpi-devel packages to use oneAPI. I'm interested in having others try this out and getting feedback. Given that oneAPI has been out for half-a-year, I'd like migrate before the next release. That said, I'll need some help with OBS Testing. it will require modifying the base images to install the toolkit release package instead of PSXE and I don't have experience with that.
Reference issue #1317
This was tested on CentOS 8.4 and OpenSUSE 15.3 with the latest PSXE and two oneAPI releases. Tested builds of various package using the latest oneAPI HPC TK. Packages seem to be working, but there are a lot of warnings about unsupported command line options.
This is a short summary of changes:

The compiler package includes a oneAPI release package that configures the YUM repo. After this is installed, the compiler-devel package can be installed and will install the oneAPI HPC Toolkit as a dependency.
Included oneAPI modulefiles are used. OHPC intel/impi module names remain the the same, but are greatly simplified, prepending the oneAPI module directory only when needed.
The legacy compilers are used, to simplify initial migration.
A minimum version is set. Older oneAPI builds don't work with LMOD without patching oneAPI modulefiles.
Install/removal of the RPMs won't clobber any generated files that the user has modified.
The previous PSXE package is renamed and works the same way it used to. I tried to simplify a lot of it, since the 1.x stuff isn't relevant any more.

I would ultimately like move the module generation to a utility and call it in pre and post. That way an admin could update their configuration without reinstalling the RPM.",Landed with some follow-on tweaks in #1390.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1342,2021-08-09T05:46:04Z,2022-05-18T01:48:59Z,2022-05-18T01:48:59Z,CLOSED,False,1368,701,103,https://github.com/jcsiadal,Remove Flex from OpenHPC,57,[],https://github.com/openhpc/ohpc/pull/1342,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1342,"The goal here is to remove an unnecessary package, as distros provide current versions of flex.
It's currently used just for compiling dimemas, and is only needed for SUSE. The dimemas build requires the static flex libs which are not available in SUSE, while the rest of the BSC tools compile with the shared libs. Dimemas could likely be patched, but it would be a much larger task.
Instead of supporting a separate package just for dimemas build requirements, I in-lined a temp flex build to provide the static libs.","The goal here is to remove an unnecessary package, as distros provide current versions of flex.
It's currently used just for compiling dimemas, and is only needed for SUSE. The dimemas build requires the static flex libs which are not available in SUSE, while the rest of the BSC tools compile with the shared libs. Dimemas could likely be patched, but it would be a much larger task.
Instead of supporting a separate package just for dimemas build requirements, I in-lined a temp flex build to provide the static libs.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1342,2021-08-09T05:46:04Z,2022-05-18T01:48:59Z,2022-05-18T01:48:59Z,CLOSED,False,1368,701,103,https://github.com/jcsiadal,Remove Flex from OpenHPC,57,[],https://github.com/openhpc/ohpc/pull/1342,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1342#issuecomment-1096297167,"The goal here is to remove an unnecessary package, as distros provide current versions of flex.
It's currently used just for compiling dimemas, and is only needed for SUSE. The dimemas build requires the static flex libs which are not available in SUSE, while the rest of the BSC tools compile with the shared libs. Dimemas could likely be patched, but it would be a much larger task.
Instead of supporting a separate package just for dimemas build requirements, I in-lined a temp flex build to provide the static libs.",@jcsiadal I see there are a couple of PR from you. Could you please rebase your PRs.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1342,2021-08-09T05:46:04Z,2022-05-18T01:48:59Z,2022-05-18T01:48:59Z,CLOSED,False,1368,701,103,https://github.com/jcsiadal,Remove Flex from OpenHPC,57,[],https://github.com/openhpc/ohpc/pull/1342,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1342#issuecomment-1129483107,"The goal here is to remove an unnecessary package, as distros provide current versions of flex.
It's currently used just for compiling dimemas, and is only needed for SUSE. The dimemas build requires the static flex libs which are not available in SUSE, while the rest of the BSC tools compile with the shared libs. Dimemas could likely be patched, but it would be a much larger task.
Instead of supporting a separate package just for dimemas build requirements, I in-lined a temp flex build to provide the static libs.",Need to reevaluate this PR. Will resubmit if needed.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1349,2021-09-07T11:32:17Z,2021-09-08T10:19:47Z,2021-09-08T10:19:47Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.4.2,1,[],https://github.com/openhpc/ohpc/pull/1349,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1349,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1350,2021-09-08T16:09:40Z,2021-09-15T14:16:54Z,2021-09-15T14:16:54Z,MERGED,True,25,31,1,https://github.com/rhenwood-arm,Compatability layer for Arm 21 compiler release.,1,[],https://github.com/openhpc/ohpc/pull/1350,https://github.com/rhenwood-arm,1,https://github.com/openhpc/ohpc/pull/1350,"The current Arm compiler release is 21. Update the compatibility spec file to use this release.
Signed-off-by: Richard Henwood richard.henwood@arm.com","The current Arm compiler release is 21. Update the compatibility spec file to use this release.
Signed-off-by: Richard Henwood richard.henwood@arm.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1352,2021-09-13T14:31:28Z,2021-11-11T20:44:17Z,2021-11-11T20:44:17Z,MERGED,True,40,10,5,https://github.com/adrianreber,containers: update containers to 2.3.0,1,[],https://github.com/openhpc/ohpc/pull/1352,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1352,This updates the container Dockerfiles to 2.3.0 and enables multiarch images using 'make manifest-push'.,This updates the container Dockerfiles to 2.3.0 and enables multiarch images using 'make manifest-push'.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1365,2021-10-12T18:46:16Z,2021-11-13T01:35:28Z,2021-11-13T01:35:28Z,MERGED,True,13,0,1,https://github.com/mikerenfro,Match spack-ohpc dependencies to published system requirements,4,[],https://github.com/openhpc/ohpc/pull/1365,https://github.com/mikerenfro,1,https://github.com/openhpc/ohpc/pull/1365,"From discussion with @adrianreber on Slack this morning, we noticed on a fresh install of OHPC with Spack, that we were unable to run some spack install commands out of the box, due to us not yet having g++ installed, nor had we run spack compiler find after installing OHPC-packaged compilers to fix root's compilers.yaml.
This PR ensures all the system prerequisites are dependencies of the Spack package. It may not provide optimized compilations, but should work better out of the box.","From discussion with @adrianreber on Slack this morning, we noticed on a fresh install of OHPC with Spack, that we were unable to run some spack install commands out of the box, due to us not yet having g++ installed, nor had we run spack compiler find after installing OHPC-packaged compilers to fix root's compilers.yaml.
This PR ensures all the system prerequisites are dependencies of the Spack package. It may not provide optimized compilations, but should work better out of the box.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1365,2021-10-12T18:46:16Z,2021-11-13T01:35:28Z,2021-11-13T01:35:28Z,MERGED,True,13,0,1,https://github.com/mikerenfro,Match spack-ohpc dependencies to published system requirements,4,[],https://github.com/openhpc/ohpc/pull/1365,https://github.com/mikerenfro,2,https://github.com/openhpc/ohpc/pull/1365#issuecomment-941288585,"From discussion with @adrianreber on Slack this morning, we noticed on a fresh install of OHPC with Spack, that we were unable to run some spack install commands out of the box, due to us not yet having g++ installed, nor had we run spack compiler find after installing OHPC-packaged compilers to fix root's compilers.yaml.
This PR ensures all the system prerequisites are dependencies of the Spack package. It may not provide optimized compilations, but should work better out of the box.","Missed the signoff instructions at first, we'll get those fixed before marking ready for review.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1365,2021-10-12T18:46:16Z,2021-11-13T01:35:28Z,2021-11-13T01:35:28Z,MERGED,True,13,0,1,https://github.com/mikerenfro,Match spack-ohpc dependencies to published system requirements,4,[],https://github.com/openhpc/ohpc/pull/1365,https://github.com/sjpb,3,https://github.com/openhpc/ohpc/pull/1365#issuecomment-943251314,"From discussion with @adrianreber on Slack this morning, we noticed on a fresh install of OHPC with Spack, that we were unable to run some spack install commands out of the box, due to us not yet having g++ installed, nor had we run spack compiler find after installing OHPC-packaged compilers to fix root's compilers.yaml.
This PR ensures all the system prerequisites are dependencies of the Spack package. It may not provide optimized compilations, but should work better out of the box.","I think this is missing xz?
curl is also not listed in the docs as a dependency, but actually is - I know the CentOS GenericCloud I use includes that so not sure if it should be explicitly listed here.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1365,2021-10-12T18:46:16Z,2021-11-13T01:35:28Z,2021-11-13T01:35:28Z,MERGED,True,13,0,1,https://github.com/mikerenfro,Match spack-ohpc dependencies to published system requirements,4,[],https://github.com/openhpc/ohpc/pull/1365,https://github.com/Kerleyark,4,https://github.com/openhpc/ohpc/pull/1365#issuecomment-943459307,"From discussion with @adrianreber on Slack this morning, we noticed on a fresh install of OHPC with Spack, that we were unable to run some spack install commands out of the box, due to us not yet having g++ installed, nor had we run spack compiler find after installing OHPC-packaged compilers to fix root's compilers.yaml.
This PR ensures all the system prerequisites are dependencies of the Spack package. It may not provide optimized compilations, but should work better out of the box.","I think this is missing xz?
curl is also not listed in the docs as a dependency, but actually is - I know the CentOS GenericCloud I use includes that so not sure if it should be explicitly listed here.

The xz is supposed to be in there. I must have somehow looked over it. I will quickly correct that.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1366,2021-10-27T00:47:02Z,2021-11-11T00:21:10Z,2021-11-11T00:21:11Z,MERGED,True,30,27,5,https://github.com/bgeltz,Update msr-safe to v1.6.0,1,[],https://github.com/openhpc/ohpc/pull/1366,https://github.com/bgeltz,1,https://github.com/openhpc/ohpc/pull/1366,"In addition to the version bump in the spec file, this PR also updates the SOURCES with the latest fixes and enhancements from the msr-safe parent repo.
Resolves #1353.","In addition to the version bump in the spec file, this PR also updates the SOURCES with the latest fixes and enhancements from the msr-safe parent repo.
Resolves #1353.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1367,2021-10-28T19:03:41Z,2021-11-04T13:00:35Z,2021-11-04T13:00:35Z,MERGED,True,7,0,1,https://github.com/ECoulter,Added a softlink for modulecmd,1,[],https://github.com/openhpc/ohpc/pull/1367,https://github.com/ECoulter,1,https://github.com/openhpc/ohpc/pull/1367,"Adds a softlink from the lmod binary to /usr/bin/modulecmd
which is required by scl-utils, among other  things.
Tested with an Open Ondemand installation; does not seem to result in problems with scl-utils.
Fixes #1346
Signed-off-by: Eric Coulter jecoulte@iu.edu","Adds a softlink from the lmod binary to /usr/bin/modulecmd
which is required by scl-utils, among other  things.
Tested with an Open Ondemand installation; does not seem to result in problems with scl-utils.
Fixes #1346
Signed-off-by: Eric Coulter jecoulte@iu.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1368,2021-10-29T14:58:03Z,2021-11-11T20:43:11Z,2021-11-12T08:10:08Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.5.0,1,[],https://github.com/openhpc/ohpc/pull/1368,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1368,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1382,2021-11-09T05:52:54Z,2021-12-02T01:08:47Z,2021-12-02T01:08:48Z,CLOSED,False,734,0,3,https://github.com/jcsiadal,Warewulf 4 package,3,[],https://github.com/openhpc/ohpc/pull/1382,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1382,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Addresses issue #1314.
This is the current working package for Warewulf 4. It does not alter any Warewulf 3 components from the distro, so no changes to existing recipes are needed if we want to make this available for early adopters.
It uses the latest release, patched to fix helpfiles and RPM build errors (from merged PR195) and to relocate shared files.
Explicit conflicts are set for the previous WW3. It will not upgrade from WW3, but will upgrade itself.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Addresses issue #1314.
This is the current working package for Warewulf 4. It does not alter any Warewulf 3 components from the distro, so no changes to existing recipes are needed if we want to make this available for early adopters.
It uses the latest release, patched to fix helpfiles and RPM build errors (from merged PR195) and to relocate shared files.
Explicit conflicts are set for the previous WW3. It will not upgrade from WW3, but will upgrade itself.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1382,2021-11-09T05:52:54Z,2021-12-02T01:08:47Z,2021-12-02T01:08:48Z,CLOSED,False,734,0,3,https://github.com/jcsiadal,Warewulf 4 package,3,[],https://github.com/openhpc/ohpc/pull/1382,https://github.com/jcsiadal,2,https://github.com/openhpc/ohpc/pull/1382#issuecomment-984200131,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Addresses issue #1314.
This is the current working package for Warewulf 4. It does not alter any Warewulf 3 components from the distro, so no changes to existing recipes are needed if we want to make this available for early adopters.
It uses the latest release, patched to fix helpfiles and RPM build errors (from merged PR195) and to relocate shared files.
Explicit conflicts are set for the previous WW3. It will not upgrade from WW3, but will upgrade itself.",Will resubmit with a later version or commit. I want to capture some of the latest changes to the WW4 project.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1390,2021-11-12T20:11:27Z,2021-11-12T20:17:51Z,2021-12-02T23:44:46Z,MERGED,True,621,290,5,https://github.com/koomie,Oneapi,15,[],https://github.com/openhpc/ohpc/pull/1390,https://github.com/koomie,1,https://github.com/openhpc/ohpc/pull/1390,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1390,2021-11-12T20:11:27Z,2021-11-12T20:17:51Z,2021-12-02T23:44:46Z,MERGED,True,621,290,5,https://github.com/koomie,Oneapi,15,[],https://github.com/openhpc/ohpc/pull/1390,https://github.com/whophil,2,https://github.com/openhpc/ohpc/pull/1390#issuecomment-984970166,,"I know this is cutting edge, but is there any guidance on how to use this? I see oneAPI mentioned briefly in the latest install guides, but there is a broken reference, which I can only assume will answer all the questions I have :)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1390,2021-11-12T20:11:27Z,2021-11-12T20:17:51Z,2021-12-02T23:44:46Z,MERGED,True,621,290,5,https://github.com/koomie,Oneapi,15,[],https://github.com/openhpc/ohpc/pull/1390,https://github.com/koomie,3,https://github.com/openhpc/ohpc/pull/1390#issuecomment-984977180,,"That should be referring to the section entitled ""Optional Development Tool Builds"" which highlights installing oneAPI from public repositories on your head node using standard package manager semantics.  The packages with get installed into /opt/intel so that is why there is the optional suggestion in the bit you referenced to share that location over NFS.
Can you say which .pdf you see the broken link?  I've checked the Rocky SLURM variant and it looks ok.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1390,2021-11-12T20:11:27Z,2021-11-12T20:17:51Z,2021-12-02T23:44:46Z,MERGED,True,621,290,5,https://github.com/koomie,Oneapi,15,[],https://github.com/openhpc/ohpc/pull/1390,https://github.com/whophil,4,https://github.com/openhpc/ohpc/pull/1390#issuecomment-984980314,,"Thanks @koomie . I am seeing that in https://github.com/openhpc/ohpc/releases/download/v2.4.GA/Install_guide-rocky8-Warewulf-SLURM-2.4-aarch64.pdf, linked from the wiki page https://github.com/openhpc/ohpc/wiki/2.X.
That particular version of the install guide also makes no reference to oneAPI in the section Optional Development Tool Builds",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1390,2021-11-12T20:11:27Z,2021-11-12T20:17:51Z,2021-12-02T23:44:46Z,MERGED,True,621,290,5,https://github.com/koomie,Oneapi,15,[],https://github.com/openhpc/ohpc/pull/1390,https://github.com/koomie,5,https://github.com/openhpc/ohpc/pull/1390#issuecomment-984981670,,"Thanks @koomie . I am seeing that in https://github.com/openhpc/ohpc/releases/download/v2.4.GA/Install_guide-rocky8-Warewulf-SLURM-2.4-aarch64.pdf, linked from the wiki page https://github.com/openhpc/ohpc/wiki/2.X.
That particular version of the install guide also makes no reference to oneAPI in the section Optional Development Tool Builds

Ahh!  oneAPI only makes sense for x86_64 so should not be in the aarch64 recipes. I will fix that and update; thanks for pointing this out.",True,{'THUMBS_UP': ['https://github.com/whophil']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1390,2021-11-12T20:11:27Z,2021-11-12T20:17:51Z,2021-12-02T23:44:46Z,MERGED,True,621,290,5,https://github.com/koomie,Oneapi,15,[],https://github.com/openhpc/ohpc/pull/1390,https://github.com/whophil,6,https://github.com/openhpc/ohpc/pull/1390#issuecomment-984981978,,I realized only after sending the link that I had (accidentally) clicked on the aarch64 PDF. Thanks for the help!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1390,2021-11-12T20:11:27Z,2021-11-12T20:17:51Z,2021-12-02T23:44:46Z,MERGED,True,621,290,5,https://github.com/koomie,Oneapi,15,[],https://github.com/openhpc/ohpc/pull/1390,https://github.com/whophil,7,https://github.com/openhpc/ohpc/pull/1390#issuecomment-985026812,,"One last question here - is there a sanctioned way to enable Intel MPI? Following the install guide, I have installed:

intel-oneapi-toolkit-release-ohpc
intel-compilers-devel-ohpc
intel-mpi-devel-ohpc

This gives me an intel module, but it does not activate the paths for oneAPI's MPI.
Also, if there is a more appropriate place to ask these types of questions, please let me know! I have tried (unsuccessfully) to join both the OpenHPC mailing lists and Slack channels.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1390,2021-11-12T20:11:27Z,2021-11-12T20:17:51Z,2021-12-02T23:44:46Z,MERGED,True,621,290,5,https://github.com/koomie,Oneapi,15,[],https://github.com/openhpc/ohpc/pull/1390,https://github.com/koomie,8,https://github.com/openhpc/ohpc/pull/1390#issuecomment-985091932,,"One last question here - is there a sanctioned way to enable Intel MPI? Following the install guide, I have installed:

intel-oneapi-toolkit-release-ohpc
intel-compilers-devel-ohpc
intel-mpi-devel-ohpc

This gives me an intel module, but it does not activate the paths for oneAPI's MPI.

Correct. If you want intel mpi, then you need to load that module as well. So, assuming you have openmpi4 loaded currently you would: module swap openmpi4 impi

Also, if there is a more appropriate place to ask these types of questions, please let me know! I have tried (unsuccessfully) to join both the OpenHPC mailing lists and Slack channels.

Github is fine, although probably better to create a new ticket.  And, it would be nice to know what type of issues you are having with joining the mailing list and slack.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1397,2021-12-10T00:59:02Z,,2022-04-12T07:49:44Z,OPEN,False,2,2,2,https://github.com/dmcdougall,Fix typo in check_ssh nagios documentation,1,[],https://github.com/openhpc/ohpc/pull/1397,https://github.com/dmcdougall,1,https://github.com/openhpc/ohpc/pull/1397,Fixes #1396.,Fixes #1396.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1397,2021-12-10T00:59:02Z,,2022-04-12T07:49:44Z,OPEN,False,2,2,2,https://github.com/dmcdougall,Fix typo in check_ssh nagios documentation,1,[],https://github.com/openhpc/ohpc/pull/1397,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1397#issuecomment-1096287031,Fixes #1396.,Thanks for your PR. Sorry for the late feedback. Could you rebase and add a 'Signed-off-by` line to your pathc?,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1398,2021-12-13T19:32:33Z,2022-01-28T21:15:03Z,2022-01-28T21:15:07Z,CLOSED,False,1,1,1,https://github.com/boegel,EasyBuild v4.5.1,1,[],https://github.com/openhpc/ohpc/pull/1398,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1398,https://pypi.org/project/easybuild/4.5.1,https://pypi.org/project/easybuild/4.5.1,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1398,2021-12-13T19:32:33Z,2022-01-28T21:15:03Z,2022-01-28T21:15:07Z,CLOSED,False,1,1,1,https://github.com/boegel,EasyBuild v4.5.1,1,[],https://github.com/openhpc/ohpc/pull/1398,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/1398#issuecomment-1024640631,https://pypi.org/project/easybuild/4.5.1,superseded by #1405,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1402,2022-01-13T20:44:58Z,2022-04-12T07:44:32Z,2022-04-12T07:44:46Z,MERGED,True,1,0,1,https://github.com/solj,components/runtimes/singularity: Add build dependency,1,[],https://github.com/openhpc/ohpc/pull/1402,https://github.com/solj,1,https://github.com/openhpc/ohpc/pull/1402,"Singularity requires make in order to build.
Signed-off-by: Sol Jerome solj@utdallas.edu","Singularity requires make in order to build.
Signed-off-by: Sol Jerome solj@utdallas.edu",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1402,2022-01-13T20:44:58Z,2022-04-12T07:44:32Z,2022-04-12T07:44:46Z,MERGED,True,1,0,1,https://github.com/solj,components/runtimes/singularity: Add build dependency,1,[],https://github.com/openhpc/ohpc/pull/1402,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1402#issuecomment-1096279013,"Singularity requires make in order to build.
Signed-off-by: Sol Jerome solj@utdallas.edu",Sounds like a good idea. Thanks. Merged.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1405,2022-01-28T21:14:38Z,2022-03-31T13:07:14Z,2022-03-31T13:07:14Z,CLOSED,False,1,1,1,https://github.com/boegel,EasyBuild v4.5.2,1,[],https://github.com/openhpc/ohpc/pull/1405,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1405,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1405,2022-01-28T21:14:38Z,2022-03-31T13:07:14Z,2022-03-31T13:07:14Z,CLOSED,False,1,1,1,https://github.com/boegel,EasyBuild v4.5.2,1,[],https://github.com/openhpc/ohpc/pull/1405,https://github.com/boegel,2,https://github.com/openhpc/ohpc/pull/1405#issuecomment-1084554040,,superseded by #1414,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1407,2022-03-10T16:03:30Z,,2022-03-10T16:03:30Z,OPEN,False,103,0,2,https://github.com/shahzebsiddiqui,add buildtest LICENSE and spec file,1,[],https://github.com/openhpc/ohpc/pull/1407,https://github.com/shahzebsiddiqui,1,https://github.com/openhpc/ohpc/pull/1407,"@koomie this is a spec file buildtest see #920.
You may want to test this out, i tried building this locally but some macros like OHPC were not defined so i wasn't sure how to proceed. Let me know if you want me to fix anything.","@koomie this is a spec file buildtest see #920.
You may want to test this out, i tried building this locally but some macros like OHPC were not defined so i wasn't sure how to proceed. Let me know if you want me to fix anything.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1408,2022-03-11T18:20:12Z,2022-03-30T22:06:20Z,2022-04-29T16:08:14Z,MERGED,True,29,0,1,https://github.com/viniciusferrao,Added links to gcc and gfortran,2,[],https://github.com/openhpc/ohpc/pull/1408,https://github.com/viniciusferrao,1,https://github.com/openhpc/ohpc/pull/1408,"This commit fixes missing symbolic links and wrapper scripts for gcc
and gfortran. Fixes #328 and add new functionality.
cc -> gcc
c89 -> wrapper
c99 -> wrapper
f95 -> gfrotran
Those files are needed on some software that hardcode those binaries
on it's code during runtime. Since compute nodes don't usually have
""Development Tools"" installed from default system packages, it's
execution fails with command not found.
As a real world example, ANSYS Fluent would fail to execute:
-I/opt/ohpc/pub/apps/ansys_inc/v211/fluent/include -I. -c udf_names.c
/bin/sh: cc: command not found
make[3]: *** [udf_names.o] Error 127

Providing cc, c89, c99 and f95 will solve those specific
issues during execution. Patching and testing was done in a running
production OpenHPC cluster and it worked as expected:
$ which {cc,c89,c99,f95}
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/cc
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c89
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c99
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/f95

Code is based heavily on EL8 gcc package:
https://git.centos.org/rpms/gcc/blob/c8/f/SPECS/gcc.spec
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","This commit fixes missing symbolic links and wrapper scripts for gcc
and gfortran. Fixes #328 and add new functionality.
cc -> gcc
c89 -> wrapper
c99 -> wrapper
f95 -> gfrotran
Those files are needed on some software that hardcode those binaries
on it's code during runtime. Since compute nodes don't usually have
""Development Tools"" installed from default system packages, it's
execution fails with command not found.
As a real world example, ANSYS Fluent would fail to execute:
-I/opt/ohpc/pub/apps/ansys_inc/v211/fluent/include -I. -c udf_names.c
/bin/sh: cc: command not found
make[3]: *** [udf_names.o] Error 127

Providing cc, c89, c99 and f95 will solve those specific
issues during execution. Patching and testing was done in a running
production OpenHPC cluster and it worked as expected:
$ which {cc,c89,c99,f95}
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/cc
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c89
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c99
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/f95

Code is based heavily on EL8 gcc package:
https://git.centos.org/rpms/gcc/blob/c8/f/SPECS/gcc.spec
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1408,2022-03-11T18:20:12Z,2022-03-30T22:06:20Z,2022-04-29T16:08:14Z,MERGED,True,29,0,1,https://github.com/viniciusferrao,Added links to gcc and gfortran,2,[],https://github.com/openhpc/ohpc/pull/1408,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1408#issuecomment-1066454627,"This commit fixes missing symbolic links and wrapper scripts for gcc
and gfortran. Fixes #328 and add new functionality.
cc -> gcc
c89 -> wrapper
c99 -> wrapper
f95 -> gfrotran
Those files are needed on some software that hardcode those binaries
on it's code during runtime. Since compute nodes don't usually have
""Development Tools"" installed from default system packages, it's
execution fails with command not found.
As a real world example, ANSYS Fluent would fail to execute:
-I/opt/ohpc/pub/apps/ansys_inc/v211/fluent/include -I. -c udf_names.c
/bin/sh: cc: command not found
make[3]: *** [udf_names.o] Error 127

Providing cc, c89, c99 and f95 will solve those specific
issues during execution. Patching and testing was done in a running
production OpenHPC cluster and it worked as expected:
$ which {cc,c89,c99,f95}
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/cc
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c89
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c99
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/f95

Code is based heavily on EL8 gcc package:
https://git.centos.org/rpms/gcc/blob/c8/f/SPECS/gcc.spec
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",@utdsimmons @koomie Can someone approve the CI run.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1408,2022-03-11T18:20:12Z,2022-03-30T22:06:20Z,2022-04-29T16:08:14Z,MERGED,True,29,0,1,https://github.com/viniciusferrao,Added links to gcc and gfortran,2,[],https://github.com/openhpc/ohpc/pull/1408,https://github.com/utdsimmons,3,https://github.com/openhpc/ohpc/pull/1408#issuecomment-1071648177,"This commit fixes missing symbolic links and wrapper scripts for gcc
and gfortran. Fixes #328 and add new functionality.
cc -> gcc
c89 -> wrapper
c99 -> wrapper
f95 -> gfrotran
Those files are needed on some software that hardcode those binaries
on it's code during runtime. Since compute nodes don't usually have
""Development Tools"" installed from default system packages, it's
execution fails with command not found.
As a real world example, ANSYS Fluent would fail to execute:
-I/opt/ohpc/pub/apps/ansys_inc/v211/fluent/include -I. -c udf_names.c
/bin/sh: cc: command not found
make[3]: *** [udf_names.o] Error 127

Providing cc, c89, c99 and f95 will solve those specific
issues during execution. Patching and testing was done in a running
production OpenHPC cluster and it worked as expected:
$ which {cc,c89,c99,f95}
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/cc
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c89
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c99
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/f95

Code is based heavily on EL8 gcc package:
https://git.centos.org/rpms/gcc/blob/c8/f/SPECS/gcc.spec
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",Approved and it's queued; sorry for the delay.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1408,2022-03-11T18:20:12Z,2022-03-30T22:06:20Z,2022-04-29T16:08:14Z,MERGED,True,29,0,1,https://github.com/viniciusferrao,Added links to gcc and gfortran,2,[],https://github.com/openhpc/ohpc/pull/1408,https://github.com/viniciusferrao,4,https://github.com/openhpc/ohpc/pull/1408#issuecomment-1071723576,"This commit fixes missing symbolic links and wrapper scripts for gcc
and gfortran. Fixes #328 and add new functionality.
cc -> gcc
c89 -> wrapper
c99 -> wrapper
f95 -> gfrotran
Those files are needed on some software that hardcode those binaries
on it's code during runtime. Since compute nodes don't usually have
""Development Tools"" installed from default system packages, it's
execution fails with command not found.
As a real world example, ANSYS Fluent would fail to execute:
-I/opt/ohpc/pub/apps/ansys_inc/v211/fluent/include -I. -c udf_names.c
/bin/sh: cc: command not found
make[3]: *** [udf_names.o] Error 127

Providing cc, c89, c99 and f95 will solve those specific
issues during execution. Patching and testing was done in a running
production OpenHPC cluster and it worked as expected:
$ which {cc,c89,c99,f95}
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/cc
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c89
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c99
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/f95

Code is based heavily on EL8 gcc package:
https://git.centos.org/rpms/gcc/blob/c8/f/SPECS/gcc.spec
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","It seems that CentOS repositories are dead, and CI/CD failed:
Step 5/9 : RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
28
 ---> Running in 9c2a7b159451
29
CentOS Linux 8 - AppStream                      318  B/s |  38  B     00:00    
30
Error: Failed to download metadata for repo 'appstream': Cannot prepare internal mirrorlist: No URLs in mirrorlist",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1408,2022-03-11T18:20:12Z,2022-03-30T22:06:20Z,2022-04-29T16:08:14Z,MERGED,True,29,0,1,https://github.com/viniciusferrao,Added links to gcc and gfortran,2,[],https://github.com/openhpc/ohpc/pull/1408,https://github.com/adrianreber,5,https://github.com/openhpc/ohpc/pull/1408#issuecomment-1072308325,"This commit fixes missing symbolic links and wrapper scripts for gcc
and gfortran. Fixes #328 and add new functionality.
cc -> gcc
c89 -> wrapper
c99 -> wrapper
f95 -> gfrotran
Those files are needed on some software that hardcode those binaries
on it's code during runtime. Since compute nodes don't usually have
""Development Tools"" installed from default system packages, it's
execution fails with command not found.
As a real world example, ANSYS Fluent would fail to execute:
-I/opt/ohpc/pub/apps/ansys_inc/v211/fluent/include -I. -c udf_names.c
/bin/sh: cc: command not found
make[3]: *** [udf_names.o] Error 127

Providing cc, c89, c99 and f95 will solve those specific
issues during execution. Patching and testing was done in a running
production OpenHPC cluster and it worked as expected:
$ which {cc,c89,c99,f95}
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/cc
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c89
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c99
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/f95

Code is based heavily on EL8 gcc package:
https://git.centos.org/rpms/gcc/blob/c8/f/SPECS/gcc.spec
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",Please rebase once your Dockerfile PR has been merged.,True,{'THUMBS_UP': ['https://github.com/viniciusferrao']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1408,2022-03-11T18:20:12Z,2022-03-30T22:06:20Z,2022-04-29T16:08:14Z,MERGED,True,29,0,1,https://github.com/viniciusferrao,Added links to gcc and gfortran,2,[],https://github.com/openhpc/ohpc/pull/1408,https://github.com/viniciusferrao,6,https://github.com/openhpc/ohpc/pull/1408#issuecomment-1082143467,"This commit fixes missing symbolic links and wrapper scripts for gcc
and gfortran. Fixes #328 and add new functionality.
cc -> gcc
c89 -> wrapper
c99 -> wrapper
f95 -> gfrotran
Those files are needed on some software that hardcode those binaries
on it's code during runtime. Since compute nodes don't usually have
""Development Tools"" installed from default system packages, it's
execution fails with command not found.
As a real world example, ANSYS Fluent would fail to execute:
-I/opt/ohpc/pub/apps/ansys_inc/v211/fluent/include -I. -c udf_names.c
/bin/sh: cc: command not found
make[3]: *** [udf_names.o] Error 127

Providing cc, c89, c99 and f95 will solve those specific
issues during execution. Patching and testing was done in a running
production OpenHPC cluster and it worked as expected:
$ which {cc,c89,c99,f95}
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/cc
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c89
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c99
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/f95

Code is based heavily on EL8 gcc package:
https://git.centos.org/rpms/gcc/blob/c8/f/SPECS/gcc.spec
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","Already done the rebase as requested @adrianreber
Thank you.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1408,2022-03-11T18:20:12Z,2022-03-30T22:06:20Z,2022-04-29T16:08:14Z,MERGED,True,29,0,1,https://github.com/viniciusferrao,Added links to gcc and gfortran,2,[],https://github.com/openhpc/ohpc/pull/1408,https://github.com/viniciusferrao,7,https://github.com/openhpc/ohpc/pull/1408#issuecomment-1083675093,"This commit fixes missing symbolic links and wrapper scripts for gcc
and gfortran. Fixes #328 and add new functionality.
cc -> gcc
c89 -> wrapper
c99 -> wrapper
f95 -> gfrotran
Those files are needed on some software that hardcode those binaries
on it's code during runtime. Since compute nodes don't usually have
""Development Tools"" installed from default system packages, it's
execution fails with command not found.
As a real world example, ANSYS Fluent would fail to execute:
-I/opt/ohpc/pub/apps/ansys_inc/v211/fluent/include -I. -c udf_names.c
/bin/sh: cc: command not found
make[3]: *** [udf_names.o] Error 127

Providing cc, c89, c99 and f95 will solve those specific
issues during execution. Patching and testing was done in a running
production OpenHPC cluster and it worked as expected:
$ which {cc,c89,c99,f95}
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/cc
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c89
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c99
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/f95

Code is based heavily on EL8 gcc package:
https://git.centos.org/rpms/gcc/blob/c8/f/SPECS/gcc.spec
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",Thanks @adrianreber the PR is now passing. I've done an empty commit just to trigger CI/CD.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1408,2022-03-11T18:20:12Z,2022-03-30T22:06:20Z,2022-04-29T16:08:14Z,MERGED,True,29,0,1,https://github.com/viniciusferrao,Added links to gcc and gfortran,2,[],https://github.com/openhpc/ohpc/pull/1408,https://github.com/utdsimmons,8,https://github.com/openhpc/ohpc/pull/1408#issuecomment-1083678497,"This commit fixes missing symbolic links and wrapper scripts for gcc
and gfortran. Fixes #328 and add new functionality.
cc -> gcc
c89 -> wrapper
c99 -> wrapper
f95 -> gfrotran
Those files are needed on some software that hardcode those binaries
on it's code during runtime. Since compute nodes don't usually have
""Development Tools"" installed from default system packages, it's
execution fails with command not found.
As a real world example, ANSYS Fluent would fail to execute:
-I/opt/ohpc/pub/apps/ansys_inc/v211/fluent/include -I. -c udf_names.c
/bin/sh: cc: command not found
make[3]: *** [udf_names.o] Error 127

Providing cc, c89, c99 and f95 will solve those specific
issues during execution. Patching and testing was done in a running
production OpenHPC cluster and it worked as expected:
$ which {cc,c89,c99,f95}
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/cc
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c89
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/c99
/opt/ohpc/pub/compiler/gcc/9.4.0/bin/f95

Code is based heavily on EL8 gcc package:
https://git.centos.org/rpms/gcc/blob/c8/f/SPECS/gcc.spec
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","Just submitted the merge request for this issue. Sorry for the delay; taking me a bit to get up to speed on taking over project lead.

From: Vinícius Ferrão ***@***.***>
Sent: Wednesday, March 30, 2022 5:04 PM
To: openhpc/ohpc ***@***.***>
Cc: Simmons, Christopher ***@***.***>; Mention ***@***.***>
Subject: Re: [openhpc/ohpc] Added links to gcc and gfortran (PR #1408)


Thanks @adrianreber<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fadrianreber&data=04%7C01%7Ccsim%40utdallas.edu%7Ccfd68407dfde4aa5f5ba08da129938fb%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C637842746546050084%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=k%2F9IWSVOZIRWv69Ag3srGl3VxUGlEoI7kEqFEKINBN0%3D&reserved=0> the PR is now passing. I've done an empty commit just to trigger CI/CD.

-
Reply to this email directly, view it on GitHub<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopenhpc%2Fohpc%2Fpull%2F1408%23issuecomment-1083675093&data=04%7C01%7Ccsim%40utdallas.edu%7Ccfd68407dfde4aa5f5ba08da129938fb%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C637842746546206328%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=r1aoWJe3f%2BZGDjVz5HYwclRmXgo90UcOdFoVJJ5VTIw%3D&reserved=0>, or unsubscribe<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAJLEPUNJFQHIO6T3XEM2I2DVCTFVXANCNFSM5QQK273Q&data=04%7C01%7Ccsim%40utdallas.edu%7Ccfd68407dfde4aa5f5ba08da129938fb%7C8d281d1d9c4d4bf7b16e032d15de9f6c%7C0%7C0%7C637842746546206328%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=8K%2BL3dTd0ZRBZUayUlkWqHyuelxObs4UHtH4OSACf68%3D&reserved=0>.
You are receiving this because you were mentioned.Message ID: ***@***.***>",True,{'THUMBS_UP': ['https://github.com/viniciusferrao']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/ruixingw,1,https://github.com/openhpc/ohpc/pull/1410,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.","This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.",True,"{'THUMBS_UP': ['https://github.com/crbaird', 'https://github.com/adrianreber']}"
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1410#issuecomment-1069376856,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.","Thanks. Looks good. GitHub currently seems to have problems with GitHub Actions, so the CI is not triggered.
As this is your first PR here @utdsimmons @koomie need to approve the CI run manually (once GitHub is working again correctly).",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/boegel,3,https://github.com/openhpc/ohpc/pull/1410#issuecomment-1070531655,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.","Be careful with building FFTW with AVX-512, see easybuilders/easybuild-easyblocks#1416 for detailed performance analysis when doing so, and also upstream issue @ FFTW/fftw3#143 (which states ""We have never tested FFTW on Skylake"")",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/1410#issuecomment-1072307596,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.","Please add a Signed-off-by: to your commit. This can easily be done using git commit -s --amend followed by a force push to the branch of this PR.
Have you seen @boegel's comment? If you cannot test AVX-512 support maybe it would be better to not enable it.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/ruixingw,5,https://github.com/openhpc/ohpc/pull/1410#issuecomment-1073053607,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.","Please add a Signed-off-by: to your commit. This can easily be done using git commit -s --amend followed by a force push to the branch of this PR.
Have you seen @boegel's comment? If you cannot test AVX-512 support maybe it would be better to not enable it.

I have changed the commit and included the Signed-off-by:.
Thanks @boegel for pointing that out. I think it is better to add avx512 after FFTW/fftw3#143 is solved. I have removed avx512 from the commit.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/ruixingw,6,https://github.com/openhpc/ohpc/pull/1410#issuecomment-1084312744,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.","I see that the broken CI was fixed in a recent commit so I merged it. (not very experienced with git, is this the correct way?)",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/adrianreber,7,https://github.com/openhpc/ohpc/pull/1410#issuecomment-1084333786,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.","I see that the broken CI was fixed in a recent commit so I merged it. (not very experienced with git, is this the correct way?)

I will not say that is incorrect, but I would do it differently. You now have a merge commit in this pull request which is unnecessary (from my point of view).
I would do a git pull --rebase. That way git should use the latest content from OpenHPC and put your commit on top of it. Then do a git push --force.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/ruixingw,8,https://github.com/openhpc/ohpc/pull/1410#issuecomment-1084489770,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.","I see that the broken CI was fixed in a recent commit so I merged it. (not very experienced with git, is this the correct way?)

I will not say that is incorrect, but I would do it differently. You now have a merge commit in this pull request which is unnecessary (from my point of view).
I would do a git pull --rebase. That way git should use the latest content from OpenHPC and put your commit on top of it. Then do a git push --force.

Thanks! I now made a rebase.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/adrianreber,9,https://github.com/openhpc/ohpc/pull/1410#issuecomment-1084524098,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.",Looks good. @utdsimmons can you approve the CI run. First time contributors do need approval before CI starts to run.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1410,2022-03-16T17:11:57Z,2022-03-31T19:33:02Z,2022-03-31T19:33:05Z,MERGED,True,2,2,1,https://github.com/ruixingw,fftw.spec: fix typo & enable sse2/avx/avx2,1,[],https://github.com/openhpc/ohpc/pull/1410,https://github.com/utdsimmons,10,https://github.com/openhpc/ohpc/pull/1410#issuecomment-1085019075,"This fix #1409. Fix a typo to support sse2/avx and in addition adds avx2/avx512 SIMD extensions.
Tested on a machine with Intel Xeon E5-2696 v3 (has avx2 but not avx512) by following Rebuilding Packages from Source in the Install Guide Rocky 8.5/x86 64, rebuild and reinstall fftw-gnu9-openmpi4-ohpc.
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/openmpi4/fftw/3.3.8/lib/libfftw3.so | grep have
fftw_have_simd_sse2
fftw_have_simd_avx
fftw_have_simd_avx2
fftw_have_simd_avx2_128
fftw_have_simd_avx512
fftw_have_simd_sse2
fftw_have_simd_avx2
fftw_have_simd_avx512
fftw_have_simd_avx
fftw_have_simd_avx2_128

comparing with original fftw-gnu9-mpich-ohpc:
[root@master lib]# strings /opt/ohpc/pub/libs/gnu9/mpich/fftw/3.3.8/lib/libfftw3.so | grep have
[root@master lib]#

This shows the modified fftw.spec adds SIMD supports.
EDIT: avx512 is removed because the upstream isn't ready.",approved and ran successfully; going to rebase and merge,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1411,2022-03-17T20:05:55Z,2022-04-12T07:43:24Z,2022-04-29T16:07:59Z,MERGED,True,8,4,1,https://github.com/viniciusferrao,Avoid killing user sessions on slurm.epilog,1,[],https://github.com/openhpc/ohpc/pull/1411,https://github.com/viniciusferrao,1,https://github.com/openhpc/ohpc/pull/1411,"This PR fixes two issues and a cosmetic issue on
slurm.epilog.clean script:


The cosmetic one is trivial, tab vs spaces.


The script should not run for UIDs lower than 1000 instead of 100.
Every UID lower than 1000 is considered a system account, this PR
fixes the comparison on the guard clause.


The last one is a special case when the HPC environment uses the
headnode also as a compute node, or on HPC systems where nodes
aren't available and a single big server takes care of everything.
To avoid killing legitimate user sessions, like graphical login or
ssh login, we check if slurmctld is running on the same machine
as the epilogue script. If it's not running them we just kill
everything as the old behavior. If slurmctld is running just exit
without killing the remaining processes.


Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","This PR fixes two issues and a cosmetic issue on
slurm.epilog.clean script:


The cosmetic one is trivial, tab vs spaces.


The script should not run for UIDs lower than 1000 instead of 100.
Every UID lower than 1000 is considered a system account, this PR
fixes the comparison on the guard clause.


The last one is a special case when the HPC environment uses the
headnode also as a compute node, or on HPC systems where nodes
aren't available and a single big server takes care of everything.
To avoid killing legitimate user sessions, like graphical login or
ssh login, we check if slurmctld is running on the same machine
as the epilogue script. If it's not running them we just kill
everything as the old behavior. If slurmctld is running just exit
without killing the remaining processes.


Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1411,2022-03-17T20:05:55Z,2022-04-12T07:43:24Z,2022-04-29T16:07:59Z,MERGED,True,8,4,1,https://github.com/viniciusferrao,Avoid killing user sessions on slurm.epilog,1,[],https://github.com/openhpc/ohpc/pull/1411,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1411#issuecomment-1085055176,"This PR fixes two issues and a cosmetic issue on
slurm.epilog.clean script:


The cosmetic one is trivial, tab vs spaces.


The script should not run for UIDs lower than 1000 instead of 100.
Every UID lower than 1000 is considered a system account, this PR
fixes the comparison on the guard clause.


The last one is a special case when the HPC environment uses the
headnode also as a compute node, or on HPC systems where nodes
aren't available and a single big server takes care of everything.
To avoid killing legitimate user sessions, like graphical login or
ssh login, we check if slurmctld is running on the same machine
as the epilogue script. If it's not running them we just kill
everything as the old behavior. If slurmctld is running just exit
without killing the remaining processes.


Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",Please remove the empty commit.,True,{'THUMBS_UP': ['https://github.com/viniciusferrao']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1411,2022-03-17T20:05:55Z,2022-04-12T07:43:24Z,2022-04-29T16:07:59Z,MERGED,True,8,4,1,https://github.com/viniciusferrao,Avoid killing user sessions on slurm.epilog,1,[],https://github.com/openhpc/ohpc/pull/1411,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/1411#issuecomment-1085057801,"This PR fixes two issues and a cosmetic issue on
slurm.epilog.clean script:


The cosmetic one is trivial, tab vs spaces.


The script should not run for UIDs lower than 1000 instead of 100.
Every UID lower than 1000 is considered a system account, this PR
fixes the comparison on the guard clause.


The last one is a special case when the HPC environment uses the
headnode also as a compute node, or on HPC systems where nodes
aren't available and a single big server takes care of everything.
To avoid killing legitimate user sessions, like graphical login or
ssh login, we check if slurmctld is running on the same machine
as the epilogue script. If it's not running them we just kill
everything as the old behavior. If slurmctld is running just exit
without killing the remaining processes.


Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","This PR sounds like a good idea. I am curious if there is a better way to detect the head node besides looking for a running slurmctld?
If you remove the empty commit and do a force push CI should be running and this can be merged.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1411,2022-03-17T20:05:55Z,2022-04-12T07:43:24Z,2022-04-29T16:07:59Z,MERGED,True,8,4,1,https://github.com/viniciusferrao,Avoid killing user sessions on slurm.epilog,1,[],https://github.com/openhpc/ohpc/pull/1411,https://github.com/viniciusferrao,4,https://github.com/openhpc/ohpc/pull/1411#issuecomment-1085158158,"This PR fixes two issues and a cosmetic issue on
slurm.epilog.clean script:


The cosmetic one is trivial, tab vs spaces.


The script should not run for UIDs lower than 1000 instead of 100.
Every UID lower than 1000 is considered a system account, this PR
fixes the comparison on the guard clause.


The last one is a special case when the HPC environment uses the
headnode also as a compute node, or on HPC systems where nodes
aren't available and a single big server takes care of everything.
To avoid killing legitimate user sessions, like graphical login or
ssh login, we check if slurmctld is running on the same machine
as the epilogue script. If it's not running them we just kill
everything as the old behavior. If slurmctld is running just exit
without killing the remaining processes.


Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","I've removed the empty commit @adrianreber, and forced push. It's good now.
I was thinking about the same question when I made this modification. The real issue is in two cases: a big server, those 128 cores AMD EPYC ones, with only one machine that acts as compute, head and login node, and the other corner case is when it's a small cluster but the head and login node are also a compute node. In both cases the common denominator is the existence of slurmctld running on the same machine which is the login node.
There's another case where the commit does not apply, it's when you have a server acting as login and compute node, but not as a head node. In this case this commit will do nothing. But I can't see any valid usage in this specific case, it simply does seems to make any sense.
So looking for slurmctld looked as a good candidate. I don't know any mechanism available on SLURM to achieve the same functionality to be honest.
Thanks.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1411,2022-03-17T20:05:55Z,2022-04-12T07:43:24Z,2022-04-29T16:07:59Z,MERGED,True,8,4,1,https://github.com/viniciusferrao,Avoid killing user sessions on slurm.epilog,1,[],https://github.com/openhpc/ohpc/pull/1411,https://github.com/adrianreber,5,https://github.com/openhpc/ohpc/pull/1411#issuecomment-1096277437,"This PR fixes two issues and a cosmetic issue on
slurm.epilog.clean script:


The cosmetic one is trivial, tab vs spaces.


The script should not run for UIDs lower than 1000 instead of 100.
Every UID lower than 1000 is considered a system account, this PR
fixes the comparison on the guard clause.


The last one is a special case when the HPC environment uses the
headnode also as a compute node, or on HPC systems where nodes
aren't available and a single big server takes care of everything.
To avoid killing legitimate user sessions, like graphical login or
ssh login, we check if slurmctld is running on the same machine
as the epilogue script. If it's not running them we just kill
everything as the old behavior. If slurmctld is running just exit
without killing the remaining processes.


Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",Also merged. Thanks.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1412,2022-03-18T03:04:35Z,2022-03-18T03:28:19Z,2022-03-18T03:30:13Z,CLOSED,False,1,1,1,https://github.com/viniciusferrao,Update Dockerfile.check_spec,1,[],https://github.com/openhpc/ohpc/pull/1412,https://github.com/viniciusferrao,1,https://github.com/openhpc/ohpc/pull/1412,"CI is broken due to CentOS end-of-life, as observed on #1408.
Changing it to Rocky Linux would not only solve CI while also keeping the project aligned with it's supported distribution.","CI is broken due to CentOS end-of-life, as observed on #1408.
Changing it to Rocky Linux would not only solve CI while also keeping the project aligned with it's supported distribution.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1412,2022-03-18T03:04:35Z,2022-03-18T03:28:19Z,2022-03-18T03:30:13Z,CLOSED,False,1,1,1,https://github.com/viniciusferrao,Update Dockerfile.check_spec,1,[],https://github.com/openhpc/ohpc/pull/1412,https://github.com/viniciusferrao,2,https://github.com/openhpc/ohpc/pull/1412#issuecomment-1071993712,"CI is broken due to CentOS end-of-life, as observed on #1408.
Changing it to Rocky Linux would not only solve CI while also keeping the project aligned with it's supported distribution.","Oops, it was duplicated to #1413. Sorry for that.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1413,2022-03-18T03:29:27Z,2022-03-30T20:23:00Z,2022-04-29T16:07:45Z,MERGED,True,1,1,1,https://github.com/viniciusferrao,Update Dockerfile.check_spec,1,[],https://github.com/openhpc/ohpc/pull/1413,https://github.com/viniciusferrao,1,https://github.com/openhpc/ohpc/pull/1413,"CI is broken due to CentOS end-of-life, as observed on #1408.
Changing it to Rocky Linux would not only solve CI while also keeping the project aligned with it's supported distribution.","CI is broken due to CentOS end-of-life, as observed on #1408.
Changing it to Rocky Linux would not only solve CI while also keeping the project aligned with it's supported distribution.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1413,2022-03-18T03:29:27Z,2022-03-30T20:23:00Z,2022-04-29T16:07:45Z,MERGED,True,1,1,1,https://github.com/viniciusferrao,Update Dockerfile.check_spec,1,[],https://github.com/openhpc/ohpc/pull/1413,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1413#issuecomment-1072306205,"CI is broken due to CentOS end-of-life, as observed on #1408.
Changing it to Rocky Linux would not only solve CI while also keeping the project aligned with it's supported distribution.",Please add a  Signed-off-by: to your commit. This can easily be done using git commit -s --amend followed by a force push to the branch of this PR.,True,{'THUMBS_UP': ['https://github.com/viniciusferrao']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1413,2022-03-18T03:29:27Z,2022-03-30T20:23:00Z,2022-04-29T16:07:45Z,MERGED,True,1,1,1,https://github.com/viniciusferrao,Update Dockerfile.check_spec,1,[],https://github.com/openhpc/ohpc/pull/1413,https://github.com/viniciusferrao,3,https://github.com/openhpc/ohpc/pull/1413#issuecomment-1072576869,"CI is broken due to CentOS end-of-life, as observed on #1408.
Changing it to Rocky Linux would not only solve CI while also keeping the project aligned with it's supported distribution.","Please add a  Signed-off-by: to your commit. This can easily be done using git commit -s --amend followed by a force push to the branch of this PR.

Done, I've forgotten to add it.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1413,2022-03-18T03:29:27Z,2022-03-30T20:23:00Z,2022-04-29T16:07:45Z,MERGED,True,1,1,1,https://github.com/viniciusferrao,Update Dockerfile.check_spec,1,[],https://github.com/openhpc/ohpc/pull/1413,https://github.com/utdsimmons,4,https://github.com/openhpc/ohpc/pull/1413#issuecomment-1083588390,"CI is broken due to CentOS end-of-life, as observed on #1408.
Changing it to Rocky Linux would not only solve CI while also keeping the project aligned with it's supported distribution.",Merging this change to address our broken CI that's still pulling centos instead of rocky,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1414,2022-03-31T13:07:01Z,2022-03-31T20:21:45Z,2022-04-01T05:09:24Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.5.4,1,[],https://github.com/openhpc/ohpc/pull/1414,https://github.com/boegel,1,https://github.com/openhpc/ohpc/pull/1414,,,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1414,2022-03-31T13:07:01Z,2022-03-31T20:21:45Z,2022-04-01T05:09:24Z,MERGED,True,1,1,1,https://github.com/boegel,EasyBuild v4.5.4,1,[],https://github.com/openhpc/ohpc/pull/1414,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1414#issuecomment-1085058317,,LGTM,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1415,2022-04-10T17:54:07Z,2022-04-12T07:40:46Z,2022-04-29T16:07:33Z,MERGED,True,11,10,11,https://github.com/viniciusferrao,Increase reliability of chronyd for compute nodes,1,[],https://github.com/openhpc/ohpc/pull/1415,https://github.com/viniciusferrao,1,https://github.com/openhpc/ohpc/pull/1415,"This commit will enhance the reliability of time synchronization on compute
nodes if there's a preexisting clock difference.
By enabling the compute nodes to ""iburst"" on the server, it will synchronize
it's clock with headnode imediatelly after chrony (as a client) started.
To further enhance it's reliability we also mark the headnode chronyd server
as a local stratum. In an event of unproper time fetch from upstream time
servers the headnode will be the default timekeeper for it's compute nodes.
This changes modifies the behavior of software like munge, that refuses to
work if there's a significant clock skew between the server and the client.
Avoiding the cluster to be offline due to clock synchronization issues.
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","This commit will enhance the reliability of time synchronization on compute
nodes if there's a preexisting clock difference.
By enabling the compute nodes to ""iburst"" on the server, it will synchronize
it's clock with headnode imediatelly after chrony (as a client) started.
To further enhance it's reliability we also mark the headnode chronyd server
as a local stratum. In an event of unproper time fetch from upstream time
servers the headnode will be the default timekeeper for it's compute nodes.
This changes modifies the behavior of software like munge, that refuses to
work if there's a significant clock skew between the server and the client.
Avoiding the cluster to be offline due to clock synchronization issues.
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1415,2022-04-10T17:54:07Z,2022-04-12T07:40:46Z,2022-04-29T16:07:33Z,MERGED,True,11,10,11,https://github.com/viniciusferrao,Increase reliability of chronyd for compute nodes,1,[],https://github.com/openhpc/ohpc/pull/1415,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1415#issuecomment-1095234962,"This commit will enhance the reliability of time synchronization on compute
nodes if there's a preexisting clock difference.
By enabling the compute nodes to ""iburst"" on the server, it will synchronize
it's clock with headnode imediatelly after chrony (as a client) started.
To further enhance it's reliability we also mark the headnode chronyd server
as a local stratum. In an event of unproper time fetch from upstream time
servers the headnode will be the default timekeeper for it's compute nodes.
This changes modifies the behavior of software like munge, that refuses to
work if there's a significant clock skew between the server and the client.
Avoiding the cluster to be offline due to clock synchronization issues.
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","Sounds good from my point of view. It is also mentioned in the documentation.
Do you mind updating the commit message to include a link to the documentation. I found this one:
https://chrony.tuxfamily.org/faq.html#_what_is_the_minimum_recommended_configuration_for_an_ntp_client",True,{'THUMBS_UP': ['https://github.com/viniciusferrao']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1415,2022-04-10T17:54:07Z,2022-04-12T07:40:46Z,2022-04-29T16:07:33Z,MERGED,True,11,10,11,https://github.com/viniciusferrao,Increase reliability of chronyd for compute nodes,1,[],https://github.com/openhpc/ohpc/pull/1415,https://github.com/adrianreber,3,https://github.com/openhpc/ohpc/pull/1415#issuecomment-1095235316,"This commit will enhance the reliability of time synchronization on compute
nodes if there's a preexisting clock difference.
By enabling the compute nodes to ""iburst"" on the server, it will synchronize
it's clock with headnode imediatelly after chrony (as a client) started.
To further enhance it's reliability we also mark the headnode chronyd server
as a local stratum. In an event of unproper time fetch from upstream time
servers the headnode will be the default timekeeper for it's compute nodes.
This changes modifies the behavior of software like munge, that refuses to
work if there's a significant clock skew between the server and the client.
Avoiding the cluster to be offline due to clock synchronization issues.
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",CC: @utdsimmons,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1415,2022-04-10T17:54:07Z,2022-04-12T07:40:46Z,2022-04-29T16:07:33Z,MERGED,True,11,10,11,https://github.com/viniciusferrao,Increase reliability of chronyd for compute nodes,1,[],https://github.com/openhpc/ohpc/pull/1415,https://github.com/viniciusferrao,4,https://github.com/openhpc/ohpc/pull/1415#issuecomment-1095524059,"This commit will enhance the reliability of time synchronization on compute
nodes if there's a preexisting clock difference.
By enabling the compute nodes to ""iburst"" on the server, it will synchronize
it's clock with headnode imediatelly after chrony (as a client) started.
To further enhance it's reliability we also mark the headnode chronyd server
as a local stratum. In an event of unproper time fetch from upstream time
servers the headnode will be the default timekeeper for it's compute nodes.
This changes modifies the behavior of software like munge, that refuses to
work if there's a significant clock skew between the server and the client.
Avoiding the cluster to be offline due to clock synchronization issues.
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","Done @adrianreber.
Thank you for the quick pull review.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1415,2022-04-10T17:54:07Z,2022-04-12T07:40:46Z,2022-04-29T16:07:33Z,MERGED,True,11,10,11,https://github.com/viniciusferrao,Increase reliability of chronyd for compute nodes,1,[],https://github.com/openhpc/ohpc/pull/1415,https://github.com/adrianreber,5,https://github.com/openhpc/ohpc/pull/1415#issuecomment-1096271728,"This commit will enhance the reliability of time synchronization on compute
nodes if there's a preexisting clock difference.
By enabling the compute nodes to ""iburst"" on the server, it will synchronize
it's clock with headnode imediatelly after chrony (as a client) started.
To further enhance it's reliability we also mark the headnode chronyd server
as a local stratum. In an event of unproper time fetch from upstream time
servers the headnode will be the default timekeeper for it's compute nodes.
This changes modifies the behavior of software like munge, that refuses to
work if there's a significant clock skew between the server and the client.
Avoiding the cluster to be offline due to clock synchronization issues.
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",Merged. Thanks!,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1416,2022-04-16T18:35:11Z,2022-04-25T06:28:01Z,2022-04-29T16:07:18Z,MERGED,True,0,5,4,https://github.com/viniciusferrao,Remove leftover references to RDMA service on EL8,1,[],https://github.com/openhpc/ohpc/pull/1416,https://github.com/viniciusferrao,1,https://github.com/openhpc/ohpc/pull/1416,"Additional fixes for #1347
There are still leftover references for rdma.service on EL8 for
Rocky8 and CentOS 8 on the documentation. Mainly on xCAT guides.
This commit removes those commands from documentation.
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br","Additional fixes for #1347
There are still leftover references for rdma.service on EL8 for
Rocky8 and CentOS 8 on the documentation. Mainly on xCAT guides.
This commit removes those commands from documentation.
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1416,2022-04-16T18:35:11Z,2022-04-25T06:28:01Z,2022-04-29T16:07:18Z,MERGED,True,0,5,4,https://github.com/viniciusferrao,Remove leftover references to RDMA service on EL8,1,[],https://github.com/openhpc/ohpc/pull/1416,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1416#issuecomment-1108127949,"Additional fixes for #1347
There are still leftover references for rdma.service on EL8 for
Rocky8 and CentOS 8 on the documentation. Mainly on xCAT guides.
This commit removes those commands from documentation.
Signed-off-by: Vinícius Ferrão vinicius@ferrao.net.br",Seeing 79700ce this makes sense to me. Thanks.,True,{'HOORAY': ['https://github.com/viniciusferrao']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1417,2022-04-26T14:59:47Z,2022-05-31T09:31:36Z,2022-05-31T09:31:45Z,MERGED,True,224,54,8,https://github.com/adrianreber,ci: rework github actions,2,[],https://github.com/openhpc/ohpc/pull/1417,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1417,"This consolidates push and PR GitHub Actions into one file and removes the tests/ci/Dockerfile.check_spec.
GitHub Actions can directly run a test inside of a container without manually setting it up.
This also adds a second CI test to rebuild RPMs of all changed spec files. This way we know that the changes at least do not break the RPM build process.
For MPI dependent packages the rebuild will be done using all three MPI variants OpenHPC currently provides.","This consolidates push and PR GitHub Actions into one file and removes the tests/ci/Dockerfile.check_spec.
GitHub Actions can directly run a test inside of a container without manually setting it up.
This also adds a second CI test to rebuild RPMs of all changed spec files. This way we know that the changes at least do not break the RPM build process.
For MPI dependent packages the rebuild will be done using all three MPI variants OpenHPC currently provides.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1418,2022-04-30T00:55:59Z,,2022-05-03T00:40:28Z,OPEN,False,100,104,15,https://github.com/viniciusferrao,Use dnf instead of yum and it's plugins,5,[],https://github.com/openhpc/ohpc/pull/1418,https://github.com/viniciusferrao,1,https://github.com/openhpc/ohpc/pull/1418,"This PR is aimed to replace yum and it's utilities: yumdownloader, yum-config-manager and yum-builddep in favor of dnf which is the default package manager command on EL8 and upwards.","This PR is aimed to replace yum and it's utilities: yumdownloader, yum-config-manager and yum-builddep in favor of dnf which is the default package manager command on EL8 and upwards.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1418,2022-04-30T00:55:59Z,,2022-05-03T00:40:28Z,OPEN,False,100,104,15,https://github.com/viniciusferrao,Use dnf instead of yum and it's plugins,5,[],https://github.com/openhpc/ohpc/pull/1418,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1418#issuecomment-1113978902,"This PR is aimed to replace yum and it's utilities: yumdownloader, yum-config-manager and yum-builddep in favor of dnf which is the default package manager command on EL8 and upwards.",I am undecided. Both commands seem valid. The RHEL 8 documentation uses yum almost everywhere. I am personally also using the dnf command. Not sure what the documentation should refer to.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1418,2022-04-30T00:55:59Z,,2022-05-03T00:40:28Z,OPEN,False,100,104,15,https://github.com/viniciusferrao,Use dnf instead of yum and it's plugins,5,[],https://github.com/openhpc/ohpc/pull/1418,https://github.com/viniciusferrao,3,https://github.com/openhpc/ohpc/pull/1418#issuecomment-1115503530,"This PR is aimed to replace yum and it's utilities: yumdownloader, yum-config-manager and yum-builddep in favor of dnf which is the default package manager command on EL8 and upwards.","Hi @adrianreber I get your point. I was tricked by this line specifically:

  
    
      ohpc/docs/recipes/install/common/centos_repos.tex
    
    
         Line 23
      in
      1866c54
    
  
  
    

        
          
           [sms](*\#*) yum install dnf-plugins-core 
        
    
  


I came to a conclusion this was a first effort to move the documentation to dnf. The next line is actually dnf instead of yum:

  
    
      ohpc/docs/recipes/install/common/centos_repos.tex
    
    
         Line 24
      in
      1866c54
    
  
  
    

        
          
           [sms](*\#*) yum config-manager --set-enabled powertools 
        
    
  


The proper yum version would be yum-config-manager with yum-utils being installed on line 23, and not yum config-manager (observe the space after yum).
Internally I also only use OpenHPC with dnf instead of yum so I made the PR with this premise, since we already tested and updated internal docs with dnf instead.
I agree that Red Hat's documentation for EL8 uses yum in many places, referring it as YUMv4, I haven't checked it before doing the PR.
I'm not sure if we should reject it or not, of course I want the PR merged since I've made it, but I also agree with your point. If we look at EL9 Beta documentation yum is now clearly deprecated: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/managing_software_with_the_dnf_tool/index
So as a suggestion, if we can't merge it on the 2.x branch, maybe we target it for what would become 3.x?
If that sounds like a good idea, I may create another PR to implement the changes on 2.x docs to avoid the dnf confusion. Or if you want to merge this anyway I'm obviously fine with it. 👍
Thank you.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1422,2022-05-25T01:20:50Z,2022-06-01T17:24:51Z,2022-06-01T17:24:51Z,MERGED,True,0,1,1,https://github.com/jcsiadal,Remove python2-xml dependency from OpenPBS,2,[],https://github.com/openhpc/ohpc/pull/1422,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1422,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
OpenSUSE 15.4 removes Python 2 support. I can't see any reason for including this build dependency, as it still builds without it (artifact from old version?).","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
OpenSUSE 15.4 removes Python 2 support. I can't see any reason for including this build dependency, as it still builds without it (artifact from old version?).",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1422,2022-05-25T01:20:50Z,2022-06-01T17:24:51Z,2022-06-01T17:24:51Z,MERGED,True,0,1,1,https://github.com/jcsiadal,Remove python2-xml dependency from OpenPBS,2,[],https://github.com/openhpc/ohpc/pull/1422,https://github.com/adrianreber,2,https://github.com/openhpc/ohpc/pull/1422#issuecomment-1136793941,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
OpenSUSE 15.4 removes Python 2 support. I can't see any reason for including this build dependency, as it still builds without it (artifact from old version?).","Sounds good to me. I would just remove the line completely instead of commenting it out. It is tracked in git after all.
Concerning Python 2. There are still BuildRequires python2(-devel) in petsc and slepc. Have you tried to build that on OpenSUSE 15.4?",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1422,2022-05-25T01:20:50Z,2022-06-01T17:24:51Z,2022-06-01T17:24:51Z,MERGED,True,0,1,1,https://github.com/jcsiadal,Remove python2-xml dependency from OpenPBS,2,[],https://github.com/openhpc/ohpc/pull/1422,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1422#issuecomment-1137449054,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
OpenSUSE 15.4 removes Python 2 support. I can't see any reason for including this build dependency, as it still builds without it (artifact from old version?).","Removed now. I'll be submitting PRs for those too, but I still need to confirm they work or update them.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1422,2022-05-25T01:20:50Z,2022-06-01T17:24:51Z,2022-06-01T17:24:51Z,MERGED,True,0,1,1,https://github.com/jcsiadal,Remove python2-xml dependency from OpenPBS,2,[],https://github.com/openhpc/ohpc/pull/1422,https://github.com/adrianreber,4,https://github.com/openhpc/ohpc/pull/1422#issuecomment-1141918070,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
OpenSUSE 15.4 removes Python 2 support. I can't see any reason for including this build dependency, as it still builds without it (artifact from old version?).",Could you rebase to pick up the latest CI changes? I would like to see if my changes actually works with a real PR.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1422,2022-05-25T01:20:50Z,2022-06-01T17:24:51Z,2022-06-01T17:24:51Z,MERGED,True,0,1,1,https://github.com/jcsiadal,Remove python2-xml dependency from OpenPBS,2,[],https://github.com/openhpc/ohpc/pull/1422,https://github.com/jcsiadal,5,https://github.com/openhpc/ohpc/pull/1422#issuecomment-1142922745,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
OpenSUSE 15.4 removes Python 2 support. I can't see any reason for including this build dependency, as it still builds without it (artifact from old version?).","Rebased to the current 2.x. The CI seems to be broken. See my gitignore PR, which does nothing besides updating the .gitignore file (I also rebased it to current 2.x).",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1422,2022-05-25T01:20:50Z,2022-06-01T17:24:51Z,2022-06-01T17:24:51Z,MERGED,True,0,1,1,https://github.com/jcsiadal,Remove python2-xml dependency from OpenPBS,2,[],https://github.com/openhpc/ohpc/pull/1422,https://github.com/adrianreber,6,https://github.com/openhpc/ohpc/pull/1422#issuecomment-1143155648,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
OpenSUSE 15.4 removes Python 2 support. I can't see any reason for including this build dependency, as it still builds without it (artifact from old version?).",Thanks for the rebase. I am looking now into fixing the CI errors.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1422,2022-05-25T01:20:50Z,2022-06-01T17:24:51Z,2022-06-01T17:24:51Z,MERGED,True,0,1,1,https://github.com/jcsiadal,Remove python2-xml dependency from OpenPBS,2,[],https://github.com/openhpc/ohpc/pull/1422,https://github.com/jcsiadal,7,https://github.com/openhpc/ohpc/pull/1422#issuecomment-1143860758,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
OpenSUSE 15.4 removes Python 2 support. I can't see any reason for including this build dependency, as it still builds without it (artifact from old version?).",Rebased again. Passes validation checks now.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1422,2022-05-25T01:20:50Z,2022-06-01T17:24:51Z,2022-06-01T17:24:51Z,MERGED,True,0,1,1,https://github.com/jcsiadal,Remove python2-xml dependency from OpenPBS,2,[],https://github.com/openhpc/ohpc/pull/1422,https://github.com/adrianreber,8,https://github.com/openhpc/ohpc/pull/1422#issuecomment-1143912753,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
OpenSUSE 15.4 removes Python 2 support. I can't see any reason for including this build dependency, as it still builds without it (artifact from old version?).","Thanks for your patience with the new CI setup. I see the following message at the end of the wall of text:
Wrote: /github/home/rpmbuild/RPMS/x86_64/openpbs-server-ohpc-20.0.1-0.x86_64.rpm
Wrote: /github/home/rpmbuild/RPMS/x86_64/openpbs-execution-ohpc-20.0.1-0.x86_64.rpm
Wrote: /github/home/rpmbuild/RPMS/x86_64/openpbs-client-ohpc-20.0.1-0.x86_64.rpm
Wrote: /github/home/rpmbuild/RPMS/x86_64/openpbs-devel-ohpc-20.0.1-0.x86_64.rpm

So the CI was able to correctly detect which package you changed and the rebuild was successful.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1423,2022-05-26T15:11:23Z,,2022-06-01T01:00:52Z,OPEN,False,102,0,1,https://github.com/jcsiadal,Updated .gitignore file,2,[],https://github.com/openhpc/ohpc/pull/1423,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1423,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Updates the .gitignore file to include all directories created during the build process, and SOURCE files created or downloaded by get_source.sh.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Updates the .gitignore file to include all directories created during the build process, and SOURCE files created or downloaded by get_source.sh.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1424,2022-05-27T19:16:32Z,2022-06-01T14:21:41Z,2022-06-01T16:37:08Z,MERGED,True,61,89,3,https://github.com/jcsiadal,Lmod update to 8.7.3,2,[],https://github.com/openhpc/ohpc/pull/1424,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1424,"Updates Lmod to the latest version.
Migrates the included os module from Tcl to Lua
Minor updates to profile scripts and file lists.","Updates Lmod to the latest version.
Migrates the included os module from Tcl to Lua
Minor updates to profile scripts and file lists.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1425,2022-06-01T10:19:18Z,2022-06-01T15:36:26Z,2022-06-01T15:36:26Z,MERGED,True,12,34,4,https://github.com/adrianreber,ci: use jitterbit/get-changed-files@v1,2,[],https://github.com/openhpc/ohpc/pull/1425,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1425,jitterbit/get-changed-files@v1 provides an easier way to figure out the changed files in a pull request. Let's switch to this for better CI results.,jitterbit/get-changed-files@v1 provides an easier way to figure out the changed files in a pull request. Let's switch to this for better CI results.,True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1427,2022-06-01T20:38:06Z,,2022-06-01T20:38:06Z,OPEN,False,2,2,1,https://github.com/adrianreber,ci: only run checks/builds on added and modified files,1,[],https://github.com/openhpc/ohpc/pull/1427,https://github.com/adrianreber,1,https://github.com/openhpc/ohpc/pull/1427,"The newly introduced GitHub Action to figure which files have changed does also have the target 'added_modified' which only lists added and modified files and not deleted files. It does not make much sense to run checks again deleted files in our case.
@jcsiadal This should fix the problems you had in #1327","The newly introduced GitHub Action to figure which files have changed does also have the target 'added_modified' which only lists added and modified files and not deleted files. It does not make much sense to run checks again deleted files in our case.
@jcsiadal This should fix the problems you had in #1327",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1428,2022-06-03T00:53:05Z,,2022-06-07T03:45:35Z,OPEN,False,1,1174,8,https://github.com/jcsiadal,Remove Clush and Shine,2,[],https://github.com/openhpc/ohpc/pull/1428,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1428,"Cleaning up the build tree. This removes more packages that are no longer part of the distro. As with Singularity, the unit tests are left intact.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com","Cleaning up the build tree. This removes more packages that are no longer part of the distro. As with Singularity, the unit tests are left intact.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1428,2022-06-03T00:53:05Z,,2022-06-07T03:45:35Z,OPEN,False,1,1174,8,https://github.com/jcsiadal,Remove Clush and Shine,2,[],https://github.com/openhpc/ohpc/pull/1428,https://github.com/thiell,2,https://github.com/openhpc/ohpc/pull/1428#issuecomment-1146642541,"Cleaning up the build tree. This removes more packages that are no longer part of the distro. As with Singularity, the unit tests are left intact.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com","Hi @jcsiadal,
I am maintaining clustershell for openSUSE and I believe clustershell is quite popular in openhpc. What do you mean by no longer part of the distro?
https://build.opensuse.org/package/show/openSUSE:Factory/clustershell
We recently fixed a packaging issue for Python 3.10, maybe that is related?
Let me know if I can be of any help.",True,{}
openhpc/ohpc,https://github.com/openhpc/ohpc,1428,2022-06-03T00:53:05Z,,2022-06-07T03:45:35Z,OPEN,False,1,1174,8,https://github.com/jcsiadal,Remove Clush and Shine,2,[],https://github.com/openhpc/ohpc/pull/1428,https://github.com/jcsiadal,3,https://github.com/openhpc/ohpc/pull/1428#issuecomment-1148028111,"Cleaning up the build tree. This removes more packages that are no longer part of the distro. As with Singularity, the unit tests are left intact.
Signed-off-by: jcsiadal jeremy.c.siadal@intel.com","I was referring to the OpenHPC distro; I'll be more specific in future PRs. In general, when Red Hat and SUSE distributions include current versions of a package, it will be removed from OpenHPC.",True,{'THUMBS_UP': ['https://github.com/thiell']}
openhpc/ohpc,https://github.com/openhpc/ohpc,1429,2022-06-07T05:21:21Z,,2022-06-07T05:21:21Z,OPEN,False,14,6,1,https://github.com/jcsiadal,warewulf-provision build fix for SUSE 15.4+,1,[],https://github.com/openhpc/ohpc/pull/1429,https://github.com/jcsiadal,1,https://github.com/openhpc/ohpc/pull/1429,"Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Busybox source in WW3 will not build against newer glibc. This works around the issue by using the Busybox included with OpenSUSE.
Changes the specfile to use the SUSE release virtual package, allowing this package to also build on SLED and SLES.","Signed-off-by: jcsiadal jeremy.c.siadal@intel.com
Busybox source in WW3 will not build against newer glibc. This works around the issue by using the Busybox included with OpenSUSE.
Changes the specfile to use the SUSE release virtual package, allowing this package to also build on SLED and SLES.",True,{}
