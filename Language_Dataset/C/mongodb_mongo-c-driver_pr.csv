mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,314,2016-02-29T16:04:28Z,2016-02-29T20:49:20Z,2016-02-29T20:49:24Z,MERGED,True,9,2,3,https://github.com/remicollet,allow to skip online tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/314,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/314,"In Fedora infrastructure, builder don't have internet access.
So test suite fails, see https://kojipkgs.fedoraproject.org//work/tasks/7900/13177900/build.log
FAIL
Assert Failure: ""No suitable servers found (`serverselectiontryonce` set): [Failed to resolve 'doesntexist'] [Failed to resolve 'example.com']"" does not contain ""[connection error calling ismaster on 'example.com:2']""

This small enhancement allow to define SKIP_INLINE env. var. before running to skip such test (for now there is only 1)","In Fedora infrastructure, builder don't have internet access.
So test suite fails, see https://kojipkgs.fedoraproject.org//work/tasks/7900/13177900/build.log
FAIL
Assert Failure: ""No suitable servers found (`serverselectiontryonce` set): [Failed to resolve 'doesntexist'] [Failed to resolve 'example.com']"" does not contain ""[connection error calling ismaster on 'example.com:2']""

This small enhancement allow to define SKIP_INLINE env. var. before running to skip such test (for now there is only 1)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,314,2016-02-29T16:04:28Z,2016-02-29T20:49:20Z,2016-02-29T20:49:24Z,MERGED,True,9,2,3,https://github.com/remicollet,allow to skip online tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/314,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/314#issuecomment-190274663,"In Fedora infrastructure, builder don't have internet access.
So test suite fails, see https://kojipkgs.fedoraproject.org//work/tasks/7900/13177900/build.log
FAIL
Assert Failure: ""No suitable servers found (`serverselectiontryonce` set): [Failed to resolve 'doesntexist'] [Failed to resolve 'example.com']"" does not contain ""[connection error calling ismaster on 'example.com:2']""

This small enhancement allow to define SKIP_INLINE env. var. before running to skip such test (for now there is only 1)","Cool, let's rename the environment variable MONGOC_TEST_OFFLINE and rename the function test_framework_skip_if_offline, since I think that better describes its purpose.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,314,2016-02-29T16:04:28Z,2016-02-29T20:49:20Z,2016-02-29T20:49:24Z,MERGED,True,9,2,3,https://github.com/remicollet,allow to skip online tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/314,https://github.com/remicollet,3,https://github.com/mongodb/mongo-c-driver/pull/314#issuecomment-190313741,"In Fedora infrastructure, builder don't have internet access.
So test suite fails, see https://kojipkgs.fedoraproject.org//work/tasks/7900/13177900/build.log
FAIL
Assert Failure: ""No suitable servers found (`serverselectiontryonce` set): [Failed to resolve 'doesntexist'] [Failed to resolve 'example.com']"" does not contain ""[connection error calling ismaster on 'example.com:2']""

This small enhancement allow to define SKIP_INLINE env. var. before running to skip such test (for now there is only 1)",renamed.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,314,2016-02-29T16:04:28Z,2016-02-29T20:49:20Z,2016-02-29T20:49:24Z,MERGED,True,9,2,3,https://github.com/remicollet,allow to skip online tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/314,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/314#issuecomment-190381522,"In Fedora infrastructure, builder don't have internet access.
So test suite fails, see https://kojipkgs.fedoraproject.org//work/tasks/7900/13177900/build.log
FAIL
Assert Failure: ""No suitable servers found (`serverselectiontryonce` set): [Failed to resolve 'doesntexist'] [Failed to resolve 'example.com']"" does not contain ""[connection error calling ismaster on 'example.com:2']""

This small enhancement allow to define SKIP_INLINE env. var. before running to skip such test (for now there is only 1)",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,315,2016-03-29T20:52:15Z,2016-03-30T15:37:09Z,2016-03-30T15:39:03Z,MERGED,True,9,9,3,https://github.com/jmikola,CDRIVER-1096: Use const for mongoc_client_select_server() read prefs,1,[],https://github.com/mongodb/mongo-c-driver/pull/315,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/315,"Noticed while implementing PHPC-607. This seemed like an oversight compared to the private mongoc_topology_select() function and other client functions that accept a read preference.
Related to: 929e859","Noticed while implementing PHPC-607. This seemed like an oversight compared to the private mongoc_topology_select() function and other client functions that accept a read preference.
Related to: 929e859",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,315,2016-03-29T20:52:15Z,2016-03-30T15:37:09Z,2016-03-30T15:39:03Z,MERGED,True,9,9,3,https://github.com/jmikola,CDRIVER-1096: Use const for mongoc_client_select_server() read prefs,1,[],https://github.com/mongodb/mongo-c-driver/pull/315,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/315#issuecomment-203155604,"Noticed while implementing PHPC-607. This seemed like an oversight compared to the private mongoc_topology_select() function and other client functions that accept a read preference.
Related to: 929e859","Great. Remove installing.page (which is generated by ./autogen.sh, shouldn't be checked in) and then I'll merge.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,315,2016-03-29T20:52:15Z,2016-03-30T15:37:09Z,2016-03-30T15:39:03Z,MERGED,True,9,9,3,https://github.com/jmikola,CDRIVER-1096: Use const for mongoc_client_select_server() read prefs,1,[],https://github.com/mongodb/mongo-c-driver/pull/315,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/315#issuecomment-203491977,"Noticed while implementing PHPC-607. This seemed like an oversight compared to the private mongoc_topology_select() function and other client functions that accept a read preference.
Related to: 929e859",Must have fat-fingered the git add. Fixed!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,316,2016-03-31T18:42:40Z,2016-04-14T21:06:15Z,2016-04-14T21:06:16Z,CLOSED,False,18,18,1,https://github.com/bsamek,BUILD-893 Upgrade OS X builders to OS X 10.10,1,[],https://github.com/mongodb/mongo-c-driver/pull/316,https://github.com/bsamek,1,https://github.com/mongodb/mongo-c-driver/pull/316,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,316,2016-03-31T18:42:40Z,2016-04-14T21:06:15Z,2016-04-14T21:06:16Z,CLOSED,False,18,18,1,https://github.com/bsamek,BUILD-893 Upgrade OS X builders to OS X 10.10,1,[],https://github.com/mongodb/mongo-c-driver/pull/316,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/316#issuecomment-210148829,,Thanks! Merged as b62802d,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,317,2016-03-31T18:43:06Z,2016-04-01T18:26:23Z,2016-04-01T18:26:23Z,CLOSED,False,7,7,1,https://github.com/bsamek,BUILD-893 Upgrade OS X builders to OS X 10.10,1,[],https://github.com/mongodb/mongo-c-driver/pull/317,https://github.com/bsamek,1,https://github.com/mongodb/mongo-c-driver/pull/317,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,317,2016-03-31T18:43:06Z,2016-04-01T18:26:23Z,2016-04-01T18:26:23Z,CLOSED,False,7,7,1,https://github.com/bsamek,BUILD-893 Upgrade OS X builders to OS X 10.10,1,[],https://github.com/mongodb/mongo-c-driver/pull/317,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/317#issuecomment-204503226,,This branch is no longer maintained and should be removed from evg. I'll file a ticket to get it removed :),True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,318,2016-04-01T16:03:13Z,2016-04-04T20:06:22Z,2016-04-05T17:24:49Z,MERGED,True,34,0,1,https://github.com/jmikola,CDRIVER-1189: Document mongoc_cursor_get_hint,1,[],https://github.com/mongodb/mongo-c-driver/pull/318,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/318,https://jira.mongodb.org/browse/CDRIVER-1189,https://jira.mongodb.org/browse/CDRIVER-1189,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,319,2016-04-01T16:03:16Z,2016-04-04T20:07:56Z,2016-04-05T17:24:51Z,MERGED,True,176,0,7,https://github.com/jmikola,CDRIVER-1188: Implement mongoc_cursor_set_hint(),1,[],https://github.com/mongodb/mongo-c-driver/pull/319,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/319,https://jira.mongodb.org/browse/CDRIVER-1188,https://jira.mongodb.org/browse/CDRIVER-1188,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,319,2016-04-01T16:03:16Z,2016-04-04T20:07:56Z,2016-04-05T17:24:51Z,MERGED,True,176,0,7,https://github.com/jmikola,CDRIVER-1188: Implement mongoc_cursor_set_hint(),1,[],https://github.com/mongodb/mongo-c-driver/pull/319,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/319#issuecomment-204451231,https://jira.mongodb.org/browse/CDRIVER-1188,Note: the included tests fail due to a regression of CDRIVER-903 in 1.4.0-dev.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,320,2016-04-04T16:13:44Z,2016-04-04T17:37:20Z,2016-04-05T17:24:45Z,MERGED,True,1,1,1,https://github.com/jmikola,Rewrite comment to avoid -Wcomment warning,1,[],https://github.com/mongodb/mongo-c-driver/pull/320,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/320,"Fixes a compiler warning for ""/* within comment""
Feel free to take or leave this, but it seemed trivial to fix without sacrificing the readability of the comment (more so than disabling -Wcomment for the build on PHPC's end).","Fixes a compiler warning for ""/* within comment""
Feel free to take or leave this, but it seemed trivial to fix without sacrificing the readability of the comment (more so than disabling -Wcomment for the build on PHPC's end).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,320,2016-04-04T16:13:44Z,2016-04-04T17:37:20Z,2016-04-05T17:24:45Z,MERGED,True,1,1,1,https://github.com/jmikola,Rewrite comment to avoid -Wcomment warning,1,[],https://github.com/mongodb/mongo-c-driver/pull/320,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/320#issuecomment-205408748,"Fixes a compiler warning for ""/* within comment""
Feel free to take or leave this, but it seemed trivial to fix without sacrificing the readability of the comment (more so than disabling -Wcomment for the build on PHPC's end).","Saw the same thing and fixed it Friday, guess I didn't push it.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,320,2016-04-04T16:13:44Z,2016-04-04T17:37:20Z,2016-04-05T17:24:45Z,MERGED,True,1,1,1,https://github.com/jmikola,Rewrite comment to avoid -Wcomment warning,1,[],https://github.com/mongodb/mongo-c-driver/pull/320,https://github.com/bjori,3,https://github.com/mongodb/mongo-c-driver/pull/320#issuecomment-205408840,"Fixes a compiler warning for ""/* within comment""
Feel free to take or leave this, but it seemed trivial to fix without sacrificing the readability of the comment (more so than disabling -Wcomment for the build on PHPC's end).",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,321,2016-04-11T22:51:46Z,2016-04-12T20:31:56Z,2016-04-12T20:45:28Z,MERGED,True,58,0,6,https://github.com/jmikola,CDRIVER-1195: Implement mongoc_server_description_round_trip_time(),1,[],https://github.com/mongodb/mongo-c-driver/pull/321,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/321,"https://jira.mongodb.org/browse/CDRIVER-1195
Cross-referencing with mongodb/mongo-php-driver#291.","https://jira.mongodb.org/browse/CDRIVER-1195
Cross-referencing with mongodb/mongo-php-driver#291.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,321,2016-04-11T22:51:46Z,2016-04-12T20:31:56Z,2016-04-12T20:45:28Z,MERGED,True,58,0,6,https://github.com/jmikola,CDRIVER-1195: Implement mongoc_server_description_round_trip_time(),1,[],https://github.com/mongodb/mongo-c-driver/pull/321,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/321#issuecomment-209090536,"https://jira.mongodb.org/browse/CDRIVER-1195
Cross-referencing with mongodb/mongo-php-driver#291.",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,322,2016-04-12T02:09:53Z,2016-04-20T16:35:05Z,2016-04-20T16:38:21Z,CLOSED,False,143,46,7,https://github.com/jmikola,"CDRIVER-1193, CDRIVER-1198: Expose mongoc_server_description_type_t and improve SDAM logging",2,[],https://github.com/mongodb/mongo-c-driver/pull/322,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/322,"https://jira.mongodb.org/browse/CDRIVER-1193
https://jira.mongodb.org/browse/CDRIVER-1198

Cross-referencing with mongodb/mongo-php-driver#291.","https://jira.mongodb.org/browse/CDRIVER-1193
https://jira.mongodb.org/browse/CDRIVER-1198

Cross-referencing with mongodb/mongo-php-driver#291.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,322,2016-04-12T02:09:53Z,2016-04-20T16:35:05Z,2016-04-20T16:38:21Z,CLOSED,False,143,46,7,https://github.com/jmikola,"CDRIVER-1193, CDRIVER-1198: Expose mongoc_server_description_type_t and improve SDAM logging",2,[],https://github.com/mongodb/mongo-c-driver/pull/322,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/322#issuecomment-212503984,"https://jira.mongodb.org/browse/CDRIVER-1193
https://jira.mongodb.org/browse/CDRIVER-1198

Cross-referencing with mongodb/mongo-php-driver#291.",Closing this. CDRIVER-1198 was split off into #323 and we decided to maintain a server description type map manually in the PHP driver (see mongodb/mongo-php-driver#291).,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,323,2016-04-18T20:45:17Z,2016-04-18T21:18:52Z,2016-04-18T23:37:01Z,MERGED,True,43,3,2,https://github.com/jmikola,CDRIVER-1198: Use strings for server and topology types in SDAM transition logs,2,[],https://github.com/mongodb/mongo-c-driver/pull/323,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/323,"https://jira.mongodb.org/browse/CDRIVER-1198
This PR is split off from #322 to remove publication of the server description's type enum.","https://jira.mongodb.org/browse/CDRIVER-1198
This PR is split off from #322 to remove publication of the server description's type enum.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,323,2016-04-18T20:45:17Z,2016-04-18T21:18:52Z,2016-04-18T23:37:01Z,MERGED,True,43,3,2,https://github.com/jmikola,CDRIVER-1198: Use strings for server and topology types in SDAM transition logs,2,[],https://github.com/mongodb/mongo-c-driver/pull/323,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/323#issuecomment-211584028,"https://jira.mongodb.org/browse/CDRIVER-1198
This PR is split off from #322 to remove publication of the server description's type enum.",thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,324,2016-04-28T04:01:30Z,2016-04-28T13:44:43Z,2016-04-28T14:22:22Z,MERGED,True,0,1,1,https://github.com/jmikola,Remove unused stamp field on _mongoc_cursor_t struct,1,[],https://github.com/mongodb/mongo-c-driver/pull/324,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/324,"Realized this while researching PHPC-688. I'm not sure when libmongoc stopped using the stamp field, but I found no reference to it within the project.
Let me know if you'd like a JIRA ticket for this; I found no reference to a ""stamp"" among CDRIVER tickets. The concept of a cursor stamp dates back to d6e1916 but that method has been removed for some time. This is likely just cleaning up dead code.","Realized this while researching PHPC-688. I'm not sure when libmongoc stopped using the stamp field, but I found no reference to it within the project.
Let me know if you'd like a JIRA ticket for this; I found no reference to a ""stamp"" among CDRIVER tickets. The concept of a cursor stamp dates back to d6e1916 but that method has been removed for some time. This is likely just cleaning up dead code.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,324,2016-04-28T04:01:30Z,2016-04-28T13:44:43Z,2016-04-28T14:22:22Z,MERGED,True,0,1,1,https://github.com/jmikola,Remove unused stamp field on _mongoc_cursor_t struct,1,[],https://github.com/mongodb/mongo-c-driver/pull/324,https://github.com/chergert,2,https://github.com/mongodb/mongo-c-driver/pull/324#issuecomment-215305726,"Realized this while researching PHPC-688. I'm not sure when libmongoc stopped using the stamp field, but I found no reference to it within the project.
Let me know if you'd like a JIRA ticket for this; I found no reference to a ""stamp"" among CDRIVER tickets. The concept of a cursor stamp dates back to d6e1916 but that method has been removed for some time. This is likely just cleaning up dead code.",The point of the stamp originally was so that the mongoc_cursor_t could detect if the developer was trying to advance a cursor after the client lost/broke connections.,True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,324,2016-04-28T04:01:30Z,2016-04-28T13:44:43Z,2016-04-28T14:22:22Z,MERGED,True,0,1,1,https://github.com/jmikola,Remove unused stamp field on _mongoc_cursor_t struct,1,[],https://github.com/mongodb/mongo-c-driver/pull/324,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/324#issuecomment-215428177,"Realized this while researching PHPC-688. I'm not sure when libmongoc stopped using the stamp field, but I found no reference to it within the project.
Let me know if you'd like a JIRA ticket for this; I found no reference to a ""stamp"" among CDRIVER tickets. The concept of a cursor stamp dates back to d6e1916 but that method has been removed for some time. This is likely just cleaning up dead code.","Thanks @jmikola and @chergert. I believe we stopped using ""stamp"" when we reimplemented the cluster for 1.2.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,325,2016-05-10T12:58:25Z,2016-05-10T13:38:17Z,2016-05-10T13:38:17Z,CLOSED,False,939,61,38,https://github.com/kinju,R1.3 - Using libmongoc-1.0.a and undefined reference,19,[],https://github.com/mongodb/mongo-c-driver/pull/325,https://github.com/kinju,1,https://github.com/mongodb/mongo-c-driver/pull/325,"Hi,
I'm trying to use the mongo c driver with compiled with --libbson=bundle. All used libbson symbols are correctly imported except juste one : ""bson_set_error"".
My app is linked with libbson-1.0.a and libmongoc-1.0.a, both generated from the autogen / configure and make from the master branch.
What can I do ?
Thanks","Hi,
I'm trying to use the mongo c driver with compiled with --libbson=bundle. All used libbson symbols are correctly imported except juste one : ""bson_set_error"".
My app is linked with libbson-1.0.a and libmongoc-1.0.a, both generated from the autogen / configure and make from the master branch.
What can I do ?
Thanks",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,325,2016-05-10T12:58:25Z,2016-05-10T13:38:17Z,2016-05-10T13:38:17Z,CLOSED,False,939,61,38,https://github.com/kinju,R1.3 - Using libmongoc-1.0.a and undefined reference,19,[],https://github.com/mongodb/mongo-c-driver/pull/325,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/325#issuecomment-218159523,"Hi,
I'm trying to use the mongo c driver with compiled with --libbson=bundle. All used libbson symbols are correctly imported except juste one : ""bson_set_error"".
My app is linked with libbson-1.0.a and libmongoc-1.0.a, both generated from the autogen / configure and make from the master branch.
What can I do ?
Thanks","Hi, please follow the instructions for ""how to ask for help"":
https://github.com/mongodb/mongo-c-driver#how-to-ask-for-help",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,326,2016-05-16T09:07:22Z,2016-05-16T20:13:09Z,2016-05-17T04:43:08Z,MERGED,True,42,1,4,https://github.com/remicollet,CDRIVER-1231 Allow to use system crypto policies,1,[],https://github.com/mongodb/mongo-c-driver/pull/326,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/326,"See : https://jira.mongodb.org/browse/CDRIVER-1231

for autotools, add the --enable-system-crypto-profile build option
for cmake, add the -DENABLE_SYSTEM_CRYPTO_PROFILE:BOOL=ON build option

In both case, default to off, so no change for standard build.","See : https://jira.mongodb.org/browse/CDRIVER-1231

for autotools, add the --enable-system-crypto-profile build option
for cmake, add the -DENABLE_SYSTEM_CRYPTO_PROFILE:BOOL=ON build option

In both case, default to off, so no change for standard build.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,326,2016-05-16T09:07:22Z,2016-05-16T20:13:09Z,2016-05-17T04:43:08Z,MERGED,True,42,1,4,https://github.com/remicollet,CDRIVER-1231 Allow to use system crypto policies,1,[],https://github.com/mongodb/mongo-c-driver/pull/326,https://github.com/remicollet,2,https://github.com/mongodb/mongo-c-driver/pull/326#issuecomment-219381710,"See : https://jira.mongodb.org/browse/CDRIVER-1231

for autotools, add the --enable-system-crypto-profile build option
for cmake, add the -DENABLE_SYSTEM_CRYPTO_PROFILE:BOOL=ON build option

In both case, default to off, so no change for standard build.","PR against master, but nice to also have in 1.3 branch.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,326,2016-05-16T09:07:22Z,2016-05-16T20:13:09Z,2016-05-17T04:43:08Z,MERGED,True,42,1,4,https://github.com/remicollet,CDRIVER-1231 Allow to use system crypto policies,1,[],https://github.com/mongodb/mongo-c-driver/pull/326,https://github.com/remicollet,3,https://github.com/mongodb/mongo-c-driver/pull/326#issuecomment-219445702,"See : https://jira.mongodb.org/browse/CDRIVER-1231

for autotools, add the --enable-system-crypto-profile build option
for cmake, add the -DENABLE_SYSTEM_CRYPTO_PROFILE:BOOL=ON build option

In both case, default to off, so no change for standard build.","I think I have take care of all comments.
Please (and feel free to adjust if you see some late problem, and have a better idea for the comment in src/mongoc/mongoc-openssl.c, as I don't really like mine ;)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,326,2016-05-16T09:07:22Z,2016-05-16T20:13:09Z,2016-05-17T04:43:08Z,MERGED,True,42,1,4,https://github.com/remicollet,CDRIVER-1231 Allow to use system crypto policies,1,[],https://github.com/mongodb/mongo-c-driver/pull/326,https://github.com/bjori,4,https://github.com/mongodb/mongo-c-driver/pull/326#issuecomment-219533573,"See : https://jira.mongodb.org/browse/CDRIVER-1231

for autotools, add the --enable-system-crypto-profile build option
for cmake, add the -DENABLE_SYSTEM_CRYPTO_PROFILE:BOOL=ON build option

In both case, default to off, so no change for standard build.",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,326,2016-05-16T09:07:22Z,2016-05-16T20:13:09Z,2016-05-17T04:43:08Z,MERGED,True,42,1,4,https://github.com/remicollet,CDRIVER-1231 Allow to use system crypto policies,1,[],https://github.com/mongodb/mongo-c-driver/pull/326,https://github.com/ajdavis,5,https://github.com/mongodb/mongo-c-driver/pull/326#issuecomment-219537960,"See : https://jira.mongodb.org/browse/CDRIVER-1231

for autotools, add the --enable-system-crypto-profile build option
for cmake, add the -DENABLE_SYSTEM_CRYPTO_PROFILE:BOOL=ON build option

In both case, default to off, so no change for standard build.",This is so generous of you @remicollet thanks for taking the time to make this contribution.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,326,2016-05-16T09:07:22Z,2016-05-16T20:13:09Z,2016-05-17T04:43:08Z,MERGED,True,42,1,4,https://github.com/remicollet,CDRIVER-1231 Allow to use system crypto policies,1,[],https://github.com/mongodb/mongo-c-driver/pull/326,https://github.com/remicollet,6,https://github.com/mongodb/mongo-c-driver/pull/326#issuecomment-219617955,"See : https://jira.mongodb.org/browse/CDRIVER-1231

for autotools, add the --enable-system-crypto-profile build option
for cmake, add the -DENABLE_SYSTEM_CRYPTO_PROFILE:BOOL=ON build option

In both case, default to off, so no change for standard build.",Thanks for merging (and for taking care of downstream needs),True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,327,2016-05-17T16:32:00Z,2016-05-18T12:45:55Z,2016-05-18T12:45:55Z,MERGED,True,5,21,2,https://github.com/rcsanchez97,Clean up for the 1.3.5-1 upload,2,[],https://github.com/mongodb/mongo-c-driver/pull/327,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/327,These are the changes to clean up for the 1.3.5-1 upload.,These are the changes to clean up for the 1.3.5-1 upload.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,328,2016-06-02T18:26:27Z,2016-06-02T18:37:29Z,2016-06-02T22:34:42Z,MERGED,True,2,2,1,https://github.com/jmikola,TRACE() macro requires var args,1,[],https://github.com/mongodb/mongo-c-driver/pull/328,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/328,"This fixes calls introduced in e8f031a.
I noticed this when compiling a recently bumped libmongoc submodule with PHPC, where we utilize stricter build checks. Original error was:
In file included from /home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c:50:0:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c: In function ‘_mongoc_cluster_auth_node_x509’:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-trace.h:34:135: error: expected expression before ‘)’ token
                     do { mongoc_log(MONGOC_LOG_LEVEL_TRACE, MONGOC_LOG_DOMAIN, ""TRACE: %s():%d "" msg, BSON_FUNC, __LINE__, __VA_ARGS__); } while (0)
                                                                                                                                       ^
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c:1037:7: note: in expansion of macro ‘TRACE’
       TRACE (""X509: got username from certificate"");
       ^
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c: In function ‘_mongoc_cluster_auth_node_scram’:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-trace.h:34:135: error: expected expression before ‘)’ token
                     do { mongoc_log(MONGOC_LOG_LEVEL_TRACE, MONGOC_LOG_DOMAIN, ""TRACE: %s():%d "" msg, BSON_FUNC, __LINE__, __VA_ARGS__); } while (0)
                                                                                                                                       ^
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c:1173:4: note: in expansion of macro ‘TRACE’
    TRACE (""SCRAM: authenticated"");
    ^
make: *** [src/libmongoc/src/mongoc/mongoc-cluster.lo] Error 1
make: *** Waiting for unfinished jobs....","This fixes calls introduced in e8f031a.
I noticed this when compiling a recently bumped libmongoc submodule with PHPC, where we utilize stricter build checks. Original error was:
In file included from /home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c:50:0:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c: In function ‘_mongoc_cluster_auth_node_x509’:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-trace.h:34:135: error: expected expression before ‘)’ token
                     do { mongoc_log(MONGOC_LOG_LEVEL_TRACE, MONGOC_LOG_DOMAIN, ""TRACE: %s():%d "" msg, BSON_FUNC, __LINE__, __VA_ARGS__); } while (0)
                                                                                                                                       ^
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c:1037:7: note: in expansion of macro ‘TRACE’
       TRACE (""X509: got username from certificate"");
       ^
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c: In function ‘_mongoc_cluster_auth_node_scram’:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-trace.h:34:135: error: expected expression before ‘)’ token
                     do { mongoc_log(MONGOC_LOG_LEVEL_TRACE, MONGOC_LOG_DOMAIN, ""TRACE: %s():%d "" msg, BSON_FUNC, __LINE__, __VA_ARGS__); } while (0)
                                                                                                                                       ^
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c:1173:4: note: in expansion of macro ‘TRACE’
    TRACE (""SCRAM: authenticated"");
    ^
make: *** [src/libmongoc/src/mongoc/mongoc-cluster.lo] Error 1
make: *** Waiting for unfinished jobs....",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,328,2016-06-02T18:26:27Z,2016-06-02T18:37:29Z,2016-06-02T22:34:42Z,MERGED,True,2,2,1,https://github.com/jmikola,TRACE() macro requires var args,1,[],https://github.com/mongodb/mongo-c-driver/pull/328,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/328#issuecomment-223382654,"This fixes calls introduced in e8f031a.
I noticed this when compiling a recently bumped libmongoc submodule with PHPC, where we utilize stricter build checks. Original error was:
In file included from /home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c:50:0:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c: In function ‘_mongoc_cluster_auth_node_x509’:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-trace.h:34:135: error: expected expression before ‘)’ token
                     do { mongoc_log(MONGOC_LOG_LEVEL_TRACE, MONGOC_LOG_DOMAIN, ""TRACE: %s():%d "" msg, BSON_FUNC, __LINE__, __VA_ARGS__); } while (0)
                                                                                                                                       ^
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c:1037:7: note: in expansion of macro ‘TRACE’
       TRACE (""X509: got username from certificate"");
       ^
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c: In function ‘_mongoc_cluster_auth_node_scram’:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-trace.h:34:135: error: expected expression before ‘)’ token
                     do { mongoc_log(MONGOC_LOG_LEVEL_TRACE, MONGOC_LOG_DOMAIN, ""TRACE: %s():%d "" msg, BSON_FUNC, __LINE__, __VA_ARGS__); } while (0)
                                                                                                                                       ^
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/mongoc/mongoc-cluster.c:1173:4: note: in expansion of macro ‘TRACE’
    TRACE (""SCRAM: authenticated"");
    ^
make: *** [src/libmongoc/src/mongoc/mongoc-cluster.lo] Error 1
make: *** Waiting for unfinished jobs....",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,329,2016-06-08T14:06:51Z,2016-06-08T15:12:56Z,2016-06-18T15:53:53Z,MERGED,True,127,13,7,https://github.com/puppyofkosh,CDRIVER-1316: copy strings from mongoc_ssl_opt_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/329,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/329,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,329,2016-06-08T14:06:51Z,2016-06-08T15:12:56Z,2016-06-18T15:53:53Z,MERGED,True,127,13,7,https://github.com/puppyofkosh,CDRIVER-1316: copy strings from mongoc_ssl_opt_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/329,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/329#issuecomment-224621240,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,330,2016-06-09T13:58:55Z,2016-06-09T17:53:48Z,2016-06-09T17:53:54Z,MERGED,True,5,2,1,https://github.com/puppyofkosh,CDRIVER-776 fixed test duration formatting on Windows,1,[],https://github.com/mongodb/mongo-c-driver/pull/330,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/330,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,330,2016-06-09T13:58:55Z,2016-06-09T17:53:48Z,2016-06-09T17:53:54Z,MERGED,True,5,2,1,https://github.com/puppyofkosh,CDRIVER-776 fixed test duration formatting on Windows,1,[],https://github.com/mongodb/mongo-c-driver/pull/330,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/330#issuecomment-224974866,,Thank you!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,331,2016-06-09T17:40:24Z,2016-06-09T18:26:09Z,2016-06-09T18:26:12Z,MERGED,True,10,2,2,https://github.com/puppyofkosh,CDRIVER-1316 Fixed ENABLE_SSL compile issue,1,[],https://github.com/mongodb/mongo-c-driver/pull/331,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/331,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,331,2016-06-09T17:40:24Z,2016-06-09T18:26:09Z,2016-06-09T18:26:12Z,MERGED,True,10,2,2,https://github.com/puppyofkosh,CDRIVER-1316 Fixed ENABLE_SSL compile issue,1,[],https://github.com/mongodb/mongo-c-driver/pull/331,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/331#issuecomment-224984006,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,332,2016-06-13T11:20:16Z,2016-06-13T13:14:37Z,2016-06-13T13:16:13Z,MERGED,True,1,1,1,https://github.com/remicollet,avoid abicheck failure,1,[],https://github.com/mongodb/mongo-c-driver/pull/332,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/332,"We encounter recent failure because of this script.
See: https://bugzilla.redhat.com/1345868
And : https://apps.fedoraproject.org/koschei/package/mongo-c-driver
Build is back to ""green"" thanks to this minor fix.","We encounter recent failure because of this script.
See: https://bugzilla.redhat.com/1345868
And : https://apps.fedoraproject.org/koschei/package/mongo-c-driver
Build is back to ""green"" thanks to this minor fix.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,332,2016-06-13T11:20:16Z,2016-06-13T13:14:37Z,2016-06-13T13:16:13Z,MERGED,True,1,1,1,https://github.com/remicollet,avoid abicheck failure,1,[],https://github.com/mongodb/mongo-c-driver/pull/332,https://github.com/remicollet,2,https://github.com/mongodb/mongo-c-driver/pull/332#issuecomment-225561877,"We encounter recent failure because of this script.
See: https://bugzilla.redhat.com/1345868
And : https://apps.fedoraproject.org/koschei/package/mongo-c-driver
Build is back to ""green"" thanks to this minor fix.","My 1st idea was to use ""diff -uwB"", but using ""cpp --freestanding"" seems better (tested with old GCC 4.4 in RHEL-6 and newer GCC 6.1 in Fedora rawhide)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,332,2016-06-13T11:20:16Z,2016-06-13T13:14:37Z,2016-06-13T13:16:13Z,MERGED,True,1,1,1,https://github.com/remicollet,avoid abicheck failure,1,[],https://github.com/mongodb/mongo-c-driver/pull/332,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/332#issuecomment-225570998,"We encounter recent failure because of this script.
See: https://bugzilla.redhat.com/1345868
And : https://apps.fedoraproject.org/koschei/package/mongo-c-driver
Build is back to ""green"" thanks to this minor fix.","How interesting, thanks. What does --freestanding do?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,332,2016-06-13T11:20:16Z,2016-06-13T13:14:37Z,2016-06-13T13:16:13Z,MERGED,True,1,1,1,https://github.com/remicollet,avoid abicheck failure,1,[],https://github.com/mongodb/mongo-c-driver/pull/332,https://github.com/remicollet,4,https://github.com/mongodb/mongo-c-driver/pull/332#issuecomment-225572496,"We encounter recent failure because of this script.
See: https://bugzilla.redhat.com/1345868
And : https://apps.fedoraproject.org/koschei/package/mongo-c-driver
Build is back to ""green"" thanks to this minor fix.","--freestanding is the same than -ffreestanding
Quoting Florian Weimer (glibc maintainer):

Use “cpp --freestanding -P”, so that you do not end up with any whitespace generated from implementation header files.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,332,2016-06-13T11:20:16Z,2016-06-13T13:14:37Z,2016-06-13T13:16:13Z,MERGED,True,1,1,1,https://github.com/remicollet,avoid abicheck failure,1,[],https://github.com/mongodb/mongo-c-driver/pull/332,https://github.com/ajdavis,5,https://github.com/mongodb/mongo-c-driver/pull/332#issuecomment-225576877,"We encounter recent failure because of this script.
See: https://bugzilla.redhat.com/1345868
And : https://apps.fedoraproject.org/koschei/package/mongo-c-driver
Build is back to ""green"" thanks to this minor fix.","I sort of understand, ""A freestanding environment is one in which the standard library may not exist, and program startup may not necessarily be at main. The most obvious example is an OS kernel. This is equivalent to -fno-hosted.""
https://gcc.gnu.org/onlinedocs/gcc/C-Dialect-Options.html
Thanks!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,333,2016-06-15T15:54:15Z,2016-06-15T19:54:42Z,2016-06-15T19:54:42Z,MERGED,True,146,3,11,https://github.com/fionaRowan,CDRIVER-1306 implemented mongoc_gridfs_file_set_id,1,[],https://github.com/mongodb/mongo-c-driver/pull/333,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/333,"added a new error code. demonstrated how to use this function in gridfs example, and added a test.","added a new error code. demonstrated how to use this function in gridfs example, and added a test.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,334,2016-06-15T16:06:06Z,2016-06-15T19:55:46Z,2016-06-15T19:55:46Z,MERGED,True,178,5,8,https://github.com/puppyofkosh,CDRIVER-725 added mongoc_collection_create_index_2 function,1,[],https://github.com/mongodb/mongo-c-driver/pull/334,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/334,I added the memset(error) to 0 thing like you mentioned.,I added the memset(error) to 0 thing like you mentioned.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,335,2016-06-16T21:53:15Z,2016-06-16T23:37:41Z,2016-06-16T23:37:41Z,MERGED,True,10,0,1,https://github.com/fionaRowan,CDRIVER-1321 instructions about adding error codes / domains,1,[],https://github.com/mongodb/mongo-c-driver/pull/335,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/335,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,336,2016-06-17T14:33:18Z,2016-06-17T14:45:57Z,2016-06-17T14:45:57Z,MERGED,True,10,16,1,https://github.com/fionaRowan,CDRIVER-1334 fixed function signature in documentation,1,[],https://github.com/mongodb/mongo-c-driver/pull/336,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/336,Updated the signature of mongoc_client_command_simple_with_server_id() to reflect the implemented function.,Updated the signature of mongoc_client_command_simple_with_server_id() to reflect the implemented function.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,337,2016-06-17T15:24:57Z,2016-06-17T16:48:06Z,2016-06-17T16:48:29Z,MERGED,True,682,3,14,https://github.com/puppyofkosh,CDRIVER-1201 added documentation for common operations,1,[],https://github.com/mongodb/mongo-c-driver/pull/337,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/337,Fixed the the link in both databse_copy.page and collection_copy.page,Fixed the the link in both databse_copy.page and collection_copy.page,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,337,2016-06-17T15:24:57Z,2016-06-17T16:48:06Z,2016-06-17T16:48:29Z,MERGED,True,682,3,14,https://github.com/puppyofkosh,CDRIVER-1201 added documentation for common operations,1,[],https://github.com/mongodb/mongo-c-driver/pull/337,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/337#issuecomment-226821171,Fixed the the link in both databse_copy.page and collection_copy.page,Thank you!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,338,2016-06-17T15:36:32Z,2016-07-13T23:47:50Z,2016-07-13T23:47:50Z,CLOSED,False,192,0,1,https://github.com/puppyofkosh,added fiona and ian's ssl ping example,1,[],https://github.com/mongodb/mongo-c-driver/pull/338,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/338,"This is what we did on our first day, and it looks like it'll actually get committed!","This is what we did on our first day, and it looks like it'll actually get committed!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,338,2016-06-17T15:36:32Z,2016-07-13T23:47:50Z,2016-07-13T23:47:50Z,CLOSED,False,192,0,1,https://github.com/puppyofkosh,added fiona and ian's ssl ping example,1,[],https://github.com/mongodb/mongo-c-driver/pull/338,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/338#issuecomment-232519191,"This is what we did on our first day, and it looks like it'll actually get committed!","This isn't actually generic enough I think to be included as an example.
It was a decent exercise in seeing how to use the driver though :)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,339,2016-06-20T17:52:42Z,2016-06-20T23:09:38Z,2016-06-20T23:09:38Z,MERGED,True,13,13,2,https://github.com/puppyofkosh,re-consted ssl_opts strings,1,[],https://github.com/mongodb/mongo-c-driver/pull/339,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/339,lgtm'd by Jason,lgtm'd by Jason,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,340,2016-06-22T14:43:00Z,2016-06-22T15:51:25Z,2016-06-22T15:51:25Z,MERGED,True,165,8,5,https://github.com/fionaRowan,CDRIVER-608 validate mongoc_read_prefs_t's,1,[],https://github.com/mongodb/mongo-c-driver/pull/340,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/340,"Validate read preferences where they are used. If they are invalid, set error where applicable.","Validate read preferences where they are used. If they are invalid, set error where applicable.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,341,2016-06-23T19:17:36Z,2016-06-27T15:32:55Z,2016-06-27T15:32:59Z,MERGED,True,31,18,2,https://github.com/fionaRowan,CDRIVER-1320 move SSL instructions,1,[],https://github.com/mongodb/mongo-c-driver/pull/341,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/341,Moved SSL instructions from authentication to advanced_connections.,Moved SSL instructions from authentication to advanced_connections.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,341,2016-06-23T19:17:36Z,2016-06-27T15:32:55Z,2016-06-27T15:32:59Z,MERGED,True,31,18,2,https://github.com/fionaRowan,CDRIVER-1320 move SSL instructions,1,[],https://github.com/mongodb/mongo-c-driver/pull/341,https://github.com/fionaRowan,2,https://github.com/mongodb/mongo-c-driver/pull/341#issuecomment-228756769,Moved SSL instructions from authentication to advanced_connections.,done!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,341,2016-06-23T19:17:36Z,2016-06-27T15:32:55Z,2016-06-27T15:32:59Z,MERGED,True,31,18,2,https://github.com/fionaRowan,CDRIVER-1320 move SSL instructions,1,[],https://github.com/mongodb/mongo-c-driver/pull/341,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/341#issuecomment-228782235,Moved SSL instructions from authentication to advanced_connections.,Thank you!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,342,2016-06-27T13:55:37Z,2016-06-27T15:23:49Z,2016-06-27T15:24:02Z,MERGED,True,10,9,3,https://github.com/puppyofkosh,CDRIVER-1201 fix man,2,[],https://github.com/mongodb/mongo-c-driver/pull/342,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/342,Finally made a pull request,Finally made a pull request,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,342,2016-06-27T13:55:37Z,2016-06-27T15:23:49Z,2016-06-27T15:24:02Z,MERGED,True,10,9,3,https://github.com/puppyofkosh,CDRIVER-1201 fix man,2,[],https://github.com/mongodb/mongo-c-driver/pull/342,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/342#issuecomment-228779439,Finally made a pull request,Please port mallard2man change to libbson too.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,343,2016-07-05T13:42:21Z,2016-07-05T13:54:00Z,2016-07-05T13:54:00Z,MERGED,True,6,5,1,https://github.com/puppyofkosh,CDRIVER-1331 minor optimization to write_command,1,[],https://github.com/mongodb/mongo-c-driver/pull/343,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/343,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,344,2016-07-05T14:02:51Z,2016-07-08T21:10:24Z,2016-07-08T21:10:24Z,MERGED,True,2,1,2,https://github.com/fionaRowan,CDRIVER-1350 collection_find_and_modify_with_opts false on writeConce…,1,[],https://github.com/mongodb/mongo-c-driver/pull/344,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/344,"…rnError
Function mongoc_collection_find_and_modify_with_opts previously could return true on writeConcernError.","…rnError
Function mongoc_collection_find_and_modify_with_opts previously could return true on writeConcernError.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,345,2016-07-05T19:14:15Z,2016-07-05T19:19:58Z,2016-07-05T19:19:58Z,MERGED,True,33,6,3,https://github.com/puppyofkosh,CDRIVER-1328 reply is always initialized in mongoc_collection_validate,1,[],https://github.com/mongodb/mongo-c-driver/pull/345,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/345,"I guess I forgot to make a pull request for this. Here's the CR link:
https://mongodbcr.appspot.com/79000001/","I guess I forgot to make a pull request for this. Here's the CR link:
https://mongodbcr.appspot.com/79000001/",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,346,2016-07-05T19:21:57Z,2016-07-05T19:48:34Z,2016-07-05T19:48:35Z,MERGED,True,80,46,4,https://github.com/puppyofkosh,CDRIVER-1333 client pool starts scanner only once client is popped,1,[],https://github.com/mongodb/mongo-c-driver/pull/346,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/346,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,347,2016-07-07T04:12:19Z,2016-07-07T15:48:30Z,2016-07-08T02:54:44Z,MERGED,True,19,3,1,https://github.com/mxplusb,Updated readme,1,[],https://github.com/mongodb/mongo-c-driver/pull/347,https://github.com/mxplusb,1,https://github.com/mongodb/mongo-c-driver/pull/347,"Added and updated the Windows instructions regarding Visual Studio builds.
Signed-off-by: Mike Lloyd kevin.michael.lloyd@gmail.com","Added and updated the Windows instructions regarding Visual Studio builds.
Signed-off-by: Mike Lloyd kevin.michael.lloyd@gmail.com",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,347,2016-07-07T04:12:19Z,2016-07-07T15:48:30Z,2016-07-08T02:54:44Z,MERGED,True,19,3,1,https://github.com/mxplusb,Updated readme,1,[],https://github.com/mongodb/mongo-c-driver/pull/347,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/347#issuecomment-231120840,"Added and updated the Windows instructions regarding Visual Studio builds.
Signed-off-by: Mike Lloyd kevin.michael.lloyd@gmail.com",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,347,2016-07-07T04:12:19Z,2016-07-07T15:48:30Z,2016-07-08T02:54:44Z,MERGED,True,19,3,1,https://github.com/mxplusb,Updated readme,1,[],https://github.com/mongodb/mongo-c-driver/pull/347,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/347#issuecomment-231121116,"Added and updated the Windows instructions regarding Visual Studio builds.
Signed-off-by: Mike Lloyd kevin.michael.lloyd@gmail.com","Would you like to make the same change for libbson?:
https://github.com/mongodb/libbson/blob/master/README.md",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,347,2016-07-07T04:12:19Z,2016-07-07T15:48:30Z,2016-07-08T02:54:44Z,MERGED,True,19,3,1,https://github.com/mxplusb,Updated readme,1,[],https://github.com/mongodb/mongo-c-driver/pull/347,https://github.com/mxplusb,4,https://github.com/mongodb/mongo-c-driver/pull/347#issuecomment-231263555,"Added and updated the Windows instructions regarding Visual Studio builds.
Signed-off-by: Mike Lloyd kevin.michael.lloyd@gmail.com",Done.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,348,2016-07-15T09:58:41Z,2016-07-15T20:32:11Z,2016-07-15T20:32:15Z,MERGED,True,1,0,1,https://github.com/derickr,Add generated file to .gitignore,1,[],https://github.com/mongodb/mongo-c-driver/pull/348,https://github.com/derickr,1,https://github.com/mongodb/mongo-c-driver/pull/348,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,348,2016-07-15T09:58:41Z,2016-07-15T20:32:11Z,2016-07-15T20:32:15Z,MERGED,True,1,0,1,https://github.com/derickr,Add generated file to .gitignore,1,[],https://github.com/mongodb/mongo-c-driver/pull/348,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/348#issuecomment-233062469,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,349,2016-07-15T22:05:10Z,2016-07-15T22:14:11Z,2016-07-15T22:14:17Z,MERGED,True,1074,41,27,https://github.com/puppyofkosh,"CDRIVER-1333: client metadata capture design, without the capture",1,[],https://github.com/mongodb/mongo-c-driver/pull/349,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/349,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,349,2016-07-15T22:05:10Z,2016-07-15T22:14:11Z,2016-07-15T22:14:17Z,MERGED,True,1074,41,27,https://github.com/puppyofkosh,"CDRIVER-1333: client metadata capture design, without the capture",1,[],https://github.com/mongodb/mongo-c-driver/pull/349,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/349#issuecomment-233082255,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,350,2016-07-19T16:28:59Z,2016-07-19T17:45:19Z,2016-07-19T17:45:19Z,MERGED,True,89,0,1,https://github.com/fionaRowan,CDRIVER-1322: test for generic command functions,1,[],https://github.com/mongodb/mongo-c-driver/pull/350,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/350,Ensures a lack of special handling for writeConcerns and writeConcernErrors in generic command functions.,Ensures a lack of special handling for writeConcerns and writeConcernErrors in generic command functions.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,351,2016-07-20T16:17:23Z,2016-07-20T16:30:48Z,2016-07-20T16:30:49Z,MERGED,True,123,31,27,https://github.com/puppyofkosh,CDRIVER-1393 put metadata and max_staleness behind MONGOC_EXPERIMENTAL_FEATURE,1,[],https://github.com/mongodb/mongo-c-driver/pull/351,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/351,"Only change I made from the CR was to remove metadata_append, client_set_appname and client_pool_set_appname from libmongoc.def and libmongoc-ssl.def (so now it's only in the ""-experimental"" files)","Only change I made from the CR was to remove metadata_append, client_set_appname and client_pool_set_appname from libmongoc.def and libmongoc-ssl.def (so now it's only in the ""-experimental"" files)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,352,2016-07-20T16:52:53Z,2016-07-20T20:06:20Z,2016-07-20T20:06:20Z,MERGED,True,83,0,3,https://github.com/fionaRowan,CDRIVER-1322: internal helper functions and values,1,[],https://github.com/mongodb/mongo-c-driver/pull/352,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/352,Added internal functions and values for implementing writeConcern support for commands that write.,Added internal functions and values for implementing writeConcern support for commands that write.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,353,2016-07-21T20:30:37Z,2016-07-22T00:44:37Z,2016-07-22T00:44:37Z,MERGED,True,64,2,7,https://github.com/fionaRowan,CDRIVER-1384: added mongoc_write_concern_append,1,[],https://github.com/mongodb/mongo-c-driver/pull/353,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/353,Function that helps users append writeConcerns to commands before passing them into generic functions.,Function that helps users append writeConcerns to commands before passing them into generic functions.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,354,2016-07-22T15:24:59Z,2016-07-22T15:49:44Z,2016-07-22T15:49:44Z,MERGED,True,66,14,7,https://github.com/puppyofkosh,CDRIVER-1408 making mongoc-trace.h public,1,[],https://github.com/mongodb/mongo-c-driver/pull/354,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/354,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,355,2016-07-22T16:09:44Z,2016-07-22T16:58:17Z,2016-07-29T15:55:05Z,MERGED,True,7,5,1,https://github.com/fionaRowan,CDRIVER-1381: small optimization in reply_local,1,[],https://github.com/mongodb/mongo-c-driver/pull/355,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/355,"By using reply_ptr, removed need for bson_copy_to call in mongoc_collection_find_and_modify_with_opts","By using reply_ptr, removed need for bson_copy_to call in mongoc_collection_find_and_modify_with_opts",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,355,2016-07-22T16:09:44Z,2016-07-22T16:58:17Z,2016-07-29T15:55:05Z,MERGED,True,7,5,1,https://github.com/fionaRowan,CDRIVER-1381: small optimization in reply_local,1,[],https://github.com/mongodb/mongo-c-driver/pull/355,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/355#issuecomment-234597796,"By using reply_ptr, removed need for bson_copy_to call in mongoc_collection_find_and_modify_with_opts",thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,356,2016-07-22T16:15:12Z,2016-07-22T16:58:48Z,2016-07-22T16:58:56Z,MERGED,True,43,0,3,https://github.com/fionaRowan,"CDRIVER-1384: add symbol to doc, *experimental.def",1,[],https://github.com/mongodb/mongo-c-driver/pull/356,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/356,"Added mongoc_write_concern_append symbol to build/cmake/*-experimental.def files, and added symbol page to documentation.","Added mongoc_write_concern_append symbol to build/cmake/*-experimental.def files, and added symbol page to documentation.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,356,2016-07-22T16:15:12Z,2016-07-22T16:58:48Z,2016-07-22T16:58:56Z,MERGED,True,43,0,3,https://github.com/fionaRowan,"CDRIVER-1384: add symbol to doc, *experimental.def",1,[],https://github.com/mongodb/mongo-c-driver/pull/356,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/356#issuecomment-234597916,"Added mongoc_write_concern_append symbol to build/cmake/*-experimental.def files, and added symbol page to documentation.",thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,357,2016-07-22T21:27:41Z,2016-07-22T21:49:35Z,2016-07-22T21:49:35Z,MERGED,True,228,14,5,https://github.com/puppyofkosh,Cdriver 1394,2,[],https://github.com/mongodb/mongo-c-driver/pull/357,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/357,"I split this into 2 commits.

The os_type field
The cmake build was broken with the experimental=off flag.

These were both part of the same CR, I just split it into 2 commits.","I split this into 2 commits.

The os_type field
The cmake build was broken with the experimental=off flag.

These were both part of the same CR, I just split it into 2 commits.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,358,2016-07-25T22:22:26Z,2016-07-26T01:27:50Z,2016-07-26T01:28:28Z,MERGED,True,129,0,9,https://github.com/fionaRowan,CDRIVER-1322: mongoc_collection_aggregate_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/358,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/358,"Implemented and tested mongoc_collection_aggregate_with_write_concern, where mongoc_collection_aggregate is a thin wrapper that passes NULL as write concern.","Implemented and tested mongoc_collection_aggregate_with_write_concern, where mongoc_collection_aggregate is a thin wrapper that passes NULL as write concern.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,358,2016-07-25T22:22:26Z,2016-07-26T01:27:50Z,2016-07-26T01:28:28Z,MERGED,True,129,0,9,https://github.com/fionaRowan,CDRIVER-1322: mongoc_collection_aggregate_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/358,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/358#issuecomment-235136458,"Implemented and tested mongoc_collection_aggregate_with_write_concern, where mongoc_collection_aggregate is a thin wrapper that passes NULL as write concern.","Good, but see https://jira.mongodb.org/browse/CDRIVER-1414.
Also, we need mongoc_collection_aggregate_with_write_concern.page.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,359,2016-07-25T23:44:28Z,2016-07-27T08:11:24Z,2016-07-27T08:11:24Z,CLOSED,False,3,0,1,https://github.com/cschwarz-inco,fixed handling of other cursor errors in mongoc_collection_find_indexes,1,[],https://github.com/mongodb/mongo-c-driver/pull/359,https://github.com/cschwarz-inco,1,https://github.com/mongodb/mongo-c-driver/pull/359,"previous behavior: function returned freed cursor if an error different from the two hardcoded error cases occurred. caller then ran into a ""use-after-free"" issue.
new behavior: functions returns a NULL pointer if an error different from the two hardcoded error cases occurred","previous behavior: function returned freed cursor if an error different from the two hardcoded error cases occurred. caller then ran into a ""use-after-free"" issue.
new behavior: functions returns a NULL pointer if an error different from the two hardcoded error cases occurred",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,359,2016-07-25T23:44:28Z,2016-07-27T08:11:24Z,2016-07-27T08:11:24Z,CLOSED,False,3,0,1,https://github.com/cschwarz-inco,fixed handling of other cursor errors in mongoc_collection_find_indexes,1,[],https://github.com/mongodb/mongo-c-driver/pull/359,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/359#issuecomment-235148379,"previous behavior: function returned freed cursor if an error different from the two hardcoded error cases occurred. caller then ran into a ""use-after-free"" issue.
new behavior: functions returns a NULL pointer if an error different from the two hardcoded error cases occurred",Good catch. Was there a specific case that reproduced the bug for you?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,359,2016-07-25T23:44:28Z,2016-07-27T08:11:24Z,2016-07-27T08:11:24Z,CLOSED,False,3,0,1,https://github.com/cschwarz-inco,fixed handling of other cursor errors in mongoc_collection_find_indexes,1,[],https://github.com/mongodb/mongo-c-driver/pull/359,https://github.com/cschwarz-inco,3,https://github.com/mongodb/mongo-c-driver/pull/359#issuecomment-235351962,"previous behavior: function returned freed cursor if an error different from the two hardcoded error cases occurred. caller then ran into a ""use-after-free"" issue.
new behavior: functions returns a NULL pointer if an error different from the two hardcoded error cases occurred","It was coincidence. Due to a programming error in our application, multiple threads used the same mongoc_client_t connection concurrently. This caused all kinds of funny errors.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,359,2016-07-25T23:44:28Z,2016-07-27T08:11:24Z,2016-07-27T08:11:24Z,CLOSED,False,3,0,1,https://github.com/cschwarz-inco,fixed handling of other cursor errors in mongoc_collection_find_indexes,1,[],https://github.com/mongodb/mongo-c-driver/pull/359,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/359#issuecomment-235412146,"previous behavior: function returned freed cursor if an error different from the two hardcoded error cases occurred. caller then ran into a ""use-after-free"" issue.
new behavior: functions returns a NULL pointer if an error different from the two hardcoded error cases occurred",Did you mean to push another commit to this PR? It's not related to your first change.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,359,2016-07-25T23:44:28Z,2016-07-27T08:11:24Z,2016-07-27T08:11:24Z,CLOSED,False,3,0,1,https://github.com/cschwarz-inco,fixed handling of other cursor errors in mongoc_collection_find_indexes,1,[],https://github.com/mongodb/mongo-c-driver/pull/359,https://github.com/cschwarz-inco,5,https://github.com/mongodb/mongo-c-driver/pull/359#issuecomment-235417477,"previous behavior: function returned freed cursor if an error different from the two hardcoded error cases occurred. caller then ran into a ""use-after-free"" issue.
new behavior: functions returns a NULL pointer if an error different from the two hardcoded error cases occurred",No I didn't. The second commit was not supposed to go into the first pull request. (maybe a second pull request). I'll try to restore the original pull request...,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,359,2016-07-25T23:44:28Z,2016-07-27T08:11:24Z,2016-07-27T08:11:24Z,CLOSED,False,3,0,1,https://github.com/cschwarz-inco,fixed handling of other cursor errors in mongoc_collection_find_indexes,1,[],https://github.com/mongodb/mongo-c-driver/pull/359,https://github.com/cschwarz-inco,6,https://github.com/mongodb/mongo-c-driver/pull/359#issuecomment-235419847,"previous behavior: function returned freed cursor if an error different from the two hardcoded error cases occurred. caller then ran into a ""use-after-free"" issue.
new behavior: functions returns a NULL pointer if an error different from the two hardcoded error cases occurred",Ok. I removed the second commit.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,359,2016-07-25T23:44:28Z,2016-07-27T08:11:24Z,2016-07-27T08:11:24Z,CLOSED,False,3,0,1,https://github.com/cschwarz-inco,fixed handling of other cursor errors in mongoc_collection_find_indexes,1,[],https://github.com/mongodb/mongo-c-driver/pull/359,https://github.com/ajdavis,7,https://github.com/mongodb/mongo-c-driver/pull/359#issuecomment-235463091,"previous behavior: function returned freed cursor if an error different from the two hardcoded error cases occurred. caller then ran into a ""use-after-free"" issue.
new behavior: functions returns a NULL pointer if an error different from the two hardcoded error cases occurred","Filed the bug:
https://jira.mongodb.org/browse/CDRIVER-1420
I've written a test, awaiting my colleagues' review.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,359,2016-07-25T23:44:28Z,2016-07-27T08:11:24Z,2016-07-27T08:11:24Z,CLOSED,False,3,0,1,https://github.com/cschwarz-inco,fixed handling of other cursor errors in mongoc_collection_find_indexes,1,[],https://github.com/mongodb/mongo-c-driver/pull/359,https://github.com/ajdavis,8,https://github.com/mongodb/mongo-c-driver/pull/359#issuecomment-235516475,"previous behavior: function returned freed cursor if an error different from the two hardcoded error cases occurred. caller then ran into a ""use-after-free"" issue.
new behavior: functions returns a NULL pointer if an error different from the two hardcoded error cases occurred",Merged in 542c42d.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,360,2016-07-26T14:19:38Z,2016-07-26T14:29:55Z,2016-07-26T14:30:01Z,MERGED,True,29,18,3,https://github.com/puppyofkosh,CDRIVER-1411 metadata size check too strict,1,[],https://github.com/mongodb/mongo-c-driver/pull/360,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/360,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,360,2016-07-26T14:19:38Z,2016-07-26T14:29:55Z,2016-07-26T14:30:01Z,MERGED,True,29,18,3,https://github.com/puppyofkosh,CDRIVER-1411 metadata size check too strict,1,[],https://github.com/mongodb/mongo-c-driver/pull/360,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/360#issuecomment-235285417,,thanks \o/,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,361,2016-07-26T18:45:25Z,2016-07-26T21:33:09Z,2016-08-01T20:11:30Z,MERGED,True,5,8,1,https://github.com/fionaRowan,CDRIVER-1415: enable test for wire version 2+ only,1,[],https://github.com/mongodb/mongo-c-driver/pull/361,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/361,$out pipeline stage is not supported in other versions,$out pipeline stage is not supported in other versions,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,362,2016-07-26T18:54:10Z,2016-07-26T21:38:51Z,2016-07-27T17:24:11Z,MERGED,True,5,4,1,https://github.com/fionaRowan,CDRIVER-1322: improve test for aggregate_w_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/362,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/362,rename test and assert error does not exist more descriptively,rename test and assert error does not exist more descriptively,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,363,2016-07-27T16:49:29Z,2016-07-29T18:47:03Z,2016-07-29T18:47:04Z,CLOSED,False,5,5,2,https://github.com/cschwarz-inco,mongoc_bulk_operation_execute: ensure reply is initialized before returning,3,[],https://github.com/mongodb/mongo-c-driver/pull/363,https://github.com/cschwarz-inco,1,https://github.com/mongodb/mongo-c-driver/pull/363,"The documentation for ""mongoc_bulk_operation_execute"" says ""reply is always initialized, even upon failure. Callers must call bson_destroy() to release this potential allocation.""
However, implementation does not initialize reply in all cases, making it impossible for the caller to determine whether reply has been initialized or not. This is contrary to documentation, which says that reply is ALWAYS initialized.
This commit changes the implementation to be in accordance with the documentation. reply is initialized before any return.","The documentation for ""mongoc_bulk_operation_execute"" says ""reply is always initialized, even upon failure. Callers must call bson_destroy() to release this potential allocation.""
However, implementation does not initialize reply in all cases, making it impossible for the caller to determine whether reply has been initialized or not. This is contrary to documentation, which says that reply is ALWAYS initialized.
This commit changes the implementation to be in accordance with the documentation. reply is initialized before any return.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,363,2016-07-27T16:49:29Z,2016-07-29T18:47:03Z,2016-07-29T18:47:04Z,CLOSED,False,5,5,2,https://github.com/cschwarz-inco,mongoc_bulk_operation_execute: ensure reply is initialized before returning,3,[],https://github.com/mongodb/mongo-c-driver/pull/363,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/363#issuecomment-236164490,"The documentation for ""mongoc_bulk_operation_execute"" says ""reply is always initialized, even upon failure. Callers must call bson_destroy() to release this potential allocation.""
However, implementation does not initialize reply in all cases, making it impossible for the caller to determine whether reply has been initialized or not. This is contrary to documentation, which says that reply is ALWAYS initialized.
This commit changes the implementation to be in accordance with the documentation. reply is initialized before any return.","Thanks, we'll merge in the next few days.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,363,2016-07-27T16:49:29Z,2016-07-29T18:47:03Z,2016-07-29T18:47:04Z,CLOSED,False,5,5,2,https://github.com/cschwarz-inco,mongoc_bulk_operation_execute: ensure reply is initialized before returning,3,[],https://github.com/mongodb/mongo-c-driver/pull/363,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/363#issuecomment-236167936,"The documentation for ""mongoc_bulk_operation_execute"" says ""reply is always initialized, even upon failure. Callers must call bson_destroy() to release this potential allocation.""
However, implementation does not initialize reply in all cases, making it impossible for the caller to determine whether reply has been initialized or not. This is contrary to documentation, which says that reply is ALWAYS initialized.
This commit changes the implementation to be in accordance with the documentation. reply is initialized before any return.",Tracking in https://jira.mongodb.org/browse/CDRIVER-1433,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,363,2016-07-27T16:49:29Z,2016-07-29T18:47:03Z,2016-07-29T18:47:04Z,CLOSED,False,5,5,2,https://github.com/cschwarz-inco,mongoc_bulk_operation_execute: ensure reply is initialized before returning,3,[],https://github.com/mongodb/mongo-c-driver/pull/363,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/363#issuecomment-236262524,"The documentation for ""mongoc_bulk_operation_execute"" says ""reply is always initialized, even upon failure. Callers must call bson_destroy() to release this potential allocation.""
However, implementation does not initialize reply in all cases, making it impossible for the caller to determine whether reply has been initialized or not. This is contrary to documentation, which says that reply is ALWAYS initialized.
This commit changes the implementation to be in accordance with the documentation. reply is initialized before any return.",Merged in 0e0ae00,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,364,2016-07-27T18:56:31Z,2016-07-28T19:17:57Z,2016-07-28T19:17:57Z,MERGED,True,163,0,3,https://github.com/puppyofkosh,CDRIVER-1391 metadata docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/364,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/364,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,365,2016-07-28T15:46:47Z,2016-07-29T12:08:11Z,2016-07-29T12:08:11Z,MERGED,True,32,25,15,https://github.com/puppyofkosh,CDRIVER-1418 updated tutorial doc/examples to use appname,1,[],https://github.com/mongodb/mongo-c-driver/pull/365,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/365,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,366,2016-07-28T18:01:25Z,2016-07-29T12:08:40Z,2016-07-29T12:08:40Z,MERGED,True,255,4,9,https://github.com/puppyofkosh,CDRIVER-1392 appname in connection string,1,[],https://github.com/mongodb/mongo-c-driver/pull/366,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/366,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,367,2016-07-28T18:42:25Z,2016-07-29T12:08:53Z,2016-07-29T12:08:53Z,MERGED,True,118,65,2,https://github.com/fionaRowan,CDRIVER-1322: doc for mongoc_collection_aggregate_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/367,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/367,"Updated doc for mongoc_collection_aggregate, created doc for mongoc_collection_aggregate_with_write_concern.","Updated doc for mongoc_collection_aggregate, created doc for mongoc_collection_aggregate_with_write_concern.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,368,2016-07-28T20:19:07Z,2016-07-29T12:09:11Z,2016-07-29T12:09:11Z,MERGED,True,76,0,9,https://github.com/fionaRowan,CDRIVER-1322: mongoc_database_create_collection_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/368,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/368,Implemented and tested mongoc_database_create_collection_with_write_concern.,Implemented and tested mongoc_database_create_collection_with_write_concern.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,369,2016-07-29T15:25:16Z,2016-07-29T21:06:32Z,2016-07-29T21:06:32Z,MERGED,True,60,4,9,https://github.com/fionaRowan,CDRIVER-1322: mongoc_collection_drop_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/369,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/369,Implement and test mongoc_collection_drop_with_write_concern.,Implement and test mongoc_collection_drop_with_write_concern.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,370,2016-07-29T20:27:58Z,2016-07-29T21:35:46Z,2016-08-01T20:11:42Z,MERGED,True,58,9,2,https://github.com/fionaRowan,CDRIVER-1322: doc for mongoc_database_create_collection_with_write_co…,1,[],https://github.com/mongodb/mongo-c-driver/pull/370,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/370,…ncern,…ncern,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,371,2016-07-29T21:33:27Z,2016-07-30T12:52:55Z,2016-07-30T12:52:55Z,MERGED,True,54,12,2,https://github.com/fionaRowan,CDRIVER-1322: doc for mongoc_collection_drop_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/371,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/371,"wrote documentation for new symbol mongoc_collection_drop_with_write_concern, and updated documentation for thin wrapper mongoc_collection_drop.","wrote documentation for new symbol mongoc_collection_drop_with_write_concern, and updated documentation for thin wrapper mongoc_collection_drop.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,372,2016-07-29T21:41:15Z,2016-07-30T12:53:38Z,2016-07-30T12:53:39Z,MERGED,True,13,4,3,https://github.com/fionaRowan,CDRIVER-1414: add mongoc_write_concern_t to mongoc_cursor_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/372,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/372,"added writeConcern to cursor, and appended writeConcern to command inside _mongoc_cursor_run_command instead of inside mongoc_collection_aggregate_with_write_concern.","added writeConcern to cursor, and appended writeConcern to command inside _mongoc_cursor_run_command instead of inside mongoc_collection_aggregate_with_write_concern.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,373,2016-07-29T21:49:08Z,2016-07-30T12:54:03Z,2016-07-30T12:54:03Z,MERGED,True,61,1,9,https://github.com/fionaRowan,CDRIVER-1322: mongoc_database_drop_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/373,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/373,Implemented and tested mongoc_database_drop_with_write_concern.,Implemented and tested mongoc_database_drop_with_write_concern.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,374,2016-07-29T21:54:07Z,2016-07-30T12:54:19Z,2016-07-30T12:54:19Z,MERGED,True,54,11,2,https://github.com/fionaRowan,CDRIVER-1322: doc for mongoc_database_drop_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/374,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/374,"wrote documentation for mongoc_database_drop_with_write_concern, updated documentation for mongoc_database_drop.","wrote documentation for mongoc_database_drop_with_write_concern, updated documentation for mongoc_database_drop.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,375,2016-07-30T17:06:30Z,2016-07-30T18:02:24Z,2016-07-30T18:02:24Z,MERGED,True,51,11,2,https://github.com/fionaRowan,CDRIVER-1322: doc for mongoc_collection_drop_index_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/375,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/375,wrote documentation for mongoc_collection_drop_index_with_write_concern and updated documentation for mongoc_collection_drop_index,wrote documentation for mongoc_collection_drop_index_with_write_concern and updated documentation for mongoc_collection_drop_index,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,376,2016-07-30T17:16:52Z,2016-08-08T22:36:34Z,2016-08-08T22:36:34Z,MERGED,True,62,0,9,https://github.com/fionaRowan,CDRIVER-1322: mongoc_collection_drop_index_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/376,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/376,implemented and tested mongoc_collection_drop_index_with_write_concern.,implemented and tested mongoc_collection_drop_index_with_write_concern.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,377,2016-08-01T18:15:25Z,2016-08-01T19:59:10Z,2016-08-01T20:11:08Z,MERGED,True,55,12,2,https://github.com/fionaRowan,CDRIVER-1322: doc for mongoc_collection_rename_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/377,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/377,"wrote documentation for mongoc_collection_rename_with_write_concern, updated documentation for mongoc_collection_rename.","wrote documentation for mongoc_collection_rename_with_write_concern, updated documentation for mongoc_collection_rename.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,378,2016-08-01T20:10:46Z,2016-08-01T20:38:45Z,2016-08-01T20:38:49Z,MERGED,True,2,0,1,https://github.com/fionaRowan,CDRIVER-1322: capture error logs in test_create_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/378,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/378,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,378,2016-08-01T20:10:46Z,2016-08-01T20:38:45Z,2016-08-01T20:38:49Z,MERGED,True,2,0,1,https://github.com/fionaRowan,CDRIVER-1322: capture error logs in test_create_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/378,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/378#issuecomment-236700335,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,379,2016-08-01T20:49:51Z,2016-08-01T21:06:35Z,2016-08-01T21:06:37Z,MERGED,True,62,12,10,https://github.com/puppyofkosh,CDRIVER-1419 metadata functions now log errors,1,[],https://github.com/mongodb/mongo-c-driver/pull/379,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/379,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,380,2016-08-02T13:40:43Z,2016-08-02T14:24:16Z,2016-08-02T14:24:16Z,MERGED,True,16,5,3,https://github.com/fionaRowan,CDRIVER-1414: parse writeConcernErrors in command helper,1,[],https://github.com/mongodb/mongo-c-driver/pull/380,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/380,add is_default in mongoc_write_concern_copy. if there is a writeConcernError parse it out and return false,add is_default in mongoc_write_concern_copy. if there is a writeConcernError parse it out and return false,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,381,2016-08-03T15:30:19Z,2016-08-03T19:04:07Z,2016-08-03T19:04:07Z,MERGED,True,19,24,2,https://github.com/fionaRowan,CDRIVER-1322: doc for mongoc_collection_create_index_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/381,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/381,"wrote documentation for new symbol, updated mongoc_collection_create_index doc.","wrote documentation for new symbol, updated mongoc_collection_create_index doc.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,382,2016-08-05T19:33:49Z,2016-08-05T19:34:52Z,2016-08-05T19:34:52Z,MERGED,True,174,1,3,https://github.com/fionaRowan,CDRIVER-1448: _mongoc_client_command_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/382,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/382,"implemented private client command function that takes writeConcern parameter. append valid writeConcern to command if writeConcern has been modified since creation, and server is the correct version.","implemented private client command function that takes writeConcern parameter. append valid writeConcern to command if writeConcern has been modified since creation, and server is the correct version.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,383,2016-08-08T17:19:06Z,2016-08-08T22:32:14Z,2016-08-08T22:32:14Z,MERGED,True,76,3,2,https://github.com/puppyofkosh,CDRIVER-1397 client metadata os architecture,1,[],https://github.com/mongodb/mongo-c-driver/pull/383,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/383,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,384,2016-08-08T18:10:23Z,2016-08-08T22:30:53Z,2016-08-08T22:30:53Z,MERGED,True,129,31,9,https://github.com/fionaRowan,CDRIVER-1322: mongoc_collection_create_index_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/384,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/384,implemented and tested mongoc_collection_create_index_with_write_concern,implemented and tested mongoc_collection_create_index_with_write_concern,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,385,2016-08-09T09:42:52Z,2016-08-09T21:19:56Z,2016-08-09T21:19:56Z,CLOSED,False,6,0,2,https://github.com/remicollet,CDRIVER-1457 add missing in public API,1,[],https://github.com/mongodb/mongo-c-driver/pull/385,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/385,"mongoc_write_concern_is_acknowledged;
mongoc_write_concern_is_valid;
mongoc_write_concern_journal_is_set;

Also related to https://jira.mongodb.org/browse/PHPC-762","mongoc_write_concern_is_acknowledged;
mongoc_write_concern_is_valid;
mongoc_write_concern_journal_is_set;

Also related to https://jira.mongodb.org/browse/PHPC-762",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,385,2016-08-09T09:42:52Z,2016-08-09T21:19:56Z,2016-08-09T21:19:56Z,CLOSED,False,6,0,2,https://github.com/remicollet,CDRIVER-1457 add missing in public API,1,[],https://github.com/mongodb/mongo-c-driver/pull/385,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/385#issuecomment-238616232,"mongoc_write_concern_is_acknowledged;
mongoc_write_concern_is_valid;
mongoc_write_concern_journal_is_set;

Also related to https://jira.mongodb.org/browse/PHPC-762",Thanks @remicollet !,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,385,2016-08-09T09:42:52Z,2016-08-09T21:19:56Z,2016-08-09T21:19:56Z,CLOSED,False,6,0,2,https://github.com/remicollet,CDRIVER-1457 add missing in public API,1,[],https://github.com/mongodb/mongo-c-driver/pull/385,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/385#issuecomment-238695222,"mongoc_write_concern_is_acknowledged;
mongoc_write_concern_is_valid;
mongoc_write_concern_journal_is_set;

Also related to https://jira.mongodb.org/browse/PHPC-762",Merged in 6a5b68a thanks.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,386,2016-08-09T15:50:37Z,2016-08-09T16:00:26Z,2016-08-09T16:00:26Z,MERGED,True,859,0,15,https://github.com/puppyofkosh,CDRIVER-1395 client metadata linux distro scanner,1,[],https://github.com/mongodb/mongo-c-driver/pull/386,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/386,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,387,2016-08-10T15:37:52Z,2016-08-10T16:08:39Z,2016-08-10T16:08:39Z,MERGED,True,68,26,3,https://github.com/fionaRowan,"CDRIVER-1460: collection_drop, parse wc err and return false",1,[],https://github.com/mongodb/mongo-c-driver/pull/387,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/387,"mongoc_collection_drop_with_write_concern: on writeConcernError, parse writeConcernError and return false.","mongoc_collection_drop_with_write_concern: on writeConcernError, parse writeConcernError and return false.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,388,2016-08-10T17:39:00Z,2016-08-10T19:13:23Z,2016-08-10T19:13:23Z,MERGED,True,54,14,2,https://github.com/fionaRowan,"CDRIVER-1460: database_create_collection, parse wc err and return false",1,[],https://github.com/mongodb/mongo-c-driver/pull/388,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/388,"mongoc_database_create_collection_with_write_concern: on writeConcernError, parse writeConcernError and return false.","mongoc_database_create_collection_with_write_concern: on writeConcernError, parse writeConcernError and return false.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,389,2016-08-10T19:49:04Z,2016-08-10T20:14:48Z,2016-08-10T20:14:48Z,MERGED,True,113,3,9,https://github.com/fionaRowan,CDRIVER-1322: mongoc_collection_rename_with_write_concern,1,[],https://github.com/mongodb/mongo-c-driver/pull/389,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/389,implemented and tested mongoc_collection_rename_with_write_concern,implemented and tested mongoc_collection_rename_with_write_concern,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,390,2016-08-10T20:02:06Z,2016-08-10T20:16:06Z,2016-08-10T20:16:06Z,MERGED,True,70,4,2,https://github.com/puppyofkosh,CDRIVER-1396 os version,1,[],https://github.com/mongodb/mongo-c-driver/pull/390,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/390,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,391,2016-08-11T15:36:03Z,2016-08-11T15:50:08Z,2016-08-11T15:50:09Z,MERGED,True,55,23,2,https://github.com/fionaRowan,"CDRIVER-1460: drop_index, parse wc err and return false",1,[],https://github.com/mongodb/mongo-c-driver/pull/391,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/391,"mongoc_collection_drop_index_on_write_concern: on writeConcernError, parse writeConcernError and return false.","mongoc_collection_drop_index_on_write_concern: on writeConcernError, parse writeConcernError and return false.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,392,2016-08-11T19:18:39Z,2016-08-11T20:43:51Z,2016-08-11T20:43:51Z,MERGED,True,30,29,2,https://github.com/puppyofkosh,CDRIVER-1464 use linux distro scanner in metadata,1,[],https://github.com/mongodb/mongo-c-driver/pull/392,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/392,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,393,2016-08-11T21:42:19Z,2016-08-11T22:29:29Z,2016-08-11T22:30:04Z,MERGED,True,257,1,8,https://github.com/puppyofkosh,CDRIVER-1398 metadata platform field,1,[],https://github.com/mongodb/mongo-c-driver/pull/393,https://github.com/puppyofkosh,1,https://github.com/mongodb/mongo-c-driver/pull/393,My last real pull request =(,My last real pull request =(,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,393,2016-08-11T21:42:19Z,2016-08-11T22:29:29Z,2016-08-11T22:30:04Z,MERGED,True,257,1,8,https://github.com/puppyofkosh,CDRIVER-1398 metadata platform field,1,[],https://github.com/mongodb/mongo-c-driver/pull/393,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/393#issuecomment-239313113,My last real pull request =(,\o/ thanks for all your work this summer !,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,394,2016-08-12T19:48:44Z,2016-08-13T21:39:39Z,2016-08-13T21:39:39Z,CLOSED,False,49,19,2,https://github.com/fionaRowan,"CDRIVER-1460: database_drop, parse wc err and return false",1,[],https://github.com/mongodb/mongo-c-driver/pull/394,https://github.com/fionaRowan,1,https://github.com/mongodb/mongo-c-driver/pull/394,changed behavior for mongoc_database_drop command function on writeConcernError: parse writeConcernError and return false.,changed behavior for mongoc_database_drop command function on writeConcernError: parse writeConcernError and return false.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,394,2016-08-12T19:48:44Z,2016-08-13T21:39:39Z,2016-08-13T21:39:39Z,CLOSED,False,49,19,2,https://github.com/fionaRowan,"CDRIVER-1460: database_drop, parse wc err and return false",1,[],https://github.com/mongodb/mongo-c-driver/pull/394,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/394#issuecomment-239642826,changed behavior for mongoc_database_drop command function on writeConcernError: parse writeConcernError and return false.,"Merged in dde593c, thanks for everything!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,395,2016-08-20T22:01:55Z,2016-08-22T17:07:06Z,2016-08-22T17:07:10Z,CLOSED,False,17,0,1,https://github.com/alexeyvo,Add declaration of secure_channel functions in .h file,1,[],https://github.com/mongodb/mongo-c-driver/pull/395,https://github.com/alexeyvo,1,https://github.com/mongodb/mongo-c-driver/pull/395,They are used in mongoc-stream-tls-secure-channel.c without declaration in header,They are used in mongoc-stream-tls-secure-channel.c without declaration in header,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,395,2016-08-20T22:01:55Z,2016-08-22T17:07:06Z,2016-08-22T17:07:10Z,CLOSED,False,17,0,1,https://github.com/alexeyvo,Add declaration of secure_channel functions in .h file,1,[],https://github.com/mongodb/mongo-c-driver/pull/395,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/395#issuecomment-241436620,They are used in mongoc-stream-tls-secure-channel.c without declaration in header,Whops. Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,395,2016-08-20T22:01:55Z,2016-08-22T17:07:06Z,2016-08-22T17:07:10Z,CLOSED,False,17,0,1,https://github.com/alexeyvo,Add declaration of secure_channel functions in .h file,1,[],https://github.com/mongodb/mongo-c-driver/pull/395,https://github.com/bjori,3,https://github.com/mongodb/mongo-c-driver/pull/395#issuecomment-241437823,They are used in mongoc-stream-tls-secure-channel.c without declaration in header,Merged as 71c9106 with improved whitespace ascii art.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,396,2016-09-07T17:52:53Z,2016-09-07T21:22:33Z,2016-09-07T21:24:53Z,CLOSED,False,4,1,1,https://github.com/jmikola,CDRIVER-1529: Do not free null wtag pointer,1,[],https://github.com/mongodb/mongo-c-driver/pull/396,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/396,https://jira.mongodb.org/browse/CDRIVER-1529,https://jira.mongodb.org/browse/CDRIVER-1529,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,397,2016-09-26T14:15:47Z,2016-09-26T14:40:35Z,2016-09-26T14:47:31Z,MERGED,True,2,2,2,https://github.com/jeroen,fix typo in mongoc_ssl_opt_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/397,https://github.com/jeroen,1,https://github.com/mongodb/mongo-c-driver/pull/397,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,397,2016-09-26T14:15:47Z,2016-09-26T14:40:35Z,2016-09-26T14:47:31Z,MERGED,True,2,2,2,https://github.com/jeroen,fix typo in mongoc_ssl_opt_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/397,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/397#issuecomment-249589581,,"oh wow. Thats a strange one :)
Thanks!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/tomnomnom,1,https://github.com/mongodb/mongo-c-driver/pull/398,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/tomnomnom,2,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-252221240,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","Disclaimer: I'm not a C programmer. There might be a better place to put the srand call, or a better thing to seed it with. From a layman's perspective the topology init seemed like a logical place to put it, and the seed value is just what the legacy PHP driver was using.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/acmorrow,3,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-252241070,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","I'm not 100% sure, and I'm not one of the C driver devs, but I think it might be ill advised for a library to invoke srand, as that call has global side effects. An application might want or need explicit seeding, and it is not the place of any library to undermine that request.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/stolenegg,4,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-252255094,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","Fair point @acmorrow. Although in the context given (Apache process / PHP request), it's tricky to know where the seeding should happen as the 'application' code is not C. @tomnomnom How about moving the srand call up a layer to the php driver module init function?
https://github.com/mongodb/mongo-php-driver/blob/1fd77a1367552dab4b8985602e78d39a9fa8ba03/php_phongo.c#L2023
Possibly behind a config option to disable it if other modules conflict with this behaviour.
This would leave libmongoc agnostic (i.e. it always assumes that the calling code is responsible for seeding )
Disclaimer: I'm also not a C programmer! :-)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/ajdavis,5,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-252293252,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","@derickr and I think the right thing is for the C Driver to switch from rand to using rand_r (or rand_s on Windows), with a seed that's initially the system time. Then we have a properly seed PRNG that doesn't interfere with the global ""rand"" state.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/tomnomnom,6,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-252338847,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","@ajdavis that sounds like a nicer solution, but almost certainly outside of my comfort zone to implement myself. Is that something that's already in progress?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/ajdavis,7,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-252344761,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic",Not yet in progress but we can complete it soon.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/tomnomnom,8,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-252345157,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","@ajdavis that's great to hear, thanks! I think I'll just build a patched version of the .so and use that until it's been fixed properly then.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/tomnomnom,9,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-253578187,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","This should no-longer be an issue as of 5f33f7d.
Massive thanks to @ajdavis et al for that :)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/ajdavis,10,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-253588892,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","You're welcome! The C Driver 1.5.0 release that includes this fix is a month or two away, however. Do you need it sooner, or can you either work around the bug in your code, or live with the bug for now?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/tomnomnom,11,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-253611575,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","We could certainly do with it sooner than that. Our traffic can be pretty spiky, which is when the problem is most noticeable.
I think we'll probably look at temporarily forking the php driver and pointing libmongoc at master (with much testing before it hits prod of course :)). We're rolling our own RPMs anyway, so it shouldn't be too much hassle.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,398,2016-10-07T11:02:56Z,2016-10-13T17:16:52Z,2016-10-13T21:24:25Z,CLOSED,False,2,0,1,https://github.com/tomnomnom,CDRIVER-1639 seeds rand for use in selecting servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/398,https://github.com/ajdavis,12,https://github.com/mongodb/mongo-c-driver/pull/398#issuecomment-253643263,"As per https://jira.mongodb.org/browse/CDRIVER-1639:
The call to rand() used when selecting a server is unseeded (
  
    
      mongo-c-driver/src/mongoc/mongoc-topology-description.c
    
    
         Line 693
      in
      a4bcfff
    
  
  
    

        
          
           rand() % suitable_servers.len); 
        
    
  

)
This tends to manifest itself as uneven balancing between nodes in a cluster.
As a specific example: when libmongoc is used as part of, say, the php-driver:

A sudden increase in traffic creates new children (e.g. Apache workers)
The new workers create new connections to mongo using the php-driver, and therefore libmongoc
All workers initially choose the same server from the cluster as the first value from rand() is always the same
One mongo node takes the vast majority of the queries - possibly causing it to become overloaded while other nodes in the cluster receive little traffic","Thanks, in that case we won't release this fix until 1.5.0, in order to minimize risk of changes for existing users of the driver.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,399,2016-10-08T15:52:22Z,2016-10-08T19:28:27Z,2016-10-08T19:28:27Z,MERGED,True,1,0,1,https://github.com/jrassi,CDRIVER-1347 Add missing BSON_API specifier to mongoc_log_set_handler,1,[],https://github.com/mongodb/mongo-c-driver/pull/399,https://github.com/jrassi,1,https://github.com/mongodb/mongo-c-driver/pull/399,Patch signed off by @bjori in Rietveld; merge at will.  Thanks!,Patch signed off by @bjori in Rietveld; merge at will.  Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,400,2016-10-12T16:19:39Z,2016-10-19T00:39:56Z,2016-10-19T00:39:56Z,MERGED,True,155,103,15,https://github.com/ajdavis,Upstream release 1.4.2 (upgrade from 1.4.1),8,[],https://github.com/mongodb/mongo-c-driver/pull/400,https://github.com/ajdavis,1,https://github.com/mongodb/mongo-c-driver/pull/400,"@rcsanchez97 and @bjori please review.
I'm hoping that Debian release 1.4.2-1 has all the headers it needs, unlike Debian release 1.4.1-1:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=840528
Look at the update-libmongoc-dev.install.sh script I wrote and the changes the script made to debian/libmongoc-dev.install. I think that, since this is version 1.4.2 and it doesn't include Hannes's changes for CDRIVER-989, it's correct for now to install all the private headers.
OR, perhaps this is dumb? Should I delete update-libmongoc-dev.install.sh and just use a file pattern in libmongoc-dev.install like this?:
usr/include/libmongoc-1.0/*.{h,def,defs}

Once we package 1.5.0 for Debian, we can make new decisions about which header files to include.","@rcsanchez97 and @bjori please review.
I'm hoping that Debian release 1.4.2-1 has all the headers it needs, unlike Debian release 1.4.1-1:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=840528
Look at the update-libmongoc-dev.install.sh script I wrote and the changes the script made to debian/libmongoc-dev.install. I think that, since this is version 1.4.2 and it doesn't include Hannes's changes for CDRIVER-989, it's correct for now to install all the private headers.
OR, perhaps this is dumb? Should I delete update-libmongoc-dev.install.sh and just use a file pattern in libmongoc-dev.install like this?:
usr/include/libmongoc-1.0/*.{h,def,defs}

Once we package 1.5.0 for Debian, we can make new decisions about which header files to include.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,400,2016-10-12T16:19:39Z,2016-10-19T00:39:56Z,2016-10-19T00:39:56Z,MERGED,True,155,103,15,https://github.com/ajdavis,Upstream release 1.4.2 (upgrade from 1.4.1),8,[],https://github.com/mongodb/mongo-c-driver/pull/400,https://github.com/i-rinat,2,https://github.com/mongodb/mongo-c-driver/pull/400#issuecomment-253510034,"@rcsanchez97 and @bjori please review.
I'm hoping that Debian release 1.4.2-1 has all the headers it needs, unlike Debian release 1.4.1-1:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=840528
Look at the update-libmongoc-dev.install.sh script I wrote and the changes the script made to debian/libmongoc-dev.install. I think that, since this is version 1.4.2 and it doesn't include Hannes's changes for CDRIVER-989, it's correct for now to install all the private headers.
OR, perhaps this is dumb? Should I delete update-libmongoc-dev.install.sh and just use a file pattern in libmongoc-dev.install like this?:
usr/include/libmongoc-1.0/*.{h,def,defs}

Once we package 1.5.0 for Debian, we can make new decisions about which header files to include.","There is a file exclusion (-X-private.h) in https://github.com/mongodb/mongo-c-driver/blob/debian/debian/rules#L42, so even if *-private.h files are mentioned in libmongoc-dev.install files, they won't make it to the libmongoc-dev package.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,400,2016-10-12T16:19:39Z,2016-10-19T00:39:56Z,2016-10-19T00:39:56Z,MERGED,True,155,103,15,https://github.com/ajdavis,Upstream release 1.4.2 (upgrade from 1.4.1),8,[],https://github.com/mongodb/mongo-c-driver/pull/400,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/400#issuecomment-253518437,"@rcsanchez97 and @bjori please review.
I'm hoping that Debian release 1.4.2-1 has all the headers it needs, unlike Debian release 1.4.1-1:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=840528
Look at the update-libmongoc-dev.install.sh script I wrote and the changes the script made to debian/libmongoc-dev.install. I think that, since this is version 1.4.2 and it doesn't include Hannes's changes for CDRIVER-989, it's correct for now to install all the private headers.
OR, perhaps this is dumb? Should I delete update-libmongoc-dev.install.sh and just use a file pattern in libmongoc-dev.install like this?:
usr/include/libmongoc-1.0/*.{h,def,defs}

Once we package 1.5.0 for Debian, we can make new decisions about which header files to include.","Good point @i-rinat, thanks very much. I think the right thing to do here is update libmongoc-dev.install.sh to include all files with this pattern:
usr/include/libmongoc-1.0/*.{h,def,defs}

... and delete the -X-private.h exclusion rule from rules.
Beginning with 1.5.0 and CDRIVER-989, we can remove the private headers again by deleting the pattern from libmongoc-dev.install.sh and restoring the exclusion rule in rules.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,400,2016-10-12T16:19:39Z,2016-10-19T00:39:56Z,2016-10-19T00:39:56Z,MERGED,True,155,103,15,https://github.com/ajdavis,Upstream release 1.4.2 (upgrade from 1.4.1),8,[],https://github.com/mongodb/mongo-c-driver/pull/400,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/400#issuecomment-253591493,"@rcsanchez97 and @bjori please review.
I'm hoping that Debian release 1.4.2-1 has all the headers it needs, unlike Debian release 1.4.1-1:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=840528
Look at the update-libmongoc-dev.install.sh script I wrote and the changes the script made to debian/libmongoc-dev.install. I think that, since this is version 1.4.2 and it doesn't include Hannes's changes for CDRIVER-989, it's correct for now to install all the private headers.
OR, perhaps this is dumb? Should I delete update-libmongoc-dev.install.sh and just use a file pattern in libmongoc-dev.install like this?:
usr/include/libmongoc-1.0/*.{h,def,defs}

Once we package 1.5.0 for Debian, we can make new decisions about which header files to include.","I've updated the Debian config now to simply include all headers by glob pattern. This builds correctly and the contents of libmongoc-dev built with this config are shown here:
https://gist.github.com/ajdavis/858f6b4f1789e226319bbda962c7c652",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,400,2016-10-12T16:19:39Z,2016-10-19T00:39:56Z,2016-10-19T00:39:56Z,MERGED,True,155,103,15,https://github.com/ajdavis,Upstream release 1.4.2 (upgrade from 1.4.1),8,[],https://github.com/mongodb/mongo-c-driver/pull/400,https://github.com/i-rinat,5,https://github.com/mongodb/mongo-c-driver/pull/400#issuecomment-253636212,"@rcsanchez97 and @bjori please review.
I'm hoping that Debian release 1.4.2-1 has all the headers it needs, unlike Debian release 1.4.1-1:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=840528
Look at the update-libmongoc-dev.install.sh script I wrote and the changes the script made to debian/libmongoc-dev.install. I think that, since this is version 1.4.2 and it doesn't include Hannes's changes for CDRIVER-989, it's correct for now to install all the private headers.
OR, perhaps this is dumb? Should I delete update-libmongoc-dev.install.sh and just use a file pattern in libmongoc-dev.install like this?:
usr/include/libmongoc-1.0/*.{h,def,defs}

Once we package 1.5.0 for Debian, we can make new decisions about which header files to include.","I can't say anything about code changes, but changes to files in debian/* look great, thanks.
By the way, was exposing of *-private.h a right thing to do? From their name I can guess they are somehow private to the library itself. And the only public header including a private one was mongoc-stream-tls.h. The only thing that private header defines is struct _mongoc_stream_tls_t, which is then used to define type mongoc_stream_tls_t. But typedef from a struct is fine even without definition of structure itself. Moreover, mongoc_stream_tls_t is not used anywhere in public headers at all.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,400,2016-10-12T16:19:39Z,2016-10-19T00:39:56Z,2016-10-19T00:39:56Z,MERGED,True,155,103,15,https://github.com/ajdavis,Upstream release 1.4.2 (upgrade from 1.4.1),8,[],https://github.com/mongodb/mongo-c-driver/pull/400,https://github.com/ajdavis,6,https://github.com/mongodb/mongo-c-driver/pull/400#issuecomment-253636936,"@rcsanchez97 and @bjori please review.
I'm hoping that Debian release 1.4.2-1 has all the headers it needs, unlike Debian release 1.4.1-1:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=840528
Look at the update-libmongoc-dev.install.sh script I wrote and the changes the script made to debian/libmongoc-dev.install. I think that, since this is version 1.4.2 and it doesn't include Hannes's changes for CDRIVER-989, it's correct for now to install all the private headers.
OR, perhaps this is dumb? Should I delete update-libmongoc-dev.install.sh and just use a file pattern in libmongoc-dev.install like this?:
usr/include/libmongoc-1.0/*.{h,def,defs}

Once we package 1.5.0 for Debian, we can make new decisions about which header files to include.","We fixed the private headers issue, but not in 1.4.2:
https://jira.mongodb.org/browse/CDRIVER-989",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,400,2016-10-12T16:19:39Z,2016-10-19T00:39:56Z,2016-10-19T00:39:56Z,MERGED,True,155,103,15,https://github.com/ajdavis,Upstream release 1.4.2 (upgrade from 1.4.1),8,[],https://github.com/mongodb/mongo-c-driver/pull/400,https://github.com/i-rinat,7,https://github.com/mongodb/mongo-c-driver/pull/400#issuecomment-253645291,"@rcsanchez97 and @bjori please review.
I'm hoping that Debian release 1.4.2-1 has all the headers it needs, unlike Debian release 1.4.1-1:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=840528
Look at the update-libmongoc-dev.install.sh script I wrote and the changes the script made to debian/libmongoc-dev.install. I think that, since this is version 1.4.2 and it doesn't include Hannes's changes for CDRIVER-989, it's correct for now to install all the private headers.
OR, perhaps this is dumb? Should I delete update-libmongoc-dev.install.sh and just use a file pattern in libmongoc-dev.install like this?:
usr/include/libmongoc-1.0/*.{h,def,defs}

Once we package 1.5.0 for Debian, we can make new decisions about which header files to include.","https://jira.mongodb.org/browse/CDRIVER-989

Have had a look more carefully this time, and have found a patch with a change I was (kind of) talking about: 1e60b28. That's great. Thank you for explaining!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,401,2016-10-14T07:43:45Z,2016-10-14T13:29:46Z,2016-10-14T13:36:24Z,MERGED,True,3,1,1,https://github.com/remicollet,CDRIVER-1702 don't fail when returned platform is truncated,1,[],https://github.com/mongodb/mongo-c-driver/pull/401,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/401,"platform can be truncated in _append_platform_field (according to doc length, HANDSHAKE_MAX_SIZE...)","platform can be truncated in _append_platform_field (according to doc length, HANDSHAKE_MAX_SIZE...)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,401,2016-10-14T07:43:45Z,2016-10-14T13:29:46Z,2016-10-14T13:36:24Z,MERGED,True,3,1,1,https://github.com/remicollet,CDRIVER-1702 don't fail when returned platform is truncated,1,[],https://github.com/mongodb/mongo-c-driver/pull/401,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/401#issuecomment-253799118,"platform can be truncated in _append_platform_field (according to doc length, HANDSHAKE_MAX_SIZE...)",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,402,2016-10-14T08:32:08Z,2016-10-14T13:31:15Z,2016-10-14T13:36:21Z,MERGED,True,1,0,1,https://github.com/remicollet,CDRIVER-1703 missing files in archive,1,[],https://github.com/mongodb/mongo-c-driver/pull/402,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/402,"Minimal fix.
Probably more needed (for installation)","Minimal fix.
Probably more needed (for installation)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,402,2016-10-14T08:32:08Z,2016-10-14T13:31:15Z,2016-10-14T13:36:21Z,MERGED,True,1,0,1,https://github.com/remicollet,CDRIVER-1703 missing files in archive,1,[],https://github.com/mongodb/mongo-c-driver/pull/402,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/402#issuecomment-253799411,"Minimal fix.
Probably more needed (for installation)",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,403,2016-11-04T15:49:43Z,2016-11-05T01:44:10Z,2016-11-05T01:44:12Z,MERGED,True,3,1,1,https://github.com/ajdavis,no braces in debian install script,1,[],https://github.com/mongodb/mongo-c-driver/pull/403,https://github.com/ajdavis,1,https://github.com/mongodb/mongo-c-driver/pull/403,"Resolves lintian warning brace-expansion-in-debhelper-config-file, ""This
debhelper config file appears to use shell brace expansion. This happens
to work due to an accident of implementation but is not a supported
feature.""","Resolves lintian warning brace-expansion-in-debhelper-config-file, ""This
debhelper config file appears to use shell brace expansion. This happens
to work due to an accident of implementation but is not a supported
feature.""",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,403,2016-11-04T15:49:43Z,2016-11-05T01:44:10Z,2016-11-05T01:44:12Z,MERGED,True,3,1,1,https://github.com/ajdavis,no braces in debian install script,1,[],https://github.com/mongodb/mongo-c-driver/pull/403,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/403#issuecomment-258469195,"Resolves lintian warning brace-expansion-in-debhelper-config-file, ""This
debhelper config file appears to use shell brace expansion. This happens
to work due to an accident of implementation but is not a supported
feature.""",@rcsanchez97 could you take a look?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,403,2016-11-04T15:49:43Z,2016-11-05T01:44:10Z,2016-11-05T01:44:12Z,MERGED,True,3,1,1,https://github.com/ajdavis,no braces in debian install script,1,[],https://github.com/mongodb/mongo-c-driver/pull/403,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/403#issuecomment-258581165,"Resolves lintian warning brace-expansion-in-debhelper-config-file, ""This
debhelper config file appears to use shell brace expansion. This happens
to work due to an accident of implementation but is not a supported
feature.""",@ajdavis That fix looks exactly right.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,403,2016-11-04T15:49:43Z,2016-11-05T01:44:10Z,2016-11-05T01:44:12Z,MERGED,True,3,1,1,https://github.com/ajdavis,no braces in debian install script,1,[],https://github.com/mongodb/mongo-c-driver/pull/403,https://github.com/rcsanchez97,4,https://github.com/mongodb/mongo-c-driver/pull/403#issuecomment-258581221,"Resolves lintian warning brace-expansion-in-debhelper-config-file, ""This
debhelper config file appears to use shell brace expansion. This happens
to work due to an accident of implementation but is not a supported
feature.""",@ajdavis That fix looks exactly right.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,404,2016-11-07T21:16:29Z,2016-12-05T22:03:35Z,2016-12-05T22:03:40Z,CLOSED,False,2,0,1,https://github.com/ajdavis,CDRIVER-1907 update libmongoc-dev dependencies,1,[],https://github.com/mongodb/mongo-c-driver/pull/404,https://github.com/ajdavis,1,https://github.com/mongodb/mongo-c-driver/pull/404,@rcsanchez97 could you take a look? This is a proposed fix for https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=843495,@rcsanchez97 could you take a look? This is a proposed fix for https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=843495,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,404,2016-11-07T21:16:29Z,2016-12-05T22:03:35Z,2016-12-05T22:03:40Z,CLOSED,False,2,0,1,https://github.com/ajdavis,CDRIVER-1907 update libmongoc-dev dependencies,1,[],https://github.com/mongodb/mongo-c-driver/pull/404,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/404#issuecomment-261523589,@rcsanchez97 could you take a look? This is a proposed fix for https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=843495,"@ajdavis sorry I lost track of this.  It looks good, but you will need
to add a comma after libssl-dev or the package build will fail because
of the control file not being properly formatted. Also, the associated
debian/changelog message should include ""(Closes: #843495)"" after the
text of the entry so that the bug is closed automatically upon upload.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,404,2016-11-07T21:16:29Z,2016-12-05T22:03:35Z,2016-12-05T22:03:40Z,CLOSED,False,2,0,1,https://github.com/ajdavis,CDRIVER-1907 update libmongoc-dev dependencies,1,[],https://github.com/mongodb/mongo-c-driver/pull/404,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/404#issuecomment-264992339,@rcsanchez97 could you take a look? This is a proposed fix for https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=843495,Merged in 8cbd100,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,405,2016-11-17T16:44:27Z,2016-11-21T19:05:18Z,2016-11-21T19:05:18Z,CLOSED,False,32,1,2,https://github.com/xdg,CDRIVER-1921 cursor from static reply,1,[],https://github.com/mongodb/mongo-c-driver/pull/405,https://github.com/xdg,1,https://github.com/mongodb/mongo-c-driver/pull/405,"Prior to this commit, mongoc_cursor_new_from_command_reply fails if the
reply is read-only.  This commit makes a copy of static bson_t instead of
failing.","Prior to this commit, mongoc_cursor_new_from_command_reply fails if the
reply is read-only.  This commit makes a copy of static bson_t instead of
failing.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,405,2016-11-17T16:44:27Z,2016-11-21T19:05:18Z,2016-11-21T19:05:18Z,CLOSED,False,32,1,2,https://github.com/xdg,CDRIVER-1921 cursor from static reply,1,[],https://github.com/mongodb/mongo-c-driver/pull/405,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/405#issuecomment-262034675,"Prior to this commit, mongoc_cursor_new_from_command_reply fails if the
reply is read-only.  This commit makes a copy of static bson_t instead of
failing.",Merged as 111ad1a,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,406,2016-11-30T06:40:31Z,2016-11-30T13:59:19Z,2016-11-30T13:59:24Z,MERGED,True,2,2,1,https://github.com/christopherjwang,Update README links to mongoc host,1,[],https://github.com/mongodb/mongo-c-driver/pull/406,https://github.com/christopherjwang,1,https://github.com/mongodb/mongo-c-driver/pull/406,"I should probably bookmark the c docs, but I always come to the README to get to them.
http://api.mongodb.org/c/current/ redirects to http://mongoc.org/ so I updated that as well.","I should probably bookmark the c docs, but I always come to the README to get to them.
http://api.mongodb.org/c/current/ redirects to http://mongoc.org/ so I updated that as well.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,406,2016-11-30T06:40:31Z,2016-11-30T13:59:19Z,2016-11-30T13:59:24Z,MERGED,True,2,2,1,https://github.com/christopherjwang,Update README links to mongoc host,1,[],https://github.com/mongodb/mongo-c-driver/pull/406,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/406#issuecomment-263879741,"I should probably bookmark the c docs, but I always come to the README to get to them.
http://api.mongodb.org/c/current/ redirects to http://mongoc.org/ so I updated that as well.",Thanks Christopher!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,407,2016-11-30T14:03:06Z,2016-11-30T16:00:34Z,2016-11-30T16:00:43Z,MERGED,True,2,2,1,https://github.com/jeroen,"DWORD is unsigned long, fixes CDRIVER-1935",1,[],https://github.com/mongodb/mongo-c-driver/pull/407,https://github.com/jeroen,1,https://github.com/mongodb/mongo-c-driver/pull/407,See https://jira.mongodb.org/browse/CDRIVER-1935,See https://jira.mongodb.org/browse/CDRIVER-1935,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,407,2016-11-30T14:03:06Z,2016-11-30T16:00:34Z,2016-11-30T16:00:43Z,MERGED,True,2,2,1,https://github.com/jeroen,"DWORD is unsigned long, fixes CDRIVER-1935",1,[],https://github.com/mongodb/mongo-c-driver/pull/407,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/407#issuecomment-263912042,See https://jira.mongodb.org/browse/CDRIVER-1935,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,408,2016-11-30T16:20:14Z,2016-12-08T21:13:52Z,2016-12-08T21:13:52Z,MERGED,True,4,0,1,https://github.com/jeroen,fix UBSAN problem,1,[],https://github.com/mongodb/mongo-c-driver/pull/408,https://github.com/jeroen,1,https://github.com/mongodb/mongo-c-driver/pull/408,"If items_len == 0 then malloc(items_len) == NULL which results in memcpy(NULL, ...) which is undefined behaviour.","If items_len == 0 then malloc(items_len) == NULL which results in memcpy(NULL, ...) which is undefined behaviour.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,408,2016-11-30T16:20:14Z,2016-12-08T21:13:52Z,2016-12-08T21:13:52Z,MERGED,True,4,0,1,https://github.com/jeroen,fix UBSAN problem,1,[],https://github.com/mongodb/mongo-c-driver/pull/408,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/408#issuecomment-264478651,"If items_len == 0 then malloc(items_len) == NULL which results in memcpy(NULL, ...) which is undefined behaviour.","I think I've seen this before, and thought we fixed it.. need to give it a further look",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/malexzx,1,https://github.com/mongodb/mongo-c-driver/pull/409,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/malexzx,2,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-264086590,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","now amend this commit with update allignment of variables and add braces to conform coding standart.
if I have missed something, please tell me about that.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/malexzx,3,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-264086882,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","note, this PR requires libbson PR",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/bjori,4,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-266130137,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","Sorry to leave you in the dark on this.
We are working on getting consistent access to HPUX so we can ensure it will continue to be supported platform.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/malexzx,5,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-266171744,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","HPUX 11.31 (11i v3)
Integrity (aka ia64) is the latest hw platform supported by HPUX.
Sure, it supported https://h20392.www2.hpe.com/portal/swdepot/displayProductsList.do?category=OE
to bootstrap gcc-4.8.5 on HPUX use this link https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64919",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/bjori,6,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-269676134,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","I've created https://jira.mongodb.org/browse/CDRIVER-1973 so we can keep track of this patch when we prepare for our next release.
I find it unlikely we would include this in 1.5.2, but we plan on shipping 1.6.0 fairly soon",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/malexzx,7,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-269732298,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","cool news! I see some conflicts in this branch. But now I'm at vacation now (to 12 January) , so not possible to help to resolve it. But as most of it - is a indentation and type replacement. That is not hard to change.
Anyway, very glad to that fact, so this patch is ready for including in release!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/bjori,8,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-269801526,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","Don't worry about the conflict, they are caused by our coding standard consistency commit in master. I'll fix it up when I merge this",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/bjori,9,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-274909639,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","Merged as

9834505
4ec9a15
fb80a49

Thanks for the patch!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/malexzx,10,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-276859921,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","Hello @bjori !
Thank you for support!
Everithing works, tests pass, but small fixes need:

The method for determine of using socklen_t does not work. socklen_t present on HPUX. It needs different socket implementation. I suggest to check use int by test macro _XOPEN_SOURCE_EXTENDED not set. For example, the ACE library check it with this code:

#    if defined (_XOPEN_SOURCE_EXTENDED)
typedef socklen_t ACE_SOCKET_LEN;
#    else
typedef int ACE_SOCKET_LEN;
#    endif /* _XOPEN_SOURCE_EXTENDED */
#  else
typedef socklen_t ACE_SOCKET_LEN;
#  endif /* __hpux */
#elif defined (ACE_HAS_SIZET_SOCKET_LEN)
typedef size_t ACE_SOCKET_LEN;
#else
typedef int ACE_SOCKET_LEN;
#endif /* ACE_HAS_SIZET_SOCKET_LEN */


(see http://nixdoc.net/man-pages/HP-UX/man2/connect.2.html for more information)
Lack of this macro will select native BSD socket implementation (instead of emulating GNU style sockets, which has a bugs). I always use BSD variant.
2) getting versions from VERSION_* files with HPUX utils fails, if those files not contain \n at end (I will investigate to avoid this).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/bjori,11,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-276873933,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","The above code will blindly ignore socklen_t and always pass int as the 3rd argument to connect, rather then size_t in the weird case where HPUX actually expects size_t.
If the type is however available, we use the native type, which will match the type expected by connect. I don't understand what you mean that how we typedef mongoc_socklen_t will affect which socket implementation will be used by HPUX?
I don't really think this matters much as the value of addrlen is never going to be so large for this to matter. Matching the strict prototype though would avoid a possible compiler warning.
As for the VERSION files -- I'm very curious, I couldn't see any such issues when I was building on HPUX the other day. Could you file a ticket for the issue at https://jira.mongodb.org/browse/CDRIVER ?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,409,2016-12-01T03:38:47Z,2017-01-24T19:25:53Z,2017-02-02T06:15:57Z,CLOSED,False,86,66,20,https://github.com/malexzx,hp-ux port,2,[],https://github.com/mongodb/mongo-c-driver/pull/409,https://github.com/malexzx,12,https://github.com/mongodb/mongo-c-driver/pull/409#issuecomment-276877462,"Hello!
Following patch allows  the mongo-c driver to work on HP-UX 11.31 ia64 platform.
Note: to work, with this patch, we need a patch to libbson, that PR-ed just now (mongodb/libbson#179).
To compile on HPUX we need:

gcc-4.8.5
pass -D_REENTRANT -D_INCLUDE_HPUX_SOURCE to CFLAGS
pass -mlp64 to CFLAGS and LDFLAGS for 64bit version

configure opts: --enable-shm-counters=no -sinse it not ported yet","HPUX have several implementation of sockets. With case of connect() call - conversion things happens
, but passing pointers to receive (like in getsockname(... , int *)) will produce issue (on big endian platform). (I file the bug https://jira.mongodb.org/browse/CDRIVER-2015)
You can try simple test to view issue:
test.c
#include <stdio.h>
#include <sys/socket.h>

void test(int *i, socklen_t *s){
  printf(""i=%d s=%d\n"", *i, *s);
}

int main(int ac, char *av[]){
 socklen_t a = 1;
 unsigned int i = 10;


 test((int *)&i, (socklen_t*)&i);
 test((int *)&a, (socklen_t*)&a);

 return 0;
}


Output:
BIG_ENDIAN: only two combinations work
i=10 s=314336
i=0 s=1

LITTLE_ENDIAN: portable in any direction
i=10 s=10
i=1 s=1


More detail in https://curl.haxx.se/mail/lib-2009-04/0287.html",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,410,2016-12-02T13:55:42Z,2016-12-05T23:09:00Z,2016-12-05T23:09:00Z,CLOSED,False,29965,9589,516,https://github.com/oerdnj,Updated Debian packaging for 1.5.0 (without actual 1.5.0 upstream merge),7,[],https://github.com/mongodb/mongo-c-driver/pull/410,https://github.com/oerdnj,1,https://github.com/mongodb/mongo-c-driver/pull/410,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,410,2016-12-02T13:55:42Z,2016-12-05T23:09:00Z,2016-12-05T23:09:00Z,CLOSED,False,29965,9589,516,https://github.com/oerdnj,Updated Debian packaging for 1.5.0 (without actual 1.5.0 upstream merge),7,[],https://github.com/mongodb/mongo-c-driver/pull/410,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/410#issuecomment-265008137,,"Thanks, I've merged most of your changes!
We're not going to build with --disable-automatic-init-and-cleanup, that's a breaking change for users who don't call mongoc_init in their code but expect it to be called automatically. We'll make that change in libmongoc 2.0.
I also left the symbols-file out. We already have good tools that are independent of Debian and that ensure we maintain ABI stability, so we're discussing whether to maintain a symbols file for Debian or not.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,411,2016-12-09T20:59:04Z,2016-12-12T14:29:52Z,2016-12-12T14:29:52Z,MERGED,True,6,3,1,https://github.com/jwangdy,CDRIVER-1946 SEGFAULT with fast performance counters on NUMA,1,[],https://github.com/mongodb/mongo-c-driver/pull/411,https://github.com/jwangdy,1,https://github.com/mongodb/mongo-c-driver/pull/411,"When using the RDTSCP instruction, the register rcx contains the value of the low-order 32-bits of IA32_TSC_AUX MSR, which is loaded for each processor by the Linux kernel to contain the processor number in the 11:0 bits and the node number in the 31:12 bits. So for machines with only one node, or when the process is running on the 0th node, the previous implementation of the code worked. However, when the node ID is not 0, the code would return the entire result of register rcx, which could be an invalid number because it would be a combination of the core number plus and number. E.g., on a machine with 2 nodes, if the thread is running on CPU core 61 located on node 1, the previous implementation would return a value of 4157 (61 + 4096), where 4096 comes from the 12th bit of rcx. In this case, SEGFAULT occurs due to using the result of _mongoc_sched_getcpu() as an index into __mongoc_counter_##ident.cpus[_mongoc_sched_getcpu()].","When using the RDTSCP instruction, the register rcx contains the value of the low-order 32-bits of IA32_TSC_AUX MSR, which is loaded for each processor by the Linux kernel to contain the processor number in the 11:0 bits and the node number in the 31:12 bits. So for machines with only one node, or when the process is running on the 0th node, the previous implementation of the code worked. However, when the node ID is not 0, the code would return the entire result of register rcx, which could be an invalid number because it would be a combination of the core number plus and number. E.g., on a machine with 2 nodes, if the thread is running on CPU core 61 located on node 1, the previous implementation would return a value of 4157 (61 + 4096), where 4096 comes from the 12th bit of rcx. In this case, SEGFAULT occurs due to using the result of _mongoc_sched_getcpu() as an index into __mongoc_counter_##ident.cpus[_mongoc_sched_getcpu()].",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,411,2016-12-09T20:59:04Z,2016-12-12T14:29:52Z,2016-12-12T14:29:52Z,MERGED,True,6,3,1,https://github.com/jwangdy,CDRIVER-1946 SEGFAULT with fast performance counters on NUMA,1,[],https://github.com/mongodb/mongo-c-driver/pull/411,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/411#issuecomment-266129378,"When using the RDTSCP instruction, the register rcx contains the value of the low-order 32-bits of IA32_TSC_AUX MSR, which is loaded for each processor by the Linux kernel to contain the processor number in the 11:0 bits and the node number in the 31:12 bits. So for machines with only one node, or when the process is running on the 0th node, the previous implementation of the code worked. However, when the node ID is not 0, the code would return the entire result of register rcx, which could be an invalid number because it would be a combination of the core number plus and number. E.g., on a machine with 2 nodes, if the thread is running on CPU core 61 located on node 1, the previous implementation would return a value of 4157 (61 + 4096), where 4096 comes from the 12th bit of rcx. In this case, SEGFAULT occurs due to using the result of _mongoc_sched_getcpu() as an index into __mongoc_counter_##ident.cpus[_mongoc_sched_getcpu()].","Thank you for debugging this, and not to mention the patch! :D",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,411,2016-12-09T20:59:04Z,2016-12-12T14:29:52Z,2016-12-12T14:29:52Z,MERGED,True,6,3,1,https://github.com/jwangdy,CDRIVER-1946 SEGFAULT with fast performance counters on NUMA,1,[],https://github.com/mongodb/mongo-c-driver/pull/411,https://github.com/jwangdy,3,https://github.com/mongodb/mongo-c-driver/pull/411#issuecomment-266129980,"When using the RDTSCP instruction, the register rcx contains the value of the low-order 32-bits of IA32_TSC_AUX MSR, which is loaded for each processor by the Linux kernel to contain the processor number in the 11:0 bits and the node number in the 31:12 bits. So for machines with only one node, or when the process is running on the 0th node, the previous implementation of the code worked. However, when the node ID is not 0, the code would return the entire result of register rcx, which could be an invalid number because it would be a combination of the core number plus and number. E.g., on a machine with 2 nodes, if the thread is running on CPU core 61 located on node 1, the previous implementation would return a value of 4157 (61 + 4096), where 4096 comes from the 12th bit of rcx. In this case, SEGFAULT occurs due to using the result of _mongoc_sched_getcpu() as an index into __mongoc_counter_##ident.cpus[_mongoc_sched_getcpu()].",You're welcome!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,412,2016-12-16T04:22:57Z,2016-12-16T13:15:20Z,2016-12-16T13:15:20Z,CLOSED,False,1370,516,78,https://github.com/01wa,R1.5,29,[],https://github.com/mongodb/mongo-c-driver/pull/412,https://github.com/01wa,1,https://github.com/mongodb/mongo-c-driver/pull/412,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,413,2016-12-16T04:26:13Z,2016-12-16T13:15:41Z,2016-12-16T13:15:56Z,CLOSED,False,23743,20694,372,https://github.com/01wa,r1.5,56,[],https://github.com/mongodb/mongo-c-driver/pull/413,https://github.com/01wa,1,https://github.com/mongodb/mongo-c-driver/pull/413,r1.5,r1.5,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,413,2016-12-16T04:26:13Z,2016-12-16T13:15:41Z,2016-12-16T13:15:56Z,CLOSED,False,23743,20694,372,https://github.com/01wa,r1.5,56,[],https://github.com/mongodb/mongo-c-driver/pull/413,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/413#issuecomment-267591793,r1.5,"Hi, what are you trying to achieve here?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,414,2016-12-21T19:36:57Z,2016-12-21T19:37:13Z,2016-12-21T19:37:13Z,CLOSED,False,0,0,0,https://github.com/RockfordWei,Fixing gridfs_file_set_XXX functions wouldn't export to module map.,2,[],https://github.com/mongodb/mongo-c-driver/pull/414,https://github.com/RockfordWei,1,https://github.com/mongodb/mongo-c-driver/pull/414,"When using clang to export modules, functions set of
mongo_gridfs_file_set_xxx couldn’t export to destination simply because
only the getting methods were marked with BSON_API without the setting
ones. Typical scenario is
a third party exporting, such as c library exporting for Swift
language. This issue was found by Kyle Jessup and Rockford Wei,
perfect.org. All gridfs related tests were passed after this patch.","When using clang to export modules, functions set of
mongo_gridfs_file_set_xxx couldn’t export to destination simply because
only the getting methods were marked with BSON_API without the setting
ones. Typical scenario is
a third party exporting, such as c library exporting for Swift
language. This issue was found by Kyle Jessup and Rockford Wei,
perfect.org. All gridfs related tests were passed after this patch.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,415,2016-12-21T19:53:59Z,2017-01-05T23:00:21Z,2017-01-05T23:02:26Z,MERGED,True,2,0,1,https://github.com/RockfordWei,Fixing gridfs_file_set_xxx wouldn’t export to module map.,1,[],https://github.com/mongodb/mongo-c-driver/pull/415,https://github.com/RockfordWei,1,https://github.com/mongodb/mongo-c-driver/pull/415,"When using clang to export modules, functions set of
mongo_gridfs_file_set_xxx couldn’t export to destination simply because
only the getting methods were marked with BSON_API. Typical scenario is
a third party exporting, such as c library exporting for Swift
language.
Script test-libmongoc, which includes GridFS, passed.
This issue was found by Kyle Jessup and Rockford Wei,
perfect.org","When using clang to export modules, functions set of
mongo_gridfs_file_set_xxx couldn’t export to destination simply because
only the getting methods were marked with BSON_API. Typical scenario is
a third party exporting, such as c library exporting for Swift
language.
Script test-libmongoc, which includes GridFS, passed.
This issue was found by Kyle Jessup and Rockford Wei,
perfect.org",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,415,2016-12-21T19:53:59Z,2017-01-05T23:00:21Z,2017-01-05T23:02:26Z,MERGED,True,2,0,1,https://github.com/RockfordWei,Fixing gridfs_file_set_xxx wouldn’t export to module map.,1,[],https://github.com/mongodb/mongo-c-driver/pull/415,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/415#issuecomment-268692370,"When using clang to export modules, functions set of
mongo_gridfs_file_set_xxx couldn’t export to destination simply because
only the getting methods were marked with BSON_API. Typical scenario is
a third party exporting, such as c library exporting for Swift
language.
Script test-libmongoc, which includes GridFS, passed.
This issue was found by Kyle Jessup and Rockford Wei,
perfect.org","Awwman. Excellent catch, thank you",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,415,2016-12-21T19:53:59Z,2017-01-05T23:00:21Z,2017-01-05T23:02:26Z,MERGED,True,2,0,1,https://github.com/RockfordWei,Fixing gridfs_file_set_xxx wouldn’t export to module map.,1,[],https://github.com/mongodb/mongo-c-driver/pull/415,https://github.com/RockfordWei,3,https://github.com/mongodb/mongo-c-driver/pull/415#issuecomment-268709493,"When using clang to export modules, functions set of
mongo_gridfs_file_set_xxx couldn’t export to destination simply because
only the getting methods were marked with BSON_API. Typical scenario is
a third party exporting, such as c library exporting for Swift
language.
Script test-libmongoc, which includes GridFS, passed.
This issue was found by Kyle Jessup and Rockford Wei,
perfect.org","You are very welcome, hope this bug could be fixed in the incoming releases.
Rocky.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,415,2016-12-21T19:53:59Z,2017-01-05T23:00:21Z,2017-01-05T23:02:26Z,MERGED,True,2,0,1,https://github.com/RockfordWei,Fixing gridfs_file_set_xxx wouldn’t export to module map.,1,[],https://github.com/mongodb/mongo-c-driver/pull/415,https://github.com/bjori,4,https://github.com/mongodb/mongo-c-driver/pull/415#issuecomment-269668094,"When using clang to export modules, functions set of
mongo_gridfs_file_set_xxx couldn’t export to destination simply because
only the getting methods were marked with BSON_API. Typical scenario is
a third party exporting, such as c library exporting for Swift
language.
Script test-libmongoc, which includes GridFS, passed.
This issue was found by Kyle Jessup and Rockford Wei,
perfect.org",I made a jira ticket for tracking this issue https://jira.mongodb.org/browse/CDRIVER-1971 and make sure it'll be in our next release,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,415,2016-12-21T19:53:59Z,2017-01-05T23:00:21Z,2017-01-05T23:02:26Z,MERGED,True,2,0,1,https://github.com/RockfordWei,Fixing gridfs_file_set_xxx wouldn’t export to module map.,1,[],https://github.com/mongodb/mongo-c-driver/pull/415,https://github.com/RockfordWei,5,https://github.com/mongodb/mongo-c-driver/pull/415#issuecomment-269867300,"When using clang to export modules, functions set of
mongo_gridfs_file_set_xxx couldn’t export to destination simply because
only the getting methods were marked with BSON_API. Typical scenario is
a third party exporting, such as c library exporting for Swift
language.
Script test-libmongoc, which includes GridFS, passed.
This issue was found by Kyle Jessup and Rockford Wei,
perfect.org",Thank you & Happy New Year!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,415,2016-12-21T19:53:59Z,2017-01-05T23:00:21Z,2017-01-05T23:02:26Z,MERGED,True,2,0,1,https://github.com/RockfordWei,Fixing gridfs_file_set_xxx wouldn’t export to module map.,1,[],https://github.com/mongodb/mongo-c-driver/pull/415,https://github.com/bjori,6,https://github.com/mongodb/mongo-c-driver/pull/415#issuecomment-270783390,"When using clang to export modules, functions set of
mongo_gridfs_file_set_xxx couldn’t export to destination simply because
only the getting methods were marked with BSON_API. Typical scenario is
a third party exporting, such as c library exporting for Swift
language.
Script test-libmongoc, which includes GridFS, passed.
This issue was found by Kyle Jessup and Rockford Wei,
perfect.org","Thanks!
Merged to 1.5 and master",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,416,2016-12-27T12:09:12Z,2017-01-06T22:04:57Z,2017-01-06T22:04:57Z,CLOSED,False,1,1,1,https://github.com/alexey-detr,Support for ipv6-only hostnames,1,[],https://github.com/mongodb/mongo-c-driver/pull/416,https://github.com/alexey-detr,1,https://github.com/mongodb/mongo-c-driver/pull/416,"For cases when connection endpoint specified as hostname with ipv6
address only.
We have got this problem when tried to use PHP mongodb driver https://github.com/mongodb/mongo-php-driver with PHP 7. Our mongodb servers have ipv6 addresses only, so we can't rely on AF_INET.","For cases when connection endpoint specified as hostname with ipv6
address only.
We have got this problem when tried to use PHP mongodb driver https://github.com/mongodb/mongo-php-driver with PHP 7. Our mongodb servers have ipv6 addresses only, so we can't rely on AF_INET.",True,{'THUMBS_UP': ['https://github.com/MobDev-Hobby']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,416,2016-12-27T12:09:12Z,2017-01-06T22:04:57Z,2017-01-06T22:04:57Z,CLOSED,False,1,1,1,https://github.com/alexey-detr,Support for ipv6-only hostnames,1,[],https://github.com/mongodb/mongo-c-driver/pull/416,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/416#issuecomment-269675778,"For cases when connection endpoint specified as hostname with ipv6
address only.
We have got this problem when tried to use PHP mongodb driver https://github.com/mongodb/mongo-php-driver with PHP 7. Our mongodb servers have ipv6 addresses only, so we can't rely on AF_INET.","Interesting. Nice catch.
I've created https://jira.mongodb.org/browse/CDRIVER-1972 to track this issue in hope to address it before our next release",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,416,2016-12-27T12:09:12Z,2017-01-06T22:04:57Z,2017-01-06T22:04:57Z,CLOSED,False,1,1,1,https://github.com/alexey-detr,Support for ipv6-only hostnames,1,[],https://github.com/mongodb/mongo-c-driver/pull/416,https://github.com/bjori,3,https://github.com/mongodb/mongo-c-driver/pull/416#issuecomment-271021664,"For cases when connection endpoint specified as hostname with ipv6
address only.
We have got this problem when tried to use PHP mongodb driver https://github.com/mongodb/mongo-php-driver with PHP 7. Our mongodb servers have ipv6 addresses only, so we can't rely on AF_INET.","Thanks for the patch.
This has been merged as

333cbc2 (r1.5)
8729c14 (master)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,417,2017-01-02T20:44:22Z,2017-01-05T22:26:56Z,2017-01-06T17:39:47Z,MERGED,True,148,148,3,https://github.com/ooglek,"CDRIVER-1522 CDRIVER-1970 update define constants for ""find"" opts to …",1,[],https://github.com/mongodb/mongo-c-driver/pull/417,https://github.com/ooglek,1,https://github.com/mongodb/mongo-c-driver/pull/417,"Improving on CDRIVER-1522 with a move to defining constants, I found that when compiled on FreeBSD, helper macros for MIN and MAX in sys/params.h, only included on FreeBSD, NetBSD, DragonFly and OpenBSD, clobbered the defines in mongoc-cursor-private.h.
This improves the uniqueness in the define values to avoid future namespace collisions.
Compiled, tested and passed on a FreeBSD and OSX machine. Have not tested linux nor windows.","Improving on CDRIVER-1522 with a move to defining constants, I found that when compiled on FreeBSD, helper macros for MIN and MAX in sys/params.h, only included on FreeBSD, NetBSD, DragonFly and OpenBSD, clobbered the defines in mongoc-cursor-private.h.
This improves the uniqueness in the define values to avoid future namespace collisions.
Compiled, tested and passed on a FreeBSD and OSX machine. Have not tested linux nor windows.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,417,2017-01-02T20:44:22Z,2017-01-05T22:26:56Z,2017-01-06T17:39:47Z,MERGED,True,148,148,3,https://github.com/ooglek,"CDRIVER-1522 CDRIVER-1970 update define constants for ""find"" opts to …",1,[],https://github.com/mongodb/mongo-c-driver/pull/417,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/417#issuecomment-270775989,"Improving on CDRIVER-1522 with a move to defining constants, I found that when compiled on FreeBSD, helper macros for MIN and MAX in sys/params.h, only included on FreeBSD, NetBSD, DragonFly and OpenBSD, clobbered the defines in mongoc-cursor-private.h.
This improves the uniqueness in the define values to avoid future namespace collisions.
Compiled, tested and passed on a FreeBSD and OSX machine. Have not tested linux nor windows.",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,417,2017-01-02T20:44:22Z,2017-01-05T22:26:56Z,2017-01-06T17:39:47Z,MERGED,True,148,148,3,https://github.com/ooglek,"CDRIVER-1522 CDRIVER-1970 update define constants for ""find"" opts to …",1,[],https://github.com/mongodb/mongo-c-driver/pull/417,https://github.com/ooglek,3,https://github.com/mongodb/mongo-c-driver/pull/417#issuecomment-270958721,"Improving on CDRIVER-1522 with a move to defining constants, I found that when compiled on FreeBSD, helper macros for MIN and MAX in sys/params.h, only included on FreeBSD, NetBSD, DragonFly and OpenBSD, clobbered the defines in mongoc-cursor-private.h.
This improves the uniqueness in the define values to avoid future namespace collisions.
Compiled, tested and passed on a FreeBSD and OSX machine. Have not tested linux nor windows.",My pleasure! Thank you for all your hard work on this project.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,418,2017-01-11T08:48:59Z,2017-01-11T08:49:09Z,2017-01-11T08:49:09Z,CLOSED,False,1768,782,86,https://github.com/remicollet,Issue testipv6,46,[],https://github.com/mongodb/mongo-c-driver/pull/418,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/418,"Related to https://jira.mongodb.org/browse/CDRIVER-1988 (but partial)
Related to change in 8729c14","Related to https://jira.mongodb.org/browse/CDRIVER-1988 (but partial)
Related to change in 8729c14",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,419,2017-01-11T08:50:25Z,2017-01-11T10:59:23Z,2017-01-11T10:59:23Z,CLOSED,False,1,1,1,https://github.com/remicollet,fix test for ipv6,1,[],https://github.com/mongodb/mongo-c-driver/pull/419,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/419,"Related to https://jira.mongodb.org/browse/CDRIVER-1988 (but partial)
Related to change in 8729c14","Related to https://jira.mongodb.org/browse/CDRIVER-1988 (but partial)
Related to change in 8729c14",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,419,2017-01-11T08:50:25Z,2017-01-11T10:59:23Z,2017-01-11T10:59:23Z,CLOSED,False,1,1,1,https://github.com/remicollet,fix test for ipv6,1,[],https://github.com/mongodb/mongo-c-driver/pull/419,https://github.com/remicollet,2,https://github.com/mongodb/mongo-c-driver/pull/419#issuecomment-271812191,"Related to https://jira.mongodb.org/browse/CDRIVER-1988 (but partial)
Related to change in 8729c14","Notice: I haven kept AF_INET (which seems unneeded), but I supose you have run test sutie before release... so needed in some cases...",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,419,2017-01-11T08:50:25Z,2017-01-11T10:59:23Z,2017-01-11T10:59:23Z,CLOSED,False,1,1,1,https://github.com/remicollet,fix test for ipv6,1,[],https://github.com/mongodb/mongo-c-driver/pull/419,https://github.com/remicollet,3,https://github.com/mongodb/mongo-c-driver/pull/419#issuecomment-271839904,"Related to https://jira.mongodb.org/browse/CDRIVER-1988 (but partial)
Related to change in 8729c14",Closing as this is not anought to fix issue. Current IPv6 support breaks lot of things.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,420,2017-02-06T23:38:38Z,2017-03-29T00:02:40Z,2017-03-29T00:02:40Z,CLOSED,False,6,0,1,https://github.com/aseering,Skip over documents that are too large to upload to MongoDB,1,[],https://github.com/mongodb/mongo-c-driver/pull/420,https://github.com/aseering,1,https://github.com/mongodb/mongo-c-driver/pull/420,"I discovered, when working with some code written on top of mongo-cxx, that, if I attempted to upload a document that was larger than 16mb, the driver would go into an infinite loop and hang.
The infinite loop occurs in the function that I've edited with this patch, in the underlying mongo-c driver.  The driver detects that the document is too long.  It looks to me like the intent of the driver is to flag an error for that document and continue to the next.  It does flag the error; it does not continue to the next.  So it just spins forever, repeatedly failing to send the too-large document.
I imagine this wants a unit test.  I have a local test, but it uses mongo-cxx and bson-cxx because I'm not very familiar with the C API, so it would be hard to include it in your test suite...  I figured I ought to at least post this code, though.","I discovered, when working with some code written on top of mongo-cxx, that, if I attempted to upload a document that was larger than 16mb, the driver would go into an infinite loop and hang.
The infinite loop occurs in the function that I've edited with this patch, in the underlying mongo-c driver.  The driver detects that the document is too long.  It looks to me like the intent of the driver is to flag an error for that document and continue to the next.  It does flag the error; it does not continue to the next.  So it just spins forever, repeatedly failing to send the too-large document.
I imagine this wants a unit test.  I have a local test, but it uses mongo-cxx and bson-cxx because I'm not very familiar with the C API, so it would be hard to include it in your test suite...  I figured I ought to at least post this code, though.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,420,2017-02-06T23:38:38Z,2017-03-29T00:02:40Z,2017-03-29T00:02:40Z,CLOSED,False,6,0,1,https://github.com/aseering,Skip over documents that are too large to upload to MongoDB,1,[],https://github.com/mongodb/mongo-c-driver/pull/420,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/420#issuecomment-278399620,"I discovered, when working with some code written on top of mongo-cxx, that, if I attempted to upload a document that was larger than 16mb, the driver would go into an infinite loop and hang.
The infinite loop occurs in the function that I've edited with this patch, in the underlying mongo-c driver.  The driver detects that the document is too long.  It looks to me like the intent of the driver is to flag an error for that document and continue to the next.  It does flag the error; it does not continue to the next.  So it just spins forever, repeatedly failing to send the too-large document.
I imagine this wants a unit test.  I have a local test, but it uses mongo-cxx and bson-cxx because I'm not very familiar with the C API, so it would be hard to include it in your test suite...  I figured I ought to at least post this code, though.","Thanks very much! We'll plan to merge and release for 1.7.0:
https://jira.mongodb.org/browse/CDRIVER-589
Can you share your test logic with us to help write a unittest in C?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,420,2017-02-06T23:38:38Z,2017-03-29T00:02:40Z,2017-03-29T00:02:40Z,CLOSED,False,6,0,1,https://github.com/aseering,Skip over documents that are too large to upload to MongoDB,1,[],https://github.com/mongodb/mongo-c-driver/pull/420,https://github.com/aseering,3,https://github.com/mongodb/mongo-c-driver/pull/420#issuecomment-278528302,"I discovered, when working with some code written on top of mongo-cxx, that, if I attempted to upload a document that was larger than 16mb, the driver would go into an infinite loop and hang.
The infinite loop occurs in the function that I've edited with this patch, in the underlying mongo-c driver.  The driver detects that the document is too long.  It looks to me like the intent of the driver is to flag an error for that document and continue to the next.  It does flag the error; it does not continue to the next.  So it just spins forever, repeatedly failing to send the too-large document.
I imagine this wants a unit test.  I have a local test, but it uses mongo-cxx and bson-cxx because I'm not very familiar with the C API, so it would be hard to include it in your test suite...  I figured I ought to at least post this code, though.","Sure -- so, at a high level, my test does something like this:

Construct a BSON document that looks something like {""key"":""zzzzzzzzzzzzzz...zzzzzzzzzzzzzzz""}, where the value contains 20,000,000 zs
Attempt to insert the document into the database.

I'm inserting using mongocxx's collection::update_one() with ""upsert"" enabled.  I don't have the stack trace in front of me, but I believe that mapped to mongoc_bulk_operation_insert() in the C API.
Just from reading the code, it looks like command->flags.ordered must be set to false for the mongoc write command, however that command is generated.  Otherwise I would expect the existing code to correctly exit on the first error.
Let me know if that's enough detail.  If not, I can go digging.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,420,2017-02-06T23:38:38Z,2017-03-29T00:02:40Z,2017-03-29T00:02:40Z,CLOSED,False,6,0,1,https://github.com/aseering,Skip over documents that are too large to upload to MongoDB,1,[],https://github.com/mongodb/mongo-c-driver/pull/420,https://github.com/bjori,4,https://github.com/mongodb/mongo-c-driver/pull/420#issuecomment-289941565,"I discovered, when working with some code written on top of mongo-cxx, that, if I attempted to upload a document that was larger than 16mb, the driver would go into an infinite loop and hang.
The infinite loop occurs in the function that I've edited with this patch, in the underlying mongo-c driver.  The driver detects that the document is too long.  It looks to me like the intent of the driver is to flag an error for that document and continue to the next.  It does flag the error; it does not continue to the next.  So it just spins forever, repeatedly failing to send the too-large document.
I imagine this wants a unit test.  I have a local test, but it uses mongo-cxx and bson-cxx because I'm not very familiar with the C API, so it would be hard to include it in your test suite...  I figured I ought to at least post this code, though.",This was merged as d38df57,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,421,2017-02-10T05:49:11Z,2017-02-10T11:11:13Z,2017-02-10T11:11:24Z,MERGED,True,4,3,1,https://github.com/remicollet,CDRIVER-2042 skip test_create_index_fail when offline,1,[],https://github.com/mongodb/mongo-c-driver/pull/421,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/421,"From test_create_index_fail, requires internet connectivity (DNS):
   client = mongoc_client_new (""mongodb://example.com/?connectTimeoutMS=10"");

trivial fix","From test_create_index_fail, requires internet connectivity (DNS):
   client = mongoc_client_new (""mongodb://example.com/?connectTimeoutMS=10"");

trivial fix",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,421,2017-02-10T05:49:11Z,2017-02-10T11:11:13Z,2017-02-10T11:11:24Z,MERGED,True,4,3,1,https://github.com/remicollet,CDRIVER-2042 skip test_create_index_fail when offline,1,[],https://github.com/mongodb/mongo-c-driver/pull/421,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/421#issuecomment-278918244,"From test_create_index_fail, requires internet connectivity (DNS):
   client = mongoc_client_new (""mongodb://example.com/?connectTimeoutMS=10"");

trivial fix",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,422,2017-02-12T13:22:03Z,2017-03-29T00:06:19Z,2017-03-29T00:09:26Z,MERGED,True,1,1,1,https://github.com/Sp1l,Fix LibreSSL build issue,1,[],https://github.com/mongodb/mongo-c-driver/pull/422,https://github.com/Sp1l,1,https://github.com/mongodb/mongo-c-driver/pull/422,"LibreSSL forked from 1.0.1f, this 1.0.2 method is unavailable
In the tree I also see separate sources for LibreSSL but apparently these aren't used. Detection of LibreSSL not going well in configure?","LibreSSL forked from 1.0.1f, this 1.0.2 method is unavailable
In the tree I also see separate sources for LibreSSL but apparently these aren't used. Detection of LibreSSL not going well in configure?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,422,2017-02-12T13:22:03Z,2017-03-29T00:06:19Z,2017-03-29T00:09:26Z,MERGED,True,1,1,1,https://github.com/Sp1l,Fix LibreSSL build issue,1,[],https://github.com/mongodb/mongo-c-driver/pull/422,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/422#issuecomment-279231916,"LibreSSL forked from 1.0.1f, this 1.0.2 method is unavailable
In the tree I also see separate sources for LibreSSL but apparently these aren't used. Detection of LibreSSL not going well in configure?","Thanks for the patch!
We default to openssl when compiling, and don't really have additional checks ontop of that to see if its libressl shims or true openssl.
If you want to compile against straight up libressl (e.g. libtls) then configure with --enable-ssl=libressl",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,422,2017-02-12T13:22:03Z,2017-03-29T00:06:19Z,2017-03-29T00:09:26Z,MERGED,True,1,1,1,https://github.com/Sp1l,Fix LibreSSL build issue,1,[],https://github.com/mongodb/mongo-c-driver/pull/422,https://github.com/Sp1l,3,https://github.com/mongodb/mongo-c-driver/pull/422#issuecomment-279243165,"LibreSSL forked from 1.0.1f, this 1.0.2 method is unavailable
In the tree I also see separate sources for LibreSSL but apparently these aren't used. Detection of LibreSSL not going well in configure?","On 2017-02-12 18:01, Hannes Magnusson wrote:
 Thanks for the patch!

 We default to openssl when compiling, and don't really have additional
 checks ontop of that to see if its libressl shims or true openssl.
 If you want to compile against straight up libressl (e.g. libtls) then
 configure with --enable-ssl=libressl

 --
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub [1], or mute the
 thread [2].

 	*

 Links:
 ------
 [1]
 #422 (comment)
 [2]
 https://github.com/notifications/unsubscribe-auth/AHMrMZEXsI_pPz9zg9-bFyfIW6HqIWHyks5rbzrygaJpZM4L-fDM

Hi Hannes,

Thanks for your quick response! Just checked in the FreeBSD port,
there's mention of LibreSSL being supported from 1.3 onwards and
--enable-ssl=libressl doesn't currently do anything. I'd assume these 2 
things are related.

Cheers,

Bernard.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,422,2017-02-12T13:22:03Z,2017-03-29T00:06:19Z,2017-03-29T00:09:26Z,MERGED,True,1,1,1,https://github.com/Sp1l,Fix LibreSSL build issue,1,[],https://github.com/mongodb/mongo-c-driver/pull/422,https://github.com/bjori,4,https://github.com/mongodb/mongo-c-driver/pull/422#issuecomment-289942692,"LibreSSL forked from 1.0.1f, this 1.0.2 method is unavailable
In the tree I also see separate sources for LibreSSL but apparently these aren't used. Detection of LibreSSL not going well in configure?","Thanks for fix!
btw --enable-ssl=libressl was added in 1.5.0, not 1.3. Which may explain why it appeared not to do anything :)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,423,2017-02-16T15:13:01Z,2017-02-24T11:49:16Z,2017-03-01T14:35:19Z,MERGED,True,3,2,2,https://github.com/jmikola,CDRIVER-2057: localThresholdMS should default to 15 milliseconds,1,[],https://github.com/mongodb/mongo-c-driver/pull/423,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/423,https://jira.mongodb.org/browse/CDRIVER-2057,https://jira.mongodb.org/browse/CDRIVER-2057,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,423,2017-02-16T15:13:01Z,2017-02-24T11:49:16Z,2017-03-01T14:35:19Z,MERGED,True,3,2,2,https://github.com/jmikola,CDRIVER-2057: localThresholdMS should default to 15 milliseconds,1,[],https://github.com/mongodb/mongo-c-driver/pull/423,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/423#issuecomment-280406790,https://jira.mongodb.org/browse/CDRIVER-2057,Rebased on master.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,424,2017-02-16T17:23:10Z,2017-02-28T14:37:41Z,2017-03-01T14:37:13Z,MERGED,True,72,16,4,https://github.com/jmikola,"CDRIVER-2056, CDRIVER-2060: Improve localThresholdMS URI option parsing",2,[],https://github.com/mongodb/mongo-c-driver/pull/424,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/424,"https://jira.mongodb.org/browse/CDRIVER-2056
https://jira.mongodb.org/browse/CDRIVER-2060","https://jira.mongodb.org/browse/CDRIVER-2056
https://jira.mongodb.org/browse/CDRIVER-2060",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,424,2017-02-16T17:23:10Z,2017-02-28T14:37:41Z,2017-03-01T14:37:13Z,MERGED,True,72,16,4,https://github.com/jmikola,"CDRIVER-2056, CDRIVER-2060: Improve localThresholdMS URI option parsing",2,[],https://github.com/mongodb/mongo-c-driver/pull/424,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/424#issuecomment-280405974,"https://jira.mongodb.org/browse/CDRIVER-2056
https://jira.mongodb.org/browse/CDRIVER-2060","Rebased commits on master.
test-mongoc-uri.c appears to have changed quite a bit since r1.5. If you'd like the previous commits to assist with the backport, the hashes are ec2431e and abd6694.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,425,2017-03-03T20:15:31Z,2017-03-05T17:19:04Z,2017-03-05T18:16:16Z,MERGED,True,76,5,2,https://github.com/jmikola,CDRIVER-2072: Always initialize cursor filter and opts,1,[],https://github.com/mongodb/mongo-c-driver/pull/425,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/425,"https://jira.mongodb.org/browse/CDRIVER-2072
mongoc_cursor_destroy() always attempts to destroy these documents, which would previously crash if they were left uninitialized when an error was reported by _mongoc_cursor_new_with_opts().","https://jira.mongodb.org/browse/CDRIVER-2072
mongoc_cursor_destroy() always attempts to destroy these documents, which would previously crash if they were left uninitialized when an error was reported by _mongoc_cursor_new_with_opts().",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,425,2017-03-03T20:15:31Z,2017-03-05T17:19:04Z,2017-03-05T18:16:16Z,MERGED,True,76,5,2,https://github.com/jmikola,CDRIVER-2072: Always initialize cursor filter and opts,1,[],https://github.com/mongodb/mongo-c-driver/pull/425,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/425#issuecomment-284244623,"https://jira.mongodb.org/browse/CDRIVER-2072
mongoc_cursor_destroy() always attempts to destroy these documents, which would previously crash if they were left uninitialized when an error was reported by _mongoc_cursor_new_with_opts().",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,426,2017-03-07T16:52:36Z,2017-03-07T19:32:46Z,2017-03-07T19:32:46Z,CLOSED,False,1,1,1,https://github.com/remicollet,CDRIVER-2078 use bundled libson documentation instead of online copy,1,[],https://github.com/mongodb/mongo-c-driver/pull/426,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/426,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,426,2017-03-07T16:52:36Z,2017-03-07T19:32:46Z,2017-03-07T19:32:46Z,CLOSED,False,1,1,1,https://github.com/remicollet,CDRIVER-2078 use bundled libson documentation instead of online copy,1,[],https://github.com/mongodb/mongo-c-driver/pull/426,https://github.com/remicollet,2,https://github.com/mongodb/mongo-c-driver/pull/426#issuecomment-284786071,,"Fedora build with this patch applied
https://kojipkgs.fedoraproject.org//work/tasks/472/18250472/build.log
+ make -j48 man V=1
mkdir -p doc/man
/usr/libexec/python2-sphinx/sphinx-build -qEW -b man ./doc doc/man
+ exit 0",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,426,2017-03-07T16:52:36Z,2017-03-07T19:32:46Z,2017-03-07T19:32:46Z,CLOSED,False,1,1,1,https://github.com/remicollet,CDRIVER-2078 use bundled libson documentation instead of online copy,1,[],https://github.com/mongodb/mongo-c-driver/pull/426,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/426#issuecomment-284832931,,"Thanks Remi! I don't think this is the right solution, though - I'll explain in https://jira.mongodb.org/browse/CDRIVER-2078",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,427,2017-03-15T14:25:51Z,2017-03-24T01:12:48Z,2017-03-24T01:12:48Z,CLOSED,False,59,12,1,https://github.com/malexzx,CDRIVER-2080 detect socket API parameters for legacy platforms,2,[],https://github.com/mongodb/mongo-c-driver/pull/427,https://github.com/malexzx,1,https://github.com/mongodb/mongo-c-driver/pull/427,add detection code to CMakeLists.txt,add detection code to CMakeLists.txt,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,427,2017-03-15T14:25:51Z,2017-03-24T01:12:48Z,2017-03-24T01:12:48Z,CLOSED,False,59,12,1,https://github.com/malexzx,CDRIVER-2080 detect socket API parameters for legacy platforms,2,[],https://github.com/mongodb/mongo-c-driver/pull/427,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/427#issuecomment-287549511,add detection code to CMakeLists.txt,"This looks very clever, thanks for the contribution.
Quick question, how are you installing CMake on HP-UX? I tried from a 3.7.2 source download and got:
[ 36%] Building C object Utilities/cmliblzma/CMakeFiles/cmliblzma.dir/liblzma/common/index.c.o
(Bundled) cc: warning 922: ""-Aa"" is unsupported in the bundled compiler, ignored.
(Bundled) cc: warning 922: ""-Ae"" is unsupported in the bundled compiler, ignored.
""/tmp/cmake-3.7.2/Utilities/cmliblzma/liblzma/common/index.c"", line 102: error #2070:
          incomplete type is not allowed
        index_record records[];
                     ^

1 error detected in the compilation of ""/tmp/cmake-3.7.2/Utilities/cmliblzma/liblzma/common/index.c"".",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,427,2017-03-15T14:25:51Z,2017-03-24T01:12:48Z,2017-03-24T01:12:48Z,CLOSED,False,59,12,1,https://github.com/malexzx,CDRIVER-2080 detect socket API parameters for legacy platforms,2,[],https://github.com/mongodb/mongo-c-driver/pull/427,https://github.com/malexzx,3,https://github.com/mongodb/mongo-c-driver/pull/427#issuecomment-287553602,add detection code to CMakeLists.txt,cmake built on our host's with gcc-4.8.5 compiller.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,427,2017-03-15T14:25:51Z,2017-03-24T01:12:48Z,2017-03-24T01:12:48Z,CLOSED,False,59,12,1,https://github.com/malexzx,CDRIVER-2080 detect socket API parameters for legacy platforms,2,[],https://github.com/mongodb/mongo-c-driver/pull/427,https://github.com/malexzx,4,https://github.com/mongodb/mongo-c-driver/pull/427#issuecomment-288611769,add detection code to CMakeLists.txt,I've improved checking of arguments now,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,427,2017-03-15T14:25:51Z,2017-03-24T01:12:48Z,2017-03-24T01:12:48Z,CLOSED,False,59,12,1,https://github.com/malexzx,CDRIVER-2080 detect socket API parameters for legacy platforms,2,[],https://github.com/mongodb/mongo-c-driver/pull/427,https://github.com/ajdavis,5,https://github.com/mongodb/mongo-c-driver/pull/427#issuecomment-288906005,add detection code to CMakeLists.txt,"Merged, thank you:
9feb977",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,428,2017-03-20T09:52:24Z,2017-03-20T12:17:15Z,2017-03-20T14:35:04Z,CLOSED,False,778,46,16,https://github.com/Lag1101,Family specify branch,14,[],https://github.com/mongodb/mongo-c-driver/pull/428,https://github.com/Lag1101,1,https://github.com/mongodb/mongo-c-driver/pull/428,"Specifying aliases for ipv6 hosts aren't parsed correctly now, and it raises error in getaddrinfo func.
With option ""family"" in uri as ipv4,ipv6,unix,unspec user can define it directly.","Specifying aliases for ipv6 hosts aren't parsed correctly now, and it raises error in getaddrinfo func.
With option ""family"" in uri as ipv4,ipv6,unix,unspec user can define it directly.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,428,2017-03-20T09:52:24Z,2017-03-20T12:17:15Z,2017-03-20T14:35:04Z,CLOSED,False,778,46,16,https://github.com/Lag1101,Family specify branch,14,[],https://github.com/mongodb/mongo-c-driver/pull/428,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/428#issuecomment-287743879,"Specifying aliases for ipv6 hosts aren't parsed correctly now, and it raises error in getaddrinfo func.
With option ""family"" in uri as ipv4,ipv6,unix,unspec user can define it directly.","Thanks for the contribution @Lag1101, it's an interesting idea. Unfortunately we can't accept it, since it will sharply diverge from other MongoDB drivers' standard behavior. All drivers in all programming languages conform to the Connection String Spec:
https://github.com/mongodb/specifications/blob/master/source/connection-string/connection-string-spec.rst
Right now you can connect to an IPv4 or IPv6 address by specifying it explicitly:
mongodb://127.0.0.1/
mongodb://[::1]/

Once I implement https://jira.mongodb.org/browse/CDRIVER-1972 then you can pass the C Driver a hostname and it will try both IPv4 and IPv6 addresses for that host, somewhat like the standard ""Happy Eyeballs"" spec RFC 6555.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,428,2017-03-20T09:52:24Z,2017-03-20T12:17:15Z,2017-03-20T14:35:04Z,CLOSED,False,778,46,16,https://github.com/Lag1101,Family specify branch,14,[],https://github.com/mongodb/mongo-c-driver/pull/428,https://github.com/Lag1101,3,https://github.com/mongodb/mongo-c-driver/pull/428#issuecomment-287745985,"Specifying aliases for ipv6 hosts aren't parsed correctly now, and it raises error in getaddrinfo func.
With option ""family"" in uri as ipv4,ipv6,unix,unspec user can define it directly.","Thanks for explanation. I haven't took into account about connection string specs.
Nevertheless, I think we need some posibility like --ipv6 flag in mongo-client.
Besides we will try both IPv4 and IPv6, and it tooks some time for new connections, and it doesn't seem C-way. What about some function, maybe mongoc_uri_set_family, for specifying behavior by user?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,428,2017-03-20T09:52:24Z,2017-03-20T12:17:15Z,2017-03-20T14:35:04Z,CLOSED,False,778,46,16,https://github.com/Lag1101,Family specify branch,14,[],https://github.com/mongodb/mongo-c-driver/pull/428,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/428#issuecomment-287747124,"Specifying aliases for ipv6 hosts aren't parsed correctly now, and it raises error in getaddrinfo func.
With option ""family"" in uri as ipv4,ipv6,unix,unspec user can define it directly.","I'm concerned about connection startup time, too. So in CDRIVER-1972 I plan to try both IPv4 and IPv6 concurrently, so that I don't add any extra latency.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,428,2017-03-20T09:52:24Z,2017-03-20T12:17:15Z,2017-03-20T14:35:04Z,CLOSED,False,778,46,16,https://github.com/Lag1101,Family specify branch,14,[],https://github.com/mongodb/mongo-c-driver/pull/428,https://github.com/Lag1101,5,https://github.com/mongodb/mongo-c-driver/pull/428#issuecomment-287749548,"Specifying aliases for ipv6 hosts aren't parsed correctly now, and it raises error in getaddrinfo func.
With option ""family"" in uri as ipv4,ipv6,unix,unspec user can define it directly.","Doesn't it limit user possibilities?
what if I have nginx server configured correctly for ipv4 and ipv6 hosts both, but they proxy for different endpoints, which would be selected? Seems like, it can caus for painful behaivior.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,428,2017-03-20T09:52:24Z,2017-03-20T12:17:15Z,2017-03-20T14:35:04Z,CLOSED,False,778,46,16,https://github.com/Lag1101,Family specify branch,14,[],https://github.com/mongodb/mongo-c-driver/pull/428,https://github.com/ajdavis,6,https://github.com/mongodb/mongo-c-driver/pull/428#issuecomment-287766647,"Specifying aliases for ipv6 hosts aren't parsed correctly now, and it raises error in getaddrinfo func.
With option ""family"" in uri as ipv4,ipv6,unix,unspec user can define it directly.","You couldn't connect to MongoDB through an Nginx proxy anyway, since the MongoDB wire protocol is not HTTP. We don't generally support proxies at all besides our own proxy, mongos; but in a situation like the one you describe, an IPv4 or an IPv6 address, instead of a hostname, would allow you to specify which protocol to use.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,428,2017-03-20T09:52:24Z,2017-03-20T12:17:15Z,2017-03-20T14:35:04Z,CLOSED,False,778,46,16,https://github.com/Lag1101,Family specify branch,14,[],https://github.com/mongodb/mongo-c-driver/pull/428,https://github.com/Lag1101,7,https://github.com/mongodb/mongo-c-driver/pull/428#issuecomment-287777784,"Specifying aliases for ipv6 hosts aren't parsed correctly now, and it raises error in getaddrinfo func.
With option ""family"" in uri as ipv4,ipv6,unix,unspec user can define it directly.",Thanks. I am looking forward to updates.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,429,2017-03-23T11:51:59Z,2017-03-23T14:49:56Z,2017-03-23T14:50:39Z,CLOSED,False,532,0,26,https://github.com/kSuccess,Debian,218,[],https://github.com/mongodb/mongo-c-driver/pull/429,https://github.com/kSuccess,1,https://github.com/mongodb/mongo-c-driver/pull/429,"hi i'm using ubuntu 16.04 and i try to build mongoDB C Drivere 1.6.1 but it show mw an error on the consolel:
2 make
make[1]: Entering directory '/home/test/Desktop/mosquitto/mongo-c-driver-1.6.1'
CC       src/mongoc/libmongoc_1_0_la-mongoc-apm.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-array.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-async.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-async-cmd.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-buffer.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-bulk-operation.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-b64.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-client.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-client-pool.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cluster.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cluster-sspi.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-collection.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-counters.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor-array.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor-cursorid.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor-transform.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-database.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-find-and-modify.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-host-list.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-init.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs-file.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs-file-page.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs-file-list.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-handshake.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-index.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-linux-distro-scanner.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-list.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-log.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-matcher-op.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-matcher.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-memcmp.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-opcode.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-queue.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-read-concern.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-read-prefs.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-rpc.lo
src/mongoc/op-delete.def: In function '_mongoc_rpc_gather_delete':
src/mongoc/mongoc-rpc.c:30:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration]
assert (rpc);                                                     
^
src/mongoc/op-delete.def:1:1: note: in expansion of macro 'RPC'
RPC(
^
CC       src/mongoc/libmongoc_1_0_la-mongoc-server-description.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-server-stream.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-set.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-socket.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-buffered.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-file.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-gridfs.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-socket.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology-description.lo
src/mongoc/mongoc-topology-description.c: In function 'mongoc_topology_description_type':
src/mongoc/mongoc-topology-description.c:1842:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration]
assert (0);
^
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology-description-apm.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology-scanner.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-uri.lo
src/mongoc/mongoc-uri.c: In function 'mongoc_uri_lowercase_hostname':
src/mongoc/mongoc-uri.c:76:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration]
assert (c < 128);
^
CC       src/mongoc/libmongoc_1_0_la-mongoc-util.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-version-functions.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-write-command.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-write-concern.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-crypto.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-scram.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-crypto-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-rand-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-tls.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-ssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-tls-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-tls-openssl-bio.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cluster-sasl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-sasl.lo
CCLD     libmongoc-1.0.la
ar: u' modifier ignored since D' is the default (see U') CC       src/mongoc/libmongoc_priv_la-mongoc-apm.lo CC       src/mongoc/libmongoc_priv_la-mongoc-array.lo CC       src/mongoc/libmongoc_priv_la-mongoc-async.lo CC       src/mongoc/libmongoc_priv_la-mongoc-async-cmd.lo CC       src/mongoc/libmongoc_priv_la-mongoc-buffer.lo CC       src/mongoc/libmongoc_priv_la-mongoc-bulk-operation.lo CC       src/mongoc/libmongoc_priv_la-mongoc-b64.lo CC       src/mongoc/libmongoc_priv_la-mongoc-client.lo CC       src/mongoc/libmongoc_priv_la-mongoc-client-pool.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cluster.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cluster-sspi.lo CC       src/mongoc/libmongoc_priv_la-mongoc-collection.lo CC       src/mongoc/libmongoc_priv_la-mongoc-counters.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor-array.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor-cursorid.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor-transform.lo CC       src/mongoc/libmongoc_priv_la-mongoc-database.lo CC       src/mongoc/libmongoc_priv_la-mongoc-find-and-modify.lo CC       src/mongoc/libmongoc_priv_la-mongoc-host-list.lo CC       src/mongoc/libmongoc_priv_la-mongoc-init.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs-file.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs-file-page.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs-file-list.lo CC       src/mongoc/libmongoc_priv_la-mongoc-handshake.lo CC       src/mongoc/libmongoc_priv_la-mongoc-index.lo CC       src/mongoc/libmongoc_priv_la-mongoc-linux-distro-scanner.lo CC       src/mongoc/libmongoc_priv_la-mongoc-list.lo CC       src/mongoc/libmongoc_priv_la-mongoc-log.lo CC       src/mongoc/libmongoc_priv_la-mongoc-matcher-op.lo CC       src/mongoc/libmongoc_priv_la-mongoc-matcher.lo CC       src/mongoc/libmongoc_priv_la-mongoc-memcmp.lo CC       src/mongoc/libmongoc_priv_la-mongoc-opcode.lo CC       src/mongoc/libmongoc_priv_la-mongoc-queue.lo CC       src/mongoc/libmongoc_priv_la-mongoc-read-concern.lo CC       src/mongoc/libmongoc_priv_la-mongoc-read-prefs.lo CC       src/mongoc/libmongoc_priv_la-mongoc-rpc.lo src/mongoc/op-delete.def: In function '_mongoc_rpc_gather_delete': src/mongoc/mongoc-rpc.c:30:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration] assert (rpc);                                                     \ ^ src/mongoc/op-delete.def:1:1: note: in expansion of macro 'RPC' RPC( ^ CC       src/mongoc/libmongoc_priv_la-mongoc-server-description.lo CC       src/mongoc/libmongoc_priv_la-mongoc-server-stream.lo CC       src/mongoc/libmongoc_priv_la-mongoc-set.lo CC       src/mongoc/libmongoc_priv_la-mongoc-socket.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-buffered.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-file.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-gridfs.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-socket.lo CC       src/mongoc/libmongoc_priv_la-mongoc-topology.lo CC       src/mongoc/libmongoc_priv_la-mongoc-topology-description.lo src/mongoc/mongoc-topology-description.c: In function 'mongoc_topology_description_type': src/mongoc/mongoc-topology-description.c:1842:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration] assert (0); ^ CC       src/mongoc/libmongoc_priv_la-mongoc-topology-description-apm.lo CC       src/mongoc/libmongoc_priv_la-mongoc-topology-scanner.lo CC       src/mongoc/libmongoc_priv_la-mongoc-uri.lo src/mongoc/mongoc-uri.c: In function 'mongoc_uri_lowercase_hostname': src/mongoc/mongoc-uri.c:76:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration] assert (c < 128); ^ CC       src/mongoc/libmongoc_priv_la-mongoc-util.lo CC       src/mongoc/libmongoc_priv_la-mongoc-version-functions.lo CC       src/mongoc/libmongoc_priv_la-mongoc-write-command.lo CC       src/mongoc/libmongoc_priv_la-mongoc-write-concern.lo CC       src/mongoc/libmongoc_priv_la-mongoc-crypto.lo CC       src/mongoc/libmongoc_priv_la-mongoc-scram.lo CC       src/mongoc/libmongoc_priv_la-mongoc-crypto-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-rand-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-tls.lo CC       src/mongoc/libmongoc_priv_la-mongoc-ssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-tls-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-tls-openssl-bio.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cluster-sasl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-sasl.lo CCLD     libmongoc-priv.la ar: u' modifier ignored since D' is the default (see U')
CC       src/tools/mongoc_stat-mongoc-stat.o
CCLD     mongoc-stat
CC       tests/test_load-test-load.o
CC       tests/test_load-mongoc-tests.o
CCLD     test-load
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o): In function _mongoc_rpc_printf_update': mongoc-rpc.c:(.text+0x39): undefined reference to assert'
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o): In function _mongoc_rpc_printf_query': mongoc-rpc.c:(.text+0x1c9): undefined reference to assert'
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o): In function _mongoc_rpc_gather': mongoc-rpc.c:(.text+0x395): undefined reference to assert'
mongoc-rpc.c:(.text+0x39f): undefined reference to assert' mongoc-rpc.c:(.text+0x3be): undefined reference to assert'
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o):mongoc-rpc.c:(.text+0x3f2): more undefined references to `assert' follow
collect2: error: ld returned 1 exit status
Makefile:2804: recipe for target 'test-load' failed
make[1]: *** [test-load] Error 1
make[1]: Leaving directory '/home/test/Desktop/mosquitto/mongo-c-driver-1.6.1'
Makefile:5710: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1","hi i'm using ubuntu 16.04 and i try to build mongoDB C Drivere 1.6.1 but it show mw an error on the consolel:
2 make
make[1]: Entering directory '/home/test/Desktop/mosquitto/mongo-c-driver-1.6.1'
CC       src/mongoc/libmongoc_1_0_la-mongoc-apm.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-array.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-async.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-async-cmd.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-buffer.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-bulk-operation.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-b64.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-client.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-client-pool.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cluster.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cluster-sspi.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-collection.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-counters.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor-array.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor-cursorid.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor-transform.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-database.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-find-and-modify.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-host-list.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-init.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs-file.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs-file-page.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs-file-list.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-handshake.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-index.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-linux-distro-scanner.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-list.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-log.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-matcher-op.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-matcher.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-memcmp.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-opcode.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-queue.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-read-concern.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-read-prefs.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-rpc.lo
src/mongoc/op-delete.def: In function '_mongoc_rpc_gather_delete':
src/mongoc/mongoc-rpc.c:30:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration]
assert (rpc);                                                     
^
src/mongoc/op-delete.def:1:1: note: in expansion of macro 'RPC'
RPC(
^
CC       src/mongoc/libmongoc_1_0_la-mongoc-server-description.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-server-stream.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-set.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-socket.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-buffered.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-file.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-gridfs.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-socket.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology-description.lo
src/mongoc/mongoc-topology-description.c: In function 'mongoc_topology_description_type':
src/mongoc/mongoc-topology-description.c:1842:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration]
assert (0);
^
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology-description-apm.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology-scanner.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-uri.lo
src/mongoc/mongoc-uri.c: In function 'mongoc_uri_lowercase_hostname':
src/mongoc/mongoc-uri.c:76:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration]
assert (c < 128);
^
CC       src/mongoc/libmongoc_1_0_la-mongoc-util.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-version-functions.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-write-command.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-write-concern.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-crypto.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-scram.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-crypto-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-rand-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-tls.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-ssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-tls-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-tls-openssl-bio.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cluster-sasl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-sasl.lo
CCLD     libmongoc-1.0.la
ar: u' modifier ignored since D' is the default (see U') CC       src/mongoc/libmongoc_priv_la-mongoc-apm.lo CC       src/mongoc/libmongoc_priv_la-mongoc-array.lo CC       src/mongoc/libmongoc_priv_la-mongoc-async.lo CC       src/mongoc/libmongoc_priv_la-mongoc-async-cmd.lo CC       src/mongoc/libmongoc_priv_la-mongoc-buffer.lo CC       src/mongoc/libmongoc_priv_la-mongoc-bulk-operation.lo CC       src/mongoc/libmongoc_priv_la-mongoc-b64.lo CC       src/mongoc/libmongoc_priv_la-mongoc-client.lo CC       src/mongoc/libmongoc_priv_la-mongoc-client-pool.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cluster.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cluster-sspi.lo CC       src/mongoc/libmongoc_priv_la-mongoc-collection.lo CC       src/mongoc/libmongoc_priv_la-mongoc-counters.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor-array.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor-cursorid.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor-transform.lo CC       src/mongoc/libmongoc_priv_la-mongoc-database.lo CC       src/mongoc/libmongoc_priv_la-mongoc-find-and-modify.lo CC       src/mongoc/libmongoc_priv_la-mongoc-host-list.lo CC       src/mongoc/libmongoc_priv_la-mongoc-init.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs-file.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs-file-page.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs-file-list.lo CC       src/mongoc/libmongoc_priv_la-mongoc-handshake.lo CC       src/mongoc/libmongoc_priv_la-mongoc-index.lo CC       src/mongoc/libmongoc_priv_la-mongoc-linux-distro-scanner.lo CC       src/mongoc/libmongoc_priv_la-mongoc-list.lo CC       src/mongoc/libmongoc_priv_la-mongoc-log.lo CC       src/mongoc/libmongoc_priv_la-mongoc-matcher-op.lo CC       src/mongoc/libmongoc_priv_la-mongoc-matcher.lo CC       src/mongoc/libmongoc_priv_la-mongoc-memcmp.lo CC       src/mongoc/libmongoc_priv_la-mongoc-opcode.lo CC       src/mongoc/libmongoc_priv_la-mongoc-queue.lo CC       src/mongoc/libmongoc_priv_la-mongoc-read-concern.lo CC       src/mongoc/libmongoc_priv_la-mongoc-read-prefs.lo CC       src/mongoc/libmongoc_priv_la-mongoc-rpc.lo src/mongoc/op-delete.def: In function '_mongoc_rpc_gather_delete': src/mongoc/mongoc-rpc.c:30:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration] assert (rpc);                                                     \ ^ src/mongoc/op-delete.def:1:1: note: in expansion of macro 'RPC' RPC( ^ CC       src/mongoc/libmongoc_priv_la-mongoc-server-description.lo CC       src/mongoc/libmongoc_priv_la-mongoc-server-stream.lo CC       src/mongoc/libmongoc_priv_la-mongoc-set.lo CC       src/mongoc/libmongoc_priv_la-mongoc-socket.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-buffered.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-file.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-gridfs.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-socket.lo CC       src/mongoc/libmongoc_priv_la-mongoc-topology.lo CC       src/mongoc/libmongoc_priv_la-mongoc-topology-description.lo src/mongoc/mongoc-topology-description.c: In function 'mongoc_topology_description_type': src/mongoc/mongoc-topology-description.c:1842:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration] assert (0); ^ CC       src/mongoc/libmongoc_priv_la-mongoc-topology-description-apm.lo CC       src/mongoc/libmongoc_priv_la-mongoc-topology-scanner.lo CC       src/mongoc/libmongoc_priv_la-mongoc-uri.lo src/mongoc/mongoc-uri.c: In function 'mongoc_uri_lowercase_hostname': src/mongoc/mongoc-uri.c:76:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration] assert (c < 128); ^ CC       src/mongoc/libmongoc_priv_la-mongoc-util.lo CC       src/mongoc/libmongoc_priv_la-mongoc-version-functions.lo CC       src/mongoc/libmongoc_priv_la-mongoc-write-command.lo CC       src/mongoc/libmongoc_priv_la-mongoc-write-concern.lo CC       src/mongoc/libmongoc_priv_la-mongoc-crypto.lo CC       src/mongoc/libmongoc_priv_la-mongoc-scram.lo CC       src/mongoc/libmongoc_priv_la-mongoc-crypto-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-rand-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-tls.lo CC       src/mongoc/libmongoc_priv_la-mongoc-ssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-tls-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-tls-openssl-bio.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cluster-sasl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-sasl.lo CCLD     libmongoc-priv.la ar: u' modifier ignored since D' is the default (see U')
CC       src/tools/mongoc_stat-mongoc-stat.o
CCLD     mongoc-stat
CC       tests/test_load-test-load.o
CC       tests/test_load-mongoc-tests.o
CCLD     test-load
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o): In function _mongoc_rpc_printf_update': mongoc-rpc.c:(.text+0x39): undefined reference to assert'
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o): In function _mongoc_rpc_printf_query': mongoc-rpc.c:(.text+0x1c9): undefined reference to assert'
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o): In function _mongoc_rpc_gather': mongoc-rpc.c:(.text+0x395): undefined reference to assert'
mongoc-rpc.c:(.text+0x39f): undefined reference to assert' mongoc-rpc.c:(.text+0x3be): undefined reference to assert'
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o):mongoc-rpc.c:(.text+0x3f2): more undefined references to `assert' follow
collect2: error: ld returned 1 exit status
Makefile:2804: recipe for target 'test-load' failed
make[1]: *** [test-load] Error 1
make[1]: Leaving directory '/home/test/Desktop/mosquitto/mongo-c-driver-1.6.1'
Makefile:5710: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,429,2017-03-23T11:51:59Z,2017-03-23T14:49:56Z,2017-03-23T14:50:39Z,CLOSED,False,532,0,26,https://github.com/kSuccess,Debian,218,[],https://github.com/mongodb/mongo-c-driver/pull/429,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/429#issuecomment-288743568,"hi i'm using ubuntu 16.04 and i try to build mongoDB C Drivere 1.6.1 but it show mw an error on the consolel:
2 make
make[1]: Entering directory '/home/test/Desktop/mosquitto/mongo-c-driver-1.6.1'
CC       src/mongoc/libmongoc_1_0_la-mongoc-apm.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-array.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-async.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-async-cmd.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-buffer.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-bulk-operation.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-b64.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-client.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-client-pool.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cluster.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cluster-sspi.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-collection.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-counters.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor-array.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor-cursorid.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cursor-transform.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-database.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-find-and-modify.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-host-list.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-init.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs-file.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs-file-page.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-gridfs-file-list.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-handshake.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-index.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-linux-distro-scanner.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-list.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-log.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-matcher-op.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-matcher.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-memcmp.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-opcode.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-queue.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-read-concern.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-read-prefs.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-rpc.lo
src/mongoc/op-delete.def: In function '_mongoc_rpc_gather_delete':
src/mongoc/mongoc-rpc.c:30:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration]
assert (rpc);                                                     
^
src/mongoc/op-delete.def:1:1: note: in expansion of macro 'RPC'
RPC(
^
CC       src/mongoc/libmongoc_1_0_la-mongoc-server-description.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-server-stream.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-set.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-socket.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-buffered.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-file.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-gridfs.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-socket.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology-description.lo
src/mongoc/mongoc-topology-description.c: In function 'mongoc_topology_description_type':
src/mongoc/mongoc-topology-description.c:1842:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration]
assert (0);
^
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology-description-apm.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-topology-scanner.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-uri.lo
src/mongoc/mongoc-uri.c: In function 'mongoc_uri_lowercase_hostname':
src/mongoc/mongoc-uri.c:76:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration]
assert (c < 128);
^
CC       src/mongoc/libmongoc_1_0_la-mongoc-util.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-version-functions.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-write-command.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-write-concern.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-crypto.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-scram.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-crypto-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-rand-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-tls.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-ssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-tls-openssl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-stream-tls-openssl-bio.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-cluster-sasl.lo
CC       src/mongoc/libmongoc_1_0_la-mongoc-sasl.lo
CCLD     libmongoc-1.0.la
ar: u' modifier ignored since D' is the default (see U') CC       src/mongoc/libmongoc_priv_la-mongoc-apm.lo CC       src/mongoc/libmongoc_priv_la-mongoc-array.lo CC       src/mongoc/libmongoc_priv_la-mongoc-async.lo CC       src/mongoc/libmongoc_priv_la-mongoc-async-cmd.lo CC       src/mongoc/libmongoc_priv_la-mongoc-buffer.lo CC       src/mongoc/libmongoc_priv_la-mongoc-bulk-operation.lo CC       src/mongoc/libmongoc_priv_la-mongoc-b64.lo CC       src/mongoc/libmongoc_priv_la-mongoc-client.lo CC       src/mongoc/libmongoc_priv_la-mongoc-client-pool.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cluster.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cluster-sspi.lo CC       src/mongoc/libmongoc_priv_la-mongoc-collection.lo CC       src/mongoc/libmongoc_priv_la-mongoc-counters.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor-array.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor-cursorid.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cursor-transform.lo CC       src/mongoc/libmongoc_priv_la-mongoc-database.lo CC       src/mongoc/libmongoc_priv_la-mongoc-find-and-modify.lo CC       src/mongoc/libmongoc_priv_la-mongoc-host-list.lo CC       src/mongoc/libmongoc_priv_la-mongoc-init.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs-file.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs-file-page.lo CC       src/mongoc/libmongoc_priv_la-mongoc-gridfs-file-list.lo CC       src/mongoc/libmongoc_priv_la-mongoc-handshake.lo CC       src/mongoc/libmongoc_priv_la-mongoc-index.lo CC       src/mongoc/libmongoc_priv_la-mongoc-linux-distro-scanner.lo CC       src/mongoc/libmongoc_priv_la-mongoc-list.lo CC       src/mongoc/libmongoc_priv_la-mongoc-log.lo CC       src/mongoc/libmongoc_priv_la-mongoc-matcher-op.lo CC       src/mongoc/libmongoc_priv_la-mongoc-matcher.lo CC       src/mongoc/libmongoc_priv_la-mongoc-memcmp.lo CC       src/mongoc/libmongoc_priv_la-mongoc-opcode.lo CC       src/mongoc/libmongoc_priv_la-mongoc-queue.lo CC       src/mongoc/libmongoc_priv_la-mongoc-read-concern.lo CC       src/mongoc/libmongoc_priv_la-mongoc-read-prefs.lo CC       src/mongoc/libmongoc_priv_la-mongoc-rpc.lo src/mongoc/op-delete.def: In function '_mongoc_rpc_gather_delete': src/mongoc/mongoc-rpc.c:30:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration] assert (rpc);                                                     \ ^ src/mongoc/op-delete.def:1:1: note: in expansion of macro 'RPC' RPC( ^ CC       src/mongoc/libmongoc_priv_la-mongoc-server-description.lo CC       src/mongoc/libmongoc_priv_la-mongoc-server-stream.lo CC       src/mongoc/libmongoc_priv_la-mongoc-set.lo CC       src/mongoc/libmongoc_priv_la-mongoc-socket.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-buffered.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-file.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-gridfs.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-socket.lo CC       src/mongoc/libmongoc_priv_la-mongoc-topology.lo CC       src/mongoc/libmongoc_priv_la-mongoc-topology-description.lo src/mongoc/mongoc-topology-description.c: In function 'mongoc_topology_description_type': src/mongoc/mongoc-topology-description.c:1842:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration] assert (0); ^ CC       src/mongoc/libmongoc_priv_la-mongoc-topology-description-apm.lo CC       src/mongoc/libmongoc_priv_la-mongoc-topology-scanner.lo CC       src/mongoc/libmongoc_priv_la-mongoc-uri.lo src/mongoc/mongoc-uri.c: In function 'mongoc_uri_lowercase_hostname': src/mongoc/mongoc-uri.c:76:7: warning: implicit declaration of function 'assert' [-Wimplicit-function-declaration] assert (c < 128); ^ CC       src/mongoc/libmongoc_priv_la-mongoc-util.lo CC       src/mongoc/libmongoc_priv_la-mongoc-version-functions.lo CC       src/mongoc/libmongoc_priv_la-mongoc-write-command.lo CC       src/mongoc/libmongoc_priv_la-mongoc-write-concern.lo CC       src/mongoc/libmongoc_priv_la-mongoc-crypto.lo CC       src/mongoc/libmongoc_priv_la-mongoc-scram.lo CC       src/mongoc/libmongoc_priv_la-mongoc-crypto-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-rand-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-tls.lo CC       src/mongoc/libmongoc_priv_la-mongoc-ssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-tls-openssl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-stream-tls-openssl-bio.lo CC       src/mongoc/libmongoc_priv_la-mongoc-cluster-sasl.lo CC       src/mongoc/libmongoc_priv_la-mongoc-sasl.lo CCLD     libmongoc-priv.la ar: u' modifier ignored since D' is the default (see U')
CC       src/tools/mongoc_stat-mongoc-stat.o
CCLD     mongoc-stat
CC       tests/test_load-test-load.o
CC       tests/test_load-mongoc-tests.o
CCLD     test-load
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o): In function _mongoc_rpc_printf_update': mongoc-rpc.c:(.text+0x39): undefined reference to assert'
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o): In function _mongoc_rpc_printf_query': mongoc-rpc.c:(.text+0x1c9): undefined reference to assert'
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o): In function _mongoc_rpc_gather': mongoc-rpc.c:(.text+0x395): undefined reference to assert'
mongoc-rpc.c:(.text+0x39f): undefined reference to assert' mongoc-rpc.c:(.text+0x3be): undefined reference to assert'
./.libs/libmongoc-priv.a(libmongoc_priv_la-mongoc-rpc.o):mongoc-rpc.c:(.text+0x3f2): more undefined references to `assert' follow
collect2: error: ld returned 1 exit status
Makefile:2804: recipe for target 'test-load' failed
make[1]: *** [test-load] Error 1
make[1]: Leaving directory '/home/test/Desktop/mosquitto/mongo-c-driver-1.6.1'
Makefile:5710: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1","You may be hitting this bug which was present in our code base for a few days:
https://jira.mongodb.org/browse/CDRIVER-2079
Please comment on that ticket if you still have trouble building either version 1.6.1 or the current master branch.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,430,2017-03-27T13:12:25Z,2017-03-27T16:09:52Z,2017-03-27T16:09:52Z,MERGED,True,53,8,5,https://github.com/xdg,CDRIVER-2093 fix cursor is_alive and more,1,[],https://github.com/mongodb/mongo-c-driver/pull/430,https://github.com/xdg,1,https://github.com/mongodb/mongo-c-driver/pull/430,"Apparently, I don't have push permissions.","Apparently, I don't have push permissions.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,431,2017-03-28T18:43:11Z,2017-03-28T18:46:10Z,2017-03-28T19:01:16Z,MERGED,True,1,1,1,https://github.com/jmikola,Supply description argument to AC_DEFINE,1,[],https://github.com/mongodb/mongo-c-driver/pull/431,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/431,"This avoids a possible autoheader warning when calling AC_DEFINE with less than three arguments.
See: https://lists.gnu.org/archive/html/autoconf/2009-04/msg00087.html
This resolves an issue when including this m4 file in the PHP driver:
$ phpize
Configuring for:
PHP Api Version:         20131106
Zend Module Api No:      20131226
Zend Extension Api No:   220131226
autoheader: warning: missing template: ACCEPT_ARG2
autoheader: Use AC_DEFINE([ACCEPT_ARG2], [], [Description])
autoheader: warning: missing template: ACCEPT_ARG3

If it's relevant, my environment was using autoheader 2.6.9.
Related to: 6375730","This avoids a possible autoheader warning when calling AC_DEFINE with less than three arguments.
See: https://lists.gnu.org/archive/html/autoconf/2009-04/msg00087.html
This resolves an issue when including this m4 file in the PHP driver:
$ phpize
Configuring for:
PHP Api Version:         20131106
Zend Module Api No:      20131226
Zend Extension Api No:   220131226
autoheader: warning: missing template: ACCEPT_ARG2
autoheader: Use AC_DEFINE([ACCEPT_ARG2], [], [Description])
autoheader: warning: missing template: ACCEPT_ARG3

If it's relevant, my environment was using autoheader 2.6.9.
Related to: 6375730",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,432,2017-04-06T18:07:29Z,2017-04-06T18:13:10Z,2017-04-06T18:13:16Z,MERGED,True,1,1,1,https://github.com/xdg,Fix link in mongoc_bulk_operation_update_one_with_opts docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/432,https://github.com/xdg,1,https://github.com/mongodb/mongo-c-driver/pull/432,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,432,2017-04-06T18:07:29Z,2017-04-06T18:13:10Z,2017-04-06T18:13:16Z,MERGED,True,1,1,1,https://github.com/xdg,Fix link in mongoc_bulk_operation_update_one_with_opts docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/432,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/432#issuecomment-292260978,,Thanks :),True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,433,2017-04-14T17:19:35Z,2017-04-26T10:19:53Z,2017-04-26T10:19:53Z,CLOSED,False,96,153,12,https://github.com/xdg,CDRIVER-2083 use target_compile_definitions,8,[],https://github.com/mongodb/mongo-c-driver/pull/433,https://github.com/xdg,1,https://github.com/mongodb/mongo-c-driver/pull/433,"add_definitions() has global effect, so isn't good to include
in a .cmake file.  This commit instead publishes the definitions in a
variable and lets consumers set it on a target the same way they set
library/include paths.
mongocxx (and maybe the PHP driver) will need a corresponding update.","add_definitions() has global effect, so isn't good to include
in a .cmake file.  This commit instead publishes the definitions in a
variable and lets consumers set it on a target the same way they set
library/include paths.
mongocxx (and maybe the PHP driver) will need a corresponding update.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,433,2017-04-14T17:19:35Z,2017-04-26T10:19:53Z,2017-04-26T10:19:53Z,CLOSED,False,96,153,12,https://github.com/xdg,CDRIVER-2083 use target_compile_definitions,8,[],https://github.com/mongodb/mongo-c-driver/pull/433,https://github.com/xdg,2,https://github.com/mongodb/mongo-c-driver/pull/433#issuecomment-294195324,"add_definitions() has global effect, so isn't good to include
in a .cmake file.  This commit instead publishes the definitions in a
variable and lets consumers set it on a target the same way they set
library/include paths.
mongocxx (and maybe the PHP driver) will need a corresponding update.","I did not test this in Evergreen as the libbson change wouldn't be available, but I did test it locally.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,434,2017-04-17T18:00:34Z,2017-04-17T18:11:50Z,2017-04-17T18:44:57Z,MERGED,True,7,30,1,https://github.com/jmikola,Remove unnecessary string comparisons in mongoc_uri_option_is_utf8(),1,[],https://github.com/mongodb/mongo-c-driver/pull/434,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/434,"The default return was changed to false in 16d03dc, which means we need only check for known options.","The default return was changed to false in 16d03dc, which means we need only check for known options.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,434,2017-04-17T18:00:34Z,2017-04-17T18:11:50Z,2017-04-17T18:44:57Z,MERGED,True,7,30,1,https://github.com/jmikola,Remove unnecessary string comparisons in mongoc_uri_option_is_utf8(),1,[],https://github.com/mongodb/mongo-c-driver/pull/434,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/434#issuecomment-294547519,"The default return was changed to false in 16d03dc, which means we need only check for known options.","heh. Nice catch, thanks!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,435,2017-04-25T19:22:34Z,2017-04-25T20:48:26Z,2017-04-25T22:23:24Z,MERGED,True,6,2,1,https://github.com/jmikola,CDRIVER-2141: Set error if authSource is invalid GSSAPI and X509,1,[],https://github.com/mongodb/mongo-c-driver/pull/435,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/435,https://jira.mongodb.org/browse/CDRIVER-2142,https://jira.mongodb.org/browse/CDRIVER-2142,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,435,2017-04-25T19:22:34Z,2017-04-25T20:48:26Z,2017-04-25T22:23:24Z,MERGED,True,6,2,1,https://github.com/jmikola,CDRIVER-2141: Set error if authSource is invalid GSSAPI and X509,1,[],https://github.com/mongodb/mongo-c-driver/pull/435,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/435#issuecomment-297160304,https://jira.mongodb.org/browse/CDRIVER-2142,Looks good. Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,436,2017-06-13T20:49:24Z,2017-06-15T04:02:03Z,2017-06-15T04:02:03Z,CLOSED,False,7,0,1,https://github.com/devnexen,"In *BSD platforms, using seedless arc4random* function,",1,[],https://github.com/mongodb/mongo-c-driver/pull/436,https://github.com/devnexen,1,https://github.com/mongodb/mongo-c-driver/pull/436,here for the simple random function.,here for the simple random function.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,436,2017-06-13T20:49:24Z,2017-06-15T04:02:03Z,2017-06-15T04:02:03Z,CLOSED,False,7,0,1,https://github.com/devnexen,"In *BSD platforms, using seedless arc4random* function,",1,[],https://github.com/mongodb/mongo-c-driver/pull/436,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/436#issuecomment-308616842,here for the simple random function.,"Thanks! Can you tell me please, why is this an improvement over rand_r?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,436,2017-06-13T20:49:24Z,2017-06-15T04:02:03Z,2017-06-15T04:02:03Z,CLOSED,False,7,0,1,https://github.com/devnexen,"In *BSD platforms, using seedless arc4random* function,",1,[],https://github.com/mongodb/mongo-c-driver/pull/436,https://github.com/devnexen,3,https://github.com/mongodb/mongo-c-driver/pull/436#issuecomment-308619381,here for the simple random function.,Basically better randomisation distribution and range.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,436,2017-06-13T20:49:24Z,2017-06-15T04:02:03Z,2017-06-15T04:02:03Z,CLOSED,False,7,0,1,https://github.com/devnexen,"In *BSD platforms, using seedless arc4random* function,",1,[],https://github.com/mongodb/mongo-c-driver/pull/436,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/436#issuecomment-308622422,here for the simple random function.,Thanks for explaining. I'm not going to accept this change. The wrapper function _mongoc_rand_simple is only used to randomly distribute queries among a small number of servers (typically two or three of them) so the most important thing is to keep the code simple and portable.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,437,2017-09-06T20:01:26Z,2017-09-06T20:02:22Z,2017-09-06T20:02:31Z,MERGED,True,351,321,17,https://github.com/kevinAlbs,CDRIVER-2103 Merge find-and-modify examples,1,[],https://github.com/mongodb/mongo-c-driver/pull/437,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/437,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,437,2017-09-06T20:01:26Z,2017-09-06T20:02:22Z,2017-09-06T20:02:31Z,MERGED,True,351,321,17,https://github.com/kevinAlbs,CDRIVER-2103 Merge find-and-modify examples,1,[],https://github.com/mongodb/mongo-c-driver/pull/437,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/437#issuecomment-327597072,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,438,2017-09-11T13:17:37Z,2017-09-11T14:40:05Z,2017-09-11T14:40:10Z,MERGED,True,81,25,2,https://github.com/kevinAlbs,CDRIVER-2234 Add error message for write concern during URI parse,1,[],https://github.com/mongodb/mongo-c-driver/pull/438,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/438,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,438,2017-09-11T13:17:37Z,2017-09-11T14:40:05Z,2017-09-11T14:40:10Z,MERGED,True,81,25,2,https://github.com/kevinAlbs,CDRIVER-2234 Add error message for write concern during URI parse,1,[],https://github.com/mongodb/mongo-c-driver/pull/438,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/438#issuecomment-328550512,,Thank you.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,439,2017-09-11T17:39:02Z,2017-09-11T18:46:10Z,2017-09-11T18:46:10Z,MERGED,True,19,5,2,https://github.com/kevinAlbs,CDRIVER-2262 Implement database enumeration spec,1,[],https://github.com/mongodb/mongo-c-driver/pull/439,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/439,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,440,2017-09-15T05:32:19Z,2017-10-10T15:48:03Z,2017-10-10T15:48:18Z,MERGED,True,3,2,1,https://github.com/AlexMasterov,Add the missing CMake LIBRESSL option,1,[],https://github.com/mongodb/mongo-c-driver/pull/440,https://github.com/AlexMasterov,1,https://github.com/mongodb/mongo-c-driver/pull/440,"Unable to configure against LibreSSL on Alpine.
cmake -DENABLE_SSL=LIBRESSL
CMake Error at CMakeLists.txt:9 (_message):   
    ENABLE_SSL option must be DARWIN, WINDOWS, OPENSSL, AUTO, or OFF
1.8.0/CMakeLists.txt#L113-L115:
if (ENABLE_SSL STREQUAL LIBRESSL)
  set (LIBRESSL 1)
endif ()
This condition will never be executed.","Unable to configure against LibreSSL on Alpine.
cmake -DENABLE_SSL=LIBRESSL
CMake Error at CMakeLists.txt:9 (_message):   
    ENABLE_SSL option must be DARWIN, WINDOWS, OPENSSL, AUTO, or OFF
1.8.0/CMakeLists.txt#L113-L115:
if (ENABLE_SSL STREQUAL LIBRESSL)
  set (LIBRESSL 1)
endif ()
This condition will never be executed.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,440,2017-09-15T05:32:19Z,2017-10-10T15:48:03Z,2017-10-10T15:48:18Z,MERGED,True,3,2,1,https://github.com/AlexMasterov,Add the missing CMake LIBRESSL option,1,[],https://github.com/mongodb/mongo-c-driver/pull/440,https://github.com/bjori,2,https://github.com/mongodb/mongo-c-driver/pull/440#issuecomment-329888311,"Unable to configure against LibreSSL on Alpine.
cmake -DENABLE_SSL=LIBRESSL
CMake Error at CMakeLists.txt:9 (_message):   
    ENABLE_SSL option must be DARWIN, WINDOWS, OPENSSL, AUTO, or OFF
1.8.0/CMakeLists.txt#L113-L115:
if (ENABLE_SSL STREQUAL LIBRESSL)
  set (LIBRESSL 1)
endif ()
This condition will never be executed.","oh. whops.
Note that I strongly suggest you use the normal auto* routine instead, (e.g. ./configure --enable-ssl=libressl since that is the configuration we have in our CI
I've filed a ticket for this in our JIRA: https://jira.mongodb.org/browse/CDRIVER-2289",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,440,2017-09-15T05:32:19Z,2017-10-10T15:48:03Z,2017-10-10T15:48:18Z,MERGED,True,3,2,1,https://github.com/AlexMasterov,Add the missing CMake LIBRESSL option,1,[],https://github.com/mongodb/mongo-c-driver/pull/440,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/440#issuecomment-335517248,"Unable to configure against LibreSSL on Alpine.
cmake -DENABLE_SSL=LIBRESSL
CMake Error at CMakeLists.txt:9 (_message):   
    ENABLE_SSL option must be DARWIN, WINDOWS, OPENSSL, AUTO, or OFF
1.8.0/CMakeLists.txt#L113-L115:
if (ENABLE_SSL STREQUAL LIBRESSL)
  set (LIBRESSL 1)
endif ()
This condition will never be executed.","Thanks for this contribution! We'll take a look soon, sorry for the delay.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,440,2017-09-15T05:32:19Z,2017-10-10T15:48:03Z,2017-10-10T15:48:18Z,MERGED,True,3,2,1,https://github.com/AlexMasterov,Add the missing CMake LIBRESSL option,1,[],https://github.com/mongodb/mongo-c-driver/pull/440,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/440#issuecomment-335518045,"Unable to configure against LibreSSL on Alpine.
cmake -DENABLE_SSL=LIBRESSL
CMake Error at CMakeLists.txt:9 (_message):   
    ENABLE_SSL option must be DARWIN, WINDOWS, OPENSSL, AUTO, or OFF
1.8.0/CMakeLists.txt#L113-L115:
if (ENABLE_SSL STREQUAL LIBRESSL)
  set (LIBRESSL 1)
endif ()
This condition will never be executed.","Actually, now that I look it's clear this is an improvement. Thank you.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,441,2017-09-15T19:19:38Z,2017-09-15T19:39:02Z,2017-09-15T19:43:10Z,MERGED,True,6,3,2,https://github.com/kevinAlbs,Fix typos,1,[],https://github.com/mongodb/mongo-c-driver/pull/441,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/441,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,441,2017-09-15T19:19:38Z,2017-09-15T19:39:02Z,2017-09-15T19:43:10Z,MERGED,True,6,3,2,https://github.com/kevinAlbs,Fix typos,1,[],https://github.com/mongodb/mongo-c-driver/pull/441,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/441#issuecomment-329880902,,Thank you.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,442,2017-09-19T01:46:33Z,2017-09-19T13:59:01Z,2017-09-19T13:59:01Z,MERGED,True,358,0,16,https://github.com/kevinAlbs,CDRIVER-2233 Add interface for change streams,1,[],https://github.com/mongodb/mongo-c-driver/pull/442,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/442,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,443,2017-09-19T22:08:00Z,2017-09-20T12:02:18Z,2017-09-20T12:02:18Z,MERGED,True,6,5,3,https://github.com/kevinAlbs,CDRIVER-2233 Fix typedef redefinition,1,[],https://github.com/mongodb/mongo-c-driver/pull/443,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/443,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,444,2017-09-22T15:25:11Z,2017-09-22T16:29:39Z,2017-09-22T16:30:04Z,MERGED,True,3,3,1,https://github.com/jmikola,CDRIVER-2297: Space out parents to avoid unterminated string error,1,[],https://github.com/mongodb/mongo-c-driver/pull/444,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/444,https://jira.mongodb.org/browse/CDRIVER-2297,https://jira.mongodb.org/browse/CDRIVER-2297,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,444,2017-09-22T15:25:11Z,2017-09-22T16:29:39Z,2017-09-22T16:30:04Z,MERGED,True,3,3,1,https://github.com/jmikola,CDRIVER-2297: Space out parents to avoid unterminated string error,1,[],https://github.com/mongodb/mongo-c-driver/pull/444,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/444#issuecomment-331479558,https://jira.mongodb.org/browse/CDRIVER-2297,"""Space out parens"", otherwise LGTM",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,445,2017-09-27T14:21:12Z,2017-09-27T14:23:08Z,2017-09-27T14:23:08Z,CLOSED,False,360,65,17,https://github.com/kevinAlbs,CDRIVER-2233 add change stream implementation,1,[],https://github.com/mongodb/mongo-c-driver/pull/445,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/445,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,445,2017-09-27T14:21:12Z,2017-09-27T14:23:08Z,2017-09-27T14:23:08Z,CLOSED,False,360,65,17,https://github.com/kevinAlbs,CDRIVER-2233 add change stream implementation,1,[],https://github.com/mongodb/mongo-c-driver/pull/445,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/445#issuecomment-332537843,,"Sorry, actually I'll just make one pull request with both impl and tests",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,446,2017-09-27T14:23:55Z,2017-09-27T16:22:49Z,2017-09-27T16:22:56Z,MERGED,True,1621,65,29,https://github.com/kevinAlbs,add change stream implementation and tests,2,[],https://github.com/mongodb/mongo-c-driver/pull/446,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/446,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,446,2017-09-27T14:23:55Z,2017-09-27T16:22:49Z,2017-09-27T16:22:56Z,MERGED,True,1621,65,29,https://github.com/kevinAlbs,add change stream implementation and tests,2,[],https://github.com/mongodb/mongo-c-driver/pull/446,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/446#issuecomment-332577234,,Excellent!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,447,2017-10-02T13:51:18Z,2017-10-02T15:51:44Z,2017-10-02T15:51:44Z,MERGED,True,178,112,5,https://github.com/kevinAlbs,CDRIVER-2233 change stream watch runs agg cmd,1,[],https://github.com/mongodb/mongo-c-driver/pull/447,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/447,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,448,2017-10-03T14:55:13Z,2017-10-03T15:32:33Z,2017-10-03T15:32:33Z,MERGED,True,151,0,4,https://github.com/kevinAlbs,CDRIVER-2205 add docs for new update fns,1,[],https://github.com/mongodb/mongo-c-driver/pull/448,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/448,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,449,2017-10-05T14:02:02Z,2017-10-05T15:15:11Z,2017-10-05T15:15:11Z,MERGED,True,336,33,9,https://github.com/kevinAlbs,CDRIVER-2205 add update with opts functions,1,[],https://github.com/mongodb/mongo-c-driver/pull/449,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/449,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,450,2017-10-07T03:23:29Z,2017-10-07T03:24:54Z,2017-10-07T03:24:54Z,CLOSED,False,0,0,0,https://github.com/duyouqian,Merge pull request #1 from mongodb/master,1,[],https://github.com/mongodb/mongo-c-driver/pull/450,https://github.com/duyouqian,1,https://github.com/mongodb/mongo-c-driver/pull/450,merge,merge,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,451,2017-10-09T13:21:28Z,2017-10-09T14:35:04Z,2017-10-09T14:35:04Z,MERGED,True,25,14,1,https://github.com/kevinAlbs,CDRIVER-2233 do not inspect resumeToken in tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/451,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/451,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,452,2017-10-09T19:34:37Z,2017-10-09T20:11:38Z,2017-10-09T20:11:42Z,MERGED,True,6,0,1,https://github.com/kevinAlbs,add future timeout to contributing.md,1,[],https://github.com/mongodb/mongo-c-driver/pull/452,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/452,Let me know if the wording should be changed.,Let me know if the wording should be changed.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,452,2017-10-09T19:34:37Z,2017-10-09T20:11:38Z,2017-10-09T20:11:42Z,MERGED,True,6,0,1,https://github.com/kevinAlbs,add future timeout to contributing.md,1,[],https://github.com/mongodb/mongo-c-driver/pull/452,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/452#issuecomment-335272521,Let me know if the wording should be changed.,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,453,2017-10-10T12:49:42Z,2017-10-10T13:07:59Z,2017-10-10T13:07:59Z,MERGED,True,287,1,3,https://github.com/kevinAlbs,CDRIVER-2205 test update and replace with opts,1,[],https://github.com/mongodb/mongo-c-driver/pull/453,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/453,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,454,2017-10-11T13:13:20Z,2017-10-11T23:50:20Z,2017-10-11T23:50:20Z,MERGED,True,10,8,1,https://github.com/kevinAlbs,CDRIVER-2205 fix wc on update_and_replace tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/454,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/454,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,455,2017-10-13T13:06:52Z,2017-10-13T16:41:13Z,2017-10-13T16:41:13Z,MERGED,True,48,31,6,https://github.com/kevinAlbs,CDRIVER-2308 fix leaks found from live tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/455,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/455,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,455,2017-10-13T13:06:52Z,2017-10-13T16:41:13Z,2017-10-13T16:41:13Z,MERGED,True,48,31,6,https://github.com/kevinAlbs,CDRIVER-2308 fix leaks found from live tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/455,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/455#issuecomment-336450388,,"Closing this, I ran into a suspicious looking error in replset auth tests when testing the new evergreen tasks, and I'm investigating whether this introduced an issue. After I figure that out I'll open a new PR.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,455,2017-10-13T13:06:52Z,2017-10-13T16:41:13Z,2017-10-13T16:41:13Z,MERGED,True,48,31,6,https://github.com/kevinAlbs,CDRIVER-2308 fix leaks found from live tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/455,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/455#issuecomment-336504702,,Is this good to merge now?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,455,2017-10-13T13:06:52Z,2017-10-13T16:41:13Z,2017-10-13T16:41:13Z,MERGED,True,48,31,6,https://github.com/kevinAlbs,CDRIVER-2308 fix leaks found from live tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/455,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/455#issuecomment-336504869,,"Oh I see your comment about unrelated failures, merging this now.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,456,2017-10-13T14:58:17Z,2017-10-16T09:53:35Z,2017-10-16T09:53:35Z,CLOSED,False,2,2,1,https://github.com/derickr,CXX-2326 Can't disable zlib with --with-zlib=no,1,[],https://github.com/mongodb/mongo-c-driver/pull/456,https://github.com/derickr,1,https://github.com/mongodb/mongo-c-driver/pull/456,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,456,2017-10-13T14:58:17Z,2017-10-16T09:53:35Z,2017-10-16T09:53:35Z,CLOSED,False,2,2,1,https://github.com/derickr,CXX-2326 Can't disable zlib with --with-zlib=no,1,[],https://github.com/mongodb/mongo-c-driver/pull/456,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/456#issuecomment-336504002,,"Great, LGTM. Please merge to master instead.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,456,2017-10-13T14:58:17Z,2017-10-16T09:53:35Z,2017-10-16T09:53:35Z,CLOSED,False,2,2,1,https://github.com/derickr,CXX-2326 Can't disable zlib with --with-zlib=no,1,[],https://github.com/mongodb/mongo-c-driver/pull/456,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/456#issuecomment-336504314,,Derick you have permission to commit directly to master so please commit it there and cherry-pick to the r1.8 branch. Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,456,2017-10-13T14:58:17Z,2017-10-16T09:53:35Z,2017-10-16T09:53:35Z,CLOSED,False,2,2,1,https://github.com/derickr,CXX-2326 Can't disable zlib with --with-zlib=no,1,[],https://github.com/mongodb/mongo-c-driver/pull/456,https://github.com/derickr,4,https://github.com/mongodb/mongo-c-driver/pull/456#issuecomment-336838067,,"Merged, and cherry-picked.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,457,2017-10-13T15:00:44Z,2017-10-16T16:11:05Z,2017-10-16T16:11:13Z,MERGED,True,2,0,1,https://github.com/derickr,CXX-2324 'test-mongoc-topology.c' does not compile if ENABLE_COMPRESSION is not set,1,[],https://github.com/mongodb/mongo-c-driver/pull/457,https://github.com/derickr,1,https://github.com/mongodb/mongo-c-driver/pull/457,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,457,2017-10-13T15:00:44Z,2017-10-16T16:11:05Z,2017-10-16T16:11:13Z,MERGED,True,2,0,1,https://github.com/derickr,CXX-2324 'test-mongoc-topology.c' does not compile if ENABLE_COMPRESSION is not set,1,[],https://github.com/mongodb/mongo-c-driver/pull/457,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/457#issuecomment-336496365,,"LGTM, but could you open this against master, please, not r1.8? All development happens on master. If we discover a bug introduced by 1.8.0, we fix it on master and cherry-pick the relevant commits from master to the r1.8 branch, then release 1.8.x.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,457,2017-10-13T15:00:44Z,2017-10-16T16:11:05Z,2017-10-16T16:11:13Z,MERGED,True,2,0,1,https://github.com/derickr,CXX-2324 'test-mongoc-topology.c' does not compile if ENABLE_COMPRESSION is not set,1,[],https://github.com/mongodb/mongo-c-driver/pull/457,https://github.com/derickr,3,https://github.com/mongodb/mongo-c-driver/pull/457#issuecomment-336889408,,Done,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,457,2017-10-13T15:00:44Z,2017-10-16T16:11:05Z,2017-10-16T16:11:13Z,MERGED,True,2,0,1,https://github.com/derickr,CXX-2324 'test-mongoc-topology.c' does not compile if ENABLE_COMPRESSION is not set,1,[],https://github.com/mongodb/mongo-c-driver/pull/457,https://github.com/derickr,4,https://github.com/mongodb/mongo-c-driver/pull/457#issuecomment-336933796,,"Turns out that this is wrong, and that it only should be done for r1.8, as in master it has already been removed in d35a67a:
commit d35a67a404e3311257b7ad331e4f12d69ce5ec04
Author: Hannes Magnusson <bjori@php.net>
Date:   Fri Aug 25 10:40:24 2017 -0700

    CDRIVER-2219 Remove compression check as we support noop compressor too

I will swap it back so that this PR is against r1.8 again.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,457,2017-10-13T15:00:44Z,2017-10-16T16:11:05Z,2017-10-16T16:11:13Z,MERGED,True,2,0,1,https://github.com/derickr,CXX-2324 'test-mongoc-topology.c' does not compile if ENABLE_COMPRESSION is not set,1,[],https://github.com/mongodb/mongo-c-driver/pull/457,https://github.com/derickr,5,https://github.com/mongodb/mongo-c-driver/pull/457#issuecomment-336934966,,Done,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,457,2017-10-13T15:00:44Z,2017-10-16T16:11:05Z,2017-10-16T16:11:13Z,MERGED,True,2,0,1,https://github.com/derickr,CXX-2324 'test-mongoc-topology.c' does not compile if ENABLE_COMPRESSION is not set,1,[],https://github.com/mongodb/mongo-c-driver/pull/457,https://github.com/ajdavis,6,https://github.com/mongodb/mongo-c-driver/pull/457#issuecomment-336936875,,Oh good. Sorry for my mistake.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,458,2017-10-18T14:44:47Z,2017-10-18T15:08:22Z,2017-10-18T15:08:22Z,MERGED,True,671,3,5,https://github.com/kevinAlbs,add valgrind live tests and update gitignore,2,[],https://github.com/mongodb/mongo-c-driver/pull/458,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/458,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,459,2017-11-07T01:48:44Z,2017-11-07T02:45:46Z,2017-11-07T05:22:33Z,MERGED,True,9,8,1,https://github.com/kallimachos,CDRIVER-2345 Update connection URL for GSSAPI auth,1,[],https://github.com/mongodb/mongo-c-driver/pull/459,https://github.com/kallimachos,1,https://github.com/mongodb/mongo-c-driver/pull/459,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,459,2017-11-07T01:48:44Z,2017-11-07T02:45:46Z,2017-11-07T05:22:33Z,MERGED,True,9,8,1,https://github.com/kallimachos,CDRIVER-2345 Update connection URL for GSSAPI auth,1,[],https://github.com/mongodb/mongo-c-driver/pull/459,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/459#issuecomment-342358542,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,460,2017-11-13T10:31:46Z,2017-11-13T15:00:24Z,2017-11-13T15:00:24Z,MERGED,True,1,1,1,https://github.com/derickr,Fixed compilation with tracing enabled,1,[],https://github.com/mongodb/mongo-c-driver/pull/460,https://github.com/derickr,1,https://github.com/mongodb/mongo-c-driver/pull/460,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,461,2017-11-14T14:07:09Z,2017-11-14T14:09:22Z,2017-11-14T14:09:26Z,MERGED,True,4,4,1,https://github.com/derickr,remove dot at end of sentence in new error message,1,[],https://github.com/mongodb/mongo-c-driver/pull/461,https://github.com/derickr,1,https://github.com/mongodb/mongo-c-driver/pull/461,"This suddenly started creating ""double dots"" in the the PHP driver:
006+ Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=-1&journal=true'. Journal conflicts with w value [w=-1]..
006- Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=-1&journal=true'. Invalid writeConcern.
008+ Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=0&journal=true'. Journal conflicts with w value [w=0]..
008- Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=0&journal=true'. Invalid writeConcern.","This suddenly started creating ""double dots"" in the the PHP driver:
006+ Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=-1&journal=true'. Journal conflicts with w value [w=-1]..
006- Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=-1&journal=true'. Invalid writeConcern.
008+ Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=0&journal=true'. Journal conflicts with w value [w=0]..
008- Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=0&journal=true'. Invalid writeConcern.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,461,2017-11-14T14:07:09Z,2017-11-14T14:09:22Z,2017-11-14T14:09:26Z,MERGED,True,4,4,1,https://github.com/derickr,remove dot at end of sentence in new error message,1,[],https://github.com/mongodb/mongo-c-driver/pull/461,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/461#issuecomment-344269971,"This suddenly started creating ""double dots"" in the the PHP driver:
006+ Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=-1&journal=true'. Journal conflicts with w value [w=-1]..
006- Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=-1&journal=true'. Invalid writeConcern.
008+ Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=0&journal=true'. Journal conflicts with w value [w=0]..
008- Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?w=0&journal=true'. Invalid writeConcern.",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,462,2017-11-17T21:28:43Z,2017-11-18T16:09:06Z,2017-11-18T16:09:06Z,MERGED,True,4,4,1,https://github.com/gbw4th,CDRIVER-2384 Fixed reply not being initialized,1,[],https://github.com/mongodb/mongo-c-driver/pull/462,https://github.com/gbw4th,1,https://github.com/mongodb/mongo-c-driver/pull/462,"Fixed monogc_bulk_operation_execute() so that it behaves as documented
and always initializes the reply bson_t before returning.","Fixed monogc_bulk_operation_execute() so that it behaves as documented
and always initializes the reply bson_t before returning.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,463,2017-11-21T16:19:55Z,2017-11-21T18:26:54Z,2017-11-21T23:40:00Z,CLOSED,False,8,18,1,https://github.com/tzulea,Fix Cmake error,2,[],https://github.com/mongodb/mongo-c-driver/pull/463,https://github.com/tzulea,1,https://github.com/mongodb/mongo-c-driver/pull/463,"this fixes the following issues:
CDRIVER-2396.
CDRIVER-2395.
Add include for check_symbol_exists module.
Set default values in cmake for macros. Thus avoiding the build errors regarding the comparison operator :
invalid token at start of a preprocessor expression
#if MONGOC_HAVE_DNSAPI != 1","this fixes the following issues:
CDRIVER-2396.
CDRIVER-2395.
Add include for check_symbol_exists module.
Set default values in cmake for macros. Thus avoiding the build errors regarding the comparison operator :
invalid token at start of a preprocessor expression
#if MONGOC_HAVE_DNSAPI != 1",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,463,2017-11-21T16:19:55Z,2017-11-21T18:26:54Z,2017-11-21T23:40:00Z,CLOSED,False,8,18,1,https://github.com/tzulea,Fix Cmake error,2,[],https://github.com/mongodb/mongo-c-driver/pull/463,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/463#issuecomment-346117731,"this fixes the following issues:
CDRIVER-2396.
CDRIVER-2395.
Add include for check_symbol_exists module.
Set default values in cmake for macros. Thus avoiding the build errors regarding the comparison operator :
invalid token at start of a preprocessor expression
#if MONGOC_HAVE_DNSAPI != 1",Merged in f81e63d and 7b92f88 thank you!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,463,2017-11-21T16:19:55Z,2017-11-21T18:26:54Z,2017-11-21T23:40:00Z,CLOSED,False,8,18,1,https://github.com/tzulea,Fix Cmake error,2,[],https://github.com/mongodb/mongo-c-driver/pull/463,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/463#issuecomment-346196916,"this fixes the following issues:
CDRIVER-2396.
CDRIVER-2395.
Add include for check_symbol_exists module.
Set default values in cmake for macros. Thus avoiding the build errors regarding the comparison operator :
invalid token at start of a preprocessor expression
#if MONGOC_HAVE_DNSAPI != 1","Actually I'm reverting, this doesn't work. One part of the the fix is necessary:
include(CheckSymbolExists)

But another part of the fix is incorrect:
set (MONGOC_HAVE_DNSAPI 0)
set (MONGOC_HAVE_RES_NSEARCH 0)
set (MONGOC_HAVE_RES_NDESTROY 0)
set (MONGOC_HAVE_RES_NCLOSE 0)
set (MONGOC_HAVE_RES_SEARCH 0)

if (ENABLE_SRV STREQUAL ON OR ENABLE_SRV STREQUAL AUTO)
   if (WIN32)
      set (RESOLV_LIBS Dnsapi)
      set (MONGOC_HAVE_DNSAPI 1)
   else ()
      # Thread-safe DNS query function for _mongoc_client_get_srv.
      # Could be a macro, not a function, so use check_symbol_exists.
      check_symbol_exists (res_nsearch resolv.h MONGOC_HAVE_RES_NSEARCH)
      if (MONGOC_HAVE_RES_NSEARCH)

This doesn't work, unfortunately. We can't set a variable like MONGOC_HAVE_RES_NSEARCH to a default value of 0, then run check_symbol_exists, because check_symbol_exists does not overwrite the default value. See the implementation here, it quits if the variable is already defined:
https://github.com/Kitware/CMake/blob/master/Modules/CheckSymbolExists.cmake#L57
Now that I've learned this I hope we both remember it!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,464,2017-11-22T09:01:19Z,2018-01-11T22:10:09Z,2018-01-11T22:10:09Z,CLOSED,False,7,1,1,https://github.com/tzulea,CDRIVER-2396 set default values only if ENABLE_SRV=OFF,5,[],https://github.com/mongodb/mongo-c-driver/pull/464,https://github.com/tzulea,1,https://github.com/mongodb/mongo-c-driver/pull/464,"this avoids the issue if the is a default value than the check_symbol_exist doesn't run.
#463 (comment)","this avoids the issue if the is a default value than the check_symbol_exist doesn't run.
#463 (comment)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,465,2017-11-22T11:43:44Z,2018-01-26T20:16:19Z,2018-01-26T20:16:19Z,CLOSED,False,46,30,1,https://github.com/tzulea,[CDRIVER-2402]  Add option to compile the submodule libbson during mo…,1,[],https://github.com/mongodb/mongo-c-driver/pull/465,https://github.com/tzulea,1,https://github.com/mongodb/mongo-c-driver/pull/465,"…ngoc compilation.
Check if the current source directory is not the source directoy (i.e mongoc is a subproject). In this case build mongoc and libbson dependency","…ngoc compilation.
Check if the current source directory is not the source directoy (i.e mongoc is a subproject). In this case build mongoc and libbson dependency",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,465,2017-11-22T11:43:44Z,2018-01-26T20:16:19Z,2018-01-26T20:16:19Z,CLOSED,False,46,30,1,https://github.com/tzulea,[CDRIVER-2402]  Add option to compile the submodule libbson during mo…,1,[],https://github.com/mongodb/mongo-c-driver/pull/465,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/465#issuecomment-360893208,"…ngoc compilation.
Check if the current source directory is not the source directoy (i.e mongoc is a subproject). In this case build mongoc and libbson dependency","Thanks, merged in 6a4ba9b",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,466,2017-11-27T13:29:01Z,2017-11-29T13:45:04Z,2017-11-29T13:45:12Z,MERGED,True,3,3,2,https://github.com/michaelkuhn,"Do not overwrite {SNAPPY,ZLIB}_LIBS for system versions",1,[],https://github.com/mongodb/mongo-c-driver/pull/466,https://github.com/michaelkuhn,1,https://github.com/mongodb/mongo-c-driver/pull/466,"*_LIBS often contains library paths (-L) if returned by pkg-config.
Stripping them out causes the snappy and zlib libraries to not be found if they are not installed in a system library path.
This happens with (at least) the libmongoc package in Spack (https://github.com/spack/spack).","*_LIBS often contains library paths (-L) if returned by pkg-config.
Stripping them out causes the snappy and zlib libraries to not be found if they are not installed in a system library path.
This happens with (at least) the libmongoc package in Spack (https://github.com/spack/spack).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,466,2017-11-27T13:29:01Z,2017-11-29T13:45:04Z,2017-11-29T13:45:12Z,MERGED,True,3,3,2,https://github.com/michaelkuhn,"Do not overwrite {SNAPPY,ZLIB}_LIBS for system versions",1,[],https://github.com/mongodb/mongo-c-driver/pull/466,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/466#issuecomment-347864259,"*_LIBS often contains library paths (-L) if returned by pkg-config.
Stripping them out causes the snappy and zlib libraries to not be found if they are not installed in a system library path.
This happens with (at least) the libmongoc package in Spack (https://github.com/spack/spack).",Thank you!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,467,2017-11-30T04:15:29Z,2017-11-30T17:48:12Z,2017-11-30T17:48:22Z,MERGED,True,1,1,1,https://github.com/sriharshav,Fix :Error parsing URI: Invalid host string in URI,1,[],https://github.com/mongodb/mongo-c-driver/pull/467,https://github.com/sriharshav,1,https://github.com/mongodb/mongo-c-driver/pull/467,"Fixes issue :
mongoc: A '/' is required between the host list and any options.
mongoc: Error parsing URI: 'Invalid host string in URI'
mongoc_uri_parse_hosts in mongoc/mongoc-uri.c  expects '/' between host list and options.","Fixes issue :
mongoc: A '/' is required between the host list and any options.
mongoc: Error parsing URI: 'Invalid host string in URI'
mongoc_uri_parse_hosts in mongoc/mongoc-uri.c  expects '/' between host list and options.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,467,2017-11-30T04:15:29Z,2017-11-30T17:48:12Z,2017-11-30T17:48:22Z,MERGED,True,1,1,1,https://github.com/sriharshav,Fix :Error parsing URI: Invalid host string in URI,1,[],https://github.com/mongodb/mongo-c-driver/pull/467,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/467#issuecomment-348266318,"Fixes issue :
mongoc: A '/' is required between the host list and any options.
mongoc: Error parsing URI: 'Invalid host string in URI'
mongoc_uri_parse_hosts in mongoc/mongoc-uri.c  expects '/' between host list and options.",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,468,2017-12-04T14:42:46Z,2018-01-12T22:01:42Z,2018-01-12T22:01:42Z,MERGED,True,315,1,2,https://github.com/derickr,Add .gdbinit file that exposes a 'printbson' function to dump a bson_t*,2,[],https://github.com/mongodb/mongo-c-driver/pull/468,https://github.com/derickr,1,https://github.com/mongodb/mongo-c-driver/pull/468,"This PR implements the 'printbson' function in a .gdbinit file to print bson_t* values.
An example of an output is:
(gdb) printbson bson
ALLOC [0x555556cd7310 + 0] (len=475)
{
    'bool' : true,
    'int32' : NumberInt(""42""),
    'int64' : NumberLong(""3000000042""),
    'string' : ""Stŕìñg"",
    'objectId' : ObjectID(""5A1442F3122D331C3C6757E1""),
    'utcDateTime' : UTCDateTime(1511277299031),
    'arrayOfInts' : [
        '0' : NumberInt(""1""),
        '1' : NumberInt(""2""),
        '2' : NumberInt(""3""),
        '3' : NumberInt(""5""),
        '4' : NumberInt(""8""),
        '5' : NumberInt(""13""),
        '6' : NumberInt(""21""),
        '7' : NumberInt(""34"")
    ],
    'embeddedDocument' : {
        'arrayOfStrings' : [
            '0' : ""one"",
            '1' : ""two"",
            '2' : ""three""
        ],
        'double' : 2.718280,
        'notherDoc' : {
            'true' : NumberInt(""1""),
            'false' : false
        }
    },
    'binary' : Binary(""02"", ""3031343532333637""),
    'regex' : Regex(""@[a-z]+@"", ""im""),
    'null' : null,
    'js' : JavaScript(""print foo""),
    'jsws' : JavaScript(""print foo"") with scope: {
        'f' : NumberInt(""42""),
        'a' : [
            '0' : 3.141593,
            '1' : 2.718282
        ]
    },
    'timestamp' : Timestamp(4294967295, 4294967295),
    'double' : 3.141593
}","This PR implements the 'printbson' function in a .gdbinit file to print bson_t* values.
An example of an output is:
(gdb) printbson bson
ALLOC [0x555556cd7310 + 0] (len=475)
{
    'bool' : true,
    'int32' : NumberInt(""42""),
    'int64' : NumberLong(""3000000042""),
    'string' : ""Stŕìñg"",
    'objectId' : ObjectID(""5A1442F3122D331C3C6757E1""),
    'utcDateTime' : UTCDateTime(1511277299031),
    'arrayOfInts' : [
        '0' : NumberInt(""1""),
        '1' : NumberInt(""2""),
        '2' : NumberInt(""3""),
        '3' : NumberInt(""5""),
        '4' : NumberInt(""8""),
        '5' : NumberInt(""13""),
        '6' : NumberInt(""21""),
        '7' : NumberInt(""34"")
    ],
    'embeddedDocument' : {
        'arrayOfStrings' : [
            '0' : ""one"",
            '1' : ""two"",
            '2' : ""three""
        ],
        'double' : 2.718280,
        'notherDoc' : {
            'true' : NumberInt(""1""),
            'false' : false
        }
    },
    'binary' : Binary(""02"", ""3031343532333637""),
    'regex' : Regex(""@[a-z]+@"", ""im""),
    'null' : null,
    'js' : JavaScript(""print foo""),
    'jsws' : JavaScript(""print foo"") with scope: {
        'f' : NumberInt(""42""),
        'a' : [
            '0' : 3.141593,
            '1' : 2.718282
        ]
    },
    'timestamp' : Timestamp(4294967295, 4294967295),
    'double' : 3.141593
}",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,468,2017-12-04T14:42:46Z,2018-01-12T22:01:42Z,2018-01-12T22:01:42Z,MERGED,True,315,1,2,https://github.com/derickr,Add .gdbinit file that exposes a 'printbson' function to dump a bson_t*,2,[],https://github.com/mongodb/mongo-c-driver/pull/468,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/468#issuecomment-349401216,"This PR implements the 'printbson' function in a .gdbinit file to print bson_t* values.
An example of an output is:
(gdb) printbson bson
ALLOC [0x555556cd7310 + 0] (len=475)
{
    'bool' : true,
    'int32' : NumberInt(""42""),
    'int64' : NumberLong(""3000000042""),
    'string' : ""Stŕìñg"",
    'objectId' : ObjectID(""5A1442F3122D331C3C6757E1""),
    'utcDateTime' : UTCDateTime(1511277299031),
    'arrayOfInts' : [
        '0' : NumberInt(""1""),
        '1' : NumberInt(""2""),
        '2' : NumberInt(""3""),
        '3' : NumberInt(""5""),
        '4' : NumberInt(""8""),
        '5' : NumberInt(""13""),
        '6' : NumberInt(""21""),
        '7' : NumberInt(""34"")
    ],
    'embeddedDocument' : {
        'arrayOfStrings' : [
            '0' : ""one"",
            '1' : ""two"",
            '2' : ""three""
        ],
        'double' : 2.718280,
        'notherDoc' : {
            'true' : NumberInt(""1""),
            'false' : false
        }
    },
    'binary' : Binary(""02"", ""3031343532333637""),
    'regex' : Regex(""@[a-z]+@"", ""im""),
    'null' : null,
    'js' : JavaScript(""print foo""),
    'jsws' : JavaScript(""print foo"") with scope: {
        'f' : NumberInt(""42""),
        'a' : [
            '0' : 3.141593,
            '1' : 2.718282
        ]
    },
    'timestamp' : Timestamp(4294967295, 4294967295),
    'double' : 3.141593
}","So cool. Could you add a section to CONTRIBUTING.md with instructions for configuring gdb to use this file?
Later, I'll update tutorial.rst with this info, too.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,469,2017-12-06T23:19:15Z,2017-12-07T19:18:54Z,2017-12-07T19:18:57Z,MERGED,True,2,0,1,https://github.com/jmikola,Missing ENTRY in advance_operation_time,1,[],https://github.com/mongodb/mongo-c-driver/pull/469,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/469,I assume anything with EXIT should also have an ENTRY. Noticed this was imbalanced while looking at some trace logs.,I assume anything with EXIT should also have an ENTRY. Noticed this was imbalanced while looking at some trace logs.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,470,2017-12-08T18:33:20Z,2017-12-11T15:41:20Z,2017-12-11T15:41:23Z,MERGED,True,88,0,6,https://github.com/jmikola,CDRIVER-2419 mongoc_bulk_operation_set_client_session,4,[],https://github.com/mongodb/mongo-c-driver/pull/470,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/470,https://jira.mongodb.org/browse/CDRIVER-2419,https://jira.mongodb.org/browse/CDRIVER-2419,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,470,2017-12-08T18:33:20Z,2017-12-11T15:41:20Z,2017-12-11T15:41:23Z,MERGED,True,88,0,6,https://github.com/jmikola,CDRIVER-2419 mongoc_bulk_operation_set_client_session,4,[],https://github.com/mongodb/mongo-c-driver/pull/470,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/470#issuecomment-350370521,https://jira.mongodb.org/browse/CDRIVER-2419,"Can you also add a .rst document for the new function? (Some existing bulk functions aren't documented but we're trying to catch up, CDRIVER-1930.)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,470,2017-12-08T18:33:20Z,2017-12-11T15:41:20Z,2017-12-11T15:41:23Z,MERGED,True,88,0,6,https://github.com/jmikola,CDRIVER-2419 mongoc_bulk_operation_set_client_session,4,[],https://github.com/mongodb/mongo-c-driver/pull/470,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/470#issuecomment-350388668,https://jira.mongodb.org/browse/CDRIVER-2419,"Can you also add a .rst document for the new function? (Some existing bulk functions aren't documented but we're trying to catch up, CDRIVER-1930.)

Done. I also created docs for set_client since I wanted to refer to it from set_client_session.
Also found that ""sessionId"" wasn't documented for create_bulk_operation_with_opts, so I added a paragraph there as well.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,470,2017-12-08T18:33:20Z,2017-12-11T15:41:20Z,2017-12-11T15:41:23Z,MERGED,True,88,0,6,https://github.com/jmikola,CDRIVER-2419 mongoc_bulk_operation_set_client_session,4,[],https://github.com/mongodb/mongo-c-driver/pull/470,https://github.com/jmikola,4,https://github.com/mongodb/mongo-c-driver/pull/470#issuecomment-350746997,https://jira.mongodb.org/browse/CDRIVER-2419,@ajdavis: Updated with fixed forward decl and void * documentation note. Please re-review.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,471,2017-12-11T19:58:23Z,2017-12-11T21:08:04Z,2017-12-11T21:08:04Z,MERGED,True,53,15,4,https://github.com/pvselvan,CDRIVER-2371 make aggregate use batchSize for multiple batches,1,[],https://github.com/mongodb/mongo-c-driver/pull/471,https://github.com/pvselvan,1,https://github.com/mongodb/mongo-c-driver/pull/471,Changes were made to mongoc_collection_aggregate and  _mongoc_cursor_cursorid_prime functions.,Changes were made to mongoc_collection_aggregate and  _mongoc_cursor_cursorid_prime functions.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,472,2017-12-12T00:32:46Z,2017-12-12T14:17:33Z,2017-12-12T14:20:17Z,MERGED,True,1,1,1,https://github.com/jmikola,CDRIVER-2256 fix _mongoc_validate_update errmsg,1,[],https://github.com/mongodb/mongo-c-driver/pull/472,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/472,"_mongoc_validate_update() validates the newObj parameter. The selector (i.e. first argument for update and replace) is not validated by these util functions.
This fixes the change introduced in this commit.","_mongoc_validate_update() validates the newObj parameter. The selector (i.e. first argument for update and replace) is not validated by these util functions.
This fixes the change introduced in this commit.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,472,2017-12-12T00:32:46Z,2017-12-12T14:17:33Z,2017-12-12T14:20:17Z,MERGED,True,1,1,1,https://github.com/jmikola,CDRIVER-2256 fix _mongoc_validate_update errmsg,1,[],https://github.com/mongodb/mongo-c-driver/pull/472,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/472#issuecomment-351064378,"_mongoc_validate_update() validates the newObj parameter. The selector (i.e. first argument for update and replace) is not validated by these util functions.
This fixes the change introduced in this commit.",Merged to master and cherry-picked to r1.9.,True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,473,2017-12-12T16:41:28Z,2017-12-12T17:53:45Z,2017-12-12T17:53:49Z,MERGED,True,182,52,7,https://github.com/xy24,CDRIVER-2296 pass bson_validate_flags_t to update/insert functions,1,[],https://github.com/mongodb/mongo-c-driver/pull/473,https://github.com/xy24,1,https://github.com/mongodb/mongo-c-driver/pull/473,"User can now pass bson_validate_flags_t to update/insert functions via ""validate"" field in the opt.","User can now pass bson_validate_flags_t to update/insert functions via ""validate"" field in the opt.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,473,2017-12-12T16:41:28Z,2017-12-12T17:53:45Z,2017-12-12T17:53:49Z,MERGED,True,182,52,7,https://github.com/xy24,CDRIVER-2296 pass bson_validate_flags_t to update/insert functions,1,[],https://github.com/mongodb/mongo-c-driver/pull/473,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/473#issuecomment-351131308,"User can now pass bson_validate_flags_t to update/insert functions via ""validate"" field in the opt.",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/jeroen,1,https://github.com/mongodb/mongo-c-driver/pull/474,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.","This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351417294,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.","Thanks! The getpid fix looks clearly correct to me.
In CMakeLists.txt we set the _CRT_RAND_S flag with a command line switch:
if (MINGW)
   # Define _CRT_RAND_S, so that MinGW's stdlib.h declares Microsoft's rand_s().
   message ("" MinGW: define _CRT_RAND_S"")
   set (CMAKE_C_FLAGS ""${CMAKE_C_FLAGS} -D_CRT_RAND_S"")
endif ()

I forget, do you use Autotools to build libmongoc with mingw-w64, or do you use CMake?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/jeroen,3,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351419937,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.","Ah okay that explains.
I have manually hardcoded the compiler flags for windows so I can easily add -D_CRT_RAND_S. I just thought it's more elegant to have it near the actual rand_s() code.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/jeroen,4,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351420838,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.",Should I remove _CRT_RAND_S from the PR and pass it as a compiler flag instead?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/jeroen,5,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351433572,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.","Update: added a commit that fixes type warnings in the sspi code, see CDRIVER-2427",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/ajdavis,6,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351487977,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.","Thanks. What's your opinion, should we remove the flag from CMakeLists and define it in the source file instead? If so, go ahead and make that change here.
Sorry for vacillating.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/jeroen,7,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351492524,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.","In this case I prefer to define the macro in the source rather than a compiler flag because it is not an option, you need this macro to enable the rand_s() call.
Also the macro is only needed for a single c file,  whereas enabling globally could cause side effects (though for this particular macro that seems unlikely).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/ajdavis,8,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351494332,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.","Yeah, that sounds right to me too.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/jeroen,9,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351494513,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.",Should I restore it in this PR?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/ajdavis,10,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351496262,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.","Yes please, and delete the flag from CMakeLists",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/jeroen,11,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351497057,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.",OK done,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/ajdavis,12,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351551220,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/ajdavis,13,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351552267,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.",Merged to master and cherry-picked into the r1.9 branch as well.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/jeroen,14,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351580201,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.","Thanks. I don't see it (yet) in r1.9, can you push please?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,474,2017-12-12T23:03:00Z,2017-12-13T22:52:36Z,2017-12-18T14:49:04Z,MERGED,True,11,12,5,https://github.com/jeroen,Windows: fixes for implicit declaration of functions,4,[],https://github.com/mongodb/mongo-c-driver/pull/474,https://github.com/ajdavis,15,https://github.com/mongodb/mongo-c-driver/pull/474#issuecomment-351584875,"This fixes two compiler warnings on mingw-w64:
mongoc/mongoc-socket.c: In function 'mongoc_socket_close':
mongoc/mongoc-socket.c:774:4: warning: implicit declaration of function 'getpid' [-Wimplicit-function-declaration]
    owned = (sock->pid == (int) getpid ());
    ^
This PR switched to _getpid() on Windows (which is already used elsewhere in the code).
mongoc/mongoc-util.c -o mongoc/mongoc-util.o
mongoc/mongoc-util.c: In function '_mongoc_rand_simple':
mongoc/mongoc-util.c:33:4: warning: implicit declaration of function 'rand_s' [-Wimplicit-function-declaration]
    err = rand_s (&ret);
    ^
The windows documentation says:

The rand_s function requires that constant _CRT_RAND_S be defined prior to the inclusion statement for the function to be declared.

I confirmed that this fixes the compiler warning.",Oh yes. Sorry about that.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,475,2017-12-14T12:12:05Z,2017-12-14T13:20:15Z,2017-12-18T14:49:00Z,MERGED,True,7,5,2,https://github.com/jeroen,Windows: fix compiler warnings,1,[],https://github.com/mongodb/mongo-c-driver/pull/475,https://github.com/jeroen,1,https://github.com/mongodb/mongo-c-driver/pull/475,"Ran into a few more warnings on mingw-w64. These are (hopefully) the final windows fixes I need.
Fixed two -Wunused warnings:
mongoc/mongoc-socket.c:354:9: warning: unused variable 'optval'
mongoc/mongoc-cluster-sspi.c:152:18: warning: variable 'options' set but not used
Fixed missing #include process.h for _getpid():
mongoc/mongoc-socket.c:775:4: warning: implicit declaration of function '_getpid'
And a -pedantic warning about variadic args:
mongoc/mongoc-socket.c:419:46: warning: ISO C99 requires rest arguments to be used
mongoc/mongoc-socket.c:421:40: warning: ISO C99 requires rest arguments to be used
Thank you for reviewing!","Ran into a few more warnings on mingw-w64. These are (hopefully) the final windows fixes I need.
Fixed two -Wunused warnings:
mongoc/mongoc-socket.c:354:9: warning: unused variable 'optval'
mongoc/mongoc-cluster-sspi.c:152:18: warning: variable 'options' set but not used
Fixed missing #include process.h for _getpid():
mongoc/mongoc-socket.c:775:4: warning: implicit declaration of function '_getpid'
And a -pedantic warning about variadic args:
mongoc/mongoc-socket.c:419:46: warning: ISO C99 requires rest arguments to be used
mongoc/mongoc-socket.c:421:40: warning: ISO C99 requires rest arguments to be used
Thank you for reviewing!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,475,2017-12-14T12:12:05Z,2017-12-14T13:20:15Z,2017-12-18T14:49:00Z,MERGED,True,7,5,2,https://github.com/jeroen,Windows: fix compiler warnings,1,[],https://github.com/mongodb/mongo-c-driver/pull/475,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/475#issuecomment-351708864,"Ran into a few more warnings on mingw-w64. These are (hopefully) the final windows fixes I need.
Fixed two -Wunused warnings:
mongoc/mongoc-socket.c:354:9: warning: unused variable 'optval'
mongoc/mongoc-cluster-sspi.c:152:18: warning: variable 'options' set but not used
Fixed missing #include process.h for _getpid():
mongoc/mongoc-socket.c:775:4: warning: implicit declaration of function '_getpid'
And a -pedantic warning about variadic args:
mongoc/mongoc-socket.c:419:46: warning: ISO C99 requires rest arguments to be used
mongoc/mongoc-socket.c:421:40: warning: ISO C99 requires rest arguments to be used
Thank you for reviewing!",Looks great. Merged to master and r1.9.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,476,2017-12-14T17:30:24Z,2017-12-16T22:13:15Z,2017-12-17T19:28:09Z,CLOSED,False,12,0,1,https://github.com/road-t,Setting error to NULL when BSON creation succeeds,1,[],https://github.com/mongodb/mongo-c-driver/pull/476,https://github.com/road-t,1,https://github.com/mongodb/mongo-c-driver/pull/476,"Functions bson_new_from_json(), bson_init_from_json() and bson_json_reader_new_from_file() don't reset passed bson_error_t structure, causing unpredictable behavior in some cases","Functions bson_new_from_json(), bson_init_from_json() and bson_json_reader_new_from_file() don't reset passed bson_error_t structure, causing unpredictable behavior in some cases",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,476,2017-12-14T17:30:24Z,2017-12-16T22:13:15Z,2017-12-17T19:28:09Z,CLOSED,False,12,0,1,https://github.com/road-t,Setting error to NULL when BSON creation succeeds,1,[],https://github.com/mongodb/mongo-c-driver/pull/476,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/476#issuecomment-351788010,"Functions bson_new_from_json(), bson_init_from_json() and bson_json_reader_new_from_file() don't reset passed bson_error_t structure, causing unpredictable behavior in some cases","Hi, the contract for most libbson and libmongoc functions is that they fill out the error struct if and only if they return false or NULL. If the function succeeds then there's no guarantee about the contents of the error struct at all.
Are there any functions you know of that don't fulfill this contract?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,476,2017-12-14T17:30:24Z,2017-12-16T22:13:15Z,2017-12-17T19:28:09Z,CLOSED,False,12,0,1,https://github.com/road-t,Setting error to NULL when BSON creation succeeds,1,[],https://github.com/mongodb/mongo-c-driver/pull/476,https://github.com/road-t,3,https://github.com/mongodb/mongo-c-driver/pull/476#issuecomment-351789839,"Functions bson_new_from_json(), bson_init_from_json() and bson_json_reader_new_from_file() don't reset passed bson_error_t structure, causing unpredictable behavior in some cases","Hi

I've checked some common functions of mongoc and those DO fill with zeroes error struct before any bson_set_error calls. So I decided that it's uncommon for the whole library not to do that.
Also IMO if there's a some error-handling variable, it must be set to 0 if operation succeeds.

Weird thing is that bug led to crash of our application on Ubuntu but made no harm on MacOS X.

I am not aware of any other functions that don't fulfill the contract yet.
…
 14 дек. 2017 г., в 20:56, A. Jesse Jiryu Davis ***@***.***> написал(а):

 Hi, the contract for most libbson and libmongoc functions is that they fill out the error struct if and only if they return false or NULL. If the function succeeds then there's no guarantee about the contents of the error struct at all.

 Are there any functions you know of that don't fulfill this contract?

 —
 You are receiving this because you authored the thread.
 Reply to this email directly, view it on GitHub <#476 (comment)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AGabvFZEOfIwOsRekZ55isrTUhqBeYm0ks5tAWFegaJpZM4RCaOQ>.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,476,2017-12-14T17:30:24Z,2017-12-16T22:13:15Z,2017-12-17T19:28:09Z,CLOSED,False,12,0,1,https://github.com/road-t,Setting error to NULL when BSON creation succeeds,1,[],https://github.com/mongodb/mongo-c-driver/pull/476,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/476#issuecomment-352215683,"Functions bson_new_from_json(), bson_init_from_json() and bson_json_reader_new_from_file() don't reset passed bson_error_t structure, causing unpredictable behavior in some cases","It looks like bson_validate_with_error and bson_reader_new_from_file also don't clear the error on success. And in libmongoc there are dozens of functions that take an error pointer and don't clear it on success. Since it's not currently a consistent or documented behavior for libbson or libmongoc to clear errors on success, I'm not going to commit to it. Thanks for your contribution, though; even though I disagree I do appreciate it.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,476,2017-12-14T17:30:24Z,2017-12-16T22:13:15Z,2017-12-17T19:28:09Z,CLOSED,False,12,0,1,https://github.com/road-t,Setting error to NULL when BSON creation succeeds,1,[],https://github.com/mongodb/mongo-c-driver/pull/476,https://github.com/road-t,5,https://github.com/mongodb/mongo-c-driver/pull/476#issuecomment-352278927,"Functions bson_new_from_json(), bson_init_from_json() and bson_json_reader_new_from_file() don't reset passed bson_error_t structure, causing unpredictable behavior in some cases",I got your point. Looks like we gotta use our own fork with those enhancements in all functions that use pointer to error structure.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,476,2017-12-14T17:30:24Z,2017-12-16T22:13:15Z,2017-12-17T19:28:09Z,CLOSED,False,12,0,1,https://github.com/road-t,Setting error to NULL when BSON creation succeeds,1,[],https://github.com/mongodb/mongo-c-driver/pull/476,https://github.com/ajdavis,6,https://github.com/mongodb/mongo-c-driver/pull/476#issuecomment-352279100,"Functions bson_new_from_json(), bson_init_from_json() and bson_json_reader_new_from_file() don't reset passed bson_error_t structure, causing unpredictable behavior in some cases","Thanks for understanding. I'd suggest that instead of using a fork, you use the official libbson. Check the return value of each function call instead of checking whether the error code is zero. That's the documented method for error checking that I'm committed to preserving in libbson and libmongoc.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,477,2017-12-19T22:32:11Z,2017-12-20T17:59:39Z,2017-12-20T18:03:20Z,MERGED,True,53,9,3,https://github.com/jmikola, CDRIVER-2431 check for empty command before comparing name,2,[],https://github.com/mongodb/mongo-c-driver/pull/477,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/477,"https://jira.mongodb.org/browse/CDRIVER-2431
clang-format picked up bad formatting in mongoc-client.c, which I split off into a separate commit.","https://jira.mongodb.org/browse/CDRIVER-2431
clang-format picked up bad formatting in mongoc-client.c, which I split off into a separate commit.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,477,2017-12-19T22:32:11Z,2017-12-20T17:59:39Z,2017-12-20T18:03:20Z,MERGED,True,53,9,3,https://github.com/jmikola, CDRIVER-2431 check for empty command before comparing name,2,[],https://github.com/mongodb/mongo-c-driver/pull/477,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/477#issuecomment-352921936,"https://jira.mongodb.org/browse/CDRIVER-2431
clang-format picked up bad formatting in mongoc-client.c, which I split off into a separate commit.",If you want to make the proposed changes and then push to master and cherry-pick to r1.9 please be my guest!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,477,2017-12-19T22:32:11Z,2017-12-20T17:59:39Z,2017-12-20T18:03:20Z,MERGED,True,53,9,3,https://github.com/jmikola, CDRIVER-2431 check for empty command before comparing name,2,[],https://github.com/mongodb/mongo-c-driver/pull/477,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/477#issuecomment-353138259,"https://jira.mongodb.org/browse/CDRIVER-2431
clang-format picked up bad formatting in mongoc-client.c, which I split off into a separate commit.","Merged to master and back-ported to r1.9 in 471bfb0 (only the segfault fix, not code formatting commit).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,478,2017-12-22T13:01:50Z,2018-01-03T15:44:55Z,2018-01-03T15:44:55Z,CLOSED,False,3,1,1,https://github.com/Mansuro,Use gmtime_s instead of gmtime,1,[],https://github.com/mongodb/mongo-c-driver/pull/478,https://github.com/Mansuro,1,https://github.com/mongodb/mongo-c-driver/pull/478,"gmtime_s has security enhancements over gmtime, that is why windows generates a warning when trying to compile using gmtime, for more details:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/gmtime-s-gmtime32-s-gmtime64-s","gmtime_s has security enhancements over gmtime, that is why windows generates a warning when trying to compile using gmtime, for more details:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/gmtime-s-gmtime32-s-gmtime64-s",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,478,2017-12-22T13:01:50Z,2018-01-03T15:44:55Z,2018-01-03T15:44:55Z,CLOSED,False,3,1,1,https://github.com/Mansuro,Use gmtime_s instead of gmtime,1,[],https://github.com/mongodb/mongo-c-driver/pull/478,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/478#issuecomment-353961667,"gmtime_s has security enhancements over gmtime, that is why windows generates a warning when trying to compile using gmtime, for more details:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/gmtime-s-gmtime32-s-gmtime64-s",Thanks for your contribution! We'll take a look in a week when we're back from vacation.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,478,2017-12-22T13:01:50Z,2018-01-03T15:44:55Z,2018-01-03T15:44:55Z,CLOSED,False,3,1,1,https://github.com/Mansuro,Use gmtime_s instead of gmtime,1,[],https://github.com/mongodb/mongo-c-driver/pull/478,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/478#issuecomment-355044472,"gmtime_s has security enhancements over gmtime, that is why windows generates a warning when trying to compile using gmtime, for more details:
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/gmtime-s-gmtime32-s-gmtime64-s","Thanks, merged in 8df194e",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,479,2017-12-31T11:45:52Z,2018-01-11T22:08:59Z,2018-01-11T22:27:23Z,MERGED,True,46,87,35,https://github.com/carusogabriel,Clean up,2,[],https://github.com/mongodb/mongo-c-driver/pull/479,https://github.com/carusogabriel,1,https://github.com/mongodb/mongo-c-driver/pull/479,I've removed all white spaces and extra lines from our documentation 😄,I've removed all white spaces and extra lines from our documentation 😄,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,479,2017-12-31T11:45:52Z,2018-01-11T22:08:59Z,2018-01-11T22:27:23Z,MERGED,True,46,87,35,https://github.com/carusogabriel,Clean up,2,[],https://github.com/mongodb/mongo-c-driver/pull/479,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/479#issuecomment-357077504,I've removed all white spaces and extra lines from our documentation 😄,Thanks!,True,{'THUMBS_UP': ['https://github.com/carusogabriel']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,480,2018-01-03T01:52:54Z,2018-01-03T02:33:21Z,2018-01-03T02:33:29Z,MERGED,True,52,19,8,https://github.com/xy24,CDRIVER-2436 remove MONGOC_TEST_SKIP_SLOW flag for valgrind evergreen…,1,[],https://github.com/mongodb/mongo-c-driver/pull/480,https://github.com/xy24,1,https://github.com/mongodb/mongo-c-driver/pull/480,… test,… test,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,481,2018-01-04T16:16:46Z,2018-01-04T16:52:15Z,2018-01-04T16:54:11Z,MERGED,True,6,0,1,https://github.com/jmikola,CDRIVER-2449 omit lsid from auth and monitoring commands,1,[],https://github.com/mongodb/mongo-c-driver/pull/481,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/481,"https://jira.mongodb.org/browse/CDRIVER-2449
Per exceptions to sending the session ID to the server on all commands, we should omit lsid from authentication commands and may also do so for monitoring commands. The spec only mentions isMaster for monitoring, but libmongoc uses ping for that purpose as well.","https://jira.mongodb.org/browse/CDRIVER-2449
Per exceptions to sending the session ID to the server on all commands, we should omit lsid from authentication commands and may also do so for monitoring commands. The spec only mentions isMaster for monitoring, but libmongoc uses ping for that purpose as well.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,481,2018-01-04T16:16:46Z,2018-01-04T16:52:15Z,2018-01-04T16:54:11Z,MERGED,True,6,0,1,https://github.com/jmikola,CDRIVER-2449 omit lsid from auth and monitoring commands,1,[],https://github.com/mongodb/mongo-c-driver/pull/481,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/481#issuecomment-355335986,"https://jira.mongodb.org/browse/CDRIVER-2449
Per exceptions to sending the session ID to the server on all commands, we should omit lsid from authentication commands and may also do so for monitoring commands. The spec only mentions isMaster for monitoring, but libmongoc uses ping for that purpose as well.",Cherry-picked to r1.9 in f0e1ea8.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,482,2018-01-08T16:32:39Z,2018-01-11T21:55:52Z,2018-01-11T21:55:52Z,CLOSED,False,152,81,4,https://github.com/pvselvan,CDRIVER-2366 use OP_MSG for unacknowledged writes,1,[],https://github.com/mongodb/mongo-c-driver/pull/482,https://github.com/pvselvan,1,https://github.com/mongodb/mongo-c-driver/pull/482,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,482,2018-01-08T16:32:39Z,2018-01-11T21:55:52Z,2018-01-11T21:55:52Z,CLOSED,False,152,81,4,https://github.com/pvselvan,CDRIVER-2366 use OP_MSG for unacknowledged writes,1,[],https://github.com/mongodb/mongo-c-driver/pull/482,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/482#issuecomment-356048041,,Could you comment out the failing /command_monitoring/bulkWrite test please?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,482,2018-01-08T16:32:39Z,2018-01-11T21:55:52Z,2018-01-11T21:55:52Z,CLOSED,False,152,81,4,https://github.com/pvselvan,CDRIVER-2366 use OP_MSG for unacknowledged writes,1,[],https://github.com/mongodb/mongo-c-driver/pull/482,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/482#issuecomment-357073919,,Merged in d33c7a7. Thanks!!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,483,2018-01-12T19:07:06Z,2018-06-24T03:24:04Z,2018-06-24T03:26:52Z,CLOSED,False,122,21,21,https://github.com/rcsanchez97,CDRIVER-2416 update Debian packaging for libbson repo merge,2,[],https://github.com/mongodb/mongo-c-driver/pull/483,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/483,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,483,2018-01-12T19:07:06Z,2018-06-24T03:24:04Z,2018-06-24T03:26:52Z,CLOSED,False,122,21,21,https://github.com/rcsanchez97,CDRIVER-2416 update Debian packaging for libbson repo merge,2,[],https://github.com/mongodb/mongo-c-driver/pull/483,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/483#issuecomment-357367874,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,483,2018-01-12T19:07:06Z,2018-06-24T03:24:04Z,2018-06-24T03:26:52Z,CLOSED,False,122,21,21,https://github.com/rcsanchez97,CDRIVER-2416 update Debian packaging for libbson repo merge,2,[],https://github.com/mongodb/mongo-c-driver/pull/483,https://github.com/sujith2014,3,https://github.com/mongodb/mongo-c-driver/pull/483#issuecomment-371021610,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,"warning: implicit declaration of function ‘mongoc_collection_insert_one’ [-Wimplicit-function-declaration]
I am new to this when I execute  hello_mongoc.c  using this command

gcc -o hello_mongoc hello_mongoc.c     -I/usr/local/include/libbson-1.0 -I/usr/local/include/libmongoc-1.0     -lmongoc-1.0 -lbson-1.0

it shows

hello_mongoc.c:78:9:

warning: implicit declaration of function ‘mongoc_collection_insert_one’ [-Wimplicit-function-declaration]
if (!mongoc_collection_insert_one (collection, insert, NULL, NULL, &error))
^
/tmp/ccVFnDtE.o: In function main': hello_mongoc.c:(.text+0x227): undefined reference to mongoc_collection_insert_one'
collect2: error: ld returned 1 exit status
Dont know what mistake was I made",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,483,2018-01-12T19:07:06Z,2018-06-24T03:24:04Z,2018-06-24T03:26:52Z,CLOSED,False,122,21,21,https://github.com/rcsanchez97,CDRIVER-2416 update Debian packaging for libbson repo merge,2,[],https://github.com/mongodb/mongo-c-driver/pull/483,https://github.com/rcsanchez97,4,https://github.com/mongodb/mongo-c-driver/pull/483#issuecomment-371114663,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,"Is this a problem you encountered after building/installing a Debian
package using the modified package maintainer scripts on the merged
repository?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,483,2018-01-12T19:07:06Z,2018-06-24T03:24:04Z,2018-06-24T03:26:52Z,CLOSED,False,122,21,21,https://github.com/rcsanchez97,CDRIVER-2416 update Debian packaging for libbson repo merge,2,[],https://github.com/mongodb/mongo-c-driver/pull/483,https://github.com/sujith2014,5,https://github.com/mongodb/mongo-c-driver/pull/483#issuecomment-371116366,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,"yes, I followed the steps in installation specified on this page
http://mongoc.org/libmongoc/current/installing.html
after that I cloned repo https://github.com/mongodb/mongo-c-driver.git
then run this command

gcc -o hello_mongoc hello_mongoc.c -I/usr/local/include/libbson-1.0 -I/usr/local/include/libmongoc-1.0 -lmongoc-1.0 -lbson-1.0",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,483,2018-01-12T19:07:06Z,2018-06-24T03:24:04Z,2018-06-24T03:26:52Z,CLOSED,False,122,21,21,https://github.com/rcsanchez97,CDRIVER-2416 update Debian packaging for libbson repo merge,2,[],https://github.com/mongodb/mongo-c-driver/pull/483,https://github.com/rcsanchez97,6,https://github.com/mongodb/mongo-c-driver/pull/483#issuecomment-371150228,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,"So then the answer to my question is ""no"". You posted your comment in a
thread associated with a pull request to update the Debian packaging
maintainer scripts.

You do not specify which instructions you followed, which platform and
version you are using, whether you installed first from a release
tarball and then cloned the git repository, etc.

In any event, I recommend that you open a new issue rather than make
unrelated comments on this pull request. Also, if you can give the
complete sequence of commands that you executed that would help identify
the source of the problem.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,483,2018-01-12T19:07:06Z,2018-06-24T03:24:04Z,2018-06-24T03:26:52Z,CLOSED,False,122,21,21,https://github.com/rcsanchez97,CDRIVER-2416 update Debian packaging for libbson repo merge,2,[],https://github.com/mongodb/mongo-c-driver/pull/483,https://github.com/sujith2014,7,https://github.com/mongodb/mongo-c-driver/pull/483#issuecomment-371170778,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,"Sorry for commenting on  a pull request, I can't find any option for creating a new issue on this repository",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,483,2018-01-12T19:07:06Z,2018-06-24T03:24:04Z,2018-06-24T03:26:52Z,CLOSED,False,122,21,21,https://github.com/rcsanchez97,CDRIVER-2416 update Debian packaging for libbson repo merge,2,[],https://github.com/mongodb/mongo-c-driver/pull/483,https://github.com/ajdavis,8,https://github.com/mongodb/mongo-c-driver/pull/483#issuecomment-371186324,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,https://github.com/mongodb/mongo-c-driver#how-to-ask-for-help,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,483,2018-01-12T19:07:06Z,2018-06-24T03:24:04Z,2018-06-24T03:26:52Z,CLOSED,False,122,21,21,https://github.com/rcsanchez97,CDRIVER-2416 update Debian packaging for libbson repo merge,2,[],https://github.com/mongodb/mongo-c-driver/pull/483,https://github.com/rcsanchez97,9,https://github.com/mongodb/mongo-c-driver/pull/483#issuecomment-399725916,This change merges the libmongoc and libbson Debian packaging so that binary packages of both can be produced from the newly combined repository.  Please wait to merge this PR until after the 1.10.0 release.,"@ajdavis Since we have decided to move away from a separate Debian branch, this work is no longer suitable to be merged in.  However, I used it as the basis for updated Debian packaging that properly handles the merged repository structure and building from the master and release branches.  I am closing this pull request.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,484,2018-01-16T21:46:40Z,2018-01-17T17:12:11Z,2018-01-17T17:36:46Z,MERGED,True,0,1,1,https://github.com/jmikola,CDRIVER-2369 remove bundled snappy from .gitignore,1,[],https://github.com/mongodb/mongo-c-driver/pull/484,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/484,This likely should have been removed as part of CDRIVER-2369.,This likely should have been removed as part of CDRIVER-2369.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,484,2018-01-16T21:46:40Z,2018-01-17T17:12:11Z,2018-01-17T17:36:46Z,MERGED,True,0,1,1,https://github.com/jmikola,CDRIVER-2369 remove bundled snappy from .gitignore,1,[],https://github.com/mongodb/mongo-c-driver/pull/484,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/484#issuecomment-358374566,This likely should have been removed as part of CDRIVER-2369.,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,485,2018-01-28T20:28:52Z,2018-01-28T22:30:50Z,2018-01-28T22:30:50Z,CLOSED,False,26,0,2,https://github.com/xy24,CDRIVER-2322 add doc on how to use BSON_MEMCHECK flag,1,[],https://github.com/mongodb/mongo-c-driver/pull/485,https://github.com/xy24,1,https://github.com/mongodb/mongo-c-driver/pull/485,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,485,2018-01-28T20:28:52Z,2018-01-28T22:30:50Z,2018-01-28T22:30:50Z,CLOSED,False,26,0,2,https://github.com/xy24,CDRIVER-2322 add doc on how to use BSON_MEMCHECK flag,1,[],https://github.com/mongodb/mongo-c-driver/pull/485,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/485#issuecomment-361102292,,Merged in 47b4e1c thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,486,2018-01-29T16:13:03Z,2018-01-31T14:56:02Z,2018-01-31T14:56:02Z,CLOSED,False,493,69,11,https://github.com/pvselvan,Implemented helpers and used IDL for insert_one,2,[],https://github.com/mongodb/mongo-c-driver/pull/486,https://github.com/pvselvan,1,https://github.com/mongodb/mongo-c-driver/pull/486,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,487,2018-02-15T03:36:25Z,2018-02-15T13:28:41Z,2018-02-20T23:14:04Z,MERGED,True,1,1,1,https://github.com/NotSpooky,Fix mongoc_collection_insert_many's signature,1,[],https://github.com/mongodb/mongo-c-driver/pull/487,https://github.com/NotSpooky,1,https://github.com/mongodb/mongo-c-driver/pull/487,Missing * for documents parameter.,Missing * for documents parameter.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,487,2018-02-15T03:36:25Z,2018-02-15T13:28:41Z,2018-02-20T23:14:04Z,MERGED,True,1,1,1,https://github.com/NotSpooky,Fix mongoc_collection_insert_many's signature,1,[],https://github.com/mongodb/mongo-c-driver/pull/487,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/487#issuecomment-365927028,Missing * for documents parameter.,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,487,2018-02-15T03:36:25Z,2018-02-15T13:28:41Z,2018-02-20T23:14:04Z,MERGED,True,1,1,1,https://github.com/NotSpooky,Fix mongoc_collection_insert_many's signature,1,[],https://github.com/mongodb/mongo-c-driver/pull/487,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/487#issuecomment-365927074,Missing * for documents parameter.,"I'm curious, what are you using the C Driver for?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,487,2018-02-15T03:36:25Z,2018-02-15T13:28:41Z,2018-02-20T23:14:04Z,MERGED,True,1,1,1,https://github.com/NotSpooky,Fix mongoc_collection_insert_many's signature,1,[],https://github.com/mongodb/mongo-c-driver/pull/487,https://github.com/NotSpooky,4,https://github.com/mongodb/mongo-c-driver/pull/487#issuecomment-367152539,Missing * for documents parameter.,I'm making a Mongo library for the D language,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,487,2018-02-15T03:36:25Z,2018-02-15T13:28:41Z,2018-02-20T23:14:04Z,MERGED,True,1,1,1,https://github.com/NotSpooky,Fix mongoc_collection_insert_many's signature,1,[],https://github.com/mongodb/mongo-c-driver/pull/487,https://github.com/ajdavis,5,https://github.com/mongodb/mongo-c-driver/pull/487#issuecomment-367153713,Missing * for documents parameter.,"Cool! Is it mondo, or something new?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,487,2018-02-15T03:36:25Z,2018-02-15T13:28:41Z,2018-02-20T23:14:04Z,MERGED,True,1,1,1,https://github.com/NotSpooky,Fix mongoc_collection_insert_many's signature,1,[],https://github.com/mongodb/mongo-c-driver/pull/487,https://github.com/NotSpooky,6,https://github.com/mongodb/mongo-c-driver/pull/487#issuecomment-367154530,Missing * for documents parameter.,"Something new. Was using mondo but it has a bug that I don't know how to fix.
Will be public (but incomplete) soon.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,488,2018-02-22T06:36:21Z,2018-02-23T15:33:48Z,2018-02-23T15:33:48Z,CLOSED,False,5,0,1,https://github.com/remicollet,CDRIVER-2516 keep 25% free in platform string,1,[],https://github.com/mongodb/mongo-c-driver/pull/488,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/488,Only a workaround... 25% is mostly a ~random value.,Only a workaround... 25% is mostly a ~random value.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,489,2018-04-02T18:55:42Z,2018-04-03T16:58:52Z,2018-04-04T18:37:18Z,MERGED,True,58,1,2,https://github.com/kmahar,Disable topology event callbacks when NULL is passed in,1,[],https://github.com/mongodb/mongo-c-driver/pull/489,https://github.com/kmahar,1,https://github.com/mongodb/mongo-c-driver/pull/489,"While most callbacks were correctly disabled when passing in NULL, this was not the case for topology events. This adds a fix for that, and a test - just a slight modification of _test_topology_events - confirming that the last event is not topology closed.
Also, I guess clang-format caught a lingering error in mongoc-topology.c... if you'd rather I remove that from this PR let me know.","While most callbacks were correctly disabled when passing in NULL, this was not the case for topology events. This adds a fix for that, and a test - just a slight modification of _test_topology_events - confirming that the last event is not topology closed.
Also, I guess clang-format caught a lingering error in mongoc-topology.c... if you'd rather I remove that from this PR let me know.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,489,2018-04-02T18:55:42Z,2018-04-03T16:58:52Z,2018-04-04T18:37:18Z,MERGED,True,58,1,2,https://github.com/kmahar,Disable topology event callbacks when NULL is passed in,1,[],https://github.com/mongodb/mongo-c-driver/pull/489,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/489#issuecomment-378064053,"While most callbacks were correctly disabled when passing in NULL, this was not the case for topology events. This adds a fix for that, and a test - just a slight modification of _test_topology_events - confirming that the last event is not topology closed.
Also, I guess clang-format caught a lingering error in mongoc-topology.c... if you'd rather I remove that from this PR let me know.","Code LGTM. Have you opened a ticket for this? Please include it in the ticket number and follow our commit message style:
CDRIVER-NNNN lowercase commit message",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,489,2018-04-02T18:55:42Z,2018-04-03T16:58:52Z,2018-04-04T18:37:18Z,MERGED,True,58,1,2,https://github.com/kmahar,Disable topology event callbacks when NULL is passed in,1,[],https://github.com/mongodb/mongo-c-driver/pull/489,https://github.com/kmahar,3,https://github.com/mongodb/mongo-c-driver/pull/489#issuecomment-378291522,"While most callbacks were correctly disabled when passing in NULL, this was not the case for topology events. This adds a fix for that, and a test - just a slight modification of _test_topology_events - confirming that the last event is not topology closed.
Also, I guess clang-format caught a lingering error in mongoc-topology.c... if you'd rather I remove that from this PR let me know.","Ok, done",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,489,2018-04-02T18:55:42Z,2018-04-03T16:58:52Z,2018-04-04T18:37:18Z,MERGED,True,58,1,2,https://github.com/kmahar,Disable topology event callbacks when NULL is passed in,1,[],https://github.com/mongodb/mongo-c-driver/pull/489,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/489#issuecomment-378321879,"While most callbacks were correctly disabled when passing in NULL, this was not the case for topology events. This adds a fix for that, and a test - just a slight modification of _test_topology_events - confirming that the last event is not topology closed.
Also, I guess clang-format caught a lingering error in mongoc-topology.c... if you'd rather I remove that from this PR let me know.",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,490,2018-04-11T15:38:19Z,2018-04-11T20:46:06Z,2018-04-11T20:46:10Z,MERGED,True,3,0,1,https://github.com/jmikola,CDRIVER-2605 unset OpenSSL id callback independently,1,[],https://github.com/mongodb/mongo-c-driver/pull/490,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/490,https://jira.mongodb.org/browse/CDRIVER-2605,https://jira.mongodb.org/browse/CDRIVER-2605,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,491,2018-04-11T19:25:35Z,2018-04-11T22:00:04Z,2018-04-11T22:00:12Z,MERGED,True,279,0,10,https://github.com/kmahar,CDRIVER-2577 add missing docs for setting SDAM monitoring callbacks,2,[],https://github.com/mongodb/mongo-c-driver/pull/491,https://github.com/kmahar,1,https://github.com/mongodb/mongo-c-driver/pull/491,"sphinx generated all the HTML files and man pages without complaining. the HTML pages look correct to me in the browser, and I just used groff -man -Tascii [filename] to check that the man pages as plaintext looked reasonable/matched the existing ones - is there is some other way I should check those, let me know.","sphinx generated all the HTML files and man pages without complaining. the HTML pages look correct to me in the browser, and I just used groff -man -Tascii [filename] to check that the man pages as plaintext looked reasonable/matched the existing ones - is there is some other way I should check those, let me know.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,491,2018-04-11T19:25:35Z,2018-04-11T22:00:04Z,2018-04-11T22:00:12Z,MERGED,True,279,0,10,https://github.com/kmahar,CDRIVER-2577 add missing docs for setting SDAM monitoring callbacks,2,[],https://github.com/mongodb/mongo-c-driver/pull/491,https://github.com/kmahar,2,https://github.com/mongodb/mongo-c-driver/pull/491#issuecomment-380591915,"sphinx generated all the HTML files and man pages without complaining. the HTML pages look correct to me in the browser, and I just used groff -man -Tascii [filename] to check that the man pages as plaintext looked reasonable/matched the existing ones - is there is some other way I should check those, let me know.","above Travis failure was because of this test:
{ ""status"": ""FAIL"", ""test_file"": ""/TOPOLOGY/happy_eyeballs/6"", ""seed"": ""1311183019"", ""start"": 584.554755, ""end"": 614.301595, ""elapsed"": 29.746840  }
seems safe to assume it's unrelated?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,491,2018-04-11T19:25:35Z,2018-04-11T22:00:04Z,2018-04-11T22:00:12Z,MERGED,True,279,0,10,https://github.com/kmahar,CDRIVER-2577 add missing docs for setting SDAM monitoring callbacks,2,[],https://github.com/mongodb/mongo-c-driver/pull/491,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/491#issuecomment-380595802,"sphinx generated all the HTML files and man pages without complaining. the HTML pages look correct to me in the browser, and I just used groff -man -Tascii [filename] to check that the man pages as plaintext looked reasonable/matched the existing ones - is there is some other way I should check those, let me know.","Huh, yes, seems intermittent.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,492,2018-04-20T19:54:10Z,2018-04-25T15:27:42Z,2018-04-25T20:00:03Z,MERGED,True,220,0,9,https://github.com/kvwalker,CDRIVER-2611: Add server reply to mongoc_apm_command_failed_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/492,https://github.com/kvwalker,1,https://github.com/mongodb/mongo-c-driver/pull/492,"JIRA ticket: https://jira.mongodb.org/browse/CDRIVER-2611
Evergreen patch: https://evergreen.mongodb.com/version/5ada3b45e3c33177f699637c","JIRA ticket: https://jira.mongodb.org/browse/CDRIVER-2611
Evergreen patch: https://evergreen.mongodb.com/version/5ada3b45e3c33177f699637c",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,492,2018-04-20T19:54:10Z,2018-04-25T15:27:42Z,2018-04-25T20:00:03Z,MERGED,True,220,0,9,https://github.com/kvwalker,CDRIVER-2611: Add server reply to mongoc_apm_command_failed_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/492,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/492#issuecomment-384298508,"JIRA ticket: https://jira.mongodb.org/browse/CDRIVER-2611
Evergreen patch: https://evergreen.mongodb.com/version/5ada3b45e3c33177f699637c","LGTM! Please squash to one commit with a message of at most 50 chars. C Driver commit messages follow this pattern:
CDRIVER-NNNN lowercase commit message
There's no colon after the ticket number, and no period at the end of the subject line.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,492,2018-04-20T19:54:10Z,2018-04-25T15:27:42Z,2018-04-25T20:00:03Z,MERGED,True,220,0,9,https://github.com/kvwalker,CDRIVER-2611: Add server reply to mongoc_apm_command_failed_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/492,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/492#issuecomment-384397849,"JIRA ticket: https://jira.mongodb.org/browse/CDRIVER-2611
Evergreen patch: https://evergreen.mongodb.com/version/5ada3b45e3c33177f699637c",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,492,2018-04-20T19:54:10Z,2018-04-25T15:27:42Z,2018-04-25T20:00:03Z,MERGED,True,220,0,9,https://github.com/kvwalker,CDRIVER-2611: Add server reply to mongoc_apm_command_failed_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/492,https://github.com/kvwalker,4,https://github.com/mongodb/mongo-c-driver/pull/492#issuecomment-384415194,"JIRA ticket: https://jira.mongodb.org/browse/CDRIVER-2611
Evergreen patch: https://evergreen.mongodb.com/version/5ada3b45e3c33177f699637c",Thank you for all your help!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,493,2018-04-23T21:00:31Z,2018-04-26T18:11:18Z,2018-04-26T18:11:47Z,MERGED,True,148,2,2,https://github.com/jmikola,CDRIVER-2628 test retryable write after multi-document op in bulk,1,[],https://github.com/mongodb/mongo-c-driver/pull/493,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/493,"https://jira.mongodb.org/browse/CDRIVER-2628
Related to: mongodb/specifications#313","https://jira.mongodb.org/browse/CDRIVER-2628
Related to: mongodb/specifications#313",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,493,2018-04-23T21:00:31Z,2018-04-26T18:11:18Z,2018-04-26T18:11:47Z,MERGED,True,148,2,2,https://github.com/jmikola,CDRIVER-2628 test retryable write after multi-document op in bulk,1,[],https://github.com/mongodb/mongo-c-driver/pull/493,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/493#issuecomment-384687450,"https://jira.mongodb.org/browse/CDRIVER-2628
Related to: mongodb/specifications#313","The test changes LGTM. Could you wipe those extra files that crept in? Go ahead and make a CDRIVER ticket now, and ask Rathi to link it up when she's ready to do so.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,493,2018-04-23T21:00:31Z,2018-04-26T18:11:18Z,2018-04-26T18:11:47Z,MERGED,True,148,2,2,https://github.com/jmikola,CDRIVER-2628 test retryable write after multi-document op in bulk,1,[],https://github.com/mongodb/mongo-c-driver/pull/493,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/493#issuecomment-384723126,"https://jira.mongodb.org/browse/CDRIVER-2628
Related to: mongodb/specifications#313",Also LGTM pending removal of those extra files.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,494,2018-04-26T20:40:54Z,2018-04-30T16:08:30Z,2018-04-30T16:08:36Z,MERGED,True,88,11,2,https://github.com/jmikola,CDRIVER-2439 don't gossip cluster time to standalones,2,[],https://github.com/mongodb/mongo-c-driver/pull/494,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/494,"https://jira.mongodb.org/browse/CDRIVER-2439
This addresses an edge case where an explicit session's cluster time may have been manually advanced. Under normal usage, sessions used with a standalone will always have an empty cluster time.","https://jira.mongodb.org/browse/CDRIVER-2439
This addresses an edge case where an explicit session's cluster time may have been manually advanced. Under normal usage, sessions used with a standalone will always have an empty cluster time.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,494,2018-04-26T20:40:54Z,2018-04-30T16:08:30Z,2018-04-30T16:08:36Z,MERGED,True,88,11,2,https://github.com/jmikola,CDRIVER-2439 don't gossip cluster time to standalones,2,[],https://github.com/mongodb/mongo-c-driver/pull/494,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/494#issuecomment-385050755,"https://jira.mongodb.org/browse/CDRIVER-2439
This addresses an edge case where an explicit session's cluster time may have been manually advanced. Under normal usage, sessions used with a standalone will always have an empty cluster time.","What happens in test-mongoc-cluster.c now?

The test failures on Travis were actually due to mocking, so I've fixed those. For reasons unknown to me _test_dollar_query() was simulating primary/secondary responses but their isMaster indicated that they were secondaries. I was able to fix that by improving their isMaster responses. I originally looked into porting these tests to use a mock replica set (leading to #495), although I think that went to far. For the ""omit cluster time"" variations, I ended up having the tests use OP_QUERY instead of OP_MSG, which I don't think was your original intention (since OP_MSG is the only code path that cares about cluster time at all). I reverted back to basic server mocking and kept the logic to add/remove ""$clusterTime"" from each isMaster response. That said, I'm not sure that makes sense in the real world, unless cluster time requires FCV 3.6 while OP_MSG only requires 3.6.

Let's update test_framework_clustertime_supported to return false for standalones.

test_framework_clustertime_supported() actually requires a live server, and standalones never report ""$clusterTime"" in their isMaster responses so I don't think any changes are necessary there.

My last change will be adding a test based on the edge case for manually advancing a standalone's session.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,494,2018-04-26T20:40:54Z,2018-04-30T16:08:30Z,2018-04-30T16:08:36Z,MERGED,True,88,11,2,https://github.com/jmikola,CDRIVER-2439 don't gossip cluster time to standalones,2,[],https://github.com/mongodb/mongo-c-driver/pull/494,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/494#issuecomment-385130667,"https://jira.mongodb.org/browse/CDRIVER-2439
This addresses an edge case where an explicit session's cluster time may have been manually advanced. Under normal usage, sessions used with a standalone will always have an empty cluster time.",Evergreen build: https://evergreen.mongodb.com/version/5ae3d1742fbabe28b037ea45,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,495,2018-04-27T18:04:26Z,2018-04-28T01:27:43Z,2018-04-28T01:27:48Z,MERGED,True,13,6,1,https://github.com/jmikola, Add additional 3.6 fields in mock replica set isMaster,2,[],https://github.com/mongodb/mongo-c-driver/pull/495,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/495,"This makes isMaster consistent with mock_mongos_new().
I originally developed this while investigating a fix for #494, but ended up not needing it. I still think there's value in the changes, and they didn't appear to break any existing mock tests across the driver.","This makes isMaster consistent with mock_mongos_new().
I originally developed this while investigating a fix for #494, but ended up not needing it. I still think there's value in the changes, and they didn't appear to break any existing mock tests across the driver.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,496,2018-05-05T15:26:31Z,2018-05-05T15:39:27Z,2018-05-05T15:39:36Z,MERGED,True,3,1,1,https://github.com/ajdavis,quieter travis setup on Mac,1,[],https://github.com/mongodb/mongo-c-driver/pull/496,https://github.com/ajdavis,1,https://github.com/mongodb/mongo-c-driver/pull/496,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,497,2018-05-17T19:31:00Z,2018-05-18T16:23:20Z,2018-05-19T18:19:07Z,CLOSED,False,1256,1420,1241,https://github.com/kevinAlbs,CDRIVER-2505 make libmongoc a sub-project,20,[],https://github.com/mongodb/mongo-c-driver/pull/497,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/497,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,497,2018-05-17T19:31:00Z,2018-05-18T16:23:20Z,2018-05-19T18:19:07Z,CLOSED,False,1256,1420,1241,https://github.com/kevinAlbs,CDRIVER-2505 make libmongoc a sub-project,20,[],https://github.com/mongodb/mongo-c-driver/pull/497,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/497#issuecomment-390059641,,@ajdavis I have made changes according to your comments.  I also removed similar lines in src/libbson/doc/man/CMakeLists.txt and src/libbson/doc/html/CMakeLists.txt.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,497,2018-05-17T19:31:00Z,2018-05-18T16:23:20Z,2018-05-19T18:19:07Z,CLOSED,False,1256,1420,1241,https://github.com/kevinAlbs,CDRIVER-2505 make libmongoc a sub-project,20,[],https://github.com/mongodb/mongo-c-driver/pull/497,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/497#issuecomment-390059847,,LGTM,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,497,2018-05-17T19:31:00Z,2018-05-18T16:23:20Z,2018-05-19T18:19:07Z,CLOSED,False,1256,1420,1241,https://github.com/kevinAlbs,CDRIVER-2505 make libmongoc a sub-project,20,[],https://github.com/mongodb/mongo-c-driver/pull/497,https://github.com/kevinAlbs,4,https://github.com/mongodb/mongo-c-driver/pull/497#issuecomment-390259740,,Woo! This has been merged (just not with the pull request).,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,497,2018-05-17T19:31:00Z,2018-05-18T16:23:20Z,2018-05-19T18:19:07Z,CLOSED,False,1256,1420,1241,https://github.com/kevinAlbs,CDRIVER-2505 make libmongoc a sub-project,20,[],https://github.com/mongodb/mongo-c-driver/pull/497,https://github.com/rcsanchez97,5,https://github.com/mongodb/mongo-c-driver/pull/497#issuecomment-390335105,,"@kevinAlbs I notice that commits fcc6652, 63e5e92, and 7531488 weren't merged into master. Is that purposeful?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,497,2018-05-17T19:31:00Z,2018-05-18T16:23:20Z,2018-05-19T18:19:07Z,CLOSED,False,1256,1420,1241,https://github.com/kevinAlbs,CDRIVER-2505 make libmongoc a sub-project,20,[],https://github.com/mongodb/mongo-c-driver/pull/497,https://github.com/kevinAlbs,6,https://github.com/mongodb/mongo-c-driver/pull/497#issuecomment-390336574,,"Ugh, I must not have pulled before pushing. Roberto, can you push those three remaining commits. Sorry about that.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,497,2018-05-17T19:31:00Z,2018-05-18T16:23:20Z,2018-05-19T18:19:07Z,CLOSED,False,1256,1420,1241,https://github.com/kevinAlbs,CDRIVER-2505 make libmongoc a sub-project,20,[],https://github.com/mongodb/mongo-c-driver/pull/497,https://github.com/rcsanchez97,7,https://github.com/mongodb/mongo-c-driver/pull/497#issuecomment-390342642,,No worries.  All done.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,497,2018-05-17T19:31:00Z,2018-05-18T16:23:20Z,2018-05-19T18:19:07Z,CLOSED,False,1256,1420,1241,https://github.com/kevinAlbs,CDRIVER-2505 make libmongoc a sub-project,20,[],https://github.com/mongodb/mongo-c-driver/pull/497,https://github.com/rcsanchez97,8,https://github.com/mongodb/mongo-c-driver/pull/497#issuecomment-390342949,,"Also, do we want to delete this branch now?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,498,2018-05-28T11:29:03Z,2018-05-28T13:19:02Z,2018-05-28T13:19:08Z,MERGED,True,1,0,1,https://github.com/remicollet,CDRIVER-2667 include mongoc.h to have MONGOC_ENABLE_SHM_COUNTERS,1,[],https://github.com/mongodb/mongo-c-driver/pull/498,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/498,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,498,2018-05-28T11:29:03Z,2018-05-28T13:19:02Z,2018-05-28T13:19:08Z,MERGED,True,1,0,1,https://github.com/remicollet,CDRIVER-2667 include mongoc.h to have MONGOC_ENABLE_SHM_COUNTERS,1,[],https://github.com/mongodb/mongo-c-driver/pull/498,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/498#issuecomment-392525045,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,499,2018-06-06T14:22:26Z,2018-06-06T14:23:16Z,2018-06-06T14:39:48Z,MERGED,True,18,39,4,https://github.com/edobranov,CDRIVER-2676 fix add_user to omit hashed password,1,[],https://github.com/mongodb/mongo-c-driver/pull/499,https://github.com/edobranov,1,https://github.com/mongodb/mongo-c-driver/pull/499,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,499,2018-06-06T14:22:26Z,2018-06-06T14:23:16Z,2018-06-06T14:39:48Z,MERGED,True,18,39,4,https://github.com/edobranov,CDRIVER-2676 fix add_user to omit hashed password,1,[],https://github.com/mongodb/mongo-c-driver/pull/499,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/499#issuecomment-395092607,,w00t!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,500,2018-06-13T14:37:18Z,2018-06-13T19:52:11Z,2018-06-14T23:00:09Z,MERGED,True,32,32,18,https://github.com/ajdavis,"update ""bind_ip"" in orchestration configs",1,[],https://github.com/mongodb/mongo-c-driver/pull/500,https://github.com/ajdavis,1,https://github.com/mongodb/mongo-c-driver/pull/500,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,501,2018-06-13T20:35:06Z,2018-06-13T20:51:13Z,2018-08-17T17:51:25Z,MERGED,True,25,1,2,https://github.com/spencemc,CDRIVER-2159 ignore non-ascii in lowercase,1,[],https://github.com/mongodb/mongo-c-driver/pull/501,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/501,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,502,2018-06-14T19:28:40Z,2018-06-14T19:30:40Z,2018-08-17T17:51:24Z,CLOSED,False,44,26,1,https://github.com/spencemc,CDRIVER-2618 assert_cmp macros copy arguments,1,[],https://github.com/mongodb/mongo-c-driver/pull/502,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/502,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,503,2018-06-14T19:35:40Z,2018-06-15T14:02:54Z,2018-08-17T17:51:24Z,MERGED,True,44,26,1,https://github.com/spencemc,CDRIVER-2618 assert_cmp macros copy arguments,1,[],https://github.com/mongodb/mongo-c-driver/pull/503,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/503,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,504,2018-06-18T14:24:38Z,2018-06-18T14:53:47Z,2018-08-17T17:51:24Z,MERGED,True,15,79,2,https://github.com/spencemc,CDRIVER-2647 refactor mongoc write command,1,[],https://github.com/mongodb/mongo-c-driver/pull/504,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/504,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,505,2018-06-21T17:24:17Z,2018-06-21T17:50:49Z,2018-08-17T17:51:26Z,MERGED,True,139,58,2,https://github.com/spencemc,CDRIVER-2621 write concern tests fixed,1,[],https://github.com/mongodb/mongo-c-driver/pull/505,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/505,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,506,2018-06-21T18:07:29Z,2018-06-21T18:12:37Z,2018-08-17T17:51:24Z,MERGED,True,347,0,1,https://github.com/spencemc,CDRIVER-2500 aggregation and other doc examples,1,[],https://github.com/mongodb/mongo-c-driver/pull/506,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/506,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,507,2018-06-22T16:32:26Z,2018-06-22T17:09:09Z,2018-08-17T17:51:25Z,MERGED,True,2,0,1,https://github.com/spencemc,read write concern test leak fixed,1,[],https://github.com/mongodb/mongo-c-driver/pull/507,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/507,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,508,2018-06-22T21:12:17Z,2018-06-22T21:18:49Z,2018-08-17T17:51:26Z,MERGED,True,1,1,1,https://github.com/spencemc,CDRIVER-2621 write concern default bug fixed,1,[],https://github.com/mongodb/mongo-c-driver/pull/508,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/508,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,509,2018-07-03T18:42:05Z,2018-07-11T17:22:49Z,2018-07-11T17:22:49Z,CLOSED,False,5,5,1,https://github.com/sgalipeau,Update bson-memory.h,1,[],https://github.com/mongodb/mongo-c-driver/pull/509,https://github.com/sgalipeau,1,https://github.com/mongodb/mongo-c-driver/pull/509,Fix calling convention for program not using __cdecl calling convention.,Fix calling convention for program not using __cdecl calling convention.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,509,2018-07-03T18:42:05Z,2018-07-11T17:22:49Z,2018-07-11T17:22:49Z,CLOSED,False,5,5,1,https://github.com/sgalipeau,Update bson-memory.h,1,[],https://github.com/mongodb/mongo-c-driver/pull/509,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/509#issuecomment-404247666,Fix calling convention for program not using __cdecl calling convention.,"Hi @sgalipeau, thank you for bringing this up and for providing a fix. This is an improvement but unfortunately not one we can make right now. Marking these functions with __cdecl would break ABI; applications could be relying on them not being marked with __cdecl.
libmongoc is ABI stable, but if we eventually decide to release another major version we will happily re-open and merge this PR. I've created a ticket, CDRIVER-2737 to track this.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,510,2018-07-04T08:40:43Z,2018-07-04T23:09:35Z,2018-07-05T01:32:53Z,MERGED,True,1,1,1,https://github.com/Pingmin,Correct the sample URI of the aggregation example,1,[],https://github.com/mongodb/mongo-c-driver/pull/510,https://github.com/Pingmin,1,https://github.com/mongodb/mongo-c-driver/pull/510,"Just add the missing ""/"".","Just add the missing ""/"".",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,510,2018-07-04T08:40:43Z,2018-07-04T23:09:35Z,2018-07-05T01:32:53Z,MERGED,True,1,1,1,https://github.com/Pingmin,Correct the sample URI of the aggregation example,1,[],https://github.com/mongodb/mongo-c-driver/pull/510,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/510#issuecomment-402570123,"Just add the missing ""/"".",Thank you for the contribution @Pingmin!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,510,2018-07-04T08:40:43Z,2018-07-04T23:09:35Z,2018-07-05T01:32:53Z,MERGED,True,1,1,1,https://github.com/Pingmin,Correct the sample URI of the aggregation example,1,[],https://github.com/mongodb/mongo-c-driver/pull/510,https://github.com/Pingmin,3,https://github.com/mongodb/mongo-c-driver/pull/510#issuecomment-402581778,"Just add the missing ""/"".",@kevinAlbs  It's my pleasure and thank you too!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,511,2018-07-09T18:27:23Z,2018-07-09T19:05:57Z,2018-07-09T19:06:00Z,MERGED,True,37,0,1,https://github.com/markbenvenuto,CDRIVER-2658 Save minidump files if mongodb crashes during test,1,[],https://github.com/mongodb/mongo-c-driver/pull/511,https://github.com/markbenvenuto,1,https://github.com/mongodb/mongo-c-driver/pull/511,"This was already reviewed by @kevinAlbs but I do not have push permission I needed to open a pull request.
Description from earlier CR:
There is a rare crash on Windows SSL with MongoDB that I would like to get a dump for. As such, I have migrated the Server's evergreen support for collecting crash dumps to the C Driver.
MDMP
Mongo Orchestration is running mongodb from c:\mongodb. Example is from the log in SERVER-35125
2018-05-21T16:23:22.131+0000 I CONTROL [conn9] writing minidump diagnostic file c:\mongodb\bin\mongod.2018-05-21T16-23-22.mdmp
Linux
MongoDB Evergreen hosts generate crashdumps with .core","This was already reviewed by @kevinAlbs but I do not have push permission I needed to open a pull request.
Description from earlier CR:
There is a rare crash on Windows SSL with MongoDB that I would like to get a dump for. As such, I have migrated the Server's evergreen support for collecting crash dumps to the C Driver.
MDMP
Mongo Orchestration is running mongodb from c:\mongodb. Example is from the log in SERVER-35125
2018-05-21T16:23:22.131+0000 I CONTROL [conn9] writing minidump diagnostic file c:\mongodb\bin\mongod.2018-05-21T16-23-22.mdmp
Linux
MongoDB Evergreen hosts generate crashdumps with .core",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,511,2018-07-09T18:27:23Z,2018-07-09T19:05:57Z,2018-07-09T19:06:00Z,MERGED,True,37,0,1,https://github.com/markbenvenuto,CDRIVER-2658 Save minidump files if mongodb crashes during test,1,[],https://github.com/mongodb/mongo-c-driver/pull/511,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/511#issuecomment-403587153,"This was already reviewed by @kevinAlbs but I do not have push permission I needed to open a pull request.
Description from earlier CR:
There is a rare crash on Windows SSL with MongoDB that I would like to get a dump for. As such, I have migrated the Server's evergreen support for collecting crash dumps to the C Driver.
MDMP
Mongo Orchestration is running mongodb from c:\mongodb. Example is from the log in SERVER-35125
2018-05-21T16:23:22.131+0000 I CONTROL [conn9] writing minidump diagnostic file c:\mongodb\bin\mongod.2018-05-21T16-23-22.mdmp
Linux
MongoDB Evergreen hosts generate crashdumps with .core",Thanks for doing this Mark!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,512,2018-07-09T20:02:41Z,2018-07-09T20:52:31Z,2018-07-09T20:52:31Z,CLOSED,False,3674,3654,76,https://github.com/spencemc,update spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/512,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/512,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,513,2018-07-09T20:53:58Z,2018-07-09T23:05:01Z,2018-07-09T23:05:01Z,MERGED,True,3653,3654,75,https://github.com/spencemc,update spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/513,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/513,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,513,2018-07-09T20:53:58Z,2018-07-09T23:05:01Z,2018-07-09T23:05:01Z,MERGED,True,3653,3654,75,https://github.com/spencemc,update spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/513,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/513#issuecomment-403622425,,"I only skimmed this over, but LGTM. We can merge once travis passes.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,514,2018-07-09T21:00:32Z,2018-07-09T23:17:41Z,2018-07-09T23:17:42Z,MERGED,True,21,0,1,https://github.com/spencemc,CDRIVER-2687 allow unencoded subdelimiters,1,[],https://github.com/mongodb/mongo-c-driver/pull/514,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/514,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,514,2018-07-09T21:00:32Z,2018-07-09T23:17:41Z,2018-07-09T23:17:42Z,MERGED,True,21,0,1,https://github.com/spencemc,CDRIVER-2687 allow unencoded subdelimiters,1,[],https://github.com/mongodb/mongo-c-driver/pull/514,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/514#issuecomment-403622613,,LGTM!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,515,2018-07-10T13:56:45Z,2018-07-10T14:16:09Z,2018-07-10T14:16:09Z,MERGED,True,111,0,3,https://github.com/spencemc,CDRIVER-2641 abi evergreen tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/515,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/515,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,516,2018-07-11T18:29:19Z,2018-07-11T19:33:27Z,2018-07-11T19:33:54Z,MERGED,True,3504,1,31,https://github.com/spencemc,CDRIVER-2530 crud spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/516,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/516,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,516,2018-07-11T18:29:19Z,2018-07-11T19:33:27Z,2018-07-11T19:33:54Z,MERGED,True,3504,1,31,https://github.com/spencemc,CDRIVER-2530 crud spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/516,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/516#issuecomment-404285202,,Nice! LGTM. Can you comment on CDRIVER-2736 that we've omitted the one find test that triggered that failure?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,517,2018-07-12T18:22:14Z,2018-07-13T15:51:37Z,2018-07-13T17:12:09Z,MERGED,True,49,9,2,https://github.com/jmikola,CDRIVER-2744: Allow primary RP in _mongoc_cursor_new_with_opts(),1,[],https://github.com/mongodb/mongo-c-driver/pull/517,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/517,https://jira.mongodb.org/browse/CDRIVER-2744,https://jira.mongodb.org/browse/CDRIVER-2744,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,517,2018-07-12T18:22:14Z,2018-07-13T15:51:37Z,2018-07-13T17:12:09Z,MERGED,True,49,9,2,https://github.com/jmikola,CDRIVER-2744: Allow primary RP in _mongoc_cursor_new_with_opts(),1,[],https://github.com/mongodb/mongo-c-driver/pull/517,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/517#issuecomment-404618430,https://jira.mongodb.org/browse/CDRIVER-2744,Would you mind adding a basic C Driver test in test-mongoc-transactions.c?,True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,517,2018-07-12T18:22:14Z,2018-07-13T15:51:37Z,2018-07-13T17:12:09Z,MERGED,True,49,9,2,https://github.com/jmikola,CDRIVER-2744: Allow primary RP in _mongoc_cursor_new_with_opts(),1,[],https://github.com/mongodb/mongo-c-driver/pull/517,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/517#issuecomment-404874221,https://jira.mongodb.org/browse/CDRIVER-2744,Thanks! I'll cherry-pick to r1.11,True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,518,2018-07-19T17:34:00Z,2018-07-19T17:36:38Z,2018-07-19T17:36:38Z,CLOSED,False,613,1,3,https://github.com/spencemc,CDRIVER-1453 code coverage using codecov.io,1,[],https://github.com/mongodb/mongo-c-driver/pull/518,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/518,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,519,2018-07-19T17:41:45Z,2018-07-19T18:04:42Z,2018-07-19T18:04:42Z,MERGED,True,613,1,3,https://github.com/spencemc,CDRIVER-1453 code coverage using codecov.io,1,[],https://github.com/mongodb/mongo-c-driver/pull/519,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/519,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,520,2018-07-19T18:02:44Z,2018-07-23T01:31:33Z,2018-07-23T01:31:33Z,CLOSED,False,53,53,36,https://github.com/gustafn,Improve spelling in source files,1,[],https://github.com/mongodb/mongo-c-driver/pull/520,https://github.com/gustafn,1,https://github.com/mongodb/mongo-c-driver/pull/520,see ticket at https://jira.mongodb.org/browse/CDRIVER-2758,see ticket at https://jira.mongodb.org/browse/CDRIVER-2758,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,520,2018-07-19T18:02:44Z,2018-07-23T01:31:33Z,2018-07-23T01:31:33Z,CLOSED,False,53,53,36,https://github.com/gustafn,Improve spelling in source files,1,[],https://github.com/mongodb/mongo-c-driver/pull/520,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/520#issuecomment-406389943,see ticket at https://jira.mongodb.org/browse/CDRIVER-2758,"On Thu, Jul 19, 2018 at 12:24:56PM -0700, A. Jesse Jiryu Davis wrote:
  - * For more information on what comprimises a BSON regex, see bsonspec.org.
  + * For more information on what compromises a BSON regex, see bsonspec.org.

    comprises, here and below

This would be a misuse of 'comprises'.  A better here word would be
'constitutes'.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,520,2018-07-19T18:02:44Z,2018-07-23T01:31:33Z,2018-07-23T01:31:33Z,CLOSED,False,53,53,36,https://github.com/gustafn,Improve spelling in source files,1,[],https://github.com/mongodb/mongo-c-driver/pull/520,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/520#issuecomment-406393163,see ticket at https://jira.mongodb.org/browse/CDRIVER-2758,"Good point, let's use ""constitutes"".",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,520,2018-07-19T18:02:44Z,2018-07-23T01:31:33Z,2018-07-23T01:31:33Z,CLOSED,False,53,53,36,https://github.com/gustafn,Improve spelling in source files,1,[],https://github.com/mongodb/mongo-c-driver/pull/520,https://github.com/gustafn,4,https://github.com/mongodb/mongo-c-driver/pull/520#issuecomment-406394840,see ticket at https://jira.mongodb.org/browse/CDRIVER-2758,"or maybe ""For detailed information about BSON regex, see bsonspec.org.""",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,520,2018-07-19T18:02:44Z,2018-07-23T01:31:33Z,2018-07-23T01:31:33Z,CLOSED,False,53,53,36,https://github.com/gustafn,Improve spelling in source files,1,[],https://github.com/mongodb/mongo-c-driver/pull/520,https://github.com/ajdavis,5,https://github.com/mongodb/mongo-c-driver/pull/520#issuecomment-406409955,see ticket at https://jira.mongodb.org/browse/CDRIVER-2758,"Sure, even better. =)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,520,2018-07-19T18:02:44Z,2018-07-23T01:31:33Z,2018-07-23T01:31:33Z,CLOSED,False,53,53,36,https://github.com/gustafn,Improve spelling in source files,1,[],https://github.com/mongodb/mongo-c-driver/pull/520,https://github.com/ajdavis,6,https://github.com/mongodb/mongo-c-driver/pull/520#issuecomment-406914535,see ticket at https://jira.mongodb.org/browse/CDRIVER-2758,"Merged in 62c9c3c, thank you!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,521,2018-07-19T19:07:13Z,2018-07-19T19:38:25Z,2018-07-19T19:38:25Z,MERGED,True,161,101,15,https://github.com/spencemc,CDRIVER-2685 only send bypass validation if true,1,[],https://github.com/mongodb/mongo-c-driver/pull/521,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/521,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,522,2018-07-20T14:24:54Z,2018-07-20T14:41:35Z,2018-07-20T14:41:35Z,MERGED,True,1,1,1,https://github.com/spencemc,CDRIVER-2756 add mongo export to replace one,1,[],https://github.com/mongodb/mongo-c-driver/pull/522,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/522,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,523,2018-07-20T18:20:39Z,2018-07-20T18:45:29Z,2018-07-20T18:45:29Z,MERGED,True,10,28,2,https://github.com/spencemc,CDRIVER-2731 fix abi compliance,1,[],https://github.com/mongodb/mongo-c-driver/pull/523,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/523,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,524,2018-07-24T09:58:15Z,2018-07-24T12:56:16Z,2018-07-24T12:56:16Z,CLOSED,False,7,0,2,https://github.com/derickr,Document that client_set_ssl_opts overrides URI SSL options,2,[],https://github.com/mongodb/mongo-c-driver/pull/524,https://github.com/derickr,1,https://github.com/mongodb/mongo-c-driver/pull/524,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,524,2018-07-24T09:58:15Z,2018-07-24T12:56:16Z,2018-07-24T12:56:16Z,CLOSED,False,7,0,2,https://github.com/derickr,Document that client_set_ssl_opts overrides URI SSL options,2,[],https://github.com/mongodb/mongo-c-driver/pull/524,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/524#issuecomment-407394717,,"LGTM, please squash into one commit and commit to master.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,525,2018-07-25T10:01:59Z,2018-07-25T12:44:37Z,2018-07-25T12:57:39Z,MERGED,True,1,1,1,https://github.com/jeroen,Fix warning: arithmetic on a pointer to void,1,[],https://github.com/mongodb/mongo-c-driver/pull/525,https://github.com/jeroen,1,https://github.com/mongodb/mongo-c-driver/pull/525,Arithmetic on a pointer to void is a GNU extension [-Wpointer-arith],Arithmetic on a pointer to void is a GNU extension [-Wpointer-arith],True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,525,2018-07-25T10:01:59Z,2018-07-25T12:44:37Z,2018-07-25T12:57:39Z,MERGED,True,1,1,1,https://github.com/jeroen,Fix warning: arithmetic on a pointer to void,1,[],https://github.com/mongodb/mongo-c-driver/pull/525,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/525#issuecomment-407741629,Arithmetic on a pointer to void is a GNU extension [-Wpointer-arith],Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,526,2018-08-09T15:34:52Z,2018-08-10T22:12:55Z,2018-08-29T16:42:14Z,MERGED,True,3,3,3,https://github.com/jeroen,Fix for LibreSSL 2.7,1,[],https://github.com/mongodb/mongo-c-driver/pull/526,https://github.com/jeroen,1,https://github.com/mongodb/mongo-c-driver/pull/526,"LibreSSL version 2.7.0 and up use the OpenSSL 1.1 API
See also: https://wiki.freebsd.org/LibreSSL
I have tested this with:

libressl 2.7.4
libressl 2.7.1
libressl 2.6.4

And it does the right thing.","LibreSSL version 2.7.0 and up use the OpenSSL 1.1 API
See also: https://wiki.freebsd.org/LibreSSL
I have tested this with:

libressl 2.7.4
libressl 2.7.1
libressl 2.6.4

And it does the right thing.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,526,2018-08-09T15:34:52Z,2018-08-10T22:12:55Z,2018-08-29T16:42:14Z,MERGED,True,3,3,3,https://github.com/jeroen,Fix for LibreSSL 2.7,1,[],https://github.com/mongodb/mongo-c-driver/pull/526,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/526#issuecomment-412220140,"LibreSSL version 2.7.0 and up use the OpenSSL 1.1 API
See also: https://wiki.freebsd.org/LibreSSL
I have tested this with:

libressl 2.7.4
libressl 2.7.1
libressl 2.6.4

And it does the right thing.",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,526,2018-08-09T15:34:52Z,2018-08-10T22:12:55Z,2018-08-29T16:42:14Z,MERGED,True,3,3,3,https://github.com/jeroen,Fix for LibreSSL 2.7,1,[],https://github.com/mongodb/mongo-c-driver/pull/526,https://github.com/ajdavis,3,https://github.com/mongodb/mongo-c-driver/pull/526#issuecomment-417021507,"LibreSSL version 2.7.0 and up use the OpenSSL 1.1 API
See also: https://wiki.freebsd.org/LibreSSL
I have tested this with:

libressl 2.7.4
libressl 2.7.1
libressl 2.6.4

And it does the right thing.",Tracked here: https://jira.mongodb.org/browse/CDRIVER-2808,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,527,2018-08-09T17:51:26Z,2018-09-14T12:43:40Z,2019-08-12T21:17:20Z,CLOSED,False,1,1,1,https://github.com/kmahar,"Document reply documents for update_one, update_many, replace_one",1,[],https://github.com/mongodb/mongo-c-driver/pull/527,https://github.com/kmahar,1,https://github.com/mongodb/mongo-c-driver/pull/527,"@jmikola pointed out in mongo-swift-driver#104 that upsertedCount is not mentioned in the docs. It seems that the reply document behavior is identical across all three of these functions, so I've updated the docs to match.","@jmikola pointed out in mongo-swift-driver#104 that upsertedCount is not mentioned in the docs. It seems that the reply document behavior is identical across all three of these functions, so I've updated the docs to match.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,527,2018-08-09T17:51:26Z,2018-09-14T12:43:40Z,2019-08-12T21:17:20Z,CLOSED,False,1,1,1,https://github.com/kmahar,"Document reply documents for update_one, update_many, replace_one",1,[],https://github.com/mongodb/mongo-c-driver/pull/527,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/527#issuecomment-419746485,"@jmikola pointed out in mongo-swift-driver#104 that upsertedCount is not mentioned in the docs. It seems that the reply document behavior is identical across all three of these functions, so I've updated the docs to match.","Thanks! Could you make the text of these three functions as similar as possible to the paragraph in mongoc_collection_insert_one.rst?:

If you pass a non-NULL reply, it is filled out with an ""insertedCount"" field. If there is a server error then reply contains either a ""writeErrors"" array with one subdocument or a ""writeConcernErrors"" array. The reply must be freed with :symbol:bson:bson_destroy.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,527,2018-08-09T17:51:26Z,2018-09-14T12:43:40Z,2019-08-12T21:17:20Z,CLOSED,False,1,1,1,https://github.com/kmahar,"Document reply documents for update_one, update_many, replace_one",1,[],https://github.com/mongodb/mongo-c-driver/pull/527,https://github.com/kmahar,3,https://github.com/mongodb/mongo-c-driver/pull/527#issuecomment-421340787,"@jmikola pointed out in mongo-swift-driver#104 that upsertedCount is not mentioned in the docs. It seems that the reply document behavior is identical across all three of these functions, so I've updated the docs to match.","oh, it looks like @jmikola beat me to making this change to update_one and update_many docs. I'll modify this to only update replace_one.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,527,2018-08-09T17:51:26Z,2018-09-14T12:43:40Z,2019-08-12T21:17:20Z,CLOSED,False,1,1,1,https://github.com/kmahar,"Document reply documents for update_one, update_many, replace_one",1,[],https://github.com/mongodb/mongo-c-driver/pull/527,https://github.com/ajdavis,4,https://github.com/mongodb/mongo-c-driver/pull/527#issuecomment-421346797,"@jmikola pointed out in mongo-swift-driver#104 that upsertedCount is not mentioned in the docs. It seems that the reply document behavior is identical across all three of these functions, so I've updated the docs to match.",Merged in 06d8859 thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,528,2018-08-10T14:06:04Z,2018-08-10T15:17:22Z,2018-08-10T15:17:27Z,MERGED,True,6,6,2,https://github.com/henrikedin,Fix two warnings when using mongoc.h with the Visual Studio compiler,1,[],https://github.com/mongodb/mongo-c-driver/pull/528,https://github.com/henrikedin,1,https://github.com/mongodb/mongo-c-driver/pull/528,"Fix macro redefinition warning when including <inttypes.h> after mongoc.h using Visual Studio 2013 or newer.
Fix iov_len in mongoc_iovec_t on Windows to be size_t like on Linux","Fix macro redefinition warning when including <inttypes.h> after mongoc.h using Visual Studio 2013 or newer.
Fix iov_len in mongoc_iovec_t on Windows to be size_t like on Linux",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,528,2018-08-10T14:06:04Z,2018-08-10T15:17:22Z,2018-08-10T15:17:27Z,MERGED,True,6,6,2,https://github.com/henrikedin,Fix two warnings when using mongoc.h with the Visual Studio compiler,1,[],https://github.com/mongodb/mongo-c-driver/pull/528,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/528#issuecomment-412114479,"Fix macro redefinition warning when including <inttypes.h> after mongoc.h using Visual Studio 2013 or newer.
Fix iov_len in mongoc_iovec_t on Windows to be size_t like on Linux",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,529,2018-08-13T19:33:48Z,2018-08-13T20:35:18Z,2018-08-13T20:35:18Z,MERGED,True,1,1,1,https://github.com/spencemc,CDRIVER-2769 bson parsing docs correction,1,[],https://github.com/mongodb/mongo-c-driver/pull/529,https://github.com/spencemc,1,https://github.com/mongodb/mongo-c-driver/pull/529,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,530,2018-08-14T16:25:07Z,2018-09-06T19:26:45Z,2018-09-06T19:26:45Z,CLOSED,False,52,4,5,https://github.com/CMLDMR,R1.12 small change for working on Android,2,[],https://github.com/mongodb/mongo-c-driver/pull/530,https://github.com/CMLDMR,1,https://github.com/mongodb/mongo-c-driver/pull/530,"1. in ""mongo-c-driver-1.12.0\src\libmongoc\src\mongocmongoc-util.c"" file
if you change this line
return rand_r (seed);
to
srand(seed); return rand();
because android not support or has not a librt file. linux support but android.
code compiled successfuly with NDK R17 on windows and working well different android device and version.
I reported here: jira.mongodb.org
2. gridfs download file or attemp any function example: get file size or get file name affect application that crashed. may be it can became from different compiler version but both of Mingw32 5.30. but I changed Qt Library from 5.10 to 5.11. if it changed the compiler.","1. in ""mongo-c-driver-1.12.0\src\libmongoc\src\mongocmongoc-util.c"" file
if you change this line
return rand_r (seed);
to
srand(seed); return rand();
because android not support or has not a librt file. linux support but android.
code compiled successfuly with NDK R17 on windows and working well different android device and version.
I reported here: jira.mongodb.org
2. gridfs download file or attemp any function example: get file size or get file name affect application that crashed. may be it can became from different compiler version but both of Mingw32 5.30. but I changed Qt Library from 5.10 to 5.11. if it changed the compiler.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,530,2018-08-14T16:25:07Z,2018-09-06T19:26:45Z,2018-09-06T19:26:45Z,CLOSED,False,52,4,5,https://github.com/CMLDMR,R1.12 small change for working on Android,2,[],https://github.com/mongodb/mongo-c-driver/pull/530,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/530#issuecomment-419213109,"1. in ""mongo-c-driver-1.12.0\src\libmongoc\src\mongocmongoc-util.c"" file
if you change this line
return rand_r (seed);
to
srand(seed); return rand();
because android not support or has not a librt file. linux support but android.
code compiled successfuly with NDK R17 on windows and working well different android device and version.
I reported here: jira.mongodb.org
2. gridfs download file or attemp any function example: get file size or get file name affect application that crashed. may be it can became from different compiler version but both of Mingw32 5.30. but I changed Qt Library from 5.10 to 5.11. if it changed the compiler.","Hi @CMLDMR, I don't think this pull request has the commits you want. I'm closing this, but feel free to open another.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,531,2018-08-15T04:50:42Z,2018-09-06T19:25:04Z,2018-09-06T19:25:04Z,CLOSED,False,616,224,34,https://github.com/shikainan,R1.10,21,[],https://github.com/mongodb/mongo-c-driver/pull/531,https://github.com/shikainan,1,https://github.com/mongodb/mongo-c-driver/pull/531,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,532,2018-08-23T15:27:40Z,2018-08-24T16:33:09Z,2018-08-24T16:33:26Z,MERGED,True,1893,1835,434,https://github.com/henrikedin,CDRIVER-2800 Restructure install directory.,1,[],https://github.com/mongodb/mongo-c-driver/pull/532,https://github.com/henrikedin,1,https://github.com/mongodb/mongo-c-driver/pull/532,"All mongoc headers are under mongoc/ and all bson headers are under
bson/. The preferred way of including the headers are mongoc/mongoc.h
and bson/bson.h respectively. Forwarding headers in the root are
provided for backwards compatibility.
Preparation work to be able to create darwin style frameworks.","All mongoc headers are under mongoc/ and all bson headers are under
bson/. The preferred way of including the headers are mongoc/mongoc.h
and bson/bson.h respectively. Forwarding headers in the root are
provided for backwards compatibility.
Preparation work to be able to create darwin style frameworks.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,532,2018-08-23T15:27:40Z,2018-08-24T16:33:09Z,2018-08-24T16:33:26Z,MERGED,True,1893,1835,434,https://github.com/henrikedin,CDRIVER-2800 Restructure install directory.,1,[],https://github.com/mongodb/mongo-c-driver/pull/532,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/532#issuecomment-415812844,"All mongoc headers are under mongoc/ and all bson headers are under
bson/. The preferred way of including the headers are mongoc/mongoc.h
and bson/bson.h respectively. Forwarding headers in the root are
provided for backwards compatibility.
Preparation work to be able to create darwin style frameworks.",Thanks for doing this work!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,533,2018-08-28T05:36:01Z,2018-08-28T19:59:23Z,2018-08-29T01:38:08Z,MERGED,True,3,1,1,https://github.com/hydrapolic,CDRIVER-2787 fix building with empty LIBRESSL_INCLUDE_DIRS,1,[],https://github.com/mongodb/mongo-c-driver/pull/533,https://github.com/hydrapolic,1,https://github.com/mongodb/mongo-c-driver/pull/533,"https://jira.mongodb.org/browse/CDRIVER-2787
https://bugs.gentoo.org/662654","https://jira.mongodb.org/browse/CDRIVER-2787
https://bugs.gentoo.org/662654",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,533,2018-08-28T05:36:01Z,2018-08-28T19:59:23Z,2018-08-29T01:38:08Z,MERGED,True,3,1,1,https://github.com/hydrapolic,CDRIVER-2787 fix building with empty LIBRESSL_INCLUDE_DIRS,1,[],https://github.com/mongodb/mongo-c-driver/pull/533,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/533#issuecomment-416720370,"https://jira.mongodb.org/browse/CDRIVER-2787
https://bugs.gentoo.org/662654",Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,533,2018-08-28T05:36:01Z,2018-08-28T19:59:23Z,2018-08-29T01:38:08Z,MERGED,True,3,1,1,https://github.com/hydrapolic,CDRIVER-2787 fix building with empty LIBRESSL_INCLUDE_DIRS,1,[],https://github.com/mongodb/mongo-c-driver/pull/533,https://github.com/hydrapolic,3,https://github.com/mongodb/mongo-c-driver/pull/533#issuecomment-416794259,"https://jira.mongodb.org/browse/CDRIVER-2787
https://bugs.gentoo.org/662654",Thank you @ajdavis,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,534,2018-09-04T20:05:06Z,2018-09-05T14:44:44Z,2018-09-05T14:44:48Z,MERGED,True,12,15,3,https://github.com/henrikedin,CDRIVER-2800 Fix .rst files to reflect new install path.,1,[],https://github.com/mongodb/mongo-c-driver/pull/534,https://github.com/henrikedin,1,https://github.com/mongodb/mongo-c-driver/pull/534,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,534,2018-09-04T20:05:06Z,2018-09-05T14:44:44Z,2018-09-05T14:44:48Z,MERGED,True,12,15,3,https://github.com/henrikedin,CDRIVER-2800 Fix .rst files to reflect new install path.,1,[],https://github.com/mongodb/mongo-c-driver/pull/534,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/534#issuecomment-418757708,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,535,2018-09-07T14:01:59Z,2018-09-07T17:10:27Z,2018-09-07T17:10:34Z,MERGED,True,81,13,5,https://github.com/henrikedin,CDRIVER-2801 Possibility to install as darwin framework.,1,[],https://github.com/mongodb/mongo-c-driver/pull/535,https://github.com/henrikedin,1,https://github.com/mongodb/mongo-c-driver/pull/535,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,535,2018-09-07T14:01:59Z,2018-09-07T17:10:27Z,2018-09-07T17:10:34Z,MERGED,True,81,13,5,https://github.com/henrikedin,CDRIVER-2801 Possibility to install as darwin framework.,1,[],https://github.com/mongodb/mongo-c-driver/pull/535,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/535#issuecomment-419505719,,Thanks for all this work!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,536,2018-09-07T21:15:53Z,2018-09-08T12:46:26Z,2018-09-09T19:45:55Z,MERGED,True,5,5,3,https://github.com/jmikola,Improve documentation for CRUD replies,2,[],https://github.com/mongodb/mongo-c-driver/pull/536,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/536,"update_one and update_many were inconsistent with other methods.
Since insert_many is technically a bulk write, its reply may include multiple writeErrors alongside writeConcernErrors (with one subdocument). Revise that language and reference the bulk write examples to avoid repetition.","update_one and update_many were inconsistent with other methods.
Since insert_many is technically a bulk write, its reply may include multiple writeErrors alongside writeConcernErrors (with one subdocument). Revise that language and reference the bulk write examples to avoid repetition.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,536,2018-09-07T21:15:53Z,2018-09-08T12:46:26Z,2018-09-09T19:45:55Z,MERGED,True,5,5,3,https://github.com/jmikola,Improve documentation for CRUD replies,2,[],https://github.com/mongodb/mongo-c-driver/pull/536,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/536#issuecomment-419639608,"update_one and update_many were inconsistent with other methods.
Since insert_many is technically a bulk write, its reply may include multiple writeErrors alongside writeConcernErrors (with one subdocument). Revise that language and reference the bulk write examples to avoid repetition.",Thank you!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,537,2018-09-14T17:08:31Z,2018-09-17T17:31:25Z,2018-09-17T17:31:34Z,MERGED,True,6,1,3,https://github.com/sgayou,Fix for CVE-2018-16790 -- Verify bounds before binary length read.,1,[],https://github.com/mongodb/mongo-c-driver/pull/537,https://github.com/sgayou,1,https://github.com/mongodb/mongo-c-driver/pull/537,"As reported here: https://jira.mongodb.org/browse/CDRIVER-2819,
a heap overread occurs due a failure to correctly verify data
bounds.
In the original check, len - o returns the data left including the
sizeof(l) we just read. Instead, the comparison should check
against the data left NOT including the binary int32, i.e. just
subtype (byte*) instead of int32 subtype (byte*).","As reported here: https://jira.mongodb.org/browse/CDRIVER-2819,
a heap overread occurs due a failure to correctly verify data
bounds.
In the original check, len - o returns the data left including the
sizeof(l) we just read. Instead, the comparison should check
against the data left NOT including the binary int32, i.e. just
subtype (byte*) instead of int32 subtype (byte*).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,537,2018-09-14T17:08:31Z,2018-09-17T17:31:25Z,2018-09-17T17:31:34Z,MERGED,True,6,1,3,https://github.com/sgayou,Fix for CVE-2018-16790 -- Verify bounds before binary length read.,1,[],https://github.com/mongodb/mongo-c-driver/pull/537,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/537#issuecomment-421452562,"As reported here: https://jira.mongodb.org/browse/CDRIVER-2819,
a heap overread occurs due a failure to correctly verify data
bounds.
In the original check, len - o returns the data left including the
sizeof(l) we just read. Instead, the comparison should check
against the data left NOT including the binary int32, i.e. just
subtype (byte*) instead of int32 subtype (byte*).","Terrific, thank you. Would you please add the corrupt BSON data as a file in src/libbson/tests/binary and add a test like this one?:

  
    
      mongo-c-driver/src/libbson/tests/test-bson.c
    
    
         Line 1247
      in
      b3bdc57
    
  
  
    

        
          
           VALIDATE_TEST (""test54.bson"",",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,537,2018-09-14T17:08:31Z,2018-09-17T17:31:25Z,2018-09-17T17:31:34Z,MERGED,True,6,1,3,https://github.com/sgayou,Fix for CVE-2018-16790 -- Verify bounds before binary length read.,1,[],https://github.com/mongodb/mongo-c-driver/pull/537,https://github.com/sgayou,3,https://github.com/mongodb/mongo-c-driver/pull/537#issuecomment-421574703,"As reported here: https://jira.mongodb.org/browse/CDRIVER-2819,
a heap overread occurs due a failure to correctly verify data
bounds.
In the original check, len - o returns the data left including the
sizeof(l) we just read. Instead, the comparison should check
against the data left NOT including the binary int32, i.e. just
subtype (byte*) instead of int32 subtype (byte*).","Yep, I'll see if I can get that integrated next week.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,537,2018-09-14T17:08:31Z,2018-09-17T17:31:25Z,2018-09-17T17:31:34Z,MERGED,True,6,1,3,https://github.com/sgayou,Fix for CVE-2018-16790 -- Verify bounds before binary length read.,1,[],https://github.com/mongodb/mongo-c-driver/pull/537,https://github.com/sgayou,4,https://github.com/mongodb/mongo-c-driver/pull/537#issuecomment-422084234,"As reported here: https://jira.mongodb.org/browse/CDRIVER-2819,
a heap overread occurs due a failure to correctly verify data
bounds.
In the original check, len - o returns the data left including the
sizeof(l) we just read. Instead, the comparison should check
against the data left NOT including the binary int32, i.e. just
subtype (byte*) instead of int32 subtype (byte*).",Added corrupt BSON example. Let me know if that wasn't what you were looking for.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,537,2018-09-14T17:08:31Z,2018-09-17T17:31:25Z,2018-09-17T17:31:34Z,MERGED,True,6,1,3,https://github.com/sgayou,Fix for CVE-2018-16790 -- Verify bounds before binary length read.,1,[],https://github.com/mongodb/mongo-c-driver/pull/537,https://github.com/ajdavis,5,https://github.com/mongodb/mongo-c-driver/pull/537#issuecomment-422103021,"As reported here: https://jira.mongodb.org/browse/CDRIVER-2819,
a heap overread occurs due a failure to correctly verify data
bounds.
In the original check, len - o returns the data left including the
sizeof(l) we just read. Instead, the comparison should check
against the data left NOT including the binary int32, i.e. just
subtype (byte*) instead of int32 subtype (byte*).",Thanks very much!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,538,2018-09-17T14:42:42Z,2018-09-17T15:30:50Z,2018-09-17T15:30:56Z,MERGED,True,1,1,1,https://github.com/henrikedin,CDRIVER-2826 Possible to build with ENABLE_SRV=OFF on Windows.,1,[],https://github.com/mongodb/mongo-c-driver/pull/538,https://github.com/henrikedin,1,https://github.com/mongodb/mongo-c-driver/pull/538,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,538,2018-09-17T14:42:42Z,2018-09-17T15:30:50Z,2018-09-17T15:30:56Z,MERGED,True,1,1,1,https://github.com/henrikedin,CDRIVER-2826 Possible to build with ENABLE_SRV=OFF on Windows.,1,[],https://github.com/mongodb/mongo-c-driver/pull/538,https://github.com/ajdavis,2,https://github.com/mongodb/mongo-c-driver/pull/538#issuecomment-422063221,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,539,2018-09-20T17:50:30Z,2018-09-20T18:59:41Z,2018-09-20T18:59:41Z,MERGED,True,2,0,2,https://github.com/henrikedin,CDRIVER-2830 Add missing modulemap.in files to the release archive.,1,[],https://github.com/mongodb/mongo-c-driver/pull/539,https://github.com/henrikedin,1,https://github.com/mongodb/mongo-c-driver/pull/539,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,540,2018-11-02T20:18:35Z,2019-07-31T18:43:20Z,2019-07-31T18:43:20Z,CLOSED,False,20,6,2,https://github.com/acmorrow,CDRIVER-2864 CDRIVER-2861,2,[],https://github.com/mongodb/mongo-c-driver/pull/540,https://github.com/acmorrow,1,https://github.com/mongodb/mongo-c-driver/pull/540,"Fixes for some minor things that the embedded build is papering over right now.

The framework ""version"" should be the ABI
The short version can't have anything but x.y.z, but the regular bundle version can have some prerelaese stuff tacked onto it.","Fixes for some minor things that the embedded build is papering over right now.

The framework ""version"" should be the ABI
The short version can't have anything but x.y.z, but the regular bundle version can have some prerelaese stuff tacked onto it.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,540,2018-11-02T20:18:35Z,2019-07-31T18:43:20Z,2019-07-31T18:43:20Z,CLOSED,False,20,6,2,https://github.com/acmorrow,CDRIVER-2864 CDRIVER-2861,2,[],https://github.com/mongodb/mongo-c-driver/pull/540,https://github.com/acmorrow,2,https://github.com/mongodb/mongo-c-driver/pull/540#issuecomment-501445162,"Fixes for some minor things that the embedded build is papering over right now.

The framework ""version"" should be the ABI
The short version can't have anything but x.y.z, but the regular bundle version can have some prerelaese stuff tacked onto it.",@kevinAlbs @rcsanchez97 - I rebased this and made the proposed change to just tack 'pre1' on in the pre-release case. PTAL?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,540,2018-11-02T20:18:35Z,2019-07-31T18:43:20Z,2019-07-31T18:43:20Z,CLOSED,False,20,6,2,https://github.com/acmorrow,CDRIVER-2864 CDRIVER-2861,2,[],https://github.com/mongodb/mongo-c-driver/pull/540,https://github.com/acmorrow,3,https://github.com/mongodb/mongo-c-driver/pull/540#issuecomment-501445491,"Fixes for some minor things that the embedded build is papering over right now.

The framework ""version"" should be the ABI
The short version can't have anything but x.y.z, but the regular bundle version can have some prerelaese stuff tacked onto it.","@kevinAlbs @rcsanchez97 and @jmikola - I'm also happy to hand this one over to the C driver team (or probably specifically @rcsanchez97) if that makes more sense. As it stands, I think this needs hand testing to verify that we get correct packages in all release/pre-release cases.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,540,2018-11-02T20:18:35Z,2019-07-31T18:43:20Z,2019-07-31T18:43:20Z,CLOSED,False,20,6,2,https://github.com/acmorrow,CDRIVER-2864 CDRIVER-2861,2,[],https://github.com/mongodb/mongo-c-driver/pull/540,https://github.com/rcsanchez97,4,https://github.com/mongodb/mongo-c-driver/pull/540#issuecomment-502117273,"Fixes for some minor things that the embedded build is papering over right now.

The framework ""version"" should be the ABI
The short version can't have anything but x.y.z, but the regular bundle version can have some prerelaese stuff tacked onto it.","@acmorrow The changes look right to me.  I agree that manual testing with several different branch/tag configurations is a necessity to ensure that some odd corner case does not end up with a nonsense version.  That said, I don't have ready access to a Mac.  I'd need an account set up for me on one that I could use to test this.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,540,2018-11-02T20:18:35Z,2019-07-31T18:43:20Z,2019-07-31T18:43:20Z,CLOSED,False,20,6,2,https://github.com/acmorrow,CDRIVER-2864 CDRIVER-2861,2,[],https://github.com/mongodb/mongo-c-driver/pull/540,https://github.com/samantharitter,5,https://github.com/mongodb/mongo-c-driver/pull/540#issuecomment-506807743,"Fixes for some minor things that the embedded build is papering over right now.

The framework ""version"" should be the ABI
The short version can't have anything but x.y.z, but the regular bundle version can have some prerelaese stuff tacked onto it.","@acmorrow I tested these changed on OSX, and unfortunately MONGOC_RELEASED_VERSION is no longer a variable we generate (it was removed during CDRIVER-2973).  So, right now, this code won't build, because that variable is empty.  It also means that we have no good way to get the previously-released version.  Are you ok with the short version string being calculated like:
set (MONGOC_SHORT_VERSION ${MONGOC_MAJOR_VERSION}.${MONGOC_MINOR_VERSION}.${MONGOC_MICRO_VERSION})

and then we can use that value in for MACOSX_FRAMEWORK_SHORT_VERSION_STRING?  That will give the next version, which isn't ideal, but giving the previous version seems equally bad, and this approach is much easier to implement than calculating the previous version.  I spoke to Roberto about this, and he thinks it might be the lesser evil to report the next version rather than the previous version.
Also, it appears that your calculation for MACOSX_FRAMEWORK_BUNDLE_VERSION can still contain a ""-"", because MONGOC_DIST_VERSION can.  For me right now, that value is being written to the plist file as ""1.14.0-devpre1"".  It looks like MONGOC_PRERELEASE_VERSION doesn't actually contain the hyphen itself, but it is appended with a hyphen in build/cmake/LoadVersion.cmake.  If you are ok with the MONGOC_SHORT_VERSION idea I added above, I believe the framework version can be calculated like this, which removes the if statement:
set (MONGOC_FRAMEWORK_BUNDLE_VERSION ""${MONGOC_SHORT_VERSION}${MONGOC_PRERELEASE_VERSION}"")",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,540,2018-11-02T20:18:35Z,2019-07-31T18:43:20Z,2019-07-31T18:43:20Z,CLOSED,False,20,6,2,https://github.com/acmorrow,CDRIVER-2864 CDRIVER-2861,2,[],https://github.com/mongodb/mongo-c-driver/pull/540,https://github.com/samantharitter,6,https://github.com/mongodb/mongo-c-driver/pull/540#issuecomment-516972166,"Fixes for some minor things that the embedded build is papering over right now.

The framework ""version"" should be the ABI
The short version can't have anything but x.y.z, but the regular bundle version can have some prerelaese stuff tacked onto it.","Closing this PR, this will be future work.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,555,2018-12-03T18:51:53Z,2018-12-18T15:54:56Z,2018-12-18T15:54:56Z,MERGED,True,12,1,2,https://github.com/devnexen,BSD more friendly build.,1,[],https://github.com/mongodb/mongo-c-driver/pull/555,https://github.com/devnexen,1,https://github.com/mongodb/mongo-c-driver/pull/555,Using native feature for proper TID report.,Using native feature for proper TID report.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,556,2018-12-12T10:51:54Z,2019-01-03T02:33:29Z,2019-01-03T02:33:29Z,MERGED,True,1,1,1,https://github.com/jeroen,Print leading zeros in datetime ms,1,[],https://github.com/mongodb/mongo-c-driver/pull/556,https://github.com/jeroen,1,https://github.com/mongodb/mongo-c-driver/pull/556,"See issue jeroen/mongolite#163
This ensures that leading zero's get included in the ms part of a datetime. Currently dates get printed like this: 1998-11-07T00:00:00. 23Z (note the blank instead of 0).","See issue jeroen/mongolite#163
This ensures that leading zero's get included in the ms part of a datetime. Currently dates get printed like this: 1998-11-07T00:00:00. 23Z (note the blank instead of 0).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,556,2018-12-12T10:51:54Z,2019-01-03T02:33:29Z,2019-01-03T02:33:29Z,MERGED,True,1,1,1,https://github.com/jeroen,Print leading zeros in datetime ms,1,[],https://github.com/mongodb/mongo-c-driver/pull/556,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/556#issuecomment-449116292,"See issue jeroen/mongolite#163
This ensures that leading zero's get included in the ms part of a datetime. Currently dates get printed like this: 1998-11-07T00:00:00. 23Z (note the blank instead of 0).",Thanks for the contribution Jeroen. The travis run on your commit failed due to an unrelated failure. Can you rebase this on the tip of master and update? We'll run this through Evergreen and create a C driver ticket.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,556,2018-12-12T10:51:54Z,2019-01-03T02:33:29Z,2019-01-03T02:33:29Z,MERGED,True,1,1,1,https://github.com/jeroen,Print leading zeros in datetime ms,1,[],https://github.com/mongodb/mongo-c-driver/pull/556,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/556#issuecomment-451042874,"See issue jeroen/mongolite#163
This ensures that leading zero's get included in the ms part of a datetime. Currently dates get printed like this: 1998-11-07T00:00:00. 23Z (note the blank instead of 0).","Created https://jira.mongodb.org/browse/CDRIVER-2910 to track this bug. And this will be tested in our BSON corpus tests once mongodb/specifications#438 is merged.
Jeroen, no need to rebase. This is a small change, and after running this through our continuous integration tests I'm confident this is correct. I'm rebasing and merging this. This will be part of the 1.14.0 release.
Thanks for investigating and fixing this!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,557,2018-12-19T16:13:13Z,2018-12-20T20:46:32Z,2018-12-20T20:46:32Z,CLOSED,False,1,1,1,https://github.com/derickr,CDRIVER-2902: bitFlags field for OP_MSG does not swap for Big-Endian zSeries system,1,[],https://github.com/mongodb/mongo-c-driver/pull/557,https://github.com/derickr,1,https://github.com/mongodb/mongo-c-driver/pull/557,"https://jira.mongodb.org/browse/CDRIVER-2902
Sorry it's on the wrong branch, but this was made from a checkout on zSeries with little tools available.","https://jira.mongodb.org/browse/CDRIVER-2902
Sorry it's on the wrong branch, but this was made from a checkout on zSeries with little tools available.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,557,2018-12-19T16:13:13Z,2018-12-20T20:46:32Z,2018-12-20T20:46:32Z,CLOSED,False,1,1,1,https://github.com/derickr,CDRIVER-2902: bitFlags field for OP_MSG does not swap for Big-Endian zSeries system,1,[],https://github.com/mongodb/mongo-c-driver/pull/557,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/557#issuecomment-449072133,"https://jira.mongodb.org/browse/CDRIVER-2902
Sorry it's on the wrong branch, but this was made from a checkout on zSeries with little tools available.","LGTM, can you just update the commit message? This isn't specific to zSeries, but big-endian in general. Also, we try to conform to the 50/72 commit message rule (I'll note that in CONTRIBUTING.md...).
Maybe something like:
""CDRIVER-2902: fix OP_MSG bitFlags for Big-Endian""",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,557,2018-12-19T16:13:13Z,2018-12-20T20:46:32Z,2018-12-20T20:46:32Z,CLOSED,False,1,1,1,https://github.com/derickr,CDRIVER-2902: bitFlags field for OP_MSG does not swap for Big-Endian zSeries system,1,[],https://github.com/mongodb/mongo-c-driver/pull/557,https://github.com/derickr,3,https://github.com/mongodb/mongo-c-driver/pull/557#issuecomment-449080636,"https://jira.mongodb.org/browse/CDRIVER-2902
Sorry it's on the wrong branch, but this was made from a checkout on zSeries with little tools available.",I've updated the commit message. I'll leave it to you to cherry-pick it onto the right branch(es),True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,557,2018-12-19T16:13:13Z,2018-12-20T20:46:32Z,2018-12-20T20:46:32Z,CLOSED,False,1,1,1,https://github.com/derickr,CDRIVER-2902: bitFlags field for OP_MSG does not swap for Big-Endian zSeries system,1,[],https://github.com/mongodb/mongo-c-driver/pull/557,https://github.com/kevinAlbs,4,https://github.com/mongodb/mongo-c-driver/pull/557#issuecomment-449130312,"https://jira.mongodb.org/browse/CDRIVER-2902
Sorry it's on the wrong branch, but this was made from a checkout on zSeries with little tools available.",This has been cherry-picked. Closing.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,558,2019-01-11T22:15:44Z,2019-02-05T21:03:04Z,2019-02-05T21:03:16Z,CLOSED,False,1186,58,9,https://github.com/jmikola,CDRIVER-2936: Apply majority write concern when retrying commitTransaction,3,[],https://github.com/mongodb/mongo-c-driver/pull/558,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/558,"https://jira.mongodb.org/browse/CDRIVER-2936
Note: this started as a POC for mongodb/specifications#442
Tested this locally using a two-node replica set:
$ mongod --dbpath /tmp/db1 --port 27017 --replSet rs0 --setParameter enableTestCommands=1
$ mongod --dbpath /tmp/db2 --port 27018 --replSet rs0 --setParameter enableTestCommands=1
$ cmake-build/src/libmongoc/test-libmongoc -l /transactions/* -f -d","https://jira.mongodb.org/browse/CDRIVER-2936
Note: this started as a POC for mongodb/specifications#442
Tested this locally using a two-node replica set:
$ mongod --dbpath /tmp/db1 --port 27017 --replSet rs0 --setParameter enableTestCommands=1
$ mongod --dbpath /tmp/db2 --port 27018 --replSet rs0 --setParameter enableTestCommands=1
$ cmake-build/src/libmongoc/test-libmongoc -l /transactions/* -f -d",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,558,2019-01-11T22:15:44Z,2019-02-05T21:03:04Z,2019-02-05T21:03:16Z,CLOSED,False,1186,58,9,https://github.com/jmikola,CDRIVER-2936: Apply majority write concern when retrying commitTransaction,3,[],https://github.com/mongodb/mongo-c-driver/pull/558,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/558#issuecomment-460434710,"https://jira.mongodb.org/browse/CDRIVER-2936
Note: this started as a POC for mongodb/specifications#442
Tested this locally using a two-node replica set:
$ mongod --dbpath /tmp/db1 --port 27017 --replSet rs0 --setParameter enableTestCommands=1
$ mongod --dbpath /tmp/db2 --port 27018 --replSet rs0 --setParameter enableTestCommands=1
$ cmake-build/src/libmongoc/test-libmongoc -l /transactions/* -f -d",Evergreen patch: https://evergreen.mongodb.com/version/5c58b9173e8e860c7c712778,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,558,2019-01-11T22:15:44Z,2019-02-05T21:03:04Z,2019-02-05T21:03:16Z,CLOSED,False,1186,58,9,https://github.com/jmikola,CDRIVER-2936: Apply majority write concern when retrying commitTransaction,3,[],https://github.com/mongodb/mongo-c-driver/pull/558,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/558#issuecomment-460802437,"https://jira.mongodb.org/browse/CDRIVER-2936
Note: this started as a POC for mongodb/specifications#442
Tested this locally using a two-node replica set:
$ mongod --dbpath /tmp/db1 --port 27017 --replSet rs0 --setParameter enableTestCommands=1
$ mongod --dbpath /tmp/db2 --port 27018 --replSet rs0 --setParameter enableTestCommands=1
$ cmake-build/src/libmongoc/test-libmongoc -l /transactions/* -f -d","Closing, as conversation has moved to Rietveld.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,559,2019-02-28T17:51:03Z,2019-02-28T17:52:40Z,2019-02-28T17:52:49Z,MERGED,True,131,23,3,https://github.com/bazile-clyde,CDRIVER-2939 We should ignore batchSize=0 for agg cmds with $out,1,[],https://github.com/mongodb/mongo-c-driver/pull/559,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/559,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,560,2019-03-06T00:01:59Z,2019-03-07T15:50:43Z,2019-03-07T15:50:46Z,MERGED,True,44,0,7,https://github.com/jmikola,CDRIVER-2993 add missing header include checks and licenses,2,[],https://github.com/mongodb/mongo-c-driver/pull/560,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/560,https://jira.mongodb.org/browse/CDRIVER-2993,https://jira.mongodb.org/browse/CDRIVER-2993,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,560,2019-03-06T00:01:59Z,2019-03-07T15:50:43Z,2019-03-07T15:50:46Z,MERGED,True,44,0,7,https://github.com/jmikola,CDRIVER-2993 add missing header include checks and licenses,2,[],https://github.com/mongodb/mongo-c-driver/pull/560,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/560#issuecomment-470572770,https://jira.mongodb.org/browse/CDRIVER-2993,"FWIW headers ending with -private aren't installed when someone does make install. But I think it is worth adding the prelude to all headers for consistency, or in case someone tries including a private header from the source.

From my comment in the ticket:

Note: CDRIVER-2839 supposedly added an Evergreen task to test for this, so I'm not sure how these missing instances were not caught.

Is the fact that these omissions were in private headers the reason that they weren't caught by the Evergreen task? For the life of me, I couldn't figure out what test you originally added to even handle public headers 😆",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,561,2019-03-08T18:23:14Z,2019-03-08T18:23:48Z,2019-03-08T18:23:57Z,MERGED,True,84,14,3,https://github.com/bazile-clyde,CDRIVER-2886 Agg cmd must be sent to a primary if it uses $out,1,[],https://github.com/mongodb/mongo-c-driver/pull/561,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/561,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/kaplanlior,1,https://github.com/mongodb/mongo-c-driver/pull/562,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-474004899,,Thanks for the contribution!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/trex58,3,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-559488091,,"This change breaks our build of v1.15.2 on AIX 6.1 .
We'd like to have a rationale/explanation about the goal of this change which does not seem required in general cases.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/kaplanlior,4,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-559556749,,@trex58 What's the build error ?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/trex58,5,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-559560948,,"Build fails on AIX 6.1 with GCC 8.3.0 .
Looking at details, I guess that kaplanlior wanted to have mongodb code compatible with AIX 4.3 . However, AIX 4.3 is dead since ages ! Support of AIX 6.1 will end at end of 2019.
Probably that the only AIX system kaplanlior has access is a 4.3 AIX ? He has to move to AIX 7.1 at least.
[ 32%] Building C object src/libmongoc/CMakeFiles/mongoc_static.dir/src/mongoc/mongoc-socket.c.o
cd /opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc && /opt/freeware/bin/gcc -DBSON_STATIC -DMONGOC_COMPILATION -DMONGOC_STATIC -D_BSD_SOURCE -D_DEFAULT_S
OURCE -D_GNU_SOURCE -I/opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libbson/src -I/opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src
-I/opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/../../src/common  -maix64 -O2 -pthread -mcmodel=large -O2 -g -DNDEBUG   -o CMakeFiles/mongoc_static.dir
/src/mongoc/mongoc-socket.c.o   -c /opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc-socket.c
In file included from /opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc-stream.h:24,
from /opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc-gridfs.h:25,
from /opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc-client.h:30,
from /opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc.h:29,
from /opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc-counters-private.h:22,
from /opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc-socket.c:21:
/opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc-socket.c: In function 'mongoc_socket_accept_ex':
/opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc-socket.h:42:20: error: 'struct sockaddr_storage' has no member named '__ss_family'; did
you mean 'ss_family'?


# define ss_family __ss_family
                 ^~~~~~~~~~~



/opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit/src/libmongoc/src/mongoc/mongoc-socket.c:718:16: note: in expansion of macro 'ss_family'
if (addr.ss_family == AF_INET) {
^~~~~~~~~
gmake[2]: *** [src/libmongoc/CMakeFiles/mongoc_static.dir/build.make:768: src/libmongoc/CMakeFiles/mongoc_static.dir/src/mongoc/mongoc-socket.c.o] Error 1
gmake[2]: Leaving directory '/opt/freeware/src/packages/BUILD/mongo-c-driver-1.15.2/64bit'
AIX 6.1 : (same on AIX 7.2)
$ grep -R ss_family /usr/include/*
/usr/include/netinet/in.h:        ushort_t        __ss_family;    /* address family /
/usr/include/netinet/in.h:        sa_family_t     ss_family;      / address family /
/usr/include/sys/socket.h:        ushort_t        __ss_family;    / address family /
/usr/include/sys/socket.h:        sa_family_t     ss_family;    / address family /
/usr/include/sys/socket.h:      ushort_t        __ss_family;    / address family /
/usr/include/sys/socket.h:      sa_family_t     ss_family;      / address family */
/usr/include/netinet/in.h  :
#if defined(COMPAT_43) && !defined(_KERNEL)
struct sockaddr_storage {
ushort_t        __ss_family;    /* address family /
...........................
};
#else
struct sockaddr_storage {
uchar_t         __ss_len;       / address length /
sa_family_t     ss_family;      / address family /
..........................
};
#endif / COMPAT_43 */",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/kevinAlbs,6,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-559571332,,"Hi @trex58,
Apologies for any disruption this has caused. AIX is not a supported or tested platform for libmongoc. We have accepted pull requests (like this one) in efforts to better support AIX. When reviewing this PR, I referred to similar changes made (example), gathering that the ss_family field of sockaddr_storage is defined as __ss_family on some versions on AIX.
Upon closer look, I think that HAVE_SA_SS_FAMILY may only defined by autotools. I don't have access to an AIX machine to test, but I believe this patch may resolve the issue by testing if __ss_family is a member in cmake scripts:
https://gist.github.com/kevinAlbs/0c8bbf040c2698d7e98a502c473aacd4
If possible, can you confirm this fixes your issue?
Thank you,
Kevin",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/trex58,7,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-559573101,,"Hi Kevin @kevinAlbs  ,
We are porting MongoC on AIX for about 18 months. We have few patches.
I propose that we finalize the port of last mongoc version and provide you with our patches.
We test on AIX 6.1 and higher.
We'll have a deeper look at why this ss_family patch was added.
Today, with 1.15.2 version, we have:
Pass : 1423
Skip :  266
Fail :    4  (/Topology/connect_timeout/succeed, /Topology/try_once/succeed, /Topology/request_scan_on_error, /TLS/handshake_stall)
Looks quite good.
I and my colleague Étienne will look at your patch and study it.
Thanks for your help !
Tony",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/EGuesnet,8,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-559806380,,"Hi Kevin,
I have tested your diff, and it does not work. If I have understood what you want, you must check if ss_family is present, and define ss_family as __ss_family if not. Your code definesss_family as __ss_family if __ss_family is not present.
#if defined(_AIX) && !defined(MONGOC_HAVE___SS_FAMILY)
 # define ss_family __ss_family
#endif

I have modified your gist here : https://gist.github.com/EGuesnet/d8be69aab8062b0da4beaa8302038cb3, and I have test it on master. It compiles on AIX 6.1.
On AIX 4.3 (or AIX with 4.3 compatibility), ss_family will be not found, so the define will be activated. I cannot test this diff on AIX 4.3 because we do not have so old AIX.
Thanks,
Etienne.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/kevinAlbs,9,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-561236800,,"Thank you for the fix @EGuesnet, it looks good to me. Feel free to submit a pull request with those changes. @kaplanlior I believe that patch should work with the version of AIX you are running, but if you'd like to test and confirm, let us know.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/EGuesnet,10,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-561251038,,"I have created the pull request (#592).
Thanks.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,562,2019-03-13T15:24:21Z,2019-03-18T16:55:30Z,2019-12-03T20:10:16Z,MERGED,True,4,0,1,https://github.com/kaplanlior,Fix ss_family build issue on AIX,1,[],https://github.com/mongodb/mongo-c-driver/pull/562,https://github.com/kaplanlior,11,https://github.com/mongodb/mongo-c-driver/pull/562#issuecomment-561336087,,"Thank you for the fix @EGuesnet, it looks good to me. Feel free to submit a pull request with those changes. @kaplanlior I believe that patch should work with the version of AIX you are running, but if you'd like to test and confirm, let us know.

I don't have access to such machine anymore... otherwise I would have been happy to test.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,563,2019-05-22T15:37:06Z,2019-05-23T17:16:07Z,2019-05-23T17:16:14Z,MERGED,True,0,1,1,https://github.com/bazile-clyde,CDRIVER-3117 wrong documentation for mongoc_database_command_with_opt ,1,[],https://github.com/mongodb/mongo-c-driver/pull/563,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/563,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,564,2019-05-23T17:30:14Z,2019-05-23T17:30:40Z,2019-05-23T17:30:44Z,MERGED,True,0,1,1,https://github.com/bazile-clyde,CDRIVER-3117 bad DB read prefs docs for mongoc_database_command_with_opts,1,[],https://github.com/mongodb/mongo-c-driver/pull/564,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/564,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,565,2019-05-30T16:31:28Z,2019-05-30T19:31:11Z,2019-05-30T19:31:11Z,MERGED,True,2,0,1,https://github.com/haris-sheikh,CDRIVER-3158 updated documentation for bson_iter_value,1,[],https://github.com/mongodb/mongo-c-driver/pull/565,https://github.com/haris-sheikh,1,https://github.com/mongodb/mongo-c-driver/pull/565,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,565,2019-05-30T16:31:28Z,2019-05-30T19:31:11Z,2019-05-30T19:31:11Z,MERGED,True,2,0,1,https://github.com/haris-sheikh,CDRIVER-3158 updated documentation for bson_iter_value,1,[],https://github.com/mongodb/mongo-c-driver/pull/565,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/565#issuecomment-497455607,,"The failing abi-compilance-check task is unrelated to this docs change, and will be investigated later.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,566,2019-06-14T15:56:08Z,2019-06-14T18:01:54Z,2019-06-14T18:01:54Z,CLOSED,False,3,3,1,https://github.com/haris-sheikh,CDRIVER-3012 updated uri functions to not accept the empty string as a username,5,[],https://github.com/mongodb/mongo-c-driver/pull/566,https://github.com/haris-sheikh,1,https://github.com/mongodb/mongo-c-driver/pull/566,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,567,2019-06-14T19:11:41Z,2019-06-17T14:30:08Z,2019-06-17T14:31:08Z,MERGED,True,82,22,2,https://github.com/bazile-clyde,CDRIVER-3067/3161 transactions err on sharded clusters v4.2 or maxWireVersion < 7,1,[],https://github.com/mongodb/mongo-c-driver/pull/567,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/567,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,568,2019-06-17T15:25:11Z,2019-06-17T15:25:27Z,2019-06-17T15:26:02Z,MERGED,True,78,19,2,https://github.com/bazile-clyde,CDRIVER-3067/3161 error when attempting sharded transactions on 4.2 or maxWireVersion < 7 (#567),1,[],https://github.com/mongodb/mongo-c-driver/pull/568,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/568,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,569,2019-06-20T19:28:18Z,2019-06-20T19:28:58Z,2019-08-13T19:26:10Z,MERGED,True,14,36,15,https://github.com/isabelatkinson,CDRIVER 2051 documentation for methods that can return null,3,[],https://github.com/mongodb/mongo-c-driver/pull/569,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/569,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,570,2019-06-21T14:42:22Z,2019-06-21T14:43:33Z,2019-08-13T19:26:09Z,MERGED,True,1,1,1,https://github.com/isabelatkinson,CDRIVER-2843 updated wire version max,1,[],https://github.com/mongodb/mongo-c-driver/pull/570,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/570,Increased WIRE_VERSION_MAX to 8 to support 4.2 features.,Increased WIRE_VERSION_MAX to 8 to support 4.2 features.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,571,2019-06-21T22:35:58Z,2019-07-10T15:16:39Z,2019-07-10T15:17:00Z,CLOSED,False,2,1,1,https://github.com/pasniak,Fix crash related to pem_file in optimized build,1,[],https://github.com/mongodb/mongo-c-driver/pull/571,https://github.com/pasniak,1,https://github.com/mongodb/mongo-c-driver/pull/571,"PCCERT_CONTEXT cert/paCred pointer goes out of if scope in optimized build, leading to crash (this seem to work fine in unoptimized/debug build). VC14 x64","PCCERT_CONTEXT cert/paCred pointer goes out of if scope in optimized build, leading to crash (this seem to work fine in unoptimized/debug build). VC14 x64",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,571,2019-06-21T22:35:58Z,2019-07-10T15:16:39Z,2019-07-10T15:17:00Z,CLOSED,False,2,1,1,https://github.com/pasniak,Fix crash related to pem_file in optimized build,1,[],https://github.com/mongodb/mongo-c-driver/pull/571,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/571#issuecomment-510105685,"PCCERT_CONTEXT cert/paCred pointer goes out of if scope in optimized build, leading to crash (this seem to work fine in unoptimized/debug build). VC14 x64",Tracked by CDRIVER-3227 and manually merged in f34ff4a.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,572,2019-06-27T20:03:34Z,2019-06-27T20:04:03Z,2019-08-13T19:26:05Z,MERGED,True,7,0,2,https://github.com/isabelatkinson,Cdriver 3073,2,[],https://github.com/mongodb/mongo-c-driver/pull/572,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/572,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,573,2019-07-02T18:57:45Z,2019-07-02T18:58:10Z,2019-08-13T19:25:47Z,MERGED,True,3,24,2,https://github.com/isabelatkinson,Cdriver 3210,2,[],https://github.com/mongodb/mongo-c-driver/pull/573,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/573,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,574,2019-07-03T14:26:45Z,2019-07-03T14:27:03Z,2019-08-13T19:25:46Z,MERGED,True,49,3,2,https://github.com/isabelatkinson,Cdriver 3084,7,[],https://github.com/mongodb/mongo-c-driver/pull/574,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/574,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,575,2019-07-10T05:34:38Z,2019-12-23T20:28:17Z,2019-12-23T20:28:17Z,CLOSED,False,24,13,1,https://github.com/grooverdan,travis: move osx to its own matrix include,2,[],https://github.com/mongodb/mongo-c-driver/pull/575,https://github.com/grooverdan,1,https://github.com/mongodb/mongo-c-driver/pull/575,"Rather than putting the Linux only or exceptions everywhere else.
Add linux-ppc64le as a test. Because the travis ppc64le test
infrastructure is based on xenial the distro mongodb is 2.x which isn't
suitable for the test. Pulling in 3.x from ubuntu bionic resulted in
conflicts so we use the enterprise mongo for ppc64le xenial to have
a workable test server for the client C implementation.","Rather than putting the Linux only or exceptions everywhere else.
Add linux-ppc64le as a test. Because the travis ppc64le test
infrastructure is based on xenial the distro mongodb is 2.x which isn't
suitable for the test. Pulling in 3.x from ubuntu bionic resulted in
conflicts so we use the enterprise mongo for ppc64le xenial to have
a workable test server for the client C implementation.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,575,2019-07-10T05:34:38Z,2019-12-23T20:28:17Z,2019-12-23T20:28:17Z,CLOSED,False,24,13,1,https://github.com/grooverdan,travis: move osx to its own matrix include,2,[],https://github.com/mongodb/mongo-c-driver/pull/575,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/575#issuecomment-566206991,"Rather than putting the Linux only or exceptions everywhere else.
Add linux-ppc64le as a test. Because the travis ppc64le test
infrastructure is based on xenial the distro mongodb is 2.x which isn't
suitable for the test. Pulling in 3.x from ubuntu bionic resulted in
conflicts so we use the enterprise mongo for ppc64le xenial to have
a workable test server for the client C implementation.","Hi @grooverdan! Thank you for the contribution. But our tests on Travis are really ""smoke tests"". Our comprehensive testing occurs on our continuous integration system, Evergreen. We do test linux-ppc64le on Evergreen with Ubuntu 16.04, Ubuntu 18.04, and RHEL 7.1. Additionally, in our experience we have not had many linux-ppc64le specific issues, so it does not seem warranted to add it to Travis.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,576,2019-07-24T16:35:11Z,2019-07-24T16:38:32Z,2019-08-13T19:25:25Z,MERGED,True,65,0,4,https://github.com/isabelatkinson,CDRIVER-3107,12,[],https://github.com/mongodb/mongo-c-driver/pull/576,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/576,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,577,2019-08-05T14:05:47Z,2019-08-05T14:07:33Z,2019-08-13T19:25:20Z,MERGED,True,4,4,2,https://github.com/isabelatkinson,CDRIVER-2994,2,[],https://github.com/mongodb/mongo-c-driver/pull/577,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/577,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,578,2019-08-06T18:11:06Z,2019-08-22T04:04:35Z,2019-08-22T04:05:16Z,CLOSED,False,1,0,1,https://github.com/mongomoe,Docsp 6255 gridfs,3,[],https://github.com/mongodb/mongo-c-driver/pull/578,https://github.com/mongomoe,1,https://github.com/mongodb/mongo-c-driver/pull/578,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,578,2019-08-06T18:11:06Z,2019-08-22T04:04:35Z,2019-08-22T04:05:16Z,CLOSED,False,1,0,1,https://github.com/mongomoe,Docsp 6255 gridfs,3,[],https://github.com/mongodb/mongo-c-driver/pull/578,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/578#issuecomment-523690902,,Hi @mongomoe. Did you intend to open this PR? The diff looks unrelated.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,578,2019-08-06T18:11:06Z,2019-08-22T04:04:35Z,2019-08-22T04:05:16Z,CLOSED,False,1,0,1,https://github.com/mongomoe,Docsp 6255 gridfs,3,[],https://github.com/mongodb/mongo-c-driver/pull/578,https://github.com/mongomoe,3,https://github.com/mongodb/mongo-c-driver/pull/578#issuecomment-523738286,,"@kevinAlbs Hi Kevin, the pr was accidental, sorry for the inconvenience. I've closed it now",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,579,2019-08-09T20:18:43Z,2019-08-09T20:19:39Z,2019-08-13T19:25:18Z,MERGED,True,140,11,9,https://github.com/isabelatkinson,CDRIVER-3063,17,[],https://github.com/mongodb/mongo-c-driver/pull/579,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/579,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,580,2019-08-13T19:05:00Z,2019-08-13T19:05:54Z,2019-08-13T19:25:16Z,CLOSED,False,17917,44,66,https://github.com/isabelatkinson,CDRIVER-2873 retryable reads,3,[],https://github.com/mongodb/mongo-c-driver/pull/580,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/580,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,581,2019-08-16T16:56:45Z,2019-08-21T23:34:00Z,2020-02-01T13:48:40Z,MERGED,True,2,2,1,https://github.com/kmahar,Swap calls to set ssl_opts on client/client pool,1,[],https://github.com/mongodb/mongo-c-driver/pull/581,https://github.com/kmahar,1,https://github.com/mongodb/mongo-c-driver/pull/581,I noticed these are backwards.,I noticed these are backwards.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,582,2019-08-20T15:29:53Z,2019-08-20T15:30:26Z,2019-08-20T15:30:32Z,MERGED,True,8,1,1,https://github.com/isabelatkinson,CDRIVER-2998 Refactor _has_write_key to inspect last stage only,1,[],https://github.com/mongodb/mongo-c-driver/pull/582,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/582,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,583,2019-08-21T14:45:15Z,2019-08-21T14:45:40Z,2019-08-21T14:45:45Z,MERGED,True,216,56,9,https://github.com/isabelatkinson,CDRIVER-3030 update IDL to generate aggregate options,1,[],https://github.com/mongodb/mongo-c-driver/pull/583,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/583,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,584,2019-08-23T20:13:55Z,2019-08-23T20:14:39Z,2019-08-23T20:14:44Z,MERGED,True,108,1,4,https://github.com/isabelatkinson,CDRIVER-3031,5,[],https://github.com/mongodb/mongo-c-driver/pull/584,https://github.com/isabelatkinson,1,https://github.com/mongodb/mongo-c-driver/pull/584,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,585,2019-08-26T21:09:00Z,2019-08-27T00:33:54Z,2019-08-27T15:18:29Z,MERGED,True,2,2,2,https://github.com/velichkov,CDRIVER-3339 Use CMAKE_INSTALL_LIBDIR,1,[],https://github.com/mongodb/mongo-c-driver/pull/585,https://github.com/velichkov,1,https://github.com/mongodb/mongo-c-driver/pull/585,"The libdir was hardcoded to ${prefix}/lib and as a result on
distributions that have different libdir for 64bit architectures
pkg-config --libs adds wrong directory to the LDFLAGS","The libdir was hardcoded to ${prefix}/lib and as a result on
distributions that have different libdir for 64bit architectures
pkg-config --libs adds wrong directory to the LDFLAGS",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,585,2019-08-26T21:09:00Z,2019-08-27T00:33:54Z,2019-08-27T15:18:29Z,MERGED,True,2,2,2,https://github.com/velichkov,CDRIVER-3339 Use CMAKE_INSTALL_LIBDIR,1,[],https://github.com/mongodb/mongo-c-driver/pull/585,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/585#issuecomment-525036014,"The libdir was hardcoded to ${prefix}/lib and as a result on
distributions that have different libdir for 64bit architectures
pkg-config --libs adds wrong directory to the LDFLAGS",@kevinAlbs This change looks good to me.  It seems like it was simply overlooked when support for GNUInstallDirs was added.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,585,2019-08-26T21:09:00Z,2019-08-27T00:33:54Z,2019-08-27T15:18:29Z,MERGED,True,2,2,2,https://github.com/velichkov,CDRIVER-3339 Use CMAKE_INSTALL_LIBDIR,1,[],https://github.com/mongodb/mongo-c-driver/pull/585,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/585#issuecomment-525085829,"The libdir was hardcoded to ${prefix}/lib and as a result on
distributions that have different libdir for 64bit architectures
pkg-config --libs adds wrong directory to the LDFLAGS",Thank you for the contribution @velichkov,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,586,2019-09-16T18:19:01Z,2019-09-23T14:17:26Z,2019-09-23T14:17:29Z,MERGED,True,2,1,1,https://github.com/jmikola,Add missing comma in arg list,1,[],https://github.com/mongodb/mongo-c-driver/pull/586,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/586,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,587,2019-10-13T20:05:00Z,2019-10-14T14:55:42Z,2019-10-14T14:55:42Z,CLOSED,False,5,0,1,https://github.com/efron,adding Installation instructions,1,[],https://github.com/mongodb/mongo-c-driver/pull/587,https://github.com/efron,1,https://github.com/mongodb/mongo-c-driver/pull/587,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,587,2019-10-13T20:05:00Z,2019-10-14T14:55:42Z,2019-10-14T14:55:42Z,CLOSED,False,5,0,1,https://github.com/efron,adding Installation instructions,1,[],https://github.com/mongodb/mongo-c-driver/pull/587,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/587#issuecomment-541728081,,"Thanks for the contribution @efron, but our top-level README.rst links to these instructions here:
https://github.com/mongodb/mongo-c-driver#installation",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,588,2019-11-08T13:24:38Z,2019-11-08T19:12:57Z,2019-11-08T20:43:35Z,MERGED,True,19,15,2,https://github.com/eldruin,Allow libbson and libmongoc library names to be changed externally,3,[],https://github.com/mongodb/mongo-c-driver/pull/588,https://github.com/eldruin,1,https://github.com/mongodb/mongo-c-driver/pull/588,"Internally we rename the libraries we integrate as to avoid interference with the library versions already available on the target systems by giving them a prefix.
This PR allows users to specify, for example:
-DBSON_OUTPUT_BASENAME:STRING=MYORG_bson
-DMONGOC_OUTPUT_BASENAME:STRING=MYORG_mongoc

I used BASENAME as the flavor and/or version are appended later.
Alternatively, it would be also fine for us to add a prefix variable like OUTPUT_NAME_PREFIX or so but I was unable to find a good name that cannot be confused the target PREFIX property (e.g. lib)","Internally we rename the libraries we integrate as to avoid interference with the library versions already available on the target systems by giving them a prefix.
This PR allows users to specify, for example:
-DBSON_OUTPUT_BASENAME:STRING=MYORG_bson
-DMONGOC_OUTPUT_BASENAME:STRING=MYORG_mongoc

I used BASENAME as the flavor and/or version are appended later.
Alternatively, it would be also fine for us to add a prefix variable like OUTPUT_NAME_PREFIX or so but I was unable to find a good name that cannot be confused the target PREFIX property (e.g. lib)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,588,2019-11-08T13:24:38Z,2019-11-08T19:12:57Z,2019-11-08T20:43:35Z,MERGED,True,19,15,2,https://github.com/eldruin,Allow libbson and libmongoc library names to be changed externally,3,[],https://github.com/mongodb/mongo-c-driver/pull/588,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/588#issuecomment-551819545,"Internally we rename the libraries we integrate as to avoid interference with the library versions already available on the target systems by giving them a prefix.
This PR allows users to specify, for example:
-DBSON_OUTPUT_BASENAME:STRING=MYORG_bson
-DMONGOC_OUTPUT_BASENAME:STRING=MYORG_mongoc

I used BASENAME as the flavor and/or version are appended later.
Alternatively, it would be also fine for us to add a prefix variable like OUTPUT_NAME_PREFIX or so but I was unable to find a good name that cannot be confused the target PREFIX property (e.g. lib)","@kevinAlbs Do these options to you like they should be documented in installing.rst?  We don't document every build option it seems and there isn't a place where these naturally fall in that document, so it would need a new section.  Also, do you have any reservations regarding this change?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,588,2019-11-08T13:24:38Z,2019-11-08T19:12:57Z,2019-11-08T20:43:35Z,MERGED,True,19,15,2,https://github.com/eldruin,Allow libbson and libmongoc library names to be changed externally,3,[],https://github.com/mongodb/mongo-c-driver/pull/588,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/588#issuecomment-551848030,"Internally we rename the libraries we integrate as to avoid interference with the library versions already available on the target systems by giving them a prefix.
This PR allows users to specify, for example:
-DBSON_OUTPUT_BASENAME:STRING=MYORG_bson
-DMONGOC_OUTPUT_BASENAME:STRING=MYORG_mongoc

I used BASENAME as the flavor and/or version are appended later.
Alternatively, it would be also fine for us to add a prefix variable like OUTPUT_NAME_PREFIX or so but I was unable to find a good name that cannot be confused the target PREFIX property (e.g. lib)","Some build tasks are failing in Evergreen.  A few I immediately recognize as known issues that are definitely not related to this change.  I will need to confirm the others, but I honestly do not expect that any of the failures will be attributable to this change.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,588,2019-11-08T13:24:38Z,2019-11-08T19:12:57Z,2019-11-08T20:43:35Z,MERGED,True,19,15,2,https://github.com/eldruin,Allow libbson and libmongoc library names to be changed externally,3,[],https://github.com/mongodb/mongo-c-driver/pull/588,https://github.com/kevinAlbs,4,https://github.com/mongodb/mongo-c-driver/pull/588#issuecomment-551926561,"Internally we rename the libraries we integrate as to avoid interference with the library versions already available on the target systems by giving them a prefix.
This PR allows users to specify, for example:
-DBSON_OUTPUT_BASENAME:STRING=MYORG_bson
-DMONGOC_OUTPUT_BASENAME:STRING=MYORG_mongoc

I used BASENAME as the flavor and/or version are appended later.
Alternatively, it would be also fine for us to add a prefix variable like OUTPUT_NAME_PREFIX or so but I was unable to find a good name that cannot be confused the target PREFIX property (e.g. lib)",Thanks for the contribution @eldruin!,True,{'THUMBS_UP': ['https://github.com/eldruin']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,589,2019-11-13T10:24:51Z,2019-12-16T15:45:28Z,2019-12-16T15:45:28Z,CLOSED,False,2,2,2,https://github.com/eldruin,Remove lib prefix,1,[],https://github.com/mongodb/mongo-c-driver/pull/589,https://github.com/eldruin,1,https://github.com/mongodb/mongo-c-driver/pull/589,"On Windows libraries normally do not have the ""lib"" prefix.
With this change the output libraries are named:
bson-1.0.dll
bson-1.0.lib
mongoc-1.0.dll
mongoc-1.0.lib

The lib prefix is already omitted on windows on the mongo-cxx-driver libraries, for example.
The default prefix on Unix platforms is still ""lib"" so there is no change there.","On Windows libraries normally do not have the ""lib"" prefix.
With this change the output libraries are named:
bson-1.0.dll
bson-1.0.lib
mongoc-1.0.dll
mongoc-1.0.lib

The lib prefix is already omitted on windows on the mongo-cxx-driver libraries, for example.
The default prefix on Unix platforms is still ""lib"" so there is no change there.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,589,2019-11-13T10:24:51Z,2019-12-16T15:45:28Z,2019-12-16T15:45:28Z,CLOSED,False,2,2,2,https://github.com/eldruin,Remove lib prefix,1,[],https://github.com/mongodb/mongo-c-driver/pull/589,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/589#issuecomment-553592771,"On Windows libraries normally do not have the ""lib"" prefix.
With this change the output libraries are named:
bson-1.0.dll
bson-1.0.lib
mongoc-1.0.dll
mongoc-1.0.lib

The lib prefix is already omitted on windows on the mongo-cxx-driver libraries, for example.
The default prefix on Unix platforms is still ""lib"" so there is no change there.","@kevinAlbs I have reviewed the changes, fired off an Evergreen patch build based on the changes, and reviewed the build results.

It looks like the unexpected Evergreen task failures result from some of the helper scripts in the `.evergereen` directory still referencing the libraries with the `lib` prefix on Windows, but the fix there is trivial.  Since the CDRIVER-3047 change was made, the CMake package scripts automatically picked up the new library names, so anybody consuming the BSON or C driver libraries via CMake would not encounter breakage.  The pkg-config scripts appear to be unchanged, but that may be OK.  I think that the linker on Windows will search for libraries with and without the `lib` prefix.  Assuming that to be the case, the pkg-config scripts still look good for the name change.

The concerns that I have are related to my work on CDRIVER-3413 and for users directly consuming the libraries without the aid of CMake or pkg-config.  As far as CDRIVER-3413, it feels like this change should be done in conjunction with that work.  If we decide to go ahead with @eldruin 's proposed change, then I can bring it in as part of CDRIVER-3413 (and give him credit, naturally).  That way I can be sure that both the old CMake package scripts I am restoring reference the correct artifacts.  The other concern that I have is that changing the name of the library artifact has the possibility of breaking existing workflows.  In particular, linking a static library requires specifying the full path to the library archive itself, which would now be differently named on Windows.

The possible alternatives there are to produce artifacts with both the old and new names, or to postpone the change until we are ready to make compatibility-breaking changes (2.0, perhaps).  I would also appreciate the perspective of someone who is more familiar with the Windows platform to ensure I haven't missed something.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,589,2019-11-13T10:24:51Z,2019-12-16T15:45:28Z,2019-12-16T15:45:28Z,CLOSED,False,2,2,2,https://github.com/eldruin,Remove lib prefix,1,[],https://github.com/mongodb/mongo-c-driver/pull/589,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/589#issuecomment-561868374,"On Windows libraries normally do not have the ""lib"" prefix.
With this change the output libraries are named:
bson-1.0.dll
bson-1.0.lib
mongoc-1.0.dll
mongoc-1.0.lib

The lib prefix is already omitted on windows on the mongo-cxx-driver libraries, for example.
The default prefix on Unix platforms is still ""lib"" so there is no change there.","This change will need to be accomplished in two steps.
For C driver 1.16.0: https://jira.mongodb.org/browse/CDRIVER-3449
For C driver 1.17.0: https://jira.mongodb.org/browse/CDRIVER-3450",True,{'THUMBS_UP': ['https://github.com/eldruin']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,589,2019-11-13T10:24:51Z,2019-12-16T15:45:28Z,2019-12-16T15:45:28Z,CLOSED,False,2,2,2,https://github.com/eldruin,Remove lib prefix,1,[],https://github.com/mongodb/mongo-c-driver/pull/589,https://github.com/aprilschoffer,4,https://github.com/mongodb/mongo-c-driver/pull/589#issuecomment-566116831,"On Windows libraries normally do not have the ""lib"" prefix.
With this change the output libraries are named:
bson-1.0.dll
bson-1.0.lib
mongoc-1.0.dll
mongoc-1.0.lib

The lib prefix is already omitted on windows on the mongo-cxx-driver libraries, for example.
The default prefix on Unix platforms is still ""lib"" so there is no change there.","Hi @eldruin, thank you for your contribution. We're closing this pull request in favor of pulling the work for this into CDRIVER-3449 and CDRIVER-3450. The work you've done will be used as part of that effort. Please reach out if you have any questions.",True,{'THUMBS_UP': ['https://github.com/eldruin']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,590,2019-11-14T07:55:42Z,2019-11-14T07:56:03Z,2019-11-14T07:56:03Z,CLOSED,False,0,0,0,https://github.com/duyouqian,Merge pull request #1 from mongodb/master,1,[],https://github.com/mongodb/mongo-c-driver/pull/590,https://github.com/duyouqian,1,https://github.com/mongodb/mongo-c-driver/pull/590,fetch,fetch,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,591,2019-11-18T22:27:12Z,2019-11-22T14:36:03Z,2019-11-22T14:36:06Z,CLOSED,False,4,0,1,https://github.com/mbroadst,CDRIVER-3433 support linking against windows static runtime,1,[],https://github.com/mongodb/mongo-c-driver/pull/591,https://github.com/mbroadst,1,https://github.com/mongodb/mongo-c-driver/pull/591,"This allows dependent projects to optionally enable overriding the
default MSVC runtime (/MD for the dynamic mulitthreaded) to use
the static runtime (/MT)","This allows dependent projects to optionally enable overriding the
default MSVC runtime (/MD for the dynamic mulitthreaded) to use
the static runtime (/MT)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,591,2019-11-18T22:27:12Z,2019-11-22T14:36:03Z,2019-11-22T14:36:06Z,CLOSED,False,4,0,1,https://github.com/mbroadst,CDRIVER-3433 support linking against windows static runtime,1,[],https://github.com/mongodb/mongo-c-driver/pull/591,https://github.com/mbroadst,2,https://github.com/mongodb/mongo-c-driver/pull/591#issuecomment-555246279,"This allows dependent projects to optionally enable overriding the
default MSVC runtime (/MD for the dynamic mulitthreaded) to use
the static runtime (/MT)","@rcsanchez97 The build for the node addon will implicitly test this, but no I had not otherwise considered adding something to test it explicitly.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,591,2019-11-18T22:27:12Z,2019-11-22T14:36:03Z,2019-11-22T14:36:06Z,CLOSED,False,4,0,1,https://github.com/mbroadst,CDRIVER-3433 support linking against windows static runtime,1,[],https://github.com/mongodb/mongo-c-driver/pull/591,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/591#issuecomment-555247086,"This allows dependent projects to optionally enable overriding the
default MSVC runtime (/MD for the dynamic mulitthreaded) to use
the static runtime (/MT)","Since the node addon will be the primary (only?) user of this feature,
are you comfortable with that implicit testing?  Or would you prefer
that we have some explicit testing in the C driver Evergreen builds?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,591,2019-11-18T22:27:12Z,2019-11-22T14:36:03Z,2019-11-22T14:36:06Z,CLOSED,False,4,0,1,https://github.com/mbroadst,CDRIVER-3433 support linking against windows static runtime,1,[],https://github.com/mongodb/mongo-c-driver/pull/591,https://github.com/mbroadst,4,https://github.com/mongodb/mongo-c-driver/pull/591#issuecomment-555253833,"This allows dependent projects to optionally enable overriding the
default MSVC runtime (/MD for the dynamic mulitthreaded) to use
the static runtime (/MT)",@rcsanchez97 I'm totally fine with the addon being the lone tester for now,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,591,2019-11-18T22:27:12Z,2019-11-22T14:36:03Z,2019-11-22T14:36:06Z,CLOSED,False,4,0,1,https://github.com/mbroadst,CDRIVER-3433 support linking against windows static runtime,1,[],https://github.com/mongodb/mongo-c-driver/pull/591,https://github.com/mbroadst,5,https://github.com/mongodb/mongo-c-driver/pull/591#issuecomment-557554824,"This allows dependent projects to optionally enable overriding the
default MSVC runtime (/MD for the dynamic mulitthreaded) to use
the static runtime (/MT)",closing because @kevinAlbs found a way to do this without changing libbson or libmongocrypt ✌️,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,592,2019-12-03T16:37:44Z,2019-12-05T16:50:46Z,2019-12-05T16:50:46Z,MERGED,True,19,1,3,https://github.com/EGuesnet,Fix __ss_family build issue on AIX6.1,2,[],https://github.com/mongodb/mongo-c-driver/pull/592,https://github.com/EGuesnet,1,https://github.com/mongodb/mongo-c-driver/pull/592,"See issue #562.
Correct way to find ss_family on AIX 5+.
Tested on AIX 6.1. It compiles and the whole test suite is OK.","See issue #562.
Correct way to find ss_family on AIX 5+.
Tested on AIX 6.1. It compiles and the whole test suite is OK.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,593,2019-12-12T15:22:40Z,2019-12-12T19:53:08Z,2019-12-12T19:53:12Z,MERGED,True,2,2,1,https://github.com/jmikola,Remove extra arg in mongoc_log call,1,[],https://github.com/mongodb/mongo-c-driver/pull/593,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/593,"I encountered the following build warning when compiling PHPC with bundled libmongoc and FLE:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/libmongoc/src/mongoc/mongoc-client-side-encryption.c: In function ‘_log_callback’:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/libmongoc/src/mongoc/mongoc-client-side-encryption.c:978:46: warning: too many arguments for format [-Wformat-extra-args]
    mongoc_log (log_level, MONGOC_LOG_DOMAIN, ""%s"", message, NULL);","I encountered the following build warning when compiling PHPC with bundled libmongoc and FLE:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/libmongoc/src/mongoc/mongoc-client-side-encryption.c: In function ‘_log_callback’:
/home/jmikola/workspace/mongodb/phpc/src/libmongoc/src/libmongoc/src/mongoc/mongoc-client-side-encryption.c:978:46: warning: too many arguments for format [-Wformat-extra-args]
    mongoc_log (log_level, MONGOC_LOG_DOMAIN, ""%s"", message, NULL);",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,594,2020-03-05T04:00:43Z,2020-03-07T02:17:14Z,2020-03-07T02:17:14Z,MERGED,True,4,5,1,https://github.com/sindbach,Updated discussion links to point to the new MongoDB Community Forums,2,[],https://github.com/mongodb/mongo-c-driver/pull/594,https://github.com/sindbach,1,https://github.com/mongodb/mongo-c-driver/pull/594,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,594,2020-03-05T04:00:43Z,2020-03-07T02:17:14Z,2020-03-07T02:17:14Z,MERGED,True,4,5,1,https://github.com/sindbach,Updated discussion links to point to the new MongoDB Community Forums,2,[],https://github.com/mongodb/mongo-c-driver/pull/594,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/594#issuecomment-596034539,,Thanks!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,595,2020-03-08T17:46:34Z,2020-03-11T13:15:55Z,2020-03-11T13:15:58Z,CLOSED,False,21,2,3,https://github.com/kevinAlbs,CDRIVER-3557 test on RHEL 6.2,1,[],https://github.com/mongodb/mongo-c-driver/pull/595,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/595,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,596,2020-03-16T16:24:02Z,2020-03-19T14:32:44Z,2020-03-19T14:32:48Z,CLOSED,False,21,6,4,https://github.com/kevinAlbs,CDRIVER-3561 fix abi-compliance-check,5,[],https://github.com/mongodb/mongo-c-driver/pull/596,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/596,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,597,2020-03-17T18:53:39Z,2020-03-19T14:08:10Z,2020-03-19T14:10:31Z,MERGED,True,1,1,1,https://github.com/jeroen,Fix for mingw-w64 Windows build,1,[],https://github.com/mongodb/mongo-c-driver/pull/597,https://github.com/jeroen,1,https://github.com/mongodb/mongo-c-driver/pull/597,"I am not sure why Windows is special cased here, but mingw-w64 / gcc needs the same logic as other systems, otherwise we get compiler warnings about non-standard c99.","I am not sure why Windows is special cased here, but mingw-w64 / gcc needs the same logic as other systems, otherwise we get compiler warnings about non-standard c99.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,597,2020-03-17T18:53:39Z,2020-03-19T14:08:10Z,2020-03-19T14:10:31Z,MERGED,True,1,1,1,https://github.com/jeroen,Fix for mingw-w64 Windows build,1,[],https://github.com/mongodb/mongo-c-driver/pull/597,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/597#issuecomment-601198713,"I am not sure why Windows is special cased here, but mingw-w64 / gcc needs the same logic as other systems, otherwise we get compiler warnings about non-standard c99.","LGTM. As I understand it, _WIN32 defines the platform, and _MSC_VER the compiler. So this switches from __FUNCTION__ to __func__ for mingw which is C99 standard according to https://gcc.gnu.org/onlinedocs/cpp/Standard-Predefined-Macros.html. Thank you for the contribution @jeroen.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,598,2020-04-01T15:17:18Z,2020-04-14T13:11:51Z,2020-04-14T13:11:51Z,MERGED,True,14,14,1,https://github.com/richarddonkin,Bugfix/integer overflow,2,[],https://github.com/mongodb/mongo-c-driver/pull/598,https://github.com/richarddonkin,1,https://github.com/mongodb/mongo-c-driver/pull/598,"Fix a couple of issues that only appear on a 32-bit or 64-bit architecture.
Both issues are based on integer overflows and could have potentially
serious consequences.","Fix a couple of issues that only appear on a 32-bit or 64-bit architecture.
Both issues are based on integer overflows and could have potentially
serious consequences.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,598,2020-04-01T15:17:18Z,2020-04-14T13:11:51Z,2020-04-14T13:11:51Z,MERGED,True,14,14,1,https://github.com/richarddonkin,Bugfix/integer overflow,2,[],https://github.com/mongodb/mongo-c-driver/pull/598,https://github.com/richarddonkin,2,https://github.com/mongodb/mongo-c-driver/pull/598#issuecomment-607318998,"Fix a couple of issues that only appear on a 32-bit or 64-bit architecture.
Both issues are based on integer overflows and could have potentially
serious consequences.",It's worth mentioning that I don't believe either of these issues constitutes a security vulnerability. The functions bson_new_from_buffer() and bson_compare() do however behave unexpectedly without these commits applied.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,599,2020-04-07T21:27:29Z,2020-04-16T05:09:36Z,2020-04-16T05:09:40Z,MERGED,True,141,129,5,https://github.com/jweinst1,Improve error messaging when a NULL parameter is encountered.,5,[],https://github.com/mongodb/mongo-c-driver/pull/599,https://github.com/jweinst1,1,https://github.com/mongodb/mongo-c-driver/pull/599,"Summary
This pull request makes a change to the way the mongoc driver reports encountering NULL in function parameters where a non NULL pointer is expected. Currently, a confusing error message is given:
mongoc_collection_count_documents(): precondition failed: coll

This arises from the  BSON_ASSERT macro, defined as:
#define BSON_ASSERT(test)                                  \
   do {                                                    \
      if (!(BSON_LIKELY (test))) {                         \
         fprintf (stderr,                                  \
                  ""%s:%d %s(): precondition failed: %s\n"", \
                  __FILE__,                                \
                  __LINE__,                                \
                  BSON_FUNC,                               \
                  #test);                                  \
         abort ();                                         \
      }                                                    \
   } while (0)
This can work for typical conditions, like foo != 0, where the condition is properly transformed into a C-string literal by the preprocessor. However, in the case of NULL values, it just transforms the parameter name, which makes the message confusing. One could think there is something wrong with the parameter, or many different causes, rather than it being NULL.
The solution proposed here is to give a more straight forward message for NULL parameters:
#define BSON_ASSERT_PARAM(param)                                                   \
   do {                                                                            \
      if ((BSON_LIKELY (param == NULL))) {                                         \
         fprintf (stderr,                                                          \
                  ""The parameter: %s, in function %s, cannot be NULL\n"", \
                  #param,                                                          \
                  BSON_FUNC);                                                      \
         abort ();                                                                 \
      }                                                                            \
   } while (0)   
This is much more direct, and accurate way of communicating the error.
Notes
As a side note, I don't believe the line number is relevant for these error messages, because that line number does not correspond to where the function is called in a program linking the mongoc driver, it corresponds to the source code of the C driver itself.","Summary
This pull request makes a change to the way the mongoc driver reports encountering NULL in function parameters where a non NULL pointer is expected. Currently, a confusing error message is given:
mongoc_collection_count_documents(): precondition failed: coll

This arises from the  BSON_ASSERT macro, defined as:
#define BSON_ASSERT(test)                                  \
   do {                                                    \
      if (!(BSON_LIKELY (test))) {                         \
         fprintf (stderr,                                  \
                  ""%s:%d %s(): precondition failed: %s\n"", \
                  __FILE__,                                \
                  __LINE__,                                \
                  BSON_FUNC,                               \
                  #test);                                  \
         abort ();                                         \
      }                                                    \
   } while (0)
This can work for typical conditions, like foo != 0, where the condition is properly transformed into a C-string literal by the preprocessor. However, in the case of NULL values, it just transforms the parameter name, which makes the message confusing. One could think there is something wrong with the parameter, or many different causes, rather than it being NULL.
The solution proposed here is to give a more straight forward message for NULL parameters:
#define BSON_ASSERT_PARAM(param)                                                   \
   do {                                                                            \
      if ((BSON_LIKELY (param == NULL))) {                                         \
         fprintf (stderr,                                                          \
                  ""The parameter: %s, in function %s, cannot be NULL\n"", \
                  #param,                                                          \
                  BSON_FUNC);                                                      \
         abort ();                                                                 \
      }                                                                            \
   } while (0)   
This is much more direct, and accurate way of communicating the error.
Notes
As a side note, I don't believe the line number is relevant for these error messages, because that line number does not correspond to where the function is called in a program linking the mongoc driver, it corresponds to the source code of the C driver itself.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,599,2020-04-07T21:27:29Z,2020-04-16T05:09:36Z,2020-04-16T05:09:40Z,MERGED,True,141,129,5,https://github.com/jweinst1,Improve error messaging when a NULL parameter is encountered.,5,[],https://github.com/mongodb/mongo-c-driver/pull/599,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/599#issuecomment-614419037,"Summary
This pull request makes a change to the way the mongoc driver reports encountering NULL in function parameters where a non NULL pointer is expected. Currently, a confusing error message is given:
mongoc_collection_count_documents(): precondition failed: coll

This arises from the  BSON_ASSERT macro, defined as:
#define BSON_ASSERT(test)                                  \
   do {                                                    \
      if (!(BSON_LIKELY (test))) {                         \
         fprintf (stderr,                                  \
                  ""%s:%d %s(): precondition failed: %s\n"", \
                  __FILE__,                                \
                  __LINE__,                                \
                  BSON_FUNC,                               \
                  #test);                                  \
         abort ();                                         \
      }                                                    \
   } while (0)
This can work for typical conditions, like foo != 0, where the condition is properly transformed into a C-string literal by the preprocessor. However, in the case of NULL values, it just transforms the parameter name, which makes the message confusing. One could think there is something wrong with the parameter, or many different causes, rather than it being NULL.
The solution proposed here is to give a more straight forward message for NULL parameters:
#define BSON_ASSERT_PARAM(param)                                                   \
   do {                                                                            \
      if ((BSON_LIKELY (param == NULL))) {                                         \
         fprintf (stderr,                                                          \
                  ""The parameter: %s, in function %s, cannot be NULL\n"", \
                  #param,                                                          \
                  BSON_FUNC);                                                      \
         abort ();                                                                 \
      }                                                                            \
   } while (0)   
This is much more direct, and accurate way of communicating the error.
Notes
As a side note, I don't believe the line number is relevant for these error messages, because that line number does not correspond to where the function is called in a program linking the mongoc driver, it corresponds to the source code of the C driver itself.",Thanks again for the contribution!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,600,2020-04-15T09:00:00Z,2020-04-20T20:07:20Z,2020-04-20T20:07:20Z,MERGED,True,7,3,1,https://github.com/remicollet,Fix MATCHES usage so ENABLE_STATIC=BUILD_ONLY works,1,[],https://github.com/mongodb/mongo-c-driver/pull/600,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/600,"Because BUILD_ONLY matches ON, it doesn't work as expected.
I also add some debug message, feel free to drop them...","Because BUILD_ONLY matches ON, it doesn't work as expected.
I also add some debug message, feel free to drop them...",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,600,2020-04-15T09:00:00Z,2020-04-20T20:07:20Z,2020-04-20T20:07:20Z,MERGED,True,7,3,1,https://github.com/remicollet,Fix MATCHES usage so ENABLE_STATIC=BUILD_ONLY works,1,[],https://github.com/mongodb/mongo-c-driver/pull/600,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/600#issuecomment-613996108,"Because BUILD_ONLY matches ON, it doesn't work as expected.
I also add some debug message, feel free to drop them...","@remicollet Well, that was an embarrassing oversight on my part.  Thanks so much for catching the error and fixing it!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,601,2020-05-04T16:42:03Z,2020-05-12T18:47:35Z,2020-05-12T18:47:35Z,MERGED,True,9371,388,89,https://github.com/kevinAlbs,CDRIVER-3615 reduce races in SDAM err handling,7,[],https://github.com/mongodb/mongo-c-driver/pull/601,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/601,"Summary of changes

Replace the topology scanner ""timestamp"" with a server description ""generation"". This allows invalidating all connections to a server. The generation is used in the new SDAM tests.
Use the generation of the connection to determine whether or not to handle an application connection error.  Application errors are network errors, or a state change (aka ""not master""/""node is recovering), defined in SDAM.
Update error handling so state change errors do not apply if they do not  include a newer topologyVersion.","Summary of changes

Replace the topology scanner ""timestamp"" with a server description ""generation"". This allows invalidating all connections to a server. The generation is used in the new SDAM tests.
Use the generation of the connection to determine whether or not to handle an application connection error.  Application errors are network errors, or a state change (aka ""not master""/""node is recovering), defined in SDAM.
Update error handling so state change errors do not apply if they do not  include a newer topologyVersion.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,601,2020-05-04T16:42:03Z,2020-05-12T18:47:35Z,2020-05-12T18:47:35Z,MERGED,True,9371,388,89,https://github.com/kevinAlbs,CDRIVER-3615 reduce races in SDAM err handling,7,[],https://github.com/mongodb/mongo-c-driver/pull/601,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/601#issuecomment-624881847,"Summary of changes

Replace the topology scanner ""timestamp"" with a server description ""generation"". This allows invalidating all connections to a server. The generation is used in the new SDAM tests.
Use the generation of the connection to determine whether or not to handle an application connection error.  Application errors are network errors, or a state change (aka ""not master""/""node is recovering), defined in SDAM.
Update error handling so state change errors do not apply if they do not  include a newer topologyVersion.","Something is up with the patch build reporting these errors on variants with older git reporting: error: unknown option merged
That happens during cmake configuration. I suspect this is due to how patch builds are being applied from GitHub. I'll take a look, but I do not think those failures are due to these changes.
Edit: should be fixed by #605",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,602,2020-05-04T16:50:14Z,2020-05-04T22:43:15Z,2020-05-04T22:43:15Z,MERGED,True,82,4,3,https://github.com/kevinAlbs,CDRIVER-3619 reject bad setname for single topology,1,[],https://github.com/mongodb/mongo-c-driver/pull/602,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/602,"For a topology type single, if the user specified a setName in the URI, the server should be marked Unknown if it reports a different setName.","For a topology type single, if the user specified a setName in the URI, the server should be marked Unknown if it reports a different setName.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,603,2020-05-06T14:55:28Z,2020-05-06T20:40:18Z,2020-05-06T20:40:18Z,MERGED,True,4,4,4,https://github.com/kevinAlbs, CDRIVER-3655 handle new 'ns not found' err format,1,[],https://github.com/mongodb/mongo-c-driver/pull/603,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/603,"The ""ns not found"" error has changed on the server to include more info. This changes our exact match checks to substring checks. Fixes failing ""latest"" tests on master.","The ""ns not found"" error has changed on the server to include more info. This changes our exact match checks to substring checks. Fixes failing ""latest"" tests on master.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,604,2020-05-06T21:59:16Z,2020-05-07T01:32:27Z,2020-05-07T01:34:10Z,CLOSED,False,93,0,4,https://github.com/rcsanchez97,CDRIVER-3303 always apply command options for OP_MSG,4,[],https://github.com/mongodb/mongo-c-driver/pull/604,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/604,"The original plan was to eliminate _mongoc_cmd_parts_ensure_copied and refactor so that any changes to options along the way are always captured and never lost.  However, that proved to be more risky because of mongoc_cmd_parts_append_opts not being idempotent.  As a result, the approach in this PR was taken instead: to add calls to _mongoc_cmd_parts_ensure_copied in places where they were missing.  A separate ticket will be written to consider a more comprehensive solution.","The original plan was to eliminate _mongoc_cmd_parts_ensure_copied and refactor so that any changes to options along the way are always captured and never lost.  However, that proved to be more risky because of mongoc_cmd_parts_append_opts not being idempotent.  As a result, the approach in this PR was taken instead: to add calls to _mongoc_cmd_parts_ensure_copied in places where they were missing.  A separate ticket will be written to consider a more comprehensive solution.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,604,2020-05-06T21:59:16Z,2020-05-07T01:32:27Z,2020-05-07T01:34:10Z,CLOSED,False,93,0,4,https://github.com/rcsanchez97,CDRIVER-3303 always apply command options for OP_MSG,4,[],https://github.com/mongodb/mongo-c-driver/pull/604,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/604#issuecomment-624956855,"The original plan was to eliminate _mongoc_cmd_parts_ensure_copied and refactor so that any changes to options along the way are always captured and never lost.  However, that proved to be more risky because of mongoc_cmd_parts_append_opts not being idempotent.  As a result, the approach in this PR was taken instead: to add calls to _mongoc_cmd_parts_ensure_copied in places where they were missing.  A separate ticket will be written to consider a more comprehensive solution.","I'm not sure why Travis failed, and there are no attached logs. Otherwise LGTM.
For future reference, I think the workflow once new commits are ready for review is to ""Re-request review"". That way it will show up again in reviewer's list of ""Review Requests"".",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,604,2020-05-06T21:59:16Z,2020-05-07T01:32:27Z,2020-05-07T01:34:10Z,CLOSED,False,93,0,4,https://github.com/rcsanchez97,CDRIVER-3303 always apply command options for OP_MSG,4,[],https://github.com/mongodb/mongo-c-driver/pull/604,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/604#issuecomment-624963251,"The original plan was to eliminate _mongoc_cmd_parts_ensure_copied and refactor so that any changes to options along the way are always captured and never lost.  However, that proved to be more risky because of mongoc_cmd_parts_append_opts not being idempotent.  As a result, the approach in this PR was taken instead: to add calls to _mongoc_cmd_parts_ensure_copied in places where they were missing.  A separate ticket will be written to consider a more comprehensive solution.","Interesting.  I wasn't aware of the ""Re-request review"" thing and
clearly didn't notice it.  I'll keep it in mind for next time.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,604,2020-05-06T21:59:16Z,2020-05-07T01:32:27Z,2020-05-07T01:34:10Z,CLOSED,False,93,0,4,https://github.com/rcsanchez97,CDRIVER-3303 always apply command options for OP_MSG,4,[],https://github.com/mongodb/mongo-c-driver/pull/604,https://github.com/rcsanchez97,4,https://github.com/mongodb/mongo-c-driver/pull/604#issuecomment-624977490,"The original plan was to eliminate _mongoc_cmd_parts_ensure_copied and refactor so that any changes to options along the way are always captured and never lost.  However, that proved to be more risky because of mongoc_cmd_parts_append_opts not being idempotent.  As a result, the approach in this PR was taken instead: to add calls to _mongoc_cmd_parts_ensure_copied in places where they were missing.  A separate ticket will be written to consider a more comprehensive solution.",Merged as commit a4f02b7,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,605,2020-05-06T22:26:27Z,2020-05-07T00:15:47Z,2020-05-07T00:15:47Z,MERGED,True,8,9,2,https://github.com/kevinAlbs,CDRIVER-3573 hard code version on patches,1,[],https://github.com/mongodb/mongo-c-driver/pull/605,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/605,Not all evergreen variants have a new enough version of git to run calc_release_version.py on a non-master branch. This fixes patch builds made through GitHub PRs,Not all evergreen variants have a new enough version of git to run calc_release_version.py on a non-master branch. This fixes patch builds made through GitHub PRs,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,605,2020-05-06T22:26:27Z,2020-05-07T00:15:47Z,2020-05-07T00:15:47Z,MERGED,True,8,9,2,https://github.com/kevinAlbs,CDRIVER-3573 hard code version on patches,1,[],https://github.com/mongodb/mongo-c-driver/pull/605,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/605#issuecomment-624926705,Not all evergreen variants have a new enough version of git to run calc_release_version.py on a non-master branch. This fixes patch builds made through GitHub PRs,Looks like this is working. The Ubuntu 14.04 compile task has gotten past cmake.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,606,2020-05-07T02:29:35Z,2020-05-07T11:40:26Z,2020-05-07T11:45:22Z,MERGED,True,1,1,1,https://github.com/rcsanchez97,fix doc typo,1,[],https://github.com/mongodb/mongo-c-driver/pull/606,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/606,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,607,2020-05-07T18:11:32Z,2020-05-29T22:37:29Z,2020-05-29T22:37:29Z,CLOSED,False,2158,565,20,https://github.com/kevinAlbs,CDRIVER-3625 monitor with a thread-per-server,3,[],https://github.com/mongodb/mongo-c-driver/pull/607,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/607,"Prerequisite work for implementing streamable ismaster in multi-threaded.
Background and rationale is described in WRITING-5411.
For a client pool, servers are now scanned independently using a separate thread per server.
SRV polling is now done on a separate thread.","Prerequisite work for implementing streamable ismaster in multi-threaded.
Background and rationale is described in WRITING-5411.
For a client pool, servers are now scanned independently using a separate thread per server.
SRV polling is now done on a separate thread.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,607,2020-05-07T18:11:32Z,2020-05-29T22:37:29Z,2020-05-29T22:37:29Z,CLOSED,False,2158,565,20,https://github.com/kevinAlbs,CDRIVER-3625 monitor with a thread-per-server,3,[],https://github.com/mongodb/mongo-c-driver/pull/607,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/607#issuecomment-636222548,"Prerequisite work for implementing streamable ismaster in multi-threaded.
Background and rationale is described in WRITING-5411.
For a client pool, servers are now scanned independently using a separate thread per server.
SRV polling is now done on a separate thread.",Fixed merge conflicts locally and pushed in 370fc18 (and cherry-picked to r1.17 in c62098b).,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,608,2020-05-08T01:59:19Z,2020-05-08T12:20:27Z,2020-05-08T12:22:15Z,MERGED,True,11,12,1,https://github.com/rcsanchez97,clang-format fixes,1,[],https://github.com/mongodb/mongo-c-driver/pull/608,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/608,I apparently neglected to run clang-format on my previous change that created test-mongoc-cmd.c.,I apparently neglected to run clang-format on my previous change that created test-mongoc-cmd.c.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,609,2020-05-12T19:13:39Z,2020-05-15T19:02:24Z,2020-05-15T19:02:25Z,CLOSED,False,9461,431,90,https://github.com/kevinAlbs,CDRIVER-3615,8,[],https://github.com/mongodb/mongo-c-driver/pull/609,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/609,Follow-up PR to #601,Follow-up PR to #601,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,609,2020-05-12T19:13:39Z,2020-05-15T19:02:24Z,2020-05-15T19:02:25Z,CLOSED,False,9461,431,90,https://github.com/kevinAlbs,CDRIVER-3615,8,[],https://github.com/mongodb/mongo-c-driver/pull/609,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/609#issuecomment-629426599,Follow-up PR to #601,Pushed outside of PR.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,610,2020-05-12T21:25:06Z,2020-05-26T15:51:54Z,2020-05-26T15:51:55Z,CLOSED,False,589,11,12,https://github.com/kevinAlbs,CDRIVER-3535 add mongoc_interrupt_t,4,[],https://github.com/mongodb/mongo-c-driver/pull/610,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/610,"This is prerequisite work for streamable ismaster.
A mongoc_interrupt_t  creates a stream which can be safely interrupted from another thread while polling.
This is needed to support the isMaster Cancellation section. When this is integrated with the work of #607 the interrupt stream will be included in calls to mongoc_stream_poll, and will be interrupted when shutting down a server monitor.","This is prerequisite work for streamable ismaster.
A mongoc_interrupt_t  creates a stream which can be safely interrupted from another thread while polling.
This is needed to support the isMaster Cancellation section. When this is integrated with the work of #607 the interrupt stream will be included in calls to mongoc_stream_poll, and will be interrupted when shutting down a server monitor.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,610,2020-05-12T21:25:06Z,2020-05-26T15:51:54Z,2020-05-26T15:51:55Z,CLOSED,False,589,11,12,https://github.com/kevinAlbs,CDRIVER-3535 add mongoc_interrupt_t,4,[],https://github.com/mongodb/mongo-c-driver/pull/610,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/610#issuecomment-629274951,"This is prerequisite work for streamable ismaster.
A mongoc_interrupt_t  creates a stream which can be safely interrupted from another thread while polling.
This is needed to support the isMaster Cancellation section. When this is integrated with the work of #607 the interrupt stream will be included in calls to mongoc_stream_poll, and will be interrupted when shutting down a server monitor.",Updated. Thanks for the review @sgolemon!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,610,2020-05-12T21:25:06Z,2020-05-26T15:51:54Z,2020-05-26T15:51:55Z,CLOSED,False,589,11,12,https://github.com/kevinAlbs,CDRIVER-3535 add mongoc_interrupt_t,4,[],https://github.com/mongodb/mongo-c-driver/pull/610,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/610#issuecomment-634112750,"This is prerequisite work for streamable ismaster.
A mongoc_interrupt_t  creates a stream which can be safely interrupted from another thread while polling.
This is needed to support the isMaster Cancellation section. When this is integrated with the work of #607 the interrupt stream will be included in calls to mongoc_stream_poll, and will be interrupted when shutting down a server monitor.",Pushed in 40f8e03,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,611,2020-05-12T22:58:33Z,2020-05-14T14:05:55Z,2020-05-14T14:08:00Z,MERGED,True,5,2,1,https://github.com/rcsanchez97,CDRIVER-3531 do not require session support for CRUD tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/611,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/611,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,612,2020-05-15T17:37:06Z,2020-05-20T14:49:11Z,2020-05-20T14:49:34Z,MERGED,True,243,7,6,https://github.com/bazile-clyde,CDRIVER-3665 End-to-end test for OCSP caching,2,[],https://github.com/mongodb/mongo-c-driver/pull/612,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/612,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,613,2020-05-17T13:39:29Z,2020-05-18T17:27:42Z,2020-05-18T17:29:03Z,MERGED,True,111,0,2,https://github.com/rcsanchez97,CDRIVER-3477 handle arrayFilters on second and subsequent ops,1,[],https://github.com/mongodb/mongo-c-driver/pull/613,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/613,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,614,2020-05-18T23:41:17Z,2020-05-19T21:47:26Z,2020-05-19T21:48:13Z,MERGED,True,3,0,1,https://github.com/rcsanchez97,CDRIVER-3596 tweak cluster_time tests for valgrind environment,1,[],https://github.com/mongodb/mongo-c-driver/pull/614,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/614,Full Evergreen patch build: https://evergreen.mongodb.com/version/5ec30e00d1fe073c378f2bc7,Full Evergreen patch build: https://evergreen.mongodb.com/version/5ec30e00d1fe073c378f2bc7,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,614,2020-05-18T23:41:17Z,2020-05-19T21:47:26Z,2020-05-19T21:48:13Z,MERGED,True,3,0,1,https://github.com/rcsanchez97,CDRIVER-3596 tweak cluster_time tests for valgrind environment,1,[],https://github.com/mongodb/mongo-c-driver/pull/614,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/614#issuecomment-630807570,Full Evergreen patch build: https://evergreen.mongodb.com/version/5ec30e00d1fe073c378f2bc7,LGTM. I created https://jira.mongodb.org/browse/CDRIVER-3680 to track the timeouts.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,615,2020-05-19T14:21:30Z,2020-05-26T11:13:55Z,2020-05-26T11:14:00Z,CLOSED,False,105,1,1,https://github.com/alcaeus,CDRIVER-3649 Do not add the RetryableWriteError label to errors that occur during a write within a transaction,1,[],https://github.com/mongodb/mongo-c-driver/pull/615,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/615,"https://jira.mongodb.org/browse/CDRIVER-3649
No code changes are required to have spec tests pass.","https://jira.mongodb.org/browse/CDRIVER-3649
No code changes are required to have spec tests pass.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,615,2020-05-19T14:21:30Z,2020-05-26T11:13:55Z,2020-05-26T11:14:00Z,CLOSED,False,105,1,1,https://github.com/alcaeus,CDRIVER-3649 Do not add the RetryableWriteError label to errors that occur during a write within a transaction,1,[],https://github.com/mongodb/mongo-c-driver/pull/615,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/615#issuecomment-633961532,"https://jira.mongodb.org/browse/CDRIVER-3649
No code changes are required to have spec tests pass.",Merged in 3a3fa42.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,616,2020-05-19T15:31:09Z,2020-05-26T13:13:36Z,2020-05-26T13:13:42Z,CLOSED,False,1647,27,20,https://github.com/alcaeus,CDRIVER-3673: Don't check error message for retryable write errors,5,['bug'],https://github.com/mongodb/mongo-c-driver/pull/616,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/616,https://jira.mongodb.org/browse/CDRIVER-3673,https://jira.mongodb.org/browse/CDRIVER-3673,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,616,2020-05-19T15:31:09Z,2020-05-26T13:13:36Z,2020-05-26T13:13:42Z,CLOSED,False,1647,27,20,https://github.com/alcaeus,CDRIVER-3673: Don't check error message for retryable write errors,5,['bug'],https://github.com/mongodb/mongo-c-driver/pull/616,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/616#issuecomment-634016647,https://jira.mongodb.org/browse/CDRIVER-3673,Merged in 20c0aa9.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,617,2020-05-19T18:56:46Z,2020-05-20T14:19:47Z,2020-05-20T14:19:47Z,MERGED,True,43,43,2,https://github.com/kevinAlbs,CDRIVER-3680 bump valgrind timeout,1,[],https://github.com/mongodb/mongo-c-driver/pull/617,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/617,"From a patch build, it appears they take 3.5 hours to fully execute.
https://evergreen.mongodb.com/version/5ec3d728d1fe073c379213e9","From a patch build, it appears they take 3.5 hours to fully execute.
https://evergreen.mongodb.com/version/5ec3d728d1fe073c379213e9",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,618,2020-05-20T16:14:43Z,2020-05-20T21:53:34Z,2020-05-20T21:53:34Z,MERGED,True,7,3,1,https://github.com/kevinAlbs,CDRIVER-3678 fix /Topology/request_scan_on_error,1,[],https://github.com/mongodb/mongo-c-driver/pull/618,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/618,"CDRIVER-3615 changed an exotic edge case for parsing errors.
An error with a NotMaster error code, but a ""node is recovering"" message
is considered a ""node is recovering"" error for multi-threaded error
handling. So requested scan is expected.
A ""node is recovering"" error should request scan for multi-threaded, not
single-threaded scanning. The test was making a wrong assertion, but the
check of the assertion was very racy.
This fixes the test and increases the wait to make the test less racy.","CDRIVER-3615 changed an exotic edge case for parsing errors.
An error with a NotMaster error code, but a ""node is recovering"" message
is considered a ""node is recovering"" error for multi-threaded error
handling. So requested scan is expected.
A ""node is recovering"" error should request scan for multi-threaded, not
single-threaded scanning. The test was making a wrong assertion, but the
check of the assertion was very racy.
This fixes the test and increases the wait to make the test less racy.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,619,2020-05-20T19:58:30Z,2020-05-27T16:08:50Z,2020-05-27T16:09:15Z,CLOSED,False,83,3,6,https://github.com/rcsanchez97,CDRIVER-3516 implement waitQueueTimeoutMS for client pools,3,[],https://github.com/mongodb/mongo-c-driver/pull/619,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/619,Full Evergreen patch build: https://evergreen.mongodb.com/version/5ec5886bd6d80a5f707ffba3,Full Evergreen patch build: https://evergreen.mongodb.com/version/5ec5886bd6d80a5f707ffba3,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,619,2020-05-20T19:58:30Z,2020-05-27T16:08:50Z,2020-05-27T16:09:15Z,CLOSED,False,83,3,6,https://github.com/rcsanchez97,CDRIVER-3516 implement waitQueueTimeoutMS for client pools,3,[],https://github.com/mongodb/mongo-c-driver/pull/619,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/619#issuecomment-634030719,Full Evergreen patch build: https://evergreen.mongodb.com/version/5ec5886bd6d80a5f707ffba3,Full patch build to go with second commit: https://evergreen.mongodb.com/version/5ec83af70ae60638153cb506,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,619,2020-05-20T19:58:30Z,2020-05-27T16:08:50Z,2020-05-27T16:09:15Z,CLOSED,False,83,3,6,https://github.com/rcsanchez97,CDRIVER-3516 implement waitQueueTimeoutMS for client pools,3,[],https://github.com/mongodb/mongo-c-driver/pull/619,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/619#issuecomment-634770682,Full Evergreen patch build: https://evergreen.mongodb.com/version/5ec5886bd6d80a5f707ffba3,Closed via commit f56a515,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,620,2020-05-25T18:23:19Z,2020-05-29T01:08:40Z,2020-05-29T01:08:41Z,MERGED,True,31,14,2,https://github.com/kevinAlbs,CDRIVER-748 fix mock server for TSAN,2,[],https://github.com/mongodb/mongo-c-driver/pull/620,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/620,"This is not urgent. This, and some other test fixes from #607 are prerequisites for adding a thread-sanitizer task to evergreen to automatically check for thread related bugs.
mock_server_hangs_up and mock_server_resets were closing a request stream directly from the main thread. But a request stream should only be accessed by the worker thread. This now adds a special reply to the worker thread's queue to signal a hangup or reset.","This is not urgent. This, and some other test fixes from #607 are prerequisites for adding a thread-sanitizer task to evergreen to automatically check for thread related bugs.
mock_server_hangs_up and mock_server_resets were closing a request stream directly from the main thread. But a request stream should only be accessed by the worker thread. This now adds a special reply to the worker thread's queue to signal a hangup or reset.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,621,2020-05-26T19:33:33Z,2020-06-03T18:01:21Z,2020-06-03T18:01:21Z,MERGED,True,166,22,11,https://github.com/kevinAlbs,CDRIVER-3535 add awaited to heartbeat events,2,[],https://github.com/mongodb/mongo-c-driver/pull/621,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/621,"A small isolated chunk of streamable ismaster to add an awaited field to heartbeat started/succeeded/failed events. It was added as part of this spec change: mongodb/specifications@a813663
Currently awaited is always false, but after streamable ismaster, it will be true for awaitable isMaster commands.","A small isolated chunk of streamable ismaster to add an awaited field to heartbeat started/succeeded/failed events. It was added as part of this spec change: mongodb/specifications@a813663
Currently awaited is always false, but after streamable ismaster, it will be true for awaitable isMaster commands.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,622,2020-05-26T19:36:21Z,2020-05-31T03:43:43Z,2020-05-31T03:43:43Z,MERGED,True,159,209,17,https://github.com/kevinAlbs,Cherry-pick test fixes and hardcode BUILD_VERSION,8,[],https://github.com/mongodb/mongo-c-driver/pull/622,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/622,"This is only test fixes, to get the r1.16 branch passing on Evergreen.
Evergreen patch build for everything up to the last commit:
https://evergreen.mongodb.com/version/5ecd65e5850e6143cfc6c8af
Patch build for latest commit: https://evergreen.mongodb.com/version/5ecd8f262fbabe11044bd71c","This is only test fixes, to get the r1.16 branch passing on Evergreen.
Evergreen patch build for everything up to the last commit:
https://evergreen.mongodb.com/version/5ecd65e5850e6143cfc6c8af
Patch build for latest commit: https://evergreen.mongodb.com/version/5ecd8f262fbabe11044bd71c",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,623,2020-05-29T00:12:33Z,2020-06-05T17:49:52Z,2020-06-05T17:59:17Z,MERGED,True,2141,233,15,https://github.com/kevinAlbs,CDRIVER-3668 support OCSP back to OpenSSL 1.0.1,3,[],https://github.com/mongodb/mongo-c-driver/pull/623,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/623,"Adds polyfills and makes a few tweaks to support OpenSSL back to 1.0.1.
Summary of changes:

change SSL_CTX_set_tlsext_status_type to SSL_set_tlsext_status_type.
polyfill SSL_get0_verified_chain, NID_tlsfeature, and hostname check.
check for status_request from the tlsfeature extension when inspecting peer certificate.
skip time check for older OpenSSL when updating cache entries.
perform the OCSP check after the handshake, since sometimes the peer certificate is not available in the callback in OpenSSL <= 1.0.2.
check tlsDisableOCSPEndpointCheck before reaching out to a responder.
make tlsDisableOCSPEndpointCheck and tlsDisableCertificateRevocationCheck URI options implicitly enable TLS.
enable OCSP tests on OpenSSL and macOS that were skipped.
add OCSP tests for OpenSSL 1.0.1.
update OCSP OpenSSL documentation.
change OCSP verification logs from MONGOC_DEBUG to TRACE in successful cases.

The first commit has the changes, the second has the config.yml regeneration.
Full evergreen patch build: https://evergreen.mongodb.com/version/5ed03422a4cf471c38658ada","Adds polyfills and makes a few tweaks to support OpenSSL back to 1.0.1.
Summary of changes:

change SSL_CTX_set_tlsext_status_type to SSL_set_tlsext_status_type.
polyfill SSL_get0_verified_chain, NID_tlsfeature, and hostname check.
check for status_request from the tlsfeature extension when inspecting peer certificate.
skip time check for older OpenSSL when updating cache entries.
perform the OCSP check after the handshake, since sometimes the peer certificate is not available in the callback in OpenSSL <= 1.0.2.
check tlsDisableOCSPEndpointCheck before reaching out to a responder.
make tlsDisableOCSPEndpointCheck and tlsDisableCertificateRevocationCheck URI options implicitly enable TLS.
enable OCSP tests on OpenSSL and macOS that were skipped.
add OCSP tests for OpenSSL 1.0.1.
update OCSP OpenSSL documentation.
change OCSP verification logs from MONGOC_DEBUG to TRACE in successful cases.

The first commit has the changes, the second has the config.yml regeneration.
Full evergreen patch build: https://evergreen.mongodb.com/version/5ed03422a4cf471c38658ada",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,624,2020-05-29T01:07:09Z,2020-05-29T13:32:02Z,2020-05-29T13:32:02Z,MERGED,True,2,0,1,https://github.com/kevinAlbs,CDRIVER-3683 doc allowDiskUse server support,1,[],https://github.com/mongodb/mongo-c-driver/pull/624,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/624,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,625,2020-05-31T20:16:10Z,2020-06-26T12:33:15Z,2020-06-26T12:33:15Z,MERGED,True,2539,803,38,https://github.com/kevinAlbs,CDRIVER-3535 streamable ismaster,1,[],https://github.com/mongodb/mongo-c-driver/pull/625,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/625,"Implementation of streamable ismaster. Integration tests and unit tests are on another branch and passing. I left them out of this PR to keep it a little smaller.
The pseudocode in the Server Monitoring spec captures the core logic: https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-monitoring.rst#monitor-thread but I've commented inline pointing to relevant sections.","Implementation of streamable ismaster. Integration tests and unit tests are on another branch and passing. I left them out of this PR to keep it a little smaller.
The pseudocode in the Server Monitoring spec captures the core logic: https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-monitoring.rst#monitor-thread but I've commented inline pointing to relevant sections.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,625,2020-05-31T20:16:10Z,2020-06-26T12:33:15Z,2020-06-26T12:33:15Z,MERGED,True,2539,803,38,https://github.com/kevinAlbs,CDRIVER-3535 streamable ismaster,1,[],https://github.com/mongodb/mongo-c-driver/pull/625,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/625#issuecomment-638127922,"Implementation of streamable ismaster. Integration tests and unit tests are on another branch and passing. I left them out of this PR to keep it a little smaller.
The pseudocode in the Server Monitoring spec captures the core logic: https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-monitoring.rst#monitor-thread but I've commented inline pointing to relevant sections.","The interrupt is now removed from the server monitor, and there are additional assertions to tests to ensure a wait occurs after cancellation.
This should be ready for review again @jmikola + @bazile-clyde",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,625,2020-05-31T20:16:10Z,2020-06-26T12:33:15Z,2020-06-26T12:33:15Z,MERGED,True,2539,803,38,https://github.com/kevinAlbs,CDRIVER-3535 streamable ismaster,1,[],https://github.com/mongodb/mongo-c-driver/pull/625,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/625#issuecomment-641994931,"Implementation of streamable ismaster. Integration tests and unit tests are on another branch and passing. I left them out of this PR to keep it a little smaller.
The pseudocode in the Server Monitoring spec captures the core logic: https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-monitoring.rst#monitor-thread but I've commented inline pointing to relevant sections.","All changes to address feedback are in the latest commit b531e48. My first pass initially missed some comments, so I amended the commit to keep all of the feedback changes in one commit. (Hence the force push).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,625,2020-05-31T20:16:10Z,2020-06-26T12:33:15Z,2020-06-26T12:33:15Z,MERGED,True,2539,803,38,https://github.com/kevinAlbs,CDRIVER-3535 streamable ismaster,1,[],https://github.com/mongodb/mongo-c-driver/pull/625,https://github.com/kevinAlbs,4,https://github.com/mongodb/mongo-c-driver/pull/625#issuecomment-648315919,"Implementation of streamable ismaster. Integration tests and unit tests are on another branch and passing. I left them out of this PR to keep it a little smaller.
The pseudocode in the Server Monitoring spec captures the core logic: https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-monitoring.rst#monitor-thread but I've commented inline pointing to relevant sections.",Rebased and updated. I'll merge assuming tests pass. Thanks for reviewing!,True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,626,2020-06-01T20:57:28Z,2020-06-02T13:10:46Z,2020-06-02T13:10:46Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,CDRIVER-3686 reduce default keepalive to 120,1,[],https://github.com/mongodb/mongo-c-driver/pull/626,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/626,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,627,2020-06-02T18:24:41Z,2020-06-26T20:46:03Z,2020-06-26T20:48:02Z,MERGED,True,152,119,2,https://github.com/rcsanchez97,CDRIVER-3571 consolidate and simplify installation doc,1,[],https://github.com/mongodb/mongo-c-driver/pull/627,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/627,Note: no Evergreen patch build since this documentation only.,Note: no Evergreen patch build since this documentation only.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,627,2020-06-02T18:24:41Z,2020-06-26T20:46:03Z,2020-06-26T20:48:02Z,MERGED,True,152,119,2,https://github.com/rcsanchez97,CDRIVER-3571 consolidate and simplify installation doc,1,[],https://github.com/mongodb/mongo-c-driver/pull/627,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/627#issuecomment-646647754,Note: no Evergreen patch build since this documentation only.,"@kevinAlbs When I took another look at installing.rst to implement your suggestions it became clear that the structure could be reworked in a more clear manner.  Specifically, the structure is now along the lines of:

Supported platforms
Installation with a package manager
Build environment (prerequisites)

on Unix
on macOS
on Windows w/ Visual Studio
on Windows w/ MinGW/MSYS2


Configuring the build

from a release tarball
from a Git repo clone
on Windows w/ Visual Studio


Executing the build

on Unix, macOS, and Windows (MinGW-W64 and MSYS2)
on Windows with Visual Studio
Documentation
Uninstall


Integrator options

That structure seems to keep things organized, groups related content, and minimizes duplication.  If you find this structure to be OK, then CDRIVER-3703 may not be necessary.
Please let me know your thoughts.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,627,2020-06-02T18:24:41Z,2020-06-26T20:46:03Z,2020-06-26T20:48:02Z,MERGED,True,152,119,2,https://github.com/rcsanchez97,CDRIVER-3571 consolidate and simplify installation doc,1,[],https://github.com/mongodb/mongo-c-driver/pull/627,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/627#issuecomment-649685502,Note: no Evergreen patch build since this documentation only.,"I like the restructuring!
Can we add a top-level heading for ""Build environment""? The sidebar in the docs lists top level headings:
Supported Platforms
Install libmongoc with a Package Manager
Install libbson with a Package Manager
Build environment on Unix
Build environment on macOS
Build environment on Windows with Visual Studio
Build environment on Windows with MinGW-W64 and MSYS2
Configuring the build
Executing a build
Additional Options for Integrators

If we add a top-level heading for ""Build environment"" that could show the a simpler outline:
Supported Platforms
Install libmongoc with a Package Manager
Install libbson with a Package Manager
Build environment
Configuring the build
Executing a build
Additional Options for Integrators",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,627,2020-06-02T18:24:41Z,2020-06-26T20:46:03Z,2020-06-26T20:48:02Z,MERGED,True,152,119,2,https://github.com/rcsanchez97,CDRIVER-3571 consolidate and simplify installation doc,1,[],https://github.com/mongodb/mongo-c-driver/pull/627,https://github.com/rcsanchez97,4,https://github.com/mongodb/mongo-c-driver/pull/627#issuecomment-649868856,Note: no Evergreen patch build since this documentation only.,"@kevinAlbs I think that this might be the last of the changes, except perhaps removing the target list for Visual Studio.  Please have another look and let me know what you think.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,628,2020-06-03T22:07:07Z,2020-06-03T22:46:55Z,2020-06-03T22:46:55Z,MERGED,True,31,236,4,https://github.com/bazile-clyde,CDRIVER-3373 Avoid using readConcern snapshot in sharded transaction tests,2,[],https://github.com/mongodb/mongo-c-driver/pull/628,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/628,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,629,2020-06-03T22:25:09Z,2020-06-04T14:16:39Z,2020-06-04T14:16:39Z,MERGED,True,30,26,7,https://github.com/kevinAlbs,CDRIVER-3701 fix TRACE macro warnings,1,[],https://github.com/mongodb/mongo-c-driver/pull/629,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/629,"Fix gcc warnings for TRACE macros with a single string argument (and trailing NULL).
clang doesn't warn for this, but I saw the same warnings with gcc 5.4 in a VM.
Also fixes a couple other warnings I observed, and adds -Werror to the evergreen task that builds with tracing. That builds with gcc 5.4. It was already logging warnings:
https://evergreen.mongodb.com/task_log_raw/mongo_c_driver_releng_compile_tracing_e0be759b857bbafb7cdfa9b543c927e94ff27871_20_06_03_18_22_13/0?type=T#L505 but was not treating them as build failures.","Fix gcc warnings for TRACE macros with a single string argument (and trailing NULL).
clang doesn't warn for this, but I saw the same warnings with gcc 5.4 in a VM.
Also fixes a couple other warnings I observed, and adds -Werror to the evergreen task that builds with tracing. That builds with gcc 5.4. It was already logging warnings:
https://evergreen.mongodb.com/task_log_raw/mongo_c_driver_releng_compile_tracing_e0be759b857bbafb7cdfa9b543c927e94ff27871_20_06_03_18_22_13/0?type=T#L505 but was not treating them as build failures.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,630,2020-06-04T14:28:52Z,2020-06-04T14:30:59Z,2020-06-04T14:31:02Z,MERGED,True,1,0,1,https://github.com/jmikola,Ignore libtool object files,1,[],https://github.com/mongodb/mongo-c-driver/pull/630,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/630,"These sometimes show up after compiling the libmongoc submodule for PHPC (often after a failed build). I don't believe they have any permanence, so it should be reasonable to ignore them.","These sometimes show up after compiling the libmongoc submodule for PHPC (often after a failed build). I don't believe they have any permanence, so it should be reasonable to ignore them.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,631,2020-06-06T04:46:13Z,2020-06-08T17:57:32Z,2020-06-08T17:57:33Z,MERGED,True,3,1,2,https://github.com/kevinAlbs,Fix mongoc_uri_get_compressors docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/631,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/631,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,632,2020-06-07T03:31:03Z,2020-06-08T17:18:26Z,2020-06-08T17:19:21Z,MERGED,True,4,4,2,https://github.com/rcsanchez97,Cdriver 3704,2,[],https://github.com/mongodb/mongo-c-driver/pull/632,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/632,"The two commits in this PR:

address the bug identified in CDRIVER-3704
fix the persistent failure in the debian-package-build task by installing build dependencies from within the chroot environment

Evergreen patch build: https://evergreen.mongodb.com/version/5edc5eb0306615560ebd3eff","The two commits in this PR:

address the bug identified in CDRIVER-3704
fix the persistent failure in the debian-package-build task by installing build dependencies from within the chroot environment

Evergreen patch build: https://evergreen.mongodb.com/version/5edc5eb0306615560ebd3eff",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,633,2020-06-08T19:31:36Z,2020-06-08T21:38:06Z,2020-06-08T21:38:06Z,MERGED,True,1627,69,2,https://github.com/kevinAlbs,CDRIVER-3712 add 4.4 tests to matrix,2,[],https://github.com/mongodb/mongo-c-driver/pull/633,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/633,I put the evergreen config regeneration in a separate commit to hopefully make the review a bit less painful.,I put the evergreen config regeneration in a separate commit to hopefully make the review a bit less painful.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,634,2020-06-09T18:22:43Z,2020-06-10T18:21:25Z,2020-06-10T18:21:25Z,MERGED,True,148,45,3,https://github.com/bazile-clyde,CDRIVER-3697 Ensure MONGODB-AWS is tested on both 4.4 and latest,1,[],https://github.com/mongodb/mongo-c-driver/pull/634,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/634,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,634,2020-06-09T18:22:43Z,2020-06-10T18:21:25Z,2020-06-10T18:21:25Z,MERGED,True,148,45,3,https://github.com/bazile-clyde,CDRIVER-3697 Ensure MONGODB-AWS is tested on both 4.4 and latest,1,[],https://github.com/mongodb/mongo-c-driver/pull/634,https://github.com/bazile-clyde,2,https://github.com/mongodb/mongo-c-driver/pull/634#issuecomment-641496244,,latest evg build: https://evergreen.mongodb.com/version/5edfd1aad6d80a47a9faddac,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,635,2020-06-10T01:37:19Z,2020-06-11T00:08:37Z,2020-06-11T00:08:38Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,CDRIVER-3686 update docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/635,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/635,Forgotten doc update of CDRIVER-3686.,Forgotten doc update of CDRIVER-3686.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,636,2020-06-10T19:01:16Z,2020-06-10T21:08:22Z,2020-06-10T21:08:27Z,MERGED,True,0,1,1,https://github.com/bazile-clyde,CDRIVER-3589 Remove ElectionInProgress (216) from ResumableChangeStreamError,1,[],https://github.com/mongodb/mongo-c-driver/pull/636,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/636,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,636,2020-06-10T19:01:16Z,2020-06-10T21:08:22Z,2020-06-10T21:08:27Z,MERGED,True,0,1,1,https://github.com/bazile-clyde,CDRIVER-3589 Remove ElectionInProgress (216) from ResumableChangeStreamError,1,[],https://github.com/mongodb/mongo-c-driver/pull/636,https://github.com/bazile-clyde,2,https://github.com/mongodb/mongo-c-driver/pull/636#issuecomment-642198506,,After looking at PHP's PR for this here I think we missed this.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,636,2020-06-10T19:01:16Z,2020-06-10T21:08:22Z,2020-06-10T21:08:27Z,MERGED,True,0,1,1,https://github.com/bazile-clyde,CDRIVER-3589 Remove ElectionInProgress (216) from ResumableChangeStreamError,1,[],https://github.com/mongodb/mongo-c-driver/pull/636,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/636#issuecomment-642233523,,"Since this was released on the beta, can you create a separate ticket to track this? I think it will be easier to track which release this fix landed on. This should be made explicit in the release notes for 1.17.0.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,636,2020-06-10T19:01:16Z,2020-06-10T21:08:22Z,2020-06-10T21:08:27Z,MERGED,True,0,1,1,https://github.com/bazile-clyde,CDRIVER-3589 Remove ElectionInProgress (216) from ResumableChangeStreamError,1,[],https://github.com/mongodb/mongo-c-driver/pull/636,https://github.com/bazile-clyde,4,https://github.com/mongodb/mongo-c-driver/pull/636#issuecomment-642264951,,"Since this was released on the beta, can you create a separate ticket to track this? I think it will be easier to track which release this fix landed on. This should be made explicit in the release notes for 1.17.0.

Done! The ticket is CDRIVER-3718",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,637,2020-06-11T16:43:16Z,2020-06-15T15:57:34Z,2020-06-15T15:57:34Z,MERGED,True,49,71,6,https://github.com/kevinAlbs,CDRIVER-3708 skip two tests on latest auth replset,1,[],https://github.com/mongodb/mongo-c-driver/pull/637,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/637,"Until SERVER-48715 is resolved, skip tests with auth against a >4.4 replica set that rely on arbiters being discovered.
Also skips the test failure described in CDRIVER-3709.
CDRIVER-3708 has more context.","Until SERVER-48715 is resolved, skip tests with auth against a >4.4 replica set that rely on arbiters being discovered.
Also skips the test failure described in CDRIVER-3709.
CDRIVER-3708 has more context.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,638,2020-06-16T15:47:39Z,2020-06-16T20:19:24Z,2020-06-16T20:19:51Z,MERGED,True,8,24,1,https://github.com/awitten1,removed superfluous memmove calls in mongoc-buffer.c,1,[],https://github.com/mongodb/mongo-c-driver/pull/638,https://github.com/awitten1,1,https://github.com/mongodb/mongo-c-driver/pull/638,Removed memmove calls that are a logical no-op.,Removed memmove calls that are a logical no-op.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,639,2020-06-18T18:01:07Z,2020-06-26T19:49:51Z,2020-06-26T19:49:51Z,MERGED,True,3,3,1,https://github.com/kevinAlbs,CDRIVER-3722 update docs for bg scanning,1,[],https://github.com/mongodb/mongo-c-driver/pull/639,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/639,"Multi-threaded monitoring now creates separate threads per server (up
to two per server after CDRIVER-3535).","Multi-threaded monitoring now creates separate threads per server (up
to two per server after CDRIVER-3535).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,640,2020-06-18T20:01:17Z,2020-06-29T18:01:19Z,2020-06-29T18:01:20Z,MERGED,True,130,47,6,https://github.com/awitten1,CDRIVER-3322 warning log with destroying unused session in pooled mode,6,[],https://github.com/mongodb/mongo-c-driver/pull/640,https://github.com/awitten1,1,https://github.com/mongodb/mongo-c-driver/pull/640,"When in pooling mode, destroying a session that had never been used produced a warning log.  Fixed by not pushing unused sessions to session_pool for being reused because server is unaware of the existence of the session.","When in pooling mode, destroying a session that had never been used produced a warning log.  Fixed by not pushing unused sessions to session_pool for being reused because server is unaware of the existence of the session.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,640,2020-06-18T20:01:17Z,2020-06-29T18:01:19Z,2020-06-29T18:01:20Z,MERGED,True,130,47,6,https://github.com/awitten1,CDRIVER-3322 warning log with destroying unused session in pooled mode,6,[],https://github.com/mongodb/mongo-c-driver/pull/640,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/640#issuecomment-651179763,"When in pooling mode, destroying a session that had never been used produced a warning log.  Fixed by not pushing unused sessions to session_pool for being reused because server is unaware of the existence of the session.","Since Clyde's comment was addressed, you can proceed to merge.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,641,2020-06-19T19:34:12Z,2020-06-19T19:35:09Z,2020-06-19T19:35:10Z,CLOSED,False,22,28,6,https://github.com/rcsanchez97,CDRIVER-3699 simplify Evergreen scripts,1,[],https://github.com/mongodb/mongo-c-driver/pull/641,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/641,Full Evergreen patch build: https://evergreen.mongodb.com/version/5eecd68fa4cf47327ca803ca,Full Evergreen patch build: https://evergreen.mongodb.com/version/5eecd68fa4cf47327ca803ca,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,642,2020-06-19T19:36:35Z,2020-06-24T02:04:50Z,2020-06-24T02:05:39Z,MERGED,True,22,28,6,https://github.com/rcsanchez97,CDRIVER-3699 simplify Evergreen scripts,1,[],https://github.com/mongodb/mongo-c-driver/pull/642,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/642,Full Evergreen patch build: https://evergreen.mongodb.com/version/5eecd68fa4cf47327ca803ca,Full Evergreen patch build: https://evergreen.mongodb.com/version/5eecd68fa4cf47327ca803ca,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,643,2020-06-23T01:50:00Z,2020-06-29T19:38:28Z,2020-06-29T19:38:29Z,MERGED,True,2,1,1,https://github.com/kevinAlbs,CDRIVER-3725 fix uninitialized read,1,[],https://github.com/mongodb/mongo-c-driver/pull/643,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/643,"A fix to a bug I introduced in CDRIVER-3486.
There are no tests. AFAICT the uninitialized reads would be happening in the current SSPI authentication tests on evergreen. The uninitialized read shows up in Dr. Memory for me locally, but still succeeds at authenticating with Kerberos.","A fix to a bug I introduced in CDRIVER-3486.
There are no tests. AFAICT the uninitialized reads would be happening in the current SSPI authentication tests on evergreen. The uninitialized read shows up in Dr. Memory for me locally, but still succeeds at authenticating with Kerberos.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,643,2020-06-23T01:50:00Z,2020-06-29T19:38:28Z,2020-06-29T19:38:29Z,MERGED,True,2,1,1,https://github.com/kevinAlbs,CDRIVER-3725 fix uninitialized read,1,[],https://github.com/mongodb/mongo-c-driver/pull/643,https://github.com/sachabest,2,https://github.com/mongodb/mongo-c-driver/pull/643#issuecomment-648235325,"A fix to a bug I introduced in CDRIVER-3486.
There are no tests. AFAICT the uninitialized reads would be happening in the current SSPI authentication tests on evergreen. The uninitialized read shows up in Dr. Memory for me locally, but still succeeds at authenticating with Kerberos.",Thank you @kevinAlbs !,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,643,2020-06-23T01:50:00Z,2020-06-29T19:38:28Z,2020-06-29T19:38:29Z,MERGED,True,2,1,1,https://github.com/kevinAlbs,CDRIVER-3725 fix uninitialized read,1,[],https://github.com/mongodb/mongo-c-driver/pull/643,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/643#issuecomment-651318788,"A fix to a bug I introduced in CDRIVER-3486.
There are no tests. AFAICT the uninitialized reads would be happening in the current SSPI authentication tests on evergreen. The uninitialized read shows up in Dr. Memory for me locally, but still succeeds at authenticating with Kerberos.","Glad to have helped @sachabest!
Merging.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,644,2020-06-23T17:54:48Z,2020-06-24T13:44:28Z,2020-06-24T13:44:28Z,MERGED,True,66,11,5,https://github.com/kevinAlbs,CDRIVER-3708 unskip tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/644,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/644,"Now that SERVER-48715 is resolved, these tests should pass again.","Now that SERVER-48715 is resolved, these tests should pass again.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,645,2020-06-25T18:28:23Z,2020-06-26T20:20:43Z,2020-06-26T20:20:44Z,MERGED,True,46,8,2,https://github.com/awitten1,CDRIVER-3476 lower case options,2,[],https://github.com/mongodb/mongo-c-driver/pull/645,https://github.com/awitten1,1,https://github.com/mongodb/mongo-c-driver/pull/645,Lower case options set with mongoc_uri_set_options_as_* functions.,Lower case options set with mongoc_uri_set_options_as_* functions.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,645,2020-06-25T18:28:23Z,2020-06-26T20:20:43Z,2020-06-26T20:20:44Z,MERGED,True,46,8,2,https://github.com/awitten1,CDRIVER-3476 lower case options,2,[],https://github.com/mongodb/mongo-c-driver/pull/645,https://github.com/bazile-clyde,2,https://github.com/mongodb/mongo-c-driver/pull/645#issuecomment-650334070,Lower case options set with mongoc_uri_set_options_as_* functions.,LGTM!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,645,2020-06-25T18:28:23Z,2020-06-26T20:20:43Z,2020-06-26T20:20:44Z,MERGED,True,46,8,2,https://github.com/awitten1,CDRIVER-3476 lower case options,2,[],https://github.com/mongodb/mongo-c-driver/pull/645,https://github.com/awitten1,3,https://github.com/mongodb/mongo-c-driver/pull/645#issuecomment-650381296,Lower case options set with mongoc_uri_set_options_as_* functions.,Ok sounds good!  Will do next time.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,646,2020-06-25T21:36:57Z,2020-06-26T18:42:44Z,2020-06-26T18:42:44Z,MERGED,True,31,1,2,https://github.com/awitten1,CDRIVER-3539 null checks after calls to _mongoc_cluster_create_server_stream,1,[],https://github.com/mongodb/mongo-c-driver/pull/646,https://github.com/awitten1,1,https://github.com/mongodb/mongo-c-driver/pull/646,Adds null checks after all calls to _mongoc_cluster_create_server_stream,Adds null checks after all calls to _mongoc_cluster_create_server_stream,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,647,2020-06-26T20:58:29Z,2020-06-29T20:10:44Z,2020-06-29T20:12:07Z,MERGED,True,48,1,4,https://github.com/rcsanchez97,CDRIVER-3612 do not accept explicit session for collection count,1,[],https://github.com/mongodb/mongo-c-driver/pull/647,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/647,Full patch build: https://spruce.mongodb.com/version/5ef65493d1fe072a882ec1cf/tasks,Full patch build: https://spruce.mongodb.com/version/5ef65493d1fe072a882ec1cf/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,647,2020-06-26T20:58:29Z,2020-06-29T20:10:44Z,2020-06-29T20:12:07Z,MERGED,True,48,1,4,https://github.com/rcsanchez97,CDRIVER-3612 do not accept explicit session for collection count,1,[],https://github.com/mongodb/mongo-c-driver/pull/647,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/647#issuecomment-651319791,Full patch build: https://spruce.mongodb.com/version/5ef65493d1fe072a882ec1cf/tasks,"On Mon, Jun 29, 2020 at 12:36:18PM -0700, Kevin Albertson wrote:
    @kevinAlbs approved this pull request.

    Optional suggestion but otherwise LGTM!

    FYI the evergreen patch build attached to the PR can be reconfigured to
    run a full patch build if you do not want to run them separately.

I know.  However, I normally run a patch build (usually multiple) to
confirm that I am ready to actually create a PR.  By the time the PR is
created, the patch build is in the past, so I just go ahead and paste a
link to the build so that it doesn't go to waste.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,647,2020-06-26T20:58:29Z,2020-06-29T20:10:44Z,2020-06-29T20:12:07Z,MERGED,True,48,1,4,https://github.com/rcsanchez97,CDRIVER-3612 do not accept explicit session for collection count,1,[],https://github.com/mongodb/mongo-c-driver/pull/647,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/647#issuecomment-651322718,Full patch build: https://spruce.mongodb.com/version/5ef65493d1fe072a882ec1cf/tasks,"Ah that makes sense. You can also create the PR and wait for the patch
build before requesting reviewers, but either way is fine.

On Mon, Jun 29, 2020 at 3:40 PM Roberto C. Sánchez <notifications@github.com>
wrote:
…
 On Mon, Jun 29, 2020 at 12:36:18PM -0700, Kevin Albertson wrote:
 > @kevinAlbs approved this pull request.
 >
 > Optional suggestion but otherwise LGTM!
 >
 > FYI the evergreen patch build attached to the PR can be reconfigured to
 > run a full patch build if you do not want to run them separately.
 >
 I know. However, I normally run a patch build (usually multiple) to
 confirm that I am ready to actually create a PR. By the time the PR is
 created, the patch build is in the past, so I just go ahead and paste a
 link to the build so that it doesn't go to waste.

 —
 You are receiving this because you were mentioned.
 Reply to this email directly, view it on GitHub
 <#647 (comment)>,
 or unsubscribe
 <https://github.com/notifications/unsubscribe-auth/AAHSNZKEIPLUX5YCM6VKK73RZDU4VANCNFSM4OJVCZJQ>
 .",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,648,2020-06-27T19:35:33Z,2020-07-08T19:22:14Z,2020-07-08T19:22:14Z,MERGED,True,2634,55,18,https://github.com/kevinAlbs,CDRIVER-3535 integration tests + RTT test,3,[],https://github.com/mongodb/mongo-c-driver/pull/648,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/648,"Adds support for all SDAM integration tests and the prose RTT test.
This does not include the connectTimeoutMS=0 test introduced in CDRIVER-3721. libmongoc does not interpret connectTimeoutMS=0 as an unlimited timeout, and instead interprets 0 as the option being unset (so it defaults to 10,000). I'll address that as part of CDRIVER-3721 instead of folding it in here.
The JSON files are on the second commit.","Adds support for all SDAM integration tests and the prose RTT test.
This does not include the connectTimeoutMS=0 test introduced in CDRIVER-3721. libmongoc does not interpret connectTimeoutMS=0 as an unlimited timeout, and instead interprets 0 as the option being unset (so it defaults to 10,000). I'll address that as part of CDRIVER-3721 instead of folding it in here.
The JSON files are on the second commit.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,649,2020-06-29T20:25:39Z,2020-07-24T15:29:32Z,2020-07-24T15:29:32Z,MERGED,True,150,10,16,https://github.com/awitten1,CDRIVER-3702 adds test only asserts for mutex lock,26,[],https://github.com/mongodb/mongo-c-driver/pull/649,https://github.com/awitten1,1,https://github.com/mongodb/mongo-c-driver/pull/649,Adds test only assertions that mutex is acquired upon entering certain functions that require that the caller have locked the mutex.  Assertions are enabled with the cmake configuration option -DENABLE_DEBUG_ASSERTIONS=ON.,Adds test only assertions that mutex is acquired upon entering certain functions that require that the caller have locked the mutex.  Assertions are enabled with the cmake configuration option -DENABLE_DEBUG_ASSERTIONS=ON.,True,{'EYES': ['https://github.com/buck4242']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,649,2020-06-29T20:25:39Z,2020-07-24T15:29:32Z,2020-07-24T15:29:32Z,MERGED,True,150,10,16,https://github.com/awitten1,CDRIVER-3702 adds test only asserts for mutex lock,26,[],https://github.com/mongodb/mongo-c-driver/pull/649,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/649#issuecomment-659450610,Adds test only assertions that mutex is acquired upon entering certain functions that require that the caller have locked the mutex.  Assertions are enabled with the cmake configuration option -DENABLE_DEBUG_ASSERTIONS=ON.,"debug-compile-aws will be fixed after rebasing on 650ad0a
I have a suggested fix inline for the other tasks.
Can you note in debugging.rst how to configure with test assertions?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,649,2020-06-29T20:25:39Z,2020-07-24T15:29:32Z,2020-07-24T15:29:32Z,MERGED,True,150,10,16,https://github.com/awitten1,CDRIVER-3702 adds test only asserts for mutex lock,26,[],https://github.com/mongodb/mongo-c-driver/pull/649,https://github.com/awitten1,3,https://github.com/mongodb/mongo-c-driver/pull/649#issuecomment-663070177,Adds test only assertions that mutex is acquired upon entering certain functions that require that the caller have locked the mutex.  Assertions are enabled with the cmake configuration option -DENABLE_DEBUG_ASSERTIONS=ON.,"Ugh, sorry I thought I got them all.  I don't know how I missed those.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,649,2020-06-29T20:25:39Z,2020-07-24T15:29:32Z,2020-07-24T15:29:32Z,MERGED,True,150,10,16,https://github.com/awitten1,CDRIVER-3702 adds test only asserts for mutex lock,26,[],https://github.com/mongodb/mongo-c-driver/pull/649,https://github.com/awitten1,4,https://github.com/mongodb/mongo-c-driver/pull/649#issuecomment-663149886,Adds test only assertions that mutex is acquired upon entering certain functions that require that the caller have locked the mutex.  Assertions are enabled with the cmake configuration option -DENABLE_DEBUG_ASSERTIONS=ON.,I think it should be good now.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,650,2020-06-29T22:09:36Z,2020-07-01T16:25:38Z,2020-07-01T16:25:38Z,MERGED,True,50,1,5,https://github.com/awitten1,CDRIVER-3513 saved errors in out parameter,2,[],https://github.com/mongodb/mongo-c-driver/pull/650,https://github.com/awitten1,1,https://github.com/mongodb/mongo-c-driver/pull/650,Saved error in out parameters.,Saved error in out parameters.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,651,2020-06-30T13:15:46Z,2020-07-02T19:20:53Z,2020-07-02T21:07:11Z,MERGED,True,2648,377,6,https://github.com/kevinAlbs,CDRIVER-3580 / CDRIVER-3719 soft-fail with Secure Channel + regenerate OCSP tests,2,[],https://github.com/mongodb/mongo-c-driver/pull/651,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/651,"Change the default certificate validation with Secure Channel to ignore errors due to an OCSP responder / CRL distribution point being offline and due to a peer certificate not listing any revocation information. CDRIVER-3580 has more background.
Patch build with just the OCSP tests:
https://evergreen.mongodb.com/version/5efaada3d1fe072a883a5c2f","Change the default certificate validation with Secure Channel to ignore errors due to an OCSP responder / CRL distribution point being offline and due to a peer certificate not listing any revocation information. CDRIVER-3580 has more background.
Patch build with just the OCSP tests:
https://evergreen.mongodb.com/version/5efaada3d1fe072a883a5c2f",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,651,2020-06-30T13:15:46Z,2020-07-02T19:20:53Z,2020-07-02T21:07:11Z,MERGED,True,2648,377,6,https://github.com/kevinAlbs,CDRIVER-3580 / CDRIVER-3719 soft-fail with Secure Channel + regenerate OCSP tests,2,[],https://github.com/mongodb/mongo-c-driver/pull/651,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/651#issuecomment-651830009,"Change the default certificate validation with Secure Channel to ignore errors due to an OCSP responder / CRL distribution point being offline and due to a peer certificate not listing any revocation information. CDRIVER-3580 has more background.
Patch build with just the OCSP tests:
https://evergreen.mongodb.com/version/5efaada3d1fe072a883a5c2f",@shreyaskalyan,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,652,2020-07-01T14:21:42Z,2020-07-01T21:41:16Z,2020-07-01T21:41:16Z,MERGED,True,26,0,2,https://github.com/kevinAlbs,CDRIVER-3712 add missing 4.4 selectors,1,[],https://github.com/mongodb/mongo-c-driver/pull/652,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/652,Adds selectors to variants for 4.4 test tasks that were omitted in #633,Adds selectors to variants for 4.4 test tasks that were omitted in #633,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,653,2020-07-01T23:37:22Z,2020-07-02T19:22:08Z,2020-07-02T19:22:08Z,MERGED,True,1180,188,8,https://github.com/kevinAlbs,CDRIVER-748 add TSAN tasks,3,[],https://github.com/mongodb/mongo-c-driver/pull/653,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/653,"Adds thread sanitizer tasks to Evergreen to catch thread races.
Here's an example failure. TSAN produces stack traces to identify the concurrent reader/writer of shared data.","Adds thread sanitizer tasks to Evergreen to catch thread races.
Here's an example failure. TSAN produces stack traces to identify the concurrent reader/writer of shared data.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,654,2020-07-02T16:24:08Z,2020-07-02T19:20:00Z,2020-07-02T19:20:01Z,MERGED,True,2,2,2,https://github.com/kevinAlbs,CDRIVER-3573 fix hardcode,1,[],https://github.com/mongodb/mongo-c-driver/pull/654,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/654,"529a2be had a typo, comparing mongoc-c-driver instead of mongo-c-driver. This meant that the Evergreen project tracking the master branch was not uploading to the expected location. I noticed this in the C++ driver project, which was fetching the version of libmongoc just before 529a2be.","529a2be had a typo, comparing mongoc-c-driver instead of mongo-c-driver. This meant that the Evergreen project tracking the master branch was not uploading to the expected location. I noticed this in the C++ driver project, which was fetching the version of libmongoc just before 529a2be.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,655,2020-07-06T14:56:27Z,2020-07-10T14:41:47Z,2020-07-10T14:41:47Z,MERGED,True,79,54,4,https://github.com/kevinAlbs,CDRIVER-3734 add Host header to OCSP requests,3,[],https://github.com/mongodb/mongo-c-driver/pull/655,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/655,"Log messages in Evergreen were indicating soft-failures against Amazon KMS servers. In addition to checking responses locally, I inspected the logs of the -cse tasks to validate this is no longer failing.
The HTTP header Host is required by KMS servers (and is required by HTTP in general). Related issue in OpenSSL: openssl/openssl#1986
Fixes a leak of next_time / this_time fields.
Permits verified chain be used to validate OCSP response signature certificate.","Log messages in Evergreen were indicating soft-failures against Amazon KMS servers. In addition to checking responses locally, I inspected the logs of the -cse tasks to validate this is no longer failing.
The HTTP header Host is required by KMS servers (and is required by HTTP in general). Related issue in OpenSSL: openssl/openssl#1986
Fixes a leak of next_time / this_time fields.
Permits verified chain be used to validate OCSP response signature certificate.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,656,2020-07-06T21:17:27Z,2020-07-07T16:24:01Z,2020-07-07T16:24:01Z,MERGED,True,15,2,1,https://github.com/kevinAlbs,CDRIVER-2785 fix benchmark project,1,[],https://github.com/mongodb/mongo-c-driver/pull/656,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/656,"Fixes the failing tasks in the mongo-c-driver-perf evergreen project, and adds a task to test against the latest 4.4 release.
Patch build: https://evergreen.mongodb.com/version/5f0386f332f41728dadad719","Fixes the failing tasks in the mongo-c-driver-perf evergreen project, and adds a task to test against the latest 4.4 release.
Patch build: https://evergreen.mongodb.com/version/5f0386f332f41728dadad719",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,657,2020-07-10T00:33:02Z,2020-07-10T12:10:02Z,2020-07-10T12:10:02Z,MERGED,True,101,0,3,https://github.com/kevinAlbs,CDRIVER-3741 CursorNotFound err is resumable,1,[],https://github.com/mongodb/mongo-c-driver/pull/657,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/657,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,658,2020-07-10T21:22:28Z,2020-07-13T22:37:43Z,2020-07-13T22:37:43Z,MERGED,True,428,124,10,https://github.com/kevinAlbs,CDRIVER-3739 Add 5 second timeout to OCSP,2,[],https://github.com/mongodb/mongo-c-driver/pull/658,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/658,"Reuse libmongoc's HTTP function instead of OCSP_sendreq_new
Support TLS in OCSP endpoint
Do not log a soft failure if a certificate has no OCSP endpoints","Reuse libmongoc's HTTP function instead of OCSP_sendreq_new
Support TLS in OCSP endpoint
Do not log a soft failure if a certificate has no OCSP endpoints",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,659,2020-07-12T15:45:07Z,2020-07-13T16:56:51Z,2020-07-13T16:56:51Z,MERGED,True,10,11,2,https://github.com/kevinAlbs,CDRIVER-3745 add flag to disable rev check on Win,1,[],https://github.com/mongodb/mongo-c-driver/pull/659,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/659,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,660,2020-07-12T18:49:13Z,2020-07-17T01:17:15Z,2020-07-17T01:17:15Z,MERGED,True,171,9,3,https://github.com/awitten1,"CDRIVER-3595 adds tests, removes extraneous check",8,[],https://github.com/mongodb/mongo-c-driver/pull/660,https://github.com/awitten1,1,https://github.com/mongodb/mongo-c-driver/pull/660,"The bugs mentioned in CDRIVER-3595 don't seem to be observable, as demonstrated in the test cases that this PR adds to test-mongoc-write-concern.c.  The only real change that this PR makes is in mongoc-collection.c.","The bugs mentioned in CDRIVER-3595 don't seem to be observable, as demonstrated in the test cases that this PR adds to test-mongoc-write-concern.c.  The only real change that this PR makes is in mongoc-collection.c.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,660,2020-07-12T18:49:13Z,2020-07-17T01:17:15Z,2020-07-17T01:17:15Z,MERGED,True,171,9,3,https://github.com/awitten1,"CDRIVER-3595 adds tests, removes extraneous check",8,[],https://github.com/mongodb/mongo-c-driver/pull/660,https://github.com/awitten1,2,https://github.com/mongodb/mongo-c-driver/pull/660#issuecomment-659446353,"The bugs mentioned in CDRIVER-3595 don't seem to be observable, as demonstrated in the test cases that this PR adds to test-mongoc-write-concern.c.  The only real change that this PR makes is in mongoc-collection.c.",Of course! Thank you for all your comments.  The refactoring was definitely worth doing. I would have done it initially but it didn't occur to me.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,660,2020-07-12T18:49:13Z,2020-07-17T01:17:15Z,2020-07-17T01:17:15Z,MERGED,True,171,9,3,https://github.com/awitten1,"CDRIVER-3595 adds tests, removes extraneous check",8,[],https://github.com/mongodb/mongo-c-driver/pull/660,https://github.com/bazile-clyde,3,https://github.com/mongodb/mongo-c-driver/pull/660#issuecomment-659609672,"The bugs mentioned in CDRIVER-3595 don't seem to be observable, as demonstrated in the test cases that this PR adds to test-mongoc-write-concern.c.  The only real change that this PR makes is in mongoc-collection.c.",Just one comment but otherwise everything looks good!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,661,2020-07-13T16:15:36Z,2020-07-13T21:57:38Z,2020-07-13T21:57:38Z,MERGED,True,5,14,1,https://github.com/kevinAlbs,CDRIVER-3733 resync change stream spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/661,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/661,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,662,2020-07-13T21:56:30Z,2020-07-16T21:56:33Z,2020-07-16T21:56:34Z,MERGED,True,8,0,1,https://github.com/kevinAlbs,CDRIVER-3748 add warning about commitQuorum,3,[],https://github.com/mongodb/mongo-c-driver/pull/662,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/662,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,662,2020-07-13T21:56:30Z,2020-07-16T21:56:33Z,2020-07-16T21:56:34Z,MERGED,True,8,0,1,https://github.com/kevinAlbs,CDRIVER-3748 add warning about commitQuorum,3,[],https://github.com/mongodb/mongo-c-driver/pull/662,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/662#issuecomment-659415514,,This is a documentation-only change now.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,662,2020-07-13T21:56:30Z,2020-07-16T21:56:33Z,2020-07-16T21:56:34Z,MERGED,True,8,0,1,https://github.com/kevinAlbs,CDRIVER-3748 add warning about commitQuorum,3,[],https://github.com/mongodb/mongo-c-driver/pull/662,https://github.com/bazile-clyde,3,https://github.com/mongodb/mongo-c-driver/pull/662#issuecomment-659570704,,LGTM,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,663,2020-07-16T01:24:18Z,2020-07-17T16:08:11Z,2020-07-17T16:08:11Z,MERGED,True,66,0,3,https://github.com/kevinAlbs,CDRIVER-3753 fix leak of topology description,2,[],https://github.com/mongodb/mongo-c-driver/pull/663,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/663,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,664,2020-07-16T01:36:53Z,2020-07-16T12:31:15Z,2020-07-16T12:31:15Z,MERGED,True,8,7,3,https://github.com/kevinAlbs,Minor fixes to issues reported by Coverity,3,[],https://github.com/mongodb/mongo-c-driver/pull/664,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/664,"These are not urgent, and will be released in 1.18.0.","These are not urgent, and will be released in 1.18.0.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,665,2020-07-16T12:38:45Z,2020-07-16T16:01:12Z,2020-07-16T16:01:12Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,CDRIVER-3751 document NULL for set_compressors,1,[],https://github.com/mongodb/mongo-c-driver/pull/665,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/665,"There is already a test that asserts this behavior:
https://github.com/mongodb/mongo-c-driver/blob/1.16.2/src/libmongoc/tests/test-mongoc-uri.c/#L1039-L1043","There is already a test that asserts this behavior:
https://github.com/mongodb/mongo-c-driver/blob/1.16.2/src/libmongoc/tests/test-mongoc-uri.c/#L1039-L1043",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,665,2020-07-16T12:38:45Z,2020-07-16T16:01:12Z,2020-07-16T16:01:12Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,CDRIVER-3751 document NULL for set_compressors,1,[],https://github.com/mongodb/mongo-c-driver/pull/665,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/665#issuecomment-659508415,"There is already a test that asserts this behavior:
https://github.com/mongodb/mongo-c-driver/blob/1.16.2/src/libmongoc/tests/test-mongoc-uri.c/#L1039-L1043",No problem! Closing and merging.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,666,2020-07-17T00:26:52Z,2020-07-23T12:54:01Z,2020-07-23T12:54:01Z,MERGED,True,66,0,2,https://github.com/awitten1,"CDRIVER-3757 inits pool cond, adds test",5,[],https://github.com/mongodb/mongo-c-driver/pull/666,https://github.com/awitten1,1,https://github.com/mongodb/mongo-c-driver/pull/666,"This PR initializes the mongoc_client_pool_t condition variable.  It also adds a test, asserting that the function mongoc_client_pool_pop returns when the max pool number of clients have already been allocated.","This PR initializes the mongoc_client_pool_t condition variable.  It also adds a test, asserting that the function mongoc_client_pool_pop returns when the max pool number of clients have already been allocated.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,667,2020-07-21T11:50:28Z,2020-07-23T01:20:08Z,2020-07-23T01:20:43Z,MERGED,True,56,3,6,https://github.com/rcsanchez97,CDRIVER-3579 CDRIVER-3522 CDRIVER-3762,4,[],https://github.com/mongodb/mongo-c-driver/pull/667,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/667,Full patch build: https://spruce.mongodb.com/version/5f160475d1fe072b63cdf169/tasks?limit=100&page=0,Full patch build: https://spruce.mongodb.com/version/5f160475d1fe072b63cdf169/tasks?limit=100&page=0,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,668,2020-07-21T18:01:39Z,2020-07-22T19:48:58Z,2020-07-22T19:49:35Z,MERGED,True,57,25,4,https://github.com/rcsanchez97,CDRIVER-3509 fix rpm-package-build task,1,[],https://github.com/mongodb/mongo-c-driver/pull/668,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/668,Patch build: https://spruce.mongodb.com/version/5f172ae832f4173db372d6f1/tasks,Patch build: https://spruce.mongodb.com/version/5f172ae832f4173db372d6f1/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,669,2020-07-23T00:21:58Z,2020-09-11T17:47:52Z,2020-09-11T17:47:52Z,CLOSED,False,20,0,1,https://github.com/awitten1,CDRIVER-3755 defined create index api,4,[],https://github.com/mongodb/mongo-c-driver/pull/669,https://github.com/awitten1,1,https://github.com/mongodb/mongo-c-driver/pull/669,"https://jira.mongodb.org/browse/CDRIVER-3755
Defines index management API.","https://jira.mongodb.org/browse/CDRIVER-3755
Defines index management API.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,669,2020-07-23T00:21:58Z,2020-09-11T17:47:52Z,2020-09-11T17:47:52Z,CLOSED,False,20,0,1,https://github.com/awitten1,CDRIVER-3755 defined create index api,4,[],https://github.com/mongodb/mongo-c-driver/pull/669,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/669#issuecomment-691229682,"https://jira.mongodb.org/browse/CDRIVER-3755
Defines index management API.","It will be some time until we can pick this up again. When we do, we'll use this as a starting point.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,670,2020-07-23T03:03:31Z,2020-07-24T18:46:43Z,2020-07-24T18:46:43Z,MERGED,True,28,7,3,https://github.com/kevinAlbs,clear convenience temps after each test,1,[],https://github.com/mongodb/mongo-c-driver/pull/670,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/670,"Not urgent. I had theorized that temporary objects created in tests (via tmp_bson()) were causing slowdown in Valgrind tasks. Clearing it after each test run did not speed up Valgrind, but seemed like a reasonable improvement regardless.","Not urgent. I had theorized that temporary objects created in tests (via tmp_bson()) were causing slowdown in Valgrind tasks. Clearing it after each test run did not speed up Valgrind, but seemed like a reasonable improvement regardless.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,671,2020-07-23T03:05:10Z,2020-07-23T15:59:18Z,2020-07-23T15:59:18Z,MERGED,True,2,1,1,https://github.com/kevinAlbs,CDRIVER-3746 skip SDAM int tests on valgrind,1,[],https://github.com/mongodb/mongo-c-driver/pull/671,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/671,"Some SDAM integration tests make assumptions about thread context switching.
Specifically, the find-shutdown-error.yml test starts two threads. Each threads send a find command. The server blocks the response to the find command for 500ms before responding with an error (which increments the connection generation). The intent of the 500ms block is so both threads grab a connection from the same generation (i.e. both find commands send the command before either gets an error response).
But the logs for the test running through Valgrind /server_discovery_and_monitoring/integration/find-shutdown-error show that one thread sends the find and receives a response before the other thread sends a find.
Valgrind only runs one thread at a time: https://www.valgrind.org/docs/manual/manual-core.html#manual-core.pthreads_perf_sched which may be the cause of infrequent context switches. I don't think skipping these tests on Valgrind is a big loss, since ASAN covers all of what Valgrind checks aside from uninitialized reads (and executes much faster).","Some SDAM integration tests make assumptions about thread context switching.
Specifically, the find-shutdown-error.yml test starts two threads. Each threads send a find command. The server blocks the response to the find command for 500ms before responding with an error (which increments the connection generation). The intent of the 500ms block is so both threads grab a connection from the same generation (i.e. both find commands send the command before either gets an error response).
But the logs for the test running through Valgrind /server_discovery_and_monitoring/integration/find-shutdown-error show that one thread sends the find and receives a response before the other thread sends a find.
Valgrind only runs one thread at a time: https://www.valgrind.org/docs/manual/manual-core.html#manual-core.pthreads_perf_sched which may be the cause of infrequent context switches. I don't think skipping these tests on Valgrind is a big loss, since ASAN covers all of what Valgrind checks aside from uninitialized reads (and executes much faster).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,672,2020-07-23T21:22:14Z,2020-07-24T14:44:02Z,2020-07-24T14:45:27Z,MERGED,True,2,10,2,https://github.com/rcsanchez97,CDRIVER-3756 eliminate CMake function redefinition,1,[],https://github.com/mongodb/mongo-c-driver/pull/672,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/672,Full patch build: https://spruce.mongodb.com/version/5f1999ee0ae6063922dac175/tasks,Full patch build: https://spruce.mongodb.com/version/5f1999ee0ae6063922dac175/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,673,2020-07-24T12:01:31Z,2020-07-24T14:40:33Z,2020-07-24T14:41:25Z,MERGED,True,2,2,1,https://github.com/rcsanchez97,try deprecated module import second,1,[],https://github.com/mongodb/mongo-c-driver/pull/673,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/673,As suggested by @remicollet,As suggested by @remicollet,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,674,2020-07-24T17:05:20Z,2020-07-24T19:36:36Z,2020-07-24T19:37:25Z,MERGED,True,38,33,3,https://github.com/rcsanchez97,CDRIVER-3573 only hardcode version for GitHub PRs,2,[],https://github.com/mongodb/mongo-c-driver/pull/674,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/674,Patch build: https://spruce.mongodb.com/version/5f1b13397742ae3ba1b1f9a2/tasks,Patch build: https://spruce.mongodb.com/version/5f1b13397742ae3ba1b1f9a2/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,675,2020-07-31T15:07:51Z,2020-08-05T18:43:23Z,2020-08-05T18:43:23Z,MERGED,True,2,0,2,https://github.com/pmgzo,CRIVER-3728 set prohibit_lsid in cluster_auth_node_cyrus and cluster_…,1,[],https://github.com/mongodb/mongo-c-driver/pull/675,https://github.com/pmgzo,1,https://github.com/mongodb/mongo-c-driver/pull/675,…auth_node_sspi,…auth_node_sspi,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,675,2020-07-31T15:07:51Z,2020-08-05T18:43:23Z,2020-08-05T18:43:23Z,MERGED,True,2,0,2,https://github.com/pmgzo,CRIVER-3728 set prohibit_lsid in cluster_auth_node_cyrus and cluster_…,1,[],https://github.com/mongodb/mongo-c-driver/pull/675,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/675#issuecomment-669391680,…auth_node_sspi,"Thank you for the contribution @pmgzl94!
I validated this manually. Without this PR applied, I added a call to _mongoc_rpc_printf in mongoc_cluster_run_opmsg authenticating with Kerberos to print out the full auth commands. As expected, the lsid was present in saslStart and saslContinue commands. After applying your change, lsid was omitted.
The test failures against the latest server on the attached tests appear due to CDRIVER-3771, which appears due to an unrelated server change.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,676,2020-07-31T18:38:06Z,2020-08-03T14:28:29Z,2020-08-03T14:28:29Z,MERGED,True,30,38,18,https://github.com/kevinAlbs,CDRIVER-3786 clean up OCSP docs,2,[],https://github.com/mongodb/mongo-c-driver/pull/676,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/676,"only note OCSP behavior exceptions
note that crl_file is unsupported with LibreSSL and Secure Transport","only note OCSP behavior exceptions
note that crl_file is unsupported with LibreSSL and Secure Transport",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,677,2020-08-03T21:35:13Z,2020-08-06T19:14:14Z,2020-08-06T19:15:00Z,MERGED,True,10,11,1,https://github.com/rcsanchez97,fix rpm-package-build task,1,[],https://github.com/mongodb/mongo-c-driver/pull/677,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/677,"This updates the spec.patch so that it applies cleanly the latest upstream spec file.
Patch build: https://spruce.mongodb.com/version/5f2880b157e85a6bdd33eea8/tasks","This updates the spec.patch so that it applies cleanly the latest upstream spec file.
Patch build: https://spruce.mongodb.com/version/5f2880b157e85a6bdd33eea8/tasks",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,678,2020-08-05T17:40:23Z,2020-08-06T19:50:32Z,2020-08-06T19:50:32Z,MERGED,True,0,3,1,https://github.com/kevinAlbs,CDRIVER-3756 remove unused MESSAGES_ENABLED,1,[],https://github.com/mongodb/mongo-c-driver/pull/678,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/678,"After the message override was removed in 5ab86d6, MESSAGES_ENABLED is unused.","After the message override was removed in 5ab86d6, MESSAGES_ENABLED is unused.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,679,2020-08-26T14:36:48Z,2020-08-26T19:05:17Z,2020-08-26T19:05:17Z,MERGED,True,12,6,3,https://github.com/kevinAlbs,CDRIVER-3779 resync change stream tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/679,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/679,"Note, the cse tasks on evergreen are failing due to a compiler warning from libmongocrypt. That is independent of this change.","Note, the cse tasks on evergreen are failing due to a compiler warning from libmongocrypt. That is independent of this change.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,680,2020-08-31T16:07:11Z,2020-08-31T22:24:26Z,2020-08-31T22:24:57Z,MERGED,True,83,29,2,https://github.com/rcsanchez97,CDRIVER-3783 apply compile definition and include directory propertie…,2,[],https://github.com/mongodb/mongo-c-driver/pull/680,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/680,"…s at the target level
Full patch build: https://spruce.mongodb.com/version/5f4d156f2fbabe76be4394e0/tasks","…s at the target level
Full patch build: https://spruce.mongodb.com/version/5f4d156f2fbabe76be4394e0/tasks",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,680,2020-08-31T16:07:11Z,2020-08-31T22:24:26Z,2020-08-31T22:24:57Z,MERGED,True,83,29,2,https://github.com/rcsanchez97,CDRIVER-3783 apply compile definition and include directory propertie…,2,[],https://github.com/mongodb/mongo-c-driver/pull/680,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/680#issuecomment-683896371,"…s at the target level
Full patch build: https://spruce.mongodb.com/version/5f4d156f2fbabe76be4394e0/tasks","You may want to scrub out all remaining usages of CMAKE_BINARY_DIR and CMAKE_SOURCE_DIR to ensure the lib is add_subdirectory() clean.

Good point.  It is only used a few other places.  However, I will write a separate ticket for that rather than including that change here.  In particular, the principal use of CMAKE_BINARY_DIR in the build is for the generation of the dist manifest and references to it.  Since that impacts the release process, I'd rather make that a separate change and test it accordingly.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,680,2020-08-31T16:07:11Z,2020-08-31T22:24:26Z,2020-08-31T22:24:57Z,MERGED,True,83,29,2,https://github.com/rcsanchez97,CDRIVER-3783 apply compile definition and include directory propertie…,2,[],https://github.com/mongodb/mongo-c-driver/pull/680,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/680#issuecomment-684073909,"…s at the target level
Full patch build: https://spruce.mongodb.com/version/5f4d156f2fbabe76be4394e0/tasks","I will write a separate ticket for that rather than including that change here. In particular, the principal use of CMAKE_BINARY_DIR in the build is for the generation of the dist manifest and references to it. Since that impacts the release process, I'd rather make that a separate change and test it accordingly.

The new ticket is CDRIVER-3784.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,681,2020-09-02T20:25:35Z,2020-09-02T22:59:02Z,2020-09-02T22:59:03Z,MERGED,True,108,4,3,https://github.com/kevinAlbs,CDRIVER-3782 resync spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/681,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/681,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,682,2020-09-08T16:01:51Z,2020-09-15T00:50:45Z,2020-09-15T01:03:11Z,MERGED,True,2,2,1,https://github.com/rcsanchez97,make build work with space in source tree path,1,[],https://github.com/mongodb/mongo-c-driver/pull/682,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/682,"Based on: https://developer.mongodb.com/community/forums/t/mongo-c-driver-error-when-executing-a-build/8852
Full Evergreen patch build: https://spruce.mongodb.com/version/5f57aa9f32f41726dbe5b8f3/tasks","Based on: https://developer.mongodb.com/community/forums/t/mongo-c-driver-error-when-executing-a-build/8852
Full Evergreen patch build: https://spruce.mongodb.com/version/5f57aa9f32f41726dbe5b8f3/tasks",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,682,2020-09-08T16:01:51Z,2020-09-15T00:50:45Z,2020-09-15T01:03:11Z,MERGED,True,2,2,1,https://github.com/rcsanchez97,make build work with space in source tree path,1,[],https://github.com/mongodb/mongo-c-driver/pull/682,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/682#issuecomment-689682051,"Based on: https://developer.mongodb.com/community/forums/t/mongo-c-driver-error-when-executing-a-build/8852
Full Evergreen patch build: https://spruce.mongodb.com/version/5f57aa9f32f41726dbe5b8f3/tasks",@kevinAlbs The Jira ticket is CDRIVER-3795.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,682,2020-09-08T16:01:51Z,2020-09-15T00:50:45Z,2020-09-15T01:03:11Z,MERGED,True,2,2,1,https://github.com/rcsanchez97,make build work with space in source tree path,1,[],https://github.com/mongodb/mongo-c-driver/pull/682,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/682#issuecomment-690781941,"Based on: https://developer.mongodb.com/community/forums/t/mongo-c-driver-error-when-executing-a-build/8852
Full Evergreen patch build: https://spruce.mongodb.com/version/5f57aa9f32f41726dbe5b8f3/tasks",Updated full patch build (including pending commit for CDRIVER-3573): https://spruce.mongodb.com/version/5f5936b0d1fe074487ddb3fc/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,682,2020-09-08T16:01:51Z,2020-09-15T00:50:45Z,2020-09-15T01:03:11Z,MERGED,True,2,2,1,https://github.com/rcsanchez97,make build work with space in source tree path,1,[],https://github.com/mongodb/mongo-c-driver/pull/682,https://github.com/kevinAlbs,4,https://github.com/mongodb/mongo-c-driver/pull/682#issuecomment-691085117,"Based on: https://developer.mongodb.com/community/forums/t/mongo-c-driver-error-when-executing-a-build/8852
Full Evergreen patch build: https://spruce.mongodb.com/version/5f57aa9f32f41726dbe5b8f3/tasks",LGTM,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,683,2020-09-10T23:20:00Z,2020-09-15T00:53:04Z,2020-09-15T01:03:28Z,MERGED,True,4,8,2,https://github.com/rcsanchez97,CDRIVER-3573 only hardcode version for GitHub PRs and patch builds,1,[],https://github.com/mongodb/mongo-c-driver/pull/683,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/683,Full patch build: https://spruce.mongodb.com/version/5f5936b0d1fe074487ddb3fc/tasks,Full patch build: https://spruce.mongodb.com/version/5f5936b0d1fe074487ddb3fc/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,684,2020-09-18T11:18:35Z,2021-09-20T19:19:34Z,2021-09-20T19:19:34Z,CLOSED,False,2102,96,21,https://github.com/alcaeus,CDRIVER-3775: Implement standardised logging POC,33,[],https://github.com/mongodb/mongo-c-driver/pull/684,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/684,"Summary
CDRIVER-3775
This PR serves as a starting point for discussion. Parallel to the current mongoc_log implementation, we add a new mongoc_structured_log implementation, which is private and not available to wrapping libraries. To allow for testing, we currently log some data from the command logging portion of the logging spec. The current state of the POC allows for testing in wrapping drivers, but does not yet implement a spec-compliant logger itself.
What's working:

 Command start, success, and failures are logged to the structured logger
 A rudimentary default handler logs all messages to stderr
 The log message is constructed lazily. This helps reduce memory and runtime impact when a log message is not consumed (e.g. based on severity)
 Wrapping libraries can override the default handler and handle log messages themselves (necessary for integration in PHP, Swift, and C++ drivers)
 Implement a spec-compliant default logger. This logger is expected to read environment variables to configure logger behaviour (e.g. levels and target)

Next steps:

 Remove memory leaks - my calls to BCON_APPEND seem to leak memory, but I haven't invested much time in figuring out those leaks yet.
 Fix Windows builds: structured logging currently produces some ugly segmentation faults due to access violations whenever we invoke the default logger. This works fine on Ubuntu (apart from the leaks mentioned above).
 Finalise logging calls to add missing information. We're only logging information we already have. The driver_connection_id, server_connection_id, and explicit_session values of the structured log messages are not yet logged as the data is not always available where we can log.
 Integrate with existing log implementation: this is not necessarily required or even possible, as we should try to avoid BC breaks here. For example, PHP relies on the existing logging mechanism to put trace logs into a special file using the mongodb.debug INI switch.
 Run clang-format on the whole PR


Implementation details
The log implementation is loosely based on mongoc_log(), with a few notable exceptions. Since the logging spec defines what can be logged using the structured logger, the entire API is private and not available outside of this implementation. We only provide APIs necessary to consume and handle log messages. This is a notable change from mongoc_log, which can be called from the outside.
A significant detail is the handling of additional data for structured logging. Every log message consists of a component, severity level, and a message portion (e.g. ""Command started""). Optionally, a method to build the structured message can be passed, along with a struct to contain additional data. For the time being, this only allows to add command information to the log entry, but this will be changed once other log messages are implemented. The structured message is only built if the log message is consumed. While this makes data handling a bit more fragile (e.g. it's not possible to store a mongoc_structured_log_entry_t somewhere for later processing), it does significantly reduce the memory impact of the logger when logging is not required. For example, the current logging implementation serialises a the command and reply documents encountered during command execution to the message. Doing this when the message is not consumed but ignored (which would be the default case for this message), makes this problematic. For this reason, assembly of the structured message is deferred until the message is extracted from the mongoc_structured_log_entry_t using mongoc_structured_log_entry_get_message. From then on, it is stored in the original entry so that it does not need to be re-assembled.","Summary
CDRIVER-3775
This PR serves as a starting point for discussion. Parallel to the current mongoc_log implementation, we add a new mongoc_structured_log implementation, which is private and not available to wrapping libraries. To allow for testing, we currently log some data from the command logging portion of the logging spec. The current state of the POC allows for testing in wrapping drivers, but does not yet implement a spec-compliant logger itself.
What's working:

 Command start, success, and failures are logged to the structured logger
 A rudimentary default handler logs all messages to stderr
 The log message is constructed lazily. This helps reduce memory and runtime impact when a log message is not consumed (e.g. based on severity)
 Wrapping libraries can override the default handler and handle log messages themselves (necessary for integration in PHP, Swift, and C++ drivers)
 Implement a spec-compliant default logger. This logger is expected to read environment variables to configure logger behaviour (e.g. levels and target)

Next steps:

 Remove memory leaks - my calls to BCON_APPEND seem to leak memory, but I haven't invested much time in figuring out those leaks yet.
 Fix Windows builds: structured logging currently produces some ugly segmentation faults due to access violations whenever we invoke the default logger. This works fine on Ubuntu (apart from the leaks mentioned above).
 Finalise logging calls to add missing information. We're only logging information we already have. The driver_connection_id, server_connection_id, and explicit_session values of the structured log messages are not yet logged as the data is not always available where we can log.
 Integrate with existing log implementation: this is not necessarily required or even possible, as we should try to avoid BC breaks here. For example, PHP relies on the existing logging mechanism to put trace logs into a special file using the mongodb.debug INI switch.
 Run clang-format on the whole PR


Implementation details
The log implementation is loosely based on mongoc_log(), with a few notable exceptions. Since the logging spec defines what can be logged using the structured logger, the entire API is private and not available outside of this implementation. We only provide APIs necessary to consume and handle log messages. This is a notable change from mongoc_log, which can be called from the outside.
A significant detail is the handling of additional data for structured logging. Every log message consists of a component, severity level, and a message portion (e.g. ""Command started""). Optionally, a method to build the structured message can be passed, along with a struct to contain additional data. For the time being, this only allows to add command information to the log entry, but this will be changed once other log messages are implemented. The structured message is only built if the log message is consumed. While this makes data handling a bit more fragile (e.g. it's not possible to store a mongoc_structured_log_entry_t somewhere for later processing), it does significantly reduce the memory impact of the logger when logging is not required. For example, the current logging implementation serialises a the command and reply documents encountered during command execution to the message. Doing this when the message is not consumed but ignored (which would be the default case for this message), makes this problematic. For this reason, assembly of the structured message is deferred until the message is extracted from the mongoc_structured_log_entry_t using mongoc_structured_log_entry_get_message. From then on, it is stored in the original entry so that it does not need to be re-assembled.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,684,2020-09-18T11:18:35Z,2021-09-20T19:19:34Z,2021-09-20T19:19:34Z,CLOSED,False,2102,96,21,https://github.com/alcaeus,CDRIVER-3775: Implement standardised logging POC,33,[],https://github.com/mongodb/mongo-c-driver/pull/684,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/684#issuecomment-708358760,"Summary
CDRIVER-3775
This PR serves as a starting point for discussion. Parallel to the current mongoc_log implementation, we add a new mongoc_structured_log implementation, which is private and not available to wrapping libraries. To allow for testing, we currently log some data from the command logging portion of the logging spec. The current state of the POC allows for testing in wrapping drivers, but does not yet implement a spec-compliant logger itself.
What's working:

 Command start, success, and failures are logged to the structured logger
 A rudimentary default handler logs all messages to stderr
 The log message is constructed lazily. This helps reduce memory and runtime impact when a log message is not consumed (e.g. based on severity)
 Wrapping libraries can override the default handler and handle log messages themselves (necessary for integration in PHP, Swift, and C++ drivers)
 Implement a spec-compliant default logger. This logger is expected to read environment variables to configure logger behaviour (e.g. levels and target)

Next steps:

 Remove memory leaks - my calls to BCON_APPEND seem to leak memory, but I haven't invested much time in figuring out those leaks yet.
 Fix Windows builds: structured logging currently produces some ugly segmentation faults due to access violations whenever we invoke the default logger. This works fine on Ubuntu (apart from the leaks mentioned above).
 Finalise logging calls to add missing information. We're only logging information we already have. The driver_connection_id, server_connection_id, and explicit_session values of the structured log messages are not yet logged as the data is not always available where we can log.
 Integrate with existing log implementation: this is not necessarily required or even possible, as we should try to avoid BC breaks here. For example, PHP relies on the existing logging mechanism to put trace logs into a special file using the mongodb.debug INI switch.
 Run clang-format on the whole PR


Implementation details
The log implementation is loosely based on mongoc_log(), with a few notable exceptions. Since the logging spec defines what can be logged using the structured logger, the entire API is private and not available outside of this implementation. We only provide APIs necessary to consume and handle log messages. This is a notable change from mongoc_log, which can be called from the outside.
A significant detail is the handling of additional data for structured logging. Every log message consists of a component, severity level, and a message portion (e.g. ""Command started""). Optionally, a method to build the structured message can be passed, along with a struct to contain additional data. For the time being, this only allows to add command information to the log entry, but this will be changed once other log messages are implemented. The structured message is only built if the log message is consumed. While this makes data handling a bit more fragile (e.g. it's not possible to store a mongoc_structured_log_entry_t somewhere for later processing), it does significantly reduce the memory impact of the logger when logging is not required. For example, the current logging implementation serialises a the command and reply documents encountered during command execution to the message. Doing this when the message is not consumed but ignored (which would be the default case for this message), makes this problematic. For this reason, assembly of the structured message is deferred until the message is extracted from the mongoc_structured_log_entry_t using mongoc_structured_log_entry_get_message. From then on, it is stored in the original entry so that it does not need to be re-assembled.","I've extracted the BSON encoding changes to #690. Once that PR is merged, I'll also extract the base logic (mongoc_structured_log.c and its headers) to a separate PR, as that covers the base spec (see mongodb/specifications#861). The command logging specification will then be yet another PR, as that will necessitate more changes to collect all required data (e.g. connection ID, client port, etc.). I'll leave this PR open in the meantime and rebase as individual PRs are created and merged.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,685,2020-09-22T14:59:41Z,2020-09-22T22:11:58Z,2020-09-22T22:11:58Z,MERGED,True,3,1,1,https://github.com/kevinAlbs,CDRIVER-3802 remove bits/signum.h,2,[],https://github.com/mongodb/mongo-c-driver/pull/685,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/685,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,685,2020-09-22T14:59:41Z,2020-09-22T22:11:58Z,2020-09-22T22:11:58Z,MERGED,True,3,1,1,https://github.com/kevinAlbs,CDRIVER-3802 remove bits/signum.h,2,[],https://github.com/mongodb/mongo-c-driver/pull/685,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/685#issuecomment-697009660,,Thanks for the report and help @bauman!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,686,2020-10-01T16:14:45Z,2020-10-06T23:36:26Z,2020-10-06T23:37:56Z,MERGED,True,4,4,1,https://github.com/rcsanchez97,CDRIVER-3805 fix build with system zlib in non-standard location,1,[],https://github.com/mongodb/mongo-c-driver/pull/686,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/686,Full Evergreen patch build: https://spruce.mongodb.com/version/5f75fa79e3c3312424d9b554/tasks,Full Evergreen patch build: https://spruce.mongodb.com/version/5f75fa79e3c3312424d9b554/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,687,2020-10-06T02:44:47Z,2020-10-06T13:36:26Z,2020-10-06T13:38:25Z,MERGED,True,49,7,4,https://github.com/kevinAlbs,CDRIVER-3806 fix DNS result size comparison,1,[],https://github.com/mongodb/mongo-c-driver/pull/687,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/687,Includes a test with a small initial buffer size. See the ticket for a description of the issue.,Includes a test with a small initial buffer size. See the ticket for a description of the issue.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,687,2020-10-06T02:44:47Z,2020-10-06T13:36:26Z,2020-10-06T13:38:25Z,MERGED,True,49,7,4,https://github.com/kevinAlbs,CDRIVER-3806 fix DNS result size comparison,1,[],https://github.com/mongodb/mongo-c-driver/pull/687,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/687#issuecomment-704275121,Includes a test with a small initial buffer size. See the ticket for a description of the issue.,"Yay for consistent APIs across distros.

Haha it boggles my mind why the man pages or system headers do not document the return value.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,688,2020-10-10T20:41:41Z,2020-10-12T18:16:04Z,2020-10-12T18:16:04Z,MERGED,True,2,2,1,https://github.com/timgates42,"docs: fix simple typo, manimpulate -> manipulate",1,[],https://github.com/mongodb/mongo-c-driver/pull/688,https://github.com/timgates42,1,https://github.com/mongodb/mongo-c-driver/pull/688,"There is a small typo in src/libbson/src/bson/bcon.c
Should read manipulate rather than manimpulate.
(libbson PR mongodb/libbson#223 requested application here)","There is a small typo in src/libbson/src/bson/bcon.c
Should read manipulate rather than manimpulate.
(libbson PR mongodb/libbson#223 requested application here)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,688,2020-10-10T20:41:41Z,2020-10-12T18:16:04Z,2020-10-12T18:16:04Z,MERGED,True,2,2,1,https://github.com/timgates42,"docs: fix simple typo, manimpulate -> manipulate",1,[],https://github.com/mongodb/mongo-c-driver/pull/688,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/688#issuecomment-707273550,"There is a small typo in src/libbson/src/bson/bcon.c
Should read manipulate rather than manimpulate.
(libbson PR mongodb/libbson#223 requested application here)",Thanks for the contribution!,True,{'THUMBS_UP': ['https://github.com/timgates42']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,689,2020-10-13T22:16:15Z,2020-10-14T00:09:00Z,2020-10-14T00:09:48Z,MERGED,True,898,1249,272,https://github.com/rcsanchez97,Docs fixes,2,[],https://github.com/mongodb/mongo-c-driver/pull/689,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/689,I went ahead with these changes in a single PR to prevent a conflict in a couple of the files.,I went ahead with these changes in a single PR to prevent a conflict in a couple of the files.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,690,2020-10-14T12:06:11Z,2021-01-08T15:45:12Z,2021-01-10T20:58:23Z,MERGED,True,1022,33,15,https://github.com/alcaeus,Implement BSON to JSON encoder that limits encoded string length,4,[],https://github.com/mongodb/mongo-c-driver/pull/690,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/690,"This commit was extracted from #684, which is the POC for CDRIVER-3775. Since this logic is not entirely related to logging, I figured it was easier to review this separately.
This introduces a new bson_as_json_with_opts method, which is used to pass extra options to the encoding process. For now, the opts struct holds a mode (corresponding to the individual bson_as_json, bson_as_canonical_extended_json, and bson_as_relaxed_extended_json functions) and a maximum length, which is required by the new structured logging component.
The goal behind this function is that not all BSON is read and encoded, but that the process ends when the character limit is reached. For the time being, this works by checking the length limit in a visit_after visitor. This means that while we won't continue encoding BSON that is essentially dropped later, each field is always encoded in full and the JSON string is truncated later to not exceed the maximum length. This also stops the encoding process.
Example usage:
// Encode up to 1000 characters in canonical extended JSON
bson_json_opts_t opts = { BSON_JSON_MODE_CANONICAL, 1000 };
bson_t b;

char *str = bson_as_json_with_opts (b, NULL, opts);
// Encode the entire BSON document as relaxed extended json
bson_json_opts_t opts = { BSON_JSON_MODE_CANONICAL, BSON_MAX_LEN_UNLIMITED };
bson_t b;

char *str = bson_as_json_with_opts (b, NULL, opts);
The example above is equivalent to this:
bson_t b;

char *str = bson_as_relaxed_extended_json (b, NULL);
While working on this, I noticed that we don't really cover the current logic. I've added tests that encode into both relaxed and canonical extended formats with and without length limits. I've skipped the legacy encoding mode for the time being, but can add test coverage for that as well if desired. I've also included documentation for the new types (including bson_json_mode_t which previously was private). Please let me know if I missed something there.","This commit was extracted from #684, which is the POC for CDRIVER-3775. Since this logic is not entirely related to logging, I figured it was easier to review this separately.
This introduces a new bson_as_json_with_opts method, which is used to pass extra options to the encoding process. For now, the opts struct holds a mode (corresponding to the individual bson_as_json, bson_as_canonical_extended_json, and bson_as_relaxed_extended_json functions) and a maximum length, which is required by the new structured logging component.
The goal behind this function is that not all BSON is read and encoded, but that the process ends when the character limit is reached. For the time being, this works by checking the length limit in a visit_after visitor. This means that while we won't continue encoding BSON that is essentially dropped later, each field is always encoded in full and the JSON string is truncated later to not exceed the maximum length. This also stops the encoding process.
Example usage:
// Encode up to 1000 characters in canonical extended JSON
bson_json_opts_t opts = { BSON_JSON_MODE_CANONICAL, 1000 };
bson_t b;

char *str = bson_as_json_with_opts (b, NULL, opts);
// Encode the entire BSON document as relaxed extended json
bson_json_opts_t opts = { BSON_JSON_MODE_CANONICAL, BSON_MAX_LEN_UNLIMITED };
bson_t b;

char *str = bson_as_json_with_opts (b, NULL, opts);
The example above is equivalent to this:
bson_t b;

char *str = bson_as_relaxed_extended_json (b, NULL);
While working on this, I noticed that we don't really cover the current logic. I've added tests that encode into both relaxed and canonical extended formats with and without length limits. I've skipped the legacy encoding mode for the time being, but can add test coverage for that as well if desired. I've also included documentation for the new types (including bson_json_mode_t which previously was private). Please let me know if I missed something there.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,691,2020-10-22T19:33:46Z,2020-10-22T20:02:02Z,2020-10-22T20:02:34Z,MERGED,True,14,0,3,https://github.com/rcsanchez97,"CDRIVER-3597 replace taglist extension with includes, 2",1,[],https://github.com/mongodb/mongo-c-driver/pull/691,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/691,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,691,2020-10-22T19:33:46Z,2020-10-22T20:02:02Z,2020-10-22T20:02:34Z,MERGED,True,14,0,3,https://github.com/rcsanchez97,"CDRIVER-3597 replace taglist extension with includes, 2",1,[],https://github.com/mongodb/mongo-c-driver/pull/691,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/691#issuecomment-714715308,,Evergreen patch build for the specific task: https://spruce.mongodb.com/version/5f91dc17562343445f369131/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,692,2020-10-23T16:25:15Z,2020-11-02T15:32:44Z,2020-11-02T15:32:44Z,MERGED,True,59,18,3,https://github.com/kevinAlbs,CDRIVER-3808 fix srv polling thread from spinning,3,[],https://github.com/mongodb/mongo-c-driver/pull/692,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/692,"If an SRV URI is used to connect to a deployment other than a sharded cluster
the SRV polling thread spins since it bypasses the poll due to the topology
type being ineligible. This change terminates the thread when the topology
type is discovered to be ineligible.
I reran SRV polling tests described in the spec using the steps outlined in https://github.com/kevinAlbs/SRVPollingTesting.","If an SRV URI is used to connect to a deployment other than a sharded cluster
the SRV polling thread spins since it bypasses the poll due to the topology
type being ineligible. This change terminates the thread when the topology
type is discovered to be ineligible.
I reran SRV polling tests described in the spec using the steps outlined in https://github.com/kevinAlbs/SRVPollingTesting.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,693,2020-10-31T22:45:23Z,2020-11-02T14:02:42Z,2020-11-02T14:02:58Z,MERGED,True,28,1,3,https://github.com/rcsanchez97,(Debian packaging) CDRIVER-3809 build mongo-c-driver with libmongocrypt,1,[],https://github.com/mongodb/mongo-c-driver/pull/693,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/693,"Evergreen patch build (to ensure debian-package-build task is exercised): https://spruce.mongodb.com/version/5f9de1fd30661537f4dc19ba/tasks
Note that once this PR is approved/merged I will cherry-pick the change on to the r1.17 branch.  Ideally, this will take place before the pending 1.17.2 release.  Additionally, I will include an entry regarding this change in the next debian/changelog update when I prepare the 1.17.2 package.","Evergreen patch build (to ensure debian-package-build task is exercised): https://spruce.mongodb.com/version/5f9de1fd30661537f4dc19ba/tasks
Note that once this PR is approved/merged I will cherry-pick the change on to the r1.17 branch.  Ideally, this will take place before the pending 1.17.2 release.  Additionally, I will include an entry regarding this change in the next debian/changelog update when I prepare the 1.17.2 package.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,694,2020-11-02T15:47:59Z,2020-11-02T17:14:53Z,2020-11-02T17:14:53Z,MERGED,True,2,2,1,https://github.com/kevinAlbs,fix /Cursor/common/opts/cmd_deprecated,1,[],https://github.com/mongodb/mongo-c-driver/pull/694,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/694,SERVER-51380 changed ping such that it no longer accepts extra parameters.,SERVER-51380 changed ping such that it no longer accepts extra parameters.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,695,2020-11-09T13:44:19Z,2020-11-10T18:54:20Z,2020-11-10T18:54:20Z,MERGED,True,12072,546,16,https://github.com/kevinAlbs,CDRIVER-3799 support Azure/GCP in CSFLE,6,[],https://github.com/mongodb/mongo-c-driver/pull/695,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/695,"Adds integration for libmongocrypt 1.1.0 (and now requires 1.1.0, since it uses new API) to support Azure and GCP KMS providers.","Adds integration for libmongocrypt 1.1.0 (and now requires 1.1.0, since it uses new API) to support Azure and GCP KMS providers.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,696,2020-11-12T20:50:41Z,2020-11-13T13:07:13Z,2020-11-13T13:07:13Z,MERGED,True,7,2,1,https://github.com/kevinAlbs,CDRIVER-3815 skip test using geo haystack against latest servers,1,[],https://github.com/mongodb/mongo-c-driver/pull/696,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/696,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,697,2020-11-14T16:42:27Z,2020-11-30T16:44:00Z,2020-11-30T16:44:13Z,MERGED,True,2773,53,6,https://github.com/rcsanchez97,CDRIVER-3813 correct linkage when using static OpenSSL,1,[],https://github.com/mongodb/mongo-c-driver/pull/697,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/697,"Evergreen patch build: https://spruce.mongodb.com/version/5fb0002761837d306c6e22b2/tasks?page=0&taskName=openssl-static
Note that the patch build has a pre-set filter to show only the new tasks introduced in this PR.  The new tasks that are introduced by this PR are restricted to Debian 9 (and newer) and Ubuntu 18.04 (and newer).
Older Debian and Ubuntu releases have static OpenSSL libraries that are not built in a way that allows them to be linked into a shared library or dynamic executable (because of relocation).  However, this issue is not present in newer releases, hence the selectivity of where the new tasks run.
Additionally, all Arch, RHEL, and derivatives lack static libraries for OpenSSL, making it impossible to test static linkage on those platforms.
I also tested the minimal example provided by the submitter of the Jira ticket.  The reported problem in the C++ driver build is resolved by the CMake changes to the C driver implemented in this PR.","Evergreen patch build: https://spruce.mongodb.com/version/5fb0002761837d306c6e22b2/tasks?page=0&taskName=openssl-static
Note that the patch build has a pre-set filter to show only the new tasks introduced in this PR.  The new tasks that are introduced by this PR are restricted to Debian 9 (and newer) and Ubuntu 18.04 (and newer).
Older Debian and Ubuntu releases have static OpenSSL libraries that are not built in a way that allows them to be linked into a shared library or dynamic executable (because of relocation).  However, this issue is not present in newer releases, hence the selectivity of where the new tasks run.
Additionally, all Arch, RHEL, and derivatives lack static libraries for OpenSSL, making it impossible to test static linkage on those platforms.
I also tested the minimal example provided by the submitter of the Jira ticket.  The reported problem in the C++ driver build is resolved by the CMake changes to the C driver implemented in this PR.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,697,2020-11-14T16:42:27Z,2020-11-30T16:44:00Z,2020-11-30T16:44:13Z,MERGED,True,2773,53,6,https://github.com/rcsanchez97,CDRIVER-3813 correct linkage when using static OpenSSL,1,[],https://github.com/mongodb/mongo-c-driver/pull/697,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/697#issuecomment-728615191,"Evergreen patch build: https://spruce.mongodb.com/version/5fb0002761837d306c6e22b2/tasks?page=0&taskName=openssl-static
Note that the patch build has a pre-set filter to show only the new tasks introduced in this PR.  The new tasks that are introduced by this PR are restricted to Debian 9 (and newer) and Ubuntu 18.04 (and newer).
Older Debian and Ubuntu releases have static OpenSSL libraries that are not built in a way that allows them to be linked into a shared library or dynamic executable (because of relocation).  However, this issue is not present in newer releases, hence the selectivity of where the new tasks run.
Additionally, all Arch, RHEL, and derivatives lack static libraries for OpenSSL, making it impossible to test static linkage on those platforms.
I also tested the minimal example provided by the submitter of the Jira ticket.  The reported problem in the C++ driver build is resolved by the CMake changes to the C driver implemented in this PR.",Updated Evergreen patch build: https://evergreen.mongodb.com/version/5fb325e81e2d17303e63c8c2?redirect_spruce_users=true,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,698,2020-11-16T02:51:24Z,2020-11-24T01:39:49Z,2020-11-24T01:39:50Z,MERGED,True,382,33,6,https://github.com/kevinAlbs,CDRIVER-3422 add structure and error helpers,5,[],https://github.com/mongodb/mongo-c-driver/pull/698,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/698,This is some of the groundwork for the unified test runner and some additional test conveniences.,This is some of the groundwork for the unified test runner and some additional test conveniences.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,698,2020-11-16T02:51:24Z,2020-11-24T01:39:49Z,2020-11-24T01:39:50Z,MERGED,True,382,33,6,https://github.com/kevinAlbs,CDRIVER-3422 add structure and error helpers,5,[],https://github.com/mongodb/mongo-c-driver/pull/698,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/698#issuecomment-732531138,This is some of the groundwork for the unified test runner and some additional test conveniences.,"I'm not sure if the test failures are related.

The test failures on *-latest appear due to recent server changes (removal of geoHaystack, CDRIVER-3815) and the issue Roberto pointed out with /BulkOperation/large_inserts_ordered. I'll look into that after.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,699,2020-11-29T19:48:03Z,2020-12-04T15:47:59Z,2020-12-04T15:47:59Z,MERGED,True,773,53,3,https://github.com/kevinAlbs,CDRIVER-3422 add unified test setup/teardown,10,[],https://github.com/mongodb/mongo-c-driver/pull/699,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/699,"This is part 2 of unified test runner:

Model the ""Test Runner"", ""Test File"", and ""Test"" types described in the spec.
Add runOnRequirement checking
Add initialData handling

Next up: creating and tearing down the entity map for each test.","This is part 2 of unified test runner:

Model the ""Test Runner"", ""Test File"", and ""Test"" types described in the spec.
Add runOnRequirement checking
Add initialData handling

Next up: creating and tearing down the entity map for each test.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,700,2020-11-30T15:00:36Z,2020-12-01T16:26:46Z,2020-12-01T16:26:53Z,MERGED,True,2,2,1,https://github.com/rcsanchez97,fix typo,1,[],https://github.com/mongodb/mongo-c-driver/pull/700,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/700,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,701,2020-11-30T15:15:02Z,2020-11-30T16:50:36Z,2020-11-30T16:50:42Z,MERGED,True,14,14,1,https://github.com/rcsanchez97,CDRIVER-3794 document default values for connection options,1,[],https://github.com/mongodb/mongo-c-driver/pull/701,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/701,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,702,2020-11-30T15:40:29Z,2020-12-02T15:29:13Z,2020-12-02T15:29:20Z,MERGED,True,7,24,2,https://github.com/rcsanchez97,Fix rpm package build,1,[],https://github.com/mongodb/mongo-c-driver/pull/702,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/702,Task-specific Evergreen patch build: https://spruce.mongodb.com/version/5fc50fbe7742ae57742ec88f/tasks,Task-specific Evergreen patch build: https://spruce.mongodb.com/version/5fc50fbe7742ae57742ec88f/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,703,2020-12-02T13:40:57Z,2020-12-02T15:46:50Z,2020-12-02T15:46:50Z,MERGED,True,9,2,3,https://github.com/rcsanchez97,Debian packaging for 1.17.3,4,[],https://github.com/mongodb/mongo-c-driver/pull/703,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/703,"Additionally, I will cherry-pick these commits onto master after merging this PR.","Additionally, I will cherry-pick these commits onto master after merging this PR.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,704,2020-12-07T21:32:36Z,2020-12-08T15:08:16Z,2020-12-08T15:08:38Z,MERGED,True,6,1,2,https://github.com/rcsanchez97,add instructions for requesting help with build failures,1,[],https://github.com/mongodb/mongo-c-driver/pull/704,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/704,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,705,2020-12-07T22:36:22Z,2020-12-08T15:09:15Z,2020-12-08T15:09:22Z,MERGED,True,5,1,1,https://github.com/rcsanchez97,CDRIVER-3819 collation is not an option for collection rename,1,[],https://github.com/mongodb/mongo-c-driver/pull/705,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/705,"Note that while this accomplishes the objective of not listing collation in an instance where it is not a valid option, it results in duplicating part of the generated opts documentation.  If the opts change in a way that should be reflected here, then it is not clear how to ensure that change is not overlooked.  That said, this change is probably better than documenting something as valid that is not actually valid.","Note that while this accomplishes the objective of not listing collation in an instance where it is not a valid option, it results in duplicating part of the generated opts documentation.  If the opts change in a way that should be reflected here, then it is not clear how to ensure that change is not overlooked.  That said, this change is probably better than documenting something as valid that is not actually valid.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,706,2020-12-08T21:48:17Z,2020-12-15T18:00:56Z,2020-12-15T18:00:57Z,MERGED,True,19,0,1,https://github.com/DavidKorczynski,libbson fuzzer for OSS-Fuzz integration.,2,[],https://github.com/mongodb/mongo-c-driver/pull/706,https://github.com/DavidKorczynski,1,https://github.com/mongodb/mongo-c-driver/pull/706,"Hi
I have integrated fuzzing into libbson and was thinking that it would be nice to set up continuous fuzzing by way of OSS-Fuzz. In this PR: google/oss-fuzz#4808 I have done exactly that, namely created the necessary logic from an OSS-Fuzz perspective to integrate. In that PR you also see the fuzzer attached, but it would be nicer to have the fuzzer integrated into the upstream project itself rather than keeping it in OSS-Fuzz - so if this PR gets merged I will remove it from OSS-Fuzz
Essentially, OSS-Fuzz is a free service run by Google that performs continuous fuzzing of important open source projects. The only expectation of integrating into OSS-Fuzz is that bugs will be fixed. This is not a ""hard"" requirement in that no one enforces this and the main point is if bugs are not fixed then it is a waste of resources to run the fuzzers, which we would like to avoid.
If you would like to integrate, could I please have an email(s) that will get access to the data produced by OSS-Fuzz, such as bug reports, coverage reports and more stats. Notice the emails affiliated with the project will be public in the OSS-Fuzz repo, as they will be part of a configuration file and they also need to be linked with a Google account to get the detailed reports.
David","Hi
I have integrated fuzzing into libbson and was thinking that it would be nice to set up continuous fuzzing by way of OSS-Fuzz. In this PR: google/oss-fuzz#4808 I have done exactly that, namely created the necessary logic from an OSS-Fuzz perspective to integrate. In that PR you also see the fuzzer attached, but it would be nicer to have the fuzzer integrated into the upstream project itself rather than keeping it in OSS-Fuzz - so if this PR gets merged I will remove it from OSS-Fuzz
Essentially, OSS-Fuzz is a free service run by Google that performs continuous fuzzing of important open source projects. The only expectation of integrating into OSS-Fuzz is that bugs will be fixed. This is not a ""hard"" requirement in that no one enforces this and the main point is if bugs are not fixed then it is a waste of resources to run the fuzzers, which we would like to avoid.
If you would like to integrate, could I please have an email(s) that will get access to the data produced by OSS-Fuzz, such as bug reports, coverage reports and more stats. Notice the emails affiliated with the project will be public in the OSS-Fuzz repo, as they will be part of a configuration file and they also need to be linked with a Google account to get the detailed reports.
David",True,{'HOORAY': ['https://github.com/AdamKorcz']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,706,2020-12-08T21:48:17Z,2020-12-15T18:00:56Z,2020-12-15T18:00:57Z,MERGED,True,19,0,1,https://github.com/DavidKorczynski,libbson fuzzer for OSS-Fuzz integration.,2,[],https://github.com/mongodb/mongo-c-driver/pull/706,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/706#issuecomment-742231600,"Hi
I have integrated fuzzing into libbson and was thinking that it would be nice to set up continuous fuzzing by way of OSS-Fuzz. In this PR: google/oss-fuzz#4808 I have done exactly that, namely created the necessary logic from an OSS-Fuzz perspective to integrate. In that PR you also see the fuzzer attached, but it would be nicer to have the fuzzer integrated into the upstream project itself rather than keeping it in OSS-Fuzz - so if this PR gets merged I will remove it from OSS-Fuzz
Essentially, OSS-Fuzz is a free service run by Google that performs continuous fuzzing of important open source projects. The only expectation of integrating into OSS-Fuzz is that bugs will be fixed. This is not a ""hard"" requirement in that no one enforces this and the main point is if bugs are not fixed then it is a waste of resources to run the fuzzers, which we would like to avoid.
If you would like to integrate, could I please have an email(s) that will get access to the data produced by OSS-Fuzz, such as bug reports, coverage reports and more stats. Notice the emails affiliated with the project will be public in the OSS-Fuzz repo, as they will be part of a configuration file and they also need to be linked with a Google account to get the detailed reports.
David","Hi @DavidKorczynski, thank you for your the PR! That's really awesome. We have used the LLVM fuzzer in one-off trials to find bugs in libbson, but I do think it'd be valuable to have to it run continuously. I will discuss it with our team.",True,{'THUMBS_UP': ['https://github.com/DavidKorczynski']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,706,2020-12-08T21:48:17Z,2020-12-15T18:00:56Z,2020-12-15T18:00:57Z,MERGED,True,19,0,1,https://github.com/DavidKorczynski,libbson fuzzer for OSS-Fuzz integration.,2,[],https://github.com/mongodb/mongo-c-driver/pull/706,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/706#issuecomment-745463265,"Hi
I have integrated fuzzing into libbson and was thinking that it would be nice to set up continuous fuzzing by way of OSS-Fuzz. In this PR: google/oss-fuzz#4808 I have done exactly that, namely created the necessary logic from an OSS-Fuzz perspective to integrate. In that PR you also see the fuzzer attached, but it would be nicer to have the fuzzer integrated into the upstream project itself rather than keeping it in OSS-Fuzz - so if this PR gets merged I will remove it from OSS-Fuzz
Essentially, OSS-Fuzz is a free service run by Google that performs continuous fuzzing of important open source projects. The only expectation of integrating into OSS-Fuzz is that bugs will be fixed. This is not a ""hard"" requirement in that no one enforces this and the main point is if bugs are not fixed then it is a waste of resources to run the fuzzers, which we would like to avoid.
If you would like to integrate, could I please have an email(s) that will get access to the data produced by OSS-Fuzz, such as bug reports, coverage reports and more stats. Notice the emails affiliated with the project will be public in the OSS-Fuzz repo, as they will be part of a configuration file and they also need to be linked with a Google account to get the detailed reports.
David","Thank you again @DavidKorczynski! I contacted you via the email listed on your GitHub profile with an account I created for receiving OSS-Fuzz reports.
Also noteworthy in case you are interested, we do have fuzz testing in our backlog for the libmongocrypt project (https://github.com/mongodb/libmongocrypt).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,707,2020-12-09T17:15:23Z,2020-12-16T21:48:12Z,2020-12-16T21:48:12Z,MERGED,True,760,15,17,https://github.com/samantharitter,CDRIVER-3749 test mongohouse for C driver,2,[],https://github.com/mongodb/mongo-c-driver/pull/707,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/707,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,708,2020-12-13T19:54:36Z,2020-12-23T18:07:38Z,2020-12-23T18:07:38Z,MERGED,True,5,1,2,https://github.com/devnexen,Logging using native NetBSD thread id call.,1,[],https://github.com/mongodb/mongo-c-driver/pull/708,https://github.com/devnexen,1,https://github.com/mongodb/mongo-c-driver/pull/708,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,708,2020-12-13T19:54:36Z,2020-12-23T18:07:38Z,2020-12-23T18:07:38Z,MERGED,True,5,1,2,https://github.com/devnexen,Logging using native NetBSD thread id call.,1,[],https://github.com/mongodb/mongo-c-driver/pull/708,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/708#issuecomment-744882188,,"Hi @devnexen, thank you for the contribution! This looks like an improvement to me. We do not regularly test against NetBSD, but once we verify this works we will merge this.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,708,2020-12-13T19:54:36Z,2020-12-23T18:07:38Z,2020-12-23T18:07:38Z,MERGED,True,5,1,2,https://github.com/devnexen,Logging using native NetBSD thread id call.,1,[],https://github.com/mongodb/mongo-c-driver/pull/708,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/708#issuecomment-750413634,,"Thank you for the contribution @devnexen!
And thank you @rcsanchez97 for testing these changes!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,709,2020-12-16T21:26:01Z,2020-12-18T14:34:16Z,2020-12-18T14:34:17Z,MERGED,True,2,1,1,https://github.com/samantharitter,CDRIVER-3705 sync direct connection tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/709,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/709,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,710,2020-12-16T22:42:05Z,2020-12-18T14:31:48Z,2020-12-18T14:31:48Z,MERGED,True,17,2,2,https://github.com/samantharitter,CDRIVER-3732 document read pref behavior for mongoc_client_select_server,1,[],https://github.com/mongodb/mongo-c-driver/pull/710,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/710,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,711,2020-12-17T18:53:51Z,2020-12-17T19:49:14Z,2020-12-18T15:02:31Z,MERGED,True,6,0,2,https://github.com/rcsanchez97,ship fuzzer integration in release tarball,1,[],https://github.com/mongodb/mongo-c-driver/pull/711,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/711,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,711,2020-12-17T18:53:51Z,2020-12-17T19:49:14Z,2020-12-18T15:02:31Z,MERGED,True,6,0,2,https://github.com/rcsanchez97,ship fuzzer integration in release tarball,1,[],https://github.com/mongodb/mongo-c-driver/pull/711,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/711#issuecomment-747633955,,Full Evergreen patch build: https://spruce.mongodb.com/version/5fdba6973066155bd2484d06/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,712,2020-12-18T14:11:23Z,2021-01-07T19:36:54Z,2021-01-07T19:36:54Z,MERGED,True,1605,48,11,https://github.com/kevinAlbs,CDRIVER-3422 add entity map and BSON parser,6,[],https://github.com/mongodb/mongo-c-driver/pull/712,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/712,"Summary of changes:

Add a bson_parser_t make test parsing code consistent and safer. By default, extra fields are considered an error.
Add the entity map for the unified test runner.

Notes:

example-insertOne.json exercises the client, database, and collection entity types. Support for bucket  and session.defaultTransactionOptions will be added when needed.","Summary of changes:

Add a bson_parser_t make test parsing code consistent and safer. By default, extra fields are considered an error.
Add the entity map for the unified test runner.

Notes:

example-insertOne.json exercises the client, database, and collection entity types. Support for bucket  and session.defaultTransactionOptions will be added when needed.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,713,2020-12-29T16:17:56Z,2021-01-04T18:44:20Z,2021-01-04T18:44:20Z,MERGED,True,0,1,1,https://github.com/samantharitter,CDRIVER-3825 remove BSON_ASSERT for server_id,1,[],https://github.com/mongodb/mongo-c-driver/pull/713,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/713,I simply removed this assert.  The logic right below should compare for server_id 0 and fail with a nice error.,I simply removed this assert.  The logic right below should compare for server_id 0 and fail with a nice error.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,714,2021-01-05T01:17:26Z,2021-01-05T16:10:45Z,2021-01-05T16:10:45Z,MERGED,True,1,0,1,https://github.com/kevinAlbs,fix leak in tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/714,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/714,coverity cid: 116836,coverity cid: 116836,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,715,2021-01-07T14:43:10Z,2021-01-13T17:08:28Z,2021-01-13T17:08:28Z,MERGED,True,1,1,1,https://github.com/samantharitter,CDRIVER-3801 set server monitor polling time to minHeartbeatFrequencyMS,1,[],https://github.com/mongodb/mongo-c-driver/pull/715,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/715,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,716,2021-01-07T16:57:26Z,2021-01-08T15:28:45Z,2021-01-08T15:28:46Z,MERGED,True,9,0,1,https://github.com/samantharitter,CDRIVER-3823 ignore SIGPIPE on osx,2,[],https://github.com/mongodb/mongo-c-driver/pull/716,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/716,"MSG_NOSIGNAL, the flag that we currently use to ignore SIGPIPE on POSIX systems, is not supported on OSX.  Instead, OSX offers the SO_NOSIGPIPE flag that can be set as a socket option before performing writes.
I had asked @kmahar to test a different solution for ignoring SIGPIPE:
signal(SIGPIPE, SIG_IGN);
Upon further research, this solution isn't ideal, because it ignores SIGPIPE for the entire program, including any user code running a level above the C driver.  In the case that a user is interested in SIGPIPE for some reason, setting the handler to SIG_IGN like this would also capture SIGPIPE in user code.  The SO_NOSIGPIPE solution is less intrusive for a library like ours.","MSG_NOSIGNAL, the flag that we currently use to ignore SIGPIPE on POSIX systems, is not supported on OSX.  Instead, OSX offers the SO_NOSIGPIPE flag that can be set as a socket option before performing writes.
I had asked @kmahar to test a different solution for ignoring SIGPIPE:
signal(SIGPIPE, SIG_IGN);
Upon further research, this solution isn't ideal, because it ignores SIGPIPE for the entire program, including any user code running a level above the C driver.  In the case that a user is interested in SIGPIPE for some reason, setting the handler to SIG_IGN like this would also capture SIGPIPE in user code.  The SO_NOSIGPIPE solution is less intrusive for a library like ours.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,717,2021-01-08T15:25:31Z,2021-01-13T15:12:31Z,2021-01-13T15:12:36Z,MERGED,True,317,0,6,https://github.com/bazile-clyde,Client-side operations timeout struct,8,[],https://github.com/mongodb/mongo-c-driver/pull/717,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/717,"This commit adds the timeoutMS struct to be used under the hood for client-side operations. This will not be a public-facing API. If the user needs the value of timeoutMS set on, for example, a client, then they could call a method like,
MONGOC_EXPORT (int64_t)
mongoc_client_get_timeout (const mongoc_client_t *client);

The only reason this couldn't just be an int64_t is that 0 and unset mean different things. This was done to prevent backward breaking changes as much as possible.","This commit adds the timeoutMS struct to be used under the hood for client-side operations. This will not be a public-facing API. If the user needs the value of timeoutMS set on, for example, a client, then they could call a method like,
MONGOC_EXPORT (int64_t)
mongoc_client_get_timeout (const mongoc_client_t *client);

The only reason this couldn't just be an int64_t is that 0 and unset mean different things. This was done to prevent backward breaking changes as much as possible.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,718,2021-01-13T15:46:54Z,2021-01-13T16:03:01Z,2021-01-13T16:03:06Z,CLOSED,False,1,1,1,https://github.com/bazile-clyde,Fix debug-compile-sasl-openssl on RHEL 6.2,1,[],https://github.com/mongodb/mongo-c-driver/pull/718,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/718,"This removes the ""comma at end of enumerator list"" warning in the task debug-compile-sasl-openssl on RHEL 6.2","This removes the ""comma at end of enumerator list"" warning in the task debug-compile-sasl-openssl on RHEL 6.2",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,719,2021-01-13T22:25:27Z,2021-03-29T15:22:21Z,2021-03-29T15:22:21Z,CLOSED,False,470,346,8,https://github.com/samantharitter,CDRIVER-3850 allow uri to accept timeout MS,7,[],https://github.com/mongodb/mongo-c-driver/pull/719,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/719,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,719,2021-01-13T22:25:27Z,2021-03-29T15:22:21Z,2021-03-29T15:22:21Z,CLOSED,False,470,346,8,https://github.com/samantharitter,CDRIVER-3850 allow uri to accept timeout MS,7,[],https://github.com/mongodb/mongo-c-driver/pull/719,https://github.com/bazile-clyde,2,https://github.com/mongodb/mongo-c-driver/pull/719#issuecomment-764844921,,"I've refactored a bunch of the tests in test-mongoc-uri.c. The way the existing tests were laid out in that file made it difficult to add additional tests for this new option without making more of a mess.
@bazile-clyde did post a link to an article that stated the following:
“As a rule of thumb, if you feel the need to comment on something inside a method, you should take this code and put it in a new method.”
I’ve refactored that code away, so it’s a bit of a moot point. But I wanted to respond to this comment because it touches on some style things that I think are important and where we might disagree.
In general, I do think it’s good to avoid creating endless methods (like the ones that already existed in this file). But, another best practice in my book is to match the style in existing code, so as to avoid creating a big mashup of coding styles that makes the code less readable, and, in this case, would make it difficult to see whether there is testing parity between an existing option and something newly added.
I chose to refactor the tests so that all int options would be tested in the same way by a new test function. But my second choice would have been to leave my addition as-was, with a comment, to match the way existing and similar options like minHeartbeatFrequencyMS were already being tested in this file. It would have made that (already long) function a little longer, but it also would have kept the same coding style existent in the file.

@samantharitter I agree that we should strive to match the style of existing code wherever possible. The only obvious exception should be if the existing code is riddled with code smells, anti-patterns, or other faults. If you agree that this is a code smell then we shouldn't make matters worse by adding to the mess. That'll lead to more code smells.
If we run into the case where a single file has a ton of functions then we could consider breaking that file into multiple files. If we have too many files we can further refactor them into separate modules/folders, etc. In this case, I was highlighting an anti-pattern, not only a style choice.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,719,2021-01-13T22:25:27Z,2021-03-29T15:22:21Z,2021-03-29T15:22:21Z,CLOSED,False,470,346,8,https://github.com/samantharitter,CDRIVER-3850 allow uri to accept timeout MS,7,[],https://github.com/mongodb/mongo-c-driver/pull/719,https://github.com/samantharitter,3,https://github.com/mongodb/mongo-c-driver/pull/719#issuecomment-809470173,,Manually merged.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,720,2021-01-16T13:20:37Z,2021-01-19T14:53:00Z,2021-01-19T14:53:00Z,MERGED,True,6,0,1,https://github.com/devnexen,"log report, using native thread id support for Mac",1,[],https://github.com/mongodb/mongo-c-driver/pull/720,https://github.com/devnexen,1,https://github.com/mongodb/mongo-c-driver/pull/720,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,720,2021-01-16T13:20:37Z,2021-01-19T14:53:00Z,2021-01-19T14:53:00Z,MERGED,True,6,0,1,https://github.com/devnexen,"log report, using native thread id support for Mac",1,[],https://github.com/mongodb/mongo-c-driver/pull/720,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/720#issuecomment-762891890,,Thank you for the contribution @devnexen!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,721,2021-01-20T20:04:11Z,2021-01-21T13:40:20Z,2021-01-21T13:40:20Z,MERGED,True,0,44,2,https://github.com/kevinAlbs,CDRIVER-3866 remove travis,1,[],https://github.com/mongodb/mongo-c-driver/pull/721,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/721,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,722,2021-01-21T13:27:12Z,2021-02-02T17:29:03Z,2021-02-02T17:29:03Z,MERGED,True,8748,329,26,https://github.com/kevinAlbs,CDRIVER-3422 remaining support of unified test format,7,[],https://github.com/mongodb/mongo-c-driver/pull/722,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/722,"At long last, the last part of the unified test runner.
This adds:

The GridFS bucket entity
All remaining operations
Result/expectation checking

It supports the 1.1 format excluding the serverApi option (which will be done as part of version API).
JSON tests are on the first commit (select commit range to filter during review).","At long last, the last part of the unified test runner.
This adds:

The GridFS bucket entity
All remaining operations
Result/expectation checking

It supports the 1.1 format excluding the serverApi option (which will be done as part of version API).
JSON tests are on the first commit (select commit range to filter during review).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,723,2021-01-21T20:38:01Z,2021-02-18T17:32:53Z,2021-02-18T17:32:53Z,MERGED,True,1,1,1,https://github.com/devnexen,get_rand mac supports arc4random api too,1,[],https://github.com/mongodb/mongo-c-driver/pull/723,https://github.com/devnexen,1,https://github.com/mongodb/mongo-c-driver/pull/723,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,723,2021-01-21T20:38:01Z,2021-02-18T17:32:53Z,2021-02-18T17:32:53Z,MERGED,True,1,1,1,https://github.com/devnexen,get_rand mac supports arc4random api too,1,[],https://github.com/mongodb/mongo-c-driver/pull/723,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/723#issuecomment-781512167,,Thank you for the contribution!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,724,2021-01-21T21:29:51Z,2021-02-17T19:32:51Z,2021-02-17T19:32:51Z,CLOSED,False,11317,921,68,https://github.com/samantharitter,CSOT public setters and getters,11,[],https://github.com/mongodb/mongo-c-driver/pull/724,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/724,I broke this work out from the change_streams CSOT work because these helpers seemed like potential blockers for a lot of the tickets in the Client-Side Operations Timeout ticket.,I broke this work out from the change_streams CSOT work because these helpers seemed like potential blockers for a lot of the tickets in the Client-Side Operations Timeout ticket.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,724,2021-01-21T21:29:51Z,2021-02-17T19:32:51Z,2021-02-17T19:32:51Z,CLOSED,False,11317,921,68,https://github.com/samantharitter,CSOT public setters and getters,11,[],https://github.com/mongodb/mongo-c-driver/pull/724,https://github.com/samantharitter,2,https://github.com/mongodb/mongo-c-driver/pull/724#issuecomment-776849014,I broke this work out from the change_streams CSOT work because these helpers seemed like potential blockers for a lot of the tickets in the Client-Side Operations Timeout ticket.,"This is ready for re-review!  The automated checks are not running for some reason, so here's a manual evergreen patch: https://evergreen.mongodb.com/version/6023f6773066155e29379918",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,724,2021-01-21T21:29:51Z,2021-02-17T19:32:51Z,2021-02-17T19:32:51Z,CLOSED,False,11317,921,68,https://github.com/samantharitter,CSOT public setters and getters,11,[],https://github.com/mongodb/mongo-c-driver/pull/724,https://github.com/samantharitter,3,https://github.com/mongodb/mongo-c-driver/pull/724#issuecomment-776958620,I broke this work out from the change_streams CSOT work because these helpers seemed like potential blockers for a lot of the tickets in the Client-Side Operations Timeout ticket.,Another manual run on Evergreen for the most recent changes: https://evergreen.mongodb.com/version/60242bd557e85a0a0bfe96ae,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,724,2021-01-21T21:29:51Z,2021-02-17T19:32:51Z,2021-02-17T19:32:51Z,CLOSED,False,11317,921,68,https://github.com/samantharitter,CSOT public setters and getters,11,[],https://github.com/mongodb/mongo-c-driver/pull/724,https://github.com/samantharitter,4,https://github.com/mongodb/mongo-c-driver/pull/724#issuecomment-778242367,I broke this work out from the change_streams CSOT work because these helpers seemed like potential blockers for a lot of the tickets in the Client-Side Operations Timeout ticket.,"New manual patch test: https://evergreen.mongodb.com/version/602695fa2a60ed253f65555a
I squashed my commits, rebased, resolved the conflicts, and force-pushed to this branch to get it ready to merge, but it looks like all the rebased commits from master are now in this PR.  Sorry about that!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,724,2021-01-21T21:29:51Z,2021-02-17T19:32:51Z,2021-02-17T19:32:51Z,CLOSED,False,11317,921,68,https://github.com/samantharitter,CSOT public setters and getters,11,[],https://github.com/mongodb/mongo-c-driver/pull/724,https://github.com/samantharitter,5,https://github.com/mongodb/mongo-c-driver/pull/724#issuecomment-780798602,I broke this work out from the change_streams CSOT work because these helpers seemed like potential blockers for a lot of the tickets in the Client-Side Operations Timeout ticket.,"Closing this PR, manually pushed.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,725,2021-01-22T07:09:44Z,2021-08-12T00:42:40Z,2021-08-12T00:42:40Z,CLOSED,False,839,8,15,https://github.com/kevinAlbs,POC of SPEC-1774 integration tests for temporary AWS credentials,10,[],https://github.com/mongodb/mongo-c-driver/pull/725,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/725,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,726,2021-01-24T23:47:24Z,2021-01-25T15:53:34Z,2021-01-25T15:53:34Z,MERGED,True,46,0,4,https://github.com/kevinAlbs,CDRIVER-3780 add client_session_get_dirty,2,[],https://github.com/mongodb/mongo-c-driver/pull/726,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/726,Unified test format (and driver sessions tests) make assertions on whether a session has been marked dirty. This adds a getter to mongoc_client_session_t so wrapping drivers can easily implement those assertions.,Unified test format (and driver sessions tests) make assertions on whether a session has been marked dirty. This adds a getter to mongoc_client_session_t so wrapping drivers can easily implement those assertions.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,727,2021-01-24T23:51:28Z,2021-01-25T15:54:29Z,2021-01-25T15:54:29Z,MERGED,True,75,11,2,https://github.com/kevinAlbs,CDRIVER-3873 clear fam error on retry,1,[],https://github.com/mongodb/mongo-c-driver/pull/727,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/727,"If mongoc_collection_find_and_modify_with_opts or mongoc_collection_find_and_modify succeeds after retrying due to retryable writes being enabled, it correctly returns true but leaves the output bson_error_t set to the original error.
This clears the error on a successful retry.
Note, this came up during implementation of the unified test runner. I implemented error checking by checking the out bson_error_t on operations (not the boolean return value).","If mongoc_collection_find_and_modify_with_opts or mongoc_collection_find_and_modify succeeds after retrying due to retryable writes being enabled, it correctly returns true but leaves the output bson_error_t set to the original error.
This clears the error on a successful retry.
Note, this came up during implementation of the unified test runner. I implemented error checking by checking the out bson_error_t on operations (not the boolean return value).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,728,2021-01-25T00:46:38Z,2021-02-02T14:43:50Z,2021-02-03T09:14:24Z,CLOSED,False,86,2,3,https://github.com/kevinAlbs,CDRIVER-3147 add cmd errors to write results,2,[],https://github.com/mongodb/mongo-c-driver/pull/728,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/728,"Add code, codeName, and errmsg to write results from a reply
when a command error (i.e. not a writeError / writeConcernError)
occurs during a write.","Add code, codeName, and errmsg to write results from a reply
when a command error (i.e. not a writeError / writeConcernError)
occurs during a write.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,729,2021-01-25T03:58:41Z,2021-01-28T01:30:05Z,2021-01-28T01:30:05Z,MERGED,True,1959,560,14,https://github.com/kevinAlbs,CDRIVER-3422 add bsonutil,3,[],https://github.com/mongodb/mongo-c-driver/pull/729,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/729,"Adds matching logic for unified test format, and moves some bson utilities into a common include directory bsonutil so they are accessible to all tests.","Adds matching logic for unified test format, and moves some bson utilities into a common include directory bsonutil so they are accessible to all tests.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,730,2021-01-26T14:18:31Z,2021-02-01T03:42:09Z,2021-02-01T03:42:10Z,MERGED,True,46,2,1,https://github.com/kevinAlbs,CDRIVER-3877 test BSON string produced,1,[],https://github.com/mongodb/mongo-c-driver/pull/730,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/730,"The bug fix is part of 4ed2848#diff-40f2bad12fecbb316a142e83953d727ed35c749b920931a18791f8558654aef2R2582
That line will be backported, along with this test, in 1.17.4.","The bug fix is part of 4ed2848#diff-40f2bad12fecbb316a142e83953d727ed35c749b920931a18791f8558654aef2R2582
That line will be backported, along with this test, in 1.17.4.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,731,2021-01-29T03:18:13Z,2021-03-01T15:13:10Z,2021-03-01T15:13:10Z,CLOSED,False,41,22,2,https://github.com/kevinAlbs,Calc release version nomatch,3,[],https://github.com/mongodb/mongo-c-driver/pull/731,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/731,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,732,2021-02-04T14:21:39Z,2021-02-05T12:57:17Z,2021-02-05T12:57:18Z,MERGED,True,4,1,1,https://github.com/kevinAlbs,clarify lifecycle of sd,2,[],https://github.com/mongodb/mongo-c-driver/pull/732,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/732,"Adds a note to the docs for mongoc_server_description_t to note it is temporary when obtained through APM callbacks.
This is similar to the existing note for mongoc_topology_description_t. Though users do need to destroy a mongoc_server_description_t when obtained through mongoc_client_select_server.","Adds a note to the docs for mongoc_server_description_t to note it is temporary when obtained through APM callbacks.
This is similar to the existing note for mongoc_topology_description_t. Though users do need to destroy a mongoc_server_description_t when obtained through mongoc_client_select_server.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,733,2021-02-04T17:18:42Z,2021-03-31T19:44:06Z,2021-03-31T19:44:06Z,CLOSED,False,487,44,20,https://github.com/samantharitter,Allow custom bind_ip for outgoing client connections,7,[],https://github.com/mongodb/mongo-c-driver/pull/733,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/733,"This PR is still in a pretty rough state, but I wanted to get some feedback on it before continuing.","This PR is still in a pretty rough state, but I wanted to get some feedback on it before continuing.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,734,2021-02-07T20:07:10Z,2021-02-10T20:49:32Z,2021-02-10T20:49:32Z,MERGED,True,9,2,3,https://github.com/kevinAlbs,CDRIVER-3902 handle absence of expectResult/expectError,1,[],https://github.com/mongodb/mongo-c-driver/pull/734,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/734,Not urgent – this is a follow up ticket for unified test format. If an operation in the unified test format does not include expectResult or expectError it should still check that the operation succeeded.,Not urgent – this is a follow up ticket for unified test format. If an operation in the unified test format does not include expectResult or expectError it should still check that the operation succeeded.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,735,2021-02-08T18:22:44Z,2021-02-09T01:21:09Z,2021-02-09T14:59:51Z,MERGED,True,1,1,1,https://github.com/fgalan,CDRIVER 3903 fix doc to ENABLE_AUTOMATIC_INIT_AND_CLEANUP setting homogeneous,1,[],https://github.com/mongodb/mongo-c-driver/pull/735,https://github.com/fgalan,1,https://github.com/mongodb/mongo-c-driver/pull/735,"Fixes https://jira.mongodb.org/browse/CDRIVER-3903 changing the only reference that I have found using NO to OFF (doing the other way around, changing all OFF to NO would have involved much more changes).
I hope you find it useful. Feedback welcome.","Fixes https://jira.mongodb.org/browse/CDRIVER-3903 changing the only reference that I have found using NO to OFF (doing the other way around, changing all OFF to NO would have involved much more changes).
I hope you find it useful. Feedback welcome.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,735,2021-02-08T18:22:44Z,2021-02-09T01:21:09Z,2021-02-09T14:59:51Z,MERGED,True,1,1,1,https://github.com/fgalan,CDRIVER 3903 fix doc to ENABLE_AUTOMATIC_INIT_AND_CLEANUP setting homogeneous,1,[],https://github.com/mongodb/mongo-c-driver/pull/735,https://github.com/bazile-clyde,2,https://github.com/mongodb/mongo-c-driver/pull/735#issuecomment-775384011,"Fixes https://jira.mongodb.org/browse/CDRIVER-3903 changing the only reference that I have found using NO to OFF (doing the other way around, changing all OFF to NO would have involved much more changes).
I hope you find it useful. Feedback welcome.",LGTM! Feel free to merge.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,735,2021-02-08T18:22:44Z,2021-02-09T01:21:09Z,2021-02-09T14:59:51Z,MERGED,True,1,1,1,https://github.com/fgalan,CDRIVER 3903 fix doc to ENABLE_AUTOMATIC_INIT_AND_CLEANUP setting homogeneous,1,[],https://github.com/mongodb/mongo-c-driver/pull/735,https://github.com/fgalan,3,https://github.com/mongodb/mongo-c-driver/pull/735#issuecomment-775909434,"Fixes https://jira.mongodb.org/browse/CDRIVER-3903 changing the only reference that I have found using NO to OFF (doing the other way around, changing all OFF to NO would have involved much more changes).
I hope you find it useful. Feedback welcome.","Thanks!
The change correctly appears at https://s3.amazonaws.com/mciuploads/mongo-c-driver/docs/libmongoc/latest/init-cleanup.html#deprecated-feature-automatic-initialization-and-cleanup
I understand that when a new version of the driver gets released it will also appear in http://mongoc.org/libmongoc/current/init-cleanup.html#deprecated-feature-automatic-initialization-and-cleanup. Is my understanding correct?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,735,2021-02-08T18:22:44Z,2021-02-09T01:21:09Z,2021-02-09T14:59:51Z,MERGED,True,1,1,1,https://github.com/fgalan,CDRIVER 3903 fix doc to ENABLE_AUTOMATIC_INIT_AND_CLEANUP setting homogeneous,1,[],https://github.com/mongodb/mongo-c-driver/pull/735,https://github.com/bazile-clyde,4,https://github.com/mongodb/mongo-c-driver/pull/735#issuecomment-776002596,"Fixes https://jira.mongodb.org/browse/CDRIVER-3903 changing the only reference that I have found using NO to OFF (doing the other way around, changing all OFF to NO would have involved much more changes).
I hope you find it useful. Feedback welcome.","Thanks!
The change correctly appears at https://s3.amazonaws.com/mciuploads/mongo-c-driver/docs/libmongoc/latest/init-cleanup.html#deprecated-feature-automatic-initialization-and-cleanup
I understand that when a new version of the driver gets released it will also appear in http://mongoc.org/libmongoc/current/init-cleanup.html#deprecated-feature-automatic-initialization-and-cleanup. Is my understanding correct?

@fgalan That's correct! Thanks for the contribution.",True,{'THUMBS_UP': ['https://github.com/fgalan']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,736,2021-02-11T17:14:08Z,2021-02-11T18:14:05Z,2021-02-16T09:46:38Z,MERGED,True,1,1,1,https://github.com/bazile-clyde,CDRIVER-3904 move log handler above init in logging example,1,[],https://github.com/mongodb/mongo-c-driver/pull/736,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/736,"This PR moves mongoc_log_set_handler above mongoc_init in our logging docs example. This clarifies the log handler can be set at any time, even before a call to mongoc_init.","This PR moves mongoc_log_set_handler above mongoc_init in our logging docs example. This clarifies the log handler can be set at any time, even before a call to mongoc_init.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,737,2021-02-12T18:31:13Z,2021-03-05T18:32:03Z,2021-03-05T18:32:04Z,CLOSED,False,3752,38,44,https://github.com/samantharitter,CDRIVER-3821 implement versioned server api,10,[],https://github.com/mongodb/mongo-c-driver/pull/737,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/737,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,737,2021-02-12T18:31:13Z,2021-03-05T18:32:03Z,2021-03-05T18:32:04Z,CLOSED,False,3752,38,44,https://github.com/samantharitter,CDRIVER-3821 implement versioned server api,10,[],https://github.com/mongodb/mongo-c-driver/pull/737,https://github.com/samantharitter,2,https://github.com/mongodb/mongo-c-driver/pull/737#issuecomment-789754933,,"Hi @alcaeus, thank you for your feedback!  Let me address your questions one by one.

This PR omits the new serverParameters field in runOnRequirements.

We are actually already parsing and validating the serverParameters field, I believe @kevinAlbs added this when he implemented the new unified test runner: https://github.com/mongodb/mongo-c-driver/blob/master/src/libmongoc/tests/unified/runner.c#L606-L625

The spec calls for adding evergreen configuration to test against servers with the requiredApiVersion parameter set: https://github.com/mongodb/specifications/blob/master/source/versioned-api/tests/README.rst#testing-with-required-api-version

Yes, let's do this in a follow-up ticket.  I've opened CDRIVER-3917 for this work.

Was there a reason to omit the getters?

Since deprecationErrors and strict are optional bool parameters, exposing them is non-trivial, so I decided not to add the getters unless they were deemed useful.  It would be nice if we offered a mongoc_optional_t type that could encapsulate such values, rather than adding two separate get_strict() and get_strict_set() methods.  I'm happy to talk about a design we like for this and do it in a follow-up ticket, or let you add getters later.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,737,2021-02-12T18:31:13Z,2021-03-05T18:32:03Z,2021-03-05T18:32:04Z,CLOSED,False,3752,38,44,https://github.com/samantharitter,CDRIVER-3821 implement versioned server api,10,[],https://github.com/mongodb/mongo-c-driver/pull/737,https://github.com/alcaeus,3,https://github.com/mongodb/mongo-c-driver/pull/737#issuecomment-789841977,,mongoc_optional_t sounds good to me. Happy to defer that to a followup ticket,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,737,2021-02-12T18:31:13Z,2021-03-05T18:32:03Z,2021-03-05T18:32:04Z,CLOSED,False,3752,38,44,https://github.com/samantharitter,CDRIVER-3821 implement versioned server api,10,[],https://github.com/mongodb/mongo-c-driver/pull/737,https://github.com/samantharitter,4,https://github.com/mongodb/mongo-c-driver/pull/737#issuecomment-791603027,,I've manually resolved the conflicts here and pushed this work into master.  Closing this PR.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,738,2021-02-14T20:46:28Z,2021-02-17T16:12:17Z,2021-02-17T16:12:17Z,MERGED,True,11,4,1,https://github.com/kevinAlbs,CDRIVER-3906 do not add libm on macOS,1,[],https://github.com/mongodb/mongo-c-driver/pull/738,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/738,"Requiring consumers of libbson-static to link against libm on macOS causes an issue for the Go driver's use of libmongocrypt (error encountered originally in MONGOCRYPT-309, but copying details here).
$ pkg-config --libs --cflags libmongocrypt-static
-DMONGOCRYPT_STATIC_DEFINE -DKMS_MSG_STATIC -DBSON_STATIC -I/usr/local/Cellar/libmongocrypt/1.2.0/include/mongocrypt -I/usr/local/Cellar/mongo-c-driver/1.17.4/include/libbson-1.0 -L/usr/local/Cellar/mongo-c-driver/1.17.4/lib /usr/local/Cellar/libmongocrypt/1.2.0/lib/libmongocrypt-static.a /usr/local/Cellar/libmongocrypt/1.2.0/lib/libkms_message-static.a -framework CoreFoundation -framework Security -lbson-static-1.0 /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libm.tbd

The /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libm.tbd is a valid input to the macOS linker, and is a text based stub-library. By default, Go rejects unrecognized linker inputs. This will be fixed in golang/go#44263 in the go command.
Example:
// bson.go
package bson

// #cgo pkg-config: libbson-static-1.0
// #include <bson/bson.h>
// #include <stdlib.h>
import ""C""
import ""fmt""

func RunBson() {
	v := C.bson_get_version()
	fmt.Printf(""v=%v\n"", v)
}

Attempting to build with go results in an error:
$ go build -o bson bson.go
go build command-line-arguments: invalid flag in pkg-config --libs: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libm.tbd

Users can work around this by specifying the environment variable CGO_LDFLAGS_ALLOW='^.*tbd$'. But, libm is part of libsystem on macOS. So I do not think it is necessary to explicitly link to libm on macOS.","Requiring consumers of libbson-static to link against libm on macOS causes an issue for the Go driver's use of libmongocrypt (error encountered originally in MONGOCRYPT-309, but copying details here).
$ pkg-config --libs --cflags libmongocrypt-static
-DMONGOCRYPT_STATIC_DEFINE -DKMS_MSG_STATIC -DBSON_STATIC -I/usr/local/Cellar/libmongocrypt/1.2.0/include/mongocrypt -I/usr/local/Cellar/mongo-c-driver/1.17.4/include/libbson-1.0 -L/usr/local/Cellar/mongo-c-driver/1.17.4/lib /usr/local/Cellar/libmongocrypt/1.2.0/lib/libmongocrypt-static.a /usr/local/Cellar/libmongocrypt/1.2.0/lib/libkms_message-static.a -framework CoreFoundation -framework Security -lbson-static-1.0 /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libm.tbd

The /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libm.tbd is a valid input to the macOS linker, and is a text based stub-library. By default, Go rejects unrecognized linker inputs. This will be fixed in golang/go#44263 in the go command.
Example:
// bson.go
package bson

// #cgo pkg-config: libbson-static-1.0
// #include <bson/bson.h>
// #include <stdlib.h>
import ""C""
import ""fmt""

func RunBson() {
	v := C.bson_get_version()
	fmt.Printf(""v=%v\n"", v)
}

Attempting to build with go results in an error:
$ go build -o bson bson.go
go build command-line-arguments: invalid flag in pkg-config --libs: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libm.tbd

Users can work around this by specifying the environment variable CGO_LDFLAGS_ALLOW='^.*tbd$'. But, libm is part of libsystem on macOS. So I do not think it is necessary to explicitly link to libm on macOS.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,739,2021-02-16T09:44:13Z,2021-02-22T15:23:30Z,2021-02-22T15:36:58Z,MERGED,True,7,0,2,https://github.com/fgalan,CDRIVER-3904 improve documentation regarding when to call mongoc_log_set_handler,2,[],https://github.com/mongodb/mongo-c-driver/pull/739,https://github.com/fgalan,1,https://github.com/mongodb/mongo-c-driver/pull/739,"PR as discussed at #736 (comment)
Any feedback is welcome, including .rst syntax, documentation style in the Mongo C driver repository, or even text wording (English is not my native language ;)","PR as discussed at #736 (comment)
Any feedback is welcome, including .rst syntax, documentation style in the Mongo C driver repository, or even text wording (English is not my native language ;)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,739,2021-02-16T09:44:13Z,2021-02-22T15:23:30Z,2021-02-22T15:36:58Z,MERGED,True,7,0,2,https://github.com/fgalan,CDRIVER-3904 improve documentation regarding when to call mongoc_log_set_handler,2,[],https://github.com/mongodb/mongo-c-driver/pull/739,https://github.com/fgalan,2,https://github.com/mongodb/mongo-c-driver/pull/739#issuecomment-783293902,"PR as discussed at #736 (comment)
Any feedback is welcome, including .rst syntax, documentation style in the Mongo C driver repository, or even text wording (English is not my native language ;)","Looks great! I added an answer for ""how to link..."" question and one small nit.

Thank you very much for your feedback and detailed explanation.
I have fixed the PR, hoping now could be merged.",True,{'HOORAY': ['https://github.com/bazile-clyde']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,740,2021-02-23T11:17:59Z,2021-06-09T14:05:23Z,2021-06-09T14:16:00Z,MERGED,True,29,23,11,https://github.com/fgalan,Improve docs of cursor returning functions,5,[],https://github.com/mongodb/mongo-c-driver/pull/740,https://github.com/fgalan,1,https://github.com/mongodb/mongo-c-driver/pull/740,"Comparing the ""Returns"" section in src/libmongoc/doc/mongoc_collection_aggreage.rst with the one in src/libmongoc/doc/mongoc_collection_find.rst and src/libmongoc/doc/mongoc_collection_find_with_options.rst it seems the later ones are missing important information about how errors are reported (related with https://stackoverflow.com/questions/66027858/how-to-get-errors-when-calling-mongoc-collection-find-function).
I'd like to have feedback on this pull request, please. If it is right, please merge to improve the documentation. In addition, if you know any other document (others operations returning mongo_cursor_t*, probably) that may need a similar improvement, I can include it in this PR before merging.
Thanks!","Comparing the ""Returns"" section in src/libmongoc/doc/mongoc_collection_aggreage.rst with the one in src/libmongoc/doc/mongoc_collection_find.rst and src/libmongoc/doc/mongoc_collection_find_with_options.rst it seems the later ones are missing important information about how errors are reported (related with https://stackoverflow.com/questions/66027858/how-to-get-errors-when-calling-mongoc-collection-find-function).
I'd like to have feedback on this pull request, please. If it is right, please merge to improve the documentation. In addition, if you know any other document (others operations returning mongo_cursor_t*, probably) that may need a similar improvement, I can include it in this PR before merging.
Thanks!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,740,2021-02-23T11:17:59Z,2021-06-09T14:05:23Z,2021-06-09T14:16:00Z,MERGED,True,29,23,11,https://github.com/fgalan,Improve docs of cursor returning functions,5,[],https://github.com/mongodb/mongo-c-driver/pull/740,https://github.com/fgalan,2,https://github.com/mongodb/mongo-c-driver/pull/740#issuecomment-808195339,"Comparing the ""Returns"" section in src/libmongoc/doc/mongoc_collection_aggreage.rst with the one in src/libmongoc/doc/mongoc_collection_find.rst and src/libmongoc/doc/mongoc_collection_find_with_options.rst it seems the later ones are missing important information about how errors are reported (related with https://stackoverflow.com/questions/66027858/how-to-get-errors-when-calling-mongoc-collection-find-function).
I'd like to have feedback on this pull request, please. If it is right, please merge to improve the documentation. In addition, if you know any other document (others operations returning mongo_cursor_t*, probably) that may need a similar improvement, I can include it in this PR before merging.
Thanks!","@kevinAlbs thanks for the feedback!
I'll have a look and try to implement your proposals.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,740,2021-02-23T11:17:59Z,2021-06-09T14:05:23Z,2021-06-09T14:16:00Z,MERGED,True,29,23,11,https://github.com/fgalan,Improve docs of cursor returning functions,5,[],https://github.com/mongodb/mongo-c-driver/pull/740,https://github.com/fgalan,3,https://github.com/mongodb/mongo-c-driver/pull/740#issuecomment-809516999,"Comparing the ""Returns"" section in src/libmongoc/doc/mongoc_collection_aggreage.rst with the one in src/libmongoc/doc/mongoc_collection_find.rst and src/libmongoc/doc/mongoc_collection_find_with_options.rst it seems the later ones are missing important information about how errors are reported (related with https://stackoverflow.com/questions/66027858/how-to-get-errors-when-calling-mongoc-collection-find-function).
I'd like to have feedback on this pull request, please. If it is right, please merge to improve the documentation. In addition, if you know any other document (others operations returning mongo_cursor_t*, probably) that may need a similar improvement, I can include it in this PR before merging.
Thanks!","@kevinAlbs I have updated the PR based on your feedback, creating an include file and using it in the 10 functions you mention. It would be ready for a next review.
Thanks!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,740,2021-02-23T11:17:59Z,2021-06-09T14:05:23Z,2021-06-09T14:16:00Z,MERGED,True,29,23,11,https://github.com/fgalan,Improve docs of cursor returning functions,5,[],https://github.com/mongodb/mongo-c-driver/pull/740,https://github.com/fgalan,4,https://github.com/mongodb/mongo-c-driver/pull/740#issuecomment-847169123,"Comparing the ""Returns"" section in src/libmongoc/doc/mongoc_collection_aggreage.rst with the one in src/libmongoc/doc/mongoc_collection_find.rst and src/libmongoc/doc/mongoc_collection_find_with_options.rst it seems the later ones are missing important information about how errors are reported (related with https://stackoverflow.com/questions/66027858/how-to-get-errors-when-calling-mongoc-collection-find-function).
I'd like to have feedback on this pull request, please. If it is right, please merge to improve the documentation. In addition, if you know any other document (others operations returning mongo_cursor_t*, probably) that may need a similar improvement, I can include it in this PR before merging.
Thanks!","Is there anything pending on my side in this PR to be merged, please? Thanks!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,740,2021-02-23T11:17:59Z,2021-06-09T14:05:23Z,2021-06-09T14:16:00Z,MERGED,True,29,23,11,https://github.com/fgalan,Improve docs of cursor returning functions,5,[],https://github.com/mongodb/mongo-c-driver/pull/740,https://github.com/kevinAlbs,5,https://github.com/mongodb/mongo-c-driver/pull/740#issuecomment-857723196,"Comparing the ""Returns"" section in src/libmongoc/doc/mongoc_collection_aggreage.rst with the one in src/libmongoc/doc/mongoc_collection_find.rst and src/libmongoc/doc/mongoc_collection_find_with_options.rst it seems the later ones are missing important information about how errors are reported (related with https://stackoverflow.com/questions/66027858/how-to-get-errors-when-calling-mongoc-collection-find-function).
I'd like to have feedback on this pull request, please. If it is right, please merge to improve the documentation. In addition, if you know any other document (others operations returning mongo_cursor_t*, probably) that may need a similar improvement, I can include it in this PR before merging.
Thanks!",Apologies for the delay @fgalan. Thank you again for the contribution!,True,{'HEART': ['https://github.com/fgalan']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,741,2021-03-05T20:09:47Z,2021-03-24T14:09:07Z,2021-03-24T14:09:11Z,MERGED,True,38,443,25,https://github.com/bazile-clyde,CDRIVER-3856 skip CSE listCollections cmds,5,[],https://github.com/mongodb/mongo-c-driver/pull/741,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/741,The first commit syncs the spec tests. The second is the actual changes.,The first commit syncs the spec tests. The second is the actual changes.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,741,2021-03-05T20:09:47Z,2021-03-24T14:09:07Z,2021-03-24T14:09:11Z,MERGED,True,38,443,25,https://github.com/bazile-clyde,CDRIVER-3856 skip CSE listCollections cmds,5,[],https://github.com/mongodb/mongo-c-driver/pull/741,https://github.com/bazile-clyde,2,https://github.com/mongodb/mongo-c-driver/pull/741#issuecomment-805237974,The first commit syncs the spec tests. The second is the actual changes.,"LGTM with undoing the requested change to skip_cse_list_collections (sorry for the initial incorrect comment).

Got it. I reverted the last commit. I'm waiting until the test pass and pushing.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,742,2021-03-07T00:04:24Z,2021-03-17T17:54:02Z,2021-03-17T17:55:20Z,MERGED,True,105,4,6,https://github.com/rcsanchez97,CDRIVER-3863 add Evergreen task that builds with the new toolchain,1,[],https://github.com/mongodb/mongo-c-driver/pull/742,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/742,"Evergreen patch builds:
new task, build with toolchain only: https://spruce.mongodb.com/version/60440a093066155fe8101ad6/tasks
failure to utilize toolchain (simulated by checking for non-existent toolchain components): https://spruce.mongodb.com/version/6043b994e3c33144c7add05e/tasks
full C driver patch build: https://spruce.mongodb.com/version/604416903e8e86386b98ca2c/tasks","Evergreen patch builds:
new task, build with toolchain only: https://spruce.mongodb.com/version/60440a093066155fe8101ad6/tasks
failure to utilize toolchain (simulated by checking for non-existent toolchain components): https://spruce.mongodb.com/version/6043b994e3c33144c7add05e/tasks
full C driver patch build: https://spruce.mongodb.com/version/604416903e8e86386b98ca2c/tasks",True,{'THUMBS_UP': ['https://github.com/bazile-clyde']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,743,2021-03-08T16:02:42Z,2021-03-08T18:19:42Z,2021-03-08T18:19:49Z,MERGED,True,1,2,1,https://github.com/benjirewis,CDRIVER-3272 Correctly document bson gettimeofday,1,[],https://github.com/mongodb/mongo-c-driver/pull/743,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/743,"CDRIVER-3272
Document bson_gettimeofday() correctly. The docs previously listed an incorrect, additional timezone param that does not actually exist in bson-clock.h.","CDRIVER-3272
Document bson_gettimeofday() correctly. The docs previously listed an incorrect, additional timezone param that does not actually exist in bson-clock.h.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,744,2021-03-08T18:06:28Z,2021-03-08T18:07:49Z,2021-03-09T15:26:43Z,MERGED,True,2,2,2,https://github.com/bazile-clyde,changes assignment to equality check,2,[],https://github.com/mongodb/mongo-c-driver/pull/744,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/744,removes redefinition of mongoc_timeout_t.,removes redefinition of mongoc_timeout_t.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,745,2021-03-09T14:59:39Z,2021-03-17T06:57:52Z,2021-03-17T06:57:57Z,MERGED,True,1188,28,18,https://github.com/alcaeus,"Don't inspect error messages for ""not master"" or ""node is recovering""",3,[],https://github.com/mongodb/mongo-c-driver/pull/745,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/745,Covers CDRIVER-3885 and CDRIVER-3884.,Covers CDRIVER-3885 and CDRIVER-3884.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,746,2021-03-09T15:18:49Z,2021-03-09T16:32:02Z,2021-03-09T16:32:02Z,MERGED,True,1,1,1,https://github.com/bazile-clyde,remove typedef in _mongoc_timeout_t definition,1,[],https://github.com/mongodb/mongo-c-driver/pull/746,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/746,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,747,2021-03-09T17:14:33Z,2021-03-09T17:17:00Z,2021-03-09T17:17:00Z,CLOSED,False,3,1,1,https://github.com/bazile-clyde,set distinct.query as document,4,[],https://github.com/mongodb/mongo-c-driver/pull/747,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/747,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,748,2021-03-09T17:18:24Z,2021-03-09T18:26:08Z,2021-03-09T18:26:08Z,MERGED,True,3,1,1,https://github.com/bazile-clyde,set distinct.query as document,1,[],https://github.com/mongodb/mongo-c-driver/pull/748,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/748,"This commit fixes the issue from the task test-latest-server-auth-sasl-openssl-cse on GCC 8.3 here. Unfortunately, that task now has another unrelated error.
Here's a patch showing the previously failing tasks succeeding (link). I also verified this locally.","This commit fixes the issue from the task test-latest-server-auth-sasl-openssl-cse on GCC 8.3 here. Unfortunately, that task now has another unrelated error.
Here's a patch showing the previously failing tasks succeeding (link). I also verified this locally.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,748,2021-03-09T17:18:24Z,2021-03-09T18:26:08Z,2021-03-09T18:26:08Z,MERGED,True,3,1,1,https://github.com/bazile-clyde,set distinct.query as document,1,[],https://github.com/mongodb/mongo-c-driver/pull/748,https://github.com/codecov-io,2,https://github.com/mongodb/mongo-c-driver/pull/748#issuecomment-794248487,"This commit fixes the issue from the task test-latest-server-auth-sasl-openssl-cse on GCC 8.3 here. Unfortunately, that task now has another unrelated error.
Here's a patch showing the previously failing tasks succeeding (link). I also verified this locally.","Codecov Report

Merging #748 (354abff) into master (4184f37) will decrease coverage by 0.10%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #748      +/-   ##
==========================================
- Coverage   60.91%   60.80%   -0.11%     
==========================================
  Files         278      278              
  Lines       73398    73398              
==========================================
- Hits        44709    44630      -79     
- Misses      28689    28768      +79     



Impacted Files
Coverage Δ





src/libmongoc/tests/unified/operation.c
23.51% <ø> (ø)



src/libmongoc/tests/test-mongoc-async.c
3.81% <0.00%> (-25.20%)
⬇️


src/libmongoc/tests/test-mongoc-primary-stepdown.c
3.04% <0.00%> (-9.14%)
⬇️


src/libmongoc/tests/test-mongoc-counters.c
66.56% <0.00%> (-6.39%)
⬇️


src/libmongoc/src/mongoc/mongoc-read-prefs.c
85.61% <0.00%> (-0.72%)
⬇️


src/libmongoc/tests/test-mongoc-stream-tls-error.c
96.95% <0.00%> (-0.61%)
⬇️


src/libbson/src/bson/bson-iter.c
89.71% <0.00%> (-0.54%)
⬇️


src/libmongoc/tests/test-mongoc-socket.c
98.28% <0.00%> (-0.43%)
⬇️


src/libmongoc/tests/unified/runner.c
66.33% <0.00%> (-0.15%)
⬇️


src/libmongoc/src/mongoc/mongoc-server-monitor.c
62.04% <0.00%> (+0.20%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 4184f37...354abff. Read the comment docs.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,749,2021-03-09T19:46:27Z,2021-03-09T19:48:08Z,2021-03-09T19:48:08Z,CLOSED,False,16,8,2,https://github.com/bazile-clyde,remove batchSize and limit from isMaster,2,[],https://github.com/mongodb/mongo-c-driver/pull/749,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/749,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,750,2021-03-09T19:51:26Z,2021-03-09T22:15:49Z,2021-03-09T22:15:57Z,MERGED,True,13,7,1,https://github.com/bazile-clyde,remove batchSize and limit from isMaster,1,[],https://github.com/mongodb/mongo-c-driver/pull/750,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/750,This commit fixes the failing cmd_deprecated tasks on Evergreen (here for example).,This commit fixes the failing cmd_deprecated tasks on Evergreen (here for example).,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,750,2021-03-09T19:51:26Z,2021-03-09T22:15:49Z,2021-03-09T22:15:57Z,MERGED,True,13,7,1,https://github.com/bazile-clyde,remove batchSize and limit from isMaster,1,[],https://github.com/mongodb/mongo-c-driver/pull/750,https://github.com/codecov-io,2,https://github.com/mongodb/mongo-c-driver/pull/750#issuecomment-794389313,This commit fixes the failing cmd_deprecated tasks on Evergreen (here for example).,"Codecov Report

Merging #750 (18d10e2) into master (26898e5) will decrease coverage by 0.04%.
The diff coverage is 100.00%.


@@            Coverage Diff             @@
##           master     #750      +/-   ##
==========================================
- Coverage   60.91%   60.86%   -0.05%     
==========================================
  Files         278      278              
  Lines       73398    73400       +2     
==========================================
- Hits        44709    44674      -35     
- Misses      28689    28726      +37     



Impacted Files
Coverage Δ





src/libmongoc/tests/test-mongoc-cursor.c
60.53% <100.00%> (-0.03%)
⬇️


src/libmongoc/tests/test-mongoc-async.c
3.81% <0.00%> (-25.20%)
⬇️


src/libmongoc/tests/json-test-monitoring.c
66.35% <0.00%> (-0.47%)
⬇️


src/libbson/src/bson/bson-iter.c
89.98% <0.00%> (-0.41%)
⬇️


src/libmongoc/src/mongoc/mongoc-socket.c
75.89% <0.00%> (-0.33%)
⬇️


src/libmongoc/src/mongoc/mongoc-server-monitor.c
62.04% <0.00%> (+0.20%)
⬆️


src/libmongoc/tests/test-mongoc-socket.c
98.71% <0.00%> (+0.42%)
⬆️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 26898e5...18d10e2. Read the comment docs.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,750,2021-03-09T19:51:26Z,2021-03-09T22:15:49Z,2021-03-09T22:15:57Z,MERGED,True,13,7,1,https://github.com/bazile-clyde,remove batchSize and limit from isMaster,1,[],https://github.com/mongodb/mongo-c-driver/pull/750,https://github.com/samantharitter,3,https://github.com/mongodb/mongo-c-driver/pull/750#issuecomment-794527070,This commit fixes the failing cmd_deprecated tasks on Evergreen (here for example).,LGTM!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,751,2021-03-09T21:07:25Z,2021-03-10T18:10:28Z,2021-03-11T19:23:21Z,MERGED,True,25,15,2,https://github.com/benjirewis,CDRIVER-3773 Support regular expressions with no options,1,[],https://github.com/mongodb/mongo-c-driver/pull/751,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/751,"CDRIVER-3773
python-bsonjs, which relies on libbson, requested the ability to load regexes without the ""options"" field through JSON into BSON. I see no language in the extended JSON spec forbidding this behavior, and it's unlikely an existing user would actively expect a ""missing options"" error, so it seems ok to add.
Removes the ""missing options"" errors in _bson_json_read_append_regex and adds two new tests to verify correct parsing and absence of error for legacy and canonical regexes without options.","CDRIVER-3773
python-bsonjs, which relies on libbson, requested the ability to load regexes without the ""options"" field through JSON into BSON. I see no language in the extended JSON spec forbidding this behavior, and it's unlikely an existing user would actively expect a ""missing options"" error, so it seems ok to add.
Removes the ""missing options"" errors in _bson_json_read_append_regex and adds two new tests to verify correct parsing and absence of error for legacy and canonical regexes without options.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,751,2021-03-09T21:07:25Z,2021-03-10T18:10:28Z,2021-03-11T19:23:21Z,MERGED,True,25,15,2,https://github.com/benjirewis,CDRIVER-3773 Support regular expressions with no options,1,[],https://github.com/mongodb/mongo-c-driver/pull/751,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/751#issuecomment-796770584,"CDRIVER-3773
python-bsonjs, which relies on libbson, requested the ability to load regexes without the ""options"" field through JSON into BSON. I see no language in the extended JSON spec forbidding this behavior, and it's unlikely an existing user would actively expect a ""missing options"" error, so it seems ok to add.
Removes the ""missing options"" errors in _bson_json_read_append_regex and adds two new tests to verify correct parsing and absence of error for legacy and canonical regexes without options.","@benjirewis this change breaks the bson-corpus test suite in PHP. There is a test that expects a parse error when presented a regular expression without options: https://github.com/mongodb/specifications/blob/master/source/bson-corpus/tests/top.json#L74..L77.
I'll skip the test in PHP, but wanted to give you a heads up that this is covered by the corpus.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,751,2021-03-09T21:07:25Z,2021-03-10T18:10:28Z,2021-03-11T19:23:21Z,MERGED,True,25,15,2,https://github.com/benjirewis,CDRIVER-3773 Support regular expressions with no options,1,[],https://github.com/mongodb/mongo-c-driver/pull/751,https://github.com/benjirewis,3,https://github.com/mongodb/mongo-c-driver/pull/751#issuecomment-796982147,"CDRIVER-3773
python-bsonjs, which relies on libbson, requested the ability to load regexes without the ""options"" field through JSON into BSON. I see no language in the extended JSON spec forbidding this behavior, and it's unlikely an existing user would actively expect a ""missing options"" error, so it seems ok to add.
Removes the ""missing options"" errors in _bson_json_read_append_regex and adds two new tests to verify correct parsing and absence of error for legacy and canonical regexes without options.","Apologies for overlooking that test. Looking into how important the change is for python-bsonjs. I'll remove this change no matter what since it's spec-test breaking. If we still want to make the change, I'll do it through a drivers ticket with an actual spec change instead.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,752,2021-03-09T22:18:57Z,2021-03-10T16:37:35Z,2021-03-10T16:37:35Z,MERGED,True,4,4,1,https://github.com/samantharitter,add default for switch statement,1,[],https://github.com/mongodb/mongo-c-driver/pull/752,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/752,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,753,2021-03-11T13:08:14Z,2021-03-25T08:16:38Z,2021-03-25T08:16:41Z,MERGED,True,272,45,10,https://github.com/alcaeus,CDRIVER-3929 Include apiVersion in handshake commands,8,[],https://github.com/mongodb/mongo-c-driver/pull/753,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/753,"CDRIVER-3929
This fixes an oversight in the versioned API implementation where the handshake did not send API Version information to the server. This required exposing the API Version to the topology scanner as that's where the actual commands are handled. I've decided to allow changing the API Version multiple times as this part of libmongoc is very much internal.
During testing I discovered a couple of edge cases around setting API Version on a pooled client:

When no API Version has been set, a user can set it after clients have been popped. This causes an inconsistent state in the pool. Solution is to prevent changing the API Version when the pool size is greater than 0. I understand this can cause an inconsistency when the last client is destroyed where one could once again set the API Version. Let me know if we should also prevent that case.
When fetching a client from a pool that had no server API set, the api was not locked against modifications, which could once again lead to an inconsistent state in the pool. For clients fetched from a pool, the server API is mutable. This may apply to other properties of the client as well, so we may want to create a follow-up ticket for this.","CDRIVER-3929
This fixes an oversight in the versioned API implementation where the handshake did not send API Version information to the server. This required exposing the API Version to the topology scanner as that's where the actual commands are handled. I've decided to allow changing the API Version multiple times as this part of libmongoc is very much internal.
During testing I discovered a couple of edge cases around setting API Version on a pooled client:

When no API Version has been set, a user can set it after clients have been popped. This causes an inconsistent state in the pool. Solution is to prevent changing the API Version when the pool size is greater than 0. I understand this can cause an inconsistency when the last client is destroyed where one could once again set the API Version. Let me know if we should also prevent that case.
When fetching a client from a pool that had no server API set, the api was not locked against modifications, which could once again lead to an inconsistent state in the pool. For clients fetched from a pool, the server API is mutable. This may apply to other properties of the client as well, so we may want to create a follow-up ticket for this.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,754,2021-03-11T19:31:40Z,2021-03-11T22:58:44Z,2021-03-11T22:58:49Z,MERGED,True,4,20,2,https://github.com/benjirewis,CDRIVER-3773 Remove support for canonical regular expressions with no options,2,[],https://github.com/mongodb/mongo-c-driver/pull/754,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/754,"Reverts #751.
We cannot support regular expressions with no options without a spec change because of an existing spec test that checks for a parse error on a regex with no options.
CDRIVER-3773 would require a larger spec change, which I will look into.","Reverts #751.
We cannot support regular expressions with no options without a spec change because of an existing spec test that checks for a parse error on a regex with no options.
CDRIVER-3773 would require a larger spec change, which I will look into.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,755,2021-03-15T15:09:59Z,2021-03-16T14:42:53Z,2021-03-16T14:42:59Z,MERGED,True,20,12,2,https://github.com/bazile-clyde,Remove unknown fields in isMaster cmd,6,[],https://github.com/mongodb/mongo-c-driver/pull/755,https://github.com/bazile-clyde,1,https://github.com/mongodb/mongo-c-driver/pull/755,"This commit fixes the failing /Async/ismaster tests in evergreen.
Because of SERVER-53150, the latest server versions fail on isMaster commands with unknown fields. Previously this test inflatted the isMaster to >1MB to address the issue in CDRIVER-2483 by adding random-ish fields. Rather than sending an unknown field, this fix adds a >1MB comment.","This commit fixes the failing /Async/ismaster tests in evergreen.
Because of SERVER-53150, the latest server versions fail on isMaster commands with unknown fields. Previously this test inflatted the isMaster to >1MB to address the issue in CDRIVER-2483 by adding random-ish fields. Rather than sending an unknown field, this fix adds a >1MB comment.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,756,2021-03-15T16:06:55Z,2021-03-18T16:32:47Z,2021-03-18T16:32:47Z,MERGED,True,152,28,9,https://github.com/samantharitter,CDRIVER-3918 expose server api options as mongoc_optional_t,2,[],https://github.com/mongodb/mongo-c-driver/pull/756,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/756,"This PR adds a new mongoc_optional_t type (which represents an optional bool) and returns that type for boolean options for versioned API.  I thought through a couple of questions when implementing this:


What about other optional types?  Is it odd that mongoc_optional_t is only for bools?
The only other type I could see us wanting to represent this way is an integer.  Everything else can be pointer-based to indicate NULL-ness.  I think we could implement a mongoc_optional_int_t later on if we wanted to, and we actually may need specifically named types for int32, int64, etc.  Given that, I decided using mongoc_optional_t here would be nicer than mongoc_optional_bool_t.


Is this over-engineered?
Maybe!  We do represent optional booleans in a fair number of places, and I think this little type is a nice way to wrap that up.


Expose the type, or not?
It's our convention in most places to hide struct definitions and allow users to access them only through getters and setters.  However, we lose a lot of the convenience that a mongoc_optional_t offers if we require opt.value and opt.is_set to be accessed through getters and setters.  I chose to expose the struct and offer getters and setters, but happy to discuss this.","This PR adds a new mongoc_optional_t type (which represents an optional bool) and returns that type for boolean options for versioned API.  I thought through a couple of questions when implementing this:


What about other optional types?  Is it odd that mongoc_optional_t is only for bools?
The only other type I could see us wanting to represent this way is an integer.  Everything else can be pointer-based to indicate NULL-ness.  I think we could implement a mongoc_optional_int_t later on if we wanted to, and we actually may need specifically named types for int32, int64, etc.  Given that, I decided using mongoc_optional_t here would be nicer than mongoc_optional_bool_t.


Is this over-engineered?
Maybe!  We do represent optional booleans in a fair number of places, and I think this little type is a nice way to wrap that up.


Expose the type, or not?
It's our convention in most places to hide struct definitions and allow users to access them only through getters and setters.  However, we lose a lot of the convenience that a mongoc_optional_t offers if we require opt.value and opt.is_set to be accessed through getters and setters.  I chose to expose the struct and offer getters and setters, but happy to discuss this.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,756,2021-03-15T16:06:55Z,2021-03-18T16:32:47Z,2021-03-18T16:32:47Z,MERGED,True,152,28,9,https://github.com/samantharitter,CDRIVER-3918 expose server api options as mongoc_optional_t,2,[],https://github.com/mongodb/mongo-c-driver/pull/756,https://github.com/samantharitter,2,https://github.com/mongodb/mongo-c-driver/pull/756#issuecomment-801181002,"This PR adds a new mongoc_optional_t type (which represents an optional bool) and returns that type for boolean options for versioned API.  I thought through a couple of questions when implementing this:


What about other optional types?  Is it odd that mongoc_optional_t is only for bools?
The only other type I could see us wanting to represent this way is an integer.  Everything else can be pointer-based to indicate NULL-ness.  I think we could implement a mongoc_optional_int_t later on if we wanted to, and we actually may need specifically named types for int32, int64, etc.  Given that, I decided using mongoc_optional_t here would be nicer than mongoc_optional_bool_t.


Is this over-engineered?
Maybe!  We do represent optional booleans in a fair number of places, and I think this little type is a nice way to wrap that up.


Expose the type, or not?
It's our convention in most places to hide struct definitions and allow users to access them only through getters and setters.  However, we lose a lot of the convenience that a mongoc_optional_t offers if we require opt.value and opt.is_set to be accessed through getters and setters.  I chose to expose the struct and offer getters and setters, but happy to discuss this.","Hey @alcaeus this is ready for re-review!  Apologies about the lingering references to strict_set and deprecation_errors_set, there was some code I neglected to push to this branch before opening the PR.  Hopefully the patch will be more green now.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,757,2021-03-16T14:26:58Z,2021-03-25T17:00:10Z,2021-03-25T17:00:13Z,MERGED,True,193,59,6,https://github.com/benjirewis,Sync Versioned API Tests,3,[],https://github.com/mongodb/mongo-c-driver/pull/757,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/757,"CDRIVER-3919
CDRIVER-3920
CDRIVER-3932
Syncs versioned API spec tests to add a new test for abortTransaction and only run tests on 4.9+. Also removes skipReason on estimatedDocumentCount test.
I will not merge this until PR #753 to include apiVersion in handshakes and heartbeats is merged, and the ""latest"" server version on Evergreen includes this commit.","CDRIVER-3919
CDRIVER-3920
CDRIVER-3932
Syncs versioned API spec tests to add a new test for abortTransaction and only run tests on 4.9+. Also removes skipReason on estimatedDocumentCount test.
I will not merge this until PR #753 to include apiVersion in handshakes and heartbeats is merged, and the ""latest"" server version on Evergreen includes this commit.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,758,2021-03-16T18:07:10Z,2021-03-23T21:04:24Z,2021-03-23T21:04:27Z,MERGED,True,1909,26,102,https://github.com/benjirewis,CDRIVER-3905 Change estimatedDocumentCount to use collStats on 4.9+,14,[],https://github.com/mongodb/mongo-c-driver/pull/758,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/758,"CDRIVER-3905
Test changes in first three commits, code changes in remaining three.
Updates mongoc_collection_estimated_document_count to use an aggregate with the $collStats pipeline stage when running against server version 4.9 or higher. Adds a new wire version macro for wire version 12.
Adds new spec tests for estimatedDocumentCount under crud/unified and moves old CRUD tests to crud/legacy. Updates unified test runner accordingly. Updates retryable reads and versioned API spec tests involving estimatedDocumentCount.","CDRIVER-3905
Test changes in first three commits, code changes in remaining three.
Updates mongoc_collection_estimated_document_count to use an aggregate with the $collStats pipeline stage when running against server version 4.9 or higher. Adds a new wire version macro for wire version 12.
Adds new spec tests for estimatedDocumentCount under crud/unified and moves old CRUD tests to crud/legacy. Updates unified test runner accordingly. Updates retryable reads and versioned API spec tests involving estimatedDocumentCount.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,758,2021-03-16T18:07:10Z,2021-03-23T21:04:24Z,2021-03-23T21:04:27Z,MERGED,True,1909,26,102,https://github.com/benjirewis,CDRIVER-3905 Change estimatedDocumentCount to use collStats on 4.9+,14,[],https://github.com/mongodb/mongo-c-driver/pull/758,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/758#issuecomment-802645318,"CDRIVER-3905
Test changes in first three commits, code changes in remaining three.
Updates mongoc_collection_estimated_document_count to use an aggregate with the $collStats pipeline stage when running against server version 4.9 or higher. Adds a new wire version macro for wire version 12.
Adds new spec tests for estimatedDocumentCount under crud/unified and moves old CRUD tests to crud/legacy. Updates unified test runner accordingly. Updates retryable reads and versioned API spec tests involving estimatedDocumentCount.",You're a victim of your own success - want to include changes from mongodb/specifications#933 in this PR?,True,{'ROCKET': ['https://github.com/benjirewis']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,758,2021-03-16T18:07:10Z,2021-03-23T21:04:24Z,2021-03-23T21:04:27Z,MERGED,True,1909,26,102,https://github.com/benjirewis,CDRIVER-3905 Change estimatedDocumentCount to use collStats on 4.9+,14,[],https://github.com/mongodb/mongo-c-driver/pull/758,https://github.com/benjirewis,3,https://github.com/mongodb/mongo-c-driver/pull/758#issuecomment-805203931,"CDRIVER-3905
Test changes in first three commits, code changes in remaining three.
Updates mongoc_collection_estimated_document_count to use an aggregate with the $collStats pipeline stage when running against server version 4.9 or higher. Adds a new wire version macro for wire version 12.
Adds new spec tests for estimatedDocumentCount under crud/unified and moves old CRUD tests to crud/legacy. Updates unified test runner accordingly. Updates retryable reads and versioned API spec tests involving estimatedDocumentCount.","I can't remove the skipReason just yet, as the ""latest"" server version hasn't updated on Evergreen to include this commit. So, I'll do CDRIVER-3932 in the larger versioned API tests sync PR.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,759,2021-03-17T12:02:58Z,2021-03-25T07:36:49Z,2021-03-25T07:36:52Z,MERGED,True,117,4,3,https://github.com/alcaeus,CDRIVER-3792 Support parsing $uuid as extended JSON,8,[],https://github.com/mongodb/mongo-c-driver/pull/759,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/759,"CDRIVER-3792
This adds support for parsing UUIDs from extended JSON into BSON. To avoid using a UUID library, this uses sscanf to first validate the UUID and extract the data skipping hyphens, then decodes the hex values into the format understood by the BSON binary type. Any malformed UUID (e.g. wrong length, wrong position of hyphens, etc.) is rejected.","CDRIVER-3792
This adds support for parsing UUIDs from extended JSON into BSON. To avoid using a UUID library, this uses sscanf to first validate the UUID and extract the data skipping hyphens, then decodes the hex values into the format understood by the BSON binary type. Any malformed UUID (e.g. wrong length, wrong position of hyphens, etc.) is rejected.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,760,2021-03-17T19:22:53Z,2021-03-17T20:36:06Z,2021-03-17T20:36:13Z,MERGED,True,22,19,1,https://github.com/benjirewis,CDRIVER-3931 Check for null document in bson parser parse,1,[],https://github.com/mongodb/mongo-c-driver/pull/760,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/760,"CDRIVER-3931
The bson test util bson_parser_parse can run BSON_FOREACH on a NULL document causing an error in BSON_ASSERT. Adds a check to verify the document isn't NULL.","CDRIVER-3931
The bson test util bson_parser_parse can run BSON_FOREACH on a NULL document causing an error in BSON_ASSERT. Adds a check to verify the document isn't NULL.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,761,2021-03-18T13:55:33Z,2021-03-18T15:46:59Z,2021-03-18T15:46:59Z,MERGED,True,2,0,1,https://github.com/samantharitter,fix leaks in unified test runner,1,[],https://github.com/mongodb/mongo-c-driver/pull/761,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/761,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,762,2021-03-18T16:36:37Z,2021-04-28T17:17:04Z,2021-04-28T17:17:05Z,CLOSED,False,807,750,60,https://github.com/samantharitter,CDRIVER-3917 route all test client and client_pool creation through test framework,4,[],https://github.com/mongodb/mongo-c-driver/pull/762,https://github.com/samantharitter,1,https://github.com/mongodb/mongo-c-driver/pull/762,"This PR renames some of the test framework methods around client and client_pool creation so they match the signatures of the mongoc_client_new and mongoc_client_pool_new methods.  It also creates new methods in the test framework for client and pool creation, so that all clients and pools in our tests are created through the framework.
The framework stub methods right now have simple pass through to mongoc_client_new and mongoc_client_pool_new, so these changes should have no behavior changes in our tests.  The next piece of work for CDRIVER-3917 will be to change these stub methods to add in versioned API information to client and pool creation.","This PR renames some of the test framework methods around client and client_pool creation so they match the signatures of the mongoc_client_new and mongoc_client_pool_new methods.  It also creates new methods in the test framework for client and pool creation, so that all clients and pools in our tests are created through the framework.
The framework stub methods right now have simple pass through to mongoc_client_new and mongoc_client_pool_new, so these changes should have no behavior changes in our tests.  The next piece of work for CDRIVER-3917 will be to change these stub methods to add in versioned API information to client and pool creation.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,762,2021-03-18T16:36:37Z,2021-04-28T17:17:04Z,2021-04-28T17:17:05Z,CLOSED,False,807,750,60,https://github.com/samantharitter,CDRIVER-3917 route all test client and client_pool creation through test framework,4,[],https://github.com/mongodb/mongo-c-driver/pull/762,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/762#issuecomment-828631709,"This PR renames some of the test framework methods around client and client_pool creation so they match the signatures of the mongoc_client_new and mongoc_client_pool_new methods.  It also creates new methods in the test framework for client and pool creation, so that all clients and pools in our tests are created through the framework.
The framework stub methods right now have simple pass through to mongoc_client_new and mongoc_client_pool_new, so these changes should have no behavior changes in our tests.  The next piece of work for CDRIVER-3917 will be to change these stub methods to add in versioned API information to client and pool creation.",Being done in #787.,True,{'THUMBS_UP': ['https://github.com/benjirewis']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,763,2021-03-23T18:44:53Z,2021-03-24T20:26:47Z,2021-03-24T20:26:50Z,MERGED,True,144,0,2,https://github.com/benjirewis,CDRIVER-3215 Assert transaction state does not change on client-side error,4,[],https://github.com/mongodb/mongo-c-driver/pull/763,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/763,"CDRIVER-3215
Adds new spec test to assert that transaction state does not move from both ""starting"" or ""in progress"" when a client-side error is encountered.
Updates test runner to support ""assertSessionTransactionState"" described here.","CDRIVER-3215
Adds new spec test to assert that transaction state does not move from both ""starting"" or ""in progress"" when a client-side error is encountered.
Updates test runner to support ""assertSessionTransactionState"" described here.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,764,2021-03-23T18:47:28Z,2021-03-24T20:00:35Z,2021-03-24T20:02:07Z,MERGED,True,22,22,2,https://github.com/rcsanchez97,CDRIVER-3908 fix failing rpm-package-build task,1,[],https://github.com/mongodb/mongo-c-driver/pull/764,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/764,Evergreen patch build: https://spruce.mongodb.com/version/605a32a23066152e871a60c5/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Evergreen patch build: https://spruce.mongodb.com/version/605a32a23066152e871a60c5/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,765,2021-03-24T07:57:47Z,2021-03-25T14:59:51Z,2021-03-25T14:59:54Z,MERGED,True,228,8,15,https://github.com/alcaeus,Update versioned API getters,7,[],https://github.com/mongodb/mongo-c-driver/pull/765,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/765,"This PR collects a few fixes that were necessary to get the PHP changes running after the introduction of mongoc_optional_t:

Arguments for mongoc_optional_t getters were not marked as const
Arguments for mongoc_server_api_t getters were not marked as const
mongoc_server_api_get_strict had a wrong name
Added mongoc_server_api_get_version to retrieve the mongoc_server_api_version_t
Added documentation for mongoc_server_api_get_*
Added documentation for mongoc_optional_t.","This PR collects a few fixes that were necessary to get the PHP changes running after the introduction of mongoc_optional_t:

Arguments for mongoc_optional_t getters were not marked as const
Arguments for mongoc_server_api_t getters were not marked as const
mongoc_server_api_get_strict had a wrong name
Added mongoc_server_api_get_version to retrieve the mongoc_server_api_version_t
Added documentation for mongoc_server_api_get_*
Added documentation for mongoc_optional_t.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,766,2021-03-24T18:06:49Z,2021-03-31T17:41:16Z,2021-03-31T17:41:19Z,MERGED,True,4,6,2,https://github.com/benjirewis,CDRIVER-3933 Reinit reply in edc for NamespaceNotFound,2,[],https://github.com/mongodb/mongo-c-driver/pull/766,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/766,"CDRIVER-3933
Destroys and re-initializes reply in mongoc_collection_estimated_document_count in the case of a NamespaceNotFound error caused by an aggregate on a non-existent collection. Also removes the workaround for 3933 in operation.c.
Per the spec, drivers are required to swallow a NamespaceNotFound error and return a count of 0. While the bson_error_t was being unset, and a count of 0 was being returned, reply still housed the error, which is arguably unexpected behavior for the user.","CDRIVER-3933
Destroys and re-initializes reply in mongoc_collection_estimated_document_count in the case of a NamespaceNotFound error caused by an aggregate on a non-existent collection. Also removes the workaround for 3933 in operation.c.
Per the spec, drivers are required to swallow a NamespaceNotFound error and return a count of 0. While the bson_error_t was being unset, and a count of 0 was being returned, reply still housed the error, which is arguably unexpected behavior for the user.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,767,2021-03-25T18:43:26Z,2021-04-16T15:46:12Z,2021-04-16T15:46:15Z,MERGED,True,5,12,1,https://github.com/benjirewis,CDRIVER-3924 Ignore RCs when comparing test version strings,2,[],https://github.com/mongodb/mongo-c-driver/pull/767,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/767,"CDRIVER-3924
Ignores the fourth field of version strings in _parse_server_version and test_framework_str_to_version. Updates test_version_cmp to test this behavior.
According to the unified test format spec, we should only consider major, minor and patch when comparing server version strings for testing. Release candidates like ""3.4.0.-49"" should not be distinct from non-rcs like ""3.4.0"".
I think the changes in this PR will also affect tests outside of the unified test format, so let me know if that seems like a problem.","CDRIVER-3924
Ignores the fourth field of version strings in _parse_server_version and test_framework_str_to_version. Updates test_version_cmp to test this behavior.
According to the unified test format spec, we should only consider major, minor and patch when comparing server version strings for testing. Release candidates like ""3.4.0.-49"" should not be distinct from non-rcs like ""3.4.0"".
I think the changes in this PR will also affect tests outside of the unified test format, so let me know if that seems like a problem.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,768,2021-03-30T01:58:08Z,2021-04-01T15:35:54Z,2021-04-01T15:35:54Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,Fix valgrind,1,[],https://github.com/mongodb/mongo-c-driver/pull/768,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/768,"This PR fixes a conditional jump warning in valgrind if an uninitialized bson_error_t is passed as the output argument for mongoc_collection_estimated_document_count.
This appeared on a C++ patch build while implementing Azure/GCP support.
There is a test coverage of running mongoc_collection_estimated_document_count against a live server and passing an uninitialized bson_error_t in test_estimated_document_count_live.
This run on the waterfall ran it against a 4.9.0 server. There was a successful run after estimated document count was merged. This is the log line.
I am not sure why the conditional jump was not caught by valgrind in that task.","This PR fixes a conditional jump warning in valgrind if an uninitialized bson_error_t is passed as the output argument for mongoc_collection_estimated_document_count.
This appeared on a C++ patch build while implementing Azure/GCP support.
There is a test coverage of running mongoc_collection_estimated_document_count against a live server and passing an uninitialized bson_error_t in test_estimated_document_count_live.
This run on the waterfall ran it against a 4.9.0 server. There was a successful run after estimated document count was merged. This is the log line.
I am not sure why the conditional jump was not caught by valgrind in that task.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,769,2021-03-30T07:32:01Z,2021-04-05T11:07:20Z,2021-04-05T11:07:24Z,MERGED,True,13,6,1,https://github.com/alcaeus,Fix BSON parsing logic in unified test runner,1,[],https://github.com/mongodb/mongo-c-driver/pull/769,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/769,"This PR fixes the failing builds against sharded clusters on latest. The parsing logic doesn't cover all use-cases and fails with an assertion failure:
[2021/03/29 16:49:57.389] /data/mci/b2b314ac4682741d5d35f4b05db75034/mongoc/src/libmongoc/tests/test-conveniences.c:200 bson_iter_bson(): precondition failed: BSON_ITER_HOLDS_DOCUMENT (iter) || BSON_ITER_HOLDS_ARRAY (iter)
[2021/03/29 16:49:57.389] 2021/03/29 16:49:57.0389: [ 8121]:    ERROR:       mongoc: abort handler entered
[2021/03/29 16:49:57.389] ****************************** BEGIN_MONGOC_ERROR ******************************
[2021/03/29 16:49:57.389] test info:
[2021/03/29 16:49:57.389] [/data/mci/b2b314ac4682741d5d35f4b05db75034/mongoc/src/libmongoc/tests/unified/runner.c:1438 run_one_test_file()]
[2021/03/29 16:49:57.389] test file: CRUD Api Version 1 (strict)
[2021/03/29 16:49:57.389] [/data/mci/b2b314ac4682741d5d35f4b05db75034/mongoc/src/libmongoc/tests/unified/runner.c:1442 run_one_test_file()]
[2021/03/29 16:49:57.389] running test: distinct appends declared API version
[2021/03/29 16:49:57.389] ******************************* END_MONGOC_ERROR *******************************

The changed logic fixes the test failures. Not sure what causes this error in the Versioned API tests compared to the rest, but this at least fixes it. Note that there are other tests currently failing due to $collStats not being in the latest version on all platforms.","This PR fixes the failing builds against sharded clusters on latest. The parsing logic doesn't cover all use-cases and fails with an assertion failure:
[2021/03/29 16:49:57.389] /data/mci/b2b314ac4682741d5d35f4b05db75034/mongoc/src/libmongoc/tests/test-conveniences.c:200 bson_iter_bson(): precondition failed: BSON_ITER_HOLDS_DOCUMENT (iter) || BSON_ITER_HOLDS_ARRAY (iter)
[2021/03/29 16:49:57.389] 2021/03/29 16:49:57.0389: [ 8121]:    ERROR:       mongoc: abort handler entered
[2021/03/29 16:49:57.389] ****************************** BEGIN_MONGOC_ERROR ******************************
[2021/03/29 16:49:57.389] test info:
[2021/03/29 16:49:57.389] [/data/mci/b2b314ac4682741d5d35f4b05db75034/mongoc/src/libmongoc/tests/unified/runner.c:1438 run_one_test_file()]
[2021/03/29 16:49:57.389] test file: CRUD Api Version 1 (strict)
[2021/03/29 16:49:57.389] [/data/mci/b2b314ac4682741d5d35f4b05db75034/mongoc/src/libmongoc/tests/unified/runner.c:1442 run_one_test_file()]
[2021/03/29 16:49:57.389] running test: distinct appends declared API version
[2021/03/29 16:49:57.389] ******************************* END_MONGOC_ERROR *******************************

The changed logic fixes the test failures. Not sure what causes this error in the Versioned API tests compared to the rest, but this at least fixes it. Note that there are other tests currently failing due to $collStats not being in the latest version on all platforms.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,769,2021-03-30T07:32:01Z,2021-04-05T11:07:20Z,2021-04-05T11:07:24Z,MERGED,True,13,6,1,https://github.com/alcaeus,Fix BSON parsing logic in unified test runner,1,[],https://github.com/mongodb/mongo-c-driver/pull/769,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/769#issuecomment-812635994,"This PR fixes the failing builds against sharded clusters on latest. The parsing logic doesn't cover all use-cases and fails with an assertion failure:
[2021/03/29 16:49:57.389] /data/mci/b2b314ac4682741d5d35f4b05db75034/mongoc/src/libmongoc/tests/test-conveniences.c:200 bson_iter_bson(): precondition failed: BSON_ITER_HOLDS_DOCUMENT (iter) || BSON_ITER_HOLDS_ARRAY (iter)
[2021/03/29 16:49:57.389] 2021/03/29 16:49:57.0389: [ 8121]:    ERROR:       mongoc: abort handler entered
[2021/03/29 16:49:57.389] ****************************** BEGIN_MONGOC_ERROR ******************************
[2021/03/29 16:49:57.389] test info:
[2021/03/29 16:49:57.389] [/data/mci/b2b314ac4682741d5d35f4b05db75034/mongoc/src/libmongoc/tests/unified/runner.c:1438 run_one_test_file()]
[2021/03/29 16:49:57.389] test file: CRUD Api Version 1 (strict)
[2021/03/29 16:49:57.389] [/data/mci/b2b314ac4682741d5d35f4b05db75034/mongoc/src/libmongoc/tests/unified/runner.c:1442 run_one_test_file()]
[2021/03/29 16:49:57.389] running test: distinct appends declared API version
[2021/03/29 16:49:57.389] ******************************* END_MONGOC_ERROR *******************************

The changed logic fixes the test failures. Not sure what causes this error in the Versioned API tests compared to the rest, but this at least fixes it. Note that there are other tests currently failing due to $collStats not being in the latest version on all platforms.","a formatting error from printing a long int as a long long int.

That looks unrelated to this patch, so I think we can fix it separately. The compile-tracing task logged:
[2021/03/30 09:15:44.114] /data/mci/ec7b5eb865b95270aa44da1a30d8c999/mongoc/src/libmongoc/src/mongoc/mongoc-uri.c:2854:10: error: format '%lld' expects argument of type 'long long int', but argument 6 has type 'int64_t {aka long int}' [-Werror=format=]
[2021/03/30 09:15:44.114]           ""Invalid \""%s\"" of %lld: must be a non-negative integer"",",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,770,2021-03-30T08:41:42Z,2021-04-05T11:06:28Z,2021-04-05T11:06:32Z,MERGED,True,27,13,6,https://github.com/alcaeus,CDRIVER-3940 Fix missing versioned API options in server monitor,4,[],https://github.com/mongodb/mongo-c-driver/pull/770,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/770,"CDRIVER-3940
The server monitor assembles its own isMaster command without using the topology scanner. This logic was missing the Versioned API fields, causing errors in background monitoring when connected to servers with requireApiVersion enabled.
This PR changes the logic to always fetch the hello command from the topology scanner. To make the distinction easier, I renamed _mongoc_topology_scanner_get_ismaster to _mongoc_topology_scanner_get_handshake_cmd and added a new _mongoc_topology_scanner_get_hello_cmd to return the base command without additional handshake data. This contains Versioned API fields, and we append the necessary fields for awaitable hello.
Note that this logic will likely have to change again in the near future, as the server monitor needs to know whether a server supports hello or if it needs to revert to isMaster. Versioned API will also bring more changes to the handshake process.","CDRIVER-3940
The server monitor assembles its own isMaster command without using the topology scanner. This logic was missing the Versioned API fields, causing errors in background monitoring when connected to servers with requireApiVersion enabled.
This PR changes the logic to always fetch the hello command from the topology scanner. To make the distinction easier, I renamed _mongoc_topology_scanner_get_ismaster to _mongoc_topology_scanner_get_handshake_cmd and added a new _mongoc_topology_scanner_get_hello_cmd to return the base command without additional handshake data. This contains Versioned API fields, and we append the necessary fields for awaitable hello.
Note that this logic will likely have to change again in the near future, as the server monitor needs to know whether a server supports hello or if it needs to revert to isMaster. Versioned API will also bring more changes to the handshake process.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,771,2021-03-31T00:13:15Z,2021-04-01T19:55:10Z,2021-04-01T19:55:17Z,MERGED,True,24,0,2,https://github.com/rcsanchez97,CDRIVER-3861 upload deb/rpm packages to deterministic location,1,[],https://github.com/mongodb/mongo-c-driver/pull/771,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/771,Evergreen patch build: https://spruce.mongodb.com/version/6063a6510305b93f1b789de0/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Evergreen patch build: https://spruce.mongodb.com/version/6063a6510305b93f1b789de0/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,771,2021-03-31T00:13:15Z,2021-04-01T19:55:10Z,2021-04-01T19:55:17Z,MERGED,True,24,0,2,https://github.com/rcsanchez97,CDRIVER-3861 upload deb/rpm packages to deterministic location,1,[],https://github.com/mongodb/mongo-c-driver/pull/771,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/771#issuecomment-811158389,Evergreen patch build: https://spruce.mongodb.com/version/6063a6510305b93f1b789de0/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,cc @prashantmital can you confirm that the Debian packages attached to the Evergreen patch build would work for you?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,771,2021-03-31T00:13:15Z,2021-04-01T19:55:10Z,2021-04-01T19:55:17Z,MERGED,True,24,0,2,https://github.com/rcsanchez97,CDRIVER-3861 upload deb/rpm packages to deterministic location,1,[],https://github.com/mongodb/mongo-c-driver/pull/771,https://github.com/prashantmital,3,https://github.com/mongodb/mongo-c-driver/pull/771#issuecomment-811384066,Evergreen patch build: https://spruce.mongodb.com/version/6063a6510305b93f1b789de0/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,"I'm a bit confused by the patch build - which variant should I be looking at?
Looking at the S3 path to which artifacts are being uploaded, I am not sure this would really work for the usecase I had in mind. The issue is the version_id and build_id of the evergreen build are basically random but they are used to uniquely identify the artifact I am interested in.
I was hoping to be able to grab the built libbson binaries at a URL solely determined by:

a platform identifier
a revision tag (commit/tag)

For example, libmongocrypt for a given REVISION for rhel-62 can be grabbed at:
https://s3.amazonaws.com/mciuploads/libmongocrypt/rhel-62-64-bit/master/${REVISION}/libmongocrypt.tar.gz",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,771,2021-03-31T00:13:15Z,2021-04-01T19:55:10Z,2021-04-01T19:55:17Z,MERGED,True,24,0,2,https://github.com/rcsanchez97,CDRIVER-3861 upload deb/rpm packages to deterministic location,1,[],https://github.com/mongodb/mongo-c-driver/pull/771,https://github.com/rcsanchez97,4,https://github.com/mongodb/mongo-c-driver/pull/771#issuecomment-811390030,Evergreen patch build: https://spruce.mongodb.com/version/6063a6510305b93f1b789de0/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,"If you are looking at the `Files` tab of one of the tasks in the build,
the second file (`deb.tar.gz` or `rpm.tar.gz`, depending on which task
you are viewing) is the one that has been added.  The first file is
going to a 'latest' location and so may not be the same file when
retrieved multiple times.  The second file is placed at a location that
ensures it will not be overwritten by a new artifact later on, following
the pattern used in libmongocrypt.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,771,2021-03-31T00:13:15Z,2021-04-01T19:55:10Z,2021-04-01T19:55:17Z,MERGED,True,24,0,2,https://github.com/rcsanchez97,CDRIVER-3861 upload deb/rpm packages to deterministic location,1,[],https://github.com/mongodb/mongo-c-driver/pull/771,https://github.com/prashantmital,5,https://github.com/mongodb/mongo-c-driver/pull/771#issuecomment-811398199,Evergreen patch build: https://spruce.mongodb.com/version/6063a6510305b93f1b789de0/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Ok that sounds like it should work but I still don't know what task I need to be looking at.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,771,2021-03-31T00:13:15Z,2021-04-01T19:55:10Z,2021-04-01T19:55:17Z,MERGED,True,24,0,2,https://github.com/rcsanchez97,CDRIVER-3861 upload deb/rpm packages to deterministic location,1,[],https://github.com/mongodb/mongo-c-driver/pull/771,https://github.com/kevinAlbs,6,https://github.com/mongodb/mongo-c-driver/pull/771#issuecomment-811999739,Evergreen patch build: https://spruce.mongodb.com/version/6063a6510305b93f1b789de0/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,The debian-package-build task: https://spruce.mongodb.com/task/mongo_c_driver_packaging_debian_package_build_patch_6bacf922669ab780fa5fb37e9c561b8709e27e29_6063a6510305b93f1b789de0_21_03_30_22_29_38/files?execution=0,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,772,2021-03-31T07:24:00Z,2021-04-02T07:10:50Z,2021-04-02T07:10:50Z,MERGED,True,5,0,3,https://github.com/alcaeus,Lock topology mutex before setting server API,1,[],https://github.com/mongodb/mongo-c-driver/pull/772,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/772,"Calling _mongoc_topology_scanner_set_server_api resets ismaster_cmd_with_handshake, which requires obtaining a lock on the topology.","Calling _mongoc_topology_scanner_set_server_api resets ismaster_cmd_with_handshake, which requires obtaining a lock on the topology.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,773,2021-03-31T17:13:22Z,2021-04-12T20:47:19Z,2021-04-12T20:47:22Z,MERGED,True,176,28,8,https://github.com/benjirewis,CDRIVER-3917 Run versioned API tests in Evergreen,5,[],https://github.com/mongodb/mongo-c-driver/pull/773,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/773,"CDRIVER-3917
Adds a new Evergreen build variant for versioned API with three tasks. The first is debug-compile-nosasl-openssl to compile a test-libmongoc. The second is test-versioned-api to run versioned API tests against a 4.9.0 server with requireApiVersion=1. The third is test-versioned-api-accept-version-two to run versioned API tests against a 4.9.0 server with enableTestCommands=1, acceptApiVersion2=1 and requireApiVersion=0.
These new tests (see example patch here), will continue to fail until CDRIVER-3940 is merged.
We might want to update the C driver project config in Evergreen to run Versioned API tasks on each patch, too.","CDRIVER-3917
Adds a new Evergreen build variant for versioned API with three tasks. The first is debug-compile-nosasl-openssl to compile a test-libmongoc. The second is test-versioned-api to run versioned API tests against a 4.9.0 server with requireApiVersion=1. The third is test-versioned-api-accept-version-two to run versioned API tests against a 4.9.0 server with enableTestCommands=1, acceptApiVersion2=1 and requireApiVersion=0.
These new tests (see example patch here), will continue to fail until CDRIVER-3940 is merged.
We might want to update the C driver project config in Evergreen to run Versioned API tasks on each patch, too.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,773,2021-03-31T17:13:22Z,2021-04-12T20:47:19Z,2021-04-12T20:47:22Z,MERGED,True,176,28,8,https://github.com/benjirewis,CDRIVER-3917 Run versioned API tests in Evergreen,5,[],https://github.com/mongodb/mongo-c-driver/pull/773,https://github.com/benjirewis,2,https://github.com/mongodb/mongo-c-driver/pull/773#issuecomment-812111479,"CDRIVER-3917
Adds a new Evergreen build variant for versioned API with three tasks. The first is debug-compile-nosasl-openssl to compile a test-libmongoc. The second is test-versioned-api to run versioned API tests against a 4.9.0 server with requireApiVersion=1. The third is test-versioned-api-accept-version-two to run versioned API tests against a 4.9.0 server with enableTestCommands=1, acceptApiVersion2=1 and requireApiVersion=0.
These new tests (see example patch here), will continue to fail until CDRIVER-3940 is merged.
We might want to update the C driver project config in Evergreen to run Versioned API tasks on each patch, too.","As mentioned in the PR for CDRIVER-3935, I needed to modify files in evergreen_config_lib instead of modifying config.yml directly. This required adding evergreen_config_generator locally, which won't appear as a change once I rebase on #774.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,774,2021-03-31T18:28:42Z,2021-04-01T20:07:36Z,2021-04-01T20:07:38Z,MERGED,True,422,14,6,https://github.com/benjirewis,CDRIVER-3935 Lower Evergreen batchtimes,2,[],https://github.com/mongodb/mongo-c-driver/pull/774,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/774,"CDRIVER-3935
Lowers the batchtime of the OCSP tests in Evergreen to 10080, or one week.
The OCSP tests in Evergreen currently have a batchtime of 20180, meaning they run only every two weeks. This is not ideal, as many commits can happen in the span of two weeks that could break the OCSP tests.
We could lower the batchtime to something like 4 days, too. Then, we'd probably want to lower the batchtimes of the TSAN and Valgrind tests, as well.","CDRIVER-3935
Lowers the batchtime of the OCSP tests in Evergreen to 10080, or one week.
The OCSP tests in Evergreen currently have a batchtime of 20180, meaning they run only every two weeks. This is not ideal, as many commits can happen in the span of two weeks that could break the OCSP tests.
We could lower the batchtime to something like 4 days, too. Then, we'd probably want to lower the batchtimes of the TSAN and Valgrind tests, as well.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,774,2021-03-31T18:28:42Z,2021-04-01T20:07:36Z,2021-04-01T20:07:38Z,MERGED,True,422,14,6,https://github.com/benjirewis,CDRIVER-3935 Lower Evergreen batchtimes,2,[],https://github.com/mongodb/mongo-c-driver/pull/774,https://github.com/bazile-clyde,2,https://github.com/mongodb/mongo-c-driver/pull/774#issuecomment-811999704,"CDRIVER-3935
Lowers the batchtime of the OCSP tests in Evergreen to 10080, or one week.
The OCSP tests in Evergreen currently have a batchtime of 20180, meaning they run only every two weeks. This is not ideal, as many commits can happen in the span of two weeks that could break the OCSP tests.
We could lower the batchtime to something like 4 days, too. Then, we'd probably want to lower the batchtimes of the TSAN and Valgrind tests, as well.",". Then, we'd probably want to lower the batchtimes of the TSAN and Valgrind tests, as well.

I wouldn't be opposed to lowering the batch times of TSAN and Valgrind tests to daily, though I'm not sure why they were weekly in the first place. @kevinAlbs thoughts? It looks like this was done by you in CDRIVER-748 (PR)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,775,2021-04-02T21:07:17Z,2021-04-02T21:48:54Z,2021-04-02T21:49:15Z,MERGED,True,49,39,4,https://github.com/rcsanchez97,Fix packaging r1.17,3,[],https://github.com/mongodb/mongo-c-driver/pull/775,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/775,Evergreen patch build: https://spruce.mongodb.com/version/60678617c9ec445641c32e9c/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Evergreen patch build: https://spruce.mongodb.com/version/60678617c9ec445641c32e9c/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,776,2021-04-02T21:07:34Z,2021-04-02T21:49:54Z,2021-04-02T21:50:00Z,MERGED,True,8,15,3,https://github.com/rcsanchez97,Fix packaging,3,[],https://github.com/mongodb/mongo-c-driver/pull/776,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/776,Evergreen patch build: https://spruce.mongodb.com/version/6067864dc9ec445641c32eed/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Evergreen patch build: https://spruce.mongodb.com/version/6067864dc9ec445641c32eed/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,777,2021-04-09T15:14:04Z,2021-04-19T15:32:54Z,2021-04-19T15:32:57Z,MERGED,True,1,1,1,https://github.com/jmikola,CDRIVER-3951 Use PRId64 format specifier for int64_t,1,[],https://github.com/mongodb/mongo-c-driver/pull/777,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/777,https://jira.mongodb.org/browse/CDRIVER-3951,https://jira.mongodb.org/browse/CDRIVER-3951,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,778,2021-04-17T00:41:09Z,2021-09-02T13:45:32Z,2021-09-02T13:45:32Z,CLOSED,False,1,1,1,https://github.com/esquerbatua,Improve documentation in mongoc_stream_file_new.rst regarding the return value,1,[],https://github.com/mongodb/mongo-c-driver/pull/778,https://github.com/esquerbatua,1,https://github.com/mongodb/mongo-c-driver/pull/778,Fix return struct of fn mongoc_stream_file_new,Fix return struct of fn mongoc_stream_file_new,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,778,2021-04-17T00:41:09Z,2021-09-02T13:45:32Z,2021-09-02T13:45:32Z,CLOSED,False,1,1,1,https://github.com/esquerbatua,Improve documentation in mongoc_stream_file_new.rst regarding the return value,1,[],https://github.com/mongodb/mongo-c-driver/pull/778,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/778#issuecomment-824962491,Fix return struct of fn mongoc_stream_file_new,"Thank you for the contribution @esquerbatua! I believe the documentation for mongoc_stream_file_new is correct as-is. The public header returns a mongoc_stream_t*: 
  
    
      mongo-c-driver/src/libmongoc/src/mongoc/mongoc-stream-file.h
    
    
         Line 32
      in
      c64caa4
    
  
  
    

        
          
           MONGOC_EXPORT (mongoc_stream_t *) 
        
    
  

 (though the underlying implementation is a mongoc_stream_file_t*).",True,{'THUMBS_UP': ['https://github.com/esquerbatua']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,779,2021-04-17T02:31:49Z,2021-04-20T14:25:47Z,2021-04-20T14:25:51Z,MERGED,True,4,4,3,https://github.com/jmikola,CDRIVER-3958 add trailing space after base64 JSON field,1,[],https://github.com/mongodb/mongo-c-driver/pull/779,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/779,https://jira.mongodb.org/browse/CDRIVER-3958,https://jira.mongodb.org/browse/CDRIVER-3958,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,779,2021-04-17T02:31:49Z,2021-04-20T14:25:47Z,2021-04-20T14:25:51Z,MERGED,True,4,4,3,https://github.com/jmikola,CDRIVER-3958 add trailing space after base64 JSON field,1,[],https://github.com/mongodb/mongo-c-driver/pull/779,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/779#issuecomment-822625292,https://jira.mongodb.org/browse/CDRIVER-3958,"Some of the build failures report:

error: expected success, but got error: stage $collStats is not allowed with 'apiStrict: true' in API Version 1

That may be related to DRIVERS-1437, although that's linked to CDRIVER-3905, which is already resolved.
Edit: @benjirewis pointed out that this is likely due to outdated server binaries on the build hosts (CDRIVER-3946).",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,780,2021-04-19T21:45:32Z,2021-04-22T16:58:28Z,2021-04-22T16:58:28Z,MERGED,True,7,4,2,https://github.com/benjirewis,CDRIVER-3953 Replace acceptAPIVersion2 with acceptApiVersion2,1,[],https://github.com/mongodb/mongo-c-driver/pull/780,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/780,"CDRIVER-3953
The server changed the parameter acceptAPIVersion2 to acceptApiVersion2. Updates spec test runOnRequirement of test-commands-deprecation-errors and our local copy of the verioned-api-testing.json server configuration to reflect this.
Note that the server commit renaming acceptAPIVersion2 will not be available until we upgrade to Ubuntu 18.04. Until then, there might be a setup failure in versioned API tests (setting acceptApiVersion2=1 when only acceptAPIVersion2=1 is accepted).","CDRIVER-3953
The server changed the parameter acceptAPIVersion2 to acceptApiVersion2. Updates spec test runOnRequirement of test-commands-deprecation-errors and our local copy of the verioned-api-testing.json server configuration to reflect this.
Note that the server commit renaming acceptAPIVersion2 will not be available until we upgrade to Ubuntu 18.04. Until then, there might be a setup failure in versioned API tests (setting acceptApiVersion2=1 when only acceptAPIVersion2=1 is accepted).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,781,2021-04-21T14:41:42Z,2021-04-23T15:01:53Z,2021-04-23T15:02:33Z,MERGED,True,586,14,3,https://github.com/rcsanchez97,CDRIVER-3957 vendor Fedora RPM spec file,1,[],https://github.com/mongodb/mongo-c-driver/pull/781,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/781,Single-task patch build: https://spruce.mongodb.com/version/607f455d1e2d17692fd36881/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Single-task patch build: https://spruce.mongodb.com/version/607f455d1e2d17692fd36881/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,782,2021-04-21T16:23:21Z,2021-04-22T15:57:10Z,2021-04-22T15:57:13Z,MERGED,True,42,8,3,https://github.com/jmikola,Add more build artifacts to gitignore,1,[],https://github.com/mongodb/mongo-c-driver/pull/782,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/782,This also reorganizes the gitignore for libbson a bit.,This also reorganizes the gitignore for libbson a bit.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,783,2021-04-21T16:26:07Z,2021-04-26T17:00:06Z,2021-04-26T17:00:09Z,MERGED,True,543,712,38,https://github.com/jmikola,"CDRIVER-3949, CDRIVER-3963, CDRIVER-3966 aborting txn unpins session",2,[],https://github.com/mongodb/mongo-c-driver/pull/783,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/783,"https://jira.mongodb.org/browse/CDRIVER-3949
https://jira.mongodb.org/browse/CDRIVER-3963
https://jira.mongodb.org/browse/CDRIVER-3966
There appear to be numerous changes to legacy transaction tests, which leads me to believe libmongoc hadn't been synced in some time. For reference e728dfb/source/transactions/tests is the state of legacy transaction tests before they were moved into a legacy/ sub-directory. Some of the changes there go back more than a year.","https://jira.mongodb.org/browse/CDRIVER-3949
https://jira.mongodb.org/browse/CDRIVER-3963
https://jira.mongodb.org/browse/CDRIVER-3966
There appear to be numerous changes to legacy transaction tests, which leads me to believe libmongoc hadn't been synced in some time. For reference e728dfb/source/transactions/tests is the state of legacy transaction tests before they were moved into a legacy/ sub-directory. Some of the changes there go back more than a year.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,783,2021-04-21T16:26:07Z,2021-04-26T17:00:06Z,2021-04-26T17:00:09Z,MERGED,True,543,712,38,https://github.com/jmikola,"CDRIVER-3949, CDRIVER-3963, CDRIVER-3966 aborting txn unpins session",2,[],https://github.com/mongodb/mongo-c-driver/pull/783,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/783#issuecomment-824409823,"https://jira.mongodb.org/browse/CDRIVER-3949
https://jira.mongodb.org/browse/CDRIVER-3963
https://jira.mongodb.org/browse/CDRIVER-3966
There appear to be numerous changes to legacy transaction tests, which leads me to believe libmongoc hadn't been synced in some time. For reference e728dfb/source/transactions/tests is the state of legacy transaction tests before they were moved into a legacy/ sub-directory. Some of the changes there go back more than a year.","I believe the four ASan task failures are expected.
On a separate note, there will likely be another related libmongoc ticket created for DRIVERS-1655 once that is merged. It's up to you if you'd like to sit on this for the time being so we can lump it into this PR.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,784,2021-04-22T11:39:58Z,2021-05-18T08:00:18Z,2021-05-18T08:00:21Z,MERGED,True,1436,1122,49,https://github.com/alcaeus,"CDRIVER-3947 Use ""hello"" command when an API version is declared",23,[],https://github.com/mongodb/mongo-c-driver/pull/784,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/784,"CDRIVER-3947
This changes the topology scanner to use the hello command when an API version is declared on the client. To make this work properly, I had to extend the mock server to not only handle legacy hello commands but also the new hello command.
While making those changes, I changed some of the terminology but didn't make a complete effort, as that's covered by the ""Remove oppressive language"" project.
I also started making changes to the hello autoresponder for mock servers to avoid tests having to specify their own responder for the purpose of checking the hello command body. However, I did not wrap up this refactoring as the diff is already getting large. I'll follow up in a separate PR.","CDRIVER-3947
This changes the topology scanner to use the hello command when an API version is declared on the client. To make this work properly, I had to extend the mock server to not only handle legacy hello commands but also the new hello command.
While making those changes, I changed some of the terminology but didn't make a complete effort, as that's covered by the ""Remove oppressive language"" project.
I also started making changes to the hello autoresponder for mock servers to avoid tests having to specify their own responder for the purpose of checking the hello command body. However, I did not wrap up this refactoring as the diff is already getting large. I'll follow up in a separate PR.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,784,2021-04-22T11:39:58Z,2021-05-18T08:00:18Z,2021-05-18T08:00:21Z,MERGED,True,1436,1122,49,https://github.com/alcaeus,"CDRIVER-3947 Use ""hello"" command when an API version is declared",23,[],https://github.com/mongodb/mongo-c-driver/pull/784,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/784#issuecomment-837050850,"CDRIVER-3947
This changes the topology scanner to use the hello command when an API version is declared on the client. To make this work properly, I had to extend the mock server to not only handle legacy hello commands but also the new hello command.
While making those changes, I changed some of the terminology but didn't make a complete effort, as that's covered by the ""Remove oppressive language"" project.
I also started making changes to the hello autoresponder for mock servers to avoid tests having to specify their own responder for the purpose of checking the hello command body. However, I did not wrap up this refactoring as the diff is already getting large. I'll follow up in a separate PR.",Rebased to account for CDRIVER-3954; the entire Versioned API test suite still passes.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,784,2021-04-22T11:39:58Z,2021-05-18T08:00:18Z,2021-05-18T08:00:21Z,MERGED,True,1436,1122,49,https://github.com/alcaeus,"CDRIVER-3947 Use ""hello"" command when an API version is declared",23,[],https://github.com/mongodb/mongo-c-driver/pull/784,https://github.com/alcaeus,3,https://github.com/mongodb/mongo-c-driver/pull/784#issuecomment-838355307,"CDRIVER-3947
This changes the topology scanner to use the hello command when an API version is declared on the client. To make this work properly, I had to extend the mock server to not only handle legacy hello commands but also the new hello command.
While making those changes, I changed some of the terminology but didn't make a complete effort, as that's covered by the ""Remove oppressive language"" project.
I also started making changes to the hello autoresponder for mock servers to avoid tests having to specify their own responder for the purpose of checking the hello command body. However, I did not wrap up this refactoring as the diff is already getting large. I'll follow up in a separate PR.","I'm observing failures in tests I added in this PR related to CDRIVER-3934, so I'll investigate those and then put the PR up for another review.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,784,2021-04-22T11:39:58Z,2021-05-18T08:00:18Z,2021-05-18T08:00:21Z,MERGED,True,1436,1122,49,https://github.com/alcaeus,"CDRIVER-3947 Use ""hello"" command when an API version is declared",23,[],https://github.com/mongodb/mongo-c-driver/pull/784,https://github.com/alcaeus,4,https://github.com/mongodb/mongo-c-driver/pull/784#issuecomment-838360814,"CDRIVER-3947
This changes the topology scanner to use the hello command when an API version is declared on the client. To make this work properly, I had to extend the mock server to not only handle legacy hello commands but also the new hello command.
While making those changes, I changed some of the terminology but didn't make a complete effort, as that's covered by the ""Remove oppressive language"" project.
I also started making changes to the hello autoresponder for mock servers to avoid tests having to specify their own responder for the purpose of checking the hello command body. However, I did not wrap up this refactoring as the diff is already getting large. I'll follow up in a separate PR.",Correction: those were tests I added inadvertently. I've created CDRIVER-3993 to sync SDAM spec tests and fix any resulting failures.,True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,784,2021-04-22T11:39:58Z,2021-05-18T08:00:18Z,2021-05-18T08:00:21Z,MERGED,True,1436,1122,49,https://github.com/alcaeus,"CDRIVER-3947 Use ""hello"" command when an API version is declared",23,[],https://github.com/mongodb/mongo-c-driver/pull/784,https://github.com/alcaeus,5,https://github.com/mongodb/mongo-c-driver/pull/784#issuecomment-842925554,"CDRIVER-3947
This changes the topology scanner to use the hello command when an API version is declared on the client. To make this work properly, I had to extend the mock server to not only handle legacy hello commands but also the new hello command.
While making those changes, I changed some of the terminology but didn't make a complete effort, as that's covered by the ""Remove oppressive language"" project.
I also started making changes to the hello autoresponder for mock servers to avoid tests having to specify their own responder for the purpose of checking the hello command body. However, I did not wrap up this refactoring as the diff is already getting large. I'll follow up in a separate PR.","Failures in the versioned_api task are due to changes required for CDRIVER-3974, which I'll fix in a PR as soon as this is merged.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,785,2021-04-23T16:02:19Z,2021-08-16T19:28:31Z,2021-08-16T19:28:33Z,MERGED,True,193,17,13,https://github.com/jmikola,CDRIVER-3909 topology description copy/destroy methods,5,[],https://github.com/mongodb/mongo-c-driver/pull/785,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/785,https://jira.mongodb.org/browse/CDRIVER-3909,https://jira.mongodb.org/browse/CDRIVER-3909,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,785,2021-04-23T16:02:19Z,2021-08-16T19:28:31Z,2021-08-16T19:28:33Z,MERGED,True,193,17,13,https://github.com/jmikola,CDRIVER-3909 topology description copy/destroy methods,5,[],https://github.com/mongodb/mongo-c-driver/pull/785,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/785#issuecomment-892851909,https://jira.mongodb.org/browse/CDRIVER-3909,@tanlisu: This was just rebased on master. That should help when updating the submodule in mongodb/mongo-php-driver#1244.,True,{'THUMBS_UP': ['https://github.com/tanlisu']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,785,2021-04-23T16:02:19Z,2021-08-16T19:28:31Z,2021-08-16T19:28:33Z,MERGED,True,193,17,13,https://github.com/jmikola,CDRIVER-3909 topology description copy/destroy methods,5,[],https://github.com/mongodb/mongo-c-driver/pull/785,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/785#issuecomment-896927815,https://jira.mongodb.org/browse/CDRIVER-3909,"mongodb/mongo-php-driver#1244 demonstrated this this API works, so I'll merge once CI is green.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,785,2021-04-23T16:02:19Z,2021-08-16T19:28:31Z,2021-08-16T19:28:33Z,MERGED,True,193,17,13,https://github.com/jmikola,CDRIVER-3909 topology description copy/destroy methods,5,[],https://github.com/mongodb/mongo-c-driver/pull/785,https://github.com/jmikola,4,https://github.com/mongodb/mongo-c-driver/pull/785#issuecomment-897123606,https://jira.mongodb.org/browse/CDRIVER-3909,Note: the ASAN failures here appear to be legitimate issues so I'm going to spend some more time on investigating and fixing this. For the time being I'm going to rebase on an earlier libmongoc commit before fdc2de4 to unblock @tanlisu in #785.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,786,2021-04-26T17:05:20Z,2021-04-26T18:06:51Z,2021-04-26T18:07:13Z,MERGED,True,49,0,1,https://github.com/jmikola,CDRIVER-3966 Sync transaction spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/786,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/786,"https://jira.mongodb.org/browse/CDRIVER-3966
Syncs transaction spec tests with mongodb/specifications@ec32686. One change was missed in 2d7938a (#783).
Will merge once CI is green (ignoring ASAN failures).","https://jira.mongodb.org/browse/CDRIVER-3966
Syncs transaction spec tests with mongodb/specifications@ec32686. One change was missed in 2d7938a (#783).
Will merge once CI is green (ignoring ASAN failures).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,786,2021-04-26T17:05:20Z,2021-04-26T18:06:51Z,2021-04-26T18:07:13Z,MERGED,True,49,0,1,https://github.com/jmikola,CDRIVER-3966 Sync transaction spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/786,https://github.com/codecov-commenter,2,https://github.com/mongodb/mongo-c-driver/pull/786#issuecomment-827009012,"https://jira.mongodb.org/browse/CDRIVER-3966
Syncs transaction spec tests with mongodb/specifications@ec32686. One change was missed in 2d7938a (#783).
Will merge once CI is green (ignoring ASAN failures).","Codecov Report

Merging #786 (2d7938a) into master (2d7938a) will not change coverage.
The diff coverage is n/a.


❗ Current head 2d7938a differs from pull request most recent head 8168609. Consider uploading reports for the commit 8168609 to get more accurate results


@@           Coverage Diff           @@
##           master     #786   +/-   ##
=======================================
  Coverage   61.00%   61.00%           
=======================================
  Files         279      279           
  Lines       73735    73735           
=======================================
  Hits        44985    44985           
  Misses      28750    28750           

Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 2d7938a...8168609. Read the comment docs.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,787,2021-04-28T09:20:55Z,2021-05-10T13:22:35Z,2021-05-10T13:22:40Z,MERGED,True,1122,799,71,https://github.com/alcaeus,CDRIVER-3954 Run all integration tests in Versioned API evergreen tests,20,[],https://github.com/mongodb/mongo-c-driver/pull/787,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/787,"This PR includes changes from #762 and adds logic to always set a server API when the corresponding env variable is set. The Versioned API tests are expanded to run all tests to confirm that all commands (including handshake and auth which can't be tested using command monitoring) declare an Api Version.
I'd like to merge this PR before #784 as these tests would provide useful to make sure the driver behaves correctly when using ""hello"" as well.
@kevinAlbs I couldn't figure out how to add the Versioned API tests to the list of tasks run for every PR. Could you please point me in the right direction?","This PR includes changes from #762 and adds logic to always set a server API when the corresponding env variable is set. The Versioned API tests are expanded to run all tests to confirm that all commands (including handshake and auth which can't be tested using command monitoring) declare an Api Version.
I'd like to merge this PR before #784 as these tests would provide useful to make sure the driver behaves correctly when using ""hello"" as well.
@kevinAlbs I couldn't figure out how to add the Versioned API tests to the list of tasks run for every PR. Could you please point me in the right direction?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,787,2021-04-28T09:20:55Z,2021-05-10T13:22:35Z,2021-05-10T13:22:40Z,MERGED,True,1122,799,71,https://github.com/alcaeus,CDRIVER-3954 Run all integration tests in Versioned API evergreen tests,20,[],https://github.com/mongodb/mongo-c-driver/pull/787,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/787#issuecomment-829014652,"This PR includes changes from #762 and adds logic to always set a server API when the corresponding env variable is set. The Versioned API tests are expanded to run all tests to confirm that all commands (including handshake and auth which can't be tested using command monitoring) declare an Api Version.
I'd like to merge this PR before #784 as these tests would provide useful to make sure the driver behaves correctly when using ""hello"" as well.
@kevinAlbs I couldn't figure out how to add the Versioned API tests to the list of tasks run for every PR. Could you please point me in the right direction?",The build failure in the versioned-api tests is due to acceptApiVersion2 not being accepted by the server version being tested (see explanation in #780). The requireApiVersion tests pass.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,788,2021-04-29T10:35:57Z,2021-05-03T11:29:57Z,2021-05-03T11:30:00Z,MERGED,True,21,437,32,https://github.com/alcaeus,CDRIVER-3937 Remove usages of xtrace in build scripts,2,[],https://github.com/mongodb/mongo-c-driver/pull/788,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/788,"CDRIVER-3937
The first commit is necessary as the remote_file is prepended with the project dir automatically. The already generated config.yml was correct, but regenerating broke it without this commit.","CDRIVER-3937
The first commit is necessary as the remote_file is prepended with the project dir automatically. The already generated config.yml was correct, but regenerating broke it without this commit.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,789,2021-04-29T18:39:36Z,2021-04-29T21:50:14Z,2021-07-13T00:29:53Z,MERGED,True,2,0,1,https://github.com/kevinAlbs,document fam reply is empty for w0,1,[],https://github.com/mongodb/mongo-c-driver/pull/789,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/789,"If an unacknowledged write concern is used as an option for a
mongoc_find_and_modify_with_opts, the output reply document is
always empty.","If an unacknowledged write concern is used as an option for a
mongoc_find_and_modify_with_opts, the output reply document is
always empty.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,789,2021-04-29T18:39:36Z,2021-04-29T21:50:14Z,2021-07-13T00:29:53Z,MERGED,True,2,0,1,https://github.com/kevinAlbs,document fam reply is empty for w0,1,[],https://github.com/mongodb/mongo-c-driver/pull/789,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/789#issuecomment-829578165,"If an unacknowledged write concern is used as an option for a
mongoc_find_and_modify_with_opts, the output reply document is
always empty.","LGTM but PR name seems off!

Oops fixed!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,790,2021-05-03T22:15:52Z,2021-05-04T17:22:13Z,2021-05-04T17:22:16Z,MERGED,True,7,6,1,https://github.com/benjirewis,CDRIVER-3942 Bump mongocryptd server selection t/o to 10 seconds,2,[],https://github.com/mongodb/mongo-c-driver/pull/790,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/790,"CDRIVER-3942
Bumps the mongocryptd server selection timeout in client side encryption from 5 seconds to 10 seconds.","CDRIVER-3942
Bumps the mongocryptd server selection timeout in client side encryption from 5 seconds to 10 seconds.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,791,2021-05-06T07:06:19Z,2021-05-10T11:40:25Z,2021-05-10T11:41:13Z,MERGED,True,150,0,3,https://github.com/alcaeus,CDRIVER-3934 Correctly handle network errors during speculative authentication,3,[],https://github.com/mongodb/mongo-c-driver/pull/791,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/791,"CDRIVER-3934
Also adds an assertion to avoid memory access failure that appeared once with VS15","CDRIVER-3934
Also adds an assertion to avoid memory access failure that appeared once with VS15",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,791,2021-05-06T07:06:19Z,2021-05-10T11:40:25Z,2021-05-10T11:41:13Z,MERGED,True,150,0,3,https://github.com/alcaeus,CDRIVER-3934 Correctly handle network errors during speculative authentication,3,[],https://github.com/mongodb/mongo-c-driver/pull/791,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/791#issuecomment-836591202,"CDRIVER-3934
Also adds an assertion to avoid memory access failure that appeared once with VS15","Build failures are unrelated:

asan-ubuntu is failing on master
versioned-api is failing on master
windows-2015 is a ping failure to an atlas cluster (I suspect that one of our evergreen project variables points to the wrong thing).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,791,2021-05-06T07:06:19Z,2021-05-10T11:40:25Z,2021-05-10T11:41:13Z,MERGED,True,150,0,3,https://github.com/alcaeus,CDRIVER-3934 Correctly handle network errors during speculative authentication,3,[],https://github.com/mongodb/mongo-c-driver/pull/791,https://github.com/alcaeus,3,https://github.com/mongodb/mongo-c-driver/pull/791#issuecomment-836592065,"CDRIVER-3934
Also adds an assertion to avoid memory access failure that appeared once with VS15",Cherry-picked into 1.17 in e657c13.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,792,2021-05-18T08:02:42Z,2021-05-21T17:20:02Z,2021-05-21T17:20:06Z,MERGED,True,32,230,5,https://github.com/alcaeus,CDRIVER-3974 Append Versioned API options to all commands,1,[],https://github.com/mongodb/mongo-c-driver/pull/792,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/792,"CDRIVER-3974
This fixes test failures in the versioned_api builds. Other builds against latest will continue to fail due batchSize calculation for getMore resulting in additional getMore calls.","CDRIVER-3974
This fixes test failures in the versioned_api builds. Other builds against latest will continue to fail due batchSize calculation for getMore resulting in additional getMore calls.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,792,2021-05-18T08:02:42Z,2021-05-21T17:20:02Z,2021-05-21T17:20:06Z,MERGED,True,32,230,5,https://github.com/alcaeus,CDRIVER-3974 Append Versioned API options to all commands,1,[],https://github.com/mongodb/mongo-c-driver/pull/792,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/792#issuecomment-843767700,"CDRIVER-3974
This fixes test failures in the versioned_api builds. Other builds against latest will continue to fail due batchSize calculation for getMore resulting in additional getMore calls.","I ran a build with a temporary patch for the cursor/getMore issue: https://spruce.mongodb.com/version/60a3b3f80305b944948f6b9b/tasks. No idea why debug-compile-sspi-winssl failed, but the rest of the tests is stable.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,793,2021-05-19T07:45:46Z,2021-05-20T10:33:02Z,2021-05-20T10:33:04Z,MERGED,True,9,9,4,https://github.com/alcaeus,CDRIVER-4001 Temporarily fix batchSize behaviour for getMore,1,[],https://github.com/mongodb/mongo-c-driver/pull/793,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/793,"CDRIVER-4001
This PR proposes a fix for a number of tests that are currently failing due to slot-based execution (SBE) in the latest 5.0 builds. With SBE enabled we see the server keep the cursor alive when the end of a cursor is reached at the end of a batch. This usually doesn't occur too often, but the getMore command logic replicates the OP_GET_MORE behaviour of reducing the size of the last batch to fetch exactly limit documents. This triggers the unintended server behaviour for every cursor. While neither mandated nor prohibited, this behaviour is somewhat enforced by the command monitoring spec tests.
This PR updates the logic for the getMore command (OP_GET_MORE is unaffected) to always send the intended batch size. These changes can be safely reverted once the server behaviour is fixed, or when a better solution comes around.","CDRIVER-4001
This PR proposes a fix for a number of tests that are currently failing due to slot-based execution (SBE) in the latest 5.0 builds. With SBE enabled we see the server keep the cursor alive when the end of a cursor is reached at the end of a batch. This usually doesn't occur too often, but the getMore command logic replicates the OP_GET_MORE behaviour of reducing the size of the last batch to fetch exactly limit documents. This triggers the unintended server behaviour for every cursor. While neither mandated nor prohibited, this behaviour is somewhat enforced by the command monitoring spec tests.
This PR updates the logic for the getMore command (OP_GET_MORE is unaffected) to always send the intended batch size. These changes can be safely reverted once the server behaviour is fixed, or when a better solution comes around.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,793,2021-05-19T07:45:46Z,2021-05-20T10:33:02Z,2021-05-20T10:33:04Z,MERGED,True,9,9,4,https://github.com/alcaeus,CDRIVER-4001 Temporarily fix batchSize behaviour for getMore,1,[],https://github.com/mongodb/mongo-c-driver/pull/793,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/793#issuecomment-844964945,"CDRIVER-4001
This PR proposes a fix for a number of tests that are currently failing due to slot-based execution (SBE) in the latest 5.0 builds. With SBE enabled we see the server keep the cursor alive when the end of a cursor is reached at the end of a batch. This usually doesn't occur too often, but the getMore command logic replicates the OP_GET_MORE behaviour of reducing the size of the last batch to fetch exactly limit documents. This triggers the unintended server behaviour for every cursor. While neither mandated nor prohibited, this behaviour is somewhat enforced by the command monitoring spec tests.
This PR updates the logic for the getMore command (OP_GET_MORE is unaffected) to always send the intended batch size. These changes can be safely reverted once the server behaviour is fixed, or when a better solution comes around.",Some builds are now failing due to the newer server version no longer rejecting documents with dots and dollars in keys. Will have a separate PR up to fix that.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,794,2021-05-19T12:11:12Z,2021-05-26T18:00:00Z,2021-05-26T18:00:03Z,MERGED,True,1949,2001,127,https://github.com/alcaeus,CDRIVER-3985 Remove Oppressive Terminology From Code,13,[],https://github.com/mongodb/mongo-c-driver/pull/794,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/794,"CDRIVER-3985
This PR deprecates and removes oppressive terminology from code. The spec test changes will be synced one more time once mongodb/specifications#990 is merged.
The last two commits commit are the changes from #793 and #792 to keep the build somewhat happy, so I would recommend looking at the changes commit by commit.","CDRIVER-3985
This PR deprecates and removes oppressive terminology from code. The spec test changes will be synced one more time once mongodb/specifications#990 is merged.
The last two commits commit are the changes from #793 and #792 to keep the build somewhat happy, so I would recommend looking at the changes commit by commit.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,794,2021-05-19T12:11:12Z,2021-05-26T18:00:00Z,2021-05-26T18:00:03Z,MERGED,True,1949,2001,127,https://github.com/alcaeus,CDRIVER-3985 Remove Oppressive Terminology From Code,13,[],https://github.com/mongodb/mongo-c-driver/pull/794,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/794#issuecomment-847846457,"CDRIVER-3985
This PR deprecates and removes oppressive terminology from code. The spec test changes will be synced one more time once mongodb/specifications#990 is merged.
The last two commits commit are the changes from #793 and #792 to keep the build somewhat happy, so I would recommend looking at the changes commit by commit.","Yes, more changes are incoming for CDRIVER-3997, which should also take care of the last tests. I've removed the other instances shown in your comment.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,795,2021-05-20T11:36:29Z,2021-05-22T04:56:07Z,2021-05-22T04:56:07Z,MERGED,True,30,9,1,https://github.com/alcaeus,Skip tests with dots and dollars in field names on 5.0+,2,[],https://github.com/mongodb/mongo-c-driver/pull/795,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/795,"Follows #793. Versioned API tests are fixed by #792. With all patches applied, tests pass again: https://spruce.mongodb.com/version/60a62eabc9ec443716160e3d/tasks
Note that these tests will be replaced by spec tests after the completion of DRIVERS-1237 (see mongodb/specifications#980)","Follows #793. Versioned API tests are fixed by #792. With all patches applied, tests pass again: https://spruce.mongodb.com/version/60a62eabc9ec443716160e3d/tasks
Note that these tests will be replaced by spec tests after the completion of DRIVERS-1237 (see mongodb/specifications#980)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,796,2021-05-24T20:38:03Z,2021-06-23T19:15:29Z,2021-06-23T19:15:36Z,MERGED,True,270,103,5,https://github.com/benjirewis,Upgrade Ubuntu tasks Evergreen,6,[],https://github.com/mongodb/mongo-c-driver/pull/796,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/796,"CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.","CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,796,2021-05-24T20:38:03Z,2021-06-23T19:15:29Z,2021-06-23T19:15:36Z,MERGED,True,270,103,5,https://github.com/benjirewis,Upgrade Ubuntu tasks Evergreen,6,[],https://github.com/mongodb/mongo-c-driver/pull/796,https://github.com/codecov-commenter,2,https://github.com/mongodb/mongo-c-driver/pull/796#issuecomment-848211491,"CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.","Codecov Report

Merging #796 (848b240) into master (d261727) will decrease coverage by 0.00%.
The diff coverage is n/a.


@@            Coverage Diff             @@
##           master     #796      +/-   ##
==========================================
- Coverage   57.11%   57.10%   -0.01%     
==========================================
  Files         256      256              
  Lines       70299    70299              
==========================================
- Hits        40148    40147       -1     
- Misses      30151    30152       +1     



Impacted Files
Coverage Δ





src/libmongoc/tests/test-mongoc-write-commands.c
35.42% <ø> (ø)



src/libbson/src/bson/bson-iter.c
90.12% <0.00%> (-0.14%)
⬇️




Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update d261727...848b240. Read the comment docs.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,796,2021-05-24T20:38:03Z,2021-06-23T19:15:29Z,2021-06-23T19:15:36Z,MERGED,True,270,103,5,https://github.com/benjirewis,Upgrade Ubuntu tasks Evergreen,6,[],https://github.com/mongodb/mongo-c-driver/pull/796,https://github.com/benjirewis,3,https://github.com/mongodb/mongo-c-driver/pull/796#issuecomment-848233897,"CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.","There are still many system-failures for various tasks that I think refer to failures from download-mongodb.sh. I've updated that script to its most recent version from drivers-evergreen-tools, so I'm not sure what's going on there; looking into it.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,796,2021-05-24T20:38:03Z,2021-06-23T19:15:29Z,2021-06-23T19:15:36Z,MERGED,True,270,103,5,https://github.com/benjirewis,Upgrade Ubuntu tasks Evergreen,6,[],https://github.com/mongodb/mongo-c-driver/pull/796,https://github.com/benjirewis,4,https://github.com/mongodb/mongo-c-driver/pull/796#issuecomment-853979012,"CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.","I've explicitly disable linking libsztd on 32 bit platforms, which did fix some of the failures.
There are still quite a few new system-failures that are happening because download-mongodb.sh cannot find the correct version for a few architectures/platforms. I think we need to test versions [3.2, 3.6] on Ubuntu 16.04, and the later versions on Ubuntu 18.04, since download links do not exist for earlier versions on Ubuntu 18.04. A new case needs to be added for rhel-8.1-ppc64le (if downloads for that platform exist). Also, the aarch64 architectures seem to be missing the virtualenv module for Python.
I'll look into resolving some of those system-failures, but let me know if you have any context on the other, non-system failures. Some are due to ""network timeouts"", others are due to a failing _test_invalid_wc_server_error().",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,796,2021-05-24T20:38:03Z,2021-06-23T19:15:29Z,2021-06-23T19:15:36Z,MERGED,True,270,103,5,https://github.com/benjirewis,Upgrade Ubuntu tasks Evergreen,6,[],https://github.com/mongodb/mongo-c-driver/pull/796,https://github.com/rcsanchez97,5,https://github.com/mongodb/mongo-c-driver/pull/796#issuecomment-854272907,"CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.",@benjirewis Have a look at mongodb-labs/drivers-evergreen-tools#154 for an update to the download script that has links for RHEL 8.1 ppc64le.,True,{'THUMBS_UP': ['https://github.com/benjirewis']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,796,2021-05-24T20:38:03Z,2021-06-23T19:15:29Z,2021-06-23T19:15:36Z,MERGED,True,270,103,5,https://github.com/benjirewis,Upgrade Ubuntu tasks Evergreen,6,[],https://github.com/mongodb/mongo-c-driver/pull/796,https://github.com/rcsanchez97,6,https://github.com/mongodb/mongo-c-driver/pull/796#issuecomment-854284368,"CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.","Here is the explanation for the zstd failures.  The C driver requires zstd 0.8.0.  The zstd installed on Ubuntu 16.04 is version 0.5.1.  The build finds that zstd, and determines that it is too old and so doesn't build against it.  Updating to Ubuntu 18.04 brings with it zstd 1.3.3.  When building on 18.04, CMake finds that the version satisfies the dependency and then tries to link against it.  However, the Evergreen images supplied by the build team only have 64-bit libzstd packages installed.  The build is able to locate the headers (which are not 64-bit specific), but the library itself is 64-bit specific and so the link step fails.  Disabling zstd for 32-bit builds works around this.  Another possible solution is to file a BUILD ticket, requesting installation the 32-bit libzstd packages on Ubuntu 18.04 images.",True,{'THUMBS_UP': ['https://github.com/benjirewis']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,796,2021-05-24T20:38:03Z,2021-06-23T19:15:29Z,2021-06-23T19:15:36Z,MERGED,True,270,103,5,https://github.com/benjirewis,Upgrade Ubuntu tasks Evergreen,6,[],https://github.com/mongodb/mongo-c-driver/pull/796,https://github.com/benjirewis,7,https://github.com/mongodb/mongo-c-driver/pull/796#issuecomment-856822981,"CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.","@rcsanchez97 Thanks for all of the suggestions; I think I've addressed everything you've pointed out.
Filed BUILD-13262 and BUILD-13263 for requesting abi-compliance-checker and python-virtualenv installation on Ubuntu 18.04 (arm64) respectively. Also filed BUILD-13266 to request the installation of 32-bit libzstd packages on Ubuntu 18.04 images.
For now, I've simply disabled linking 32-bit libzstd, but if we can get 32-bit libztd installed on Ubuntu 18.04 images, I'll add the linking back in.
I added logic in compile-unix to use the command scan-build-3.9 if scan-build doesn't exist.
I moved the pre-4.0 test tasks that were on Ubuntu 18.04 back to Ubuntu 16.04 and updated the download-mongodb.sh script one more time.
I also made sure the descriptions of the GCC and clang versions were accurate to the linux version.
It looks like these changes fix almost all of the unexpected failures.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,796,2021-05-24T20:38:03Z,2021-06-23T19:15:29Z,2021-06-23T19:15:36Z,MERGED,True,270,103,5,https://github.com/benjirewis,Upgrade Ubuntu tasks Evergreen,6,[],https://github.com/mongodb/mongo-c-driver/pull/796,https://github.com/rcsanchez97,8,https://github.com/mongodb/mongo-c-driver/pull/796#issuecomment-856881824,"CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.","@benjirewis The last commit looks good, except that you omitted the restoration of the RHEL 8.1 power8 task that you removed in the preceding commit.",True,{'THUMBS_UP': ['https://github.com/benjirewis']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,796,2021-05-24T20:38:03Z,2021-06-23T19:15:29Z,2021-06-23T19:15:36Z,MERGED,True,270,103,5,https://github.com/benjirewis,Upgrade Ubuntu tasks Evergreen,6,[],https://github.com/mongodb/mongo-c-driver/pull/796,https://github.com/benjirewis,9,https://github.com/mongodb/mongo-c-driver/pull/796#issuecomment-859664511,"CDRIVER-3912
CDRIVER-3946
Runs OCSP tests against Ubuntu 20.04. Exports LD_LIBRARY_PATH accurately for each OCSP test to help with linking libraries.
Upgrades existing Ubuntu 16.04 tasks to use Ubuntu 18.04.","There are still a few failures introduced by this upgrade:

A few test-latest-sharded tasks are failing (on ASAN Ubuntu 18.04, clang 6.0 (i386) Ubuntu 18.04, GCC 7.5 (i386) Ubuntu 18.04, GCC 7.5 Ubuntu 18.04, and power8 RHEL 8.1) because of _test_invalid_wc_server_error. The test expects an error code of 91 but receives an error code of 6.
rpm-package-build is failing because it cannot find /home/ec2-user/rpmbuild/SOURCES/mongo-c-driver-1.19.0.tar.gz when building.
test-3.4-server-auth-sasl-winssl fails test_tailable_alive because the cursor is unexpectedly empty.
debug-compile tasks fail on power8 RHEL 8.1 because OPENSSL cannot be found.
abi-compliance-check fails because that script does not exist on Ubuntu 18.04 (tracked by BUILD-13262).
ARM Ubuntu 18.04 has system-failures because virtual-env is missing (tracked by BUILD-13263).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,797,2021-05-26T08:37:02Z,2021-06-22T06:20:42Z,2021-06-22T06:20:45Z,MERGED,True,15335,419,299,https://github.com/alcaeus,"CDRIVER-3997 Use ""hello"" command for monitoring if supported",14,[],https://github.com/mongodb/mongo-c-driver/pull/797,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/797,"CDRIVER-3997
The first commit are squashed changes from #794 which I'll remove before merging this PR. I suggest reviewing this PR commit by commit.
This PR syncs the spec tests to the latest version from mongodb/specifications#990.","CDRIVER-3997
The first commit are squashed changes from #794 which I'll remove before merging this PR. I suggest reviewing this PR commit by commit.
This PR syncs the spec tests to the latest version from mongodb/specifications#990.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,797,2021-05-26T08:37:02Z,2021-06-22T06:20:42Z,2021-06-22T06:20:45Z,MERGED,True,15335,419,299,https://github.com/alcaeus,"CDRIVER-3997 Use ""hello"" command for monitoring if supported",14,[],https://github.com/mongodb/mongo-c-driver/pull/797,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/797#issuecomment-856175912,"CDRIVER-3997
The first commit are squashed changes from #794 which I'll remove before merging this PR. I suggest reviewing this PR commit by commit.
This PR syncs the spec tests to the latest version from mongodb/specifications#990.","@alcaeus I think this PR might be missing some updated spec tests. While syncing spec tests for CDRIVER-3895 I pulled in changes from mongodb/specifications@3385a12. I cross-referenced those changes with a related CDRIVER ticket and ended up here, but noticed that some files (e.g. source/transactions/tests/legacy/error-labels.json) were missing from this PR.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,797,2021-05-26T08:37:02Z,2021-06-22T06:20:42Z,2021-06-22T06:20:45Z,MERGED,True,15335,419,299,https://github.com/alcaeus,"CDRIVER-3997 Use ""hello"" command for monitoring if supported",14,[],https://github.com/mongodb/mongo-c-driver/pull/797,https://github.com/alcaeus,3,https://github.com/mongodb/mongo-c-driver/pull/797#issuecomment-862085739,"CDRIVER-3997
The first commit are squashed changes from #794 which I'll remove before merging this PR. I suggest reviewing this PR commit by commit.
This PR syncs the spec tests to the latest version from mongodb/specifications#990.",@jmikola interesting. I'll give the spec tests another look separately from this PR.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,797,2021-05-26T08:37:02Z,2021-06-22T06:20:42Z,2021-06-22T06:20:45Z,MERGED,True,15335,419,299,https://github.com/alcaeus,"CDRIVER-3997 Use ""hello"" command for monitoring if supported",14,[],https://github.com/mongodb/mongo-c-driver/pull/797,https://github.com/alcaeus,4,https://github.com/mongodb/mongo-c-driver/pull/797#issuecomment-862110155,"CDRIVER-3997
The first commit are squashed changes from #794 which I'll remove before merging this PR. I suggest reviewing this PR commit by commit.
This PR syncs the spec tests to the latest version from mongodb/specifications#990.","@kevinAlbs the last commit updates the test to ensure that closing the connection after a handshake reverts back to correctly using legacy hello, regardless of whether the server previously responded with helloOk. That should complete this work.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,797,2021-05-26T08:37:02Z,2021-06-22T06:20:42Z,2021-06-22T06:20:45Z,MERGED,True,15335,419,299,https://github.com/alcaeus,"CDRIVER-3997 Use ""hello"" command for monitoring if supported",14,[],https://github.com/mongodb/mongo-c-driver/pull/797,https://github.com/alcaeus,5,https://github.com/mongodb/mongo-c-driver/pull/797#issuecomment-863184423,"CDRIVER-3997
The first commit are squashed changes from #794 which I'll remove before merging this PR. I suggest reviewing this PR commit by commit.
This PR syncs the spec tests to the latest version from mongodb/specifications#990.","@kevinAlbs I'm at a loss why some builds are failing with a ""redundant declaration"" warning: https://evergreen.mongodb.com/task_log_raw/mongo_c_driver_releng_compile_tracing_patch_f1093ba1686b8bf876eed67e0c7f59918649ef15_60cb1b3ca4cf473aac7310aa_21_06_17_09_51_58/0?type=T#L345. Got any pointers for me?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,797,2021-05-26T08:37:02Z,2021-06-22T06:20:42Z,2021-06-22T06:20:45Z,MERGED,True,15335,419,299,https://github.com/alcaeus,"CDRIVER-3997 Use ""hello"" command for monitoring if supported",14,[],https://github.com/mongodb/mongo-c-driver/pull/797,https://github.com/alcaeus,6,https://github.com/mongodb/mongo-c-driver/pull/797#issuecomment-863185240,"CDRIVER-3997
The first commit are squashed changes from #794 which I'll remove before merging this PR. I suggest reviewing this PR commit by commit.
This PR syncs the spec tests to the latest version from mongodb/specifications#990.","@jmikola I've synced spec tests one more time with the latest version, which together with your changes from #801 should have all tests up-to-date.",True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,798,2021-05-26T18:51:40Z,2021-06-11T21:16:15Z,2021-06-11T21:16:24Z,MERGED,True,208,65,1,https://github.com/benjirewis,CDRIVER-3964 Append session to all operations in UTR,4,[],https://github.com/mongodb/mongo-c-driver/pull/798,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/798,"CDRIVER-3964
Appends session to all possible operations in the unified test runner.
Not all operations seem to take the session option. I noticed that operation_list_databases and bulk_op_append cause errors if session is appended, and the operation_find_one_and_* operations cannot take a session option since they use mongoc_find_and_modify_opts_t * instead of bson_t * as their options param. Let me know if you think I missed an operation/some operation does not need the session option.","CDRIVER-3964
Appends session to all possible operations in the unified test runner.
Not all operations seem to take the session option. I noticed that operation_list_databases and bulk_op_append cause errors if session is appended, and the operation_find_one_and_* operations cannot take a session option since they use mongoc_find_and_modify_opts_t * instead of bson_t * as their options param. Let me know if you think I missed an operation/some operation does not need the session option.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,798,2021-05-26T18:51:40Z,2021-06-11T21:16:15Z,2021-06-11T21:16:24Z,MERGED,True,208,65,1,https://github.com/benjirewis,CDRIVER-3964 Append session to all operations in UTR,4,[],https://github.com/mongodb/mongo-c-driver/pull/798,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/798#issuecomment-849058381,"CDRIVER-3964
Appends session to all possible operations in the unified test runner.
Not all operations seem to take the session option. I noticed that operation_list_databases and bulk_op_append cause errors if session is appended, and the operation_find_one_and_* operations cannot take a session option since they use mongoc_find_and_modify_opts_t * instead of bson_t * as their options param. Let me know if you think I missed an operation/some operation does not need the session option.","I noticed that operation_list_databases and bulk_op_append cause errors if session is appended

mongoc_client_get_database_names_with_opts is documented as taking a sessionId parameter, so it should certainly work with mongoc_client_session_append. If not, that sounds like a bug.
As for bulk writes, the session option should be added directly to the mongoc_bulk_operation_t object via mongoc_bulk_operation_set_client_session.

and the operation_find_one_and_* operations cannot take a session option since they use mongoc_find_and_modify_opts_t * instead of bson_t * as their options param.

This looks like an oversight and should be reported as a new ticket. One possible workaround would be to forgo mongoc_collection_find_and_modify_with_opts in favor of executing a raw command with mongoc_database_read_write_command_with_opts; however, that would defeat the point of the test, which is to exercise the actual API.
@kevinAlbs Is this something worth addressing for the 5.0-compat release? Otherwise, I suppose we'll need to skip any tests that use findAndModify with a session.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,798,2021-05-26T18:51:40Z,2021-06-11T21:16:15Z,2021-06-11T21:16:24Z,MERGED,True,208,65,1,https://github.com/benjirewis,CDRIVER-3964 Append session to all operations in UTR,4,[],https://github.com/mongodb/mongo-c-driver/pull/798,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/798#issuecomment-853140082,"CDRIVER-3964
Appends session to all possible operations in the unified test runner.
Not all operations seem to take the session option. I noticed that operation_list_databases and bulk_op_append cause errors if session is appended, and the operation_find_one_and_* operations cannot take a session option since they use mongoc_find_and_modify_opts_t * instead of bson_t * as their options param. Let me know if you think I missed an operation/some operation does not need the session option.","This looks like an oversight and should be reported as a new ticket. One possible workaround would be to forgo mongoc_collection_find_and_modify_with_opts in favor of executing a raw command with mongoc_database_read_write_command_with_opts; however, that would defeat the point of the test, which is to exercise the actual API.


@kevinAlbs Is this something worth addressing for the 5.0-compat release? Otherwise, I suppose we'll need to skip any tests that use findAndModify with a session.

It's funky, but session options can be passed by first appending the session with mongoc_client_session_append to a bson_t. Then append the bson_t opts to the mongoc_find_and_modify_opts_t via mongoc_find_and_modify_opts_append (example). This is documented in mongoc_find_and_modify_opts_append",True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,799,2021-05-27T13:08:06Z,2021-06-04T15:50:17Z,2021-07-13T00:28:56Z,MERGED,True,260,1,3,https://github.com/kevinAlbs,CDRIVER-3897 add tests for time-series collections,2,[],https://github.com/mongodb/mongo-c-driver/pull/799,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/799,"Resyncs tests to include the new time-series spec tests and fixes a bug in the unified test runner's outcome matching. No code changes were required.

authentication-tests-openssl-nosasl task failures are due to CDRIVER-3998
test-asan-latest-* task failures will be resolved with the Ubuntu 18.04 upgrade to pull in latest server releases: CDRIVER-3946","Resyncs tests to include the new time-series spec tests and fixes a bug in the unified test runner's outcome matching. No code changes were required.

authentication-tests-openssl-nosasl task failures are due to CDRIVER-3998
test-asan-latest-* task failures will be resolved with the Ubuntu 18.04 upgrade to pull in latest server releases: CDRIVER-3946",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,799,2021-05-27T13:08:06Z,2021-06-04T15:50:17Z,2021-07-13T00:28:56Z,MERGED,True,260,1,3,https://github.com/kevinAlbs,CDRIVER-3897 add tests for time-series collections,2,[],https://github.com/mongodb/mongo-c-driver/pull/799,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/799#issuecomment-854801525,"Resyncs tests to include the new time-series spec tests and fixes a bug in the unified test runner's outcome matching. No code changes were required.

authentication-tests-openssl-nosasl task failures are due to CDRIVER-3998
test-asan-latest-* task failures will be resolved with the Ubuntu 18.04 upgrade to pull in latest server releases: CDRIVER-3946","Should we do some parameter validation for the new time-series options (i.e. ensure they are strings/ints as done for the other options here)?

Good question. IMO if the server errors for the wrong type, the existing driver-side checks do not provide value. I would rather remove the existing checks.
If the user currently uses the wrong type, they will get a TypeMismatch error from a 5.0 server for any of the new options (timeseries.timeField, timeseries.metaField, granularity, expireAfterSeconds).
MongoDB Enterprise rs0:PRIMARY> db.runCommand({create: ""tcoll"", timeseries: {timeField: 123}})
{
	""ok"" : 0,
	""errmsg"" : ""BSON field 'create.timeseries.timeField' is the wrong type 'double', expected type 'string'"",
	""code"" : 14,
	""codeName"" : ""TypeMismatch"",
	""$clusterTime"" : {
		""clusterTime"" : Timestamp(1622819137, 1),
		""signature"" : {
			""hash"" : BinData(0,""AAAAAAAAAAAAAAAAAAAAAAAAAAA=""),
			""keyId"" : NumberLong(0)
		}
	},
	""operationTime"" : Timestamp(1622819137, 1)
}

This also aligns with the Where possible, depend on server to return errors mantra. Relying on the server for validation helps with forward-compatibility. If the server later relaxes constraints, (e.g. if granularity later permits a numeric value, there are no required changes).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,799,2021-05-27T13:08:06Z,2021-06-04T15:50:17Z,2021-07-13T00:28:56Z,MERGED,True,260,1,3,https://github.com/kevinAlbs,CDRIVER-3897 add tests for time-series collections,2,[],https://github.com/mongodb/mongo-c-driver/pull/799,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/799#issuecomment-854829634,"Resyncs tests to include the new time-series spec tests and fixes a bug in the unified test runner's outcome matching. No code changes were required.

authentication-tests-openssl-nosasl task failures are due to CDRIVER-3998
test-asan-latest-* task failures will be resolved with the Ubuntu 18.04 upgrade to pull in latest server releases: CDRIVER-3946","LGTM then; enforcing our own types in the test runner does seem harder and less stable than just relying on the server. Is there any ticket to track the work of removing type checks within the test runners?

Ah, I was referring to the driver-side checks in the implementation, not the test runner. For the implementation, I think we should default to relying on server-side checks, and only add driver-side checks in cases we cannot rely on the server to error. For example – some CRUD options, like UpdateOptions.hint have associated wire version checks. The rationale is that the user will otherwise be uninformed if the server does not support the option: https://github.com/mongodb/specifications/blob/master/source/crud/crud.rst#:~:text=why%20are%20client-side%20errors%20raised%20for%20some%20unsupported%20options%3F.
I filed CDRIVER-4015 to cover relaxing all such client-side checks.
For the test runner type checks. The same logic applies for any option that is going to be added to the command sent to the server. But for fields that do not represent server-side options, e.g. a collection name, the validation could give more helpful up-front errors. The bigger concern I have is accidentally ignoring fields in the spec test (e.g. bypassing assertions).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,800,2021-06-04T19:15:16Z,2021-06-11T14:06:53Z,2021-06-21T18:30:04Z,MERGED,True,169,74,14,https://github.com/jmikola,CDRIVER-3970: Remove DBRef validation from Extended JSON parser,2,[],https://github.com/mongodb/mongo-c-driver/pull/800,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/800,"https://jira.mongodb.org/browse/CDRIVER-3970
Documents that resemble but do not conform to a DBRef should be left as-is.
Syncs BSON corpus tests with mongodb/specifications@a274fbf
Skips were added for additional corpus tests unrelated to this spec change.

Also addresses:

https://jira.mongodb.org/browse/CDRIVER-3374
https://jira.mongodb.org/browse/CDRIVER-3740
https://jira.mongodb.org/browse/CDRIVER-3742","https://jira.mongodb.org/browse/CDRIVER-3970
Documents that resemble but do not conform to a DBRef should be left as-is.
Syncs BSON corpus tests with mongodb/specifications@a274fbf
Skips were added for additional corpus tests unrelated to this spec change.

Also addresses:

https://jira.mongodb.org/browse/CDRIVER-3374
https://jira.mongodb.org/browse/CDRIVER-3740
https://jira.mongodb.org/browse/CDRIVER-3742",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,800,2021-06-04T19:15:16Z,2021-06-11T14:06:53Z,2021-06-21T18:30:04Z,MERGED,True,169,74,14,https://github.com/jmikola,CDRIVER-3970: Remove DBRef validation from Extended JSON parser,2,[],https://github.com/mongodb/mongo-c-driver/pull/800,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/800#issuecomment-859604690,"https://jira.mongodb.org/browse/CDRIVER-3970
Documents that resemble but do not conform to a DBRef should be left as-is.
Syncs BSON corpus tests with mongodb/specifications@a274fbf
Skips were added for additional corpus tests unrelated to this spec change.

Also addresses:

https://jira.mongodb.org/browse/CDRIVER-3374
https://jira.mongodb.org/browse/CDRIVER-3740
https://jira.mongodb.org/browse/CDRIVER-3742","Hex-escaping fixed the issue with tests not being skipped in MSVC.
Existing test failures are due to:

Ubuntu 16.04 ASAN variants missing latest server version, which causes versioned API spec test failures
Certificate verification failures for VS2015 (CDRIVER-3998)
VS2017 failures in the test-latest-sharded-noauth-nosasl-nossl task started showing up last week in this build",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,800,2021-06-04T19:15:16Z,2021-06-11T14:06:53Z,2021-06-21T18:30:04Z,MERGED,True,169,74,14,https://github.com/jmikola,CDRIVER-3970: Remove DBRef validation from Extended JSON parser,2,[],https://github.com/mongodb/mongo-c-driver/pull/800,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/800#issuecomment-865253371,"https://jira.mongodb.org/browse/CDRIVER-3970
Documents that resemble but do not conform to a DBRef should be left as-is.
Syncs BSON corpus tests with mongodb/specifications@a274fbf
Skips were added for additional corpus tests unrelated to this spec change.

Also addresses:

https://jira.mongodb.org/browse/CDRIVER-3374
https://jira.mongodb.org/browse/CDRIVER-3740
https://jira.mongodb.org/browse/CDRIVER-3742",Cherry-picked to 1.18 in ba9c308,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,801,2021-06-08T04:06:34Z,2021-06-16T15:32:39Z,2021-06-21T18:30:19Z,MERGED,True,16121,8472,142,https://github.com/jmikola,CDRIVER-3895: Remove dots/dollars validation for insert/replace docs,22,[],https://github.com/mongodb/mongo-c-driver/pull/801,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/801,"https://jira.mongodb.org/browse/CDRIVER-3895

Also addresses:

https://jira.mongodb.org/browse/CDRIVER-3960","https://jira.mongodb.org/browse/CDRIVER-3895

Also addresses:

https://jira.mongodb.org/browse/CDRIVER-3960",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,801,2021-06-08T04:06:34Z,2021-06-16T15:32:39Z,2021-06-21T18:30:19Z,MERGED,True,16121,8472,142,https://github.com/jmikola,CDRIVER-3895: Remove dots/dollars validation for insert/replace docs,22,[],https://github.com/mongodb/mongo-c-driver/pull/801,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/801#issuecomment-861658556,"https://jira.mongodb.org/browse/CDRIVER-3895

Also addresses:

https://jira.mongodb.org/browse/CDRIVER-3960",Evergreen looks good apart from the known failures. I think this is ready for a full review.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,801,2021-06-08T04:06:34Z,2021-06-16T15:32:39Z,2021-06-21T18:30:19Z,MERGED,True,16121,8472,142,https://github.com/jmikola,CDRIVER-3895: Remove dots/dollars validation for insert/replace docs,22,[],https://github.com/mongodb/mongo-c-driver/pull/801,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/801#issuecomment-865253508,"https://jira.mongodb.org/browse/CDRIVER-3895

Also addresses:

https://jira.mongodb.org/browse/CDRIVER-3960",Cherry-picked to r1.18 in 4069b79,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,802,2021-06-16T19:44:05Z,2021-06-23T14:10:31Z,2021-06-23T14:10:34Z,MERGED,True,131,46,4,https://github.com/jmikola,CDRIVER-3892 expose reason documents fail validation,3,[],https://github.com/mongodb/mongo-c-driver/pull/802,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/802,"https://jira.mongodb.org/browse/CDRIVER-3892
This implements the second prose test from the CRUD spec and relocates the first prose test, which was originally added in CDRIVER-3575 (84635b3).","https://jira.mongodb.org/browse/CDRIVER-3892
This implements the second prose test from the CRUD spec and relocates the first prose test, which was originally added in CDRIVER-3575 (84635b3).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,802,2021-06-16T19:44:05Z,2021-06-23T14:10:31Z,2021-06-23T14:10:34Z,MERGED,True,131,46,4,https://github.com/jmikola,CDRIVER-3892 expose reason documents fail validation,3,[],https://github.com/mongodb/mongo-c-driver/pull/802,https://github.com/benjirewis,2,https://github.com/mongodb/mongo-c-driver/pull/802#issuecomment-865166997,"https://jira.mongodb.org/browse/CDRIVER-3892
This implements the second prose test from the CRUD spec and relocates the first prose test, which was originally added in CDRIVER-3575 (84635b3).",Can you restart the Evergreen patch? Looks like there's been an internal error.,True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,802,2021-06-16T19:44:05Z,2021-06-23T14:10:31Z,2021-06-23T14:10:34Z,MERGED,True,131,46,4,https://github.com/jmikola,CDRIVER-3892 expose reason documents fail validation,3,[],https://github.com/mongodb/mongo-c-driver/pull/802,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/802#issuecomment-866309896,"https://jira.mongodb.org/browse/CDRIVER-3892
This implements the second prose test from the CRUD spec and relocates the first prose test, which was originally added in CDRIVER-3575 (84635b3).",@kevinAlbs: I posted about the Evergreen CI failures in Slack. They appear unrelated to the PR but I couldn't match them all up with failing-on-waterfall issues. I'll wait for a final LGTM on this before merging.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,803,2021-06-17T12:15:04Z,2021-06-18T10:35:43Z,2021-06-18T10:35:46Z,MERGED,True,11,9,4,https://github.com/alcaeus,CDRIVER-4026 Specify 5.0 cursor behaviour,2,[],https://github.com/mongodb/mongo-c-driver/pull/803,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/803,"CDRIVER-4026
This reverts changes from #793 and updates to the newest spec tests.","CDRIVER-4026
This reverts changes from #793 and updates to the newest spec tests.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,804,2021-06-17T15:21:16Z,2021-06-18T09:40:10Z,2021-06-18T09:40:13Z,MERGED,True,8060,3723,4,https://github.com/alcaeus,CDRIVER-4005 Test against 5.0,1,[],https://github.com/mongodb/mongo-c-driver/pull/804,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/804,"CDRIVER-4005
This adds 5.0 to the build. The versioned API builds are now run on 5.0 and latest, which required some changes to the config generator files.","CDRIVER-4005
This adds 5.0 to the build. The versioned API builds are now run on 5.0 and latest, which required some changes to the config generator files.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,805,2021-06-22T12:15:11Z,2021-06-25T09:24:38Z,2021-06-25T09:24:41Z,MERGED,True,146,2,1,https://github.com/alcaeus,CDRIVER-3991 Add versioned API connection examples,4,[],https://github.com/mongodb/mongo-c-driver/pull/805,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/805,CDRIVER-3991,CDRIVER-3991,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,806,2021-06-22T23:59:52Z,2021-06-25T14:17:14Z,2021-06-25T14:18:16Z,CLOSED,False,14,8,6,https://github.com/rcsanchez97,CDRIVER-4009,2,[],https://github.com/mongodb/mongo-c-driver/pull/806,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/806,Full patch build: https://spruce.mongodb.com/version/60d25b52d1fe073c6e1c7624/tasks?limit=100&page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Full patch build: https://spruce.mongodb.com/version/60d25b52d1fe073c6e1c7624/tasks?limit=100&page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,806,2021-06-22T23:59:52Z,2021-06-25T14:17:14Z,2021-06-25T14:18:16Z,CLOSED,False,14,8,6,https://github.com/rcsanchez97,CDRIVER-4009,2,[],https://github.com/mongodb/mongo-c-driver/pull/806,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/806#issuecomment-866898877,Full patch build: https://spruce.mongodb.com/version/60d25b52d1fe073c6e1c7624/tasks?limit=100&page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,"The full patch build I linked in the initial summary has only one
failure that is not also present on the base commit, the
`rpm-package-build` task.  That failure is unrelated to these changes.
The other failures you see in the `debug-compile` tasks are not in the
full patch build I submitted, so the are most likely transitory.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,806,2021-06-22T23:59:52Z,2021-06-25T14:17:14Z,2021-06-25T14:18:16Z,CLOSED,False,14,8,6,https://github.com/rcsanchez97,CDRIVER-4009,2,[],https://github.com/mongodb/mongo-c-driver/pull/806,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/806#issuecomment-868533834,Full patch build: https://spruce.mongodb.com/version/60d25b52d1fe073c6e1c7624/tasks?limit=100&page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,"Pushed directly on master as:

d58b2d8 CDRIVER-3905 expect coll stats in estimated document count test
1bdfd8f CDRIVER-4009 bump wire version for 5.0",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,807,2021-06-23T18:13:01Z,2021-07-12T20:56:14Z,2021-07-12T20:56:17Z,MERGED,True,1505,58,17,https://github.com/benjirewis,CDRIVER-4034 Allow snapshot reads through sessions,16,[],https://github.com/mongodb/mongo-c-driver/pull/807,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/807,"CDRIVER-4034
Adds MONGOC_SESSION_SNAPSHOT flag option to mongoc_session_opt_t. Setting this flag will mean:

The first read operation (find or aggregate) will be sent with read concern level ""snapshot""
The server will return atClusterTime in the reply cursor
atClusterTime will be stored as new fields snapshot_time_timestamp and snapshot_time_increment on the mongoc_client_session_t
Subsequent read operations (find or aggregate) will also be sent with read concern level ""snapshot"" and atClusterTime set to the snapshot_time stored on the client session.

These changes will allow users to read from a single point in time (a snapshot) during a session.
Adds new at_cluster_time_timestamp and at_cluster_time_increment fields to read concern (along with getters) and a new mongoc_read_concern_set_at_cluster_time setter. Allows setting MONGOC_SESSION_SNAPSHOT with isSnapshot in the unified test runner. Syncs sessions spec tests.","CDRIVER-4034
Adds MONGOC_SESSION_SNAPSHOT flag option to mongoc_session_opt_t. Setting this flag will mean:

The first read operation (find or aggregate) will be sent with read concern level ""snapshot""
The server will return atClusterTime in the reply cursor
atClusterTime will be stored as new fields snapshot_time_timestamp and snapshot_time_increment on the mongoc_client_session_t
Subsequent read operations (find or aggregate) will also be sent with read concern level ""snapshot"" and atClusterTime set to the snapshot_time stored on the client session.

These changes will allow users to read from a single point in time (a snapshot) during a session.
Adds new at_cluster_time_timestamp and at_cluster_time_increment fields to read concern (along with getters) and a new mongoc_read_concern_set_at_cluster_time setter. Allows setting MONGOC_SESSION_SNAPSHOT with isSnapshot in the unified test runner. Syncs sessions spec tests.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,808,2021-06-24T00:56:51Z,2021-07-06T01:35:32Z,2021-07-13T00:30:32Z,MERGED,True,731,90,53,https://github.com/kevinAlbs,CDRIVER-4048 support loadBalanced URI option,17,[],https://github.com/mongodb/mongo-c-driver/pull/808,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/808,"Summary of changes

Resyncs the URI options tests and the initial DNS seedlist discovery tests
Add the loadBalanced URI option
Validates the loadBalanced URI option after TXT records are applied
Disable SRV polling if loadBalanced is enabled
Add prose test to ensure SRV polling is disabled

I kept the changes narrowly scoped, and filed tickets with comments for changes I would like to make, but seemed out of scope. (CDRIVER-4047, CDRIVER-4046, CDRIVER-4045)
The JSON files are on the first two commits to make them easier to skip on review.","Summary of changes

Resyncs the URI options tests and the initial DNS seedlist discovery tests
Add the loadBalanced URI option
Validates the loadBalanced URI option after TXT records are applied
Disable SRV polling if loadBalanced is enabled
Add prose test to ensure SRV polling is disabled

I kept the changes narrowly scoped, and filed tickets with comments for changes I would like to make, but seemed out of scope. (CDRIVER-4047, CDRIVER-4046, CDRIVER-4045)
The JSON files are on the first two commits to make them easier to skip on review.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,809,2021-06-25T21:48:01Z,2021-06-28T18:30:24Z,2021-06-28T18:30:27Z,MERGED,True,283,6,2,https://github.com/jmikola,CDRIVER-3895: Sync CRUD tests for dots/dollars,1,[],https://github.com/mongodb/mongo-c-driver/pull/809,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/809,"https://jira.mongodb.org/browse/CDRIVER-3895
Synced with mongodb/specifications@fc21cb7 (see mongodb/specifications#1028 for more context).
Note: this also pulls in test changes relevant to aggregate let support (CDRIVER-4010)
@rcsanchez97: The previous PR for CDRIVER-3895 (#801) introduced aggregate-let.json and this PR pulls in the latest updates from mongodb/specifications@3a58fc6. Per @kevinAlbs' comment in CDRIVER-4010 there may be no other work required for that ticket (perhaps beyond documentation if applicable) if the spec tests currently pass.","https://jira.mongodb.org/browse/CDRIVER-3895
Synced with mongodb/specifications@fc21cb7 (see mongodb/specifications#1028 for more context).
Note: this also pulls in test changes relevant to aggregate let support (CDRIVER-4010)
@rcsanchez97: The previous PR for CDRIVER-3895 (#801) introduced aggregate-let.json and this PR pulls in the latest updates from mongodb/specifications@3a58fc6. Per @kevinAlbs' comment in CDRIVER-4010 there may be no other work required for that ticket (perhaps beyond documentation if applicable) if the spec tests currently pass.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,809,2021-06-25T21:48:01Z,2021-06-28T18:30:24Z,2021-06-28T18:30:27Z,MERGED,True,283,6,2,https://github.com/jmikola,CDRIVER-3895: Sync CRUD tests for dots/dollars,1,[],https://github.com/mongodb/mongo-c-driver/pull/809,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/809#issuecomment-868893323,"https://jira.mongodb.org/browse/CDRIVER-3895
Synced with mongodb/specifications@fc21cb7 (see mongodb/specifications#1028 for more context).
Note: this also pulls in test changes relevant to aggregate let support (CDRIVER-4010)
@rcsanchez97: The previous PR for CDRIVER-3895 (#801) introduced aggregate-let.json and this PR pulls in the latest updates from mongodb/specifications@3a58fc6. Per @kevinAlbs' comment in CDRIVER-4010 there may be no other work required for that ticket (perhaps beyond documentation if applicable) if the spec tests currently pass.","@jmikola thanks for the heads up.  It seems like this PR will handle the
only thing we need for CDRIVER-4010.  Do you think the commit message
for your change should mention CDRIVER-4010, or would it be better for
me to just mention the commit (after the rebase or merge of this PR)
that updates the spec test when closing CDRIVER-4010?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,809,2021-06-25T21:48:01Z,2021-06-28T18:30:24Z,2021-06-28T18:30:27Z,MERGED,True,283,6,2,https://github.com/jmikola,CDRIVER-3895: Sync CRUD tests for dots/dollars,1,[],https://github.com/mongodb/mongo-c-driver/pull/809,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/809#issuecomment-869015328,"https://jira.mongodb.org/browse/CDRIVER-3895
Synced with mongodb/specifications@fc21cb7 (see mongodb/specifications#1028 for more context).
Note: this also pulls in test changes relevant to aggregate let support (CDRIVER-4010)
@rcsanchez97: The previous PR for CDRIVER-3895 (#801) introduced aggregate-let.json and this PR pulls in the latest updates from mongodb/specifications@3a58fc6. Per @kevinAlbs' comment in CDRIVER-4010 there may be no other work required for that ticket (perhaps beyond documentation if applicable) if the spec tests currently pass.","Do you think the commit message for your change should mention CDRIVER-4010

@rcsanchez97: I do mention CDRIVER-4010 in the commit message, just not the first line. That's sufficient for the git bot to link it up with CDRIVER-4010 in JIRA. If there were actual code changes for CDRIVER-4010 required, I'd be inclined to mention it in the first line, but I think what we have now is fine considering it's just spec tests.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,809,2021-06-25T21:48:01Z,2021-06-28T18:30:24Z,2021-06-28T18:30:27Z,MERGED,True,283,6,2,https://github.com/jmikola,CDRIVER-3895: Sync CRUD tests for dots/dollars,1,[],https://github.com/mongodb/mongo-c-driver/pull/809,https://github.com/rcsanchez97,4,https://github.com/mongodb/mongo-c-driver/pull/809#issuecomment-869017773,"https://jira.mongodb.org/browse/CDRIVER-3895
Synced with mongodb/specifications@fc21cb7 (see mongodb/specifications#1028 for more context).
Note: this also pulls in test changes relevant to aggregate let support (CDRIVER-4010)
@rcsanchez97: The previous PR for CDRIVER-3895 (#801) introduced aggregate-let.json and this PR pulls in the latest updates from mongodb/specifications@3a58fc6. Per @kevinAlbs' comment in CDRIVER-4010 there may be no other work required for that ticket (perhaps beyond documentation if applicable) if the spec tests currently pass.","Thanks for pointing that out.  I missed the ticket reference because it
wasn't on the first line.  I don't think that moving it to the first
line is necessary as long as the commit gets linked into Jira.",True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,810,2021-06-25T21:55:58Z,2021-07-03T17:03:06Z,2021-07-03T17:03:17Z,MERGED,True,15,1,4,https://github.com/rcsanchez97,CDRIVER-4010 support 'let' option for aggregate command,1,[],https://github.com/mongodb/mongo-c-driver/pull/810,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/810,"Full patch build: https://spruce.mongodb.com/version/60d5ee4be3c33111e05b9faa/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
I checked quite a few of the failures in that patch build in every single case (with one exception*) the failure in the patch build was identical to the failure of the same task in the base commit.  *The one exception is a Valgrind test that had a hard failure in the base commit but which timed out in the patch build.
Based on this, it seems like the C driver already has the necessary support, so simply updating the CRUD JSON test is all we need to do.","Full patch build: https://spruce.mongodb.com/version/60d5ee4be3c33111e05b9faa/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
I checked quite a few of the failures in that patch build in every single case (with one exception*) the failure in the patch build was identical to the failure of the same task in the base commit.  *The one exception is a Valgrind test that had a hard failure in the base commit but which timed out in the patch build.
Based on this, it seems like the C driver already has the necessary support, so simply updating the CRUD JSON test is all we need to do.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,810,2021-06-25T21:55:58Z,2021-07-03T17:03:06Z,2021-07-03T17:03:17Z,MERGED,True,15,1,4,https://github.com/rcsanchez97,CDRIVER-4010 support 'let' option for aggregate command,1,[],https://github.com/mongodb/mongo-c-driver/pull/810,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/810#issuecomment-870662108,"Full patch build: https://spruce.mongodb.com/version/60d5ee4be3c33111e05b9faa/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
I checked quite a few of the failures in that patch build in every single case (with one exception*) the failure in the patch build was identical to the failure of the same task in the base commit.  *The one exception is a Valgrind test that had a hard failure in the base commit but which timed out in the patch build.
Based on this, it seems like the C driver already has the necessary support, so simply updating the CRUD JSON test is all we need to do.","Sure.  I am guessing that I will also need to drop the test sync since
#809 handled that.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,811,2021-06-29T11:58:27Z,2021-07-01T07:00:50Z,2021-07-01T07:05:55Z,MERGED,True,21,3,1,https://github.com/alcaeus,CDRIVER-4028 Print correct error message when DNS resolution fails,2,[],https://github.com/mongodb/mongo-c-driver/pull/811,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/811,"CDRIVER-4028
I'll backport the resulting commit to r1.17 after merging.","CDRIVER-4028
I'll backport the resulting commit to r1.17 after merging.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,811,2021-06-29T11:58:27Z,2021-07-01T07:00:50Z,2021-07-01T07:05:55Z,MERGED,True,21,3,1,https://github.com/alcaeus,CDRIVER-4028 Print correct error message when DNS resolution fails,2,[],https://github.com/mongodb/mongo-c-driver/pull/811,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/811#issuecomment-871983111,"CDRIVER-4028
I'll backport the resulting commit to r1.17 after merging.",Cherry-picked to r1.17 in e1be09a.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,812,2021-06-29T22:15:59Z,2021-07-12T15:41:45Z,2021-07-12T15:41:45Z,MERGED,True,121,23,3,https://github.com/vector-of-bool,CDRIVER-3164 & CDRIVER-4049: Fix 'opts' usage in mongoc_gridfs_bucket_find,2,[],https://github.com/mongodb/mongo-c-driver/pull/812,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/812,"GridFSBucket.find must forward the 'opts' to the underlying
collection query.
Also: Permit 'opts' to be NULL for mongoc_gridfs_bucket_find","GridFSBucket.find must forward the 'opts' to the underlying
collection query.
Also: Permit 'opts' to be NULL for mongoc_gridfs_bucket_find",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,813,2021-06-30T12:28:32Z,2021-07-05T19:04:10Z,2021-07-05T19:04:12Z,MERGED,True,280,14195,286,https://github.com/alcaeus,Sync SDAM spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/813,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/813,"This follows up CDRIVER-3997 with one last sync of the spec tests now that they have been merged. The main change is that the legacy_hello tests have been removed. This brings the tests up to date with mongodb/specifications@b07c26dc.
Note that since we don't have skipping logic for non-unified spec tests, I had to omit monitoring/auth-*-error.json and integration/minPoolSize-error.json. The spec changes required for these tests have not been implemented yet.","This follows up CDRIVER-3997 with one last sync of the spec tests now that they have been merged. The main change is that the legacy_hello tests have been removed. This brings the tests up to date with mongodb/specifications@b07c26dc.
Note that since we don't have skipping logic for non-unified spec tests, I had to omit monitoring/auth-*-error.json and integration/minPoolSize-error.json. The spec changes required for these tests have not been implemented yet.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,813,2021-06-30T12:28:32Z,2021-07-05T19:04:10Z,2021-07-05T19:04:12Z,MERGED,True,280,14195,286,https://github.com/alcaeus,Sync SDAM spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/813,https://github.com/alcaeus,2,https://github.com/mongodb/mongo-c-driver/pull/813#issuecomment-871417195,"This follows up CDRIVER-3997 with one last sync of the spec tests now that they have been merged. The main change is that the legacy_hello tests have been removed. This brings the tests up to date with mongodb/specifications@b07c26dc.
Note that since we don't have skipping logic for non-unified spec tests, I had to omit monitoring/auth-*-error.json and integration/minPoolSize-error.json. The spec changes required for these tests have not been implemented yet.","The asan-ubuntu failures are due to CDRIVER-4035, the windows-2015 failure is due to CDRIVER-3998. This fixes a number of test failures that went undetected because we only added 5.0.0-rc0 in the meantime and I forgot to rebase my PR before merging it.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,814,2021-07-02T08:00:20Z,2021-07-05T18:57:46Z,2021-07-05T18:57:49Z,MERGED,True,913,15,24,https://github.com/alcaeus,CDRIVER-4000 Test redaction of sensitive commands,7,[],https://github.com/mongodb/mongo-c-driver/pull/814,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/814,"This PR takes care of CDRIVER-3797, CDRIVER-4000, and CDRIVER-4038.
Note that this PR only adds support for features introduced in the 1.5 version of unified test format. Changes for version 1.4 is part of the proxy testing work (CDRIVER-3886), while 1.3 is part of load balancer work (CDRIVER-3883).","This PR takes care of CDRIVER-3797, CDRIVER-4000, and CDRIVER-4038.
Note that this PR only adds support for features introduced in the 1.5 version of unified test format. Changes for version 1.4 is part of the proxy testing work (CDRIVER-3886), while 1.3 is part of load balancer work (CDRIVER-3883).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,815,2021-07-02T15:28:47Z,2021-07-06T14:11:38Z,2021-07-06T14:11:52Z,MERGED,True,12,0,1,https://github.com/jmikola,CDRIVER-3978 mix time to avoid duplicate RAND_bytes for the same PIDs,1,[],https://github.com/mongodb/mongo-c-driver/pull/815,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/815,"https://jira.mongodb.org/browse/CDRIVER-3978
I opted not to implement PID-change detection, as https://www.agwa.name/blog/post/libressls_prng_is_unsafe_on_linux described a case where a grandparent and grandchild could theoretically shares the same PID.
Always mixing the current time before calling RAND_bytes seemed much simpler. This is the same approach taken in PHP (https://github.com/php/php-src/blob/php-8.0.8/ext/openssl/openssl.c#L936), and another patch to OpenSSL (openssl/openssl@3cd8547) mentioned in https://wiki.openssl.org/index.php/Random_fork-safety.
Will cherry-pick to r1.17 after merging.","https://jira.mongodb.org/browse/CDRIVER-3978
I opted not to implement PID-change detection, as https://www.agwa.name/blog/post/libressls_prng_is_unsafe_on_linux described a case where a grandparent and grandchild could theoretically shares the same PID.
Always mixing the current time before calling RAND_bytes seemed much simpler. This is the same approach taken in PHP (https://github.com/php/php-src/blob/php-8.0.8/ext/openssl/openssl.c#L936), and another patch to OpenSSL (openssl/openssl@3cd8547) mentioned in https://wiki.openssl.org/index.php/Random_fork-safety.
Will cherry-pick to r1.17 after merging.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,816,2021-07-03T16:41:20Z,2021-07-22T21:13:46Z,2022-02-03T14:28:22Z,MERGED,True,1082,15,22,https://github.com/kevinAlbs,Load balancer: SDAM and Server Selection,18,[],https://github.com/mongodb/mongo-c-driver/pull/816,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/816,"CDRIVER-4053 Load balancer: SDAM changes

Add a LoadBalanced topology type and LoadBalancer server type.
Manually set the topology description to contain one server of type LoadBalancer when opening.
Prevent updates to the topology description after opening.
Disable SDAM monitoring for a LoadBalanced topology.
Emit correct SDAM monitoring events for a LoadBalanced topology.
Bypass the cooldown period for the single-threaded topology scanner.


CDRIVER-4055 Load balancer: Server Selection

Always return the one load balancer in server selection.","CDRIVER-4053 Load balancer: SDAM changes

Add a LoadBalanced topology type and LoadBalancer server type.
Manually set the topology description to contain one server of type LoadBalancer when opening.
Prevent updates to the topology description after opening.
Disable SDAM monitoring for a LoadBalanced topology.
Emit correct SDAM monitoring events for a LoadBalanced topology.
Bypass the cooldown period for the single-threaded topology scanner.


CDRIVER-4055 Load balancer: Server Selection

Always return the one load balancer in server selection.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,816,2021-07-03T16:41:20Z,2021-07-22T21:13:46Z,2022-02-03T14:28:22Z,MERGED,True,1082,15,22,https://github.com/kevinAlbs,Load balancer: SDAM and Server Selection,18,[],https://github.com/mongodb/mongo-c-driver/pull/816,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/816#issuecomment-876023361,"CDRIVER-4053 Load balancer: SDAM changes

Add a LoadBalanced topology type and LoadBalancer server type.
Manually set the topology description to contain one server of type LoadBalancer when opening.
Prevent updates to the topology description after opening.
Disable SDAM monitoring for a LoadBalanced topology.
Emit correct SDAM monitoring events for a LoadBalanced topology.
Bypass the cooldown period for the single-threaded topology scanner.


CDRIVER-4055 Load balancer: Server Selection

Always return the one load balancer in server selection.","As I was working on handshake changes, I realize some crucial details are missing:

Topology updates are not being skipped on the hello response to application connections.
Single threaded connections are not getting created correctly since they are created as part of monitoring.

I will add integration tests before re-request review once these are resolved. Moving back to draft.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,817,2021-07-06T16:01:22Z,2021-07-06T17:06:38Z,2021-07-13T00:30:26Z,MERGED,True,2,2,1,https://github.com/kevinAlbs,CDRIVER-4000 Remove undefined macro,1,[],https://github.com/mongodb/mongo-c-driver/pull/817,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/817,"Fix backport of CDRIVER-4000 to r1.17 branch.
Merge this only to the r1.17 branch.
Patch in progress: https://spruce.mongodb.com/version/60e47dea3627e06703e137b6/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC","Fix backport of CDRIVER-4000 to r1.17 branch.
Merge this only to the r1.17 branch.
Patch in progress: https://spruce.mongodb.com/version/60e47dea3627e06703e137b6/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,818,2021-07-06T19:55:41Z,2021-08-04T01:55:14Z,2021-08-04T01:55:14Z,MERGED,True,31,10,5,https://github.com/vector-of-bool,Fix: CDRIVER-4050: Set the correct uploadDate on GridFS files,6,[],https://github.com/mongodb/mongo-c-driver/pull/818,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/818,"Previously used the time from bson_get_monotonic_time(), which is
incorrect on most systems, as it is usually realtive to the system
uptime and is stored as microseconds, whereas uploadDate should be
stored as number of milliseconds since the Unix Epoch.","Previously used the time from bson_get_monotonic_time(), which is
incorrect on most systems, as it is usually realtive to the system
uptime and is stored as microseconds, whereas uploadDate should be
stored as number of milliseconds since the Unix Epoch.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,818,2021-07-06T19:55:41Z,2021-08-04T01:55:14Z,2021-08-04T01:55:14Z,MERGED,True,31,10,5,https://github.com/vector-of-bool,Fix: CDRIVER-4050: Set the correct uploadDate on GridFS files,6,[],https://github.com/mongodb/mongo-c-driver/pull/818,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/818#issuecomment-875901856,"Previously used the time from bson_get_monotonic_time(), which is
incorrect on most systems, as it is usually realtive to the system
uptime and is stored as microseconds, whereas uploadDate should be
stored as number of milliseconds since the Unix Epoch.",/gridfs_old/create_from_stream appears to be failing on the attached Evergreen patch build.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,818,2021-07-06T19:55:41Z,2021-08-04T01:55:14Z,2021-08-04T01:55:14Z,MERGED,True,31,10,5,https://github.com/vector-of-bool,Fix: CDRIVER-4050: Set the correct uploadDate on GridFS files,6,[],https://github.com/mongodb/mongo-c-driver/pull/818,https://github.com/vector-of-bool,3,https://github.com/mongodb/mongo-c-driver/pull/818#issuecomment-891985384,"Previously used the time from bson_get_monotonic_time(), which is
incorrect on most systems, as it is usually realtive to the system
uptime and is stored as microseconds, whereas uploadDate should be
stored as number of milliseconds since the Unix Epoch.",Rebased onto the recent master branch has test results in-sync with that branch. Should be ready to merge?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,819,2021-07-06T22:53:15Z,2021-07-07T14:49:10Z,2021-07-07T14:49:13Z,MERGED,True,57,40,4,https://github.com/jmikola,CDRIVER-4051 Sync valid-pass and CRUD unified tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/819,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/819,"https://jira.mongodb.org/browse/CDRIVER-4051
Synced with mongodb/specifications@44f8310","https://jira.mongodb.org/browse/CDRIVER-4051
Synced with mongodb/specifications@44f8310",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,820,2021-07-08T11:55:37Z,2021-08-04T12:36:14Z,2021-08-04T12:36:43Z,MERGED,True,252,21,8,https://github.com/alcaeus,Add missing features in unified test format,9,[],https://github.com/mongodb/mongo-c-driver/pull/820,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/820,"CDRIVER-4066, CDRIVER-4060, CDRIVER-4064
While implementing the command redaction tests, I selectively implemented version 1.5 of the unified test format, ignoring 1.2, 1.3, and 1.4 as they weren't necessary. This PR fixes this.
For schema version 1.2, I've skipped implementing the loop operation and the storeEventsAsEntities option, as they are only required once we resume work on drivers atlas testing. We may decide to implement these earlier, but I didn't want to do so given the tight timeline on the other features.
In version 1.3 (load balancer support), the new load-balanced topology mode is accepted, but it obviously never matches. This will be added in a separate pull request related to load balancer.","CDRIVER-4066, CDRIVER-4060, CDRIVER-4064
While implementing the command redaction tests, I selectively implemented version 1.5 of the unified test format, ignoring 1.2, 1.3, and 1.4 as they weren't necessary. This PR fixes this.
For schema version 1.2, I've skipped implementing the loop operation and the storeEventsAsEntities option, as they are only required once we resume work on drivers atlas testing. We may decide to implement these earlier, but I didn't want to do so given the tight timeline on the other features.
In version 1.3 (load balancer support), the new load-balanced topology mode is accepted, but it obviously never matches. This will be added in a separate pull request related to load balancer.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,821,2021-07-08T15:03:47Z,2021-07-09T00:12:36Z,2021-07-13T00:30:34Z,MERGED,True,211,16,10,https://github.com/kevinAlbs,CDRIVER-4054 support sessions in loadbalanced mode,3,[],https://github.com/mongodb/mongo-c-driver/pull/821,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/821,"Add MONGOC_TOPOLOGY_LOAD_BALANCED type
Add MONGOC_SERVER_LOAD_BALANCER type
Do not expire sessions in lb mode
Always support sessions in lb mode","Add MONGOC_TOPOLOGY_LOAD_BALANCED type
Add MONGOC_SERVER_LOAD_BALANCER type
Do not expire sessions in lb mode
Always support sessions in lb mode",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,822,2021-07-10T15:15:40Z,2021-07-18T23:44:43Z,2022-02-03T14:28:40Z,MERGED,True,840,210,21,https://github.com/kevinAlbs,CDRIVER-3653 use handshake metadata for connection checks,10,[],https://github.com/mongodb/mongo-c-driver/pull/822,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/822,"Terms

handshake description is a server description constructed during connection handshake.
monitor description is a server description constructed and updated in server monitoring.

Motivation

libmongoc currently uses monitor descriptions when constructing commands (to check wire version, how to pass read preferences, etc.). This is racy, and the cause of bugs like CDRIVER-3404.
Supporting load balancer requires setting the monitor description to an empty LoadBalancer description. A load balancer can front many backing servers. Connections must track the handshake description to work correctly with load balancers.

Summary

Store handshake descriptions alongside their corresponding connections.
Update change stream and transactions wire version checks to check the handshake description instead of the monitor description.
Update auth commands to use the handshake description when constructing commands.
Add mongoc_client_get_handshake_description for wrapping drivers to obtain a handshake description.

Notes

As a happy consequence, change streams now send a killCursors command when resuming due to an error that marks a server unknown. Previously this would clear the wire version on the connection.","Terms

handshake description is a server description constructed during connection handshake.
monitor description is a server description constructed and updated in server monitoring.

Motivation

libmongoc currently uses monitor descriptions when constructing commands (to check wire version, how to pass read preferences, etc.). This is racy, and the cause of bugs like CDRIVER-3404.
Supporting load balancer requires setting the monitor description to an empty LoadBalancer description. A load balancer can front many backing servers. Connections must track the handshake description to work correctly with load balancers.

Summary

Store handshake descriptions alongside their corresponding connections.
Update change stream and transactions wire version checks to check the handshake description instead of the monitor description.
Update auth commands to use the handshake description when constructing commands.
Add mongoc_client_get_handshake_description for wrapping drivers to obtain a handshake description.

Notes

As a happy consequence, change streams now send a killCursors command when resuming due to an error that marks a server unknown. Previously this would clear the wire version on the connection.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,822,2021-07-10T15:15:40Z,2021-07-18T23:44:43Z,2022-02-03T14:28:40Z,MERGED,True,840,210,21,https://github.com/kevinAlbs,CDRIVER-3653 use handshake metadata for connection checks,10,[],https://github.com/mongodb/mongo-c-driver/pull/822,https://github.com/codecov-commenter,2,https://github.com/mongodb/mongo-c-driver/pull/822#issuecomment-881772799,"Terms

handshake description is a server description constructed during connection handshake.
monitor description is a server description constructed and updated in server monitoring.

Motivation

libmongoc currently uses monitor descriptions when constructing commands (to check wire version, how to pass read preferences, etc.). This is racy, and the cause of bugs like CDRIVER-3404.
Supporting load balancer requires setting the monitor description to an empty LoadBalancer description. A load balancer can front many backing servers. Connections must track the handshake description to work correctly with load balancers.

Summary

Store handshake descriptions alongside their corresponding connections.
Update change stream and transactions wire version checks to check the handshake description instead of the monitor description.
Update auth commands to use the handshake description when constructing commands.
Add mongoc_client_get_handshake_description for wrapping drivers to obtain a handshake description.

Notes

As a happy consequence, change streams now send a killCursors command when resuming due to an error that marks a server unknown. Previously this would clear the wire version on the connection.","Codecov Report

Merging #822 (10214c0) into master (68d0948) will increase coverage by 0.34%.
The diff coverage is 87.77%.


@@            Coverage Diff             @@
##           master     #822      +/-   ##
==========================================
+ Coverage   56.79%   57.14%   +0.34%     
==========================================
  Files         257      258       +1     
  Lines       70573    70791     +218     
==========================================
+ Hits        40084    40454     +370     
+ Misses      30489    30337     -152     



Impacted Files
Coverage Δ





src/libmongoc/src/mongoc/mongoc-client-session.c
9.58% <0.00%> (-0.05%)
⬇️


src/libmongoc/src/mongoc/mongoc-cluster-aws.c
0.00% <ø> (ø)



src/libmongoc/tests/test-mongoc-change-stream.c
6.39% <0.00%> (-0.03%)
⬇️


src/libmongoc/src/mongoc/mongoc-change-stream.c
32.33% <63.63%> (+4.30%)
⬆️


src/libmongoc/src/mongoc/mongoc-cluster.c
61.84% <80.35%> (+0.92%)
⬆️


src/libmongoc/tests/test-mongoc-client.c
28.23% <85.52%> (+3.03%)
⬆️


src/libmongoc/src/mongoc/mongoc-client.c
60.29% <85.71%> (+0.22%)
⬆️


...c/libmongoc/src/mongoc/mongoc-server-description.c
88.65% <100.00%> (+0.88%)
⬆️


src/libmongoc/src/mongoc/mongoc-topology-scanner.c
88.14% <100.00%> (+1.64%)
⬆️


src/libmongoc/tests/test-libmongoc.c
78.52% <100.00%> (+0.02%)
⬆️


... and 18 more






Continue to review full report at Codecov.

Legend - Click here to learn more
Δ = absolute <relative> (impact), ø = not affected, ? = missing data
Powered by Codecov. Last update 68d0948...10214c0. Read the comment docs.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,823,2021-07-13T00:22:07Z,2021-07-13T00:50:47Z,2022-02-03T14:29:09Z,MERGED,True,342,859,26,https://github.com/kevinAlbs,"Revert ""CDRIVER-3871 implement public setters and getters for timeoutMS""",2,[],https://github.com/mongodb/mongo-c-driver/pull/823,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/823,This reverts commit 95ed934.,This reverts commit 95ed934.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,824,2021-07-13T19:39:55Z,2021-07-14T17:45:44Z,2021-07-14T17:45:47Z,MERGED,True,807,188,10,https://github.com/benjirewis,continue snapshot reads implementation,6,[],https://github.com/mongodb/mongo-c-driver/pull/824,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/824,"CDRIVER-4042 Add snapshot to all commands when enabled
CDRIVER-4043 Raise error for snapshot sessions on < 5.0
Syncs spec tests for snapshot sessions. Removes command name check in _mongoc_client_session_append_read_concern for appending ""snapshot"" level read concern. We'll now rely on the server to error if a user runs an unsupported command with ""snapshot"" level read concern. Raises a new error before potentially appending ""snapshot"" level read concern if wire version is less than 13 (5.0). Adds the missing listIndexes operation to the unified test runner.","CDRIVER-4042 Add snapshot to all commands when enabled
CDRIVER-4043 Raise error for snapshot sessions on < 5.0
Syncs spec tests for snapshot sessions. Removes command name check in _mongoc_client_session_append_read_concern for appending ""snapshot"" level read concern. We'll now rely on the server to error if a user runs an unsupported command with ""snapshot"" level read concern. Raises a new error before potentially appending ""snapshot"" level read concern if wire version is less than 13 (5.0). Adds the missing listIndexes operation to the unified test runner.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,825,2021-07-13T22:58:24Z,2021-07-14T16:04:29Z,2021-07-14T16:05:06Z,MERGED,True,1,1,1,https://github.com/rcsanchez97,fix typo,1,[],https://github.com/mongodb/mongo-c-driver/pull/825,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/825,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,826,2021-07-14T17:49:04Z,2021-07-15T15:23:06Z,2021-07-15T15:23:08Z,MERGED,True,84,2,3,https://github.com/benjirewis,CDRIVER-4036 document new API added for snapshot reads,3,[],https://github.com/mongodb/mongo-c-driver/pull/826,https://github.com/benjirewis,1,https://github.com/mongodb/mongo-c-driver/pull/826,"CDRIVER-4036
Adds documentation for mongoc_session_opts_get_snapshot and mongoc_session_opts_set_snapshot. Also mentions a possible error if snapshot is enabled when using mongoc_session_opts_set_causal_consistency.","CDRIVER-4036
Adds documentation for mongoc_session_opts_get_snapshot and mongoc_session_opts_set_snapshot. Also mentions a possible error if snapshot is enabled when using mongoc_session_opts_set_causal_consistency.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,827,2021-07-15T18:29:55Z,2021-07-15T18:41:57Z,2021-07-15T18:41:57Z,CLOSED,False,1,0,1,https://github.com/kevinAlbs,CDRIVER-4080 change docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/827,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/827,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,828,2021-07-15T20:28:39Z,2021-07-26T13:45:04Z,2022-02-03T14:29:36Z,MERGED,True,192,1,9,https://github.com/kevinAlbs,CDRIVER-4056 Send LB in handshake and reject non-LB connections,6,[],https://github.com/mongodb/mongo-c-driver/pull/828,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/828,"Add loadBalanced to the handshake.
Reject server connections that do not include loadBalanced in the reply.","Add loadBalanced to the handshake.
Reject server connections that do not include loadBalanced in the reply.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,829,2021-07-16T18:26:34Z,2021-07-19T23:05:55Z,2021-07-19T23:06:05Z,MERGED,True,2,4,1,https://github.com/chardan,CDRIVER-4091 - Truncation in strncpy() causes build error,1,[],https://github.com/mongodb/mongo-c-driver/pull/829,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/829,"https://jira.mongodb.org/browse/CDRIVER-4091
gcc 9.3.0 complains that because the strncpy() call uses the source's size as a bound,
the trailing NULL will not be copied.
Replaced with:
updated allocation size of destination to include room for the NULL character
eliminated redundant srlen()
changed strncpy() call to strcpy(), which includes the trailing NULL
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","https://jira.mongodb.org/browse/CDRIVER-4091
gcc 9.3.0 complains that because the strncpy() call uses the source's size as a bound,
the trailing NULL will not be copied.
Replaced with:
updated allocation size of destination to include room for the NULL character
eliminated redundant srlen()
changed strncpy() call to strcpy(), which includes the trailing NULL
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,829,2021-07-16T18:26:34Z,2021-07-19T23:05:55Z,2021-07-19T23:06:05Z,MERGED,True,2,4,1,https://github.com/chardan,CDRIVER-4091 - Truncation in strncpy() causes build error,1,[],https://github.com/mongodb/mongo-c-driver/pull/829,https://github.com/chardan,2,https://github.com/mongodb/mongo-c-driver/pull/829#issuecomment-882827060,"https://jira.mongodb.org/browse/CDRIVER-4091
gcc 9.3.0 complains that because the strncpy() call uses the source's size as a bound,
the trailing NULL will not be copied.
Replaced with:
updated allocation size of destination to include room for the NULL character
eliminated redundant srlen()
changed strncpy() call to strcpy(), which includes the trailing NULL
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","@kevinAlbs It looks to me that the failing tests are the ones that are presently expected to fail. But as I'm quite green with Evergreen myself, if you could please sanity check that before I merge it, I'd appreciate it!",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,830,2021-07-21T03:56:38Z,2021-07-21T16:42:29Z,2021-07-21T16:42:43Z,MERGED,True,20,2,2,https://github.com/rcsanchez97,sync RPM spec file for 1.18.0 release,1,[],https://github.com/mongodb/mongo-c-driver/pull/830,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/830,Patch build; https://spruce.mongodb.com/version/60f792e2d6d80a33527d4df7/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Patch build; https://spruce.mongodb.com/version/60f792e2d6d80a33527d4df7/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,831,2021-07-22T01:06:21Z,2021-07-29T21:17:41Z,2022-02-03T14:29:16Z,MERGED,True,760,73,21,https://github.com/kevinAlbs,CDRIVER-4058 Load balancer: Error handling,21,[],https://github.com/mongodb/mongo-c-driver/pull/831,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/831,"Implements the change specified in the Error Handling section of the Load Balancer specification.

Ignore SDAM error handling on errors before the handshake.

This was done in the SDAM error handling function _mongoc_topology_handle_app_error and updates to the function for obtaining an application-use connection: _mongoc_cluster_stream_for_server.


Determine the connection generation based on the serviceId field in the handshake response.

This is done with a new data structure called a generation map. It maps a serviceID to a connection pool generation. In non-LB topologies, the serviceID is always the zero'ed ObjectID.



The remaining changes specified in the Error Handling section of the Load Balancer specification were already completed as part of #816:

Process SDAM error handling for errors after the initial handshake, but do not mark the server Unknown.
Do not make any changes to the TopologyDescription or ServerDescription on a state change error.

I added a refactoring change that was not in scope, but seemed small and helpful for maintainability:

Remove redundant generation field from mongoc_cluster_node_t","Implements the change specified in the Error Handling section of the Load Balancer specification.

Ignore SDAM error handling on errors before the handshake.

This was done in the SDAM error handling function _mongoc_topology_handle_app_error and updates to the function for obtaining an application-use connection: _mongoc_cluster_stream_for_server.


Determine the connection generation based on the serviceId field in the handshake response.

This is done with a new data structure called a generation map. It maps a serviceID to a connection pool generation. In non-LB topologies, the serviceID is always the zero'ed ObjectID.



The remaining changes specified in the Error Handling section of the Load Balancer specification were already completed as part of #816:

Process SDAM error handling for errors after the initial handshake, but do not mark the server Unknown.
Do not make any changes to the TopologyDescription or ServerDescription on a state change error.

I added a refactoring change that was not in scope, but seemed small and helpful for maintainability:

Remove redundant generation field from mongoc_cluster_node_t",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,831,2021-07-22T01:06:21Z,2021-07-29T21:17:41Z,2022-02-03T14:29:16Z,MERGED,True,760,73,21,https://github.com/kevinAlbs,CDRIVER-4058 Load balancer: Error handling,21,[],https://github.com/mongodb/mongo-c-driver/pull/831,https://github.com/chardan,2,https://github.com/mongodb/mongo-c-driver/pull/831#issuecomment-888637760,"Implements the change specified in the Error Handling section of the Load Balancer specification.

Ignore SDAM error handling on errors before the handshake.

This was done in the SDAM error handling function _mongoc_topology_handle_app_error and updates to the function for obtaining an application-use connection: _mongoc_cluster_stream_for_server.


Determine the connection generation based on the serviceId field in the handshake response.

This is done with a new data structure called a generation map. It maps a serviceID to a connection pool generation. In non-LB topologies, the serviceID is always the zero'ed ObjectID.



The remaining changes specified in the Error Handling section of the Load Balancer specification were already completed as part of #816:

Process SDAM error handling for errors after the initial handshake, but do not mark the server Unknown.
Do not make any changes to the TopologyDescription or ServerDescription on a state change error.

I added a refactoring change that was not in scope, but seemed small and helpful for maintainability:

Remove redundant generation field from mongoc_cluster_node_t",+1 LGTM-- thanks for the discussions!,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,832,2021-07-24T02:19:28Z,2021-07-26T23:25:56Z,2021-07-26T23:26:30Z,MERGED,True,0,38,2,https://github.com/rcsanchez97,CDRIVER-3923 drop deprecated ppc64le build platform,1,[],https://github.com/mongodb/mongo-c-driver/pull/832,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/832,Patch build: https://spruce.mongodb.com/version/60fb72f7d6d80a4987281ff4/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Patch build: https://spruce.mongodb.com/version/60fb72f7d6d80a4987281ff4/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,833,2021-07-27T00:35:30Z,2021-07-29T16:00:28Z,2022-02-03T14:28:49Z,MERGED,True,122,25,6,https://github.com/kevinAlbs,CDRIVER-4076 skip legacy opcode / getLastError tests on pre 5.1,6,[],https://github.com/mongodb/mongo-c-driver/pull/833,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/833,"Background
The latest 5.1 pre-release removes support for:

legacy wire protocol op codes in SERVER-57457 and SERVER-57391.
The deprecated getLastError command in SERVER-57390
This also addresses CDRIVER-4092 by fixing tests that send OP_GET_MORE and legacy OP_QUERY

Changes

Skip /command_monitoring/kill_cursors_deprecated on latest servers since it tests sending OP_KILL_CURSORS.
Skip /BulkOperation/write_concern/split on latest servers since it sends getLastError.
Update test_kill_cursor_live to use the getMore command on newer servers, and the legacy OP_GET_MORE on older servers.
Skip exhaust cursor tests on latest servers, since exhaust cursors use the legacy OP_QUERY code.","Background
The latest 5.1 pre-release removes support for:

legacy wire protocol op codes in SERVER-57457 and SERVER-57391.
The deprecated getLastError command in SERVER-57390
This also addresses CDRIVER-4092 by fixing tests that send OP_GET_MORE and legacy OP_QUERY

Changes

Skip /command_monitoring/kill_cursors_deprecated on latest servers since it tests sending OP_KILL_CURSORS.
Skip /BulkOperation/write_concern/split on latest servers since it sends getLastError.
Update test_kill_cursor_live to use the getMore command on newer servers, and the legacy OP_GET_MORE on older servers.
Skip exhaust cursor tests on latest servers, since exhaust cursors use the legacy OP_QUERY code.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,834,2021-07-27T22:40:09Z,2021-07-30T15:43:34Z,2021-07-30T15:43:38Z,MERGED,True,339,13,16,https://github.com/jmikola,CDRIVER-4059 service_id on command monitoring events,2,[],https://github.com/mongodb/mongo-c-driver/pull/834,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/834,"https://jira.mongodb.org/browse/CDRIVER-4059
It's not often that I add new API methods, so please let me know if I missed anything. AFAICT, the docs don't report the version number when a particular method was introduced.","https://jira.mongodb.org/browse/CDRIVER-4059
It's not often that I add new API methods, so please let me know if I missed anything. AFAICT, the docs don't report the version number when a particular method was introduced.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,835,2021-07-29T15:33:46Z,2021-09-14T02:31:39Z,2021-09-14T02:31:39Z,CLOSED,False,619,916,39,https://github.com/Psoke,CDRIVER,9,[],https://github.com/mongodb/mongo-c-driver/pull/835,https://github.com/Psoke,1,https://github.com/mongodb/mongo-c-driver/pull/835,"Hey there,
I know that I am absolutely in the wrong place to ask any questions regarding this C-Driver and if I might bother somebody with this, feel free to delete my post. But after trying the official forum and hours of internet search I'm still left with several questions, so I thought mabye the professionals here could help me.
I just started using the C-Driver a week ago. In the end I just would like to navigate through specific documents, reading and writing values as I go.
I am currently initiating a client, using mongoc_client_get_collection(), initiating a cursor on that collection with mongoc_collection_find_with_opts() and then initiating an bson_iter and iterating through the document taking the keys and values with bson_iter_key() and bson_iter_int32() for example.
Is this the way to go? As I see it, my program allocates memory for the whole collection, downloads and stores it locally. Sure I am able to read the data this way, but what about writing it? If I overwrite my local version, how does the change get uploaded?
Is there a better way to access and change data and if there is, could you show it to me? There a just so few examples out there in C or maybe I am just to incompetent to find them.
thank you and sorry for the inconvenience","Hey there,
I know that I am absolutely in the wrong place to ask any questions regarding this C-Driver and if I might bother somebody with this, feel free to delete my post. But after trying the official forum and hours of internet search I'm still left with several questions, so I thought mabye the professionals here could help me.
I just started using the C-Driver a week ago. In the end I just would like to navigate through specific documents, reading and writing values as I go.
I am currently initiating a client, using mongoc_client_get_collection(), initiating a cursor on that collection with mongoc_collection_find_with_opts() and then initiating an bson_iter and iterating through the document taking the keys and values with bson_iter_key() and bson_iter_int32() for example.
Is this the way to go? As I see it, my program allocates memory for the whole collection, downloads and stores it locally. Sure I am able to read the data this way, but what about writing it? If I overwrite my local version, how does the change get uploaded?
Is there a better way to access and change data and if there is, could you show it to me? There a just so few examples out there in C or maybe I am just to incompetent to find them.
thank you and sorry for the inconvenience",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,835,2021-07-29T15:33:46Z,2021-09-14T02:31:39Z,2021-09-14T02:31:39Z,CLOSED,False,619,916,39,https://github.com/Psoke,CDRIVER,9,[],https://github.com/mongodb/mongo-c-driver/pull/835,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/835#issuecomment-918743653,"Hey there,
I know that I am absolutely in the wrong place to ask any questions regarding this C-Driver and if I might bother somebody with this, feel free to delete my post. But after trying the official forum and hours of internet search I'm still left with several questions, so I thought mabye the professionals here could help me.
I just started using the C-Driver a week ago. In the end I just would like to navigate through specific documents, reading and writing values as I go.
I am currently initiating a client, using mongoc_client_get_collection(), initiating a cursor on that collection with mongoc_collection_find_with_opts() and then initiating an bson_iter and iterating through the document taking the keys and values with bson_iter_key() and bson_iter_int32() for example.
Is this the way to go? As I see it, my program allocates memory for the whole collection, downloads and stores it locally. Sure I am able to read the data this way, but what about writing it? If I overwrite my local version, how does the change get uploaded?
Is there a better way to access and change data and if there is, could you show it to me? There a just so few examples out there in C or maybe I am just to incompetent to find them.
thank you and sorry for the inconvenience","Hey there,
I know that I am absolutely in the wrong place to ask any questions regarding this C-Driver and if I might bother somebody with this, feel free to delete my post. But after trying the official forum and hours of internet search I'm still left with several questions, so I thought mabye the professionals here could help me.

Not a problem at all. I am closing this issue since pull requests are not meant for Q&A. I have responded in-line to your comments. For further assistance, please ask in the community forums with the c-driver tag.

I just started using the C-Driver a week ago. In the end I just would like to navigate through specific documents, reading and writing values as I go.
I am currently initiating a client, using mongoc_client_get_collection(), initiating a cursor on that collection with mongoc_collection_find_with_opts() and then initiating an bson_iter and iterating through the document taking the keys and values with bson_iter_key() and bson_iter_int32() for example.

This sounds like the right idea.

Is this the way to go? As I see it, my program allocates memory for the whole collection, downloads and stores it locally.

A mongoc_cursor_t will only cache a single server response to the find command or getMore command as it iterates. You can configure the batchSize option in the bson_t* opts passed to mongoc_collection_find_with_opts. That can further limit a maximum number of documents the server will return in a single response.

Sure I am able to read the data this way, but what about writing it? If I overwrite my local version, how does the change get uploaded?

You will need to send separate update operations. This could be done with functions like mongoc_collection_replace_one. Many updates can be batched with a mongoc_bulk_operation_t.
Sincerely,
Kevin",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,836,2021-07-29T22:55:43Z,2021-07-30T20:12:23Z,2021-07-30T20:12:28Z,MERGED,True,5,5,3,https://github.com/rcsanchez97,CDRIVER-4112 use arm64 hosts for rpm-package-build,1,[],https://github.com/mongodb/mongo-c-driver/pull/836,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/836,Patch build: https://spruce.mongodb.com/version/61032dce850e6118fbedda87/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Patch build: https://spruce.mongodb.com/version/61032dce850e6118fbedda87/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,837,2021-07-30T02:20:08Z,2021-08-12T00:39:30Z,2022-02-03T14:29:08Z,MERGED,True,4843,865,99,https://github.com/kevinAlbs,CDRIVER-4062 test load balancer on evg,31,[],https://github.com/mongodb/mongo-c-driver/pull/837,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/837,"Scope

Add tasks to the Evergreen configuration based to test against a loadbalanced cluster.

Tests with auth+SSL and with no auth+SSL on both server version 5.0 and latest.
Runs tests against: new load balanced tests, all unified tests, retryable reads, retryable writes, change streams, and the C driver specific /loadbalanced/* tests.


Update test-libmongoc to support testing against a load balancer.

Support the environment variable MONGOC_TEST_LOADBALANCED to enable testing against load balancers in test-libmongoc.
Support the environment variables SINGLE_MONGOS_LB_URI, MULTI_MONGOS_LB_URI to set URIs for test clients.
Mock the serviceId when MONGOC_TEST_LOADBALANCED is true.
Support multiple occurrences of the -l flag in test-libmongoc and alias the flag as --match.
Remove unnecessary constraint of retryable writes tests for replica sets.


CDRIVER-4060 add remaining support to the unified test runner for the new loadbalancer spec tests.

Iterate the first result of a FindCursor in the createFindCursor operation.
Support appname as a URI parameter.
Skip listening or comparing CMAP (Connection Monitoring and Pooling) events, since the C driver does not implement CMAP (per CDRIVER-3525).



Notes for reviewers

73 of the files changed are from updating the JSON files from the specifications repo. Those were reviewed when they were added to the mongodb/specifications repo, so there is no need to review them. The ""File Filter"" in the review can collapse all of the JSON files.","Scope

Add tasks to the Evergreen configuration based to test against a loadbalanced cluster.

Tests with auth+SSL and with no auth+SSL on both server version 5.0 and latest.
Runs tests against: new load balanced tests, all unified tests, retryable reads, retryable writes, change streams, and the C driver specific /loadbalanced/* tests.


Update test-libmongoc to support testing against a load balancer.

Support the environment variable MONGOC_TEST_LOADBALANCED to enable testing against load balancers in test-libmongoc.
Support the environment variables SINGLE_MONGOS_LB_URI, MULTI_MONGOS_LB_URI to set URIs for test clients.
Mock the serviceId when MONGOC_TEST_LOADBALANCED is true.
Support multiple occurrences of the -l flag in test-libmongoc and alias the flag as --match.
Remove unnecessary constraint of retryable writes tests for replica sets.


CDRIVER-4060 add remaining support to the unified test runner for the new loadbalancer spec tests.

Iterate the first result of a FindCursor in the createFindCursor operation.
Support appname as a URI parameter.
Skip listening or comparing CMAP (Connection Monitoring and Pooling) events, since the C driver does not implement CMAP (per CDRIVER-3525).



Notes for reviewers

73 of the files changed are from updating the JSON files from the specifications repo. Those were reviewed when they were added to the mongodb/specifications repo, so there is no need to review them. The ""File Filter"" in the review can collapse all of the JSON files.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,838,2021-07-30T19:31:21Z,2021-08-04T17:36:32Z,2021-08-04T17:36:35Z,MERGED,True,87,67,5,https://github.com/jmikola,CDRIVER-4110: Default for causal_consistency depends on snapshot,3,[],https://github.com/mongodb/mongo-c-driver/pull/838,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/838,"https://jira.mongodb.org/browse/CDRIVER-4110

Removes a work-around from the unified test runner originally introduced in d5f73e1.
Relocates the snapshot prose test, since it's part of the session spec (not transactions)
Use mongoc_optional_t in mongoc_session_opt_t to track values for causalConsistency and snapshot options, and enforce the causalConsistency logic in the corresponding getter method.","https://jira.mongodb.org/browse/CDRIVER-4110

Removes a work-around from the unified test runner originally introduced in d5f73e1.
Relocates the snapshot prose test, since it's part of the session spec (not transactions)
Use mongoc_optional_t in mongoc_session_opt_t to track values for causalConsistency and snapshot options, and enforce the causalConsistency logic in the corresponding getter method.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,839,2021-08-02T18:47:40Z,2021-08-09T18:45:15Z,2021-08-09T18:45:16Z,MERGED,True,10,0,3,https://github.com/kevinAlbs,CDRIVER-4068 add connectivity tests for serverless,1,[],https://github.com/mongodb/mongo-c-driver/pull/839,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/839,"Add a connectivity test to ensure we can connect and send a ping command to a live serverless instance.
Tests against the latest server are failing due to a recent server change. It is described in CDRIVER-4120 and resolved in #843.","Add a connectivity test to ensure we can connect and send a ping command to a live serverless instance.
Tests against the latest server are failing due to a recent server change. It is described in CDRIVER-4120 and resolved in #843.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,839,2021-08-02T18:47:40Z,2021-08-09T18:45:15Z,2021-08-09T18:45:16Z,MERGED,True,10,0,3,https://github.com/kevinAlbs,CDRIVER-4068 add connectivity tests for serverless,1,[],https://github.com/mongodb/mongo-c-driver/pull/839,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/839#issuecomment-895454030,"Add a connectivity test to ensure we can connect and send a ping command to a live serverless instance.
Tests against the latest server are failing due to a recent server change. It is described in CDRIVER-4120 and resolved in #843.","+1 LGTM. Please bear in mind that I'm new to the test system, so you may want another set of eyes on it-- but from what I'm gleaning, this looks good. :-)

Thank you for the review! Given the small scope of the change, I am OK with one reviewer.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,840,2021-08-03T16:30:12Z,2021-09-13T23:55:18Z,2021-09-13T23:55:18Z,MERGED,True,758,253,15,https://github.com/vector-of-bool,CDRIVER-4124 New atomics,28,[],https://github.com/mongodb/mongo-c-driver/pull/840,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/840,"This defines a new set of atomic operation functions for various bit-width integer types, based on the C11 functions (sans generic functions, because no _Generic).","This defines a new set of atomic operation functions for various bit-width integer types, based on the C11 functions (sans generic functions, because no _Generic).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,840,2021-08-03T16:30:12Z,2021-09-13T23:55:18Z,2021-09-13T23:55:18Z,MERGED,True,758,253,15,https://github.com/vector-of-bool,CDRIVER-4124 New atomics,28,[],https://github.com/mongodb/mongo-c-driver/pull/840,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/840#issuecomment-912827645,"This defines a new set of atomic operation functions for various bit-width integer types, based on the C11 functions (sans generic functions, because no _Generic).",I'm unsure of the CI failures for Clang 3.8. I am unable to understand what is indicated by the failure logs.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,840,2021-08-03T16:30:12Z,2021-09-13T23:55:18Z,2021-09-13T23:55:18Z,MERGED,True,758,253,15,https://github.com/vector-of-bool,CDRIVER-4124 New atomics,28,[],https://github.com/mongodb/mongo-c-driver/pull/840,https://github.com/vector-of-bool,3,https://github.com/mongodb/mongo-c-driver/pull/840#issuecomment-912828134,"This defines a new set of atomic operation functions for various bit-width integer types, based on the C11 functions (sans generic functions, because no _Generic).","@eramongodb I added more complete tests, but I'm not sure if it could be labeled ""exhaustive."" At least most of the atomic APIs are invoke and inspected.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,840,2021-08-03T16:30:12Z,2021-09-13T23:55:18Z,2021-09-13T23:55:18Z,MERGED,True,758,253,15,https://github.com/vector-of-bool,CDRIVER-4124 New atomics,28,[],https://github.com/mongodb/mongo-c-driver/pull/840,https://github.com/vector-of-bool,4,https://github.com/mongodb/mongo-c-driver/pull/840#issuecomment-915504801,"This defines a new set of atomic operation functions for various bit-width integer types, based on the C11 functions (sans generic functions, because no _Generic).","@kevinAlbs ping on this one.
The clang-3.8-scan-build failure is baffling me. I think there might be something awry with scan-build. My best guess is that it may be setting __LP64__ even though it is compililng/linking for 32bit",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,841,2021-08-04T17:25:31Z,2021-08-06T06:11:06Z,2021-08-06T06:11:10Z,MERGED,True,4,4,3,https://github.com/alcaeus,CDRIVER-3502 Lift restriction on authSource without credentials,1,[],https://github.com/mongodb/mongo-c-driver/pull/841,https://github.com/alcaeus,1,https://github.com/mongodb/mongo-c-driver/pull/841,CDRIVER-3502,CDRIVER-3502,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,842,2021-08-06T23:46:59Z,2021-08-24T18:27:17Z,2021-08-24T18:27:17Z,MERGED,True,91,2,4,https://github.com/vector-of-bool,Automatically compile with CCache and link using LLD if possible,5,[],https://github.com/mongodb/mongo-c-driver/pull/842,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/842,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,842,2021-08-06T23:46:59Z,2021-08-24T18:27:17Z,2021-08-24T18:27:17Z,MERGED,True,91,2,4,https://github.com/vector-of-bool,Automatically compile with CCache and link using LLD if possible,5,[],https://github.com/mongodb/mongo-c-driver/pull/842,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/842#issuecomment-897860261,,@rcsanchez97 I'll update the style and docs. As for whether they change the build output: If they resulted in different build results then I believe that would be a fairly catastrophic bug in CCache and/or LLD 😄. I'm not sure if/how to modify any Evergreen environments in a way that will exercise these options.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,843,2021-08-07T19:13:13Z,2021-08-10T13:41:51Z,2022-02-03T14:29:28Z,MERGED,True,138,10,3,https://github.com/kevinAlbs,CDRIVER-4093 add versioned API strict examples 5-8,5,[],https://github.com/mongodb/mongo-c-driver/pull/843,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/843,This also includes a fix for tests against latest server builds (CDRIVER-4120).,This also includes a fix for tests against latest server builds (CDRIVER-4120).,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,844,2021-08-10T02:03:56Z,2021-08-21T00:59:30Z,2021-08-21T00:59:30Z,MERGED,True,740,52,4,https://github.com/vector-of-bool,CDRIVER-4104: Filter out events that have been redacted when observeSensitiveComands is false,4,[],https://github.com/mongodb/mongo-c-driver/pull/844,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/844,Closes CDRIVER-4104,Closes CDRIVER-4104,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,844,2021-08-10T02:03:56Z,2021-08-21T00:59:30Z,2021-08-21T00:59:30Z,MERGED,True,740,52,4,https://github.com/vector-of-bool,CDRIVER-4104: Filter out events that have been redacted when observeSensitiveComands is false,4,[],https://github.com/mongodb/mongo-c-driver/pull/844,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/844#issuecomment-902272133,Closes CDRIVER-4104,"Looks like there were some goofs on some of the CI agents, but otherwise fixed those two failing tests.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,845,2021-08-10T17:03:38Z,2021-08-16T14:02:21Z,2021-08-16T14:06:04Z,MERGED,True,11,11,1,https://github.com/eramongodb,CDRIVER-4106 Update numbers for existing SRV polling prose tests.,1,[],https://github.com/mongodb/mongo-c-driver/pull/845,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/845,"Only prose test 9 is currently implemented according to spec. Behavior of test_srv_polling_mocked does not conform to prose tests described by spec. Therefore, only names related to prose test 9 are updated with numbering.
Prose tests 1 through 8 are to be implemented separately; see CDRIVER-4125.

This resolves CDRIVER-4106.
Names of tests and test functions are modelled after existing numbered prose tests such as those in test-mongoc-crud.c.","Only prose test 9 is currently implemented according to spec. Behavior of test_srv_polling_mocked does not conform to prose tests described by spec. Therefore, only names related to prose test 9 are updated with numbering.
Prose tests 1 through 8 are to be implemented separately; see CDRIVER-4125.

This resolves CDRIVER-4106.
Names of tests and test functions are modelled after existing numbered prose tests such as those in test-mongoc-crud.c.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,846,2021-08-11T20:19:47Z,2021-08-16T14:27:35Z,2021-08-16T14:27:40Z,MERGED,True,4,3,1,https://github.com/eramongodb,Add instructions to enable fail points for test suite,1,[],https://github.com/mongodb/mongo-c-driver/pull/846,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/846,"Several tests require use of the configureFailPoint command to trigger server-side errors. The command must be enabled via configuration file or command line option when starting mongod.
The configureFailPoint command is not yet documented; see DOCS-10784.

This PR is motivated by my experience following written instructions to run the test suite locally. After following instructions, several tests were failing due to the error: no such command: 'configureFailPoint'.
Diagnosing this issue was difficult due to the configureFailPoint command having little to no documentation. It is however mentioned in the unified test format specification. To correctly run the entire test suite, fail points must be enabled via the enableTestCommands server parameter. Discovering this was difficult due to relevant information being scattered around in unusual locations; notably, it is not mentioned in any official documentation pages.
This PR seeks to improve the accuracy of testing instructions by explicitly including the command line option when starting mongod.","Several tests require use of the configureFailPoint command to trigger server-side errors. The command must be enabled via configuration file or command line option when starting mongod.
The configureFailPoint command is not yet documented; see DOCS-10784.

This PR is motivated by my experience following written instructions to run the test suite locally. After following instructions, several tests were failing due to the error: no such command: 'configureFailPoint'.
Diagnosing this issue was difficult due to the configureFailPoint command having little to no documentation. It is however mentioned in the unified test format specification. To correctly run the entire test suite, fail points must be enabled via the enableTestCommands server parameter. Discovering this was difficult due to relevant information being scattered around in unusual locations; notably, it is not mentioned in any official documentation pages.
This PR seeks to improve the accuracy of testing instructions by explicitly including the command line option when starting mongod.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,847,2021-08-11T20:51:38Z,2021-09-13T20:18:48Z,2021-09-13T20:18:48Z,MERGED,True,953,210,15,https://github.com/vector-of-bool,CDRIVER-4113: Thread-safe pool for server session objects,23,[],https://github.com/mongodb/mongo-c-driver/pull/847,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/847,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,847,2021-08-11T20:51:38Z,2021-09-13T20:18:48Z,2021-09-13T20:18:48Z,MERGED,True,953,210,15,https://github.com/vector-of-bool,CDRIVER-4113: Thread-safe pool for server session objects,23,[],https://github.com/mongodb/mongo-c-driver/pull/847,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/847#issuecomment-914492504,,"Looks like there is a warning-as-error for -Waggregate-return. Some digging suggests this is an archaic warning. It's listed in maintainer-flags.txt, but I don't know why it was added.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,847,2021-08-11T20:51:38Z,2021-09-13T20:18:48Z,2021-09-13T20:18:48Z,MERGED,True,953,210,15,https://github.com/vector-of-bool,CDRIVER-4113: Thread-safe pool for server session objects,23,[],https://github.com/mongodb/mongo-c-driver/pull/847,https://github.com/vector-of-bool,3,https://github.com/mongodb/mongo-c-driver/pull/847#issuecomment-914684395,,"I cannot find any compelling reason to keep -Waggregate-return, so I simply removed it. Are there any objections?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,847,2021-08-11T20:51:38Z,2021-09-13T20:18:48Z,2021-09-13T20:18:48Z,MERGED,True,953,210,15,https://github.com/vector-of-bool,CDRIVER-4113: Thread-safe pool for server session objects,23,[],https://github.com/mongodb/mongo-c-driver/pull/847,https://github.com/vector-of-bool,4,https://github.com/mongodb/mongo-c-driver/pull/847#issuecomment-917131139,,"I believe that everything should be happy now, sans flaky test failures.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,848,2021-08-13T15:55:39Z,2021-08-18T13:41:18Z,2022-02-03T14:28:55Z,MERGED,True,30,10,2,https://github.com/kevinAlbs,CDRIVER-4093 fix versioned API sample tests,7,[],https://github.com/mongodb/mongo-c-driver/pull/848,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/848,Addresses test failures introduced in #843 to the versioned API tests and 5.0 sharded tests.,Addresses test failures introduced in #843 to the versioned API tests and 5.0 sharded tests.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,849,2021-08-16T18:04:13Z,2021-08-16T18:45:14Z,2021-08-16T18:45:14Z,CLOSED,False,2,0,1,https://github.com/chardan,CDRIVER-4074 - Update documentation for Time Series,1,[],https://github.com/mongodb/mongo-c-driver/pull/849,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/849,"Adds a note with a link to Time Series Collections from database
creation.
It may not be immediately clear to users that time series collections
can be created through mongoc_database_create_collection().
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","Adds a note with a link to Time Series Collections from database
creation.
It may not be immediately clear to users that time series collections
can be created through mongoc_database_create_collection().
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,850,2021-08-16T21:44:08Z,2021-08-19T16:28:56Z,2021-09-08T16:36:54Z,MERGED,True,169,201,5,https://github.com/eramongodb,CDRIVER-3632 Address pedantic warnings for function pointer conversions,3,[],https://github.com/mongodb/mongo-c-driver/pull/850,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/850,"Conversion between object pointers and function pointers is undefined behavior, though permitted as a ""common extension"" by the C standard (see N1570 J.5.7 ""Function pointer casts"").
This commit defines a new TestSuite_AddFullWithTestFn macro as a convenient utility that defines an intermediate TestFuncCtx object through which a given function pointer is passed via the ctx parameter without incurring function pointer <-> object pointer conversions.

Converting between object pointers and function pointers is undefined behavior per N1570 (C11 standard draft). It is however specified as a ""common extension"". As also noted by POSIX.1-2008:

Note that conversion from a void * pointer to a function pointer as in:
    fptr = (int (*)(int))dlsym(handle, ""my_function"");
is not defined by the ISO C standard.

This PR introduces a new TestSuite_AddFullWithTestFn macro as a conforming workaround. This utility stores the provided test function pointer _test_fn in an intermediate statically-allocated TestFnCtx object. A pointer to this intermediate object is then passed as the ctx parameter to _TestSuite_AddFull instead of the original test function pointer:
{
   static TestFnCtx ctx; // Note: variable is scoped to avoid local conflicts.
   ctx.test_fn = _test_fn;
   _TestSuite_AddFull (_suite, _name, _func, _dtor, &ctx, __VA_ARGS__, NULL);
}
An alternative solution that was considered is dynamically allocating the TestFuncCtx objects instead:
TestFnCtx *ctx = malloc (sizeof (TestFnCtx));

ctx->test_fn = (TestFunc) (_test_fn);
ctx->dtor = _dtor;

_TestSuite_AddFull (_suite, _name, _func, _TestSuite_TestFnCtxDtor, ctx, __VA_ARGS__, NULL);
This would necessitate an additional data member and function to correctly invoke the user-provided _dtor function when provided and free the TestFnCtx object:
void _TestSuite_TestFnCtxDtor (void *ctx) {
   TestFuncDtor dtor = ((TestFnCtx *) ctx)->dtor;
   if (dtor) { dtor (ctx); }
   free (ctx);
}
The binary size of test-libmongoc when built with the static solution vs. dynamic solution does not seem to make a compelling argument to favor one solution over the other. Some numbers when building on WSL Ubuntu 20.04 x86_64 using CMake-provided (version 3.16.3) default compiler arguments for Debug and Release mode:



Size (Bytes)
Debug (GCC 9)
Release (GCC 9)
Debug (Clang 10)
Release (Clang 10)




Static
8,666,040
3,585,632
8,063,480
3,253,640


Dynamic
8,666,680
3,586,520
8,062,272
3,252,328



Therefore I am in favor of the simpler ""static"" solution as currently proposed over the alternative ""dynamic"" solution.","Conversion between object pointers and function pointers is undefined behavior, though permitted as a ""common extension"" by the C standard (see N1570 J.5.7 ""Function pointer casts"").
This commit defines a new TestSuite_AddFullWithTestFn macro as a convenient utility that defines an intermediate TestFuncCtx object through which a given function pointer is passed via the ctx parameter without incurring function pointer <-> object pointer conversions.

Converting between object pointers and function pointers is undefined behavior per N1570 (C11 standard draft). It is however specified as a ""common extension"". As also noted by POSIX.1-2008:

Note that conversion from a void * pointer to a function pointer as in:
    fptr = (int (*)(int))dlsym(handle, ""my_function"");
is not defined by the ISO C standard.

This PR introduces a new TestSuite_AddFullWithTestFn macro as a conforming workaround. This utility stores the provided test function pointer _test_fn in an intermediate statically-allocated TestFnCtx object. A pointer to this intermediate object is then passed as the ctx parameter to _TestSuite_AddFull instead of the original test function pointer:
{
   static TestFnCtx ctx; // Note: variable is scoped to avoid local conflicts.
   ctx.test_fn = _test_fn;
   _TestSuite_AddFull (_suite, _name, _func, _dtor, &ctx, __VA_ARGS__, NULL);
}
An alternative solution that was considered is dynamically allocating the TestFuncCtx objects instead:
TestFnCtx *ctx = malloc (sizeof (TestFnCtx));

ctx->test_fn = (TestFunc) (_test_fn);
ctx->dtor = _dtor;

_TestSuite_AddFull (_suite, _name, _func, _TestSuite_TestFnCtxDtor, ctx, __VA_ARGS__, NULL);
This would necessitate an additional data member and function to correctly invoke the user-provided _dtor function when provided and free the TestFnCtx object:
void _TestSuite_TestFnCtxDtor (void *ctx) {
   TestFuncDtor dtor = ((TestFnCtx *) ctx)->dtor;
   if (dtor) { dtor (ctx); }
   free (ctx);
}
The binary size of test-libmongoc when built with the static solution vs. dynamic solution does not seem to make a compelling argument to favor one solution over the other. Some numbers when building on WSL Ubuntu 20.04 x86_64 using CMake-provided (version 3.16.3) default compiler arguments for Debug and Release mode:



Size (Bytes)
Debug (GCC 9)
Release (GCC 9)
Debug (Clang 10)
Release (Clang 10)




Static
8,666,040
3,585,632
8,063,480
3,253,640


Dynamic
8,666,680
3,586,520
8,062,272
3,252,328



Therefore I am in favor of the simpler ""static"" solution as currently proposed over the alternative ""dynamic"" solution.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,850,2021-08-16T21:44:08Z,2021-08-19T16:28:56Z,2021-09-08T16:36:54Z,MERGED,True,169,201,5,https://github.com/eramongodb,CDRIVER-3632 Address pedantic warnings for function pointer conversions,3,[],https://github.com/mongodb/mongo-c-driver/pull/850,https://github.com/eramongodb,2,https://github.com/mongodb/mongo-c-driver/pull/850#issuecomment-901439476,"Conversion between object pointers and function pointers is undefined behavior, though permitted as a ""common extension"" by the C standard (see N1570 J.5.7 ""Function pointer casts"").
This commit defines a new TestSuite_AddFullWithTestFn macro as a convenient utility that defines an intermediate TestFuncCtx object through which a given function pointer is passed via the ctx parameter without incurring function pointer <-> object pointer conversions.

Converting between object pointers and function pointers is undefined behavior per N1570 (C11 standard draft). It is however specified as a ""common extension"". As also noted by POSIX.1-2008:

Note that conversion from a void * pointer to a function pointer as in:
    fptr = (int (*)(int))dlsym(handle, ""my_function"");
is not defined by the ISO C standard.

This PR introduces a new TestSuite_AddFullWithTestFn macro as a conforming workaround. This utility stores the provided test function pointer _test_fn in an intermediate statically-allocated TestFnCtx object. A pointer to this intermediate object is then passed as the ctx parameter to _TestSuite_AddFull instead of the original test function pointer:
{
   static TestFnCtx ctx; // Note: variable is scoped to avoid local conflicts.
   ctx.test_fn = _test_fn;
   _TestSuite_AddFull (_suite, _name, _func, _dtor, &ctx, __VA_ARGS__, NULL);
}
An alternative solution that was considered is dynamically allocating the TestFuncCtx objects instead:
TestFnCtx *ctx = malloc (sizeof (TestFnCtx));

ctx->test_fn = (TestFunc) (_test_fn);
ctx->dtor = _dtor;

_TestSuite_AddFull (_suite, _name, _func, _TestSuite_TestFnCtxDtor, ctx, __VA_ARGS__, NULL);
This would necessitate an additional data member and function to correctly invoke the user-provided _dtor function when provided and free the TestFnCtx object:
void _TestSuite_TestFnCtxDtor (void *ctx) {
   TestFuncDtor dtor = ((TestFnCtx *) ctx)->dtor;
   if (dtor) { dtor (ctx); }
   free (ctx);
}
The binary size of test-libmongoc when built with the static solution vs. dynamic solution does not seem to make a compelling argument to favor one solution over the other. Some numbers when building on WSL Ubuntu 20.04 x86_64 using CMake-provided (version 3.16.3) default compiler arguments for Debug and Release mode:



Size (Bytes)
Debug (GCC 9)
Release (GCC 9)
Debug (Clang 10)
Release (Clang 10)




Static
8,666,040
3,585,632
8,063,480
3,253,640


Dynamic
8,666,680
3,586,520
8,062,272
3,252,328



Therefore I am in favor of the simpler ""static"" solution as currently proposed over the alternative ""dynamic"" solution.",Preliminary results of Evergreen tests seem to suggest the relevant ASan test failures have been addressed. The failures were identified as due to a missing cast in a test now registered with TestSuite_AddFullWithTestFn.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,850,2021-08-16T21:44:08Z,2021-08-19T16:28:56Z,2021-09-08T16:36:54Z,MERGED,True,169,201,5,https://github.com/eramongodb,CDRIVER-3632 Address pedantic warnings for function pointer conversions,3,[],https://github.com/mongodb/mongo-c-driver/pull/850,https://github.com/eramongodb,3,https://github.com/mongodb/mongo-c-driver/pull/850#issuecomment-902056697,"Conversion between object pointers and function pointers is undefined behavior, though permitted as a ""common extension"" by the C standard (see N1570 J.5.7 ""Function pointer casts"").
This commit defines a new TestSuite_AddFullWithTestFn macro as a convenient utility that defines an intermediate TestFuncCtx object through which a given function pointer is passed via the ctx parameter without incurring function pointer <-> object pointer conversions.

Converting between object pointers and function pointers is undefined behavior per N1570 (C11 standard draft). It is however specified as a ""common extension"". As also noted by POSIX.1-2008:

Note that conversion from a void * pointer to a function pointer as in:
    fptr = (int (*)(int))dlsym(handle, ""my_function"");
is not defined by the ISO C standard.

This PR introduces a new TestSuite_AddFullWithTestFn macro as a conforming workaround. This utility stores the provided test function pointer _test_fn in an intermediate statically-allocated TestFnCtx object. A pointer to this intermediate object is then passed as the ctx parameter to _TestSuite_AddFull instead of the original test function pointer:
{
   static TestFnCtx ctx; // Note: variable is scoped to avoid local conflicts.
   ctx.test_fn = _test_fn;
   _TestSuite_AddFull (_suite, _name, _func, _dtor, &ctx, __VA_ARGS__, NULL);
}
An alternative solution that was considered is dynamically allocating the TestFuncCtx objects instead:
TestFnCtx *ctx = malloc (sizeof (TestFnCtx));

ctx->test_fn = (TestFunc) (_test_fn);
ctx->dtor = _dtor;

_TestSuite_AddFull (_suite, _name, _func, _TestSuite_TestFnCtxDtor, ctx, __VA_ARGS__, NULL);
This would necessitate an additional data member and function to correctly invoke the user-provided _dtor function when provided and free the TestFnCtx object:
void _TestSuite_TestFnCtxDtor (void *ctx) {
   TestFuncDtor dtor = ((TestFnCtx *) ctx)->dtor;
   if (dtor) { dtor (ctx); }
   free (ctx);
}
The binary size of test-libmongoc when built with the static solution vs. dynamic solution does not seem to make a compelling argument to favor one solution over the other. Some numbers when building on WSL Ubuntu 20.04 x86_64 using CMake-provided (version 3.16.3) default compiler arguments for Debug and Release mode:



Size (Bytes)
Debug (GCC 9)
Release (GCC 9)
Debug (Clang 10)
Release (Clang 10)




Static
8,666,040
3,585,632
8,063,480
3,253,640


Dynamic
8,666,680
3,586,520
8,062,272
3,252,328



Therefore I am in favor of the simpler ""static"" solution as currently proposed over the alternative ""dynamic"" solution.","Rerun of failed tests appears to have flushed out unexpected test failures relative to base commit, confirming they were indeed flaky.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,851,2021-08-18T20:31:00Z,2021-08-20T21:47:15Z,2021-08-20T21:47:17Z,MERGED,True,1,0,1,https://github.com/kmahar,Mention LoadBalanced topology type in docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/851,https://github.com/kmahar,1,https://github.com/mongodb/mongo-c-driver/pull/851,Noticed the new type was missing from the list 🙂,Noticed the new type was missing from the list 🙂,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,851,2021-08-18T20:31:00Z,2021-08-20T21:47:15Z,2021-08-20T21:47:17Z,MERGED,True,1,0,1,https://github.com/kmahar,Mention LoadBalanced topology type in docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/851,https://github.com/kmahar,2,https://github.com/mongodb/mongo-c-driver/pull/851#issuecomment-902786408,Noticed the new type was missing from the list 🙂,@kevinAlbs should I merge?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,852,2021-08-25T18:15:16Z,2021-09-13T16:03:18Z,2021-09-13T16:03:18Z,MERGED,True,90,62,5,https://github.com/chardan,Fix CDRIVER3441 - document mongoc_handshake_data_append and alias as …,9,[],https://github.com/mongodb/mongo-c-driver/pull/852,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/852,"Fix CDRIVER3441 - document mongoc_handshake_data_append and alias as mongoc_add_driver_info
I took a slightly different tack on this and made the older form an alias to the preferred,
newer one.
https://jira.mongodb.org/browse/CDRIVER-3441
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","Fix CDRIVER3441 - document mongoc_handshake_data_append and alias as mongoc_add_driver_info
I took a slightly different tack on this and made the older form an alias to the preferred,
newer one.
https://jira.mongodb.org/browse/CDRIVER-3441
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,852,2021-08-25T18:15:16Z,2021-09-13T16:03:18Z,2021-09-13T16:03:18Z,MERGED,True,90,62,5,https://github.com/chardan,Fix CDRIVER3441 - document mongoc_handshake_data_append and alias as …,9,[],https://github.com/mongodb/mongo-c-driver/pull/852,https://github.com/chardan,2,https://github.com/mongodb/mongo-c-driver/pull/852#issuecomment-905764901,"Fix CDRIVER3441 - document mongoc_handshake_data_append and alias as mongoc_add_driver_info
I took a slightly different tack on this and made the older form an alias to the preferred,
newer one.
https://jira.mongodb.org/browse/CDRIVER-3441
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","Note that I did note inline the alias function. This is because C89 does not support the ""inline"" keyword, and this felt like overkill for macro-salad. Importantly, this function is essentially meant to be called once and is not performance sensitive, so I saw no need to complicate the situation.
See-also:
https://jira.mongodb.org/browse/CDRIVER-4136",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,852,2021-08-25T18:15:16Z,2021-09-13T16:03:18Z,2021-09-13T16:03:18Z,MERGED,True,90,62,5,https://github.com/chardan,Fix CDRIVER3441 - document mongoc_handshake_data_append and alias as …,9,[],https://github.com/mongodb/mongo-c-driver/pull/852,https://github.com/chardan,3,https://github.com/mongodb/mongo-c-driver/pull/852#issuecomment-910484473,"Fix CDRIVER3441 - document mongoc_handshake_data_append and alias as mongoc_add_driver_info
I took a slightly different tack on this and made the older form an alias to the preferred,
newer one.
https://jira.mongodb.org/browse/CDRIVER-3441
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","Question: I mention that the ""old"" function name is deprecated. Is that actually true?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,852,2021-08-25T18:15:16Z,2021-09-13T16:03:18Z,2021-09-13T16:03:18Z,MERGED,True,90,62,5,https://github.com/chardan,Fix CDRIVER3441 - document mongoc_handshake_data_append and alias as …,9,[],https://github.com/mongodb/mongo-c-driver/pull/852,https://github.com/chardan,4,https://github.com/mongodb/mongo-c-driver/pull/852#issuecomment-912861201,"Fix CDRIVER3441 - document mongoc_handshake_data_append and alias as mongoc_add_driver_info
I took a slightly different tack on this and made the older form an alias to the preferred,
newer one.
https://jira.mongodb.org/browse/CDRIVER-3441
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com",Updated docs to remove reference to being deprecated.,True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,853,2021-08-25T20:52:04Z,2021-09-15T01:51:53Z,2022-02-03T14:29:32Z,MERGED,True,20,20,2,https://github.com/kevinAlbs,CDRIVER-4103 resync code and symbol BSON corpus tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/853,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/853,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,854,2021-08-27T06:42:44Z,2021-11-10T17:40:42Z,2021-11-10T17:40:43Z,MERGED,True,2505,1921,56,https://github.com/vector-of-bool,CDRIVER-4114: Reduce contention on the topology description,148,[],https://github.com/mongodb/mongo-c-driver/pull/854,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/854,"This is a fairly substantial changeset, and may require an equally substantial
explanation.
The main mutable state of a mongoc_topology_t is all contained within the
description, which contains the known state of the associated server topology.
Other pieces of state might also be updated in parallel, but they can be managed
through regular atomic operations.
The purpose of opening this as a draft is to get eyes on the work to ensure I
have a proper understanding of how the topology's state is meant to be
maintained, and that the correct understanding is reflected in the code.
This work builds upon changes in #840 (new atomics) and #847 (new session
pooling).
Important draft TODOs and notes

This is still a draft. It may have speeling ,and   grammar error .
Several new internal APIs have abbreviated names, which is uncommon in the
rest of the codebase. This was purely to save my hands the strain of typing
verbose names all the time 🙂. Anything can be renamed before this PR is
merged.
Several doc comments are now outdated.
Very few usages of topology::mutex have been removed yet. These will be
pruned later on once the topology-update-queue is fully implemented. Done.
Various C99 usage throughout.

A summary of the changes

The introduction of a ""shared pointer"" type. This is analogous to a C++
shared_ptr in design and behavior:

A shared_ptr is created with a pointer than was previously allocated, and a
destructor+deallocator function.
The shared pointer maintains auxiliary data that tell it how many live
references remain, and the destructor+deallocator.
Copying and destroying different shared pointers that refer to the same
object is thread-safe.
Copying a shared pointer object that is also being updated is not
thread-safe, and must be done using the _atomic() functions.
When the reference count of a shared pointer reaches zero, the
destructor+deallocator function is immediately invoked with the managed
pointer (this occurs in the thread that decremented the reference count to
zero).
Shared pointer objects are layout-compatible with a regular pointer. This is
used in union mc_shared_tpl_descr.


The mongoc_topology_t::description member has been replaced with a
union mc_shared_tpl_descr _shared_descr_ member. Users that wish to access
the description must do so by calling an API that will return them a shared
pointer to the description, which the caller must then release when it is
finished. Acquiring this shared pointer is ""taking"" the description, and
releasing it is ""dropping"" the description.
In the current code, the macro MC_DECL_TD_TAKE (VarName, Topology) is used
to simultaneous declare a define mc_shared_tpl_descr VarName as taking the
shared description of Topology. MC_TD_DROP(VarName) should be used to
drop that pointer. A shared pointer can be rebound using
tdptr = mc_tpld_take_ref(topology)
The topology referred-to by _shared_descr_ is never updated in-place.
Instead, a copy is made of the description, updates are applied to that copy,
and _shared_descr_ is atomically swapped with the modified copy. This
prevents someone attempting to take the shared description from seeing a torn
value.
Finding out when to use mc_tpld_take_ref() and mc_tpld_drop_ref() is a current
main difficulty of this changeset.

When mc_tpld_take_ref() are called, the
instantaneous state of the topology is captured into the resulting variable,
and is guaranteed to remain unchanged when accessed through that shared
pointer instance. If another shared pointer is taken, then there is no
guarantee that the new shared pointer refers to the same topology.
Referring to points that call bson_mutex_{un}lock is a good guide on where
to take and drop these references. Within a locked section, it can be
assumed that the code expects a single view of the topology from the
beginning to the end.
Functions that remark to ""expect the caller to hold the topology mutex""
means that they intend to see a consistent view of the topology during their
execution (or it means the function is intending to modify the topology,
but that's discussed later).

Because these functions need to refer to the topology description it would
almost be correct to just take a shared pointer instead of assuming the
caller holds a mutex, except this is wrong: The function expects a
consistent view of the topology before and after it is finished
execution. A caller may hold a shared pointer td1, call one of these
functions, which will then take a shared pointer td2. There is no
guarantee that td1 and td2 point to the same topology description, so
the callee and caller may be working with different descriptions, whereas
with the mutex they would have been able to assume they are equivalent.
The solution is that functions that ""expect the topology mutex to be held""
need to instead be given a handle to the topology description state that
the caller is expecting them to work on. These functions have had a
mongoc_topology_description_t* parameter added, and each caller will
pass-down the topology description that they are keeping alive using a
shared pointer. These functions that ""expect the topology mutex to be
held"" will not refer to the shared pointer of the topology, and defer
instead to the topology that was given to them by their caller.




At some points, functions are invoked that are expected to update the topology
(e.g. topology scanning). In this case, the caller takes a shared pointer td
and checks if it is valid/stale. If the td is okay, it continues with td.
If not, it will invoke a scan operation and block. After the scanning
completes, the caller must drop td and then rebind td by taking the
topology description again. This allows the callers to see the updated
topology after scanning has completed.
In the case of multithreaded scanning/monitoring, the topology
description updates need to be queued and processed one at a time. If
multiple threads were allowed to concurrently modify the topology, some
topology updates might be lost. For example: If thread th1 clones the
topology description and begins updating it, and then thread th2 takes
another clone, quickly modifies it, and then swaps it back in place, then
th1 might finish its modifications and write back the topology description
based on the copy it took before th2 did its modifications, thus losing the
modifications done by th2. (Solved below)

Update:
const for all-the-things
There was trouble in deciding where to take a copy of the shared topology
description, versus when we would need to duplicate the description so that it
could be modified and later swapped out. The solution was to make the
_shared_descr_ be a pointer-to-const. Thus, any caller of
mc_tpld_take_ref() would obtain a
shared-pointer-to-const mongoc_topology_description_t, and be unable to modify
the description or bind it to a pointer-to-non-const (I'll abbreviate as
mutable*). From this point, it was just a matter of finding everywhere that a
we attempt to create a mutable* and from a const* deciding:

Should the mutable* become a const*?
Are we actually attempting to modify the topology description?

In the case of [1], it was simply a matter of adding more const at the
use-site and in the function signatures where we are trying to pass the
const*. After modifying the callee signatures to take const*, it would often
lead to more sites where we attempt to form mutable* from a const*. In
every case, this would eventually result in:

The entire call-tree becomes const-correct, and we can know that any time we
see const mongoc_topology_description_t*, we know that we are not going to
attempt to modify it.
Eventually, adding a const would be impossible, because we are attempting to
modify the topology. In this case, we backtrack and find where we originally
took the shared-const* and mark that as a point where we need to perform a
topology modification. That is, these sites become an instance of [2] above.

Additionally, mongoc_topology_description_t contains (contained) a member
mongoc_set_t* servers which contains a set of mongoc_server_description_t.
The servers pointer member is an owning-pointer, and the server descriptions
are themselves a part of the topology. Thus, when we have a
mongoc_topology_description_t const*, we should only access it's
mongoc_server_description_t instances through const* as well.
Because pointer members are shallow-const, the servers member was renamed to
_servers_, and any attempt to access the server descriptions of a topology
description now must go through two getter functions:


mc_tpld_servers(mongoc_topology_description_t*)
  -> mongoc_set_t*


mc_tpld_servers_const(mongoc_topology_description_t const*)
  -> mongoc_set_t const*


Because it is invalid to pass a const* to mc_tpld_servers, it is not
possible to obtain a mutable* for a mongoc_server_description_t when all you
have is a mongoc_topology_description_t const* (unless you do a cast. Don't do
a cast).

Note: There were not yet any const-aware mongoc_set functions, so those
were also added as part of this PR.

Modifying the Topology
Now we need to define the procedure to update the topology. There are a few
requirements:

Only one thread may update a topology description at any time. Everyone else
needs to wait their turn.
Any number of threads can still inspect the topology while another thread is
performing an update.
Threads should not see any ""partial"" updates to the topology. The topology
update must appear atomic threads other than the one doing the updates.
After an update is committed, other threads that still have a reference to the
old topology should be safe to keep using that old reference.

All of the above are addressed by a few new APIs:
struct mc_tpld_modification {
  mongoc_topology_description_t* new_td;
  mongoc_topology_t* topology;
};

mc_tpld_modification
mc_tpld_modify_begin(mongoc_topology_t* topo);

void
mc_tpld_modify_commit(mc_tpld_modification tdmod);

void
mc_tpld_modify_drop(mc_tpld_modification tdmod);
They work as such:

mc_tpld_modification: A composite object that contains state for the
topology update. The most important member is new_td, which is a
non-const pointer to a topology description. Through this pointer we
should apply updates to the topology description. topology is pointer to
the topology that owns the descriptions.
mc_tpld_modify_begin(tpl): Locks a mutex in tpl that is used to serialize
modifications to the topology description. The current topology description is
cloned and put into mc_tpld_modification::new_td on the returned object.
mc_tpld_modify_drop(tdmod): Drops any pending modifications defined by
tdmod. Unlocks the topology modification mutex. Destroys and deallocates
new_td.
mc_tpld_modify_commit(tdmod): Perform the atomic update of the topology
description. After this function returns, the topology description from
new_td is the new description for the whole topology. Unlocks the
modification mutex. new_td is bound to the
shared-pointer stored in topology.

A call to mc_tpld_modify_begin() must be later followed by a call to
either mc_tpld_modify_drop() or mc_tpld_modify_commit() (never both).
For example:
mc_shared_tpl_descr td = mc_tpld_take_ref(tpl); // [1]
if (needs_to_update(td.ptr)) {  // [2]
  mc_tpld_modification tdmod = mc_tpld_modify_begin(tpl);  // [3]
  if (needs_to_update(tdmod.new_td)) {   // [4]
    do_update_topology(tdmod.new_td);    // [5]
    mc_tpld_modification_commit(tdmod);  // [6]
  } else {
    mc_tpld_modification_drop(tdmod);    // [7]
  }
}
mc_tpld_drop_ref(&td);  // [8]
Explained:

Take a reference to the topology description at that exact moment. td.ptr
will remain valid until [8], and the pointed-to-description will remain
unchanged regardless of any intermediate code.
Check whether we need to update the topology. This may come in the form of an
error during normal execution, rather than an explicit check for
outdated-ness.
Begin an update transaction.
Check again!: The call to mc_tpld_modify_begin() may have been preempted
by another thread that was in the middle of performing an update. The other
thread may have already performed the update that we expected ourselves to
do. It is not guaranteed that the td in the outer scope is the same as the
tdmod.new_td, since new_td was cloned after securing the exclusive lock
to perform a topology update.
Pass the mutable* to the topology description to a function that will
perform the updates. No other thread will have access to this pointer, so no
further synchronization is necessary.
Commit the update. Now other threads will see our updates the next time they
pull the topology description.
If needs_to_update(tdmod.new_td) returned false, abandon the update.
td is still holding a reference to the topology description at the moment
of the call to mc_tpld_take_ref in [1]. We always need to drop those
references.","This is a fairly substantial changeset, and may require an equally substantial
explanation.
The main mutable state of a mongoc_topology_t is all contained within the
description, which contains the known state of the associated server topology.
Other pieces of state might also be updated in parallel, but they can be managed
through regular atomic operations.
The purpose of opening this as a draft is to get eyes on the work to ensure I
have a proper understanding of how the topology's state is meant to be
maintained, and that the correct understanding is reflected in the code.
This work builds upon changes in #840 (new atomics) and #847 (new session
pooling).
Important draft TODOs and notes

This is still a draft. It may have speeling ,and   grammar error .
Several new internal APIs have abbreviated names, which is uncommon in the
rest of the codebase. This was purely to save my hands the strain of typing
verbose names all the time 🙂. Anything can be renamed before this PR is
merged.
Several doc comments are now outdated.
Very few usages of topology::mutex have been removed yet. These will be
pruned later on once the topology-update-queue is fully implemented. Done.
Various C99 usage throughout.

A summary of the changes

The introduction of a ""shared pointer"" type. This is analogous to a C++
shared_ptr in design and behavior:

A shared_ptr is created with a pointer than was previously allocated, and a
destructor+deallocator function.
The shared pointer maintains auxiliary data that tell it how many live
references remain, and the destructor+deallocator.
Copying and destroying different shared pointers that refer to the same
object is thread-safe.
Copying a shared pointer object that is also being updated is not
thread-safe, and must be done using the _atomic() functions.
When the reference count of a shared pointer reaches zero, the
destructor+deallocator function is immediately invoked with the managed
pointer (this occurs in the thread that decremented the reference count to
zero).
Shared pointer objects are layout-compatible with a regular pointer. This is
used in union mc_shared_tpl_descr.


The mongoc_topology_t::description member has been replaced with a
union mc_shared_tpl_descr _shared_descr_ member. Users that wish to access
the description must do so by calling an API that will return them a shared
pointer to the description, which the caller must then release when it is
finished. Acquiring this shared pointer is ""taking"" the description, and
releasing it is ""dropping"" the description.
In the current code, the macro MC_DECL_TD_TAKE (VarName, Topology) is used
to simultaneous declare a define mc_shared_tpl_descr VarName as taking the
shared description of Topology. MC_TD_DROP(VarName) should be used to
drop that pointer. A shared pointer can be rebound using
tdptr = mc_tpld_take_ref(topology)
The topology referred-to by _shared_descr_ is never updated in-place.
Instead, a copy is made of the description, updates are applied to that copy,
and _shared_descr_ is atomically swapped with the modified copy. This
prevents someone attempting to take the shared description from seeing a torn
value.
Finding out when to use mc_tpld_take_ref() and mc_tpld_drop_ref() is a current
main difficulty of this changeset.

When mc_tpld_take_ref() are called, the
instantaneous state of the topology is captured into the resulting variable,
and is guaranteed to remain unchanged when accessed through that shared
pointer instance. If another shared pointer is taken, then there is no
guarantee that the new shared pointer refers to the same topology.
Referring to points that call bson_mutex_{un}lock is a good guide on where
to take and drop these references. Within a locked section, it can be
assumed that the code expects a single view of the topology from the
beginning to the end.
Functions that remark to ""expect the caller to hold the topology mutex""
means that they intend to see a consistent view of the topology during their
execution (or it means the function is intending to modify the topology,
but that's discussed later).

Because these functions need to refer to the topology description it would
almost be correct to just take a shared pointer instead of assuming the
caller holds a mutex, except this is wrong: The function expects a
consistent view of the topology before and after it is finished
execution. A caller may hold a shared pointer td1, call one of these
functions, which will then take a shared pointer td2. There is no
guarantee that td1 and td2 point to the same topology description, so
the callee and caller may be working with different descriptions, whereas
with the mutex they would have been able to assume they are equivalent.
The solution is that functions that ""expect the topology mutex to be held""
need to instead be given a handle to the topology description state that
the caller is expecting them to work on. These functions have had a
mongoc_topology_description_t* parameter added, and each caller will
pass-down the topology description that they are keeping alive using a
shared pointer. These functions that ""expect the topology mutex to be
held"" will not refer to the shared pointer of the topology, and defer
instead to the topology that was given to them by their caller.




At some points, functions are invoked that are expected to update the topology
(e.g. topology scanning). In this case, the caller takes a shared pointer td
and checks if it is valid/stale. If the td is okay, it continues with td.
If not, it will invoke a scan operation and block. After the scanning
completes, the caller must drop td and then rebind td by taking the
topology description again. This allows the callers to see the updated
topology after scanning has completed.
In the case of multithreaded scanning/monitoring, the topology
description updates need to be queued and processed one at a time. If
multiple threads were allowed to concurrently modify the topology, some
topology updates might be lost. For example: If thread th1 clones the
topology description and begins updating it, and then thread th2 takes
another clone, quickly modifies it, and then swaps it back in place, then
th1 might finish its modifications and write back the topology description
based on the copy it took before th2 did its modifications, thus losing the
modifications done by th2. (Solved below)

Update:
const for all-the-things
There was trouble in deciding where to take a copy of the shared topology
description, versus when we would need to duplicate the description so that it
could be modified and later swapped out. The solution was to make the
_shared_descr_ be a pointer-to-const. Thus, any caller of
mc_tpld_take_ref() would obtain a
shared-pointer-to-const mongoc_topology_description_t, and be unable to modify
the description or bind it to a pointer-to-non-const (I'll abbreviate as
mutable*). From this point, it was just a matter of finding everywhere that a
we attempt to create a mutable* and from a const* deciding:

Should the mutable* become a const*?
Are we actually attempting to modify the topology description?

In the case of [1], it was simply a matter of adding more const at the
use-site and in the function signatures where we are trying to pass the
const*. After modifying the callee signatures to take const*, it would often
lead to more sites where we attempt to form mutable* from a const*. In
every case, this would eventually result in:

The entire call-tree becomes const-correct, and we can know that any time we
see const mongoc_topology_description_t*, we know that we are not going to
attempt to modify it.
Eventually, adding a const would be impossible, because we are attempting to
modify the topology. In this case, we backtrack and find where we originally
took the shared-const* and mark that as a point where we need to perform a
topology modification. That is, these sites become an instance of [2] above.

Additionally, mongoc_topology_description_t contains (contained) a member
mongoc_set_t* servers which contains a set of mongoc_server_description_t.
The servers pointer member is an owning-pointer, and the server descriptions
are themselves a part of the topology. Thus, when we have a
mongoc_topology_description_t const*, we should only access it's
mongoc_server_description_t instances through const* as well.
Because pointer members are shallow-const, the servers member was renamed to
_servers_, and any attempt to access the server descriptions of a topology
description now must go through two getter functions:


mc_tpld_servers(mongoc_topology_description_t*)
  -> mongoc_set_t*


mc_tpld_servers_const(mongoc_topology_description_t const*)
  -> mongoc_set_t const*


Because it is invalid to pass a const* to mc_tpld_servers, it is not
possible to obtain a mutable* for a mongoc_server_description_t when all you
have is a mongoc_topology_description_t const* (unless you do a cast. Don't do
a cast).

Note: There were not yet any const-aware mongoc_set functions, so those
were also added as part of this PR.

Modifying the Topology
Now we need to define the procedure to update the topology. There are a few
requirements:

Only one thread may update a topology description at any time. Everyone else
needs to wait their turn.
Any number of threads can still inspect the topology while another thread is
performing an update.
Threads should not see any ""partial"" updates to the topology. The topology
update must appear atomic threads other than the one doing the updates.
After an update is committed, other threads that still have a reference to the
old topology should be safe to keep using that old reference.

All of the above are addressed by a few new APIs:
struct mc_tpld_modification {
  mongoc_topology_description_t* new_td;
  mongoc_topology_t* topology;
};

mc_tpld_modification
mc_tpld_modify_begin(mongoc_topology_t* topo);

void
mc_tpld_modify_commit(mc_tpld_modification tdmod);

void
mc_tpld_modify_drop(mc_tpld_modification tdmod);
They work as such:

mc_tpld_modification: A composite object that contains state for the
topology update. The most important member is new_td, which is a
non-const pointer to a topology description. Through this pointer we
should apply updates to the topology description. topology is pointer to
the topology that owns the descriptions.
mc_tpld_modify_begin(tpl): Locks a mutex in tpl that is used to serialize
modifications to the topology description. The current topology description is
cloned and put into mc_tpld_modification::new_td on the returned object.
mc_tpld_modify_drop(tdmod): Drops any pending modifications defined by
tdmod. Unlocks the topology modification mutex. Destroys and deallocates
new_td.
mc_tpld_modify_commit(tdmod): Perform the atomic update of the topology
description. After this function returns, the topology description from
new_td is the new description for the whole topology. Unlocks the
modification mutex. new_td is bound to the
shared-pointer stored in topology.

A call to mc_tpld_modify_begin() must be later followed by a call to
either mc_tpld_modify_drop() or mc_tpld_modify_commit() (never both).
For example:
mc_shared_tpl_descr td = mc_tpld_take_ref(tpl); // [1]
if (needs_to_update(td.ptr)) {  // [2]
  mc_tpld_modification tdmod = mc_tpld_modify_begin(tpl);  // [3]
  if (needs_to_update(tdmod.new_td)) {   // [4]
    do_update_topology(tdmod.new_td);    // [5]
    mc_tpld_modification_commit(tdmod);  // [6]
  } else {
    mc_tpld_modification_drop(tdmod);    // [7]
  }
}
mc_tpld_drop_ref(&td);  // [8]
Explained:

Take a reference to the topology description at that exact moment. td.ptr
will remain valid until [8], and the pointed-to-description will remain
unchanged regardless of any intermediate code.
Check whether we need to update the topology. This may come in the form of an
error during normal execution, rather than an explicit check for
outdated-ness.
Begin an update transaction.
Check again!: The call to mc_tpld_modify_begin() may have been preempted
by another thread that was in the middle of performing an update. The other
thread may have already performed the update that we expected ourselves to
do. It is not guaranteed that the td in the outer scope is the same as the
tdmod.new_td, since new_td was cloned after securing the exclusive lock
to perform a topology update.
Pass the mutable* to the topology description to a function that will
perform the updates. No other thread will have access to this pointer, so no
further synchronization is necessary.
Commit the update. Now other threads will see our updates the next time they
pull the topology description.
If needs_to_update(tdmod.new_td) returned false, abandon the update.
td is still holding a reference to the topology description at the moment
of the call to mc_tpld_take_ref in [1]. We always need to drop those
references.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,854,2021-08-27T06:42:44Z,2021-11-10T17:40:42Z,2021-11-10T17:40:43Z,MERGED,True,2505,1921,56,https://github.com/vector-of-bool,CDRIVER-4114: Reduce contention on the topology description,148,[],https://github.com/mongodb/mongo-c-driver/pull/854,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/854#issuecomment-910788043,"This is a fairly substantial changeset, and may require an equally substantial
explanation.
The main mutable state of a mongoc_topology_t is all contained within the
description, which contains the known state of the associated server topology.
Other pieces of state might also be updated in parallel, but they can be managed
through regular atomic operations.
The purpose of opening this as a draft is to get eyes on the work to ensure I
have a proper understanding of how the topology's state is meant to be
maintained, and that the correct understanding is reflected in the code.
This work builds upon changes in #840 (new atomics) and #847 (new session
pooling).
Important draft TODOs and notes

This is still a draft. It may have speeling ,and   grammar error .
Several new internal APIs have abbreviated names, which is uncommon in the
rest of the codebase. This was purely to save my hands the strain of typing
verbose names all the time 🙂. Anything can be renamed before this PR is
merged.
Several doc comments are now outdated.
Very few usages of topology::mutex have been removed yet. These will be
pruned later on once the topology-update-queue is fully implemented. Done.
Various C99 usage throughout.

A summary of the changes

The introduction of a ""shared pointer"" type. This is analogous to a C++
shared_ptr in design and behavior:

A shared_ptr is created with a pointer than was previously allocated, and a
destructor+deallocator function.
The shared pointer maintains auxiliary data that tell it how many live
references remain, and the destructor+deallocator.
Copying and destroying different shared pointers that refer to the same
object is thread-safe.
Copying a shared pointer object that is also being updated is not
thread-safe, and must be done using the _atomic() functions.
When the reference count of a shared pointer reaches zero, the
destructor+deallocator function is immediately invoked with the managed
pointer (this occurs in the thread that decremented the reference count to
zero).
Shared pointer objects are layout-compatible with a regular pointer. This is
used in union mc_shared_tpl_descr.


The mongoc_topology_t::description member has been replaced with a
union mc_shared_tpl_descr _shared_descr_ member. Users that wish to access
the description must do so by calling an API that will return them a shared
pointer to the description, which the caller must then release when it is
finished. Acquiring this shared pointer is ""taking"" the description, and
releasing it is ""dropping"" the description.
In the current code, the macro MC_DECL_TD_TAKE (VarName, Topology) is used
to simultaneous declare a define mc_shared_tpl_descr VarName as taking the
shared description of Topology. MC_TD_DROP(VarName) should be used to
drop that pointer. A shared pointer can be rebound using
tdptr = mc_tpld_take_ref(topology)
The topology referred-to by _shared_descr_ is never updated in-place.
Instead, a copy is made of the description, updates are applied to that copy,
and _shared_descr_ is atomically swapped with the modified copy. This
prevents someone attempting to take the shared description from seeing a torn
value.
Finding out when to use mc_tpld_take_ref() and mc_tpld_drop_ref() is a current
main difficulty of this changeset.

When mc_tpld_take_ref() are called, the
instantaneous state of the topology is captured into the resulting variable,
and is guaranteed to remain unchanged when accessed through that shared
pointer instance. If another shared pointer is taken, then there is no
guarantee that the new shared pointer refers to the same topology.
Referring to points that call bson_mutex_{un}lock is a good guide on where
to take and drop these references. Within a locked section, it can be
assumed that the code expects a single view of the topology from the
beginning to the end.
Functions that remark to ""expect the caller to hold the topology mutex""
means that they intend to see a consistent view of the topology during their
execution (or it means the function is intending to modify the topology,
but that's discussed later).

Because these functions need to refer to the topology description it would
almost be correct to just take a shared pointer instead of assuming the
caller holds a mutex, except this is wrong: The function expects a
consistent view of the topology before and after it is finished
execution. A caller may hold a shared pointer td1, call one of these
functions, which will then take a shared pointer td2. There is no
guarantee that td1 and td2 point to the same topology description, so
the callee and caller may be working with different descriptions, whereas
with the mutex they would have been able to assume they are equivalent.
The solution is that functions that ""expect the topology mutex to be held""
need to instead be given a handle to the topology description state that
the caller is expecting them to work on. These functions have had a
mongoc_topology_description_t* parameter added, and each caller will
pass-down the topology description that they are keeping alive using a
shared pointer. These functions that ""expect the topology mutex to be
held"" will not refer to the shared pointer of the topology, and defer
instead to the topology that was given to them by their caller.




At some points, functions are invoked that are expected to update the topology
(e.g. topology scanning). In this case, the caller takes a shared pointer td
and checks if it is valid/stale. If the td is okay, it continues with td.
If not, it will invoke a scan operation and block. After the scanning
completes, the caller must drop td and then rebind td by taking the
topology description again. This allows the callers to see the updated
topology after scanning has completed.
In the case of multithreaded scanning/monitoring, the topology
description updates need to be queued and processed one at a time. If
multiple threads were allowed to concurrently modify the topology, some
topology updates might be lost. For example: If thread th1 clones the
topology description and begins updating it, and then thread th2 takes
another clone, quickly modifies it, and then swaps it back in place, then
th1 might finish its modifications and write back the topology description
based on the copy it took before th2 did its modifications, thus losing the
modifications done by th2. (Solved below)

Update:
const for all-the-things
There was trouble in deciding where to take a copy of the shared topology
description, versus when we would need to duplicate the description so that it
could be modified and later swapped out. The solution was to make the
_shared_descr_ be a pointer-to-const. Thus, any caller of
mc_tpld_take_ref() would obtain a
shared-pointer-to-const mongoc_topology_description_t, and be unable to modify
the description or bind it to a pointer-to-non-const (I'll abbreviate as
mutable*). From this point, it was just a matter of finding everywhere that a
we attempt to create a mutable* and from a const* deciding:

Should the mutable* become a const*?
Are we actually attempting to modify the topology description?

In the case of [1], it was simply a matter of adding more const at the
use-site and in the function signatures where we are trying to pass the
const*. After modifying the callee signatures to take const*, it would often
lead to more sites where we attempt to form mutable* from a const*. In
every case, this would eventually result in:

The entire call-tree becomes const-correct, and we can know that any time we
see const mongoc_topology_description_t*, we know that we are not going to
attempt to modify it.
Eventually, adding a const would be impossible, because we are attempting to
modify the topology. In this case, we backtrack and find where we originally
took the shared-const* and mark that as a point where we need to perform a
topology modification. That is, these sites become an instance of [2] above.

Additionally, mongoc_topology_description_t contains (contained) a member
mongoc_set_t* servers which contains a set of mongoc_server_description_t.
The servers pointer member is an owning-pointer, and the server descriptions
are themselves a part of the topology. Thus, when we have a
mongoc_topology_description_t const*, we should only access it's
mongoc_server_description_t instances through const* as well.
Because pointer members are shallow-const, the servers member was renamed to
_servers_, and any attempt to access the server descriptions of a topology
description now must go through two getter functions:


mc_tpld_servers(mongoc_topology_description_t*)
  -> mongoc_set_t*


mc_tpld_servers_const(mongoc_topology_description_t const*)
  -> mongoc_set_t const*


Because it is invalid to pass a const* to mc_tpld_servers, it is not
possible to obtain a mutable* for a mongoc_server_description_t when all you
have is a mongoc_topology_description_t const* (unless you do a cast. Don't do
a cast).

Note: There were not yet any const-aware mongoc_set functions, so those
were also added as part of this PR.

Modifying the Topology
Now we need to define the procedure to update the topology. There are a few
requirements:

Only one thread may update a topology description at any time. Everyone else
needs to wait their turn.
Any number of threads can still inspect the topology while another thread is
performing an update.
Threads should not see any ""partial"" updates to the topology. The topology
update must appear atomic threads other than the one doing the updates.
After an update is committed, other threads that still have a reference to the
old topology should be safe to keep using that old reference.

All of the above are addressed by a few new APIs:
struct mc_tpld_modification {
  mongoc_topology_description_t* new_td;
  mongoc_topology_t* topology;
};

mc_tpld_modification
mc_tpld_modify_begin(mongoc_topology_t* topo);

void
mc_tpld_modify_commit(mc_tpld_modification tdmod);

void
mc_tpld_modify_drop(mc_tpld_modification tdmod);
They work as such:

mc_tpld_modification: A composite object that contains state for the
topology update. The most important member is new_td, which is a
non-const pointer to a topology description. Through this pointer we
should apply updates to the topology description. topology is pointer to
the topology that owns the descriptions.
mc_tpld_modify_begin(tpl): Locks a mutex in tpl that is used to serialize
modifications to the topology description. The current topology description is
cloned and put into mc_tpld_modification::new_td on the returned object.
mc_tpld_modify_drop(tdmod): Drops any pending modifications defined by
tdmod. Unlocks the topology modification mutex. Destroys and deallocates
new_td.
mc_tpld_modify_commit(tdmod): Perform the atomic update of the topology
description. After this function returns, the topology description from
new_td is the new description for the whole topology. Unlocks the
modification mutex. new_td is bound to the
shared-pointer stored in topology.

A call to mc_tpld_modify_begin() must be later followed by a call to
either mc_tpld_modify_drop() or mc_tpld_modify_commit() (never both).
For example:
mc_shared_tpl_descr td = mc_tpld_take_ref(tpl); // [1]
if (needs_to_update(td.ptr)) {  // [2]
  mc_tpld_modification tdmod = mc_tpld_modify_begin(tpl);  // [3]
  if (needs_to_update(tdmod.new_td)) {   // [4]
    do_update_topology(tdmod.new_td);    // [5]
    mc_tpld_modification_commit(tdmod);  // [6]
  } else {
    mc_tpld_modification_drop(tdmod);    // [7]
  }
}
mc_tpld_drop_ref(&td);  // [8]
Explained:

Take a reference to the topology description at that exact moment. td.ptr
will remain valid until [8], and the pointed-to-description will remain
unchanged regardless of any intermediate code.
Check whether we need to update the topology. This may come in the form of an
error during normal execution, rather than an explicit check for
outdated-ness.
Begin an update transaction.
Check again!: The call to mc_tpld_modify_begin() may have been preempted
by another thread that was in the middle of performing an update. The other
thread may have already performed the update that we expected ourselves to
do. It is not guaranteed that the td in the outer scope is the same as the
tdmod.new_td, since new_td was cloned after securing the exclusive lock
to perform a topology update.
Pass the mutable* to the topology description to a function that will
perform the updates. No other thread will have access to this pointer, so no
further synchronization is necessary.
Commit the update. Now other threads will see our updates the next time they
pull the topology description.
If needs_to_update(tdmod.new_td) returned false, abandon the update.
td is still holding a reference to the topology description at the moment
of the call to mc_tpld_take_ref in [1]. We always need to drop those
references.","@eramongodb C++ provides atomic shared_ptr operations, but not as member functions of shared_ptr itself. (Previously as free functions, then as member functions of a std::atomic<shared_ptr<T>>).
This global mutex (or spinlock) approach used here is based on the implementation of those atomic operations in libc++ and MSVC/STL (Refer 1, Refer 2). I was also surprised when I saw that they use a global-mutex approach. (I will likely update this to use a spinlock instead of a mutex. I found spinlocks in this limited case behave at least as good as the mutex, and won't require any syscalls other than a possible thread-yield.)
The singular mutex on the topology description was problematic not just because it was used everywhere, but because it would be held for arbitrarily complex operations that involved allocations, deep function calls, BSON parsing, and more. The global lock in this case is held for only a small handful of machine instructions before being released, only when making a copy of the shared pointer, rather than the entire time that the shared pointer is alive. My profiles of aggressive benchmarks with hundreds of threads showed very few moments when a thread was in a lock-wait state. I prefer that the synchronization of the topology description remain hidden within the atomic operations and the modify_begin/commit. I also hope that this design will prevent future changes from continuing to pile things on top of the monolithic ""everything"" lock that was topology->mutex.
Regarding use of read-write-locks: That was an initial approach to this problem, but I ran into an immediate issue when I found that no one in the POSIX committee seemed to ever consider that one might want to do a condition-variable-wait on a read-write lock. There was discussion of writing our own shared-mutex type that supported CV-waiting, but I don't trust myself to implement one in a way that would ensure fairness, and even a fair lock would present issues. In a use case with hundreds of simultaneous readers, an unfair lock would starve anyone to update the topology. On the other hand, even if it is properly fair, the moment that a thread requested an exclusive lock would necessarily block all subsequent readers until the writer was finished, which wouldn't be able start until all the previous readers had finished. Because the server monitors periodically update the topology description (even in the happy-path), these server monitors would necessarily ""stop the world"" every time they chimed in to perform an update. In this design, only simultaneous writers will ever block each other, and writers will only ever contend when the threads both need to invalidate the topology simultaneously (i.e. two threads encounter a connection error simultaneously). Threads that are only using a valid part of the topology will be able to continue to use those server descriptions even while other aspects are being updated in the background.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,854,2021-08-27T06:42:44Z,2021-11-10T17:40:42Z,2021-11-10T17:40:43Z,MERGED,True,2505,1921,56,https://github.com/vector-of-bool,CDRIVER-4114: Reduce contention on the topology description,148,[],https://github.com/mongodb/mongo-c-driver/pull/854,https://github.com/eramongodb,3,https://github.com/mongodb/mongo-c-driver/pull/854#issuecomment-911725975,"This is a fairly substantial changeset, and may require an equally substantial
explanation.
The main mutable state of a mongoc_topology_t is all contained within the
description, which contains the known state of the associated server topology.
Other pieces of state might also be updated in parallel, but they can be managed
through regular atomic operations.
The purpose of opening this as a draft is to get eyes on the work to ensure I
have a proper understanding of how the topology's state is meant to be
maintained, and that the correct understanding is reflected in the code.
This work builds upon changes in #840 (new atomics) and #847 (new session
pooling).
Important draft TODOs and notes

This is still a draft. It may have speeling ,and   grammar error .
Several new internal APIs have abbreviated names, which is uncommon in the
rest of the codebase. This was purely to save my hands the strain of typing
verbose names all the time 🙂. Anything can be renamed before this PR is
merged.
Several doc comments are now outdated.
Very few usages of topology::mutex have been removed yet. These will be
pruned later on once the topology-update-queue is fully implemented. Done.
Various C99 usage throughout.

A summary of the changes

The introduction of a ""shared pointer"" type. This is analogous to a C++
shared_ptr in design and behavior:

A shared_ptr is created with a pointer than was previously allocated, and a
destructor+deallocator function.
The shared pointer maintains auxiliary data that tell it how many live
references remain, and the destructor+deallocator.
Copying and destroying different shared pointers that refer to the same
object is thread-safe.
Copying a shared pointer object that is also being updated is not
thread-safe, and must be done using the _atomic() functions.
When the reference count of a shared pointer reaches zero, the
destructor+deallocator function is immediately invoked with the managed
pointer (this occurs in the thread that decremented the reference count to
zero).
Shared pointer objects are layout-compatible with a regular pointer. This is
used in union mc_shared_tpl_descr.


The mongoc_topology_t::description member has been replaced with a
union mc_shared_tpl_descr _shared_descr_ member. Users that wish to access
the description must do so by calling an API that will return them a shared
pointer to the description, which the caller must then release when it is
finished. Acquiring this shared pointer is ""taking"" the description, and
releasing it is ""dropping"" the description.
In the current code, the macro MC_DECL_TD_TAKE (VarName, Topology) is used
to simultaneous declare a define mc_shared_tpl_descr VarName as taking the
shared description of Topology. MC_TD_DROP(VarName) should be used to
drop that pointer. A shared pointer can be rebound using
tdptr = mc_tpld_take_ref(topology)
The topology referred-to by _shared_descr_ is never updated in-place.
Instead, a copy is made of the description, updates are applied to that copy,
and _shared_descr_ is atomically swapped with the modified copy. This
prevents someone attempting to take the shared description from seeing a torn
value.
Finding out when to use mc_tpld_take_ref() and mc_tpld_drop_ref() is a current
main difficulty of this changeset.

When mc_tpld_take_ref() are called, the
instantaneous state of the topology is captured into the resulting variable,
and is guaranteed to remain unchanged when accessed through that shared
pointer instance. If another shared pointer is taken, then there is no
guarantee that the new shared pointer refers to the same topology.
Referring to points that call bson_mutex_{un}lock is a good guide on where
to take and drop these references. Within a locked section, it can be
assumed that the code expects a single view of the topology from the
beginning to the end.
Functions that remark to ""expect the caller to hold the topology mutex""
means that they intend to see a consistent view of the topology during their
execution (or it means the function is intending to modify the topology,
but that's discussed later).

Because these functions need to refer to the topology description it would
almost be correct to just take a shared pointer instead of assuming the
caller holds a mutex, except this is wrong: The function expects a
consistent view of the topology before and after it is finished
execution. A caller may hold a shared pointer td1, call one of these
functions, which will then take a shared pointer td2. There is no
guarantee that td1 and td2 point to the same topology description, so
the callee and caller may be working with different descriptions, whereas
with the mutex they would have been able to assume they are equivalent.
The solution is that functions that ""expect the topology mutex to be held""
need to instead be given a handle to the topology description state that
the caller is expecting them to work on. These functions have had a
mongoc_topology_description_t* parameter added, and each caller will
pass-down the topology description that they are keeping alive using a
shared pointer. These functions that ""expect the topology mutex to be
held"" will not refer to the shared pointer of the topology, and defer
instead to the topology that was given to them by their caller.




At some points, functions are invoked that are expected to update the topology
(e.g. topology scanning). In this case, the caller takes a shared pointer td
and checks if it is valid/stale. If the td is okay, it continues with td.
If not, it will invoke a scan operation and block. After the scanning
completes, the caller must drop td and then rebind td by taking the
topology description again. This allows the callers to see the updated
topology after scanning has completed.
In the case of multithreaded scanning/monitoring, the topology
description updates need to be queued and processed one at a time. If
multiple threads were allowed to concurrently modify the topology, some
topology updates might be lost. For example: If thread th1 clones the
topology description and begins updating it, and then thread th2 takes
another clone, quickly modifies it, and then swaps it back in place, then
th1 might finish its modifications and write back the topology description
based on the copy it took before th2 did its modifications, thus losing the
modifications done by th2. (Solved below)

Update:
const for all-the-things
There was trouble in deciding where to take a copy of the shared topology
description, versus when we would need to duplicate the description so that it
could be modified and later swapped out. The solution was to make the
_shared_descr_ be a pointer-to-const. Thus, any caller of
mc_tpld_take_ref() would obtain a
shared-pointer-to-const mongoc_topology_description_t, and be unable to modify
the description or bind it to a pointer-to-non-const (I'll abbreviate as
mutable*). From this point, it was just a matter of finding everywhere that a
we attempt to create a mutable* and from a const* deciding:

Should the mutable* become a const*?
Are we actually attempting to modify the topology description?

In the case of [1], it was simply a matter of adding more const at the
use-site and in the function signatures where we are trying to pass the
const*. After modifying the callee signatures to take const*, it would often
lead to more sites where we attempt to form mutable* from a const*. In
every case, this would eventually result in:

The entire call-tree becomes const-correct, and we can know that any time we
see const mongoc_topology_description_t*, we know that we are not going to
attempt to modify it.
Eventually, adding a const would be impossible, because we are attempting to
modify the topology. In this case, we backtrack and find where we originally
took the shared-const* and mark that as a point where we need to perform a
topology modification. That is, these sites become an instance of [2] above.

Additionally, mongoc_topology_description_t contains (contained) a member
mongoc_set_t* servers which contains a set of mongoc_server_description_t.
The servers pointer member is an owning-pointer, and the server descriptions
are themselves a part of the topology. Thus, when we have a
mongoc_topology_description_t const*, we should only access it's
mongoc_server_description_t instances through const* as well.
Because pointer members are shallow-const, the servers member was renamed to
_servers_, and any attempt to access the server descriptions of a topology
description now must go through two getter functions:


mc_tpld_servers(mongoc_topology_description_t*)
  -> mongoc_set_t*


mc_tpld_servers_const(mongoc_topology_description_t const*)
  -> mongoc_set_t const*


Because it is invalid to pass a const* to mc_tpld_servers, it is not
possible to obtain a mutable* for a mongoc_server_description_t when all you
have is a mongoc_topology_description_t const* (unless you do a cast. Don't do
a cast).

Note: There were not yet any const-aware mongoc_set functions, so those
were also added as part of this PR.

Modifying the Topology
Now we need to define the procedure to update the topology. There are a few
requirements:

Only one thread may update a topology description at any time. Everyone else
needs to wait their turn.
Any number of threads can still inspect the topology while another thread is
performing an update.
Threads should not see any ""partial"" updates to the topology. The topology
update must appear atomic threads other than the one doing the updates.
After an update is committed, other threads that still have a reference to the
old topology should be safe to keep using that old reference.

All of the above are addressed by a few new APIs:
struct mc_tpld_modification {
  mongoc_topology_description_t* new_td;
  mongoc_topology_t* topology;
};

mc_tpld_modification
mc_tpld_modify_begin(mongoc_topology_t* topo);

void
mc_tpld_modify_commit(mc_tpld_modification tdmod);

void
mc_tpld_modify_drop(mc_tpld_modification tdmod);
They work as such:

mc_tpld_modification: A composite object that contains state for the
topology update. The most important member is new_td, which is a
non-const pointer to a topology description. Through this pointer we
should apply updates to the topology description. topology is pointer to
the topology that owns the descriptions.
mc_tpld_modify_begin(tpl): Locks a mutex in tpl that is used to serialize
modifications to the topology description. The current topology description is
cloned and put into mc_tpld_modification::new_td on the returned object.
mc_tpld_modify_drop(tdmod): Drops any pending modifications defined by
tdmod. Unlocks the topology modification mutex. Destroys and deallocates
new_td.
mc_tpld_modify_commit(tdmod): Perform the atomic update of the topology
description. After this function returns, the topology description from
new_td is the new description for the whole topology. Unlocks the
modification mutex. new_td is bound to the
shared-pointer stored in topology.

A call to mc_tpld_modify_begin() must be later followed by a call to
either mc_tpld_modify_drop() or mc_tpld_modify_commit() (never both).
For example:
mc_shared_tpl_descr td = mc_tpld_take_ref(tpl); // [1]
if (needs_to_update(td.ptr)) {  // [2]
  mc_tpld_modification tdmod = mc_tpld_modify_begin(tpl);  // [3]
  if (needs_to_update(tdmod.new_td)) {   // [4]
    do_update_topology(tdmod.new_td);    // [5]
    mc_tpld_modification_commit(tdmod);  // [6]
  } else {
    mc_tpld_modification_drop(tdmod);    // [7]
  }
}
mc_tpld_drop_ref(&td);  // [8]
Explained:

Take a reference to the topology description at that exact moment. td.ptr
will remain valid until [8], and the pointed-to-description will remain
unchanged regardless of any intermediate code.
Check whether we need to update the topology. This may come in the form of an
error during normal execution, rather than an explicit check for
outdated-ness.
Begin an update transaction.
Check again!: The call to mc_tpld_modify_begin() may have been preempted
by another thread that was in the middle of performing an update. The other
thread may have already performed the update that we expected ourselves to
do. It is not guaranteed that the td in the outer scope is the same as the
tdmod.new_td, since new_td was cloned after securing the exclusive lock
to perform a topology update.
Pass the mutable* to the topology description to a function that will
perform the updates. No other thread will have access to this pointer, so no
further synchronization is necessary.
Commit the update. Now other threads will see our updates the next time they
pull the topology description.
If needs_to_update(tdmod.new_td) returned false, abandon the update.
td is still holding a reference to the topology description at the moment
of the call to mc_tpld_take_ref in [1]. We always need to drop those
references.","@vector-of-bool Thank you for the thorough response.
Your reference to atomic shared_ptr operations cleared up a lot my previously stated concerns. The global mutex remains surprising, but I will trust your reference to libc++'s implementation and your own benchmarks. You make compelling arguments that it is not as severe a concern as I had initially assumed. If updates to the topology description can be committed as an atomic exchange of the _shared_descr_ shared pointer, and contention is measurably infrequent, I can see the argument for why it would be preferable to a reader-writer lock. I believe renaming several of the associated functions to better align with their C11 / C++11 counterparts will help avoid much of the confusion I fell into (I had misunderstood the purpose of the global mutex). I will follow up on this in more detail in the new PR #858.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,854,2021-08-27T06:42:44Z,2021-11-10T17:40:42Z,2021-11-10T17:40:43Z,MERGED,True,2505,1921,56,https://github.com/vector-of-bool,CDRIVER-4114: Reduce contention on the topology description,148,[],https://github.com/mongodb/mongo-c-driver/pull/854,https://github.com/vector-of-bool,4,https://github.com/mongodb/mongo-c-driver/pull/854#issuecomment-953274531,"This is a fairly substantial changeset, and may require an equally substantial
explanation.
The main mutable state of a mongoc_topology_t is all contained within the
description, which contains the known state of the associated server topology.
Other pieces of state might also be updated in parallel, but they can be managed
through regular atomic operations.
The purpose of opening this as a draft is to get eyes on the work to ensure I
have a proper understanding of how the topology's state is meant to be
maintained, and that the correct understanding is reflected in the code.
This work builds upon changes in #840 (new atomics) and #847 (new session
pooling).
Important draft TODOs and notes

This is still a draft. It may have speeling ,and   grammar error .
Several new internal APIs have abbreviated names, which is uncommon in the
rest of the codebase. This was purely to save my hands the strain of typing
verbose names all the time 🙂. Anything can be renamed before this PR is
merged.
Several doc comments are now outdated.
Very few usages of topology::mutex have been removed yet. These will be
pruned later on once the topology-update-queue is fully implemented. Done.
Various C99 usage throughout.

A summary of the changes

The introduction of a ""shared pointer"" type. This is analogous to a C++
shared_ptr in design and behavior:

A shared_ptr is created with a pointer than was previously allocated, and a
destructor+deallocator function.
The shared pointer maintains auxiliary data that tell it how many live
references remain, and the destructor+deallocator.
Copying and destroying different shared pointers that refer to the same
object is thread-safe.
Copying a shared pointer object that is also being updated is not
thread-safe, and must be done using the _atomic() functions.
When the reference count of a shared pointer reaches zero, the
destructor+deallocator function is immediately invoked with the managed
pointer (this occurs in the thread that decremented the reference count to
zero).
Shared pointer objects are layout-compatible with a regular pointer. This is
used in union mc_shared_tpl_descr.


The mongoc_topology_t::description member has been replaced with a
union mc_shared_tpl_descr _shared_descr_ member. Users that wish to access
the description must do so by calling an API that will return them a shared
pointer to the description, which the caller must then release when it is
finished. Acquiring this shared pointer is ""taking"" the description, and
releasing it is ""dropping"" the description.
In the current code, the macro MC_DECL_TD_TAKE (VarName, Topology) is used
to simultaneous declare a define mc_shared_tpl_descr VarName as taking the
shared description of Topology. MC_TD_DROP(VarName) should be used to
drop that pointer. A shared pointer can be rebound using
tdptr = mc_tpld_take_ref(topology)
The topology referred-to by _shared_descr_ is never updated in-place.
Instead, a copy is made of the description, updates are applied to that copy,
and _shared_descr_ is atomically swapped with the modified copy. This
prevents someone attempting to take the shared description from seeing a torn
value.
Finding out when to use mc_tpld_take_ref() and mc_tpld_drop_ref() is a current
main difficulty of this changeset.

When mc_tpld_take_ref() are called, the
instantaneous state of the topology is captured into the resulting variable,
and is guaranteed to remain unchanged when accessed through that shared
pointer instance. If another shared pointer is taken, then there is no
guarantee that the new shared pointer refers to the same topology.
Referring to points that call bson_mutex_{un}lock is a good guide on where
to take and drop these references. Within a locked section, it can be
assumed that the code expects a single view of the topology from the
beginning to the end.
Functions that remark to ""expect the caller to hold the topology mutex""
means that they intend to see a consistent view of the topology during their
execution (or it means the function is intending to modify the topology,
but that's discussed later).

Because these functions need to refer to the topology description it would
almost be correct to just take a shared pointer instead of assuming the
caller holds a mutex, except this is wrong: The function expects a
consistent view of the topology before and after it is finished
execution. A caller may hold a shared pointer td1, call one of these
functions, which will then take a shared pointer td2. There is no
guarantee that td1 and td2 point to the same topology description, so
the callee and caller may be working with different descriptions, whereas
with the mutex they would have been able to assume they are equivalent.
The solution is that functions that ""expect the topology mutex to be held""
need to instead be given a handle to the topology description state that
the caller is expecting them to work on. These functions have had a
mongoc_topology_description_t* parameter added, and each caller will
pass-down the topology description that they are keeping alive using a
shared pointer. These functions that ""expect the topology mutex to be
held"" will not refer to the shared pointer of the topology, and defer
instead to the topology that was given to them by their caller.




At some points, functions are invoked that are expected to update the topology
(e.g. topology scanning). In this case, the caller takes a shared pointer td
and checks if it is valid/stale. If the td is okay, it continues with td.
If not, it will invoke a scan operation and block. After the scanning
completes, the caller must drop td and then rebind td by taking the
topology description again. This allows the callers to see the updated
topology after scanning has completed.
In the case of multithreaded scanning/monitoring, the topology
description updates need to be queued and processed one at a time. If
multiple threads were allowed to concurrently modify the topology, some
topology updates might be lost. For example: If thread th1 clones the
topology description and begins updating it, and then thread th2 takes
another clone, quickly modifies it, and then swaps it back in place, then
th1 might finish its modifications and write back the topology description
based on the copy it took before th2 did its modifications, thus losing the
modifications done by th2. (Solved below)

Update:
const for all-the-things
There was trouble in deciding where to take a copy of the shared topology
description, versus when we would need to duplicate the description so that it
could be modified and later swapped out. The solution was to make the
_shared_descr_ be a pointer-to-const. Thus, any caller of
mc_tpld_take_ref() would obtain a
shared-pointer-to-const mongoc_topology_description_t, and be unable to modify
the description or bind it to a pointer-to-non-const (I'll abbreviate as
mutable*). From this point, it was just a matter of finding everywhere that a
we attempt to create a mutable* and from a const* deciding:

Should the mutable* become a const*?
Are we actually attempting to modify the topology description?

In the case of [1], it was simply a matter of adding more const at the
use-site and in the function signatures where we are trying to pass the
const*. After modifying the callee signatures to take const*, it would often
lead to more sites where we attempt to form mutable* from a const*. In
every case, this would eventually result in:

The entire call-tree becomes const-correct, and we can know that any time we
see const mongoc_topology_description_t*, we know that we are not going to
attempt to modify it.
Eventually, adding a const would be impossible, because we are attempting to
modify the topology. In this case, we backtrack and find where we originally
took the shared-const* and mark that as a point where we need to perform a
topology modification. That is, these sites become an instance of [2] above.

Additionally, mongoc_topology_description_t contains (contained) a member
mongoc_set_t* servers which contains a set of mongoc_server_description_t.
The servers pointer member is an owning-pointer, and the server descriptions
are themselves a part of the topology. Thus, when we have a
mongoc_topology_description_t const*, we should only access it's
mongoc_server_description_t instances through const* as well.
Because pointer members are shallow-const, the servers member was renamed to
_servers_, and any attempt to access the server descriptions of a topology
description now must go through two getter functions:


mc_tpld_servers(mongoc_topology_description_t*)
  -> mongoc_set_t*


mc_tpld_servers_const(mongoc_topology_description_t const*)
  -> mongoc_set_t const*


Because it is invalid to pass a const* to mc_tpld_servers, it is not
possible to obtain a mutable* for a mongoc_server_description_t when all you
have is a mongoc_topology_description_t const* (unless you do a cast. Don't do
a cast).

Note: There were not yet any const-aware mongoc_set functions, so those
were also added as part of this PR.

Modifying the Topology
Now we need to define the procedure to update the topology. There are a few
requirements:

Only one thread may update a topology description at any time. Everyone else
needs to wait their turn.
Any number of threads can still inspect the topology while another thread is
performing an update.
Threads should not see any ""partial"" updates to the topology. The topology
update must appear atomic threads other than the one doing the updates.
After an update is committed, other threads that still have a reference to the
old topology should be safe to keep using that old reference.

All of the above are addressed by a few new APIs:
struct mc_tpld_modification {
  mongoc_topology_description_t* new_td;
  mongoc_topology_t* topology;
};

mc_tpld_modification
mc_tpld_modify_begin(mongoc_topology_t* topo);

void
mc_tpld_modify_commit(mc_tpld_modification tdmod);

void
mc_tpld_modify_drop(mc_tpld_modification tdmod);
They work as such:

mc_tpld_modification: A composite object that contains state for the
topology update. The most important member is new_td, which is a
non-const pointer to a topology description. Through this pointer we
should apply updates to the topology description. topology is pointer to
the topology that owns the descriptions.
mc_tpld_modify_begin(tpl): Locks a mutex in tpl that is used to serialize
modifications to the topology description. The current topology description is
cloned and put into mc_tpld_modification::new_td on the returned object.
mc_tpld_modify_drop(tdmod): Drops any pending modifications defined by
tdmod. Unlocks the topology modification mutex. Destroys and deallocates
new_td.
mc_tpld_modify_commit(tdmod): Perform the atomic update of the topology
description. After this function returns, the topology description from
new_td is the new description for the whole topology. Unlocks the
modification mutex. new_td is bound to the
shared-pointer stored in topology.

A call to mc_tpld_modify_begin() must be later followed by a call to
either mc_tpld_modify_drop() or mc_tpld_modify_commit() (never both).
For example:
mc_shared_tpl_descr td = mc_tpld_take_ref(tpl); // [1]
if (needs_to_update(td.ptr)) {  // [2]
  mc_tpld_modification tdmod = mc_tpld_modify_begin(tpl);  // [3]
  if (needs_to_update(tdmod.new_td)) {   // [4]
    do_update_topology(tdmod.new_td);    // [5]
    mc_tpld_modification_commit(tdmod);  // [6]
  } else {
    mc_tpld_modification_drop(tdmod);    // [7]
  }
}
mc_tpld_drop_ref(&td);  // [8]
Explained:

Take a reference to the topology description at that exact moment. td.ptr
will remain valid until [8], and the pointed-to-description will remain
unchanged regardless of any intermediate code.
Check whether we need to update the topology. This may come in the form of an
error during normal execution, rather than an explicit check for
outdated-ness.
Begin an update transaction.
Check again!: The call to mc_tpld_modify_begin() may have been preempted
by another thread that was in the middle of performing an update. The other
thread may have already performed the update that we expected ourselves to
do. It is not guaranteed that the td in the outer scope is the same as the
tdmod.new_td, since new_td was cloned after securing the exclusive lock
to perform a topology update.
Pass the mutable* to the topology description to a function that will
perform the updates. No other thread will have access to this pointer, so no
further synchronization is necessary.
Commit the update. Now other threads will see our updates the next time they
pull the topology description.
If needs_to_update(tdmod.new_td) returned false, abandon the update.
td is still holding a reference to the topology description at the moment
of the call to mc_tpld_take_ref in [1]. We always need to drop those
references.","I've removed some over-realiance on the tpld_modification_mtx, and added a new one for the purpose of the SRV polling thread. I've also added comments clarifying where and why we are manually manipulating the tpld_modification_mtx, since there are places where it is appropriate to access it directly.
Also addressed various other PR concerns and comments.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,855,2021-08-27T14:36:24Z,2021-08-30T20:47:32Z,2021-08-30T20:47:35Z,MERGED,True,287,181,105,https://github.com/eramongodb,CDRIVER-3320 Add BSON_GNUC_WARN_UNUSED_RESULT to exported functions,2,[],https://github.com/mongodb/mongo-c-driver/pull/855,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/855,"All functions declared with MONGOC_EXPORT were examined in this pass.
Any exported functions whose return value which the C driver documentation described as ""newly allocated"" or ""should be freed"" were given the BSON_GNUC_WARN_UNUSED_RESULT attribute. If there was not a documentation page corresponding to the function, or if the documentation did not describe how the result should be handled, the definition was examined for the presence of any calls to a *_new()-like, *_malloc()-like, *_copy(), or *_clone()-like functions as an indicator instead.
No additional warnings appear to have been generated relative to base commit (583213d) as a result of these changes when building the C driver. Yay for no (obvious) leaks!🎉
Code formatting was also applied to all modified files. These formatting changes can be reverted if deemed unnecessary.","All functions declared with MONGOC_EXPORT were examined in this pass.
Any exported functions whose return value which the C driver documentation described as ""newly allocated"" or ""should be freed"" were given the BSON_GNUC_WARN_UNUSED_RESULT attribute. If there was not a documentation page corresponding to the function, or if the documentation did not describe how the result should be handled, the definition was examined for the presence of any calls to a *_new()-like, *_malloc()-like, *_copy(), or *_clone()-like functions as an indicator instead.
No additional warnings appear to have been generated relative to base commit (583213d) as a result of these changes when building the C driver. Yay for no (obvious) leaks!🎉
Code formatting was also applied to all modified files. These formatting changes can be reverted if deemed unnecessary.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,856,2021-08-28T01:49:24Z,2021-09-14T19:59:24Z,2022-02-03T14:28:24Z,MERGED,True,153,71,7,https://github.com/kevinAlbs,CDRIVER-4083 + CDRIVER-4138,13,[],https://github.com/mongodb/mongo-c-driver/pull/856,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/856,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,857,2021-08-31T02:47:34Z,2021-08-31T17:20:41Z,2021-08-31T17:21:07Z,MERGED,True,1,1,1,https://github.com/rcsanchez97,CDRIVER-4132 update RPM spec patch post-1.19.0 release,1,[],https://github.com/mongodb/mongo-c-driver/pull/857,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/857,Patch build: https://spruce.mongodb.com/version/612d91b80ae60647c94241e3/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Patch build: https://spruce.mongodb.com/version/612d91b80ae60647c94241e3/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,858,2021-09-01T22:08:21Z,2021-09-15T23:52:56Z,2021-09-15T23:52:56Z,MERGED,True,506,1,7,https://github.com/vector-of-bool,CDRIVER-4147 A reference-counted shared pointer abstraction,47,[],https://github.com/mongodb/mongo-c-driver/pull/858,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/858,"This is a shared pointer abstraction, later used by #854. It builds atop #840,","This is a shared pointer abstraction, later used by #854. It builds atop #840,",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,858,2021-09-01T22:08:21Z,2021-09-15T23:52:56Z,2021-09-15T23:52:56Z,MERGED,True,506,1,7,https://github.com/vector-of-bool,CDRIVER-4147 A reference-counted shared pointer abstraction,47,[],https://github.com/mongodb/mongo-c-driver/pull/858,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/858#issuecomment-911927529,"This is a shared pointer abstraction, later used by #854. It builds atop #840,","(I wish I could reply directly to top-level comments.)
@eramongodb those macros were an experimental thing. I thought I had taken them out. I will remove those.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,859,2021-09-03T16:37:20Z,2021-09-10T14:45:04Z,2021-09-10T14:45:07Z,MERGED,True,7,0,3,https://github.com/eramongodb,CDRIVER-4122 Add BSON corpus test for binary subtype 7,2,[],https://github.com/mongodb/mongo-c-driver/pull/859,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/859,Validating changes relating to DRIVERS-1875.,Validating changes relating to DRIVERS-1875.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,859,2021-09-03T16:37:20Z,2021-09-10T14:45:04Z,2021-09-10T14:45:07Z,MERGED,True,7,0,3,https://github.com/eramongodb,CDRIVER-4122 Add BSON corpus test for binary subtype 7,2,[],https://github.com/mongodb/mongo-c-driver/pull/859,https://github.com/eramongodb,2,https://github.com/mongodb/mongo-c-driver/pull/859#issuecomment-914570764,Validating changes relating to DRIVERS-1875.,"Note: after merging, make sure you update the downstream change summary on DRIVERS-1875 to advise drivers to create a new constant for sub-type 0x07 (please suggest a name) and sync their BSON corpus tests to the merge commit.

@jmikola Per name in server, the name will likely be <subtype-prefix>Column where <subtype-prefix> depends on the given language. For the C driver, this would be:
  typedef enum {
     BSON_SUBTYPE_BINARY = 0x00,
     BSON_SUBTYPE_FUNCTION = 0x01,
     BSON_SUBTYPE_BINARY_DEPRECATED = 0x02,
     BSON_SUBTYPE_UUID_DEPRECATED = 0x03,
     BSON_SUBTYPE_UUID = 0x04,
     BSON_SUBTYPE_MD5 = 0x05,
     BSON_SUBTYPE_ENCRYPTED = 0x06,
+    BSON_SUBTYPE_COLUMN = 0x07,
     BSON_SUBTYPE_USER = 0x80,
  } bson_subtype_t;
Should the addition of this enumeration constant be included in this PR?",True,"{'THUMBS_UP': ['https://github.com/jmikola', 'https://github.com/kevinAlbs']}"
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,859,2021-09-03T16:37:20Z,2021-09-10T14:45:04Z,2021-09-10T14:45:07Z,MERGED,True,7,0,3,https://github.com/eramongodb,CDRIVER-4122 Add BSON corpus test for binary subtype 7,2,[],https://github.com/mongodb/mongo-c-driver/pull/859,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/859#issuecomment-915215335,Validating changes relating to DRIVERS-1875.,"Should the addition of this enumeration constant be included in this PR?

I think so, as it's part of the changes that should be proposed by DRIVERS-1875.
I didn't realize this was a libmongoc PR when I left my previous comment. That was intended for mongodb/specifications#1065, so I'll copy it there. The DRIVERS ticket should definitely be revised to suggest drivers add a constant for the new subtype if they currently do so for other subtypes, and that would be a reasonable place to suggest ""COLUMN"" as a name.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,860,2021-09-04T02:03:33Z,2021-09-13T14:00:37Z,2022-02-03T14:28:31Z,MERGED,True,86,3,4,https://github.com/kevinAlbs,CDRIVER-3636 exclude PossiblePrimary from MSS check,1,[],https://github.com/mongodb/mongo-c-driver/pull/860,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/860,"Do not check PossiblePrimary servers in the maxWireVersion check
for topology support of maxStalenessSeconds","Do not check PossiblePrimary servers in the maxWireVersion check
for topology support of maxStalenessSeconds",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,861,2021-09-07T14:43:03Z,2021-09-09T02:44:59Z,2021-09-09T02:45:01Z,MERGED,True,15,6,2,https://github.com/rcsanchez97,sync RPM spec file for 1.19.0 release,1,[],https://github.com/mongodb/mongo-c-driver/pull/861,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/861,Evergreen patch build: https://spruce.mongodb.com/version/613773c6a4cf4702b6a62915/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Evergreen patch build: https://spruce.mongodb.com/version/613773c6a4cf4702b6a62915/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,862,2021-09-07T14:43:34Z,2021-09-09T02:44:37Z,2021-09-09T02:44:40Z,MERGED,True,16,7,2,https://github.com/rcsanchez97,sync RPM spec file for 1.19.0 release,1,[],https://github.com/mongodb/mongo-c-driver/pull/862,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/862,Evergreen patch build: https://spruce.mongodb.com/version/6137779c1e2d177c30e87ae9/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Evergreen patch build: https://spruce.mongodb.com/version/6137779c1e2d177c30e87ae9/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,863,2021-09-07T19:07:09Z,2021-09-08T14:54:47Z,2021-09-08T14:54:49Z,MERGED,True,33,4,6,https://github.com/eramongodb,CDRIVER-3361 update documentation for owning return values,1,[],https://github.com/mongodb/mongo-c-driver/pull/863,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/863,Documentation was updated for all functions that may return an owning pointer to either a mongoc_transaction_opt or mongoc_session_opt to indicate (no) responsibility to free the pointed-to object. Wording and content organization were made consistent across modified pages.,Documentation was updated for all functions that may return an owning pointer to either a mongoc_transaction_opt or mongoc_session_opt to indicate (no) responsibility to free the pointed-to object. Wording and content organization were made consistent across modified pages.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,863,2021-09-07T19:07:09Z,2021-09-08T14:54:47Z,2021-09-08T14:54:49Z,MERGED,True,33,4,6,https://github.com/eramongodb,CDRIVER-3361 update documentation for owning return values,1,[],https://github.com/mongodb/mongo-c-driver/pull/863,https://github.com/eramongodb,2,https://github.com/mongodb/mongo-c-driver/pull/863#issuecomment-914648716,Documentation was updated for all functions that may return an owning pointer to either a mongoc_transaction_opt or mongoc_session_opt to indicate (no) responsibility to free the pointed-to object. Wording and content organization were made consistent across modified pages.,Excuse my accidental force-push to fix missing EOL for updated files.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,864,2021-09-08T15:20:00Z,2021-09-10T16:30:08Z,2021-09-10T16:30:11Z,MERGED,True,31,13,8,https://github.com/eramongodb,CDRIVER-3362 update documentation for non-owning return values,2,[],https://github.com/mongodb/mongo-c-driver/pull/864,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/864,"Lifetime of return values for client session, session option, and transaction option accessors has been added to documentation using the common phrase, ""valid only for the lifetime of"" to denote dependent lifetime, a phrase already being used in some pages such as mongoc_change_stream_get_resume_token().","Lifetime of return values for client session, session option, and transaction option accessors has been added to documentation using the common phrase, ""valid only for the lifetime of"" to denote dependent lifetime, a phrase already being used in some pages such as mongoc_change_stream_get_resume_token().",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,865,2021-09-08T16:29:11Z,2021-09-09T21:27:23Z,2021-09-09T21:27:25Z,MERGED,True,28,9,2,https://github.com/eramongodb,CDRIVER-4151 Replace static TestFnCtx with allocated object,2,[],https://github.com/mongodb/mongo-c-driver/pull/865,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/865,"The solution to CDRIVER-3632 (merged in #865) introduced a bug in TestSuite_Add() and TestSuite_AddLive() where the static TestFnCtx object generated by the new TestSuite_AddFullWithTestFn(), pointed-to by each Test object created on invocation of TestSuite_Add() or TestSuite_AddLive(), is modified by a subsequent call to TestSuite_Add() or TestSuite_AddLive(). This has the effect of incorrectly (effectively) modifying _Test::ctx->func to point the last (and only the last) test_fn given to TestSuite_Add() or TestSuite_AddLive() respectively (each has their own static local variable):
void
TestSuite_Add (TestSuite *suite, /* IN */
               const char *name, /* IN */
               TestFunc func)    /* IN */
{
   /* Expanded:
         TestSuite_AddFullWithTestFn (
            suite, name, TestSuite_AddHelper, NULL, func, TestSuite_CheckDummy);
    */
   do {
      static TestFnCtx ctx;
      ctx.test_fn = (TestFunc) (func);
      _TestSuite_AddFull (suite,
                          name,
                          TestSuite_AddHelper,
                          NULL,
                          &ctx,
                          TestSuite_CheckDummy,
                          NULL);
   } while (0);
}
The alternative dynamically allocating solution documented in CDRIVER-3632 neatly addresses this issue by instead allocating a unique TestFnCtx on each call to TestSuite_AddFullWithTestFn(), eliminating the involuntary shared state across different Test objects created by calls to TestSuite_Add() and TestSuite_AddLive():
void
TestSuite_Add (TestSuite *suite, /* IN */
               const char *name, /* IN */
               TestFunc func)    /* IN */
{
   /* Expanded:
         TestSuite_AddFullWithTestFn (
            suite, name, TestSuite_AddHelper, NULL, func, TestSuite_CheckDummy);
    */
   do {
      TestFnCtx *ctx = malloc (sizeof (TestFnCtx));
      ctx->test_fn = (TestFunc) (func);
      ctx->dtor = NULL;
      _TestSuite_AddFull (suite,
                          name,
                          TestSuite_AddHelper,
                          _TestSuite_TestFnCtxDtor,
                          ctx,
                          TestSuite_CheckDummy,
                          NULL);
   } while (0);
}","The solution to CDRIVER-3632 (merged in #865) introduced a bug in TestSuite_Add() and TestSuite_AddLive() where the static TestFnCtx object generated by the new TestSuite_AddFullWithTestFn(), pointed-to by each Test object created on invocation of TestSuite_Add() or TestSuite_AddLive(), is modified by a subsequent call to TestSuite_Add() or TestSuite_AddLive(). This has the effect of incorrectly (effectively) modifying _Test::ctx->func to point the last (and only the last) test_fn given to TestSuite_Add() or TestSuite_AddLive() respectively (each has their own static local variable):
void
TestSuite_Add (TestSuite *suite, /* IN */
               const char *name, /* IN */
               TestFunc func)    /* IN */
{
   /* Expanded:
         TestSuite_AddFullWithTestFn (
            suite, name, TestSuite_AddHelper, NULL, func, TestSuite_CheckDummy);
    */
   do {
      static TestFnCtx ctx;
      ctx.test_fn = (TestFunc) (func);
      _TestSuite_AddFull (suite,
                          name,
                          TestSuite_AddHelper,
                          NULL,
                          &ctx,
                          TestSuite_CheckDummy,
                          NULL);
   } while (0);
}
The alternative dynamically allocating solution documented in CDRIVER-3632 neatly addresses this issue by instead allocating a unique TestFnCtx on each call to TestSuite_AddFullWithTestFn(), eliminating the involuntary shared state across different Test objects created by calls to TestSuite_Add() and TestSuite_AddLive():
void
TestSuite_Add (TestSuite *suite, /* IN */
               const char *name, /* IN */
               TestFunc func)    /* IN */
{
   /* Expanded:
         TestSuite_AddFullWithTestFn (
            suite, name, TestSuite_AddHelper, NULL, func, TestSuite_CheckDummy);
    */
   do {
      TestFnCtx *ctx = malloc (sizeof (TestFnCtx));
      ctx->test_fn = (TestFunc) (func);
      ctx->dtor = NULL;
      _TestSuite_AddFull (suite,
                          name,
                          TestSuite_AddHelper,
                          _TestSuite_TestFnCtxDtor,
                          ctx,
                          TestSuite_CheckDummy,
                          NULL);
   } while (0);
}",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,866,2021-09-10T22:09:56Z,2021-09-13T18:08:34Z,2022-02-03T14:28:32Z,MERGED,True,2,6,3,https://github.com/kevinAlbs,CDRIVER-4155 address deadStore warnings,2,[],https://github.com/mongodb/mongo-c-driver/pull/866,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/866,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,867,2021-09-12T22:30:41Z,2021-09-14T23:21:43Z,2021-09-14T23:21:48Z,MERGED,True,3,0,1,https://github.com/rcsanchez97,CDRIVER-4156 use Python from toolchain on Ubuntu 14.04 Evergreen hosts,1,[],https://github.com/mongodb/mongo-c-driver/pull/867,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/867,"Evergreen patch build: https://spruce.mongodb.com/version/613df8d52a60ed7292b98b30/tasks?page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
In the process of looking for specific failures on the waterfall, I stumbled across a pattern of failures on Ubuntu 14.04.  This  change addresses the reason for the failure: the system Python is too old and the helper script was pointing at the incorrect location for the toolchain-provided Python interpreter.  This corrects all of the System Failed tasks on Ubuntu 14.04 variants.  The majority turned green, but a few turned red as a result of legitimate test failures which are documented in existing tickets.
@kevinAlbs Note that I could not find a ticket that describes the particular failures I am correcting with this PR (I searched for tickets with the failing-on-waterfall tag).  If a ticket is needed, let me know and I can file the ticket and then amend the commit message to reference the new ticket.  Let me know if this is something I should do.","Evergreen patch build: https://spruce.mongodb.com/version/613df8d52a60ed7292b98b30/tasks?page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
In the process of looking for specific failures on the waterfall, I stumbled across a pattern of failures on Ubuntu 14.04.  This  change addresses the reason for the failure: the system Python is too old and the helper script was pointing at the incorrect location for the toolchain-provided Python interpreter.  This corrects all of the System Failed tasks on Ubuntu 14.04 variants.  The majority turned green, but a few turned red as a result of legitimate test failures which are documented in existing tickets.
@kevinAlbs Note that I could not find a ticket that describes the particular failures I am correcting with this PR (I searched for tickets with the failing-on-waterfall tag).  If a ticket is needed, let me know and I can file the ticket and then amend the commit message to reference the new ticket.  Let me know if this is something I should do.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,867,2021-09-12T22:30:41Z,2021-09-14T23:21:43Z,2021-09-14T23:21:48Z,MERGED,True,3,0,1,https://github.com/rcsanchez97,CDRIVER-4156 use Python from toolchain on Ubuntu 14.04 Evergreen hosts,1,[],https://github.com/mongodb/mongo-c-driver/pull/867,https://github.com/acmorrow,2,https://github.com/mongodb/mongo-c-driver/pull/867#issuecomment-918321275,"Evergreen patch build: https://spruce.mongodb.com/version/613df8d52a60ed7292b98b30/tasks?page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
In the process of looking for specific failures on the waterfall, I stumbled across a pattern of failures on Ubuntu 14.04.  This  change addresses the reason for the failure: the system Python is too old and the helper script was pointing at the incorrect location for the toolchain-provided Python interpreter.  This corrects all of the System Failed tasks on Ubuntu 14.04 variants.  The majority turned green, but a few turned red as a result of legitimate test failures which are documented in existing tickets.
@kevinAlbs Note that I could not find a ticket that describes the particular failures I am correcting with this PR (I searched for tickets with the failing-on-waterfall tag).  If a ticket is needed, let me know and I can file the ticket and then amend the commit message to reference the new ticket.  Let me know if this is something I should do.","The mongodbtoolchain is for the server project, and not intended for use in other projects. Is the C driver (or C++ driver for that matter) already using mongodbtoolchain components?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,867,2021-09-12T22:30:41Z,2021-09-14T23:21:43Z,2021-09-14T23:21:48Z,MERGED,True,3,0,1,https://github.com/rcsanchez97,CDRIVER-4156 use Python from toolchain on Ubuntu 14.04 Evergreen hosts,1,[],https://github.com/mongodb/mongo-c-driver/pull/867,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/867#issuecomment-918662525,"Evergreen patch build: https://spruce.mongodb.com/version/613df8d52a60ed7292b98b30/tasks?page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
In the process of looking for specific failures on the waterfall, I stumbled across a pattern of failures on Ubuntu 14.04.  This  change addresses the reason for the failure: the system Python is too old and the helper script was pointing at the incorrect location for the toolchain-provided Python interpreter.  This corrects all of the System Failed tasks on Ubuntu 14.04 variants.  The majority turned green, but a few turned red as a result of legitimate test failures which are documented in existing tickets.
@kevinAlbs Note that I could not find a ticket that describes the particular failures I am correcting with this PR (I searched for tickets with the failing-on-waterfall tag).  If a ticket is needed, let me know and I can file the ticket and then amend the commit message to reference the new ticket.  Let me know if this is something I should do.","@acmorrow apart from the change I am proposing (which I think is not
introducing a new reference, but updating a stale reference), the C
driver contains toolchain references to:

`/opt/mongodbtoolchain/v3/bin/llvm-symbolizer` (in the test helper
and in the compilation helper scripts)

`/opt/mongodbtoolchain/v3/bin/clang` (in the TSAN build variant)

`/opt/mongodbtoolchain/v3/bin/python3` (in the OCSP build variant helper
script)

Is this something that needs to be changed?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,867,2021-09-12T22:30:41Z,2021-09-14T23:21:43Z,2021-09-14T23:21:48Z,MERGED,True,3,0,1,https://github.com/rcsanchez97,CDRIVER-4156 use Python from toolchain on Ubuntu 14.04 Evergreen hosts,1,[],https://github.com/mongodb/mongo-c-driver/pull/867,https://github.com/acmorrow,4,https://github.com/mongodb/mongo-c-driver/pull/867#issuecomment-919073456,"Evergreen patch build: https://spruce.mongodb.com/version/613df8d52a60ed7292b98b30/tasks?page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
In the process of looking for specific failures on the waterfall, I stumbled across a pattern of failures on Ubuntu 14.04.  This  change addresses the reason for the failure: the system Python is too old and the helper script was pointing at the incorrect location for the toolchain-provided Python interpreter.  This corrects all of the System Failed tasks on Ubuntu 14.04 variants.  The majority turned green, but a few turned red as a result of legitimate test failures which are documented in existing tickets.
@kevinAlbs Note that I could not find a ticket that describes the particular failures I am correcting with this PR (I searched for tickets with the failing-on-waterfall tag).  If a ticket is needed, let me know and I can file the ticket and then amend the commit message to reference the new ticket.  Let me know if this is something I should do.","@rcsanchez97 - It's less than ideal for any project other than the server to use mongodbtoolchain because the only intended/acknowledged consumer is the server project. Since the server team is both the producer and the sole intended consumer, we basically consider ourselves free to change mongodbtooolchain if and when it suits the server team. Non-server projects that use it are exposed to the risk of it changing without notice, and we would be unlikely to revert changes that break things in non-server projects that have become dependent.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,867,2021-09-12T22:30:41Z,2021-09-14T23:21:43Z,2021-09-14T23:21:48Z,MERGED,True,3,0,1,https://github.com/rcsanchez97,CDRIVER-4156 use Python from toolchain on Ubuntu 14.04 Evergreen hosts,1,[],https://github.com/mongodb/mongo-c-driver/pull/867,https://github.com/rcsanchez97,5,https://github.com/mongodb/mongo-c-driver/pull/867#issuecomment-919577907,"Evergreen patch build: https://spruce.mongodb.com/version/613df8d52a60ed7292b98b30/tasks?page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
In the process of looking for specific failures on the waterfall, I stumbled across a pattern of failures on Ubuntu 14.04.  This  change addresses the reason for the failure: the system Python is too old and the helper script was pointing at the incorrect location for the toolchain-provided Python interpreter.  This corrects all of the System Failed tasks on Ubuntu 14.04 variants.  The majority turned green, but a few turned red as a result of legitimate test failures which are documented in existing tickets.
@kevinAlbs Note that I could not find a ticket that describes the particular failures I am correcting with this PR (I searched for tickets with the failing-on-waterfall tag).  If a ticket is needed, let me know and I can file the ticket and then amend the commit message to reference the new ticket.  Let me know if this is something I should do.","@acmorrow thanks for the insight.  I have spoken with Kevin and I am
going to merge this PR (and also #868) so that we can address the system
failures now.  I will also write tickets so that we review and remove
any dependencies from the C driver and C++ driver to the server
toolchain.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,868,2021-09-14T00:06:35Z,2021-09-14T23:20:48Z,2021-09-14T23:21:00Z,MERGED,True,3,0,1,https://github.com/rcsanchez97,CDRIVER-4156 use Python from toolchain on Ubuntu 14.04 Evergreen hosts,1,[],https://github.com/mongodb/mongo-c-driver/pull/868,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/868,"Evergreen patch build: https://evergreen.mongodb.com/version/613fe728c9ec444561e48f6b?redirect_spruce_users=true
c.f. discussion in #867","Evergreen patch build: https://evergreen.mongodb.com/version/613fe728c9ec444561e48f6b?redirect_spruce_users=true
c.f. discussion in #867",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,869,2021-09-15T01:12:14Z,2021-09-15T03:28:26Z,2021-09-15T03:28:26Z,MERGED,True,38,4,4,https://github.com/vector-of-bool,CDRIVER-4158: Fix bson-atomic.h for compatibility with C++,4,[],https://github.com/mongodb/mongo-c-driver/pull/869,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/869,"Fixes CDRIVER-4158. There was some implicit cross-casting going on in the headers that is not valid C++ code.
This also adds a C++ utility target that is only compiled to check that the public headers are valid C++ code.","Fixes CDRIVER-4158. There was some implicit cross-casting going on in the headers that is not valid C++ code.
This also adds a C++ utility target that is only compiled to check that the public headers are valid C++ code.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,870,2021-09-16T05:59:05Z,2021-09-21T21:51:17Z,2021-09-21T21:51:17Z,MERGED,True,210,35,7,https://github.com/vector-of-bool,Allow CTest as a test driver,14,[],https://github.com/mongodb/mongo-c-driver/pull/870,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/870,"Previously, a single CTest test was defined for test-libmongoc. This change allows CTest to see the individual test cases contained within test-libmongoc. These can be selected and executed with the CTest CLI, including with some parallelism.
Changes are only visible with CMake 3.10 or newer. Earlier CMake versions should be unaffected.
This changeset does not modify how the tests are executed in CI. In the future, if we wish to adopt CTest as a test runner, the CTest-emitted results could be transformed via simple scripting back into Evergreen test results.
CTest can be executed with parallelism with the -j/--parallel options. Tests execute well in parallel except when they attempt to modify a shared resource. This can be fixed by attaching concurrency properties to tests as appropriate, or by ensuring that tests each receive and use a unique copy of the resource under contention, but such changes are beyond the scope of this changeset.
These changes relate-to and partially-address CXX-2301 and CXX-2302, but do not complete them.
(The choice of @@ctest-skipped@@ as a skip-marker is arbitrary and insignificant.)","Previously, a single CTest test was defined for test-libmongoc. This change allows CTest to see the individual test cases contained within test-libmongoc. These can be selected and executed with the CTest CLI, including with some parallelism.
Changes are only visible with CMake 3.10 or newer. Earlier CMake versions should be unaffected.
This changeset does not modify how the tests are executed in CI. In the future, if we wish to adopt CTest as a test runner, the CTest-emitted results could be transformed via simple scripting back into Evergreen test results.
CTest can be executed with parallelism with the -j/--parallel options. Tests execute well in parallel except when they attempt to modify a shared resource. This can be fixed by attaching concurrency properties to tests as appropriate, or by ensuring that tests each receive and use a unique copy of the resource under contention, but such changes are beyond the scope of this changeset.
These changes relate-to and partially-address CXX-2301 and CXX-2302, but do not complete them.
(The choice of @@ctest-skipped@@ as a skip-marker is arbitrary and insignificant.)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,871,2021-09-17T00:05:05Z,2021-09-17T11:17:47Z,2021-09-17T11:17:49Z,MERGED,True,7,1,1,https://github.com/rcsanchez97,CDRIVER-4158 make CXX enablement optional,1,[],https://github.com/mongodb/mongo-c-driver/pull/871,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/871,"Evergreen patch build: https://spruce.mongodb.com/version/6143d8c7d6d80a70550288d1/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
The BSON Atomics API fix broke the rpm-package-build task because the build environment does not include a C++ compiler by default.
Apparently, the CMake documentation contains this note regarding the enable_language command:
       The OPTIONAL keyword is a placeholder for future implementation and does not currently work. Instead you can
       use the CheckLanguage module to verify support before enabling.

So, the originally implemented change depends on a dummy feature.  The change in this PR instead takes the approach the suggested in the CMake documentation.","Evergreen patch build: https://spruce.mongodb.com/version/6143d8c7d6d80a70550288d1/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
The BSON Atomics API fix broke the rpm-package-build task because the build environment does not include a C++ compiler by default.
Apparently, the CMake documentation contains this note regarding the enable_language command:
       The OPTIONAL keyword is a placeholder for future implementation and does not currently work. Instead you can
       use the CheckLanguage module to verify support before enabling.

So, the originally implemented change depends on a dummy feature.  The change in this PR instead takes the approach the suggested in the CMake documentation.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,872,2021-09-17T18:50:49Z,2021-09-20T13:30:30Z,2021-09-20T13:30:34Z,MERGED,True,7,1,1,https://github.com/rcsanchez97,CDRIVER-4160 more robust Python selection for integration tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/872,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/872,"This specifically addresses the situation on Ubuntu 16.04 Evergreen
hosts, which have the virtualenv module installed only for Python 3.
Currently, tasks on Ubuntu 16.04 that execute the .evergreen/integration-tests.sh land in the system-failed state on Evergreen.  This change allows the tasks to run to completion.
Evergreen patch build: https://spruce.mongodb.com/version/6144dc983627e00c42d46fa5/tasks","This specifically addresses the situation on Ubuntu 16.04 Evergreen
hosts, which have the virtualenv module installed only for Python 3.
Currently, tasks on Ubuntu 16.04 that execute the .evergreen/integration-tests.sh land in the system-failed state on Evergreen.  This change allows the tasks to run to completion.
Evergreen patch build: https://spruce.mongodb.com/version/6144dc983627e00c42d46fa5/tasks",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,873,2021-09-17T19:40:38Z,2021-09-20T13:31:16Z,2021-09-20T13:31:20Z,MERGED,True,1,1,1,https://github.com/rcsanchez97,dump mock logs if RPM build fails in Evergreen,1,[],https://github.com/mongodb/mongo-c-driver/pull/873,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/873,"Evergreen patch build: https://spruce.mongodb.com/version/6144edef3627e00c42d4e86b/tasks
A failure on the C++ driver waterfall (which uses the same script for building RPMs) is what prompted me to make this change.","Evergreen patch build: https://spruce.mongodb.com/version/6144edef3627e00c42d4e86b/tasks
A failure on the C++ driver waterfall (which uses the same script for building RPMs) is what prompted me to make this change.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,874,2021-09-17T19:48:37Z,2021-09-20T13:30:45Z,2021-09-20T13:30:47Z,MERGED,True,7,1,1,https://github.com/rcsanchez97,CDRIVER-4160 more robust Python selection for integration tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/874,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/874,"This specifically addresses the situation on Ubuntu 16.04 Evergreen
hosts, which have the virtualenv module installed only for Python 3.
Evergreen patch build: https://spruce.mongodb.com/version/6144f0f80ae606570557feae/tasks","This specifically addresses the situation on Ubuntu 16.04 Evergreen
hosts, which have the virtualenv module installed only for Python 3.
Evergreen patch build: https://spruce.mongodb.com/version/6144f0f80ae606570557feae/tasks",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,875,2021-09-17T20:36:23Z,2021-10-01T21:15:16Z,2021-10-01T21:15:16Z,CLOSED,False,504,148,10,https://github.com/eramongodb,Client Side Encryption KMS TLS Tests,9,[],https://github.com/mongodb/mongo-c-driver/pull/875,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/875,This PR is to prompt patch builds on Evergreen; it is not for review.,This PR is to prompt patch builds on Evergreen; it is not for review.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,876,2021-09-19T21:24:32Z,2021-09-20T20:25:46Z,2021-09-20T20:25:47Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,CDRIVER-4035 use runAdminCommand.arguments.readPreference,1,[],https://github.com/mongodb/mongo-c-driver/pull/876,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/876,"Fixes the test failure associated with the rediscover-quickly-after-stepdown SDAM specification test.
The test runner was not passing a read preference. No read preference defaults to a primary read preference. The test operation requires sending to a secondary.","Fixes the test failure associated with the rediscover-quickly-after-stepdown SDAM specification test.
The test runner was not passing a read preference. No read preference defaults to a primary read preference. The test operation requires sending to a secondary.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,877,2021-09-27T21:34:59Z,2021-09-29T14:40:19Z,2021-09-29T14:40:22Z,MERGED,True,140,30,2,https://github.com/eramongodb,CDRIVER-4166 permit NULL platform argument to mongoc_handshake_data_append(),8,[],https://github.com/mongodb/mongo-c-driver/pull/877,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/877,"mongoc_handshake_data_append() special-cases the first write to mongoc_handshake_t::platform to avoid inserting a leading delimiter. This special-case branch does not protect against a NULL value for the platform parameter; other branches use the NULL check within the _append_and_truncate() helper function. However, this bug was likely not detected due to both vsnprintf() (Unix/macOS) and _vsnprintf_s() (Windows), used internally by bson_strdup_printf(), outputting ""(null)"" given a null argument corresponding to a ""%s"" string specifier across libstdc++, libc++, and STL. This is unfortunate but permitted given this condition falls under undefined behavior:
#include <stdio.h>

int main(void) {
  printf(""%s\n"", NULL);
}
(null)

This PR therefore:

makes the optional nature of parameters explicit in mongoc_handshake_data_append() by lifting the NULL check out of _append_and_truncate(),
ensures all branches, including the special-case mentioned above, are protected by a corresponding null check, and
adds a new test /MongoDB/handshake/null_args explicitly asserting for the absense of a ""null"" string in the result given a NULL platform argument.","mongoc_handshake_data_append() special-cases the first write to mongoc_handshake_t::platform to avoid inserting a leading delimiter. This special-case branch does not protect against a NULL value for the platform parameter; other branches use the NULL check within the _append_and_truncate() helper function. However, this bug was likely not detected due to both vsnprintf() (Unix/macOS) and _vsnprintf_s() (Windows), used internally by bson_strdup_printf(), outputting ""(null)"" given a null argument corresponding to a ""%s"" string specifier across libstdc++, libc++, and STL. This is unfortunate but permitted given this condition falls under undefined behavior:
#include <stdio.h>

int main(void) {
  printf(""%s\n"", NULL);
}
(null)

This PR therefore:

makes the optional nature of parameters explicit in mongoc_handshake_data_append() by lifting the NULL check out of _append_and_truncate(),
ensures all branches, including the special-case mentioned above, are protected by a corresponding null check, and
adds a new test /MongoDB/handshake/null_args explicitly asserting for the absense of a ""null"" string in the result given a NULL platform argument.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,878,2021-09-28T20:10:31Z,2021-09-29T16:16:31Z,2022-02-03T14:29:17Z,MERGED,True,17,7,4,https://github.com/kevinAlbs,CDRIVER-4145 do not monitor an invalid topology,2,[],https://github.com/mongodb/mongo-c-driver/pull/878,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/878,"Background
Configuring a client with multiple hosts and the loadBalanced=true option, like mongodb://host1,host2/?loadBalanced=true, is an error. This comes from the Load Balanced specification:

When loadBalanced=true is provided in the connection string, the driver MUST throw an exception in the following cases:

The connection string contains more than one host/port.


A single-threaded mongoc_client_t and multi-threaded mongoc_client_pool_t share behavior in a mongoc_topology_t. The mongoc_topology_t is constructed with a URI in mongoc_topology_new. In the invalid case for single-threaded, a mongoc_client_t does not add servers to the topology description which bypasses single-threaded monitoring. Multi-threaded monitoring still started background threads, triggering the assertion in the call to _mongoc_topology_description_monitor_opening.
Scope of Change

Do not start background monitoring on an invalid topology.
Check for MONGOC_TEST_DNS_LOADBALANCED in test_framework_is_loadbalanced. This determines whether to mock the serviceID.

Testing
There are no new tests introduced in this PR. There are tests for invalid URI configurations with load balancer. This was failing on the Evergreen waterfall on tests that are not part of the subset that runs on GitHub PR patch builds. I reconfigured the patch build attached to this PR to run the test-dns-loadbalanced-openssl task, which now succeeds.","Background
Configuring a client with multiple hosts and the loadBalanced=true option, like mongodb://host1,host2/?loadBalanced=true, is an error. This comes from the Load Balanced specification:

When loadBalanced=true is provided in the connection string, the driver MUST throw an exception in the following cases:

The connection string contains more than one host/port.


A single-threaded mongoc_client_t and multi-threaded mongoc_client_pool_t share behavior in a mongoc_topology_t. The mongoc_topology_t is constructed with a URI in mongoc_topology_new. In the invalid case for single-threaded, a mongoc_client_t does not add servers to the topology description which bypasses single-threaded monitoring. Multi-threaded monitoring still started background threads, triggering the assertion in the call to _mongoc_topology_description_monitor_opening.
Scope of Change

Do not start background monitoring on an invalid topology.
Check for MONGOC_TEST_DNS_LOADBALANCED in test_framework_is_loadbalanced. This determines whether to mock the serviceID.

Testing
There are no new tests introduced in this PR. There are tests for invalid URI configurations with load balancer. This was failing on the Evergreen waterfall on tests that are not part of the subset that runs on GitHub PR patch builds. I reconfigured the patch build attached to this PR to run the test-dns-loadbalanced-openssl task, which now succeeds.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,879,2021-10-04T15:03:32Z,2021-10-12T14:24:50Z,2021-10-12T14:24:55Z,MERGED,True,638,188,13,https://github.com/eramongodb,CDRIVER-3927 add KMS TLS tests for client side encryption,21,[],https://github.com/mongodb/mongo-c-driver/pull/879,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/879,"This PR comes in three parts:

Ensure that all four SSL libraries (OpenSSL, Secure Channel, Secure Transport, LibreSSL) report descriptive errors for each certificate verification failure.

The TLS handshake implementation for OpenSSL and Secure Channel require some modification to report descriptive certificate verification errors. The TLS handshake implementation for Secure Transport and LibreSSL do not require any modification to obtain descriptive error messages.

Add tests that verify correct error (or lack thereof) against mock KMS servers.

Client Side Encryption tests were unconditionally being included by the test suite even when SSL is not enabled, despite CSE requiring SSL to be enabled. Therefore, the relevant source file and test functions are now moved into appropriate conditionals so they are only built and run when MONGOC_ENABLE_SSL is defined by the build system.
Existing unit test helper functions are modified to enable reuse of AWS KMS provider setup helpers for KMS TLS tests separately from other KMS providers. The test function test_kms_tls_cert_valid(), which confirms a valid TLS handshake on valid server certificate, is not required by CDRIVER-3927, but nevertheless useful to confirm proper CA certificate registration in the environment. It explicitly calls mongoc_stream_tls_handshake_block() and relevant setup functions rather mongoc_client_encryption_create_datakey() to avoid unnecessary errors on datakey creation due to running against the mock KMS server.

Enable KMS TLS tests on Evergreen.

Evergreen config scripts are updated to start mock KMS servers in the background only for tasks with Client Side Encryption enabled. The run_tests.sh script also requires an update to ensure proper CA certificate registration on Windows and Red Hat Linux, which use different commands and directories.","This PR comes in three parts:

Ensure that all four SSL libraries (OpenSSL, Secure Channel, Secure Transport, LibreSSL) report descriptive errors for each certificate verification failure.

The TLS handshake implementation for OpenSSL and Secure Channel require some modification to report descriptive certificate verification errors. The TLS handshake implementation for Secure Transport and LibreSSL do not require any modification to obtain descriptive error messages.

Add tests that verify correct error (or lack thereof) against mock KMS servers.

Client Side Encryption tests were unconditionally being included by the test suite even when SSL is not enabled, despite CSE requiring SSL to be enabled. Therefore, the relevant source file and test functions are now moved into appropriate conditionals so they are only built and run when MONGOC_ENABLE_SSL is defined by the build system.
Existing unit test helper functions are modified to enable reuse of AWS KMS provider setup helpers for KMS TLS tests separately from other KMS providers. The test function test_kms_tls_cert_valid(), which confirms a valid TLS handshake on valid server certificate, is not required by CDRIVER-3927, but nevertheless useful to confirm proper CA certificate registration in the environment. It explicitly calls mongoc_stream_tls_handshake_block() and relevant setup functions rather mongoc_client_encryption_create_datakey() to avoid unnecessary errors on datakey creation due to running against the mock KMS server.

Enable KMS TLS tests on Evergreen.

Evergreen config scripts are updated to start mock KMS servers in the background only for tasks with Client Side Encryption enabled. The run_tests.sh script also requires an update to ensure proper CA certificate registration on Windows and Red Hat Linux, which use different commands and directories.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,879,2021-10-04T15:03:32Z,2021-10-12T14:24:50Z,2021-10-12T14:24:55Z,MERGED,True,638,188,13,https://github.com/eramongodb,CDRIVER-3927 add KMS TLS tests for client side encryption,21,[],https://github.com/mongodb/mongo-c-driver/pull/879,https://github.com/eramongodb,2,https://github.com/mongodb/mongo-c-driver/pull/879#issuecomment-940456011,"This PR comes in three parts:

Ensure that all four SSL libraries (OpenSSL, Secure Channel, Secure Transport, LibreSSL) report descriptive errors for each certificate verification failure.

The TLS handshake implementation for OpenSSL and Secure Channel require some modification to report descriptive certificate verification errors. The TLS handshake implementation for Secure Transport and LibreSSL do not require any modification to obtain descriptive error messages.

Add tests that verify correct error (or lack thereof) against mock KMS servers.

Client Side Encryption tests were unconditionally being included by the test suite even when SSL is not enabled, despite CSE requiring SSL to be enabled. Therefore, the relevant source file and test functions are now moved into appropriate conditionals so they are only built and run when MONGOC_ENABLE_SSL is defined by the build system.
Existing unit test helper functions are modified to enable reuse of AWS KMS provider setup helpers for KMS TLS tests separately from other KMS providers. The test function test_kms_tls_cert_valid(), which confirms a valid TLS handshake on valid server certificate, is not required by CDRIVER-3927, but nevertheless useful to confirm proper CA certificate registration in the environment. It explicitly calls mongoc_stream_tls_handshake_block() and relevant setup functions rather mongoc_client_encryption_create_datakey() to avoid unnecessary errors on datakey creation due to running against the mock KMS server.

Enable KMS TLS tests on Evergreen.

Evergreen config scripts are updated to start mock KMS servers in the background only for tasks with Client Side Encryption enabled. The run_tests.sh script also requires an update to ensure proper CA certificate registration on Windows and Red Hat Linux, which use different commands and directories.","@kevinAlbs Per external discussion, this PR will now disable CSE tests on RHEL upon merge. This change will be reverted on resolution of BUILD-14068, which will obviate the need to manually register the CA certificate via Evergreen build scripts. This followup task is recorded as CDRIVER-4183.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,880,2021-10-06T12:32:06Z,2021-10-07T03:25:46Z,2021-10-07T03:25:46Z,CLOSED,False,2,2,1,https://github.com/kevinAlbs,Workaround for BUILD-14027,1,[],https://github.com/mongodb/mongo-c-driver/pull/880,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/880,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,881,2021-10-16T01:08:46Z,2021-11-13T22:20:18Z,2021-11-13T22:20:19Z,MERGED,True,6584,195,32,https://github.com/kevinAlbs,CDRIVER-4206 KMIP support,93,[],https://github.com/mongodb/mongo-c-driver/pull/881,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/881,"Summary
Implements the specification changes of DRIVERS-1353. Please see the comments of DRIVERS-1353 for the linked specification change commits.

Add mongoc_auto_encryption_opts_set_tls_opts and mongoc_client_encryption_opts_set_tls_opts to set custom TLS options on KMS connections.
Update specification tests and prose tests.
Update CSFLE documentation:

Add KMIP KMS provider.
Add missing documentation for Azure and GCP KMS providers (CDRIVER-4087).
Fix documentation for local KMS provider (CDRIVER-4088).



Rejected alternatives
Passing TLS options with mongoc_ssl_opt_t
The specification is not prescriptive in the API for passing TLS options:

Drivers SHOULD provide API that is consistent with configuring TLS options for MongoDB server TLS connections. New API to support the options MUST be independent of the KMS provider to permit future extension. The following is an example:

I considered an alternative API for passing TLS options:
void
mongoc_auto_encryption_opts_set_tls_opts (
   mongoc_auto_encryption_opts_t *opts,
   const char* provider,
   const mongoc_ssl_opt_t *ssl_opt
);

It is more consistent with mongoc_client_set_ssl_opts. But I chose to reject it because:

The mongoc_ssl_opt_t does not permit configuring all TLS options supported in the URI specification (tlsDisableOCSPEndpointCheck, tlsDisableCertificateRevocationCheck).
mongoc_ssl_opt_t includes insecure options (allow_invalid_hostname and weak_cert_validation) which are prohibited in the specification, as well as C specific options ca_dir and crl_file, which are not required and are not supported on all TLS implementations.
SSL is a deprecated term in favor of TLS. E.g. mongoc_uri_get_ssl is deprecated for mongoc_uri_get_tls.

Caveats

Error messages in the ""no client certificate"" cases are empty. Commented inline.","Summary
Implements the specification changes of DRIVERS-1353. Please see the comments of DRIVERS-1353 for the linked specification change commits.

Add mongoc_auto_encryption_opts_set_tls_opts and mongoc_client_encryption_opts_set_tls_opts to set custom TLS options on KMS connections.
Update specification tests and prose tests.
Update CSFLE documentation:

Add KMIP KMS provider.
Add missing documentation for Azure and GCP KMS providers (CDRIVER-4087).
Fix documentation for local KMS provider (CDRIVER-4088).



Rejected alternatives
Passing TLS options with mongoc_ssl_opt_t
The specification is not prescriptive in the API for passing TLS options:

Drivers SHOULD provide API that is consistent with configuring TLS options for MongoDB server TLS connections. New API to support the options MUST be independent of the KMS provider to permit future extension. The following is an example:

I considered an alternative API for passing TLS options:
void
mongoc_auto_encryption_opts_set_tls_opts (
   mongoc_auto_encryption_opts_t *opts,
   const char* provider,
   const mongoc_ssl_opt_t *ssl_opt
);

It is more consistent with mongoc_client_set_ssl_opts. But I chose to reject it because:

The mongoc_ssl_opt_t does not permit configuring all TLS options supported in the URI specification (tlsDisableOCSPEndpointCheck, tlsDisableCertificateRevocationCheck).
mongoc_ssl_opt_t includes insecure options (allow_invalid_hostname and weak_cert_validation) which are prohibited in the specification, as well as C specific options ca_dir and crl_file, which are not required and are not supported on all TLS implementations.
SSL is a deprecated term in favor of TLS. E.g. mongoc_uri_get_ssl is deprecated for mongoc_uri_get_tls.

Caveats

Error messages in the ""no client certificate"" cases are empty. Commented inline.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,882,2021-10-18T20:44:11Z,2021-10-19T21:16:40Z,2021-10-19T21:16:42Z,MERGED,True,84,40,6,https://github.com/eramongodb,CDRIVER-4183 re-enable CSE tests on RHEL,5,[],https://github.com/mongodb/mongo-c-driver/pull/882,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/882,"This is a followup to CDRIVER-3927, which disabled CSE tests on RHEL due to inability to register the CA certificate required by KMS TLS tests on the system. This PR re-enables CSE tests on RHEL and proposes a workaround that selectively disables KMS TLS tests on CA certificate registration failure via the MONGOC_TEST_SKIP_KMS_TLS_TESTS environment variable.
This PR comes in five parts:

Enable skipping of KMS TLS tests via MONGOC_TEST_SKIP_KMS_TLS_TESTS.

This is done via the test_framework_skip_kms_tls_tests() function which checks for the presence and value of the MONGOC_TEST_SKIP_KMS_TLS_TESTS environment variable. This variable is also documented in CONTRIBUTING.md.

Add condition for skipping KMS TLS tests on CA cert register failure.

CA certificate registration routines on Linux now define the MONGOC_TEST_SKIP_KMS_TLS_TESTS environment variable if it detects that the certificate could not be registered. This primarily applies to RHEL variants, which are awaiting resolution of BUILD-14068.

Add CA certificate registration routines for MacOS.

MacOS was overlooked during implementation and testing of CDRIVER-3927.

Add routine to wait for mock KMS server startup completion.

It is possible for tests to run before the mock KMS servers, which are started in the background, have had time to completed their startup procedures. This can lead to false-positive KMS TLS tests failures. The wait_for_kms_server function gives the mock KMS servers up to 60 seconds before aborting the script/task.

Re-enable CSE tests on RHEL variants.

This undoes the changes made in 33c8d31 in variants.py.","This is a followup to CDRIVER-3927, which disabled CSE tests on RHEL due to inability to register the CA certificate required by KMS TLS tests on the system. This PR re-enables CSE tests on RHEL and proposes a workaround that selectively disables KMS TLS tests on CA certificate registration failure via the MONGOC_TEST_SKIP_KMS_TLS_TESTS environment variable.
This PR comes in five parts:

Enable skipping of KMS TLS tests via MONGOC_TEST_SKIP_KMS_TLS_TESTS.

This is done via the test_framework_skip_kms_tls_tests() function which checks for the presence and value of the MONGOC_TEST_SKIP_KMS_TLS_TESTS environment variable. This variable is also documented in CONTRIBUTING.md.

Add condition for skipping KMS TLS tests on CA cert register failure.

CA certificate registration routines on Linux now define the MONGOC_TEST_SKIP_KMS_TLS_TESTS environment variable if it detects that the certificate could not be registered. This primarily applies to RHEL variants, which are awaiting resolution of BUILD-14068.

Add CA certificate registration routines for MacOS.

MacOS was overlooked during implementation and testing of CDRIVER-3927.

Add routine to wait for mock KMS server startup completion.

It is possible for tests to run before the mock KMS servers, which are started in the background, have had time to completed their startup procedures. This can lead to false-positive KMS TLS tests failures. The wait_for_kms_server function gives the mock KMS servers up to 60 seconds before aborting the script/task.

Re-enable CSE tests on RHEL variants.

This undoes the changes made in 33c8d31 in variants.py.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,883,2021-10-29T19:55:25Z,2021-12-03T18:55:46Z,2021-12-03T18:55:46Z,MERGED,True,152,182,26,https://github.com/vector-of-bool,"When running with CTest, don't register all tests.",8,[],https://github.com/mongodb/mongo-c-driver/pull/883,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/883,"Only register tests that match the name of the expression. This logic is
still somewhat fuzzy, but provides significant speedup in the common
case.
This reduces test startup overhead for an individual run from ~100ms
to <10ms.
Before:
~/D/d/m/cmake-build> time ctest -R bson/ -C Debug -j10 -Q
32.97user 4.78system 0:06.57elapsed 574%CPU (0avgtext+0avgdata 62128maxresident)k
0inputs+672outputs (0major+450824minor)pagefaults 0swaps
After:
~/D/d/m/cmake-build> time ctest -R bson/ -C Debug -j10 -Q
1.61user 0.44system 0:00.55elapsed 373%CPU (0avgtext+0avgdata 58548maxresident)k
0inputs+664outputs (0major+186847minor)pagefaults 0swaps","Only register tests that match the name of the expression. This logic is
still somewhat fuzzy, but provides significant speedup in the common
case.
This reduces test startup overhead for an individual run from ~100ms
to <10ms.
Before:
~/D/d/m/cmake-build> time ctest -R bson/ -C Debug -j10 -Q
32.97user 4.78system 0:06.57elapsed 574%CPU (0avgtext+0avgdata 62128maxresident)k
0inputs+672outputs (0major+450824minor)pagefaults 0swaps
After:
~/D/d/m/cmake-build> time ctest -R bson/ -C Debug -j10 -Q
1.61user 0.44system 0:00.55elapsed 373%CPU (0avgtext+0avgdata 58548maxresident)k
0inputs+664outputs (0major+186847minor)pagefaults 0swaps",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,884,2021-10-30T21:11:45Z,2021-11-02T21:03:43Z,2022-02-03T14:29:52Z,MERGED,True,143,1,2,https://github.com/kevinAlbs,CDRIVER-4184 don't emit closed on invalid topology,2,[],https://github.com/mongodb/mongo-c-driver/pull/884,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/884,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,885,2021-11-01T01:41:14Z,2021-11-02T19:08:24Z,2021-11-02T19:08:39Z,MERGED,True,2,2,1,https://github.com/rcsanchez97,CDRIVER-4172 use perf.send for sending performance test results,1,[],https://github.com/mongodb/mongo-c-driver/pull/885,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/885,Evergreen patch build: https://spruce.mongodb.com/version/617e1b02d6d80a6eb492398f/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Evergreen patch build: https://spruce.mongodb.com/version/617e1b02d6d80a6eb492398f/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,886,2021-11-08T00:15:46Z,2021-11-08T21:16:29Z,2022-02-03T14:29:38Z,MERGED,True,305,0,5,https://github.com/kevinAlbs,CDRIVER-4222 add _mongoc_ssl_opts_from_bson,5,[],https://github.com/mongodb/mongo-c-driver/pull/886,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/886,Resolves CDRIVER-4222.,Resolves CDRIVER-4222.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,887,2021-11-08T00:22:34Z,2021-11-08T21:14:19Z,2022-02-03T14:29:03Z,MERGED,True,2,2,1,https://github.com/kevinAlbs,CDRIVER-4205 bump dep of libmongocrypt to 1.3.0,1,[],https://github.com/mongodb/mongo-c-driver/pull/887,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/887,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,888,2021-11-08T15:49:08Z,2021-11-08T21:15:31Z,2022-02-03T14:29:33Z,MERGED,True,192,132,30,https://github.com/kevinAlbs,CDRIVER-4204 / CDRIVER-4152 resync max staleness tests,2,[],https://github.com/mongodb/mongo-c-driver/pull/888,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/888,"Resyncs the max staleness spec tests to commit e2914e7c88ad8578b78f26706bfa8e0737d0fcc0. This covers CDRIVER-4152 and CDRIVER-4204.
Tests were resynced using the following command from the mongo-c-driver-tools repo:
ONLY=MAX_STALENESS ../mongo-c-driver-tools/update-c-spec-tests.sh","Resyncs the max staleness spec tests to commit e2914e7c88ad8578b78f26706bfa8e0737d0fcc0. This covers CDRIVER-4152 and CDRIVER-4204.
Tests were resynced using the following command from the mongo-c-driver-tools repo:
ONLY=MAX_STALENESS ../mongo-c-driver-tools/update-c-spec-tests.sh",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,889,2021-11-08T20:49:32Z,2021-11-11T20:37:30Z,2021-11-11T20:38:03Z,MERGED,True,115,36,3,https://github.com/rcsanchez97,"CDRIVER-4215 use legacy atomic built-ins on gcc (>= 4.1, < 4.9)",3,[],https://github.com/mongodb/mongo-c-driver/pull/889,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/889,"This work is not yet complete.  However, given the scope of the change just in getting the compile to succeed on RHEL 6, it seemed prudent to push my first set of changes as a WIP PR.
Initial patch build: https://spruce.mongodb.com/version/61874ce932f4177a1ad61efb/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
@vector-of-bool In the patch build, you will want to focus on the compile task in the rhel62 variant.  The test tasks are still failing, but for unrelated reasons.  At this point I am specifically interested to know if you find any errors or deficiencies in my initial changes.
After I get the compile working on RHEL 7 I will take a look at all the warnings that are still being produced.","This work is not yet complete.  However, given the scope of the change just in getting the compile to succeed on RHEL 6, it seemed prudent to push my first set of changes as a WIP PR.
Initial patch build: https://spruce.mongodb.com/version/61874ce932f4177a1ad61efb/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
@vector-of-bool In the patch build, you will want to focus on the compile task in the rhel62 variant.  The test tasks are still failing, but for unrelated reasons.  At this point I am specifically interested to know if you find any errors or deficiencies in my initial changes.
After I get the compile working on RHEL 7 I will take a look at all the warnings that are still being produced.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,889,2021-11-08T20:49:32Z,2021-11-11T20:37:30Z,2021-11-11T20:38:03Z,MERGED,True,115,36,3,https://github.com/rcsanchez97,"CDRIVER-4215 use legacy atomic built-ins on gcc (>= 4.1, < 4.9)",3,[],https://github.com/mongodb/mongo-c-driver/pull/889,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/889#issuecomment-966487998,"This work is not yet complete.  However, given the scope of the change just in getting the compile to succeed on RHEL 6, it seemed prudent to push my first set of changes as a WIP PR.
Initial patch build: https://spruce.mongodb.com/version/61874ce932f4177a1ad61efb/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
@vector-of-bool In the patch build, you will want to focus on the compile task in the rhel62 variant.  The test tasks are still failing, but for unrelated reasons.  At this point I am specifically interested to know if you find any errors or deficiencies in my initial changes.
After I get the compile working on RHEL 7 I will take a look at all the warnings that are still being produced.",Full patch build with these changes: https://spruce.mongodb.com/version/618d4fc82fbabe51bb1beb05/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,889,2021-11-08T20:49:32Z,2021-11-11T20:37:30Z,2021-11-11T20:38:03Z,MERGED,True,115,36,3,https://github.com/rcsanchez97,"CDRIVER-4215 use legacy atomic built-ins on gcc (>= 4.1, < 4.9)",3,[],https://github.com/mongodb/mongo-c-driver/pull/889,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/889#issuecomment-966491314,"This work is not yet complete.  However, given the scope of the change just in getting the compile to succeed on RHEL 6, it seemed prudent to push my first set of changes as a WIP PR.
Initial patch build: https://spruce.mongodb.com/version/61874ce932f4177a1ad61efb/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
@vector-of-bool In the patch build, you will want to focus on the compile task in the rhel62 variant.  The test tasks are still failing, but for unrelated reasons.  At this point I am specifically interested to know if you find any errors or deficiencies in my initial changes.
After I get the compile working on RHEL 7 I will take a look at all the warnings that are still being produced.","The last changes that I pushed constitute two things:

a tweak to .evergreen/run-tests.sh to ensure that registering the CA certificate succeeds
the atomics changes are now confined to bson-atomics.h

The full patch build that I submitted shows that on RHEL 6 and 7 the compile tasks and now some of the tests pass.  There are still numerous test tasks that are failing, but those failures are unrelated.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,889,2021-11-08T20:49:32Z,2021-11-11T20:37:30Z,2021-11-11T20:38:03Z,MERGED,True,115,36,3,https://github.com/rcsanchez97,"CDRIVER-4215 use legacy atomic built-ins on gcc (>= 4.1, < 4.9)",3,[],https://github.com/mongodb/mongo-c-driver/pull/889,https://github.com/rcsanchez97,4,https://github.com/mongodb/mongo-c-driver/pull/889#issuecomment-966586985,"This work is not yet complete.  However, given the scope of the change just in getting the compile to succeed on RHEL 6, it seemed prudent to push my first set of changes as a WIP PR.
Initial patch build: https://spruce.mongodb.com/version/61874ce932f4177a1ad61efb/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
@vector-of-bool In the patch build, you will want to focus on the compile task in the rhel62 variant.  The test tasks are still failing, but for unrelated reasons.  At this point I am specifically interested to know if you find any errors or deficiencies in my initial changes.
After I get the compile working on RHEL 7 I will take a look at all the warnings that are still being produced.",@vector-of-bool Does that comment work for you?,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,889,2021-11-08T20:49:32Z,2021-11-11T20:37:30Z,2021-11-11T20:38:03Z,MERGED,True,115,36,3,https://github.com/rcsanchez97,"CDRIVER-4215 use legacy atomic built-ins on gcc (>= 4.1, < 4.9)",3,[],https://github.com/mongodb/mongo-c-driver/pull/889,https://github.com/vector-of-bool,5,https://github.com/mongodb/mongo-c-driver/pull/889#issuecomment-966599434,"This work is not yet complete.  However, given the scope of the change just in getting the compile to succeed on RHEL 6, it seemed prudent to push my first set of changes as a WIP PR.
Initial patch build: https://spruce.mongodb.com/version/61874ce932f4177a1ad61efb/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
@vector-of-bool In the patch build, you will want to focus on the compile task in the rhel62 variant.  The test tasks are still failing, but for unrelated reasons.  At this point I am specifically interested to know if you find any errors or deficiencies in my initial changes.
After I get the compile working on RHEL 7 I will take a look at all the warnings that are still being produced.","Yes, that comment is helpful",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,890,2021-11-08T21:31:12Z,2021-12-03T01:09:02Z,2021-12-03T01:09:02Z,MERGED,True,141,57,27,https://github.com/vector-of-bool,Set Certain Warnings as Errors Unconditionally,20,[],https://github.com/mongodb/mongo-c-driver/pull/890,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/890,"Some constructs that are allowed in C are well-established to be virtually always erroneous, e.g. calling a function that hasn't been declared, implicitly binding a pointer to a different type, and implicitly converting an integral to a pointer. Implicitly converting a pointer-to-const to a pointer-to-mutable is not always an error, but is problematic enough that an explicit cast should be required.
Many of these errors will be caught at a later time, but only due to test failures, linker failures, or on a build on CI that enables some warnings-as-errors (currently never on Windows).
This change instead makes such constructs always-errors, thus adding a barrier to any changes that produce such errors that might otherwise have been missed. The selected warnings are well-established and detected by all modern compilers, and are very unlikely to appear anew do to compiler upgrades.
Additional warnings that are not so definitely-wrong (etc. sign conversion/compare, unused variables) are not addressed by these changes.","Some constructs that are allowed in C are well-established to be virtually always erroneous, e.g. calling a function that hasn't been declared, implicitly binding a pointer to a different type, and implicitly converting an integral to a pointer. Implicitly converting a pointer-to-const to a pointer-to-mutable is not always an error, but is problematic enough that an explicit cast should be required.
Many of these errors will be caught at a later time, but only due to test failures, linker failures, or on a build on CI that enables some warnings-as-errors (currently never on Windows).
This change instead makes such constructs always-errors, thus adding a barrier to any changes that produce such errors that might otherwise have been missed. The selected warnings are well-established and detected by all modern compilers, and are very unlikely to appear anew do to compiler upgrades.
Additional warnings that are not so definitely-wrong (etc. sign conversion/compare, unused variables) are not addressed by these changes.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,890,2021-11-08T21:31:12Z,2021-12-03T01:09:02Z,2021-12-03T01:09:02Z,MERGED,True,141,57,27,https://github.com/vector-of-bool,Set Certain Warnings as Errors Unconditionally,20,[],https://github.com/mongodb/mongo-c-driver/pull/890,https://github.com/rcsanchez97,2,https://github.com/mongodb/mongo-c-driver/pull/890#issuecomment-966610596,"Some constructs that are allowed in C are well-established to be virtually always erroneous, e.g. calling a function that hasn't been declared, implicitly binding a pointer to a different type, and implicitly converting an integral to a pointer. Implicitly converting a pointer-to-const to a pointer-to-mutable is not always an error, but is problematic enough that an explicit cast should be required.
Many of these errors will be caught at a later time, but only due to test failures, linker failures, or on a build on CI that enables some warnings-as-errors (currently never on Windows).
This change instead makes such constructs always-errors, thus adding a barrier to any changes that produce such errors that might otherwise have been missed. The selected warnings are well-established and detected by all modern compilers, and are very unlikely to appear anew do to compiler upgrades.
Additional warnings that are not so definitely-wrong (etc. sign conversion/compare, unused variables) are not addressed by these changes.","@vector-of-bool Now that #889 is merged, you might consider rebasing these changes and starting a new patch build.  It will give us useful information about the effect of these changes on the build for older platforms.",True,{'THUMBS_UP': ['https://github.com/vector-of-bool']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,891,2021-11-08T22:36:48Z,2021-11-09T00:26:24Z,2021-11-09T00:26:24Z,MERGED,True,2,2,1,https://github.com/chardan,Bump WIRE_VERSION_MAX to 14,2,[],https://github.com/mongodb/mongo-c-driver/pull/891,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/891,"Updates the wire protocol max version to 14.
Added comments to help when searching for maxWireVersion.
See: https://jira.mongodb.org/browse/CDRIVER-4165
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","Updates the wire protocol max version to 14.
Added comments to help when searching for maxWireVersion.
See: https://jira.mongodb.org/browse/CDRIVER-4165
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,892,2021-11-10T19:02:59Z,2021-11-11T19:12:07Z,2021-11-11T19:12:07Z,MERGED,True,12,9,4,https://github.com/vector-of-bool,Fix Win32 Warnings,3,[],https://github.com/mongodb/mongo-c-driver/pull/892,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/892,"There are some warnings that appear in code, including one major incompatible-pointer-type that only appears on Windows. This also fixes an incompatible pointer type used in bson-atomic.c appearing in some configuration of MinGW on Windows (CDRIVER-4221).","There are some warnings that appear in code, including one major incompatible-pointer-type that only appears on Windows. This also fixes an incompatible pointer type used in bson-atomic.c appearing in some configuration of MinGW on Windows (CDRIVER-4221).",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,893,2021-11-11T22:50:10Z,2021-11-12T14:56:06Z,2021-11-12T14:56:20Z,MERGED,True,3,3,1,https://github.com/rcsanchez97,use legacy atomics on gcc < 5,1,[],https://github.com/mongodb/mongo-c-driver/pull/893,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/893,"So, it turns out that we need to use legacy atomics on all gcc 4.x versions.  The original change in #889 still results in build failures on Debian 8 (gcc 4.9).  It seems that using the new __atomic built-ins requires setting -std=c11.  It is not clear that we want to require that for legacy platforms, so expanding the check in this way seems like the better way.
Full patch build (filtered down to the Debian 8 variant): https://spruce.mongodb.com/version/618d9bcd0305b93ba3051410/tasks?page=0&variant=%5Egcc49%24","So, it turns out that we need to use legacy atomics on all gcc 4.x versions.  The original change in #889 still results in build failures on Debian 8 (gcc 4.9).  It seems that using the new __atomic built-ins requires setting -std=c11.  It is not clear that we want to require that for legacy platforms, so expanding the check in this way seems like the better way.
Full patch build (filtered down to the Debian 8 variant): https://spruce.mongodb.com/version/618d9bcd0305b93ba3051410/tasks?page=0&variant=%5Egcc49%24",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,894,2021-11-12T11:18:30Z,2022-01-05T16:38:10Z,2022-01-05T16:38:10Z,MERGED,True,19,3,3,https://github.com/devnexen,CDRIVER-4241 SHM counter on mac m1 arm64 implementation.,5,[],https://github.com/mongodb/mongo-c-driver/pull/894,https://github.com/devnexen,1,https://github.com/mongodb/mongo-c-driver/pull/894,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,894,2021-11-12T11:18:30Z,2022-01-05T16:38:10Z,2022-01-05T16:38:10Z,MERGED,True,19,3,3,https://github.com/devnexen,CDRIVER-4241 SHM counter on mac m1 arm64 implementation.,5,[],https://github.com/mongodb/mongo-c-driver/pull/894,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/894#issuecomment-1005885640,,Thanks again for the contribution @devnexen. This PR was rebased atop CDRIVER-4240 to test building on a macOS m1 host. Merging.,True,{'THUMBS_UP': ['https://github.com/devnexen']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,895,2021-11-12T19:23:22Z,2021-11-17T07:30:52Z,2021-11-17T07:30:52Z,MERGED,True,65,41,5,https://github.com/vector-of-bool,"CDRIVER-4227 Add a shared_mutex, and use it when locking in shared_ptr atomic operations",6,[],https://github.com/mongodb/mongo-c-driver/pull/895,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/895,"At very high thread counts, locking on the shared_ptr atomic mutex begins to dominate. Using a shared_mutex significantly reduces the time spent in locking code and increases the performance under high contention. It could be improved further with a smarter use of the shared_ptr, but this is a significant basic improvement.","At very high thread counts, locking on the shared_ptr atomic mutex begins to dominate. Using a shared_mutex significantly reduces the time spent in locking code and increases the performance under high contention. It could be improved further with a smarter use of the shared_ptr, but this is a significant basic improvement.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,896,2021-11-16T17:56:03Z,2021-11-29T22:51:10Z,2021-11-29T22:51:18Z,CLOSED,False,227,122,23,https://github.com/chardan,CDRIVER-3992 - deprecate legacy wire protocols,5,[],https://github.com/mongodb/mongo-c-driver/pull/896,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/896,"Adds support for detecting if a specific server version has been requested;
Uses OP_MSG when a version has been specified.
https://jira.mongodb.org/browse/CDRIVER-3992
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","Adds support for detecting if a specific server version has been requested;
Uses OP_MSG when a version has been specified.
https://jira.mongodb.org/browse/CDRIVER-3992
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,896,2021-11-16T17:56:03Z,2021-11-29T22:51:10Z,2021-11-29T22:51:18Z,CLOSED,False,227,122,23,https://github.com/chardan,CDRIVER-3992 - deprecate legacy wire protocols,5,[],https://github.com/mongodb/mongo-c-driver/pull/896,https://github.com/chardan,2,https://github.com/mongodb/mongo-c-driver/pull/896#issuecomment-982094557,"Adds support for detecting if a specific server version has been requested;
Uses OP_MSG when a version has been specified.
https://jira.mongodb.org/browse/CDRIVER-3992
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com",Superceded by: #901,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,897,2021-11-16T20:21:57Z,2021-11-17T13:45:48Z,2022-02-03T14:29:56Z,MERGED,True,286,14,2,https://github.com/kevinAlbs,CDRIVER-4229 emulate int32 and int atomic operations on zSeries,15,[],https://github.com/mongodb/mongo-c-driver/pull/897,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/897,"Summary
Emulate int32 and int atomic operations on zSeries to resolve CDRIVER-4229.
This is a full patch build with the fix: https://spruce.mongodb.com/version/619412e6e3c33129bc14e09a
Background & Motivation
This patch build tested the integral types individually and narrowed the test failure to the int32 and int atomic types.
I do not know why the legacy atomic intrinsics do not function correctly on zSeries. But this seemed like a straightforward fix to unblock the 1.20.0 release.","Summary
Emulate int32 and int atomic operations on zSeries to resolve CDRIVER-4229.
This is a full patch build with the fix: https://spruce.mongodb.com/version/619412e6e3c33129bc14e09a
Background & Motivation
This patch build tested the integral types individually and narrowed the test failure to the int32 and int atomic types.
I do not know why the legacy atomic intrinsics do not function correctly on zSeries. But this seemed like a straightforward fix to unblock the 1.20.0 release.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,897,2021-11-16T20:21:57Z,2021-11-17T13:45:48Z,2022-02-03T14:29:56Z,MERGED,True,286,14,2,https://github.com/kevinAlbs,CDRIVER-4229 emulate int32 and int atomic operations on zSeries,15,[],https://github.com/mongodb/mongo-c-driver/pull/897,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/897#issuecomment-970997034,"Summary
Emulate int32 and int atomic operations on zSeries to resolve CDRIVER-4229.
This is a full patch build with the fix: https://spruce.mongodb.com/version/619412e6e3c33129bc14e09a
Background & Motivation
This patch build tested the integral types individually and narrowed the test failure to the int32 and int atomic types.
I do not know why the legacy atomic intrinsics do not function correctly on zSeries. But this seemed like a straightforward fix to unblock the 1.20.0 release.","Ouch. Good to get a fix. Do we have a zSeries target in CI?

Yes. The zSeries variant is named zseries-rhel72 in .evergreen/config.yml. It is not part of the subset of tasks that runs on GitHub PRs. Though I am thinking it might be useful to have compile tasks on all variants run as part of the subset of tasks that are run from GitHub PRs.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,898,2021-11-16T22:01:11Z,2021-11-30T19:56:20Z,2021-11-30T19:56:23Z,MERGED,True,1567,167,35,https://github.com/eramongodb,CDRIVER-4097 Implement srvMaxHosts for initial DNS seedlist and SRV polling,27,[],https://github.com/mongodb/mongo-c-driver/pull/898,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/898,"This PR implements CDRIVER-4097, which introduces the srvMaxHosts URI option. This option limits number of hosts during initial DNS seedlist discovery and SRV polling for mongos discovery.
Any changes involving the srvServiceName URI option were deliberately skipped; this feature should be addressed separately as CDRIVER-4086.
This PR comes in three major parts:

URI Options

First, a bug in the validation of load balancer URI options had to be addressed to permit valid execution of srvMaxHosts-related tests.
Then, the necessary URI option parsing features were implemented and corresponding spec tests added to the uri-options directory. Note that some test cases had to be added to the warning filters as CDRIVER-3167 has not yet been addressed.

Initial DNS Seedlist Discovery

There were two drive-by improvements during this step. The first was the addition of a const-qualifier to a read-only host list function. The second was fixing an infinite loop bug in dump_hosts() (only triggered by certain test failures) due to an incorrect induction step.
As the Initial Seedlist Discovery Spec requires random shuffling and selection of hosts, I took the opportunity to introduce a set of uniform random integer functions. These are _mongoc_rand_uint32_t, _mongoc_rand_uint64_t, and _mongoc_rand_size_t respectively, each returning a random integer in the range [min, max] with uniform distribution. The algorithms used are as described in ""Fast Random Integer Generation in an Interval"" by Daniel Lemire. The ""nearly divisionless"" algorithm proposed by the paper is used for 32-bit integers. The ""Java algorithm"" is used for 64-bit integers as the nearly divisionless algorithm requires using 128-bit integers during computation; I did not want to attempt to introduce __int128 into the C driver due to consistent cross-platform compatibility being effectively non-existent.
With the new random number generators, implementing the filtering of initial DNS seedlist hosts was relatively straightforward.
The new spec tests for Initial Seedlist Discovery also required some modification to test code to accomodate the new numHosts parameter. Evergreen/CI scripts did not have to be updated to accomodate the new sharded spec tests, as the load-balancer spec test setup also happens to satisfy the conditions required to correctly run sharded spec tests (a mongos server on ports 27017 and 27018). These new sharded spec tests can therefore be run alongside existing load-balancer tests on Evergreen.

SRV Polling for mongos Discovery

There was some awkward math required to preserve the correct order of operations, where the addition of new valid hosts (within the limit as described by srvMaxHosts) must come before removal of missing hosts to avoid generating a misleading warning. If the warning can be disabled or removed, the implementation of mongoc_topology_description_reconcile could be made simpler.
Finally, prose tests 10, 11, and 12 were added according to the SRV Polling Tests Spec. However, due to the verbosity and repetition of the existing patterns used by prose tests, I took the opportunity to perform some dependency inversion (or is it ""Inversion of Control""? Either way, some kind of ""inversion"" is involved) to simplify the implementation of the prose test code. To better understand the intent of this refactor, I recommend comparing the state of a single prose test before and after the change in separate views, rather than side-by-side or inline as a diff.
The SRV Polling prose tests have been given the test_dns_check_srv_polling() skip condition such that they are only run if the MONGOC_TEST_DNS_SRV_POLLING environment variable is set to on. This is due to current Evergreen scripts not yet being configured to create the required sharded cluster configuration with mongos instances running on 4 ports. Supporting this will take additional work as described by CDRIVER-4230. Note, this means that the Evergreen tasks being run for this PR do not currently evaluate the SRV Polling prose tests, unliked the sharded tests for Initial DNS Seedlist Discovery, although they have been verified locally as passing given the correct sharded cluster configuration.","This PR implements CDRIVER-4097, which introduces the srvMaxHosts URI option. This option limits number of hosts during initial DNS seedlist discovery and SRV polling for mongos discovery.
Any changes involving the srvServiceName URI option were deliberately skipped; this feature should be addressed separately as CDRIVER-4086.
This PR comes in three major parts:

URI Options

First, a bug in the validation of load balancer URI options had to be addressed to permit valid execution of srvMaxHosts-related tests.
Then, the necessary URI option parsing features were implemented and corresponding spec tests added to the uri-options directory. Note that some test cases had to be added to the warning filters as CDRIVER-3167 has not yet been addressed.

Initial DNS Seedlist Discovery

There were two drive-by improvements during this step. The first was the addition of a const-qualifier to a read-only host list function. The second was fixing an infinite loop bug in dump_hosts() (only triggered by certain test failures) due to an incorrect induction step.
As the Initial Seedlist Discovery Spec requires random shuffling and selection of hosts, I took the opportunity to introduce a set of uniform random integer functions. These are _mongoc_rand_uint32_t, _mongoc_rand_uint64_t, and _mongoc_rand_size_t respectively, each returning a random integer in the range [min, max] with uniform distribution. The algorithms used are as described in ""Fast Random Integer Generation in an Interval"" by Daniel Lemire. The ""nearly divisionless"" algorithm proposed by the paper is used for 32-bit integers. The ""Java algorithm"" is used for 64-bit integers as the nearly divisionless algorithm requires using 128-bit integers during computation; I did not want to attempt to introduce __int128 into the C driver due to consistent cross-platform compatibility being effectively non-existent.
With the new random number generators, implementing the filtering of initial DNS seedlist hosts was relatively straightforward.
The new spec tests for Initial Seedlist Discovery also required some modification to test code to accomodate the new numHosts parameter. Evergreen/CI scripts did not have to be updated to accomodate the new sharded spec tests, as the load-balancer spec test setup also happens to satisfy the conditions required to correctly run sharded spec tests (a mongos server on ports 27017 and 27018). These new sharded spec tests can therefore be run alongside existing load-balancer tests on Evergreen.

SRV Polling for mongos Discovery

There was some awkward math required to preserve the correct order of operations, where the addition of new valid hosts (within the limit as described by srvMaxHosts) must come before removal of missing hosts to avoid generating a misleading warning. If the warning can be disabled or removed, the implementation of mongoc_topology_description_reconcile could be made simpler.
Finally, prose tests 10, 11, and 12 were added according to the SRV Polling Tests Spec. However, due to the verbosity and repetition of the existing patterns used by prose tests, I took the opportunity to perform some dependency inversion (or is it ""Inversion of Control""? Either way, some kind of ""inversion"" is involved) to simplify the implementation of the prose test code. To better understand the intent of this refactor, I recommend comparing the state of a single prose test before and after the change in separate views, rather than side-by-side or inline as a diff.
The SRV Polling prose tests have been given the test_dns_check_srv_polling() skip condition such that they are only run if the MONGOC_TEST_DNS_SRV_POLLING environment variable is set to on. This is due to current Evergreen scripts not yet being configured to create the required sharded cluster configuration with mongos instances running on 4 ports. Supporting this will take additional work as described by CDRIVER-4230. Note, this means that the Evergreen tasks being run for this PR do not currently evaluate the SRV Polling prose tests, unliked the sharded tests for Initial DNS Seedlist Discovery, although they have been verified locally as passing given the correct sharded cluster configuration.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,899,2021-11-18T14:56:20Z,2021-11-18T16:39:10Z,2022-02-03T14:28:37Z,MERGED,True,53,0,2,https://github.com/kevinAlbs,Update NEWS for 1.20.0 and 1.19.2,6,[],https://github.com/mongodb/mongo-c-driver/pull/899,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/899,"Summary

Copy NEWS and src/libbson/NEWS changes from 1.19.2.
Copy NEWS and src/libbson/NEWS changes from 1.20.0.
Note atomics in src/libbson/NEWS and add contributors list.

After this is merged the 1.20.0 community announcement and GitHub release notes will be updated with the new release notes.","Summary

Copy NEWS and src/libbson/NEWS changes from 1.19.2.
Copy NEWS and src/libbson/NEWS changes from 1.20.0.
Note atomics in src/libbson/NEWS and add contributors list.

After this is merged the 1.20.0 community announcement and GitHub release notes will be updated with the new release notes.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,900,2021-11-19T00:38:36Z,2021-11-19T14:04:57Z,2021-11-19T14:05:02Z,MERGED,True,6,0,1,https://github.com/rcsanchez97,Debian 1.20.0,2,[],https://github.com/mongodb/mongo-c-driver/pull/900,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/900,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,901,2021-11-29T17:59:01Z,2022-01-25T00:40:38Z,2022-01-25T00:40:39Z,CLOSED,False,280,19,10,https://github.com/chardan,CDRIVER 3992 deprecate legacy wire protocols,12,[],https://github.com/mongodb/mongo-c-driver/pull/901,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/901,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,901,2021-11-29T17:59:01Z,2022-01-25T00:40:38Z,2022-01-25T00:40:39Z,CLOSED,False,280,19,10,https://github.com/chardan,CDRIVER 3992 deprecate legacy wire protocols,12,[],https://github.com/mongodb/mongo-c-driver/pull/901,https://github.com/chardan,2,https://github.com/mongodb/mongo-c-driver/pull/901#issuecomment-1020692218,,Superceeded-by: #930,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,902,2021-11-29T19:38:06Z,2021-12-01T15:28:15Z,2021-12-01T15:28:18Z,MERGED,True,40,57,3,https://github.com/eramongodb,CDRIVER-4225 Explicitly set CA and cert file for use by KMS TLS connections,1,[],https://github.com/mongodb/mongo-c-driver/pull/902,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/902,"Thanks to CDRIVER-4206, the KMS TLS connections can now use user-provided CA and certificate files rather than depending on system certificate registration. This PR removes system cert registration and associated test skip condition checks, replacing them with use of the new tls_opts fields whose values are set by the MONGOC_TEST_CSFLE_TLS_CA_FILE and MONGOC_TEST_CSFLE_TLS_CERTIFICATE_KEY_FILE environment variables.","Thanks to CDRIVER-4206, the KMS TLS connections can now use user-provided CA and certificate files rather than depending on system certificate registration. This PR removes system cert registration and associated test skip condition checks, replacing them with use of the new tls_opts fields whose values are set by the MONGOC_TEST_CSFLE_TLS_CA_FILE and MONGOC_TEST_CSFLE_TLS_CERTIFICATE_KEY_FILE environment variables.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,903,2021-11-30T18:15:36Z,2021-12-01T15:27:53Z,2021-12-01T15:27:56Z,MERGED,True,3,3,3,https://github.com/eramongodb,CDRIVER-4216 Replace 'git://' with 'https://' for drivers-evergreen-tools repo,1,[],https://github.com/mongodb/mongo-c-driver/pull/903,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/903,"A straightforward update that substitutes git:// with https://, as Github is planning to disable support for the unencrypted Git protocol. The only instances of this protocol still being used in the C driver appears to be when cloning the drivers-evergreen-tools repository for Evergreen tasks.","A straightforward update that substitutes git:// with https://, as Github is planning to disable support for the unencrypted Git protocol. The only instances of this protocol still being used in the C driver appears to be when cloning the drivers-evergreen-tools repository for Evergreen tasks.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,904,2021-11-30T20:06:26Z,2022-01-25T22:26:51Z,2022-01-25T22:26:51Z,MERGED,True,1291,233,38,https://github.com/vector-of-bool,CDRIVER-3893: Conditionally support $merge and $out execution on secondaries,42,[],https://github.com/mongodb/mongo-c-driver/pull/904,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/904,"This changeset is for CDRIVER-3893, which allows sending of aggregate commands to secondary servers, even if those aggregate operations contain writing stages ($out and  $merge).
TODO: This changeset works fully with recent servers, but when server selection falls back to the prior behavior of selecting a primary regardless of readPreference, the spec mandates that we must not send $readPreference with the aggregate command. This is surprisingly difficult given the current architecture of the code as these actions do not communicate with each other. Done.","This changeset is for CDRIVER-3893, which allows sending of aggregate commands to secondary servers, even if those aggregate operations contain writing stages ($out and  $merge).
TODO: This changeset works fully with recent servers, but when server selection falls back to the prior behavior of selecting a primary regardless of readPreference, the spec mandates that we must not send $readPreference with the aggregate command. This is surprisingly difficult given the current architecture of the code as these actions do not communicate with each other. Done.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,904,2021-11-30T20:06:26Z,2022-01-25T22:26:51Z,2022-01-25T22:26:51Z,MERGED,True,1291,233,38,https://github.com/vector-of-bool,CDRIVER-3893: Conditionally support $merge and $out execution on secondaries,42,[],https://github.com/mongodb/mongo-c-driver/pull/904,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/904#issuecomment-983975424,"This changeset is for CDRIVER-3893, which allows sending of aggregate commands to secondary servers, even if those aggregate operations contain writing stages ($out and  $merge).
TODO: This changeset works fully with recent servers, but when server selection falls back to the prior behavior of selecting a primary regardless of readPreference, the spec mandates that we must not send $readPreference with the aggregate command. This is surprisingly difficult given the current architecture of the code as these actions do not communicate with each other. Done.","I forgot that I had started from that branch in this one. I thought I would be able to get it merged sooner, but the holidays and unexpected compiler errors have held that one back. It will definitely be consolidated before this one will be fully ready.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,904,2021-11-30T20:06:26Z,2022-01-25T22:26:51Z,2022-01-25T22:26:51Z,MERGED,True,1291,233,38,https://github.com/vector-of-bool,CDRIVER-3893: Conditionally support $merge and $out execution on secondaries,42,[],https://github.com/mongodb/mongo-c-driver/pull/904,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/904#issuecomment-1009225616,"This changeset is for CDRIVER-3893, which allows sending of aggregate commands to secondary servers, even if those aggregate operations contain writing stages ($out and  $merge).
TODO: This changeset works fully with recent servers, but when server selection falls back to the prior behavior of selecting a primary regardless of readPreference, the spec mandates that we must not send $readPreference with the aggregate command. This is surprisingly difficult given the current architecture of the code as these actions do not communicate with each other. Done.","I don't have any major input to provide on this PR, so I'd like to remove myself and defer to Ezra and Kevin if that's OK. Let me know if there are any spec-related issues you'd still like me to provide feedback on, though.",True,{'THUMBS_UP': ['https://github.com/vector-of-bool']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,905,2021-12-03T02:38:55Z,2021-12-03T18:54:02Z,2021-12-03T18:54:02Z,MERGED,True,2,0,1,https://github.com/vector-of-bool,Fix warnings following warnings-as-error merge,1,[],https://github.com/mongodb/mongo-c-driver/pull/905,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/905,"The insidious problem of ""merge of well-tested-changeset into well-tested-base-branch produces never-before-seen and untested code"" has bitten master following the merge of #890. The fixes are simple, fortunately.","The insidious problem of ""merge of well-tested-changeset into well-tested-base-branch produces never-before-seen and untested code"" has bitten master following the merge of #890. The fixes are simple, fortunately.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,906,2021-12-03T19:57:25Z,2021-12-03T20:49:02Z,2021-12-03T20:49:13Z,MERGED,True,11,4,2,https://github.com/rcsanchez97,fix build of bundled zlib,1,[],https://github.com/mongodb/mongo-c-driver/pull/906,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/906,"Ensure that the target for the bundled zlib is only built when the
bundled target is needed.  Also ensure that the build always correctly
finds the necessary headers.  For instance, even if there is a zlib
installed on the system and the build specifies the bundled zlib, ensure
that bundled headers are located before the system headers.","Ensure that the target for the bundled zlib is only built when the
bundled target is needed.  Also ensure that the build always correctly
finds the necessary headers.  For instance, even if there is a zlib
installed on the system and the build specifies the bundled zlib, ensure
that bundled headers are located before the system headers.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,907,2021-12-03T22:31:06Z,2021-12-06T13:59:30Z,2021-12-06T13:59:35Z,MERGED,True,1,1,1,https://github.com/rcsanchez97,document undefined behavior related to authMechanismProperties,1,[],https://github.com/mongodb/mongo-c-driver/pull/907,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/907,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,908,2021-12-08T15:23:50Z,2021-12-12T22:20:30Z,2021-12-12T22:20:33Z,MERGED,True,23,29,2,https://github.com/rcsanchez97,sync RPM spec file for 1.20.0 release,1,[],https://github.com/mongodb/mongo-c-driver/pull/908,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/908,Evergreen patch build: https://spruce.mongodb.com/version/61b0cbcc3e8e862ec357e6e5/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Evergreen patch build: https://spruce.mongodb.com/version/61b0cbcc3e8e862ec357e6e5/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,909,2021-12-08T16:47:25Z,2021-12-12T22:20:18Z,2021-12-12T22:20:21Z,MERGED,True,4,11,1,https://github.com/rcsanchez97,CDRIVER-4040 remove duplicate YAML keys,1,[],https://github.com/mongodb/mongo-c-driver/pull/909,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/909,Evergreen patch build (of perf project): https://spruce.mongodb.com/version/61b0d35761837d22c69b6d29/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Evergreen patch build (of perf project): https://spruce.mongodb.com/version/61b0d35761837d22c69b6d29/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,910,2021-12-11T17:18:57Z,2021-12-13T21:22:54Z,2022-02-03T14:28:46Z,MERGED,True,11,1,1,https://github.com/kevinAlbs,CDRIVER-4233 fix implicit decl of arc4random and strlcpy on macOS,2,[],https://github.com/mongodb/mongo-c-driver/pull/910,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/910,"Background
macOS does not define arc4random and strlcpy when _XOPEN_SOURCE=700 is defined.
CDRIVER-4233 includes a further analysis of the root cause.
#895 (comment) includes motivation for applying XOPEN_SOURCE=700.
Summary of changes

Apply -D_XOPEN_SOURCE=700 to the CHECK_SYMBOL_EXISTS for strlcpy.
Define _DARWIN_C_SOURCE=1 to enable arc4random and strlcpy.

Fixes the link-with-cmake-mac, link-with-pkg-config-mac, link-with-cmake-mac-deprecated, link-with-bson-mac tasks on the ** Release Archive Creator build variant.","Background
macOS does not define arc4random and strlcpy when _XOPEN_SOURCE=700 is defined.
CDRIVER-4233 includes a further analysis of the root cause.
#895 (comment) includes motivation for applying XOPEN_SOURCE=700.
Summary of changes

Apply -D_XOPEN_SOURCE=700 to the CHECK_SYMBOL_EXISTS for strlcpy.
Define _DARWIN_C_SOURCE=1 to enable arc4random and strlcpy.

Fixes the link-with-cmake-mac, link-with-pkg-config-mac, link-with-cmake-mac-deprecated, link-with-bson-mac tasks on the ** Release Archive Creator build variant.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,911,2021-12-12T14:29:27Z,2021-12-13T21:25:10Z,2021-12-13T21:31:15Z,MERGED,True,29,6,3,https://github.com/ryandesign,CDRIVER-4234 Detect arc4random_buf using cmake,3,[],https://github.com/mongodb/mongo-c-driver/pull/911,https://github.com/ryandesign,1,https://github.com/mongodb/mongo-c-driver/pull/911,"Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.","Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,911,2021-12-12T14:29:27Z,2021-12-13T21:25:10Z,2021-12-13T21:31:15Z,MERGED,True,29,6,3,https://github.com/ryandesign,CDRIVER-4234 Detect arc4random_buf using cmake,3,[],https://github.com/mongodb/mongo-c-driver/pull/911,https://github.com/muzuiget,2,https://github.com/mongodb/mongo-c-driver/pull/911#issuecomment-991980081,"Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.",This issue also happen in macOS 11,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,911,2021-12-12T14:29:27Z,2021-12-13T21:25:10Z,2021-12-13T21:31:15Z,MERGED,True,29,6,3,https://github.com/ryandesign,CDRIVER-4234 Detect arc4random_buf using cmake,3,[],https://github.com/mongodb/mongo-c-driver/pull/911,https://github.com/ryandesign,3,https://github.com/mongodb/mongo-c-driver/pull/911#issuecomment-991981016,"Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.","@muzuiget Which issue are you referring to? The code should have already built fine on Mac OS X 10.7 and later, including macOS 11 and 12; it did for me. This PR was specifically to fix Mac OS X 10.6 and earlier which don't have arc4random_buf.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,911,2021-12-12T14:29:27Z,2021-12-13T21:25:10Z,2021-12-13T21:31:15Z,MERGED,True,29,6,3,https://github.com/ryandesign,CDRIVER-4234 Detect arc4random_buf using cmake,3,[],https://github.com/mongodb/mongo-c-driver/pull/911,https://github.com/muzuiget,4,https://github.com/mongodb/mongo-c-driver/pull/911#issuecomment-991981555,"Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.","@ryandesign I built v1.20.0 fail on macOS 11, it report a arc4random_buf error. It looks like this PR should fix this issue.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,911,2021-12-12T14:29:27Z,2021-12-13T21:25:10Z,2021-12-13T21:31:15Z,MERGED,True,29,6,3,https://github.com/ryandesign,CDRIVER-4234 Detect arc4random_buf using cmake,3,[],https://github.com/mongodb/mongo-c-driver/pull/911,https://github.com/ryandesign,5,https://github.com/mongodb/mongo-c-driver/pull/911#issuecomment-991981779,"Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.","It may, but arc4random_buf exists on 10.7 and later, so if your machine is reporting that it doesn't, there is something else wrong.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,911,2021-12-12T14:29:27Z,2021-12-13T21:25:10Z,2021-12-13T21:31:15Z,MERGED,True,29,6,3,https://github.com/ryandesign,CDRIVER-4234 Detect arc4random_buf using cmake,3,[],https://github.com/mongodb/mongo-c-driver/pull/911,https://github.com/muzuiget,6,https://github.com/mongodb/mongo-c-driver/pull/911#issuecomment-991983375,"Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.","@ryandesign
I built it on Azure Pipelines macOS-11 image, it was success in v1.19.1, but fail in v1.20.0. I just update the version number, the build script didn't changed.
The build script:
VERSION=1.20.0
URL=https://github.com/mongodb/mongo-c-driver/releases/download/$VERSION/mongo-c-driver-$VERSION.tar.gz
mkdir mongo-c-driver
cd mongo-c-driver
wget -q $URL -O - | tar xz --strip-components=1
mkdir out
cd out
cmake \
    -DCMAKE_INSTALL_PREFIX=""$OUTPUT_DIR"" \
    -DCMAKE_BUILD_TYPE=Release \
    -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF \
    -DENABLE_MONGOC=OFF \
    ..
cmake --build . --config Release --target install

The build log:
+ cmake --build . --config Release --target install
[  1%] Building C object src/libbson/CMakeFiles/bson_shared.dir/src/bson/bcon.c.o
[  2%] Building C object src/libbson/CMakeFiles/bson_shared.dir/src/bson/bson.c.o
[  4%] Building C object src/libbson/CMakeFiles/bson_shared.dir/src/bson/bson-atomic.c.o
[  5%] Building C object src/libbson/CMakeFiles/bson_shared.dir/src/bson/bson-clock.c.o
[  7%] Building C object src/libbson/CMakeFiles/bson_shared.dir/src/bson/bson-context.c.o
/Users/runner/work/1/s/build/mongo-c-driver/src/libbson/src/bson/bson-context.c:234:4: error: implicit declaration of function 'arc4random_buf' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
   arc4random_buf (&result, sizeof (result));
   ^
1 error generated.
make[2]: *** [src/libbson/CMakeFiles/bson_shared.dir/src/bson/bson-context.c.o] Error 1
make[1]: *** [src/libbson/CMakeFiles/bson_shared.dir/all] Error 2
make: *** [all] Error 2
##[error]Bash exited with code '2'.

Or maybe Azure Pipelines has update the macOS-11 image, but I don't know what cause this error.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,911,2021-12-12T14:29:27Z,2021-12-13T21:25:10Z,2021-12-13T21:31:15Z,MERGED,True,29,6,3,https://github.com/ryandesign,CDRIVER-4234 Detect arc4random_buf using cmake,3,[],https://github.com/mongodb/mongo-c-driver/pull/911,https://github.com/muzuiget,7,https://github.com/mongodb/mongo-c-driver/pull/911#issuecomment-991984375,"Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.","Here is more details the macOS-11 image in build log:
Virtual Environment
Environment: macos-11
Version: 20211207.1
Included Software: https://github.com/actions/virtual-environments/blob/macOS-11/20211207.1/images/macos/macos-11-Readme.md
Image Release: https://github.com/actions/virtual-environments/releases/tag/macOS-11%2F20211207.1",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,911,2021-12-12T14:29:27Z,2021-12-13T21:25:10Z,2021-12-13T21:31:15Z,MERGED,True,29,6,3,https://github.com/ryandesign,CDRIVER-4234 Detect arc4random_buf using cmake,3,[],https://github.com/mongodb/mongo-c-driver/pull/911,https://github.com/kevinAlbs,8,https://github.com/mongodb/mongo-c-driver/pull/911#issuecomment-992545898,"Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.","@muzuiget / @ryandesign, the error on macOS 11 may be caused by CDRIVER-4233. There is a proposed fix in #910.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,911,2021-12-12T14:29:27Z,2021-12-13T21:25:10Z,2021-12-13T21:31:15Z,MERGED,True,29,6,3,https://github.com/ryandesign,CDRIVER-4234 Detect arc4random_buf using cmake,3,[],https://github.com/mongodb/mongo-c-driver/pull/911,https://github.com/ryandesign,9,https://github.com/mongodb/mongo-c-driver/pull/911#issuecomment-992550117,"Detect the availability of arc4random_buf when running cmake rather than using a hardcoded list of platforms on which it is available. Fixes build failure on Mac OS X 10.6 where it is not available.
Also now make arc4random_buf the first choice to use if it is available. Previously, if rand_r was not available, the older rand would be used even if arc4random_buf was available.","Ohh right, I forgot about that already.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,912,2021-12-13T19:16:03Z,2021-12-15T16:43:56Z,2021-12-15T16:43:58Z,MERGED,True,112,32,7,https://github.com/eramongodb,CDRIVER-4130 Unconditionally use OP_MSG for server 5.1 and newer,14,[],https://github.com/mongodb/mongo-c-driver/pull/912,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/912,"The C driver currently supports exhaust cursors with OP_QUERY wire protocol messages, but does not support exhaust cursors with OP_MSG wire protocol messages. MongoDB Server 5.1 and newer removes support for OP_QUERY messages. The Find, getMore and killCursors commands Spec accordingly requires drivers supporting exhaust cursors to unconditionally use OP_MSG for server versions that support it. However, strict compliance with the spec as currently written would introduce a regression in supported features in the C driver as exhaust cursors with OP_MSG is not yet supported.
Several options were investigated and considered:

Prohibit exhaust cursor option given server 5.1 and newer. This would be the most spec-compliant solution, but possibly cause regressions in user code due to new cursor errors predecated on the server version and presence of the exhaust cursor option.
Fallback to normal cursor given server 5.1 and newer. This would preserve exhaust cursor behavior up to server 5.1 and minimize scope of regression to performance only (no errors).
Do nothing and postpone spec compliance until exhaust cursors with OP_MSG are implemented. Implementing support for exhaust cursors with OP_MSG requires a significant amount of work that is beyond the scope of CDRIVER-4130.

After some consultation, it was decided that Option 2 seems best: for server 5.1 and newer (where OP_QUERY is not supported), the exhaust cursor option will be ignored and a normal cursor will be constructed instead. Given the cursor interface does not distinguish normal cursors from exhaust cursors, this behavior should not be observable beyond log messages and/or possibly some performance regression. More importantly, it should not break existing code behavior while still permitting server upgrades.
Some tests were making use of exhaust cursors when not necessary. These tests were updated to use normal cursors instead. These changes should not be necessary for normal users.","The C driver currently supports exhaust cursors with OP_QUERY wire protocol messages, but does not support exhaust cursors with OP_MSG wire protocol messages. MongoDB Server 5.1 and newer removes support for OP_QUERY messages. The Find, getMore and killCursors commands Spec accordingly requires drivers supporting exhaust cursors to unconditionally use OP_MSG for server versions that support it. However, strict compliance with the spec as currently written would introduce a regression in supported features in the C driver as exhaust cursors with OP_MSG is not yet supported.
Several options were investigated and considered:

Prohibit exhaust cursor option given server 5.1 and newer. This would be the most spec-compliant solution, but possibly cause regressions in user code due to new cursor errors predecated on the server version and presence of the exhaust cursor option.
Fallback to normal cursor given server 5.1 and newer. This would preserve exhaust cursor behavior up to server 5.1 and minimize scope of regression to performance only (no errors).
Do nothing and postpone spec compliance until exhaust cursors with OP_MSG are implemented. Implementing support for exhaust cursors with OP_MSG requires a significant amount of work that is beyond the scope of CDRIVER-4130.

After some consultation, it was decided that Option 2 seems best: for server 5.1 and newer (where OP_QUERY is not supported), the exhaust cursor option will be ignored and a normal cursor will be constructed instead. Given the cursor interface does not distinguish normal cursors from exhaust cursors, this behavior should not be observable beyond log messages and/or possibly some performance regression. More importantly, it should not break existing code behavior while still permitting server upgrades.
Some tests were making use of exhaust cursors when not necessary. These tests were updated to use normal cursors instead. These changes should not be necessary for normal users.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,912,2021-12-13T19:16:03Z,2021-12-15T16:43:56Z,2021-12-15T16:43:58Z,MERGED,True,112,32,7,https://github.com/eramongodb,CDRIVER-4130 Unconditionally use OP_MSG for server 5.1 and newer,14,[],https://github.com/mongodb/mongo-c-driver/pull/912,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/912#issuecomment-993697901,"The C driver currently supports exhaust cursors with OP_QUERY wire protocol messages, but does not support exhaust cursors with OP_MSG wire protocol messages. MongoDB Server 5.1 and newer removes support for OP_QUERY messages. The Find, getMore and killCursors commands Spec accordingly requires drivers supporting exhaust cursors to unconditionally use OP_MSG for server versions that support it. However, strict compliance with the spec as currently written would introduce a regression in supported features in the C driver as exhaust cursors with OP_MSG is not yet supported.
Several options were investigated and considered:

Prohibit exhaust cursor option given server 5.1 and newer. This would be the most spec-compliant solution, but possibly cause regressions in user code due to new cursor errors predecated on the server version and presence of the exhaust cursor option.
Fallback to normal cursor given server 5.1 and newer. This would preserve exhaust cursor behavior up to server 5.1 and minimize scope of regression to performance only (no errors).
Do nothing and postpone spec compliance until exhaust cursors with OP_MSG are implemented. Implementing support for exhaust cursors with OP_MSG requires a significant amount of work that is beyond the scope of CDRIVER-4130.

After some consultation, it was decided that Option 2 seems best: for server 5.1 and newer (where OP_QUERY is not supported), the exhaust cursor option will be ignored and a normal cursor will be constructed instead. Given the cursor interface does not distinguish normal cursors from exhaust cursors, this behavior should not be observable beyond log messages and/or possibly some performance regression. More importantly, it should not break existing code behavior while still permitting server upgrades.
Some tests were making use of exhaust cursors when not necessary. These tests were updated to use normal cursors instead. These changes should not be necessary for normal users.","I forgot to note in the initial review. I do not think there is test coverage of creating exhaust cursors against 5.1 servers.
There are exhaust cursor tests in test-mongoc-exhaust.c. They are skipped on 5.1 with test_framework_skip_if_no_legacy_opcodes. I do not think they will succeed with the fallback approach.
I suggest adding a simple test to test-mongoc-exhaust.c to verify that requesting the exhaust option in mongoc_collection_find_with_opts succeeds and returns documents against any live server version.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,912,2021-12-13T19:16:03Z,2021-12-15T16:43:56Z,2021-12-15T16:43:58Z,MERGED,True,112,32,7,https://github.com/eramongodb,CDRIVER-4130 Unconditionally use OP_MSG for server 5.1 and newer,14,[],https://github.com/mongodb/mongo-c-driver/pull/912,https://github.com/eramongodb,3,https://github.com/mongodb/mongo-c-driver/pull/912#issuecomment-993891601,"The C driver currently supports exhaust cursors with OP_QUERY wire protocol messages, but does not support exhaust cursors with OP_MSG wire protocol messages. MongoDB Server 5.1 and newer removes support for OP_QUERY messages. The Find, getMore and killCursors commands Spec accordingly requires drivers supporting exhaust cursors to unconditionally use OP_MSG for server versions that support it. However, strict compliance with the spec as currently written would introduce a regression in supported features in the C driver as exhaust cursors with OP_MSG is not yet supported.
Several options were investigated and considered:

Prohibit exhaust cursor option given server 5.1 and newer. This would be the most spec-compliant solution, but possibly cause regressions in user code due to new cursor errors predecated on the server version and presence of the exhaust cursor option.
Fallback to normal cursor given server 5.1 and newer. This would preserve exhaust cursor behavior up to server 5.1 and minimize scope of regression to performance only (no errors).
Do nothing and postpone spec compliance until exhaust cursors with OP_MSG are implemented. Implementing support for exhaust cursors with OP_MSG requires a significant amount of work that is beyond the scope of CDRIVER-4130.

After some consultation, it was decided that Option 2 seems best: for server 5.1 and newer (where OP_QUERY is not supported), the exhaust cursor option will be ignored and a normal cursor will be constructed instead. Given the cursor interface does not distinguish normal cursors from exhaust cursors, this behavior should not be observable beyond log messages and/or possibly some performance regression. More importantly, it should not break existing code behavior while still permitting server upgrades.
Some tests were making use of exhaust cursors when not necessary. These tests were updated to use normal cursors instead. These changes should not be necessary for normal users.",Good point regarding coverage of fallback behavior. Added new /Client/exhaust_cursor/fallback test accordingly.,True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,913,2021-12-13T19:56:11Z,2022-01-06T01:18:01Z,2022-01-06T01:18:02Z,MERGED,True,36,5,1,https://github.com/kevinAlbs,CDRIVER-4105 add ubuntu1804-large with MongoDB 5.0 to benchmarks,3,[],https://github.com/mongodb/mongo-c-driver/pull/913,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/913,"Summary of Changes
Add a task with MongoDB server 5.0 on an ubuntu1804-large variant.
Patch build: https://spruce.mongodb.com/version/61b7a30f9ccd4e72276b5c29
Motivation
ubuntu1804-large better shows the performance degradation of thread contention on 1.19.2.
There are consistent unexplained performance spikes centos6-perf: BUILD-14369.
This patch build tests the C driver 1.19.2 with tests introduced in mongodb/mongo-c-driver-performance#4.
Data from ubuntu1804-large:
name                         ops_per_sec
---------------------------  -------------
Parallel/Single/Threads:100  1483k
Parallel/Single/Threads:10   814k
Parallel/Single/Threads:1    116k
Parallel/Pool/Threads:100    829k
Parallel/Pool/Threads:10     661k
Parallel/Pool/Threads:1      119k

Data from centos6-perf:
name                         ops_per_sec
---------------------------  -------------
Parallel/Single/Threads:100  628k
Parallel/Single/Threads:10   619k
Parallel/Single/Threads:1    298k
Parallel/Pool/Threads:100    596k
Parallel/Pool/Threads:10     602k
Parallel/Pool/Threads:1      301k","Summary of Changes
Add a task with MongoDB server 5.0 on an ubuntu1804-large variant.
Patch build: https://spruce.mongodb.com/version/61b7a30f9ccd4e72276b5c29
Motivation
ubuntu1804-large better shows the performance degradation of thread contention on 1.19.2.
There are consistent unexplained performance spikes centos6-perf: BUILD-14369.
This patch build tests the C driver 1.19.2 with tests introduced in mongodb/mongo-c-driver-performance#4.
Data from ubuntu1804-large:
name                         ops_per_sec
---------------------------  -------------
Parallel/Single/Threads:100  1483k
Parallel/Single/Threads:10   814k
Parallel/Single/Threads:1    116k
Parallel/Pool/Threads:100    829k
Parallel/Pool/Threads:10     661k
Parallel/Pool/Threads:1      119k

Data from centos6-perf:
name                         ops_per_sec
---------------------------  -------------
Parallel/Single/Threads:100  628k
Parallel/Single/Threads:10   619k
Parallel/Single/Threads:1    298k
Parallel/Pool/Threads:100    596k
Parallel/Pool/Threads:10     602k
Parallel/Pool/Threads:1      301k",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,913,2021-12-13T19:56:11Z,2022-01-06T01:18:01Z,2022-01-06T01:18:02Z,MERGED,True,36,5,1,https://github.com/kevinAlbs,CDRIVER-4105 add ubuntu1804-large with MongoDB 5.0 to benchmarks,3,[],https://github.com/mongodb/mongo-c-driver/pull/913,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/913#issuecomment-1005183197,"Summary of Changes
Add a task with MongoDB server 5.0 on an ubuntu1804-large variant.
Patch build: https://spruce.mongodb.com/version/61b7a30f9ccd4e72276b5c29
Motivation
ubuntu1804-large better shows the performance degradation of thread contention on 1.19.2.
There are consistent unexplained performance spikes centos6-perf: BUILD-14369.
This patch build tests the C driver 1.19.2 with tests introduced in mongodb/mongo-c-driver-performance#4.
Data from ubuntu1804-large:
name                         ops_per_sec
---------------------------  -------------
Parallel/Single/Threads:100  1483k
Parallel/Single/Threads:10   814k
Parallel/Single/Threads:1    116k
Parallel/Pool/Threads:100    829k
Parallel/Pool/Threads:10     661k
Parallel/Pool/Threads:1      119k

Data from centos6-perf:
name                         ops_per_sec
---------------------------  -------------
Parallel/Single/Threads:100  628k
Parallel/Single/Threads:10   619k
Parallel/Single/Threads:1    298k
Parallel/Pool/Threads:100    596k
Parallel/Pool/Threads:10     602k
Parallel/Pool/Threads:1      301k","It looks alright to me. Are the Evergreen failures something to be concerned about, or unrelated?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,913,2021-12-13T19:56:11Z,2022-01-06T01:18:01Z,2022-01-06T01:18:02Z,MERGED,True,36,5,1,https://github.com/kevinAlbs,CDRIVER-4105 add ubuntu1804-large with MongoDB 5.0 to benchmarks,3,[],https://github.com/mongodb/mongo-c-driver/pull/913,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/913#issuecomment-1005184814,"Summary of Changes
Add a task with MongoDB server 5.0 on an ubuntu1804-large variant.
Patch build: https://spruce.mongodb.com/version/61b7a30f9ccd4e72276b5c29
Motivation
ubuntu1804-large better shows the performance degradation of thread contention on 1.19.2.
There are consistent unexplained performance spikes centos6-perf: BUILD-14369.
This patch build tests the C driver 1.19.2 with tests introduced in mongodb/mongo-c-driver-performance#4.
Data from ubuntu1804-large:
name                         ops_per_sec
---------------------------  -------------
Parallel/Single/Threads:100  1483k
Parallel/Single/Threads:10   814k
Parallel/Single/Threads:1    116k
Parallel/Pool/Threads:100    829k
Parallel/Pool/Threads:10     661k
Parallel/Pool/Threads:1      119k

Data from centos6-perf:
name                         ops_per_sec
---------------------------  -------------
Parallel/Single/Threads:100  628k
Parallel/Single/Threads:10   619k
Parallel/Single/Threads:1    298k
Parallel/Pool/Threads:100    596k
Parallel/Pool/Threads:10     602k
Parallel/Pool/Threads:1      301k","It looks alright to me. Are the Evergreen failures something to be concerned about, or unrelated?

Those should be unrelated. benchmark.yml applies to the mongo-c-driver-perf project.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,914,2021-12-13T20:03:50Z,2021-12-15T00:38:10Z,2021-12-17T21:22:54Z,MERGED,True,163,174,11,https://github.com/vector-of-bool,Avoid conditional compilation on whether tracing is enabled,2,[],https://github.com/mongodb/mongo-c-driver/pull/914,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/914,Macros that discard their arguments under certain configurations can lead to missed refactors and unknowingly breaking code. This changeset changes conditional tracing to use C-language-level conditions rather than preprocessor conditions.,Macros that discard their arguments under certain configurations can lead to missed refactors and unknowingly breaking code. This changeset changes conditional tracing to use C-language-level conditions rather than preprocessor conditions.,True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,915,2021-12-17T14:14:40Z,2021-12-17T21:39:02Z,2021-12-17T21:39:03Z,MERGED,True,95,7,3,https://github.com/kevinAlbs,CDRIVER-4207 handshake on new stream in scanner,5,[],https://github.com/mongodb/mongo-c-driver/pull/915,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/915,"Summary
Always send the full connection handshake as the first command on a stream in single-threaded monitoring. The bug described in CDRIVER-4207 results in a monitoring command as the first command.
Rejected ideas
I rejected the idea of setting last_failed in mongoc_topology_scanner_node_disconnect. last_failed is used to apply cooldownMS in mongoc_topology_scanner_node_in_cooldown. The Server Monitoring spec does not say that cooldownMS should apply when a network error occurs on an application operation.","Summary
Always send the full connection handshake as the first command on a stream in single-threaded monitoring. The bug described in CDRIVER-4207 results in a monitoring command as the first command.
Rejected ideas
I rejected the idea of setting last_failed in mongoc_topology_scanner_node_disconnect. last_failed is used to apply cooldownMS in mongoc_topology_scanner_node_in_cooldown. The Server Monitoring spec does not say that cooldownMS should apply when a network error occurs on an application operation.",True,"{'THUMBS_UP': ['https://github.com/jmikola', 'https://github.com/chardan']}"
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,916,2021-12-17T18:35:30Z,2021-12-20T18:02:38Z,2021-12-20T18:02:42Z,MERGED,True,299,80,14,https://github.com/eramongodb,CDRIVER-4086 Implement srvServiceName for initial DNS seedlist and SRV polling,19,[],https://github.com/mongodb/mongo-c-driver/pull/916,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/916,"This PR implements support for the srvServiceName URI option.
Excluding a minor drive-by update to the MONGOC_URI_SRVMAXHOSTS macro (to lowercase for consistency with all other URI option macros), the implementation was relatively straightforward thanks to setup of relevant codepaths in CDRIVER-4097. Most of the work involved implementing RFC 6335 compliance checks during URI option parsing.
Spec tests were updated with srvServiceName tests (deliberately omitted during implementation of CDRIVER-4097), including another addition to the error filter list pending resolution of CDRIVER-3167.
The existing mongoc_uri_get_service() function is named and documented as yielding the ""SRV service name"", but this is incorrect: it yields the {hostname}.{domainname} portion of the SRV URI. The function name was not updated to preserve the existing public interface (although the documentation was fixed). If permitted, I would rename it to mongoc_uri_get_srv_host_and_domain().
Instead, a new mongoc_uri_get_srv_service_name() function was added for the purpose of obtaining the service name. This function is used to implement srvServiceName support during initial DNS seedlist discovery and SRV polling.","This PR implements support for the srvServiceName URI option.
Excluding a minor drive-by update to the MONGOC_URI_SRVMAXHOSTS macro (to lowercase for consistency with all other URI option macros), the implementation was relatively straightforward thanks to setup of relevant codepaths in CDRIVER-4097. Most of the work involved implementing RFC 6335 compliance checks during URI option parsing.
Spec tests were updated with srvServiceName tests (deliberately omitted during implementation of CDRIVER-4097), including another addition to the error filter list pending resolution of CDRIVER-3167.
The existing mongoc_uri_get_service() function is named and documented as yielding the ""SRV service name"", but this is incorrect: it yields the {hostname}.{domainname} portion of the SRV URI. The function name was not updated to preserve the existing public interface (although the documentation was fixed). If permitted, I would rename it to mongoc_uri_get_srv_host_and_domain().
Instead, a new mongoc_uri_get_srv_service_name() function was added for the purpose of obtaining the service name. This function is used to implement srvServiceName support during initial DNS seedlist discovery and SRV polling.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,916,2021-12-17T18:35:30Z,2021-12-20T18:02:38Z,2021-12-20T18:02:42Z,MERGED,True,299,80,14,https://github.com/eramongodb,CDRIVER-4086 Implement srvServiceName for initial DNS seedlist and SRV polling,19,[],https://github.com/mongodb/mongo-c-driver/pull/916,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/916#issuecomment-996983577,"This PR implements support for the srvServiceName URI option.
Excluding a minor drive-by update to the MONGOC_URI_SRVMAXHOSTS macro (to lowercase for consistency with all other URI option macros), the implementation was relatively straightforward thanks to setup of relevant codepaths in CDRIVER-4097. Most of the work involved implementing RFC 6335 compliance checks during URI option parsing.
Spec tests were updated with srvServiceName tests (deliberately omitted during implementation of CDRIVER-4097), including another addition to the error filter list pending resolution of CDRIVER-3167.
The existing mongoc_uri_get_service() function is named and documented as yielding the ""SRV service name"", but this is incorrect: it yields the {hostname}.{domainname} portion of the SRV URI. The function name was not updated to preserve the existing public interface (although the documentation was fixed). If permitted, I would rename it to mongoc_uri_get_srv_host_and_domain().
Instead, a new mongoc_uri_get_srv_service_name() function was added for the purpose of obtaining the service name. This function is used to implement srvServiceName support during initial DNS seedlist discovery and SRV polling.","The function name was not updated to preserve the existing public interface (although the documentation was fixed). If permitted, I would rename it to mongoc_uri_get_srv_host_and_domain().

Is it feasible to introduce a new alias and deprecate the old function name? I believe that has been done elsewhere (e.g. recent changes to libbson's atomic API). I'd defer to @kevinAlbs if that's worth doing in this case, as PHP is not a consumer of this API.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,916,2021-12-17T18:35:30Z,2021-12-20T18:02:38Z,2021-12-20T18:02:42Z,MERGED,True,299,80,14,https://github.com/eramongodb,CDRIVER-4086 Implement srvServiceName for initial DNS seedlist and SRV polling,19,[],https://github.com/mongodb/mongo-c-driver/pull/916,https://github.com/eramongodb,3,https://github.com/mongodb/mongo-c-driver/pull/916#issuecomment-997040051,"This PR implements support for the srvServiceName URI option.
Excluding a minor drive-by update to the MONGOC_URI_SRVMAXHOSTS macro (to lowercase for consistency with all other URI option macros), the implementation was relatively straightforward thanks to setup of relevant codepaths in CDRIVER-4097. Most of the work involved implementing RFC 6335 compliance checks during URI option parsing.
Spec tests were updated with srvServiceName tests (deliberately omitted during implementation of CDRIVER-4097), including another addition to the error filter list pending resolution of CDRIVER-3167.
The existing mongoc_uri_get_service() function is named and documented as yielding the ""SRV service name"", but this is incorrect: it yields the {hostname}.{domainname} portion of the SRV URI. The function name was not updated to preserve the existing public interface (although the documentation was fixed). If permitted, I would rename it to mongoc_uri_get_srv_host_and_domain().
Instead, a new mongoc_uri_get_srv_service_name() function was added for the purpose of obtaining the service name. This function is used to implement srvServiceName support during initial DNS seedlist discovery and SRV polling.",@jmikola That's a good idea. It would also be a good opportunity to clean up some naming issues internally. Will add relevant changes to PR (can easily be removed if decided not worth).,True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,917,2021-12-17T19:40:23Z,2021-12-17T21:13:30Z,2021-12-17T21:13:32Z,MERGED,True,6,2,2,https://github.com/eramongodb,CDRIVER-4247 Replace cmakedefine01 with autotools-compatible equivalent,1,[],https://github.com/mongodb/mongo-c-driver/pull/917,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/917,"Per CDRIVER-4247 description, the #cmakedefine01 preprocessor directive breaks PHPC compatibility, which compiles the C driver using autotools rather than CMake. This PR substitutes the CMake-specific directive with an equivalent and autotools-compatible pattern already being used by similar preprocessor macros.","Per CDRIVER-4247 description, the #cmakedefine01 preprocessor directive breaks PHPC compatibility, which compiles the C driver using autotools rather than CMake. This PR substitutes the CMake-specific directive with an equivalent and autotools-compatible pattern already being used by similar preprocessor macros.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,918,2021-12-20T20:59:42Z,2021-12-20T22:30:48Z,2021-12-20T22:30:51Z,MERGED,True,14,14,2,https://github.com/eramongodb,CDRIVER-4246 Disable CSE tasks on Power8 variant,1,[],https://github.com/mongodb/mongo-c-driver/pull/918,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/918,"Build of the Python package cryptography, required by Python package pykmip, required by the drivers-evergreen-tools mock KMIP server, required by CSE tests in the C driver, fails due to introduction of Rust toolchain dependency in the cryptography library. Several workarounds were attempted (updating pip before package upgrade, pinning cryptography package, and CRYPTOGRAPHY_DONT_BUILD_RUST=1) but unsuccessful on the Power8 variant. Installing the Rust toolchain was considered, but due to FLE support on Power8 not being a tested, supported, or requested combination to begin with, it was decided that dropping this combination on Evergreen was an acceptable workaround.","Build of the Python package cryptography, required by Python package pykmip, required by the drivers-evergreen-tools mock KMIP server, required by CSE tests in the C driver, fails due to introduction of Rust toolchain dependency in the cryptography library. Several workarounds were attempted (updating pip before package upgrade, pinning cryptography package, and CRYPTOGRAPHY_DONT_BUILD_RUST=1) but unsuccessful on the Power8 variant. Installing the Rust toolchain was considered, but due to FLE support on Power8 not being a tested, supported, or requested combination to begin with, it was decided that dropping this combination on Evergreen was an acceptable workaround.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,919,2021-12-21T17:02:16Z,2021-12-28T22:31:27Z,2021-12-28T22:31:31Z,CLOSED,False,111,24,18,https://github.com/jmikola,CDRIVER-4250: Expose internal validation as mongoc_uri_finalize_options,3,[],https://github.com/mongodb/mongo-c-driver/pull/919,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/919,"https://jira.mongodb.org/browse/CDRIVER-4250
I originally considered using a name like is_valid or validate but realized these do more than just check the options. mongoc_uri_finalize_tls and mongoc_uri_finalize_auth actually modify the URI in certain cases.
I was fairly liberal with the seealso links and placed them on any function that can be used to alter the URI after it is constructed/parsed. Finalization technically isn't necessary after setting something like read prefs on a URI, but I felt it didn't hurt to be consistent (esp. if logic changes down the line). I also decided not to reference the new function on the client and pool constructors since it wouldn't apply to all (or even the most common) use cases.","https://jira.mongodb.org/browse/CDRIVER-4250
I originally considered using a name like is_valid or validate but realized these do more than just check the options. mongoc_uri_finalize_tls and mongoc_uri_finalize_auth actually modify the URI in certain cases.
I was fairly liberal with the seealso links and placed them on any function that can be used to alter the URI after it is constructed/parsed. Finalization technically isn't necessary after setting something like read prefs on a URI, but I felt it didn't hurt to be consistent (esp. if logic changes down the line). I also decided not to reference the new function on the client and pool constructors since it wouldn't apply to all (or even the most common) use cases.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,919,2021-12-21T17:02:16Z,2021-12-28T22:31:27Z,2021-12-28T22:31:31Z,CLOSED,False,111,24,18,https://github.com/jmikola,CDRIVER-4250: Expose internal validation as mongoc_uri_finalize_options,3,[],https://github.com/mongodb/mongo-c-driver/pull/919,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/919#issuecomment-999013302,"https://jira.mongodb.org/browse/CDRIVER-4250
I originally considered using a name like is_valid or validate but realized these do more than just check the options. mongoc_uri_finalize_tls and mongoc_uri_finalize_auth actually modify the URI in certain cases.
I was fairly liberal with the seealso links and placed them on any function that can be used to alter the URI after it is constructed/parsed. Finalization technically isn't necessary after setting something like read prefs on a URI, but I felt it didn't hurt to be consistent (esp. if logic changes down the line). I also decided not to reference the new function on the client and pool constructors since it wouldn't apply to all (or even the most common) use cases.","I would prefer properly separating the ""finalization"" of TLS/auth options from the ""validation"" of option correctness so we can expose a non-modifying mongoc_uri_validate_options() in the public interface (const mongoc_uri_t* uri parameter) instead of the currently-proposed modifying one. Thoughts on making the addition effort to refactor out the modifying/finalizing code from read-only validation?

I'm not sure there's any benefit to a mongoc_uri_validate_options function in the public API, as that would still put the onus on wrapping drivers (or applications) using that function to manually apply the modifications done by finalize_tls and finalize_auth (e.g. implicitly enabling TLS for SRV URIs, forcing authSource=$external for GSSAPI and X509).
If we all agree that this mongoc_uri_finalize_options will become obsolete once CDRIVER-3723 is implemented, then perhaps I could abandon this PR and redirect my efforts towards that ticket instead. Since mongoc_client_new_from_uri takes a const mongoc_uri_t*, we could never have CDRIVER-3723 finalize the mongoc_uri_t parameter the same way we're doing here; however, it's probably sufficient to just apply that finalization to the internal URI copies. I think that would pertain to topology->uri and pool->uri (client->uri is just a copy of topology->uri).
Thoughts?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,919,2021-12-21T17:02:16Z,2021-12-28T22:31:27Z,2021-12-28T22:31:31Z,CLOSED,False,111,24,18,https://github.com/jmikola,CDRIVER-4250: Expose internal validation as mongoc_uri_finalize_options,3,[],https://github.com/mongodb/mongo-c-driver/pull/919,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/919#issuecomment-999662297,"https://jira.mongodb.org/browse/CDRIVER-4250
I originally considered using a name like is_valid or validate but realized these do more than just check the options. mongoc_uri_finalize_tls and mongoc_uri_finalize_auth actually modify the URI in certain cases.
I was fairly liberal with the seealso links and placed them on any function that can be used to alter the URI after it is constructed/parsed. Finalization technically isn't necessary after setting something like read prefs on a URI, but I felt it didn't hurt to be consistent (esp. if logic changes down the line). I also decided not to reference the new function on the client and pool constructors since it wouldn't apply to all (or even the most common) use cases.","@kevinAlbs I'll let this PR sit for a moment and attempt to implement CDRIVER-3723 today in a separate PR. We can decide later, but I'm all for avoiding the introduction of a public API that would soon become obsolete.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,919,2021-12-21T17:02:16Z,2021-12-28T22:31:27Z,2021-12-28T22:31:31Z,CLOSED,False,111,24,18,https://github.com/jmikola,CDRIVER-4250: Expose internal validation as mongoc_uri_finalize_options,3,[],https://github.com/mongodb/mongo-c-driver/pull/919,https://github.com/jmikola,4,https://github.com/mongodb/mongo-c-driver/pull/919#issuecomment-1002307009,"https://jira.mongodb.org/browse/CDRIVER-4250
I originally considered using a name like is_valid or validate but realized these do more than just check the options. mongoc_uri_finalize_tls and mongoc_uri_finalize_auth actually modify the URI in certain cases.
I was fairly liberal with the seealso links and placed them on any function that can be used to alter the URI after it is constructed/parsed. Finalization technically isn't necessary after setting something like read prefs on a URI, but I felt it didn't hurt to be consistent (esp. if logic changes down the line). I also decided not to reference the new function on the client and pool constructors since it wouldn't apply to all (or even the most common) use cases.",Closing this in favor of #921 for CDRIVER-3723.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,920,2021-12-23T16:23:24Z,2022-01-05T15:19:38Z,2022-01-05T15:19:41Z,MERGED,True,17,23,5,https://github.com/eramongodb,CDRIVER-4249 Apply _DEFAULT_SOURCE to all subdirectories,9,[],https://github.com/mongodb/mongo-c-driver/pull/920,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/920,"Per CDRIVER-4249, this PR cleans up feature test macros used to enable non-conforming C language extensions such as POSIX and BSD library functions.
The _BSD_SOURCE macro is a deprecated alias of _DEFAULT_SOURCE, so it was removed in favor of the already-present _DEFAULT_SOURCE.
There was a choice available as to whether to use _DEFAULT_SOURCE or _GNU_SOURCE. The difference being (according to GNU documentation):

_GNU_SOURCE: everything is included: ISO C89, ISO C99, POSIX.1, POSIX.2, BSD, SVID, X/Open, LFS, and GNU extensions. In the cases where POSIX.1 conflicts with BSD, the POSIX definitions take precedence.
_DEFAULT_SOURCE: most features are included apart from X/Open, LFS and GNU extensions: the effect is to enable features from the 2008 edition of POSIX, as well as certain BSD and SVID features without a separate feature test macro to control them.

The documentation recommends _GNU_SOURCE for new programs. However, _GNU_SOURCE preferring POSIX definitions over BSD seems to cause strerror_r() compatibility/detection issues on Darwin that are not present with _DEFAULT_SOURCE. Because _DEFAULT_SOURCE does not prompt these issues while still enabling the set of features required and used by the C driver, _DEFAULT_SOURCE was selected and _GNU_SOURCE removed.
To permit validating changes on Darwin, this PR includes a drive-by fix of build failures on Darwin due to #890. Since this fix requires modifying the zlib bundle (last updated in 2018), I would appreciate some confirmation as to whether the changes made are appropriate. If we wish to leave the zlib sources unmodified, we can choose to selectively exclude _DEFAULT_SOURCE during compilation of the zlib bundle instead.","Per CDRIVER-4249, this PR cleans up feature test macros used to enable non-conforming C language extensions such as POSIX and BSD library functions.
The _BSD_SOURCE macro is a deprecated alias of _DEFAULT_SOURCE, so it was removed in favor of the already-present _DEFAULT_SOURCE.
There was a choice available as to whether to use _DEFAULT_SOURCE or _GNU_SOURCE. The difference being (according to GNU documentation):

_GNU_SOURCE: everything is included: ISO C89, ISO C99, POSIX.1, POSIX.2, BSD, SVID, X/Open, LFS, and GNU extensions. In the cases where POSIX.1 conflicts with BSD, the POSIX definitions take precedence.
_DEFAULT_SOURCE: most features are included apart from X/Open, LFS and GNU extensions: the effect is to enable features from the 2008 edition of POSIX, as well as certain BSD and SVID features without a separate feature test macro to control them.

The documentation recommends _GNU_SOURCE for new programs. However, _GNU_SOURCE preferring POSIX definitions over BSD seems to cause strerror_r() compatibility/detection issues on Darwin that are not present with _DEFAULT_SOURCE. Because _DEFAULT_SOURCE does not prompt these issues while still enabling the set of features required and used by the C driver, _DEFAULT_SOURCE was selected and _GNU_SOURCE removed.
To permit validating changes on Darwin, this PR includes a drive-by fix of build failures on Darwin due to #890. Since this fix requires modifying the zlib bundle (last updated in 2018), I would appreciate some confirmation as to whether the changes made are appropriate. If we wish to leave the zlib sources unmodified, we can choose to selectively exclude _DEFAULT_SOURCE during compilation of the zlib bundle instead.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,920,2021-12-23T16:23:24Z,2022-01-05T15:19:38Z,2022-01-05T15:19:41Z,MERGED,True,17,23,5,https://github.com/eramongodb,CDRIVER-4249 Apply _DEFAULT_SOURCE to all subdirectories,9,[],https://github.com/mongodb/mongo-c-driver/pull/920,https://github.com/eramongodb,2,https://github.com/mongodb/mongo-c-driver/pull/920#issuecomment-1000430721,"Per CDRIVER-4249, this PR cleans up feature test macros used to enable non-conforming C language extensions such as POSIX and BSD library functions.
The _BSD_SOURCE macro is a deprecated alias of _DEFAULT_SOURCE, so it was removed in favor of the already-present _DEFAULT_SOURCE.
There was a choice available as to whether to use _DEFAULT_SOURCE or _GNU_SOURCE. The difference being (according to GNU documentation):

_GNU_SOURCE: everything is included: ISO C89, ISO C99, POSIX.1, POSIX.2, BSD, SVID, X/Open, LFS, and GNU extensions. In the cases where POSIX.1 conflicts with BSD, the POSIX definitions take precedence.
_DEFAULT_SOURCE: most features are included apart from X/Open, LFS and GNU extensions: the effect is to enable features from the 2008 edition of POSIX, as well as certain BSD and SVID features without a separate feature test macro to control them.

The documentation recommends _GNU_SOURCE for new programs. However, _GNU_SOURCE preferring POSIX definitions over BSD seems to cause strerror_r() compatibility/detection issues on Darwin that are not present with _DEFAULT_SOURCE. Because _DEFAULT_SOURCE does not prompt these issues while still enabling the set of features required and used by the C driver, _DEFAULT_SOURCE was selected and _GNU_SOURCE removed.
To permit validating changes on Darwin, this PR includes a drive-by fix of build failures on Darwin due to #890. Since this fix requires modifying the zlib bundle (last updated in 2018), I would appreciate some confirmation as to whether the changes made are appropriate. If we wish to leave the zlib sources unmodified, we can choose to selectively exclude _DEFAULT_SOURCE during compilation of the zlib bundle instead.","@jmikola Regarding PHPC, the changes in this PR suggest that defining _DEFAULT_SOURCE alone should (hopefully) suffice for building the entire C driver via autotools. Please let me know if you observe otherwise.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,921,2021-12-23T19:31:20Z,2022-01-04T20:02:25Z,2022-01-04T20:02:30Z,MERGED,True,248,326,20,https://github.com/jmikola,CDRIVER-3723 finalize URI during client/pool construction,21,[],https://github.com/mongodb/mongo-c-driver/pull/921,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/921,"https://jira.mongodb.org/browse/CDRIVER-3723
https://jira.mongodb.org/browse/CDRIVER-4251
Introduces new mongoc_client_new_from_uri_with_error and mongoc_client_pool_new_with_error methods. Also addresses topology leak in mongoc_client_new_from_uri (CDRIVER-4251).
As a behavioral change, clients and pools can no longer be constructed with an invalid topology. This means that failures during SRV lookup and/or URI finalization will result in the client/pool constructors returning null.
This PR is an alternative to #919.","https://jira.mongodb.org/browse/CDRIVER-3723
https://jira.mongodb.org/browse/CDRIVER-4251
Introduces new mongoc_client_new_from_uri_with_error and mongoc_client_pool_new_with_error methods. Also addresses topology leak in mongoc_client_new_from_uri (CDRIVER-4251).
As a behavioral change, clients and pools can no longer be constructed with an invalid topology. This means that failures during SRV lookup and/or URI finalization will result in the client/pool constructors returning null.
This PR is an alternative to #919.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,921,2021-12-23T19:31:20Z,2022-01-04T20:02:25Z,2022-01-04T20:02:30Z,MERGED,True,248,326,20,https://github.com/jmikola,CDRIVER-3723 finalize URI during client/pool construction,21,[],https://github.com/mongodb/mongo-c-driver/pull/921,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/921#issuecomment-1002768061,"https://jira.mongodb.org/browse/CDRIVER-3723
https://jira.mongodb.org/browse/CDRIVER-4251
Introduces new mongoc_client_new_from_uri_with_error and mongoc_client_pool_new_with_error methods. Also addresses topology leak in mongoc_client_new_from_uri (CDRIVER-4251).
As a behavioral change, clients and pools can no longer be constructed with an invalid topology. This means that failures during SRV lookup and/or URI finalization will result in the client/pool constructors returning null.
This PR is an alternative to #919.","Regarding the two most recent build failures:

debug-compile-sasl-openssl does not fail locally, and this is a mock server test. I wonder if this is a flaky test specific to Windows.
test-asan-4.4-sharded-auth-nosasl-openssl is a new flaky test being tracked in CDRIVER-4252.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,921,2021-12-23T19:31:20Z,2022-01-04T20:02:25Z,2022-01-04T20:02:30Z,MERGED,True,248,326,20,https://github.com/jmikola,CDRIVER-3723 finalize URI during client/pool construction,21,[],https://github.com/mongodb/mongo-c-driver/pull/921,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/921#issuecomment-1002796776,"https://jira.mongodb.org/browse/CDRIVER-3723
https://jira.mongodb.org/browse/CDRIVER-4251
Introduces new mongoc_client_new_from_uri_with_error and mongoc_client_pool_new_with_error methods. Also addresses topology leak in mongoc_client_new_from_uri (CDRIVER-4251).
As a behavioral change, clients and pools can no longer be constructed with an invalid topology. This means that failures during SRV lookup and/or URI finalization will result in the client/pool constructors returning null.
This PR is an alternative to #919.","Regarding the two most recent build failures:

debug-compile-sasl-openssl does not fail locally, and this is a mock server test. I wonder if this is a flaky test specific to Windows.


It looks unrelated to these changes. Filed CDRIVER-4257.",True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,922,2021-12-29T01:14:14Z,2021-12-29T11:24:30Z,2021-12-29T11:24:35Z,MERGED,True,1,1,1,https://github.com/rcsanchez97,add option to ignore system CMake,1,[],https://github.com/mongodb/mongo-c-driver/pull/922,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/922,"(This change would help facilitate building on platforms with a system CMake that is too old, like Amazon Linux 2, that has CMake version 2.8 at /usr/bin/cmake).
Evergreen patch build: https://spruce.mongodb.com/version/61cba5b63e8e86449da91664/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC","(This change would help facilitate building on platforms with a system CMake that is too old, like Amazon Linux 2, that has CMake version 2.8 at /usr/bin/cmake).
Evergreen patch build: https://spruce.mongodb.com/version/61cba5b63e8e86449da91664/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,923,2021-12-29T21:01:22Z,2022-01-05T15:50:15Z,2022-01-05T15:50:16Z,MERGED,True,21,1,4,https://github.com/kevinAlbs,CDRIVER-4240 add macOS m1 variant with compile task,9,[],https://github.com/mongodb/mongo-c-driver/pull/923,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/923,"Summary
Add a variant to test compile and unit tests with macOS m1.
Patch build: https://spruce.mongodb.com/version/61cccb5632f4177dc78c4356
Rationale
This will give some assurance that platform specific code compiles on macOS m1, and will enable testing for #894.","Summary
Add a variant to test compile and unit tests with macOS m1.
Patch build: https://spruce.mongodb.com/version/61cccb5632f4177dc78c4356
Rationale
This will give some assurance that platform specific code compiles on macOS m1, and will enable testing for #894.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,924,2022-01-05T19:03:04Z,2022-01-06T01:19:55Z,2022-01-06T01:19:57Z,MERGED,True,23,0,2,https://github.com/kevinAlbs,update NEWS for 1.20.1,2,[],https://github.com/mongodb/mongo-c-driver/pull/924,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/924,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,925,2022-01-05T20:00:12Z,2022-01-05T20:41:57Z,2022-01-05T20:42:03Z,MERGED,True,6,0,1,https://github.com/rcsanchez97,1.20.1 debian packaging,2,[],https://github.com/mongodb/mongo-c-driver/pull/925,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/925,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,926,2022-01-13T18:25:33Z,2022-01-28T17:09:12Z,2022-01-28T17:09:15Z,MERGED,True,5186,11816,52,https://github.com/eramongodb,CDRIVER-4098 Bump WIRE_VERSION_MIN from 3 to 6,24,[],https://github.com/mongodb/mongo-c-driver/pull/926,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/926,"Per CDRIVER-4098:

MongoDB 3.4 reached end of life in January of 2020. MongoDB 3.6 (which reached end of life in April 2021, but seems likely to still exist in Atlas for some time) introduced OP_MSG, which replaced the previous wire protocol for MongoDB. 3.6 seems like the right new minimum server version.

Therefore, the minimum wire version supported by the C driver should now be wire version 6. Correspondingly, this PR modifies the WIRE_VERSION_MIN macro defined in mongoc-client-private.h and raises it from 3 to 6.
Bumping WIRE_VERSION_MIN
The minimum wire version is enforced in the client implementation by _mongoc_topology_description_check_compatible(), which is invoked by mongoc_topology_description_handle_hello(). There are also various feature compatibility checks spread throughout the client, tested as demanded by corresponding operations. These checks have been left unchanged. Followup changes to simplify or remove the client implementation according to the new minimum wire version are not included in this PR.
request parameter for mock_server_replies_to_find()
Numerous tests are written using a pattern similar to the following:
future = future_cursor_next (cursor, &doc);
request = mock_server_receives_request (server);
mock_server_replies_to_find (request, /* ... */);
Despite mock_server_receives_request() potentially returning a NULL result (on timeout, such as due to no compatible servers being found), the test code and mock_server_replies_to_find() assume request is not-null. A precondition check was therefore added to improve the resulting error message when this condition is violated.
Minimum wire version compatibility error message
Previously, the C driver reports compatibility failure with the following message:

Server at %{host_and_port} reports wire version %{max_wire_version}, but this version of libmongoc requires at least 3 (MongoDB 3.0)

The hardcoded wire version and server version numbers are replaced with substitution of WIRE_VERSION_MIN and a new _mongoc_wire_version_to_server_version() function to obtain the corresponding server version number:

Server at %{host_and_port} reports wire version %{max_wire_version}, but this version of libmongoc requires at least %{WIRE_VERSION_MIN} (MongoDB %{server_version})

Removal of Evergreen tasks
All tasks designed to be tested against MongoDB server versions earlier than 3.6 (corresponding to wire version < 6) have been removed. 220 tasks were removed in total, bringing the total number of Evergreen tasks for the mongo-c-project down from 1040 to 820.
Minimum wire version check in mock servers
The mock server creation functions were updated to forbid max_wire_version arguments with values below WIRE_VERSION_MIN, and branches conditioned on wire version < 6 were removed accordingly. Tests that require specifying a minWireVersion lower than WIRE_VERSION_MIN (or a maxWireVersion greater than WIRE_VERSION_MAX) are still free to do so using the mock_server_auto_hello() function, such as in test_wire_version().
Test code conditioned on wire version < 6
All checks assuming wire version >= 6 were removed for redundancy, and all tests requiring wire version < 6 were removed and remaining test names modified accordingly. The full diff of old tests vs. new tests are as follows:
Before                                                | After
/BulkOperation/opts/collation/multi/w0/wire4          <
/BulkOperation/opts/collation/multi/w0/wire5          | /BulkOperation/opts/collation/multi/w0
/BulkOperation/opts/collation/multi/w1/wire4          <
/BulkOperation/opts/collation/multi/w1/wire5          | /BulkOperation/opts/collation/multi/w1
/BulkOperation/opts/collation/w0/wire4                <
/BulkOperation/opts/collation/w0/wire5                | /BulkOperation/opts/collation/w0
/BulkOperation/opts/collation/w1/wire4                <
/BulkOperation/opts/collation/w1/wire5                | /BulkOperation/opts/collation/w1
/BulkOperation/update_arrayfilters/unsupported        <
/Client/command_with_opts/legacy                      <
/Cluster/command/notprimary                           <
/Cluster/command_error/op_query                       <
/Cluster/not_primary/pooled/op_msg                    | /Cluster/not_primary/pooled
/Cluster/not_primary/pooled/op_query                  <
/Cluster/not_primary/single/op_msg                    | /Cluster/not_primary/single
/Cluster/not_primary/single/op_query                  <
/Cluster/not_primary_auth/pooled/op_msg               | /Cluster/not_primary_auth/pooled
/Cluster/not_primary_auth/pooled/op_query             <
/Cluster/not_primary_auth/single/op_msg               | /Cluster/not_primary_auth/single
/Cluster/not_primary_auth/single/op_query             <
/Collection/aggregate/collation/wire4                 <
/Collection/aggregate/collation/wire5                 | /Collection/aggregate/collation
/Collection/count/collation/wire4                     <
/Collection/count/collation/wire5                     | /Collection/count/collation
/Collection/find_and_modify/write_concern_pre_32      <
/Collection/find_with_opts/collation/error            <
/Collection/index/collation/wire4                     <
/Collection/index/collation/wire5                     | /Collection/index/collation
/counters/op_getmore_killcursors                      <
/counters/op_query                                    <
/Cursor/client_kill_cursor/with_primary/wv4           <
/Cursor/client_kill_cursor/without_primary/wv4        <
/Cursor/kill/pooled/cmd                               <
/Cursor/kill/single/cmd                               <
/Database/aggregate/writeConcern                      <
/find_and_modify/collation/fail                       <
/find_and_modify/collation/ok                         | /find_and_modify/collation
/find_and_modify/find_and_modify/write_concern_pre_32 <
/ReadConcern/allowed/explicit                         | /ReadConcern/explicit
/ReadConcern/allowed/inherited                        | /ReadConcern/inherited
/ReadConcern/prohibited/explicit                      <
/ReadConcern/prohibited/inherited                     <
/WriteCommand/split_opquery_with_options              <
/WriteCommand/w0_legacy_insert_many                   <
/WriteCommand/w0_legacy_update_and_replace_validation <
/WriteCommand/w0_legacy_update_one                    <
/WriteConcern/allowed                                 | /WriteConcern
/WriteConcern/prohibited                              <

Wire version integer literals -> wire version feature macros
All instances of the wire version being specified using an integer literal (e.g. mock_server_with_auto_hello (6)) were updated to use a corresponding wire version macro instead (e.g. mock_server_with_auto_hello (WIRE_VERSION_OP_MSG)). Any instances of test code using wire version literals < 6 were updated or removed accordingly.
Wire version string literals -> wire version feature macros
Similarly, all instances of the wire version being specified as part of a string literal (e.g. ""'minWireVersion': 6"") were updated to use a corresponding wire version macro instead (e.g. ""'minWireVersion': %d"" + WIRE_VERSION_MIN). Any existing instances of hardcoded 'minWireVersion' were replaced with WIRE_VERSION_MIN, and any existing instances of 'maxWireVersion' were replaced with WIRE_VERSION_MAX. Any instances of test code using wire version literals < 6 were updated or removed accordingly.
mock_server_receives_bulk_msg()
This function was added primarily to assist with updating the test_bulk_error_unordered() test.
mock_server_receives_command() -> mock_server_receives_msg()
This constitutes the majority of the changes in this PR. Wire version 6 introduces support for OP_MSG, and the client is implemented to prefer OP_MSG over OP_QUERY if able. Therefore, numerous tests written assuming the mock server receives an OP_QUERY (via mock_server_receives_command() or mock_server_receives_query()) must be updated to expect and handle an OP_MSG (via mock_server_receives_msg()) instead. Most of the changes followed patterns similar to one of the following:
- mock_server_receives_command (server, ""db"", MONGOC_QUERY_SECONDARY_OK, ""{'ping': 1}"");
+ mock_server_receives_msg (server, MONGOC_MSG_NONE, tmp_bson (""{'$db': 'db', 'ping': 1}""));
- mock_server_receives_command (mock_server, ""test"", MONGOC_QUERY_NONE, ""{..., 'documents': [{'_id': 1}]}"");
+ mock_server_receives_msg (mock_server, MONGOC_MSG_NONE, tmp_bson (""{'$db': 'db', ...}""), tmp_bson (""{'_id': 1}""));
- mock_server_receives_query (server, ""db.test"", MONGOC_QUERY_SECONDARY_OK, 0, 0, ""{}"", NULL);
+ mock_server_receives_msg (server, MONGOC_MSG_NONE, tmp_bson (""{'$db': 'db', 'find': 'test', 'filter': {}}""));
The mock_server_receives_query() function cannot yet be removed due to being used for testing support for exhaust cursor fallback behavior.
Several minor changes to contents of messages were also required to address new '$readPreference' inclusion behavior, new '$writeConcern' inclusion behavior, and fields requiring explicit '$numberLong'.
As drive-by fixes, mock_server_auto_endsessions() and capture_logs() were added to several tests to improve both test suite performance and reduce noise in test output.","Per CDRIVER-4098:

MongoDB 3.4 reached end of life in January of 2020. MongoDB 3.6 (which reached end of life in April 2021, but seems likely to still exist in Atlas for some time) introduced OP_MSG, which replaced the previous wire protocol for MongoDB. 3.6 seems like the right new minimum server version.

Therefore, the minimum wire version supported by the C driver should now be wire version 6. Correspondingly, this PR modifies the WIRE_VERSION_MIN macro defined in mongoc-client-private.h and raises it from 3 to 6.
Bumping WIRE_VERSION_MIN
The minimum wire version is enforced in the client implementation by _mongoc_topology_description_check_compatible(), which is invoked by mongoc_topology_description_handle_hello(). There are also various feature compatibility checks spread throughout the client, tested as demanded by corresponding operations. These checks have been left unchanged. Followup changes to simplify or remove the client implementation according to the new minimum wire version are not included in this PR.
request parameter for mock_server_replies_to_find()
Numerous tests are written using a pattern similar to the following:
future = future_cursor_next (cursor, &doc);
request = mock_server_receives_request (server);
mock_server_replies_to_find (request, /* ... */);
Despite mock_server_receives_request() potentially returning a NULL result (on timeout, such as due to no compatible servers being found), the test code and mock_server_replies_to_find() assume request is not-null. A precondition check was therefore added to improve the resulting error message when this condition is violated.
Minimum wire version compatibility error message
Previously, the C driver reports compatibility failure with the following message:

Server at %{host_and_port} reports wire version %{max_wire_version}, but this version of libmongoc requires at least 3 (MongoDB 3.0)

The hardcoded wire version and server version numbers are replaced with substitution of WIRE_VERSION_MIN and a new _mongoc_wire_version_to_server_version() function to obtain the corresponding server version number:

Server at %{host_and_port} reports wire version %{max_wire_version}, but this version of libmongoc requires at least %{WIRE_VERSION_MIN} (MongoDB %{server_version})

Removal of Evergreen tasks
All tasks designed to be tested against MongoDB server versions earlier than 3.6 (corresponding to wire version < 6) have been removed. 220 tasks were removed in total, bringing the total number of Evergreen tasks for the mongo-c-project down from 1040 to 820.
Minimum wire version check in mock servers
The mock server creation functions were updated to forbid max_wire_version arguments with values below WIRE_VERSION_MIN, and branches conditioned on wire version < 6 were removed accordingly. Tests that require specifying a minWireVersion lower than WIRE_VERSION_MIN (or a maxWireVersion greater than WIRE_VERSION_MAX) are still free to do so using the mock_server_auto_hello() function, such as in test_wire_version().
Test code conditioned on wire version < 6
All checks assuming wire version >= 6 were removed for redundancy, and all tests requiring wire version < 6 were removed and remaining test names modified accordingly. The full diff of old tests vs. new tests are as follows:
Before                                                | After
/BulkOperation/opts/collation/multi/w0/wire4          <
/BulkOperation/opts/collation/multi/w0/wire5          | /BulkOperation/opts/collation/multi/w0
/BulkOperation/opts/collation/multi/w1/wire4          <
/BulkOperation/opts/collation/multi/w1/wire5          | /BulkOperation/opts/collation/multi/w1
/BulkOperation/opts/collation/w0/wire4                <
/BulkOperation/opts/collation/w0/wire5                | /BulkOperation/opts/collation/w0
/BulkOperation/opts/collation/w1/wire4                <
/BulkOperation/opts/collation/w1/wire5                | /BulkOperation/opts/collation/w1
/BulkOperation/update_arrayfilters/unsupported        <
/Client/command_with_opts/legacy                      <
/Cluster/command/notprimary                           <
/Cluster/command_error/op_query                       <
/Cluster/not_primary/pooled/op_msg                    | /Cluster/not_primary/pooled
/Cluster/not_primary/pooled/op_query                  <
/Cluster/not_primary/single/op_msg                    | /Cluster/not_primary/single
/Cluster/not_primary/single/op_query                  <
/Cluster/not_primary_auth/pooled/op_msg               | /Cluster/not_primary_auth/pooled
/Cluster/not_primary_auth/pooled/op_query             <
/Cluster/not_primary_auth/single/op_msg               | /Cluster/not_primary_auth/single
/Cluster/not_primary_auth/single/op_query             <
/Collection/aggregate/collation/wire4                 <
/Collection/aggregate/collation/wire5                 | /Collection/aggregate/collation
/Collection/count/collation/wire4                     <
/Collection/count/collation/wire5                     | /Collection/count/collation
/Collection/find_and_modify/write_concern_pre_32      <
/Collection/find_with_opts/collation/error            <
/Collection/index/collation/wire4                     <
/Collection/index/collation/wire5                     | /Collection/index/collation
/counters/op_getmore_killcursors                      <
/counters/op_query                                    <
/Cursor/client_kill_cursor/with_primary/wv4           <
/Cursor/client_kill_cursor/without_primary/wv4        <
/Cursor/kill/pooled/cmd                               <
/Cursor/kill/single/cmd                               <
/Database/aggregate/writeConcern                      <
/find_and_modify/collation/fail                       <
/find_and_modify/collation/ok                         | /find_and_modify/collation
/find_and_modify/find_and_modify/write_concern_pre_32 <
/ReadConcern/allowed/explicit                         | /ReadConcern/explicit
/ReadConcern/allowed/inherited                        | /ReadConcern/inherited
/ReadConcern/prohibited/explicit                      <
/ReadConcern/prohibited/inherited                     <
/WriteCommand/split_opquery_with_options              <
/WriteCommand/w0_legacy_insert_many                   <
/WriteCommand/w0_legacy_update_and_replace_validation <
/WriteCommand/w0_legacy_update_one                    <
/WriteConcern/allowed                                 | /WriteConcern
/WriteConcern/prohibited                              <

Wire version integer literals -> wire version feature macros
All instances of the wire version being specified using an integer literal (e.g. mock_server_with_auto_hello (6)) were updated to use a corresponding wire version macro instead (e.g. mock_server_with_auto_hello (WIRE_VERSION_OP_MSG)). Any instances of test code using wire version literals < 6 were updated or removed accordingly.
Wire version string literals -> wire version feature macros
Similarly, all instances of the wire version being specified as part of a string literal (e.g. ""'minWireVersion': 6"") were updated to use a corresponding wire version macro instead (e.g. ""'minWireVersion': %d"" + WIRE_VERSION_MIN). Any existing instances of hardcoded 'minWireVersion' were replaced with WIRE_VERSION_MIN, and any existing instances of 'maxWireVersion' were replaced with WIRE_VERSION_MAX. Any instances of test code using wire version literals < 6 were updated or removed accordingly.
mock_server_receives_bulk_msg()
This function was added primarily to assist with updating the test_bulk_error_unordered() test.
mock_server_receives_command() -> mock_server_receives_msg()
This constitutes the majority of the changes in this PR. Wire version 6 introduces support for OP_MSG, and the client is implemented to prefer OP_MSG over OP_QUERY if able. Therefore, numerous tests written assuming the mock server receives an OP_QUERY (via mock_server_receives_command() or mock_server_receives_query()) must be updated to expect and handle an OP_MSG (via mock_server_receives_msg()) instead. Most of the changes followed patterns similar to one of the following:
- mock_server_receives_command (server, ""db"", MONGOC_QUERY_SECONDARY_OK, ""{'ping': 1}"");
+ mock_server_receives_msg (server, MONGOC_MSG_NONE, tmp_bson (""{'$db': 'db', 'ping': 1}""));
- mock_server_receives_command (mock_server, ""test"", MONGOC_QUERY_NONE, ""{..., 'documents': [{'_id': 1}]}"");
+ mock_server_receives_msg (mock_server, MONGOC_MSG_NONE, tmp_bson (""{'$db': 'db', ...}""), tmp_bson (""{'_id': 1}""));
- mock_server_receives_query (server, ""db.test"", MONGOC_QUERY_SECONDARY_OK, 0, 0, ""{}"", NULL);
+ mock_server_receives_msg (server, MONGOC_MSG_NONE, tmp_bson (""{'$db': 'db', 'find': 'test', 'filter': {}}""));
The mock_server_receives_query() function cannot yet be removed due to being used for testing support for exhaust cursor fallback behavior.
Several minor changes to contents of messages were also required to address new '$readPreference' inclusion behavior, new '$writeConcern' inclusion behavior, and fields requiring explicit '$numberLong'.
As drive-by fixes, mock_server_auto_endsessions() and capture_logs() were added to several tests to improve both test suite performance and reduce noise in test output.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,927,2022-01-18T21:33:48Z,2022-01-19T19:07:45Z,2022-01-19T19:15:57Z,MERGED,True,62,57,1,https://github.com/eramongodb,CDRIVER-4237 - Address incompatible pointer warnings on GCC 4.8.5,6,[],https://github.com/mongodb/mongo-c-driver/pull/927,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/927,"This PR aims to resolve CDRIVER-4237, depended on by PHP-2013.
Four Three types of warnings are addressed by this PR (as described by GCC 4.8.5):

ISO C does not allow extra ; outside of a function [-Wpedantic]
passing argument {N} of {func} from incompatible pointer type [enabled by default]
pointer targets in passing argument {N} of {func} differ in signedness [-Wpointer-sign]
empty macro arguments are undefined in ISO C90 and ISO C++98 [enabled by default]

Followup changes in addition to the current set may need to be added to fully resolve PHPC-2013. These will be added as demanded in response to code review.","This PR aims to resolve CDRIVER-4237, depended on by PHP-2013.
Four Three types of warnings are addressed by this PR (as described by GCC 4.8.5):

ISO C does not allow extra ; outside of a function [-Wpedantic]
passing argument {N} of {func} from incompatible pointer type [enabled by default]
pointer targets in passing argument {N} of {func} differ in signedness [-Wpointer-sign]
empty macro arguments are undefined in ISO C90 and ISO C++98 [enabled by default]

Followup changes in addition to the current set may need to be added to fully resolve PHPC-2013. These will be added as demanded in response to code review.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,927,2022-01-18T21:33:48Z,2022-01-19T19:07:45Z,2022-01-19T19:15:57Z,MERGED,True,62,57,1,https://github.com/eramongodb,CDRIVER-4237 - Address incompatible pointer warnings on GCC 4.8.5,6,[],https://github.com/mongodb/mongo-c-driver/pull/927,https://github.com/eramongodb,2,https://github.com/mongodb/mongo-c-driver/pull/927#issuecomment-1015884463,"This PR aims to resolve CDRIVER-4237, depended on by PHP-2013.
Four Three types of warnings are addressed by this PR (as described by GCC 4.8.5):

ISO C does not allow extra ; outside of a function [-Wpedantic]
passing argument {N} of {func} from incompatible pointer type [enabled by default]
pointer targets in passing argument {N} of {func} differ in signedness [-Wpointer-sign]
empty macro arguments are undefined in ISO C90 and ISO C++98 [enabled by default]

Followup changes in addition to the current set may need to be added to fully resolve PHPC-2013. These will be added as demanded in response to code review.","Reverted ""fixes"" to empty macro arguments that were not sufficiently tested for correctness.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,927,2022-01-18T21:33:48Z,2022-01-19T19:07:45Z,2022-01-19T19:15:57Z,MERGED,True,62,57,1,https://github.com/eramongodb,CDRIVER-4237 - Address incompatible pointer warnings on GCC 4.8.5,6,[],https://github.com/mongodb/mongo-c-driver/pull/927,https://github.com/eramongodb,3,https://github.com/mongodb/mongo-c-driver/pull/927#issuecomment-1016636381,"This PR aims to resolve CDRIVER-4237, depended on by PHP-2013.
Four Three types of warnings are addressed by this PR (as described by GCC 4.8.5):

ISO C does not allow extra ; outside of a function [-Wpedantic]
passing argument {N} of {func} from incompatible pointer type [enabled by default]
pointer targets in passing argument {N} of {func} differ in signedness [-Wpointer-sign]
empty macro arguments are undefined in ISO C90 and ISO C++98 [enabled by default]

Followup changes in addition to the current set may need to be added to fully resolve PHPC-2013. These will be added as demanded in response to code review.","What version of clang-format are you using? Or did you do some other formatting formatting?

@vector-of-bool I am using .clang-format as provided by the C driver repository. Normally I use the clang-format executable as provided via VS Code's C/C++ extension. Running the system clang-format executable (clang version 10.0.0-4ubuntu1) from project root with the command clang-format --style=file -i src/libbson/src/bson/bson-atomic.h yields the same result.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,928,2022-01-19T10:56:11Z,2022-01-19T17:53:05Z,2022-01-19T17:53:05Z,MERGED,True,1,1,1,https://github.com/pespin,bson-atomic.h: Fix compiler warning in bson_atomic_thread_fence(),1,[],https://github.com/mongodb/mongo-c-driver/pull/928,https://github.com/pespin,1,https://github.com/mongodb/mongo-c-driver/pull/928,"Fixes following compiler warning appearing constantly while building
open5gs project, which uses libbson:
/usr/include/libbson-1.0/bson/bson-atomic.h:725:1: warning: function declaration isn’t a prototype [-Wstrict-prototypes]
725 | bson_atomic_thread_fence ()
| ^~~~~~~~~~~~~~~~~~~~~~~~","Fixes following compiler warning appearing constantly while building
open5gs project, which uses libbson:
/usr/include/libbson-1.0/bson/bson-atomic.h:725:1: warning: function declaration isn’t a prototype [-Wstrict-prototypes]
725 | bson_atomic_thread_fence ()
| ^~~~~~~~~~~~~~~~~~~~~~~~",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,929,2022-01-19T23:46:36Z,2022-01-20T03:23:32Z,2022-01-20T03:54:57Z,CLOSED,False,79,209,5,https://github.com/vector-of-bool,CDRIVER-4231: New OID randomness initialization,5,[],https://github.com/mongodb/mongo-c-driver/pull/929,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/929,This PR got in a weird state somehow. Please ignore.,This PR got in a weird state somehow. Please ignore.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,930,2022-01-20T01:32:31Z,2022-02-18T23:30:04Z,2022-02-18T23:30:04Z,MERGED,True,884,271,40,https://github.com/chardan,CDRIVER-3992 - Use OP_MSG if a server API version is requested,70,[],https://github.com/mongodb/mongo-c-driver/pull/930,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/930,"When a client has selected a specific server API, OPCODE_MSG should be used instead of OPCODE_QUERY (legacy) for the initial handshake.
https://jira.mongodb.org/browse/CDRIVER-3992
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","When a client has selected a specific server API, OPCODE_MSG should be used instead of OPCODE_QUERY (legacy) for the initial handshake.
https://jira.mongodb.org/browse/CDRIVER-3992
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,930,2022-01-20T01:32:31Z,2022-02-18T23:30:04Z,2022-02-18T23:30:04Z,MERGED,True,884,271,40,https://github.com/chardan,CDRIVER-3992 - Use OP_MSG if a server API version is requested,70,[],https://github.com/mongodb/mongo-c-driver/pull/930,https://github.com/chardan,2,https://github.com/mongodb/mongo-c-driver/pull/930#issuecomment-1017031318,"When a client has selected a specific server API, OPCODE_MSG should be used instead of OPCODE_QUERY (legacy) for the initial handshake.
https://jira.mongodb.org/browse/CDRIVER-3992
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com",Note that I haven't run clang-format on this yet.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,930,2022-01-20T01:32:31Z,2022-02-18T23:30:04Z,2022-02-18T23:30:04Z,MERGED,True,884,271,40,https://github.com/chardan,CDRIVER-3992 - Use OP_MSG if a server API version is requested,70,[],https://github.com/mongodb/mongo-c-driver/pull/930,https://github.com/chardan,3,https://github.com/mongodb/mongo-c-driver/pull/930#issuecomment-1028482031,"When a client has selected a specific server API, OPCODE_MSG should be used instead of OPCODE_QUERY (legacy) for the initial handshake.
https://jira.mongodb.org/browse/CDRIVER-3992
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","When the environment variable MONGODB_API_VERSION is set, there are still some tests that can break, especially ""/retryable_writes/*"". Some of these also fail when that environment variable is NOT set. This suite has a different implementation style than most of the others, I'm working on a fix.
I have filed a new ticket to address important clarification issues that I would prefer to defer from this changeset in order to do the further work from a working feature:
https://jira.mongodb.org/browse/CDRIVER-4280",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,930,2022-01-20T01:32:31Z,2022-02-18T23:30:04Z,2022-02-18T23:30:04Z,MERGED,True,884,271,40,https://github.com/chardan,CDRIVER-3992 - Use OP_MSG if a server API version is requested,70,[],https://github.com/mongodb/mongo-c-driver/pull/930,https://github.com/chardan,4,https://github.com/mongodb/mongo-c-driver/pull/930#issuecomment-1028511404,"When a client has selected a specific server API, OPCODE_MSG should be used instead of OPCODE_QUERY (legacy) for the initial handshake.
https://jira.mongodb.org/browse/CDRIVER-3992
Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com","(Sorry for the force push, I did some rebasing!)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,931,2022-01-20T03:55:29Z,2022-01-25T22:18:40Z,2022-01-25T22:18:41Z,MERGED,True,318,469,12,https://github.com/vector-of-bool,CDRIVER-4231: New random generation of OID values,6,[],https://github.com/mongodb/mongo-c-driver/pull/931,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/931,"bson-context initializes five bytes with randomness. Previously, this was done by XOR'ing certain machine attribute into an integral seed value, and then calling rand_r(seed) to get a random value. Using plain XOR on those attributes would very often result in a seed collision, and rand_r() would only return four bytes of randomness, with the fifth byte being generated by another call to rand_r(), and the two sequence counters initialized with further calls to rand_r(). This resulted in at most 32 bits of randomness being used for nine bytes of random output, and the seed was very likely to collide in the first place.
This changeset instead generates a struct containing those same machine attributes, and then performs a SipHash of the bit representation of that struct, resulting in 16 bytes of psuedorandomness. These bytes are then stored as the random data and used to initialize the sequence counters.
The changeset has tweaked a few aspects of the context, which may need be un-tweaked.","bson-context initializes five bytes with randomness. Previously, this was done by XOR'ing certain machine attribute into an integral seed value, and then calling rand_r(seed) to get a random value. Using plain XOR on those attributes would very often result in a seed collision, and rand_r() would only return four bytes of randomness, with the fifth byte being generated by another call to rand_r(), and the two sequence counters initialized with further calls to rand_r(). This resulted in at most 32 bits of randomness being used for nine bytes of random output, and the seed was very likely to collide in the first place.
This changeset instead generates a struct containing those same machine attributes, and then performs a SipHash of the bit representation of that struct, resulting in 16 bytes of psuedorandomness. These bytes are then stored as the random data and used to initialize the sequence counters.
The changeset has tweaked a few aspects of the context, which may need be un-tweaked.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,932,2022-01-21T19:48:13Z,2022-01-24T15:32:05Z,2022-01-24T15:32:07Z,MERGED,True,57,87,6,https://github.com/eramongodb,CDRIVER-4264 Address build failures on VS 2013 variants on Evergreen,5,[],https://github.com/mongodb/mongo-c-driver/pull/932,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/932,"Per CDRIVER-4264, there are three compilation errors preventing successful compilation on VS 2013 variants. This PR addresses each of these warnings:

'_Exit' undefined; assuming extern returning int

VS 2013 only provides partial support for the C99 standard. This support apparently does not extend to providing the _Exit function, which is a C99 feature. Given that its use in the test suite (to report the type of signal triggering failure) is not strictly necessary, I have opted for its removal.

'snprintf' undefined; assuming extern returning int

snprintf is also a C99 feature. Some files in libmongoc were directly invoking snprintf despite libbson providing bson_snprintf to address standard / platform compatibility issues. These instances were substituted with bson_snprintf.

'_InterlockedExchangePointer': identifier not found

This issue only manifested when building with VS 2013 targeting x86 (i686). I do not yet fully understand the reason behind this issue. According to a Boost patch (note, ""MSVC-12"" == ""VS 2013"") in response to a report of similar build failures, the issue is apparently due to a conflict between the <intrin.h> and <winnt.h> libraries when targeting x86 with VS 2013. This is in spite of Microsoft documentation indicating support for the intrinsic when targeting x86. Consequently, I have opted to emulating the intrinsic given VS 2013 and x86.","Per CDRIVER-4264, there are three compilation errors preventing successful compilation on VS 2013 variants. This PR addresses each of these warnings:

'_Exit' undefined; assuming extern returning int

VS 2013 only provides partial support for the C99 standard. This support apparently does not extend to providing the _Exit function, which is a C99 feature. Given that its use in the test suite (to report the type of signal triggering failure) is not strictly necessary, I have opted for its removal.

'snprintf' undefined; assuming extern returning int

snprintf is also a C99 feature. Some files in libmongoc were directly invoking snprintf despite libbson providing bson_snprintf to address standard / platform compatibility issues. These instances were substituted with bson_snprintf.

'_InterlockedExchangePointer': identifier not found

This issue only manifested when building with VS 2013 targeting x86 (i686). I do not yet fully understand the reason behind this issue. According to a Boost patch (note, ""MSVC-12"" == ""VS 2013"") in response to a report of similar build failures, the issue is apparently due to a conflict between the <intrin.h> and <winnt.h> libraries when targeting x86 with VS 2013. This is in spite of Microsoft documentation indicating support for the intrinsic when targeting x86. Consequently, I have opted to emulating the intrinsic given VS 2013 and x86.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,932,2022-01-21T19:48:13Z,2022-01-24T15:32:05Z,2022-01-24T15:32:07Z,MERGED,True,57,87,6,https://github.com/eramongodb,CDRIVER-4264 Address build failures on VS 2013 variants on Evergreen,5,[],https://github.com/mongodb/mongo-c-driver/pull/932,https://github.com/eramongodb,2,https://github.com/mongodb/mongo-c-driver/pull/932#issuecomment-1018836031,"Per CDRIVER-4264, there are three compilation errors preventing successful compilation on VS 2013 variants. This PR addresses each of these warnings:

'_Exit' undefined; assuming extern returning int

VS 2013 only provides partial support for the C99 standard. This support apparently does not extend to providing the _Exit function, which is a C99 feature. Given that its use in the test suite (to report the type of signal triggering failure) is not strictly necessary, I have opted for its removal.

'snprintf' undefined; assuming extern returning int

snprintf is also a C99 feature. Some files in libmongoc were directly invoking snprintf despite libbson providing bson_snprintf to address standard / platform compatibility issues. These instances were substituted with bson_snprintf.

'_InterlockedExchangePointer': identifier not found

This issue only manifested when building with VS 2013 targeting x86 (i686). I do not yet fully understand the reason behind this issue. According to a Boost patch (note, ""MSVC-12"" == ""VS 2013"") in response to a report of similar build failures, the issue is apparently due to a conflict between the <intrin.h> and <winnt.h> libraries when targeting x86 with VS 2013. This is in spite of Microsoft documentation indicating support for the intrinsic when targeting x86. Consequently, I have opted to emulating the intrinsic given VS 2013 and x86.",It appears not. A patch build verifying these changes (with minor discrepancies in the diff compared to this PR) are available here for reference.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,933,2022-01-28T17:32:21Z,2022-01-28T18:50:29Z,2022-01-28T18:50:31Z,MERGED,True,1,13,1,https://github.com/eramongodb,Remove c-driver-benchmark-mongo32 from mongo-c-driver-perf,1,[],https://github.com/mongodb/mongo-c-driver/pull/933,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/933,"CDRIVER-4098 (#926) neglected to remove the c-driver-benchmark-mongo32 task from the mongo-c-driver-perf Evergreen matrix. This PR removes this benchmark with MongoDB server 3.2, which is now below the supported minimum wire version corresponding to server 3.6.","CDRIVER-4098 (#926) neglected to remove the c-driver-benchmark-mongo32 task from the mongo-c-driver-perf Evergreen matrix. This PR removes this benchmark with MongoDB server 3.2, which is now below the supported minimum wire version corresponding to server 3.6.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,934,2022-01-28T20:21:50Z,2022-01-31T22:35:31Z,2022-01-31T22:35:33Z,MERGED,True,3,1,2,https://github.com/kevinAlbs,CDRIVER-4260 bump maxWireVersion for MongoDB 5.2,1,[],https://github.com/mongodb/mongo-c-driver/pull/934,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/934,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,934,2022-01-28T20:21:50Z,2022-01-31T22:35:31Z,2022-01-31T22:35:33Z,MERGED,True,3,1,2,https://github.com/kevinAlbs,CDRIVER-4260 bump maxWireVersion for MongoDB 5.2,1,[],https://github.com/mongodb/mongo-c-driver/pull/934,https://github.com/eramongodb,2,https://github.com/mongodb/mongo-c-driver/pull/934#issuecomment-1026130561,,I am observing an abnormal number of test failures on Evergreen. A brief scan through failing tasks does not seem to suggest any obvious consistency in cause of failure. Unclear how many of the failures are flaky tests vs. caused by the proposed changes.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,934,2022-01-28T20:21:50Z,2022-01-31T22:35:31Z,2022-01-31T22:35:33Z,MERGED,True,3,1,2,https://github.com/kevinAlbs,CDRIVER-4260 bump maxWireVersion for MongoDB 5.2,1,[],https://github.com/mongodb/mongo-c-driver/pull/934,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/934#issuecomment-1026153855,,"I am observing an abnormal number of test failures on Evergreen. A brief scan through failing tasks does not seem to suggest any obvious consistency in cause of failure. Unclear how many of the failures are flaky tests vs. caused by the proposed changes.

After inspecting logs of the tasks with a Patch Status FAILED and Base Status of SUCCEEDED, I filed CDRIVER-4274 and found other flaky-tests that look to be the reason.



Task
Patch Status
Base Status
Variant
Reason




test-5.0-server-auth-sasl-openssl-cse
FAILED
SUCCEEDED
*ARM (aarch64) (Ubuntu 18.04)
https://jira.mongodb.org/browse/CDRIVER-4274


test-asan-5.0-sharded-auth-nosasl-openssl
FAILED
SUCCEEDED
ASAN Tests (Ubuntu 18.04)
https://jira.mongodb.org/browse/CDRIVER-4268


test-latest-sharded-noauth-nosasl-nossl
FAILED
SUCCEEDED
*Darwin, macOS (Apple LLVM)
https://jira.mongodb.org/browse/CDRIVER-3690


test-latest-server-noauth-sasl-openssl-static-cse
FAILED
SUCCEEDED
GCC 8.3 (Debian 10.0)
https://jira.mongodb.org/browse/CDRIVER-4274


ocsp-darwinssl-soft_fail_test-rsa-nodelegate-4.4
FAILED
SUCCEEDED
OCSP tests
https://jira.mongodb.org/browse/CDRIVER-3759


compile-tracing
FAILED
SUCCEEDED
**Release Archive Creator
https://jira.mongodb.org/browse/CDRIVER-4111",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,935,2022-01-31T21:49:15Z,2022-02-03T01:16:33Z,2022-02-03T01:16:33Z,MERGED,True,203,186,33,https://github.com/vector-of-bool,Remove use COMMON_PREFIX for decorating common lib names,4,[],https://github.com/mongodb/mongo-c-driver/pull/935,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/935,"The use of COMMON_PREFIX is to ensure that the decorated names are different when compiled into libbson versus libmongoc, but make things quite cluttered and strangely formatted at the call site. While I don't like heavy use on the preprocessor, #define-ing the names to a more readable alias makes it much easier to use and read those decorated names. I chose an arbitrary mcommon prefix for the names, but any sufficiently unique name will do.
(The guard on __INTELLISENSE__ is to hide the decorated names from autocomplete tools.)
(AFAIK, this has no effect on any public API, nor visible symbols in any dynamic libraries.)","The use of COMMON_PREFIX is to ensure that the decorated names are different when compiled into libbson versus libmongoc, but make things quite cluttered and strangely formatted at the call site. While I don't like heavy use on the preprocessor, #define-ing the names to a more readable alias makes it much easier to use and read those decorated names. I chose an arbitrary mcommon prefix for the names, but any sufficiently unique name will do.
(The guard on __INTELLISENSE__ is to hide the decorated names from autocomplete tools.)
(AFAIK, this has no effect on any public API, nor visible symbols in any dynamic libraries.)",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,935,2022-01-31T21:49:15Z,2022-02-03T01:16:33Z,2022-02-03T01:16:33Z,MERGED,True,203,186,33,https://github.com/vector-of-bool,Remove use COMMON_PREFIX for decorating common lib names,4,[],https://github.com/mongodb/mongo-c-driver/pull/935,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/935#issuecomment-1027094109,"The use of COMMON_PREFIX is to ensure that the decorated names are different when compiled into libbson versus libmongoc, but make things quite cluttered and strangely formatted at the call site. While I don't like heavy use on the preprocessor, #define-ing the names to a more readable alias makes it much easier to use and read those decorated names. I chose an arbitrary mcommon prefix for the names, but any sufficiently unique name will do.
(The guard on __INTELLISENSE__ is to hide the decorated names from autocomplete tools.)
(AFAIK, this has no effect on any public API, nor visible symbols in any dynamic libraries.)","The gist of the problem is that the translation units which define the symbols are included in both libbson and libmongoc, so they cannot have the same name unless they have C99/C++ inline linkage. Two clean-er solutions that would forego macros:

Use regular functions, but with attributes [[gnu::weak]]/[[msvc::selectany]], both of which grant the linkage semantics of inline without requiring them to be defined inline. This is non-portable, of course.
Use C99 inline, and just define them inline. This is the most portable and would be my preferred solution, but until we compile everything with C99 support, it's not quite safe. (inline in gnu89 does something very different, and static BSON_INLINE gives the symbols internal linkage, leading to definition duplication in each consuming translation unit.)

In all, I don't feel extremely strongly about these changes. It was just 15 minutes for a QoL improvement. There's other things in common-thread that I also want to clean up more substantially, but that's for another time.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,936,2022-02-01T17:41:36Z,2022-02-01T18:12:41Z,2022-02-01T18:12:48Z,MERGED,True,10,12,3,https://github.com/vector-of-bool,Update docs on topology description queries to reflect const-ness,1,[],https://github.com/mongodb/mongo-c-driver/pull/936,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/936,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,937,2022-02-01T21:34:26Z,2022-02-01T21:34:57Z,2022-02-01T21:34:57Z,MERGED,True,45,0,2,https://github.com/eramongodb,Update NEWS for 1.21.0,1,[],https://github.com/mongodb/mongo-c-driver/pull/937,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/937,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,938,2022-02-03T20:35:01Z,2022-02-03T22:53:55Z,2022-02-03T22:54:28Z,MERGED,True,8,2,2,https://github.com/rcsanchez97,Debian packaging,3,[],https://github.com/mongodb/mongo-c-driver/pull/938,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/938,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,939,2022-02-03T20:35:18Z,2022-02-03T22:54:06Z,2022-02-03T22:54:25Z,MERGED,True,6,0,1,https://github.com/rcsanchez97,Debian packaging,2,[],https://github.com/mongodb/mongo-c-driver/pull/939,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/939,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,940,2022-02-04T04:08:22Z,2022-02-04T14:07:54Z,2022-02-04T14:08:01Z,MERGED,True,13,4,2,https://github.com/rcsanchez97,sync RPM spec file for 1.21.0 release,1,[],https://github.com/mongodb/mongo-c-driver/pull/940,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/940,Patch build: https://spruce.mongodb.com/version/61fca3d71e2d1734d80b3533/tasks,Patch build: https://spruce.mongodb.com/version/61fca3d71e2d1734d80b3533/tasks,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,941,2022-02-04T21:10:35Z,2022-02-13T16:45:24Z,2022-02-13T16:45:42Z,MERGED,True,56,41,4,https://github.com/kevinAlbs,CDRIVER-3573 remove hard-coded versions from test scripts,6,[],https://github.com/mongodb/mongo-c-driver/pull/941,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/941,"Summary

Add a --next-minor version flag to calc_release_version.py.
Remove hard coded version numbers for C driver builds from test scripts.

Background and motivation
calc_release_version.py is used to calculate release versions by inspecting git history. When checked out to a non-release non-master branch, calc_release_version.py prints a version based off of the 1.11.0 tag 1.11.1-20220201+gitf6e6a7025d. The 1.11.0 tag is erroneously on the master branch. Evergreen patch builds check out a revision. That necessitated hard coding the version in test scripts.
It results in this misleading report for the abi-compliance-check task, as well as the documentation uploaded to the make-release-archive task.
Adding a --next-minor flag to calc_release_version.py seemed reasonable to always request to return the ""next minor"" version, regardless of what is checked out.
With the changes applied, the new ABI report and documentation have the correct versions.","Summary

Add a --next-minor version flag to calc_release_version.py.
Remove hard coded version numbers for C driver builds from test scripts.

Background and motivation
calc_release_version.py is used to calculate release versions by inspecting git history. When checked out to a non-release non-master branch, calc_release_version.py prints a version based off of the 1.11.0 tag 1.11.1-20220201+gitf6e6a7025d. The 1.11.0 tag is erroneously on the master branch. Evergreen patch builds check out a revision. That necessitated hard coding the version in test scripts.
It results in this misleading report for the abi-compliance-check task, as well as the documentation uploaded to the make-release-archive task.
Adding a --next-minor flag to calc_release_version.py seemed reasonable to always request to return the ""next minor"" version, regardless of what is checked out.
With the changes applied, the new ABI report and documentation have the correct versions.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,942,2022-02-06T16:47:45Z,2022-02-07T16:22:56Z,2022-02-07T16:22:57Z,MERGED,True,17,11,1,https://github.com/kevinAlbs,CDRIVER-4285 remove example.com from tests,3,[],https://github.com/mongodb/mongo-c-driver/pull/942,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/942,See mongodb/specifications#1136 for the motivation behind this change. This resolves recent inconsistent test failures seen with Client Side Encryption tests.,See mongodb/specifications#1136 for the motivation behind this change. This resolves recent inconsistent test failures seen with Client Side Encryption tests.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,943,2022-02-08T20:45:46Z,2022-02-09T20:14:18Z,2022-02-09T20:14:21Z,MERGED,True,46,8,1,https://github.com/eramongodb,CDRIVER-4284 Avoid empty OpenSSL error condition on handshake failure,4,[],https://github.com/mongodb/mongo-c-driver/pull/943,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/943,CDRIVER-4284 reports a scenario where ERR_get_error is used to construct failure information despite the possibility that the OpenSSL library may not contain error info to be reported. This PR ensures that there is a meaningful error message is guaranteed to be relayed even if OpenSSL does not provide error info.,CDRIVER-4284 reports a scenario where ERR_get_error is used to construct failure information despite the possibility that the OpenSSL library may not contain error info to be reported. This PR ensures that there is a meaningful error message is guaranteed to be relayed even if OpenSSL does not provide error info.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,944,2022-02-09T21:04:39Z,2022-02-09T21:15:04Z,2022-02-09T21:15:06Z,MERGED,True,1,1,1,https://github.com/eramongodb,CDRIVER-4274 Increase wait time for mock KMS server startup to 5 minutes,1,[],https://github.com/mongodb/mongo-c-driver/pull/944,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/944,Flaky mock KMS server startup failures as reported in CDRIVER-4274 seem to be addressed by raising the wait duration up from 1 minute to 5 minutes per patch results (none of the failing tasks are due to mock KMS server startup failure). It seems like the background processes launching the mock KMS servers were not being given enough time (1 minute was too short).,Flaky mock KMS server startup failures as reported in CDRIVER-4274 seem to be addressed by raising the wait duration up from 1 minute to 5 minutes per patch results (none of the failing tasks are due to mock KMS server startup failure). It seems like the background processes launching the mock KMS servers were not being given enough time (1 minute was too short).,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,945,2022-02-10T00:09:14Z,2022-02-10T15:33:34Z,2022-02-10T15:33:37Z,MERGED,True,5,3,1,https://github.com/jmikola,CDRIVER-4290 check for null server stream in _mongoc_cursor_fetch_stream,1,[],https://github.com/mongodb/mongo-c-driver/pull/945,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/945,https://jira.mongodb.org/browse/CDRIVER-4290,https://jira.mongodb.org/browse/CDRIVER-4290,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,946,2022-02-16T15:51:31Z,2022-02-16T19:17:34Z,2022-02-17T05:45:39Z,MERGED,True,2,2,1,https://github.com/remicollet,CDRIVER-4297 use static decls for OpenSSL 1.1 polyfills,1,[],https://github.com/mongodb/mongo-c-driver/pull/946,https://github.com/remicollet,1,https://github.com/mongodb/mongo-c-driver/pull/946,"https://jira.mongodb.org/browse/CDRIVER-4297
See mongodb/mongo-php-driver#1302 for discussion why having these symbol public is bad
Notice: others are already hidden
ex: https://github.com/mongodb/mongo-c-driver/blob/master/src/kms-message/src/kms_crypto_libcrypto.c#L25","https://jira.mongodb.org/browse/CDRIVER-4297
See mongodb/mongo-php-driver#1302 for discussion why having these symbol public is bad
Notice: others are already hidden
ex: https://github.com/mongodb/mongo-c-driver/blob/master/src/kms-message/src/kms_crypto_libcrypto.c#L25",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,947,2022-03-01T20:42:09Z,2022-03-01T20:47:18Z,2022-03-01T20:47:19Z,CLOSED,False,85,7,7,https://github.com/chardan,R1.21,7,[],https://github.com/mongodb/mongo-c-driver/pull/947,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/947,Release 1.21.1.,Release 1.21.1.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,947,2022-03-01T20:42:09Z,2022-03-01T20:47:18Z,2022-03-01T20:47:19Z,CLOSED,False,85,7,7,https://github.com/chardan,R1.21,7,[],https://github.com/mongodb/mongo-c-driver/pull/947,https://github.com/chardan,2,https://github.com/mongodb/mongo-c-driver/pull/947#issuecomment-1055843690,Release 1.21.1.,This should only source master.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,948,2022-03-01T20:56:56Z,2022-03-01T20:58:05Z,2022-03-01T20:58:06Z,CLOSED,False,85,7,7,https://github.com/chardan,R1.21,7,[],https://github.com/mongodb/mongo-c-driver/pull/948,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/948,Release 1.21.1.,Release 1.21.1.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,948,2022-03-01T20:56:56Z,2022-03-01T20:58:05Z,2022-03-01T20:58:06Z,CLOSED,False,85,7,7,https://github.com/chardan,R1.21,7,[],https://github.com/mongodb/mongo-c-driver/pull/948,https://github.com/chardan,2,https://github.com/mongodb/mongo-c-driver/pull/948#issuecomment-1055850608,Release 1.21.1.,bad PR,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,949,2022-03-01T21:01:19Z,2022-03-14T19:17:35Z,2022-03-14T19:17:35Z,MERGED,True,25,0,2,https://github.com/chardan,Updated NEWS for 1.21.1 release.,1,[],https://github.com/mongodb/mongo-c-driver/pull/949,https://github.com/chardan,1,https://github.com/mongodb/mongo-c-driver/pull/949,Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com,Signed-off-by: Jesse Williamson jesse.williamson@mongodb.com,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,950,2022-03-02T18:56:10Z,2022-03-02T19:19:00Z,2022-03-02T19:26:13Z,MERGED,True,6,0,1,https://github.com/rcsanchez97,Debian packaging for 1.21.1,2,[],https://github.com/mongodb/mongo-c-driver/pull/950,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/950,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,951,2022-03-02T19:02:06Z,2022-03-02T19:19:25Z,2022-03-02T19:19:25Z,MERGED,True,6,0,1,https://github.com/rcsanchez97,Debian packaging for 1.21.1,2,[],https://github.com/mongodb/mongo-c-driver/pull/951,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/951,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,952,2022-03-07T02:32:16Z,2022-03-07T17:55:33Z,2022-03-07T17:55:48Z,MERGED,True,5,2,2,https://github.com/rcsanchez97,sync RPM spec file for 1.21.1 release,1,[],https://github.com/mongodb/mongo-c-driver/pull/952,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/952,Evergreen patch build: https://evergreen.mongodb.com/version/62256c063e8e86070df06eac?redirect_spruce_users=true,Evergreen patch build: https://evergreen.mongodb.com/version/62256c063e8e86070df06eac?redirect_spruce_users=true,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,953,2022-03-11T21:04:22Z,2022-03-12T00:35:15Z,2022-03-12T00:35:18Z,MERGED,True,1,1,1,https://github.com/jmikola,CDRIVER-4307 fix default mongocryptd port in docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/953,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/953,https://jira.mongodb.org/browse/CDRIVER-4307,https://jira.mongodb.org/browse/CDRIVER-4307,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,954,2022-03-13T20:49:14Z,2022-03-21T01:25:13Z,2022-03-21T01:25:19Z,MERGED,True,34,5,5,https://github.com/rcsanchez97,CDRIVER-3923 switch to new RHEL8 s390x Evergreen hosts,1,[],https://github.com/mongodb/mongo-c-driver/pull/954,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/954,"Full patch build: https://spruce.mongodb.com/version/622e50b457e85a4b73b784fd/tasks
A few items to note:

the new variant is named zseries-rhel83, but retains the same display name as before, *zSeries
the authentication-tests-openssl-nosasl and authentication-tests-openssl tasks in the new variant fail, but they were also failing on the waterfall before this change
all of the test-* tasks in the new variant are failing in the SYSTEM FAILED state; this is a result of the server not yet publishing builds for RHEL8 zSeries (the ticket for that is SERVER-44074) and the tasks should turn green once the server builds are published
based on the Slack discussion I have added a skip for the /server_discovery_and_monitoring/monitoring/heartbeat/pooled/dns, verifying that it is skipped on RHEL8 zSeries and not skipped on other platforms","Full patch build: https://spruce.mongodb.com/version/622e50b457e85a4b73b784fd/tasks
A few items to note:

the new variant is named zseries-rhel83, but retains the same display name as before, *zSeries
the authentication-tests-openssl-nosasl and authentication-tests-openssl tasks in the new variant fail, but they were also failing on the waterfall before this change
all of the test-* tasks in the new variant are failing in the SYSTEM FAILED state; this is a result of the server not yet publishing builds for RHEL8 zSeries (the ticket for that is SERVER-44074) and the tasks should turn green once the server builds are published
based on the Slack discussion I have added a skip for the /server_discovery_and_monitoring/monitoring/heartbeat/pooled/dns, verifying that it is skipped on RHEL8 zSeries and not skipped on other platforms",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,955,2022-03-14T15:39:28Z,2022-03-14T17:23:53Z,2022-03-14T17:23:54Z,MERGED,True,5,1,1,https://github.com/kevinAlbs,CDRIVER-4310 clarify that SSPI is used by default,1,[],https://github.com/mongodb/mongo-c-driver/pull/955,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/955,See CDRIVER-4310 for background and motivation.,See CDRIVER-4310 for background and motivation.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,956,2022-03-14T23:04:13Z,2022-03-15T00:56:43Z,2022-03-15T00:56:47Z,MERGED,True,1,1,1,https://github.com/jmikola,Fix RST link in installation docs,1,[],https://github.com/mongodb/mongo-c-driver/pull/956,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/956,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,957,2022-03-15T01:29:27Z,2022-03-24T19:03:57Z,2022-03-24T19:03:59Z,MERGED,True,3363,130,37,https://github.com/jmikola,CDRIVER-4198 let option for CRUD commands,6,[],https://github.com/mongodb/mongo-c-driver/pull/957,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/957,https://jira.mongodb.org/browse/CDRIVER-4198,https://jira.mongodb.org/browse/CDRIVER-4198,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,957,2022-03-15T01:29:27Z,2022-03-24T19:03:57Z,2022-03-24T19:03:59Z,MERGED,True,3363,130,37,https://github.com/jmikola,CDRIVER-4198 let option for CRUD commands,6,[],https://github.com/mongodb/mongo-c-driver/pull/957,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/957#issuecomment-1068294223,https://jira.mongodb.org/browse/CDRIVER-4198,"find_with_opts docs updated and mongoc_bulk_operation_t tests have been added (derived from existing collation tests).
This is ready for review.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,958,2022-03-24T18:28:58Z,2022-03-24T20:36:31Z,2022-03-24T20:36:43Z,MERGED,True,22,28,5,https://github.com/eramongodb,Reducing Warnings - Miscellaneous Warnings,4,[],https://github.com/mongodb/mongo-c-driver/pull/958,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/958,"This is the first in a series of PRs intended to reduce the set of warnings currently being observed when building the C driver.
This PR addresses the following warnings:

LLDLinker on Windows

The LLDLinker module as currently written does not support MSVC, but was being unconditionally included. Its inclusion has been conditioned on not being compiled with MSVC.

-fPIC on Windows

MSVC does not recognize the -fPIC flag, but it was being unconditionally passed as an compilation argument. Instances of the flag have been replaced by use of the ENABLE_PIC CMake configuration option.

Format specifies for size_t and ssize_t

The format specifiers in assertion macros comparing size_t and ssize_t values were using incorrectly/inconsistent specifiers. size_t was being printed using the signed specifier, and ssize_t was being printed in hexadecimal representation. They have been fixed to use the correct specifier for signedness (unsigned and signed) and consistent representation (both in decimal).

C++ style comment in kms_request_str.c

A stray C++ style comment in kms_request_str.c has been edited to conform to C90 requirements.","This is the first in a series of PRs intended to reduce the set of warnings currently being observed when building the C driver.
This PR addresses the following warnings:

LLDLinker on Windows

The LLDLinker module as currently written does not support MSVC, but was being unconditionally included. Its inclusion has been conditioned on not being compiled with MSVC.

-fPIC on Windows

MSVC does not recognize the -fPIC flag, but it was being unconditionally passed as an compilation argument. Instances of the flag have been replaced by use of the ENABLE_PIC CMake configuration option.

Format specifies for size_t and ssize_t

The format specifiers in assertion macros comparing size_t and ssize_t values were using incorrectly/inconsistent specifiers. size_t was being printed using the signed specifier, and ssize_t was being printed in hexadecimal representation. They have been fixed to use the correct specifier for signedness (unsigned and signed) and consistent representation (both in decimal).

C++ style comment in kms_request_str.c

A stray C++ style comment in kms_request_str.c has been edited to conform to C90 requirements.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,959,2022-03-24T20:56:25Z,2022-03-25T13:49:09Z,2022-03-25T13:49:17Z,MERGED,True,1,2,2,https://github.com/rcsanchez97,eliminate dead store operations that caused scan-build failures,2,[],https://github.com/mongodb/mongo-c-driver/pull/959,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/959,"Evergreen patch build: https://spruce.mongodb.com/version/623cd28b61837d50964ea4e1/tasks?page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC&taskName=scan-build (it is a complete patch build, but the link has it filtered down to only scan-build tasks)
@vector-of-bool I requested your review as well since this required tweaking code that was committed by you in the last few months.","Evergreen patch build: https://spruce.mongodb.com/version/623cd28b61837d50964ea4e1/tasks?page=0&sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC&taskName=scan-build (it is a complete patch build, but the link has it filtered down to only scan-build tasks)
@vector-of-bool I requested your review as well since this required tweaking code that was committed by you in the last few months.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,960,2022-03-24T21:29:30Z,2022-04-07T18:33:22Z,2022-04-07T18:33:25Z,MERGED,True,662,0,8,https://github.com/eramongodb,Reducing Warnings - Safe Integral Comparisons,4,[],https://github.com/mongodb/mongo-c-driver/pull/960,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/960,"This is part of a series of PRs intended to reduce the set of warnings currently being observed when building the C driver.
This PR introduces a set of utilities modeled after the Safe Integral Comparisons proposal for the C++ standard library, which was accepted and merged into the C++20 standard. These utilities are extremely useful in addressing warnings involving comparisons or conversions between integers with different signedness and sizes.
The interface proposed in the original paper relies on type deduction to select appropriate behavior according to the signedness and size of the given arguments:
A a = ...
B b = ...
// no need for any cast since std::cmp_less is taking care of everything
if(std::cmp_less(a,b)){
  // do X
} else {
  // do Y
}
As C does not have type deduction required to support this interface, two major compromises are made instead:

All functions must explicitly specify the signedness of the provided argument(s).
All arguments are promoted to either int64_t or uint64_t as specified by (1) before further analysis.

Therefore, the equivalent code to the above example given A = int16_t and B = uint32_t looks like the following:
int16_t a = ...
uint32_t b = ...

if (bson_cmp_less_su (a, b)) {
  /* ... */
} else {
  /* ... */
}
where the _su suffix indicates a is signed and b is unsigned.
The set of supported types is also limited to the following:

signed and unsigned char, short, int, long, and long long (but not plain char).
signed and unsigned fixed width integers of size 8, 16, 32, and 64.
ssize_t and size_t.

More types may be added if needed, so long as for the given type T, sizeof (T) <= sizeof (uint64_t) is true and its representable range is known and defined with corresponding *_MIN and *_MAX macros.
To support the std::in_range set of functions even on C90 (where the necessary <limits.h> and <stdint.h> macros may not be defined), the corresponding set of numeric limit macros have been added to bson-compat.h, including those for ssize_t (note: SSIZE_MIN is normally not defined even by the POSIX standard). The preprocessor block conditioned on !defined(__STDC_VERSION__) || __STDC_VERSION__ < 199901L may be removed once the minimum C standard for the C driver is bumped to C99 or newer.","This is part of a series of PRs intended to reduce the set of warnings currently being observed when building the C driver.
This PR introduces a set of utilities modeled after the Safe Integral Comparisons proposal for the C++ standard library, which was accepted and merged into the C++20 standard. These utilities are extremely useful in addressing warnings involving comparisons or conversions between integers with different signedness and sizes.
The interface proposed in the original paper relies on type deduction to select appropriate behavior according to the signedness and size of the given arguments:
A a = ...
B b = ...
// no need for any cast since std::cmp_less is taking care of everything
if(std::cmp_less(a,b)){
  // do X
} else {
  // do Y
}
As C does not have type deduction required to support this interface, two major compromises are made instead:

All functions must explicitly specify the signedness of the provided argument(s).
All arguments are promoted to either int64_t or uint64_t as specified by (1) before further analysis.

Therefore, the equivalent code to the above example given A = int16_t and B = uint32_t looks like the following:
int16_t a = ...
uint32_t b = ...

if (bson_cmp_less_su (a, b)) {
  /* ... */
} else {
  /* ... */
}
where the _su suffix indicates a is signed and b is unsigned.
The set of supported types is also limited to the following:

signed and unsigned char, short, int, long, and long long (but not plain char).
signed and unsigned fixed width integers of size 8, 16, 32, and 64.
ssize_t and size_t.

More types may be added if needed, so long as for the given type T, sizeof (T) <= sizeof (uint64_t) is true and its representable range is known and defined with corresponding *_MIN and *_MAX macros.
To support the std::in_range set of functions even on C90 (where the necessary <limits.h> and <stdint.h> macros may not be defined), the corresponding set of numeric limit macros have been added to bson-compat.h, including those for ssize_t (note: SSIZE_MIN is normally not defined even by the POSIX standard). The preprocessor block conditioned on !defined(__STDC_VERSION__) || __STDC_VERSION__ < 199901L may be removed once the minimum C standard for the C driver is bumped to C99 or newer.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,961,2022-03-30T20:01:09Z,2022-04-08T21:21:08Z,2022-04-08T21:21:21Z,MERGED,True,304,9,12,https://github.com/rcsanchez97,CDRIVER-4101 failing/flaky test skip feature,8,[],https://github.com/mongodb/mongo-c-driver/pull/961,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/961,"Evergreen patch build: https://spruce.mongodb.com/version/6244a85f3e8e860892fb8247/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
(Note; this patch build includes a change not represented in this PR, which change disables ccache to prevent some spurious failures)
So, I have broken this PR into three distinct commits:

implementation of the mechanism and options for skipping tests
initial list of failing/flaky tests based on existing Jira tickets
additional tests which I identified during development of this feature

My thought is that the first two commits are very likely in their final forms and that the bulk of the comments ought to relate to the third commit.  I am not sure if we will want to skip a further 95 tests, but I went ahead and included the third commit for review.  More than likely only some subset of the tests from the third commit will be merged in at the end, but I can definitely file new Jira tickets for all the tests in the third commit.","Evergreen patch build: https://spruce.mongodb.com/version/6244a85f3e8e860892fb8247/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
(Note; this patch build includes a change not represented in this PR, which change disables ccache to prevent some spurious failures)
So, I have broken this PR into three distinct commits:

implementation of the mechanism and options for skipping tests
initial list of failing/flaky tests based on existing Jira tickets
additional tests which I identified during development of this feature

My thought is that the first two commits are very likely in their final forms and that the bulk of the comments ought to relate to the third commit.  I am not sure if we will want to skip a further 95 tests, but I went ahead and included the third commit for review.  More than likely only some subset of the tests from the third commit will be merged in at the end, but I can definitely file new Jira tickets for all the tests in the third commit.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,961,2022-03-30T20:01:09Z,2022-04-08T21:21:08Z,2022-04-08T21:21:21Z,MERGED,True,304,9,12,https://github.com/rcsanchez97,CDRIVER-4101 failing/flaky test skip feature,8,[],https://github.com/mongodb/mongo-c-driver/pull/961,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/961#issuecomment-1083673611,"Evergreen patch build: https://spruce.mongodb.com/version/6244a85f3e8e860892fb8247/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
(Note; this patch build includes a change not represented in this PR, which change disables ccache to prevent some spurious failures)
So, I have broken this PR into three distinct commits:

implementation of the mechanism and options for skipping tests
initial list of failing/flaky tests based on existing Jira tickets
additional tests which I identified during development of this feature

My thought is that the first two commits are very likely in their final forms and that the bulk of the comments ought to relate to the third commit.  I am not sure if we will want to skip a further 95 tests, but I went ahead and included the third commit for review.  More than likely only some subset of the tests from the third commit will be merged in at the end, but I can definitely file new Jira tickets for all the tests in the third commit.","LGTM, but should this also skip the tests that are currently failing in the PR build?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,961,2022-03-30T20:01:09Z,2022-04-08T21:21:08Z,2022-04-08T21:21:21Z,MERGED,True,304,9,12,https://github.com/rcsanchez97,CDRIVER-4101 failing/flaky test skip feature,8,[],https://github.com/mongodb/mongo-c-driver/pull/961,https://github.com/rcsanchez97,3,https://github.com/mongodb/mongo-c-driver/pull/961#issuecomment-1089615775,"Evergreen patch build: https://spruce.mongodb.com/version/6244a85f3e8e860892fb8247/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
(Note; this patch build includes a change not represented in this PR, which change disables ccache to prevent some spurious failures)
So, I have broken this PR into three distinct commits:

implementation of the mechanism and options for skipping tests
initial list of failing/flaky tests based on existing Jira tickets
additional tests which I identified during development of this feature

My thought is that the first two commits are very likely in their final forms and that the bulk of the comments ought to relate to the third commit.  I am not sure if we will want to skip a further 95 tests, but I went ahead and included the third commit for review.  More than likely only some subset of the tests from the third commit will be merged in at the end, but I can definitely file new Jira tickets for all the tests in the third commit.","LGTM, but should this also skip the tests that are currently failing in the PR build?

@vector-of-bool This PR only implements the ability to skip tests run by the test runner.  There is one test which failed unexpected (/Client/get_handshake_hello_response/pooled) and which should have been skipped.  The remaining task failures are the OCSP tasks (which test an entirely different sort of mechanism from the test runner, and so cannot be skipped in the same way), the AWS tasks (which are failing in the part of the process where AWS credentials are validated, and so never reach the test runner), and auth-related tests that do not produce output (so even figuring out which tests are specifically failing would require a fair amount of digging; I'm not opposed to that, but it seemed out of scope for this ticket).  Apart from those, this PR is skipping every failing or flaky test I could identify that gets executed by the test runner.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,961,2022-03-30T20:01:09Z,2022-04-08T21:21:08Z,2022-04-08T21:21:21Z,MERGED,True,304,9,12,https://github.com/rcsanchez97,CDRIVER-4101 failing/flaky test skip feature,8,[],https://github.com/mongodb/mongo-c-driver/pull/961,https://github.com/rcsanchez97,4,https://github.com/mongodb/mongo-c-driver/pull/961#issuecomment-1089630386,"Evergreen patch build: https://spruce.mongodb.com/version/6244a85f3e8e860892fb8247/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
(Note; this patch build includes a change not represented in this PR, which change disables ccache to prevent some spurious failures)
So, I have broken this PR into three distinct commits:

implementation of the mechanism and options for skipping tests
initial list of failing/flaky tests based on existing Jira tickets
additional tests which I identified during development of this feature

My thought is that the first two commits are very likely in their final forms and that the bulk of the comments ought to relate to the third commit.  I am not sure if we will want to skip a further 95 tests, but I went ahead and included the third commit for review.  More than likely only some subset of the tests from the third commit will be merged in at the end, but I can definitely file new Jira tickets for all the tests in the third commit.","Interestingly, a rerun of the task which contained the failure of /Client/get_handshake_hello_response/pooled, as well as some additional patch builds with extra printf statements thrown in for added diagnostic output all passed.  What is interesting is that the rerun of the task from the original patch build still (incorrectly) executes the test, but it passes.  The subsequent patch builds skip the test (as expected, since it is listed among the tests to skip).  I am trying to dig at this to see if I can determine the precise cause and the source of the discrepancy.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,961,2022-03-30T20:01:09Z,2022-04-08T21:21:08Z,2022-04-08T21:21:21Z,MERGED,True,304,9,12,https://github.com/rcsanchez97,CDRIVER-4101 failing/flaky test skip feature,8,[],https://github.com/mongodb/mongo-c-driver/pull/961,https://github.com/rcsanchez97,5,https://github.com/mongodb/mongo-c-driver/pull/961#issuecomment-1089659344,"Evergreen patch build: https://spruce.mongodb.com/version/6244a85f3e8e860892fb8247/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
(Note; this patch build includes a change not represented in this PR, which change disables ccache to prevent some spurious failures)
So, I have broken this PR into three distinct commits:

implementation of the mechanism and options for skipping tests
initial list of failing/flaky tests based on existing Jira tickets
additional tests which I identified during development of this feature

My thought is that the first two commits are very likely in their final forms and that the bulk of the comments ought to relate to the third commit.  I am not sure if we will want to skip a further 95 tests, but I went ahead and included the third commit for review.  More than likely only some subset of the tests from the third commit will be merged in at the end, but I can definitely file new Jira tickets for all the tests in the third commit.","Strangely enough, I cannot reproduce the behavior from the original patch build. Every other patch build I run (including with the exact same changes as the original patch build) correctly skips the /Client/get_handshake_hello_response/pooled test.  It doesn't seem particularly worthwhile to keep trying to figure out this particular oddity.  Tomorrow I'll move on to the other comments and needed changes.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,961,2022-03-30T20:01:09Z,2022-04-08T21:21:08Z,2022-04-08T21:21:21Z,MERGED,True,304,9,12,https://github.com/rcsanchez97,CDRIVER-4101 failing/flaky test skip feature,8,[],https://github.com/mongodb/mongo-c-driver/pull/961,https://github.com/rcsanchez97,6,https://github.com/mongodb/mongo-c-driver/pull/961#issuecomment-1092315570,"Evergreen patch build: https://spruce.mongodb.com/version/6244a85f3e8e860892fb8247/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
(Note; this patch build includes a change not represented in this PR, which change disables ccache to prevent some spurious failures)
So, I have broken this PR into three distinct commits:

implementation of the mechanism and options for skipping tests
initial list of failing/flaky tests based on existing Jira tickets
additional tests which I identified during development of this feature

My thought is that the first two commits are very likely in their final forms and that the bulk of the comments ought to relate to the third commit.  I am not sure if we will want to skip a further 95 tests, but I went ahead and included the third commit for review.  More than likely only some subset of the tests from the third commit will be merged in at the end, but I can definitely file new Jira tickets for all the tests in the third commit.",Latest full patch build: https://spruce.mongodb.com/version/624f2cd1c9ec442a24f36aa4/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,962,2022-04-04T20:02:16Z,2022-04-06T19:31:49Z,2022-04-06T19:31:49Z,MERGED,True,12,33,3,https://github.com/kevinAlbs,CDRIVER-4136 drop debug-compile-c89 task,1,[],https://github.com/mongodb/mongo-c-driver/pull/962,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/962,"Summary

Drop debug-compile-c89 task.

Background & Motivation
The debug-compile-c89 task builds with -std=c89 -pedantic.
Removing the debug-compile-c89 task will help to enable copying mlib into mongo-c-driver.
libmongoc already uses several c99 features, noted in the comments of CDRIVER-4136.
Risks
This may impact consumers building with -std=c89 or building with a compiler not tested on Evergreen. We may add more non-C89 code that break consumers. I think it is low risk.","Summary

Drop debug-compile-c89 task.

Background & Motivation
The debug-compile-c89 task builds with -std=c89 -pedantic.
Removing the debug-compile-c89 task will help to enable copying mlib into mongo-c-driver.
libmongoc already uses several c99 features, noted in the comments of CDRIVER-4136.
Risks
This may impact consumers building with -std=c89 or building with a compiler not tested on Evergreen. We may add more non-C89 code that break consumers. I think it is low risk.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,963,2022-04-07T15:40:50Z,2022-04-07T17:20:58Z,2022-04-07T17:20:58Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,CDRIVER-4326 fix CSFLE custom endpoint Case 5,1,[],https://github.com/mongodb/mongo-c-driver/pull/963,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/963,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,964,2022-04-08T16:48:04Z,2022-04-17T18:50:54Z,2022-04-17T18:50:54Z,MERGED,True,67,0,1,https://github.com/kevinAlbs,CDRIVER-4331 add CSFLE noSchema test,1,[],https://github.com/mongodb/mongo-c-driver/pull/964,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/964,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,965,2022-04-11T19:28:52Z,2022-04-11T23:36:12Z,2022-04-11T23:36:59Z,MERGED,True,59,60,1,https://github.com/rcsanchez97,add ticket references for skipped test,1,[],https://github.com/mongodb/mongo-c-driver/pull/965,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/965,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,966,2022-04-11T20:38:56Z,2022-04-13T01:00:24Z,2022-04-13T01:00:24Z,MERGED,True,6,6,1,https://github.com/kevinAlbs,CDRIVER-4332 resync types CSFLE test,1,[],https://github.com/mongodb/mongo-c-driver/pull/966,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/966,"Summary
Resync the types CSFLE test to mongodb/specifications@6a7158d to resolve test failures on mongocryptd 6.0.0-alpha.
Background & Motivation
The badQueries test is not included in C driver tests due to CDRIVER-3387. Only the types test was resynced.","Summary
Resync the types CSFLE test to mongodb/specifications@6a7158d to resolve test failures on mongocryptd 6.0.0-alpha.
Background & Motivation
The badQueries test is not included in C driver tests due to CDRIVER-3387. Only the types test was resynced.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,967,2022-04-11T23:04:26Z,2022-04-11T23:46:50Z,2022-04-11T23:46:50Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,fix link to Fedora package,1,[],https://github.com/mongodb/mongo-c-driver/pull/967,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/967,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,968,2022-04-15T20:16:34Z,2022-04-27T23:47:18Z,2022-04-27T23:47:18Z,MERGED,True,924,82,21,https://github.com/vector-of-bool,CDRIVER-4272: Add options and code to load the csfle dynamic library,45,[],https://github.com/mongodb/mongo-c-driver/pull/968,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/968,"This is an initial basic implementation of the csfle options from the new CSE spec changes to support the dynamic library. This also adds mlib as a support library, which now requires some C99 support.
TODO: A a testing scenario that injects the csfle library. Ensure tests do not load a csfle from the system, only from the isolated test copy or relies on mongocrypd.","This is an initial basic implementation of the csfle options from the new CSE spec changes to support the dynamic library. This also adds mlib as a support library, which now requires some C99 support.
TODO: A a testing scenario that injects the csfle library. Ensure tests do not load a csfle from the system, only from the isolated test copy or relies on mongocrypd.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,968,2022-04-15T20:16:34Z,2022-04-27T23:47:18Z,2022-04-27T23:47:18Z,MERGED,True,924,82,21,https://github.com/vector-of-bool,CDRIVER-4272: Add options and code to load the csfle dynamic library,45,[],https://github.com/mongodb/mongo-c-driver/pull/968,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/968#issuecomment-1106801001,"This is an initial basic implementation of the csfle options from the new CSE spec changes to support the dynamic library. This also adds mlib as a support library, which now requires some C99 support.
TODO: A a testing scenario that injects the csfle library. Ensure tests do not load a csfle from the system, only from the isolated test copy or relies on mongocrypd.",@kevinAlbs I've found that I need to add an option for a test to completely disable csfle as the test will rely on mongocryptd behaviors. Take a look at the latest few commits.,True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,969,2022-04-16T22:07:07Z,2022-04-18T00:14:41Z,2022-04-18T00:14:45Z,MERGED,True,1,1,1,https://github.com/rcsanchez97,fix typo,1,[],https://github.com/mongodb/mongo-c-driver/pull/969,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/969,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,970,2022-04-19T01:41:50Z,2022-04-19T14:22:21Z,2022-04-19T14:22:26Z,MERGED,True,1,0,1,https://github.com/rcsanchez97,ensure executing user owns Git repository for Debian build,1,[],https://github.com/mongodb/mongo-c-driver/pull/970,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/970,https://spruce.mongodb.com/version/625e13159ccd4e6f26c4386c/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,https://spruce.mongodb.com/version/625e13159ccd4e6f26c4386c/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,971,2022-04-19T01:46:21Z,2022-04-19T14:22:34Z,2022-04-19T14:22:38Z,MERGED,True,1,0,1,https://github.com/rcsanchez97,ensure executing user owns Git repository for Debian build,1,[],https://github.com/mongodb/mongo-c-driver/pull/971,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/971,https://spruce.mongodb.com/version/625e142c2a60ed5e2ca89f80/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,https://spruce.mongodb.com/version/625e142c2a60ed5e2ca89f80/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,972,2022-04-21T11:14:29Z,2022-04-26T20:26:13Z,2022-04-26T20:26:24Z,MERGED,True,411,25,21,https://github.com/rcsanchez97,CDRIVER-4085 add server connectionId to command monitoring events,3,[],https://github.com/mongodb/mongo-c-driver/pull/972,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/972,"Evergreen patch build: https://spruce.mongodb.com/version/625f6c3057e85a68b11bea04/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
I've reviewed the tasks that are green on the base commit and red on the patch build.  The few failures are unrelated (e.g., the longstanding ccache bug on Ubuntu, the failure to build with static libssl on RHEL, etc.).","Evergreen patch build: https://spruce.mongodb.com/version/625f6c3057e85a68b11bea04/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
I've reviewed the tasks that are green on the base commit and red on the patch build.  The few failures are unrelated (e.g., the longstanding ccache bug on Ubuntu, the failure to build with static libssl on RHEL, etc.).",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,973,2022-04-25T21:19:24Z,2022-05-04T17:43:02Z,2022-05-04T17:43:02Z,MERGED,True,2,2,1,https://github.com/TheDorkKnight,fix CMake version check for OpenSSL 1.1+ on Windows,2,[],https://github.com/mongodb/mongo-c-driver/pull/973,https://github.com/TheDorkKnight,1,https://github.com/mongodb/mongo-c-driver/pull/973,"As it stands, this check does not function as intended on the CMake versions that I tried (3.22 and 3.23).
I suspect it would not work from CMake 3.10 until CMake 3.70 (were such a version ever to exist); the comparison appears to a floating-point comparison instead of a version comparison.
I took the error message

requires CMake 3.7 or later

at face value and assumed that ${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.7 is correct instead of ${CMAKE_VERSION} VERSION_GREATER 3.7 which would be the direct translation from the previous version of the script.","As it stands, this check does not function as intended on the CMake versions that I tried (3.22 and 3.23).
I suspect it would not work from CMake 3.10 until CMake 3.70 (were such a version ever to exist); the comparison appears to a floating-point comparison instead of a version comparison.
I took the error message

requires CMake 3.7 or later

at face value and assumed that ${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.7 is correct instead of ${CMAKE_VERSION} VERSION_GREATER 3.7 which would be the direct translation from the previous version of the script.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,973,2022-04-25T21:19:24Z,2022-05-04T17:43:02Z,2022-05-04T17:43:02Z,MERGED,True,2,2,1,https://github.com/TheDorkKnight,fix CMake version check for OpenSSL 1.1+ on Windows,2,[],https://github.com/mongodb/mongo-c-driver/pull/973,https://github.com/TheDorkKnight,2,https://github.com/mongodb/mongo-c-driver/pull/973#issuecomment-1109091307,"As it stands, this check does not function as intended on the CMake versions that I tried (3.22 and 3.23).
I suspect it would not work from CMake 3.10 until CMake 3.70 (were such a version ever to exist); the comparison appears to a floating-point comparison instead of a version comparison.
I took the error message

requires CMake 3.7 or later

at face value and assumed that ${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.7 is correct instead of ${CMAKE_VERSION} VERSION_GREATER 3.7 which would be the direct translation from the previous version of the script.","Sounds good. Here's a link to the version comparisons documentation link for posterity.
As you said:

if(<variable|string> VERSION_GREATER_EQUAL <variable|string>)
New in version 3.7:",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,974,2022-04-25T22:30:15Z,2022-05-04T17:16:22Z,2022-05-04T17:16:22Z,MERGED,True,3,1,1,https://github.com/TheDorkKnight,fix const mismatch for pointer to data,1,[],https://github.com/mongodb/mongo-c-driver/pull/974,https://github.com/TheDorkKnight,1,https://github.com/mongodb/mongo-c-driver/pull/974,"See SSL_get_tlsext_status_ocsp_resp. Previous versions have the same signature also.
The resp argument is not const, and when mongoc-openssl.c is built on Windows this causes a C4090 error.
We can work around this by simply passing a pointer to a pointer that is not const, and then assigning its value to the const pointer.","See SSL_get_tlsext_status_ocsp_resp. Previous versions have the same signature also.
The resp argument is not const, and when mongoc-openssl.c is built on Windows this causes a C4090 error.
We can work around this by simply passing a pointer to a pointer that is not const, and then assigning its value to the const pointer.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,974,2022-04-25T22:30:15Z,2022-05-04T17:16:22Z,2022-05-04T17:16:22Z,MERGED,True,3,1,1,https://github.com/TheDorkKnight,fix const mismatch for pointer to data,1,[],https://github.com/mongodb/mongo-c-driver/pull/974,https://github.com/TheDorkKnight,2,https://github.com/mongodb/mongo-c-driver/pull/974#issuecomment-1109966751,"See SSL_get_tlsext_status_ocsp_resp. Previous versions have the same signature also.
The resp argument is not const, and when mongoc-openssl.c is built on Windows this causes a C4090 error.
We can work around this by simply passing a pointer to a pointer that is not const, and then assigning its value to the const pointer.","Alternatively you could probably just cast it, like:
len = SSL_get_tlsext_status_ocsp_resp (ssl, (unsigned char**)(&resp_data));
I didn't try that though",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,974,2022-04-25T22:30:15Z,2022-05-04T17:16:22Z,2022-05-04T17:16:22Z,MERGED,True,3,1,1,https://github.com/TheDorkKnight,fix const mismatch for pointer to data,1,[],https://github.com/mongodb/mongo-c-driver/pull/974,https://github.com/vector-of-bool,3,https://github.com/mongodb/mongo-c-driver/pull/974#issuecomment-1113669131,"See SSL_get_tlsext_status_ocsp_resp. Previous versions have the same signature also.
The resp argument is not const, and when mongoc-openssl.c is built on Windows this causes a C4090 error.
We can work around this by simply passing a pointer to a pointer that is not const, and then assigning its value to the const pointer.",Thank you for your contribution! Sorry for the delay. We'll investigate this change shortly.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,975,2022-04-26T20:24:20Z,2022-04-27T20:12:26Z,2022-04-27T20:12:28Z,MERGED,True,807,9,9,https://github.com/eramongodb,CDRIVER-4317 Add support for clientEncryption entity in unified test runner,14,[],https://github.com/mongodb/mongo-c-driver/pull/975,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/975,"This PR is a part of CDRIVER-4317. It is being reviewed separately to unblock FLE 2 work.
This PR implements support for the new clientEncryption entity in unified tests. The JSON schema version is bumped from 1.5 to 1.8 to support running new unified test format valid-pass test files. This does not indicate that the unified test runner supports JSON schema version 1.8 in its entirety (not all spec tests have been updated).
This PR includes a drive-by improvement to unified test runner error messages to support outputting the actual value of a BSON document when it differs from the expected value.
PR Updates

Add support for runOnRequirement.csfle to avoid test runner errors when built without CSFLE.","This PR is a part of CDRIVER-4317. It is being reviewed separately to unblock FLE 2 work.
This PR implements support for the new clientEncryption entity in unified tests. The JSON schema version is bumped from 1.5 to 1.8 to support running new unified test format valid-pass test files. This does not indicate that the unified test runner supports JSON schema version 1.8 in its entirety (not all spec tests have been updated).
This PR includes a drive-by improvement to unified test runner error messages to support outputting the actual value of a BSON document when it differs from the expected value.
PR Updates

Add support for runOnRequirement.csfle to avoid test runner errors when built without CSFLE.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,975,2022-04-26T20:24:20Z,2022-04-27T20:12:26Z,2022-04-27T20:12:28Z,MERGED,True,807,9,9,https://github.com/eramongodb,CDRIVER-4317 Add support for clientEncryption entity in unified test runner,14,[],https://github.com/mongodb/mongo-c-driver/pull/975,https://github.com/eramongodb,2,https://github.com/mongodb/mongo-c-driver/pull/975#issuecomment-1111414395,"This PR is a part of CDRIVER-4317. It is being reviewed separately to unblock FLE 2 work.
This PR implements support for the new clientEncryption entity in unified tests. The JSON schema version is bumped from 1.5 to 1.8 to support running new unified test format valid-pass test files. This does not indicate that the unified test runner supports JSON schema version 1.8 in its entirety (not all spec tests have been updated).
This PR includes a drive-by improvement to unified test runner error messages to support outputting the actual value of a BSON document when it differs from the expected value.
PR Updates

Add support for runOnRequirement.csfle to avoid test runner errors when built without CSFLE.",Resolved merge conflicts and verified expected behavior in a full patch build.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,976,2022-04-27T16:52:58Z,2022-04-28T14:17:08Z,2022-04-28T14:17:29Z,MERGED,True,19,8,3,https://github.com/jmikola,CDRIVER-4085 fix docs for server_connection_id getters,1,[],https://github.com/mongodb/mongo-c-driver/pull/976,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/976,"https://jira.mongodb.org/browse/CDRIVER-4085
This removes copypasta that was missed in ba73833 (#972)","https://jira.mongodb.org/browse/CDRIVER-4085
This removes copypasta that was missed in ba73833 (#972)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,977,2022-04-28T01:53:25Z,2022-04-28T19:31:53Z,2022-04-28T19:31:53Z,MERGED,True,44,10,2,https://github.com/vector-of-bool,Fixes for csfle downloading on some Linux platforms,54,[],https://github.com/mongodb/mongo-c-driver/pull/977,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/977,"This fixes some CI failures that appeared following the merge of #968 : In particular, some older Linux platforms are missing Python features that mongodl used, and some platforms do not have csfle available at all (For these it is conditionally disabled). These changes have been tested on all erring platforms.","This fixes some CI failures that appeared following the merge of #968 : In particular, some older Linux platforms are missing Python features that mongodl used, and some platforms do not have csfle available at all (For these it is conditionally disabled). These changes have been tested on all erring platforms.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,978,2022-04-29T14:58:24Z,2022-05-05T19:41:07Z,2022-05-05T19:41:11Z,MERGED,True,4,1,1,https://github.com/jmikola,CDRIVER-4373 do not set bulk let option unnecessarily,1,[],https://github.com/mongodb/mongo-c-driver/pull/978,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/978,https://jira.mongodb.org/browse/CDRIVER-4373,https://jira.mongodb.org/browse/CDRIVER-4373,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,979,2022-04-30T13:46:42Z,2022-05-01T20:23:04Z,2022-05-01T20:23:21Z,MERGED,True,157,2,2,https://github.com/rcsanchez97,CDRIVER-4358 sync allowDiskUse CRUD spec tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/979,https://github.com/rcsanchez97,1,https://github.com/mongodb/mongo-c-driver/pull/979,"Full Evergreen patch build: https://spruce.mongodb.com/version/626c8db630661566a405605d/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
I synced all the spec tests associated with the allowDiskUse option and ran a patch build.  There were no failures present in the patch build that weren't in the base commit (except for one spurious TSAN failure).  I also checked to ensure that we aren't skipping any of the tests associated with allowDiskUse.  Apart from the spec tests themselves, there are only two mentions of allowDiskUse in the C driver code:

in test-mongoc-collection.c, where it is set as an option as part of a specific test
in mongoc_collection_find_with_opts.rst where its existence and type is documented

Neither of those occurrences appear to require a change as part of this ticket.","Full Evergreen patch build: https://spruce.mongodb.com/version/626c8db630661566a405605d/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC
I synced all the spec tests associated with the allowDiskUse option and ran a patch build.  There were no failures present in the patch build that weren't in the base commit (except for one spurious TSAN failure).  I also checked to ensure that we aren't skipping any of the tests associated with allowDiskUse.  Apart from the spec tests themselves, there are only two mentions of allowDiskUse in the C driver code:

in test-mongoc-collection.c, where it is set as an option as part of a specific test
in mongoc_collection_find_with_opts.rst where its existence and type is documented

Neither of those occurrences appear to require a change as part of this ticket.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,980,2022-05-02T12:39:29Z,2022-05-18T15:43:10Z,2022-05-18T15:43:11Z,CLOSED,False,12,33,10,https://github.com/AgostinoSturaro,Fix fallback for missing stdbool.h,1,[],https://github.com/mongodb/mongo-c-driver/pull/980,https://github.com/AgostinoSturaro,1,https://github.com/mongodb/mongo-c-driver/pull/980,"I've noticed that if stdbool.h is missing (not supported by the compiler), the existing fallback is not correctly called.
This used to work in version 1.14.1.
The first part of the issue is in src/libbson/CMakeLists.txt.
If the check finds no stdbool.h, the BSON_HAVE_STDBOOL_H macro was not initialized to 0.
The other part of the issue is that stdbool.h is being included directly rather than via bson-compat.h, which provides a fallback if stdbool.h is missing, along with other commonly used headers.","I've noticed that if stdbool.h is missing (not supported by the compiler), the existing fallback is not correctly called.
This used to work in version 1.14.1.
The first part of the issue is in src/libbson/CMakeLists.txt.
If the check finds no stdbool.h, the BSON_HAVE_STDBOOL_H macro was not initialized to 0.
The other part of the issue is that stdbool.h is being included directly rather than via bson-compat.h, which provides a fallback if stdbool.h is missing, along with other commonly used headers.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,980,2022-05-02T12:39:29Z,2022-05-18T15:43:10Z,2022-05-18T15:43:11Z,CLOSED,False,12,33,10,https://github.com/AgostinoSturaro,Fix fallback for missing stdbool.h,1,[],https://github.com/mongodb/mongo-c-driver/pull/980,https://github.com/AgostinoSturaro,2,https://github.com/mongodb/mongo-c-driver/pull/980#issuecomment-1118360829,"I've noticed that if stdbool.h is missing (not supported by the compiler), the existing fallback is not correctly called.
This used to work in version 1.14.1.
The first part of the issue is in src/libbson/CMakeLists.txt.
If the check finds no stdbool.h, the BSON_HAVE_STDBOOL_H macro was not initialized to 0.
The other part of the issue is that stdbool.h is being included directly rather than via bson-compat.h, which provides a fallback if stdbool.h is missing, along with other commonly used headers.",@kevinAlbs I can't see the failed checks because it requires a login.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,980,2022-05-02T12:39:29Z,2022-05-18T15:43:10Z,2022-05-18T15:43:11Z,CLOSED,False,12,33,10,https://github.com/AgostinoSturaro,Fix fallback for missing stdbool.h,1,[],https://github.com/mongodb/mongo-c-driver/pull/980,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/980#issuecomment-1130184976,"I've noticed that if stdbool.h is missing (not supported by the compiler), the existing fallback is not correctly called.
This used to work in version 1.14.1.
The first part of the issue is in src/libbson/CMakeLists.txt.
If the check finds no stdbool.h, the BSON_HAVE_STDBOOL_H macro was not initialized to 0.
The other part of the issue is that stdbool.h is being included directly rather than via bson-compat.h, which provides a fallback if stdbool.h is missing, along with other commonly used headers.","Thank you for the PR. As noted in CDRIVER-4376, the C driver does not support versions of older than Visual Studio 2013.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,981,2022-05-02T21:05:09Z,2022-05-03T21:30:44Z,2022-05-03T21:30:44Z,MERGED,True,13993,46480,214,https://github.com/vector-of-bool,Update bundled zlib to 1.2.12,2,[],https://github.com/mongodb/mongo-c-driver/pull/981,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/981,"This addresses [CDRIVER-4377]
I've pruned all subdirectories of the zlib bundle, since none of them seem to be used by mongo-c and theywould just bloat the repo.","This addresses [CDRIVER-4377]
I've pruned all subdirectories of the zlib bundle, since none of them seem to be used by mongo-c and theywould just bloat the repo.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,982,2022-05-03T14:04:39Z,2022-05-16T17:04:20Z,2022-05-18T17:54:54Z,MERGED,True,7625,103,41,https://github.com/jmikola,CDRIVER-4199: Add support for the comment field to all helpers,2,[],https://github.com/mongodb/mongo-c-driver/pull/982,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/982,"https://jira.mongodb.org/browse/CDRIVER-4199
https://jira.mongodb.org/browse/CDRIVER-4374","https://jira.mongodb.org/browse/CDRIVER-4199
https://jira.mongodb.org/browse/CDRIVER-4374",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,982,2022-05-03T14:04:39Z,2022-05-16T17:04:20Z,2022-05-18T17:54:54Z,MERGED,True,7625,103,41,https://github.com/jmikola,CDRIVER-4199: Add support for the comment field to all helpers,2,[],https://github.com/mongodb/mongo-c-driver/pull/982,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/982#issuecomment-1125625435,"https://jira.mongodb.org/browse/CDRIVER-4199
https://jira.mongodb.org/browse/CDRIVER-4374","@kevinAlbs: Can you help me discern the actual build failure in debug-compile-nosasl-winssl? This is the only task whose build status is inconsistent with the base commit in https://spruce.mongodb.com/version/627db0e361837d34963b517d/tasks.
Edit: just to follow-up, the build failure was unrelated so I proceeded with merging.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,983,2022-05-05T16:03:47Z,2022-05-07T14:58:19Z,2022-05-07T14:58:19Z,MERGED,True,2910,21,18,https://github.com/kevinAlbs,CDRIVER-4365 support encryptedFields in collection create and drop,12,[],https://github.com/mongodb/mongo-c-driver/pull/983,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/983,"Summary

Add mongoc_auto_encryption_opts_set_encrypted_fields_map
Add encryptedFields required behavior to create and drop collection helpers.
Run ""*-cse"" tasks on replica set for server 6.0+.

Add ""majority"" write concern to key vault operations in CSFLE tests.


Add _mongoc_iter_document_as_bson utility to convert a bson_iter_t to bson_t.

Background & Motivation
Please see mongodb/specifications#1183 for the specification changes.
FLE 2.0 requires a non-standalone server topology. Tests need to apply write concern majority on key vault operations, as noted in the specification test README

Perform all applicable operations on key vault collections (e.g. inserting an example data key, or running a find command) with readConcern/writeConcern ""majority"".

That is because the key vault is queried with readConcern ""majority"". If keys are inserted without writeConcern ""majority"", some tests fail to find the key if it the insert is not majority committed before it is queried.
Because the name of FLE 2.0 is still being decided, the documentation for mongoc_auto_encryption_opts_set_encrypted_fields_map is brief.","Summary

Add mongoc_auto_encryption_opts_set_encrypted_fields_map
Add encryptedFields required behavior to create and drop collection helpers.
Run ""*-cse"" tasks on replica set for server 6.0+.

Add ""majority"" write concern to key vault operations in CSFLE tests.


Add _mongoc_iter_document_as_bson utility to convert a bson_iter_t to bson_t.

Background & Motivation
Please see mongodb/specifications#1183 for the specification changes.
FLE 2.0 requires a non-standalone server topology. Tests need to apply write concern majority on key vault operations, as noted in the specification test README

Perform all applicable operations on key vault collections (e.g. inserting an example data key, or running a find command) with readConcern/writeConcern ""majority"".

That is because the key vault is queried with readConcern ""majority"". If keys are inserted without writeConcern ""majority"", some tests fail to find the key if it the insert is not majority committed before it is queried.
Because the name of FLE 2.0 is still being decided, the documentation for mongoc_auto_encryption_opts_set_encrypted_fields_map is brief.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,984,2022-05-05T19:00:59Z,2022-05-06T18:36:14Z,2022-05-06T18:36:17Z,MERGED,True,7779,1594,48,https://github.com/jmikola,CDRIVER-4309: always use count command for estimatedDocumentCount,5,[],https://github.com/mongodb/mongo-c-driver/pull/984,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/984,"https://jira.mongodb.org/browse/CDRIVER-4309
Related to #982, but I believe this can be merged first.","https://jira.mongodb.org/browse/CDRIVER-4309
Related to #982, but I believe this can be merged first.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,984,2022-05-05T19:00:59Z,2022-05-06T18:36:14Z,2022-05-06T18:36:17Z,MERGED,True,7779,1594,48,https://github.com/jmikola,CDRIVER-4309: always use count command for estimatedDocumentCount,5,[],https://github.com/mongodb/mongo-c-driver/pull/984,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/984#issuecomment-1119142093,"https://jira.mongodb.org/browse/CDRIVER-4309
Related to #982, but I believe this can be merged first.","Looks good, other than the newly failing test_estimated_document_count in test-mongoc-collection.c. Just needs to be updated for these changes.",True,{'THUMBS_UP': ['https://github.com/jmikola']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,984,2022-05-05T19:00:59Z,2022-05-06T18:36:14Z,2022-05-06T18:36:17Z,MERGED,True,7779,1594,48,https://github.com/jmikola,CDRIVER-4309: always use count command for estimatedDocumentCount,5,[],https://github.com/mongodb/mongo-c-driver/pull/984,https://github.com/jmikola,3,https://github.com/mongodb/mongo-c-driver/pull/984#issuecomment-1119876135,"https://jira.mongodb.org/browse/CDRIVER-4309
Related to #982, but I believe this can be merged first.","Latest build shows task failures consistent with the base commit (nothing new after restarting the ASAN Ubuntu 18.04 builds), so I think we're good to merge here.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,985,2022-05-06T00:53:06Z,,2022-05-18T19:46:58Z,OPEN,False,108,56,4,https://github.com/vector-of-bool,BSON-as-JSON indented output,6,[],https://github.com/mongodb/mongo-c-driver/pull/985,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/985,"This changeset adds options to bson_as_json that supports prettier-formatted output. Helpful when debugging differences between large documents side-by-side. These options are only exposed in the private API at the moment. It works like:

level_indent - If NULL, all behaves as previously. If not-null, this string is inserted at the beginning of the line N times for a line at depth N.
initial_indent - This is inserted before the opening brace.
subsequent_indent - This is inserted before the level_indents at the beginning of every line (except for the first line).

(This was useful while debugging csfle oddities.)","This changeset adds options to bson_as_json that supports prettier-formatted output. Helpful when debugging differences between large documents side-by-side. These options are only exposed in the private API at the moment. It works like:

level_indent - If NULL, all behaves as previously. If not-null, this string is inserted at the beginning of the line N times for a line at depth N.
initial_indent - This is inserted before the opening brace.
subsequent_indent - This is inserted before the level_indents at the beginning of every line (except for the first line).

(This was useful while debugging csfle oddities.)",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,986,2022-05-06T00:56:52Z,2022-05-11T18:43:11Z,2022-05-25T23:39:42Z,MERGED,True,115,15,6,https://github.com/vector-of-bool,Sanitizer options,5,[],https://github.com/mongodb/mongo-c-driver/pull/986,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/986,This change adds a CMake sanitizer setting and removes raw compile-flags from the high-level build config.,This change adds a CMake sanitizer setting and removes raw compile-flags from the high-level build config.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,987,2022-05-06T21:12:08Z,,2022-05-18T19:20:53Z,OPEN,False,860,1,14,https://github.com/vector-of-bool,A Basic Earthly Project,23,[],https://github.com/mongodb/mongo-c-driver/pull/987,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/987,"This provides an Earthfile, a ""common"" extensible Earthly sub-project, and a few supporting shell scripts. This is terribly inefficient in ways that Earthly could (and should) be used, but it (for the most part) encodes the important Evergreen tasks similar to how they would run in CI. This allows one to build and test the project on a variety of different Linux environments right on your own desktop without pushing, committing, patch-submitting, and/or waiting on the build queue.
Earthly could also be executed as an Evergreen task, which has the benefits of isolating the build from the host, allowing any build host with docker (or podman) to build any of the Earthly variants. This means that state on the host has no effects on the results of the build, and means we can get significantly improve host pool utilization by distributing the tasks to any capable worker rather than waiting on one that matches the desired build environment. This changeset adds a few variants and tasks to the config.yml that will successfully execute in Evergreen, but these tasks are more proof-of-concept and could be improved and encoded in the task generation scripts. In this current iteration, these changes are intended more for a local developer's use than for use in CI.
Refer: https://earthly.dev/","This provides an Earthfile, a ""common"" extensible Earthly sub-project, and a few supporting shell scripts. This is terribly inefficient in ways that Earthly could (and should) be used, but it (for the most part) encodes the important Evergreen tasks similar to how they would run in CI. This allows one to build and test the project on a variety of different Linux environments right on your own desktop without pushing, committing, patch-submitting, and/or waiting on the build queue.
Earthly could also be executed as an Evergreen task, which has the benefits of isolating the build from the host, allowing any build host with docker (or podman) to build any of the Earthly variants. This means that state on the host has no effects on the results of the build, and means we can get significantly improve host pool utilization by distributing the tasks to any capable worker rather than waiting on one that matches the desired build environment. This changeset adds a few variants and tasks to the config.yml that will successfully execute in Evergreen, but these tasks are more proof-of-concept and could be improved and encoded in the task generation scripts. In this current iteration, these changes are intended more for a local developer's use than for use in CI.
Refer: https://earthly.dev/",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,988,2022-05-10T00:44:03Z,2022-05-11T22:28:16Z,2022-05-25T23:40:50Z,MERGED,True,60,8,4,https://github.com/vector-of-bool,[CDRIVER-3380] Fixup JSON specials and decimal128 parsing,6,[],https://github.com/mongodb/mongo-c-driver/pull/988,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/988,Certain token sequences leave the bson-from-json parser unhappy. This addresses those.,Certain token sequences leave the bson-from-json parser unhappy. This addresses those.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,989,2022-05-10T15:01:47Z,2022-05-14T17:00:41Z,2022-05-14T17:00:41Z,MERGED,True,3565,64,29,https://github.com/kevinAlbs,CDRIVER-4369 Add FLE 2 API to AutoEncryptionOpts,14,[],https://github.com/mongodb/mongo-c-driver/pull/989,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/989,"Summary

Do not return error on ""ns not found"" error in drop with encryptedFields.
Pass encrypted_fields_map to libmongocrypt.
Add add mongoc_auto_encryption_opts_set_bypass_query_analysis.
Require libmongocrypt version 1.5.0.
Update csfle test dependency to 6.0.0-rc4.
Do not spawn mongocryptd if bypass_query_analysis is true.

Background & Motivation
The ""ns not found"" error is returned by the ""drop"" command if the collection does not exist. All drivers excluding Node and C ignore this error in their drop helpers. See Do drivers ignore ""ns not found"" in collection drop?. Ignoring the ""ns not found"" error in the drop operation with encryptedFields is consistent with Node's implementation..
Using csfle version 5.3.1 resulted in the following error:

Expected success, got error ""csfle ""analyze_query"" failed: jsonSchema is a required command field [Error 2, code 51073]""

That error suggests 5.3.1 does not have all FLE 2 features. jsonSchema is only required for FLE 1. Updating to 6.0.0-rc4 resolved this error.","Summary

Do not return error on ""ns not found"" error in drop with encryptedFields.
Pass encrypted_fields_map to libmongocrypt.
Add add mongoc_auto_encryption_opts_set_bypass_query_analysis.
Require libmongocrypt version 1.5.0.
Update csfle test dependency to 6.0.0-rc4.
Do not spawn mongocryptd if bypass_query_analysis is true.

Background & Motivation
The ""ns not found"" error is returned by the ""drop"" command if the collection does not exist. All drivers excluding Node and C ignore this error in their drop helpers. See Do drivers ignore ""ns not found"" in collection drop?. Ignoring the ""ns not found"" error in the drop operation with encryptedFields is consistent with Node's implementation..
Using csfle version 5.3.1 resulted in the following error:

Expected success, got error ""csfle ""analyze_query"" failed: jsonSchema is a required command field [Error 2, code 51073]""

That error suggests 5.3.1 does not have all FLE 2 features. jsonSchema is only required for FLE 1. Updating to 6.0.0-rc4 resolved this error.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,990,2022-05-10T18:48:16Z,2022-05-16T22:58:32Z,2022-05-16T22:58:33Z,MERGED,True,2,2,1,https://github.com/MonkeybreadSoftware,Update bson-iter.c,1,[],https://github.com/mongodb/mongo-c-driver/pull/990,https://github.com/MonkeybreadSoftware,1,https://github.com/mongodb/mongo-c-driver/pull/990,"This fixed compiler warning about uninitialized variable in call to bson_iter_visit_all for line 2145
mongo-c-driver/src/libbson/src/bson/bson-iter.c: In function ‘bson_iter_visit_all’:
mongo-c-driver/src/libbson/src/bson/bson-iter.c:2145:42: error: ‘key’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
          visitor->visit_unsupported_type (iter, key, bson_type, data);
                                          ^
mongo-c-driver/src/libbson/src/bson/bson-iter.c:2145:42: error: ‘bson_type’ may be used uninitialized in this function [-Werror=maybe-uninitialized]","This fixed compiler warning about uninitialized variable in call to bson_iter_visit_all for line 2145
mongo-c-driver/src/libbson/src/bson/bson-iter.c: In function ‘bson_iter_visit_all’:
mongo-c-driver/src/libbson/src/bson/bson-iter.c:2145:42: error: ‘key’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
          visitor->visit_unsupported_type (iter, key, bson_type, data);
                                          ^
mongo-c-driver/src/libbson/src/bson/bson-iter.c:2145:42: error: ‘bson_type’ may be used uninitialized in this function [-Werror=maybe-uninitialized]",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,990,2022-05-10T18:48:16Z,2022-05-16T22:58:32Z,2022-05-16T22:58:33Z,MERGED,True,2,2,1,https://github.com/MonkeybreadSoftware,Update bson-iter.c,1,[],https://github.com/mongodb/mongo-c-driver/pull/990,https://github.com/MonkeybreadSoftware,2,https://github.com/mongodb/mongo-c-driver/pull/990#issuecomment-1122847632,"This fixed compiler warning about uninitialized variable in call to bson_iter_visit_all for line 2145
mongo-c-driver/src/libbson/src/bson/bson-iter.c: In function ‘bson_iter_visit_all’:
mongo-c-driver/src/libbson/src/bson/bson-iter.c:2145:42: error: ‘key’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
          visitor->visit_unsupported_type (iter, key, bson_type, data);
                                          ^
mongo-c-driver/src/libbson/src/bson/bson-iter.c:2145:42: error: ‘bson_type’ may be used uninitialized in this function [-Werror=maybe-uninitialized]","The fix is something I need to have it compile on some older linux here.
Should not cause any problems as far as I see to initialize the variables.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,990,2022-05-10T18:48:16Z,2022-05-16T22:58:32Z,2022-05-16T22:58:33Z,MERGED,True,2,2,1,https://github.com/MonkeybreadSoftware,Update bson-iter.c,1,[],https://github.com/mongodb/mongo-c-driver/pull/990,https://github.com/vector-of-bool,3,https://github.com/mongodb/mongo-c-driver/pull/990#issuecomment-1128216554,"This fixed compiler warning about uninitialized variable in call to bson_iter_visit_all for line 2145
mongo-c-driver/src/libbson/src/bson/bson-iter.c: In function ‘bson_iter_visit_all’:
mongo-c-driver/src/libbson/src/bson/bson-iter.c:2145:42: error: ‘key’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
          visitor->visit_unsupported_type (iter, key, bson_type, data);
                                          ^
mongo-c-driver/src/libbson/src/bson/bson-iter.c:2145:42: error: ‘bson_type’ may be used uninitialized in this function [-Werror=maybe-uninitialized]","Thank you for the changes. This should be safe to merge. Out of curiosity, what compiler+version are you using that produces these warnings?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,991,2022-05-10T20:48:12Z,2022-05-18T20:22:35Z,2022-05-18T20:22:38Z,MERGED,True,3047,83,72,https://github.com/eramongodb,CDRIVER-4317 Add support for rewrapManyDataKey and keyMaterial,38,[],https://github.com/mongodb/mongo-c-driver/pull/991,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/991,"This PR is a part of CDRIVER-4317. It is being reviewed as the PoC implementation of changes proposed in mongodb/specifications#1213.
This PR:

Moves existing CSE tests into a legacy subdirectory.
Adds new unified tests added in mongodb/specifications#1213 under new unified subdirectory.
Adds support for the new rewrapManyDataKey() function to C Driver API.
Adds support for the new keyMaterial field to C Driver API.
Adds support for testing both new features in the unified test runner.

As drive-by improvements, const was added to the parameters of some helper functions in result.h and a new result_from_bulk_write() helper function was added to result.h for reusability of bulkWriteResult result comparisons.","This PR is a part of CDRIVER-4317. It is being reviewed as the PoC implementation of changes proposed in mongodb/specifications#1213.
This PR:

Moves existing CSE tests into a legacy subdirectory.
Adds new unified tests added in mongodb/specifications#1213 under new unified subdirectory.
Adds support for the new rewrapManyDataKey() function to C Driver API.
Adds support for the new keyMaterial field to C Driver API.
Adds support for testing both new features in the unified test runner.

As drive-by improvements, const was added to the parameters of some helper functions in result.h and a new result_from_bulk_write() helper function was added to result.h for reusability of bulkWriteResult result comparisons.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,991,2022-05-10T20:48:12Z,2022-05-18T20:22:35Z,2022-05-18T20:22:38Z,MERGED,True,3047,83,72,https://github.com/eramongodb,CDRIVER-4317 Add support for rewrapManyDataKey and keyMaterial,38,[],https://github.com/mongodb/mongo-c-driver/pull/991,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/991#issuecomment-1129244597,"This PR is a part of CDRIVER-4317. It is being reviewed as the PoC implementation of changes proposed in mongodb/specifications#1213.
This PR:

Moves existing CSE tests into a legacy subdirectory.
Adds new unified tests added in mongodb/specifications#1213 under new unified subdirectory.
Adds support for the new rewrapManyDataKey() function to C Driver API.
Adds support for the new keyMaterial field to C Driver API.
Adds support for testing both new features in the unified test runner.

As drive-by improvements, const was added to the parameters of some helper functions in result.h and a new result_from_bulk_write() helper function was added to result.h for reusability of bulkWriteResult result comparisons.","Before merging, try merging changes from #995 to get past the system failures.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,991,2022-05-10T20:48:12Z,2022-05-18T20:22:35Z,2022-05-18T20:22:38Z,MERGED,True,3047,83,72,https://github.com/eramongodb,CDRIVER-4317 Add support for rewrapManyDataKey and keyMaterial,38,[],https://github.com/mongodb/mongo-c-driver/pull/991,https://github.com/eramongodb,3,https://github.com/mongodb/mongo-c-driver/pull/991#issuecomment-1130250900,"This PR is a part of CDRIVER-4317. It is being reviewed as the PoC implementation of changes proposed in mongodb/specifications#1213.
This PR:

Moves existing CSE tests into a legacy subdirectory.
Adds new unified tests added in mongodb/specifications#1213 under new unified subdirectory.
Adds support for the new rewrapManyDataKey() function to C Driver API.
Adds support for the new keyMaterial field to C Driver API.
Adds support for testing both new features in the unified test runner.

As drive-by improvements, const was added to the parameters of some helper functions in result.h and a new result_from_bulk_write() helper function was added to result.h for reusability of bulkWriteResult result comparisons.","Spec tests updated to account for ""no additional keys"" requirement of non-root document matching in expectResult. Documentation for new API functions also added.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,992,2022-05-10T20:55:04Z,,2022-05-17T06:45:33Z,OPEN,False,5,0,1,https://github.com/MonkeybreadSoftware,Update mongoc-socket.c,1,[],https://github.com/mongodb/mongo-c-driver/pull/992,https://github.com/MonkeybreadSoftware,1,https://github.com/mongodb/mongo-c-driver/pull/992,"added #pragma, so the Microsoft C Compiler can add the Advapi32.lib as import library and the library compiles here for Windows.","added #pragma, so the Microsoft C Compiler can add the Advapi32.lib as import library and the library compiles here for Windows.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,992,2022-05-10T20:55:04Z,,2022-05-17T06:45:33Z,OPEN,False,5,0,1,https://github.com/MonkeybreadSoftware,Update mongoc-socket.c,1,[],https://github.com/mongodb/mongo-c-driver/pull/992,https://github.com/MonkeybreadSoftware,2,https://github.com/mongodb/mongo-c-driver/pull/992#issuecomment-1122851794,"added #pragma, so the Microsoft C Compiler can add the Advapi32.lib as import library and the library compiles here for Windows.","The screenshot from the original problem I had when building this with VS 2019 and cmake in Terminal:

So registry functions are used in Advapi32, but the lib is not in the list to link. The #pragma is a convenient way to fix this.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,992,2022-05-10T20:55:04Z,,2022-05-17T06:45:33Z,OPEN,False,5,0,1,https://github.com/MonkeybreadSoftware,Update mongoc-socket.c,1,[],https://github.com/mongodb/mongo-c-driver/pull/992,https://github.com/vector-of-bool,3,https://github.com/mongodb/mongo-c-driver/pull/992#issuecomment-1128224934,"added #pragma, so the Microsoft C Compiler can add the Advapi32.lib as import library and the library compiles here for Windows.","Thank you for your contribution!
We're hesitant to use #pragma comment(linker) as it usurps control of linking from the build system. It would be best to fix this within the build system itself. Before merging any changes, I'd like to reproduce the issue locally to discover under what conditions this link error occurs, as this isn't something we see on our own systems. Base on my reading of our current CMake project, this might occur if you are linking to mongoc_static but does not occur when linking to mongoc_shared, and there are missing library link directives for the static-linking case.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,992,2022-05-10T20:55:04Z,,2022-05-17T06:45:33Z,OPEN,False,5,0,1,https://github.com/MonkeybreadSoftware,Update mongoc-socket.c,1,[],https://github.com/mongodb/mongo-c-driver/pull/992,https://github.com/MonkeybreadSoftware,4,https://github.com/mongodb/mongo-c-driver/pull/992#issuecomment-1128477456,"added #pragma, so the Microsoft C Compiler can add the Advapi32.lib as import library and the library compiles here for Windows.","Well, just build with command line and Visual Studio 2019 for Windows ARM 64-bit target.
Maybe the cmake files somewhere only specify to include the advapi32.lib when using Windows with Intel?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,993,2022-05-11T22:26:49Z,2022-05-23T22:10:00Z,2022-05-23T22:10:00Z,MERGED,True,240,83,3,https://github.com/kevinAlbs,CDRIVER-4389 Update FLE 2 Create Collection,2,[],https://github.com/mongodb/mongo-c-driver/pull/993,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/993,"Summary

Add clusteredIndex option to state collections.
Drop the data collection after state collections.

Background & Motivation
See DRIVERS-2326 for the corresponding spec change.","Summary

Add clusteredIndex option to state collections.
Drop the data collection after state collections.

Background & Motivation
See DRIVERS-2326 for the corresponding spec change.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,994,2022-05-11T22:34:58Z,2022-05-12T19:25:40Z,2022-05-25T23:39:17Z,MERGED,True,4,0,1,https://github.com/vector-of-bool,(QoL) Enable cross-config if we are the top-level project in a ninja-multiconf build,1,[],https://github.com/mongodb/mongo-c-driver/pull/994,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/994,"The Ninja Multi-Config generator permits building arbitrary configurations without rerunning CMake. This PR enables the special ""colon-suffix"" cross-config targets in the generated Ninja files. i.e. one can build all:Debug to build the project in Debug, all:Release to build the project in release, and all:all to build all enabled configurations simultaneously.","The Ninja Multi-Config generator permits building arbitrary configurations without rerunning CMake. This PR enables the special ""colon-suffix"" cross-config targets in the generated Ninja files. i.e. one can build all:Debug to build the project in Debug, all:Release to build the project in release, and all:all to build all enabled configurations simultaneously.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,995,2022-05-15T11:14:31Z,2022-05-17T19:35:35Z,2022-05-17T19:35:35Z,MERGED,True,126,19,1,https://github.com/kevinAlbs,download legacy shell from 5.0 package,4,[],https://github.com/mongodb/mongo-c-driver/pull/995,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/995,"Summary

Copy the latest version of download-mongodb.sh from drivers-evergreen-tools
Apply changes to download-mongodb.sh proposed in mongodb-labs/drivers-evergreen-tools#199

Background & Motivation
This resolves SYSTEM FAILED tasks for latest. The cause of those failures is the legacy ""mongo"" shell being removed from the server download from SERVER-64352.","Summary

Copy the latest version of download-mongodb.sh from drivers-evergreen-tools
Apply changes to download-mongodb.sh proposed in mongodb-labs/drivers-evergreen-tools#199

Background & Motivation
This resolves SYSTEM FAILED tasks for latest. The cause of those failures is the legacy ""mongo"" shell being removed from the server download from SERVER-64352.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,995,2022-05-15T11:14:31Z,2022-05-17T19:35:35Z,2022-05-17T19:35:35Z,MERGED,True,126,19,1,https://github.com/kevinAlbs,download legacy shell from 5.0 package,4,[],https://github.com/mongodb/mongo-c-driver/pull/995,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/995#issuecomment-1128186705,"Summary

Copy the latest version of download-mongodb.sh from drivers-evergreen-tools
Apply changes to download-mongodb.sh proposed in mongodb-labs/drivers-evergreen-tools#199

Background & Motivation
This resolves SYSTEM FAILED tasks for latest. The cause of those failures is the legacy ""mongo"" shell being removed from the server download from SERVER-64352.",Needs update to match. mongodb-labs/drivers-evergreen-tools#199,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,995,2022-05-15T11:14:31Z,2022-05-17T19:35:35Z,2022-05-17T19:35:35Z,MERGED,True,126,19,1,https://github.com/kevinAlbs,download legacy shell from 5.0 package,4,[],https://github.com/mongodb/mongo-c-driver/pull/995,https://github.com/kevinAlbs,3,https://github.com/mongodb/mongo-c-driver/pull/995#issuecomment-1128901030,"Summary

Copy the latest version of download-mongodb.sh from drivers-evergreen-tools
Apply changes to download-mongodb.sh proposed in mongodb-labs/drivers-evergreen-tools#199

Background & Motivation
This resolves SYSTEM FAILED tasks for latest. The cause of those failures is the legacy ""mongo"" shell being removed from the server download from SERVER-64352.","Needs update to match. mongodb-labs/drivers-evergreen-tools#199

Done. I should have waited until that PR was merged before requesting review on this.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,996,2022-05-16T09:15:09Z,,2022-05-17T20:33:50Z,OPEN,False,1,1,1,https://github.com/sigmaseven,Allow for building on Alpine Linux systems,1,[],https://github.com/mongodb/mongo-c-driver/pull/996,https://github.com/sigmaseven,1,https://github.com/mongodb/mongo-c-driver/pull/996,This change allows for mongo-c-driver to be built on Alpine Linux-based systems.,This change allows for mongo-c-driver to be built on Alpine Linux-based systems.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,996,2022-05-16T09:15:09Z,,2022-05-17T20:33:50Z,OPEN,False,1,1,1,https://github.com/sigmaseven,Allow for building on Alpine Linux systems,1,[],https://github.com/mongodb/mongo-c-driver/pull/996,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/996#issuecomment-1128215747,This change allows for mongo-c-driver to be built on Alpine Linux-based systems.,"Any errors from mongodl.py would be non-fatal errors, as the script is only applicable for integration testing purposes, additionally the MongoDB binaries that would be downloaded by this changeset would be incompatible with Alpine as the they would require GNU glibc rather than musl. What errors are you seeing that prevent the code from compiling and running on Alpine?",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,996,2022-05-16T09:15:09Z,,2022-05-17T20:33:50Z,OPEN,False,1,1,1,https://github.com/sigmaseven,Allow for building on Alpine Linux systems,1,[],https://github.com/mongodb/mongo-c-driver/pull/996,https://github.com/sigmaseven,3,https://github.com/mongodb/mongo-c-driver/pull/996#issuecomment-1129292334,This change allows for mongo-c-driver to be built on Alpine Linux-based systems.,"The error this specifically deals with was the following:
[ 94%] Linking C executable mongoc-stat [ 94%] Built target mongoc-stat [ 94%] Downloading csfle Downloading [https://downloads.mongodb.org/full.json] ... Refreshing downloads manifest ... Traceback (most recent call last): File ""/root/mongo-c-driver/build/mongodl.py"", line 700, in <module> sys.exit(main()) File ""/root/mongo-c-driver/build/mongodl.py"", line 679, in main target = args.target or infer_target() File ""/root/mongo-c-driver/build/mongodl.py"", line 86, in infer_target return _infer_target_os_rel() File ""/root/mongo-c-driver/build/mongodl.py"", line 121, in _infer_target_os_rel raise RuntimeError(""We don't know how to map '{}' to a distribution "" RuntimeError: We don't know how to map 'alpine' to a distribution download target. Please contribute! make[2]: *** [src/libmongoc/CMakeFiles/get-csfle.dir/build.make:73: src/libmongoc/mongo_csfle_v1.so] Error 1 make[1]: *** [CMakeFiles/Makefile2:2198: src/libmongoc/CMakeFiles/get-csfle.dir/all] Error 2 make: *** [Makefile:166: all] Error 2
I'm simply adding a 'mapping' that doesn't download any additional binaries so that it actually goes through the entire build process. If you'd prefer to take a crack at it I'm all for it, but it's kind of silly to hold up a build because a string isn't in a python script.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,997,2022-05-17T13:49:28Z,2022-05-19T02:28:24Z,2022-05-19T02:28:24Z,MERGED,True,805,11,14,https://github.com/kevinAlbs,CDRIVER-4372 Add FLE 2 API to explicit encryption,7,[],https://github.com/mongodb/mongo-c-driver/pull/997,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/997,"Summary

Support new encryption algorithms ""Indexed"" and ""Unindexed"".
Support the new explicit encryption API: queryType and contentionFactor.

Background & Motivation
The ticket ""Upstream Changes Summary"" links to the specification changes implemented.","Summary

Support new encryption algorithms ""Indexed"" and ""Unindexed"".
Support the new explicit encryption API: queryType and contentionFactor.

Background & Motivation
The ticket ""Upstream Changes Summary"" links to the specification changes implemented.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,998,2022-05-17T15:42:35Z,2022-05-17T18:04:24Z,2022-05-17T18:04:24Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,CDRIVER-4376 note that Visual Studio 2013 is required,1,[],https://github.com/mongodb/mongo-c-driver/pull/998,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/998,"The C driver has not tested on Visual Studio < 2013 or since Visual Studio versions older than 2013 were removed from Evergreen (refer: CDRIVER-3593).
There is an incorrect note in the public documentation claiming to support back to 2010.","The C driver has not tested on Visual Studio < 2013 or since Visual Studio versions older than 2013 were removed from Evergreen (refer: CDRIVER-3593).
There is an incorrect note in the public documentation claiming to support back to 2010.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,999,2022-05-18T19:24:04Z,2022-05-18T23:30:19Z,2022-05-18T23:30:19Z,MERGED,True,2,1,1,https://github.com/vector-of-bool,Fix SANITIZE arg shell quoting,1,[],https://github.com/mongodb/mongo-c-driver/pull/999,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/999,"The current build is not building with sanitizers enabled. The escaped quotes around MONGO_SANITIZE are passed through literally, and CMake just discards the argument and doesn't mention it. The quotes are not required as the argument should be shell-safe.","The current build is not building with sanitizers enabled. The escaped quotes around MONGO_SANITIZE are passed through literally, and CMake just discards the argument and doesn't mention it. The quotes are not required as the argument should be shell-safe.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1000,2022-05-18T19:38:28Z,,2022-06-03T19:11:13Z,OPEN,False,341,26,12,https://github.com/vector-of-bool,"Fuzzing Utilities, and bson2json+json2bson tools",5,[],https://github.com/mongodb/mongo-c-driver/pull/1000,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/1000,"This adds some basic fuzzing build utilities, and defines bson2json and json2bson command-line tools. This was useful in diagnosing and debugging CDRIVER-4383 and CDRIVER-3380. It replaces the prior fuzzing target file, which itself wasn't being built by any CMake code.","This adds some basic fuzzing build utilities, and defines bson2json and json2bson command-line tools. This was useful in diagnosing and debugging CDRIVER-4383 and CDRIVER-3380. It replaces the prior fuzzing target file, which itself wasn't being built by any CMake code.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1001,2022-05-18T20:48:35Z,2022-05-19T03:31:17Z,2022-05-19T03:31:20Z,MERGED,True,6,0,1,https://github.com/jmikola,CDRIVER-4309 document behavior for estimated_document_count,1,[],https://github.com/mongodb/mongo-c-driver/pull/1001,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/1001,"https://jira.mongodb.org/browse/CDRIVER-4309
Required documentation per the CRUD spec, which I missed in the original PR.","https://jira.mongodb.org/browse/CDRIVER-4309
Required documentation per the CRUD spec, which I missed in the original PR.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1002,2022-05-19T10:50:25Z,2022-05-19T16:52:17Z,2022-05-19T16:52:17Z,MERGED,True,2,1,2,https://github.com/kevinAlbs,CDRIVER-4396 update version check for csfle,1,[],https://github.com/mongodb/mongo-c-driver/pull/1002,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1002,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1003,2022-05-19T23:44:06Z,2022-05-20T03:49:46Z,2022-05-25T23:38:42Z,MERGED,True,2687,362,4,https://github.com/vector-of-bool,CDRIVER-4380 Update maxWireVersion for 6.0,3,[],https://github.com/mongodb/mongo-c-driver/pull/1003,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/1003,"Addresses CDRIVER-4380
I've added a set of tasks for 6.0 integration testing in this PR. Also we seem to have jumped over wire version 16, which I believe corresponds to server version 5.3 based on digging in the code.","Addresses CDRIVER-4380
I've added a set of tasks for 6.0 integration testing in this PR. Also we seem to have jumped over wire version 16, which I believe corresponds to server version 5.3 based on digging in the code.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1003,2022-05-19T23:44:06Z,2022-05-20T03:49:46Z,2022-05-25T23:38:42Z,MERGED,True,2687,362,4,https://github.com/vector-of-bool,CDRIVER-4380 Update maxWireVersion for 6.0,3,[],https://github.com/mongodb/mongo-c-driver/pull/1003,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/1003#issuecomment-1132323329,"Addresses CDRIVER-4380
I've added a set of tasks for 6.0 integration testing in this PR. Also we seem to have jumped over wire version 16, which I believe corresponds to server version 5.3 based on digging in the code.","I've added a set of tasks for 6.0 integration testing in this PR. Also we seem to have jumped over wire version 16, which I believe corresponds to server version 5.3 based on digging in the code.

https://github.com/mongodb/specifications/blob/master/source/wireversion-featurelist.rst also is a quick reference. Though it needs to be updated for 6.0.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1004,2022-05-21T14:51:28Z,2022-05-23T22:09:26Z,2022-05-23T22:09:26Z,MERGED,True,0,1,1,https://github.com/kevinAlbs,do not skip explain,1,[],https://github.com/mongodb/mongo-c-driver/pull/1004,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1004,Explain is now supported when using csfle with changes of MONGOCRYPT-427.,Explain is now supported when using csfle with changes of MONGOCRYPT-427.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1005,2022-05-21T15:00:03Z,2022-05-27T19:54:01Z,2022-05-27T19:54:01Z,MERGED,True,1277,0,3,https://github.com/kevinAlbs,CDRIVER-4390 sync validatorAndPartialFieldExpression + create-and-createIndexes tests,1,[],https://github.com/mongodb/mongo-c-driver/pull/1005,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1005,"Summary
Syncs the tests added in DRIVERS-2309. No driver changes needed.","Summary
Syncs the tests added in DRIVERS-2309. No driver changes needed.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1006,2022-05-23T18:41:49Z,2022-05-23T20:22:51Z,2022-05-23T20:22:51Z,MERGED,True,232,0,1,https://github.com/kevinAlbs,CDRIVER-4375 sync fle2-Compact test,3,[],https://github.com/mongodb/mongo-c-driver/pull/1006,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1006,"Summary

Sync the fle2-Compact test.","Summary

Sync the fle2-Compact test.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1007,2022-05-24T02:27:49Z,2022-05-24T14:31:59Z,2022-05-24T14:32:02Z,MERGED,True,4,3,1,https://github.com/jmikola,Replace TODO comment,1,[],https://github.com/mongodb/mongo-c-driver/pull/1007,https://github.com/jmikola,1,https://github.com/mongodb/mongo-c-driver/pull/1007,This was previously discussed in #982 (comment) but I forgot to revise the TODO comment before merging.,This was previously discussed in #982 (comment) but I forgot to revise the TODO comment before merging.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1008,2022-05-24T16:50:38Z,2022-05-31T18:14:59Z,2022-05-31T18:15:02Z,MERGED,True,5405,827,26,https://github.com/eramongodb,CDRIVER-4317 Add remaining Key Management API functions,46,[],https://github.com/mongodb/mongo-c-driver/pull/1008,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/1008,"Description
This PR is the last in the series resolving CDRIVER-4317. It is the POC for mongodb/specifications#1229.
Read and Write Concern
Operations on the key vault collection are required to use ""majority"" read and write concern. Rather than explicitly setting the concern levels on each operation, ""majority"" is set as the default concern level for the key vault collection via mongoc_collection_set_read_concern() and mongoc_collection_set_write_concern (). This was already being done for the write concern level, but has been extended to the read concern level. Assertions have been added to relevant functions that require an appropriate concern level.
Key Management API
All remaining functions in the Key Management API have been added to the C driver along with corresponding documentation.
Unified Test Runner
Spec tests have been synced with mongodb/specifications#1229 and support added for the new operations corresponding to the Key Management API.
CSE Prose Test 12
The prose test for the unique index on keyAltNames has been implemented to ensure duplicate key errors are properly handled by relevant functions.","Description
This PR is the last in the series resolving CDRIVER-4317. It is the POC for mongodb/specifications#1229.
Read and Write Concern
Operations on the key vault collection are required to use ""majority"" read and write concern. Rather than explicitly setting the concern levels on each operation, ""majority"" is set as the default concern level for the key vault collection via mongoc_collection_set_read_concern() and mongoc_collection_set_write_concern (). This was already being done for the write concern level, but has been extended to the read concern level. Assertions have been added to relevant functions that require an appropriate concern level.
Key Management API
All remaining functions in the Key Management API have been added to the C driver along with corresponding documentation.
Unified Test Runner
Spec tests have been synced with mongodb/specifications#1229 and support added for the new operations corresponding to the Key Management API.
CSE Prose Test 12
The prose test for the unique index on keyAltNames has been implemented to ensure duplicate key errors are properly handled by relevant functions.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1009,2022-05-24T21:44:53Z,2022-05-25T19:42:31Z,2022-05-25T19:42:31Z,MERGED,True,42,3,4,https://github.com/kevinAlbs,CDRIVER-4390 resync fle2-CreateCollection,6,[],https://github.com/mongodb/mongo-c-driver/pull/1009,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1009,"Summary

Update the fle2-CreateCollection test from mongodb/specifications#1230.
Update the download-mongodb.sh script.

Background & Motivation
Updating fle2-CreateCollection resolves test failures. MONGOCRYPT-429 requires additional listCollections commands in the expectations in the fle2-CreateCollection test.
download-mongodb.sh was updated to get a newer 6.0.0-rc5. Tests are expected fail on mongocryptd or csfle versions >= 6.0.0-rc0 and <= 6.0.0-rc4. The versions do not include SERVER-64911.","Summary

Update the fle2-CreateCollection test from mongodb/specifications#1230.
Update the download-mongodb.sh script.

Background & Motivation
Updating fle2-CreateCollection resolves test failures. MONGOCRYPT-429 requires additional listCollections commands in the expectations in the fle2-CreateCollection test.
download-mongodb.sh was updated to get a newer 6.0.0-rc5. Tests are expected fail on mongocryptd or csfle versions >= 6.0.0-rc0 and <= 6.0.0-rc4. The versions do not include SERVER-64911.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1010,2022-05-24T23:17:05Z,2022-05-25T18:14:08Z,2022-05-25T23:38:14Z,MERGED,True,26,20,3,https://github.com/vector-of-bool,CDRIVER-4305: 'fullDocument' may be null/omitted,1,[],https://github.com/mongodb/mongo-c-driver/pull/1010,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/1010,"This commit implements CDRIVER-4305, which allows fullDocument to be
NULL equivalent to a literal ""default"" string. This is permitted in
server 3.6+, and this change makes that the preferred and default
behavior.
This driver already requires 3.6 or newer (as per minWireVersion)
This changeset does not introduce new tests, but it was tested locally against the change_streams unified tests, which rely on fullDocument being nullable. Additional changes are required before the change_streams unified tests can be enabled.","This commit implements CDRIVER-4305, which allows fullDocument to be
NULL equivalent to a literal ""default"" string. This is permitted in
server 3.6+, and this change makes that the preferred and default
behavior.
This driver already requires 3.6 or newer (as per minWireVersion)
This changeset does not introduce new tests, but it was tested locally against the change_streams unified tests, which rely on fullDocument being nullable. Additional changes are required before the change_streams unified tests can be enabled.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1011,2022-05-24T23:36:11Z,2022-05-27T04:32:49Z,2022-05-27T16:17:32Z,MERGED,True,45,0,1,https://github.com/vector-of-bool,"CDRIVER-4321: Support a ""rename"" operation for collections",7,[],https://github.com/mongodb/mongo-c-driver/pull/1011,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/1011,"This adds support for the ""rename"" operation in the unified test format
this will rename the collection in the server as well as the local
copy in the entity map for later operations.
This changeset does not include test updates, but was manually validated
locally against the updated changestreams tests, which cannot be enabled
without additional changes that are beyond the scope of this PR.","This adds support for the ""rename"" operation in the unified test format
this will rename the collection in the server as well as the local
copy in the entity map for later operations.
This changeset does not include test updates, but was manually validated
locally against the updated changestreams tests, which cannot be enabled
without additional changes that are beyond the scope of this PR.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1011,2022-05-24T23:36:11Z,2022-05-27T04:32:49Z,2022-05-27T16:17:32Z,MERGED,True,45,0,1,https://github.com/vector-of-bool,"CDRIVER-4321: Support a ""rename"" operation for collections",7,[],https://github.com/mongodb/mongo-c-driver/pull/1011,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/1011#issuecomment-1137666077,"This adds support for the ""rename"" operation in the unified test format
this will rename the collection in the server as well as the local
copy in the entity map for later operations.
This changeset does not include test updates, but was manually validated
locally against the updated changestreams tests, which cannot be enabled
without additional changes that are beyond the scope of this PR.",I was unsure of that. I'll investigate.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1011,2022-05-24T23:36:11Z,2022-05-27T04:32:49Z,2022-05-27T16:17:32Z,MERGED,True,45,0,1,https://github.com/vector-of-bool,"CDRIVER-4321: Support a ""rename"" operation for collections",7,[],https://github.com/mongodb/mongo-c-driver/pull/1011,https://github.com/vector-of-bool,3,https://github.com/mongodb/mongo-c-driver/pull/1011#issuecomment-1137880656,"This adds support for the ""rename"" operation in the unified test format
this will rename the collection in the server as well as the local
copy in the entity map for later operations.
This changeset does not include test updates, but was manually validated
locally against the updated changestreams tests, which cannot be enabled
without additional changes that are beyond the scope of this PR.","@kevinAlbs The original changeset was missing the ""rename"" operation code entirely, so it wasn't even correct. I've removed the entity rename coe, as we won't need it.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1012,2022-05-24T23:49:17Z,2022-05-25T18:16:11Z,2022-05-25T23:38:04Z,MERGED,True,16,5,1,https://github.com/vector-of-bool,CDRIVER-3973: Support the ignoreExtraEvents property,1,[],https://github.com/mongodb/mongo-c-driver/pull/1012,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/1012,"This doesn't fully complete the tasks of CDRIVER-3973, but finishes a
single isolated subtask thereof: Supprt for the ignoreExtraEvents
property on expectedEventsForClient, which is a prereq for enabling
the new changestreams tests.
In this case, if ignoreExtraEvents is specified as true, we won't
generate an error if the ""actual events"" contains more events than
""expected events."" Each expected event is still searched for within
the ""actual events"" list, and anything additional is ignored.","This doesn't fully complete the tasks of CDRIVER-3973, but finishes a
single isolated subtask thereof: Supprt for the ignoreExtraEvents
property on expectedEventsForClient, which is a prereq for enabling
the new changestreams tests.
In this case, if ignoreExtraEvents is specified as true, we won't
generate an error if the ""actual events"" contains more events than
""expected events."" Each expected event is still searched for within
the ""actual events"" list, and anything additional is ignored.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1013,2022-05-25T17:30:17Z,2022-05-30T19:44:37Z,2022-05-30T19:44:38Z,MERGED,True,1,1,1,https://github.com/kevinAlbs,CDRIVER-4372 initialize mongocrypt_query_type_t value,1,[],https://github.com/mongodb/mongo-c-driver/pull/1013,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1013,"This is a precaution. In the event that mongoc_encrypt_query_type_t is extended without the switch case being updated, this leaves the value converted initialized.","This is a precaution. In the event that mongoc_encrypt_query_type_t is extended without the switch case being updated, this leaves the value converted initialized.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1014,2022-05-25T21:57:34Z,2022-05-25T23:54:47Z,2022-05-25T23:54:47Z,MERGED,True,1,0,1,https://github.com/vector-of-bool,CDRIVER-4199: Add comment to change stream getMore commands,1,[],https://github.com/mongodb/mongo-c-driver/pull/1014,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/1014,"This adds a missing ""comment"" value to getMore for changestreams. This
fixes test failures in the changestreams tests, which are not yet
enabled in this branch but has been manually validated locally.","This adds a missing ""comment"" value to getMore for changestreams. This
fixes test failures in the changestreams tests, which are not yet
enabled in this branch but has been manually validated locally.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1014,2022-05-25T21:57:34Z,2022-05-25T23:54:47Z,2022-05-25T23:54:47Z,MERGED,True,1,0,1,https://github.com/vector-of-bool,CDRIVER-4199: Add comment to change stream getMore commands,1,[],https://github.com/mongodb/mongo-c-driver/pull/1014,https://github.com/jmikola,2,https://github.com/mongodb/mongo-c-driver/pull/1014#issuecomment-1137981659,"This adds a missing ""comment"" value to getMore for changestreams. This
fixes test failures in the changestreams tests, which are not yet
enabled in this branch but has been manually validated locally.","Note: I renamed the PR, as I think this should be associated with CDRIVER-4199 (unless you had another ticket for it).",True,{'THUMBS_UP': ['https://github.com/vector-of-bool']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1015,2022-05-25T22:53:25Z,2022-05-27T19:41:13Z,2022-05-27T19:41:13Z,MERGED,True,231,68,4,https://github.com/vector-of-bool,CDRIVER-3973 + CDRIVER-4366 : Update and use change-streams tests,15,[],https://github.com/mongodb/mongo-c-driver/pull/1015,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/1015,This changeset addresses both CDRIVER-3973 and CDRIVER-4366. If pulls the updated tests for 4366 while also finishing support for the test cases required to complete 3973. This PR includes changes from #1011 and #1014: Check those PRs to see those changes in isolation.,This changeset addresses both CDRIVER-3973 and CDRIVER-4366. If pulls the updated tests for 4366 while also finishing support for the test cases required to complete 3973. This PR includes changes from #1011 and #1014: Check those PRs to see those changes in isolation.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1016,2022-05-26T00:36:42Z,2022-05-31T19:44:15Z,2022-06-01T17:43:56Z,MERGED,True,44,9,8,https://github.com/vector-of-bool,CDRIVER-4277: Pre-point-in-time support,18,[],https://github.com/mongodb/mongo-c-driver/pull/1016,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/1016,"This change implements DRIVERS-2189. This also includes a generate-opts change that was missed as part of #1010. This changeset builds upon #1015, which enables and fixes the change-streams unified tests.","This change implements DRIVERS-2189. This also includes a generate-opts change that was missed as part of #1010. This changeset builds upon #1015, which enables and fixes the change-streams unified tests.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1016,2022-05-26T00:36:42Z,2022-05-31T19:44:15Z,2022-06-01T17:43:56Z,MERGED,True,44,9,8,https://github.com/vector-of-bool,CDRIVER-4277: Pre-point-in-time support,18,[],https://github.com/mongodb/mongo-c-driver/pull/1016,https://github.com/vector-of-bool,2,https://github.com/mongodb/mongo-c-driver/pull/1016#issuecomment-1138018376,"This change implements DRIVERS-2189. This also includes a generate-opts change that was missed as part of #1010. This changeset builds upon #1015, which enables and fixes the change-streams unified tests.","Just noticed that this also includes spec test updates for CDRIVER-4368, since I pulled the JSON files from HEAD.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1017,2022-05-26T18:19:03Z,2022-05-26T18:21:57Z,2022-05-26T18:21:59Z,MERGED,True,1,1,1,https://github.com/eramongodb,Fix printing location of libmongocrypt with invalid version,1,[],https://github.com/mongodb/mongo-c-driver/pull/1017,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/1017,"Current implementation results in the following error message (note the missing location of the candidate):
Searching for libmongocrypt
--   libmongocrypt found at
--   libmongocrypt version 1.3.0 found
--   libmongocrypt version 1.5.0 is required to enable Client-Side Field Level Encryption Support.
CMake Error at src/libmongoc/CMakeLists.txt:466 (message):
  Required library (libmongocrypt) not found.

This PR addresses this issue by using ${mongocrypt_DIR} instead of the not-yet-defined ${LIBMONGOCRYPT_LIBRARY} on line 459:
 Searching for libmongocrypt
 --   libmongocrypt found at /mnt/c/Users/eramongodb/Projects/libmongocrypt/local-install/lib/cmake/mongocrypt
 --   libmongocrypt version 1.3.0 found
 --   libmongocrypt version 1.5.0 is required to enable Client-Side Field Level Encryption Support.
 CMake Error at src/libmongoc/CMakeLists.txt:466 (message):
   Required library (libmongocrypt) not found.","Current implementation results in the following error message (note the missing location of the candidate):
Searching for libmongocrypt
--   libmongocrypt found at
--   libmongocrypt version 1.3.0 found
--   libmongocrypt version 1.5.0 is required to enable Client-Side Field Level Encryption Support.
CMake Error at src/libmongoc/CMakeLists.txt:466 (message):
  Required library (libmongocrypt) not found.

This PR addresses this issue by using ${mongocrypt_DIR} instead of the not-yet-defined ${LIBMONGOCRYPT_LIBRARY} on line 459:
 Searching for libmongocrypt
 --   libmongocrypt found at /mnt/c/Users/eramongodb/Projects/libmongocrypt/local-install/lib/cmake/mongocrypt
 --   libmongocrypt version 1.3.0 found
 --   libmongocrypt version 1.5.0 is required to enable Client-Side Field Level Encryption Support.
 CMake Error at src/libmongoc/CMakeLists.txt:466 (message):
   Required library (libmongocrypt) not found.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1018,2022-05-27T14:33:43Z,2022-05-30T19:44:25Z,2022-05-30T19:44:25Z,MERGED,True,2,2,2,https://github.com/kevinAlbs,pin libmongocrypt to 1.5.0-alpha2,1,[],https://github.com/mongodb/mongo-c-driver/pull/1018,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1018,Resolving MONGOCRYPT-434 may put the libmongocrypt master branch in a temporary breaking state until drivers update bindings and SERVER-66771 is released.,Resolving MONGOCRYPT-434 may put the libmongocrypt master branch in a temporary breaking state until drivers update bindings and SERVER-66771 is released.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1019,2022-05-30T16:50:50Z,,2022-05-30T16:50:50Z,OPEN,False,9,9,7,https://github.com/kevinAlbs,Update expected FLE 2 find payloads,2,[],https://github.com/mongodb/mongo-c-driver/pull/1019,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1019,Patch build: https://spruce.mongodb.com/version/6294f2e10305b94cf9357c7d/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,Patch build: https://spruce.mongodb.com/version/6294f2e10305b94cf9357c7d/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1020,2022-05-30T18:37:05Z,2022-06-03T13:59:48Z,2022-06-03T13:59:48Z,MERGED,True,131,81,5,https://github.com/kevinAlbs,CDRIVER-4398 use matching db for mongocryptd command,5,[],https://github.com/mongodb/mongo-c-driver/pull/1020,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1020,"Summary

Use matching db for mongocryptd command.
Add variant to run *-cse tasks with new mongocryptd.

Background and Motivation
Sending the following command to mongocryptd 6.0.0-rc4 is OK.
{
    ""find"": ""default"",
    ""filter"": {},
    ""encryptionInformation"": {
        ""type"": 1,
        ""schema"": {
            ""default.default"": {
                ""escCollection"": ""enxcol_.default.esc"",
                ""eccCollection"": ""enxcol_.default.ecc"",
                ""ecocCollection"": ""enxcol_.default.ecoc"",
                ""fields"": []
            }
        }
    },
    ""$db"": ""admin""
}
Sending the above command on 6.0.0-rc5 returns an error due to the mismatch in $db and database listed in encryptionInformation.schema:
{
    ""ok"": 0.0,
    ""errmsg"": ""Namespace in encryptionInformation: 'default.default' does not match namespace given in command: 'admin.default'"",
    ""code"": 6411900,
    ""codeName"": ""Location6411900""
}

There are no tasks in Evergreen testing with new versions of mongocryptd. Running the new variant without the fix fails as expected.","Summary

Use matching db for mongocryptd command.
Add variant to run *-cse tasks with new mongocryptd.

Background and Motivation
Sending the following command to mongocryptd 6.0.0-rc4 is OK.
{
    ""find"": ""default"",
    ""filter"": {},
    ""encryptionInformation"": {
        ""type"": 1,
        ""schema"": {
            ""default.default"": {
                ""escCollection"": ""enxcol_.default.esc"",
                ""eccCollection"": ""enxcol_.default.ecc"",
                ""ecocCollection"": ""enxcol_.default.ecoc"",
                ""fields"": []
            }
        }
    },
    ""$db"": ""admin""
}
Sending the above command on 6.0.0-rc5 returns an error due to the mismatch in $db and database listed in encryptionInformation.schema:
{
    ""ok"": 0.0,
    ""errmsg"": ""Namespace in encryptionInformation: 'default.default' does not match namespace given in command: 'admin.default'"",
    ""code"": 6411900,
    ""codeName"": ""Location6411900""
}

There are no tasks in Evergreen testing with new versions of mongocryptd. Running the new variant without the fix fails as expected.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1021,2022-05-31T16:28:59Z,2022-06-01T14:28:09Z,2022-06-01T14:28:12Z,MERGED,True,548,2,5,https://github.com/eramongodb,Sync collection-management unified tests,5,[],https://github.com/mongodb/mongo-c-driver/pull/1021,https://github.com/eramongodb,1,https://github.com/mongodb/mongo-c-driver/pull/1021,"Description
This PR resolves CDRIVER-4359, CDRIVER-4368, and CDRIVER-4392.
Implementation
No changes were required to support the new changeStreamPreAndPostImages or clusteredIndex options, as options are specified as fields of a bson_t document that is forwarded directly to the server. Supporting the new options simply constituted adding a clusteredIndex field to the options document. Similarly, no changes were required to support the new clustered field in the result of listIndexes, as it is simply forwarding the result from the server as a bson_t.
Unified Test Runner
The only major change required was adding support for the new modifyCollection operation.
However, the new unified tests exposed two bugs in the unified test runner implementation that are addressed in this PR.

The error parameter may not be initialized or assigned to before being tested during result checks after the first test is executed, leading to undefined behavior manifest as a test failure due to an unexpected error with junk error message.
The implementation of the listIndexes operation assumed one or more arguments, which is no longer the case with the new unified tests. A simple check was added to guard the call to bson_concat() to permit zero arguments.","Description
This PR resolves CDRIVER-4359, CDRIVER-4368, and CDRIVER-4392.
Implementation
No changes were required to support the new changeStreamPreAndPostImages or clusteredIndex options, as options are specified as fields of a bson_t document that is forwarded directly to the server. Supporting the new options simply constituted adding a clusteredIndex field to the options document. Similarly, no changes were required to support the new clustered field in the result of listIndexes, as it is simply forwarding the result from the server as a bson_t.
Unified Test Runner
The only major change required was adding support for the new modifyCollection operation.
However, the new unified tests exposed two bugs in the unified test runner implementation that are addressed in this PR.

The error parameter may not be initialized or assigned to before being tested during result checks after the first test is executed, leading to undefined behavior manifest as a test failure due to an unexpected error with junk error message.
The implementation of the listIndexes operation assumed one or more arguments, which is no longer the case with the new unified tests. A simple check was added to guard the call to bson_concat() to permit zero arguments.",True,{'THUMBS_UP': ['https://github.com/kevinAlbs']}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1022,2022-06-01T00:04:40Z,2022-06-01T18:09:54Z,2022-06-01T18:09:54Z,MERGED,True,119,100,20,https://github.com/vector-of-bool,"[CDRIVER-4400] Rename references of ""csfle"" to ""crypt_shared""",11,[],https://github.com/mongodb/mongo-c-driver/pull/1022,https://github.com/vector-of-bool,1,https://github.com/mongodb/mongo-c-driver/pull/1022,Refer: DRIVERS-2338 for relevant spec update.,Refer: DRIVERS-2338 for relevant spec update.,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1022,2022-06-01T00:04:40Z,2022-06-01T18:09:54Z,2022-06-01T18:09:54Z,MERGED,True,119,100,20,https://github.com/vector-of-bool,"[CDRIVER-4400] Rename references of ""csfle"" to ""crypt_shared""",11,[],https://github.com/mongodb/mongo-c-driver/pull/1022,https://github.com/kevinAlbs,2,https://github.com/mongodb/mongo-c-driver/pull/1022#issuecomment-1143720040,Refer: DRIVERS-2338 for relevant spec update.,"Confirming, what motivated the updates to the fle2 legacy test files?

The latest libmongocrypt includes two changes:

MONGOCRYPT-433 updates the payload for FLE 2 find
MONGOCRYPT-434 accounts for the shared library rename

Changes for MONGOCRYPT-433 are tracked in CDRIVER-4397. But I chose to include the updated test files in this PR to get tests passing with latest libmongocrypt.",True,"{'THUMBS_UP': ['https://github.com/eramongodb', 'https://github.com/vector-of-bool']}"
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1023,2022-06-02T13:23:31Z,,2022-06-02T13:27:19Z,OPEN,False,82,2,3,https://github.com/kevinAlbs,test create with bypassqueryanalysis,2,[],https://github.com/mongodb/mongo-c-driver/pull/1023,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1023,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1024,2022-06-03T00:51:13Z,2022-06-03T20:53:46Z,2022-06-03T20:53:46Z,MERGED,True,426,12,2,https://github.com/kevinAlbs,CDRIVER-4401 decrypt after emitting events,7,[],https://github.com/mongodb/mongo-c-driver/pull/1024,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1024,"Summary

Decrypt after emitting events

Background & Motivation
Please see CDRIVER-4401 for more details.
Logic try to decrypt an error reply was considered. I do not think an error reply can contain ciphertext to decrypt.
Adding specification tests was considered. The legacy CSE test format, based on the legacy Transactions test format, only supports assertions on command started events:

expectations: Optional list of command-started events.","Summary

Decrypt after emitting events

Background & Motivation
Please see CDRIVER-4401 for more details.
Logic try to decrypt an error reply was considered. I do not think an error reply can contain ciphertext to decrypt.
Adding specification tests was considered. The legacy CSE test format, based on the legacy Transactions test format, only supports assertions on command started events:

expectations: Optional list of command-started events.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1025,2022-06-05T13:49:53Z,,2022-06-05T14:33:05Z,OPEN,False,22,19,1,https://github.com/kevinAlbs,CDRIVER-4401 use deterministic encryption in prose test,2,[],https://github.com/mongodb/mongo-c-driver/pull/1025,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1025,"Summary

Use deterministic encryption for test with malformed ciphertext.
Use test numbering for Decryption Error tests from DRIVERS-2350.

Background & Motivation
Making a malformed ciphertext zeros the last byte on the HMAC tag.
With random encryption, the last byte may be expectedly 0.","Summary

Use deterministic encryption for test with malformed ciphertext.
Use test numbering for Decryption Error tests from DRIVERS-2350.

Background & Motivation
Making a malformed ciphertext zeros the last byte on the HMAC tag.
With random encryption, the last byte may be expectedly 0.",True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1026,2022-06-06T13:43:23Z,,2022-06-06T14:11:51Z,OPEN,False,57,0,2,https://github.com/kevinAlbs,update NEWS for 1.22.0-beta0,2,[],https://github.com/mongodb/mongo-c-driver/pull/1026,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1026,,,True,{}
mongodb/mongo-c-driver,https://github.com/mongodb/mongo-c-driver,1027,2022-06-06T14:34:04Z,,2022-06-06T16:01:49Z,OPEN,False,7,7,5,https://github.com/kevinAlbs,CDRIVER-4397 Resync fle2-* tests for revert,1,[],https://github.com/mongodb/mongo-c-driver/pull/1027,https://github.com/kevinAlbs,1,https://github.com/mongodb/mongo-c-driver/pull/1027,"Summary

Resync fle2-* tests for revert in DRIVERS-2343.

Background & Motivation
MONGOCRYPT-433 was reverted in libmongocrypt 1.5.0-rc1. This required updating FLE 2 tests.","Summary

Resync fle2-* tests for revert in DRIVERS-2343.

Background & Motivation
MONGOCRYPT-433 was reverted in libmongocrypt 1.5.0-rc1. This required updating FLE 2 tests.",True,{}
